
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/md5sum
        UUID: C613745E-2BAA-B4F4-C209-D2E50B8D8813
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0x9350[ (37712 bytes)
        ; File offset : [0; 37712[ (37712 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0x40 ; '@'
0000000000000019         db  0x2a ; '*'
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0x98 ; '.'
0000000000000029         db  0x08 ; '.'
000000000000002a         db  0x03 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0x50 ; 'P'
00000000000000d1         db  0x93 ; '.'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0x50 ; 'P'
00000000000000d9         db  0x93 ; '.'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0x10 ; '.'
00000000000000f1         db  0x9a ; '.'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0x10 ; '.'
00000000000000f9         db  0x9a ; '.'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0x10 ; '.'                                         ; DATA XREF=quotearg_free+87, rpl_fflush+18, slotvec0
0000000000000101         db  0x9a ; '.'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0x90 ; '.'
0000000000000109         db  0x06 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0x70 ; 'p'
0000000000000111         db  0x08 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0x18 ; '.'
0000000000000129         db  0x9c ; '.'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0x18 ; '.'
0000000000000131         db  0x9c ; '.'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0x18 ; '.'
0000000000000139         db  0x9c ; '.'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0xf0 ; '.'
0000000000000199         db  0x82 ; '.'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0xf0 ; '.'
00000000000001a1         db  0x82 ; '.'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0xf0 ; '.'
00000000000001a9         db  0x82 ; '.'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0xbc ; '.'
00000000000001b1         db  0x02 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0xbc ; '.'
00000000000001b9         db  0x02 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0x10 ; '.'
0000000000000209         db  0x9a ; '.'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0x10 ; '.'
0000000000000211         db  0x9a ; '.'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0x10 ; '.'
0000000000000219         db  0x9a ; '.'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0xf0 ; '.'
0000000000000221         db  0x05 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0xf0 ; '.'
0000000000000229         db  0x05 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0xc6 ; '.'
0000000000000285         db  0x13 ; '.'
0000000000000286         db  0x74 ; 't'
0000000000000287         db  0x5e ; '^'
0000000000000288         db  0x2b ; '+'
0000000000000289         db  0xaa ; '.'
000000000000028a         db  0xb4 ; '.'
000000000000028b         db  0xf4 ; '.'
000000000000028c         db  0xc2 ; '.'
000000000000028d         db  0x09 ; '.'
000000000000028e         db  0xd2 ; '.'
000000000000028f         db  0xe5 ; '.'
0000000000000290         db  0x0b ; '.'
0000000000000291         db  0x8d ; '.'
0000000000000292         db  0x88 ; '.'
0000000000000293         db  0x13 ; '.'
0000000000000294         db  0x1e ; '.'
0000000000000295         db  0x59 ; 'Y'
0000000000000296         db  0x1d ; '.'
0000000000000297         db  0x85 ; '.'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2dc[ (68 bytes)
        ; File offset : [664; 732[ (68 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x3a ; ':'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'
00000000000002a9         db  0x49 ; 'I'
00000000000002aa         db  0x61 ; 'a'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0xa0 ; '.'
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x18 ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x3a ; ':'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x3b ; ';'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x41 ; 'A'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x66 ; 'f'
00000000000002c5         db  0x55 ; 'U'
00000000000002c6         db  0x61 ; 'a'
00000000000002c7         db  0x10 ; '.'
00000000000002c8         db  0x96 ; '.'
00000000000002c9         db  0xa0 ; '.'
00000000000002ca         db  0x89 ; '.'
00000000000002cb         db  0x97 ; '.'
00000000000002cc         db  0xce ; '.'
00000000000002cd         db  0x2c ; ','
00000000000002ce         db  0x63 ; 'c'
00000000000002cf         db  0x72 ; 'r'
00000000000002d0         db  0xe4 ; '.'
00000000000002d1         db  0x62 ; 'b'
00000000000002d2         db  0x41 ; 'A'
00000000000002d3         db  0xf5 ; '.'
00000000000002d4         db  0x39 ; '9'
00000000000002d5         db  0xf2 ; '.'
00000000000002d6         db  0x8b ; '.'
00000000000002d7         db  0x1c ; '.'
00000000000002d8         db  0x33 ; '3'
00000000000002d9         db  0xc4 ; '.'
00000000000002da         db  0xf7 ; '.'
00000000000002db         db  0x12 ; '.'
00000000000002dc         db  0x00 ; '.'
00000000000002dd         db  0x00 ; '.'
00000000000002de         db  0x00 ; '.'
00000000000002df         db  0x00 ; '.'


        ; Section .dynsym
        ; Range: [0x2e0; 0x910[ (1584 bytes)
        ; File offset : [736; 2320[ (1584 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0x59 ; 'Y'
00000000000002f9         db  0x02 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x12 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x8b ; '.'
0000000000000311         db  0x00 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x12 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0xfe ; '.'
0000000000000329         db  0x00 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x12 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0x37 ; '7'
0000000000000341         db  0x00 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x12 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0xbd ; '.'
0000000000000359         db  0x02 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x20 ; ' '
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0x97 ; '.'
0000000000000371         db  0x00 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x12 ; '.'
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0x9f ; '.'
0000000000000389         db  0x01 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x12 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0x01 ; '.'
00000000000003a1         db  0x02 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x12 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0xe8 ; '.'
00000000000003b9         db  0x00 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x12 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0x0b ; '.'
00000000000003d1         db  0x02 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x12 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0x38 ; '8'
00000000000003e9         db  0x01 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x12 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0x07 ; '.'                                         ; DATA XREF=rpl_fcntl+288
0000000000000401         db  0x02 ; '.'                                         ; DATA XREF=rpl_fcntl+272
0000000000000402         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+280
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x12 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+81, rpl_fcntl+123, rpl_fcntl+264
0000000000000407         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+256
0000000000000408         db  0x00 ; '.'
0000000000000409         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+336
000000000000040a         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+350
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0x59 ; 'Y'
0000000000000419         db  0x00 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x12 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0xb5 ; '.'
0000000000000431         db  0x00 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x12 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0xe1 ; '.'
0000000000000449         db  0x00 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x12 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0x69 ; 'i'
0000000000000461         db  0x00 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x12 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x7a ; 'z'
0000000000000479         db  0x01 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x12 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0x29 ; ')'
0000000000000491         db  0x00 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x12 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0xaa ; '.'
00000000000004a9         db  0x01 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x12 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0x3f ; '?'
00000000000004c1         db  0x02 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x12 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x51 ; 'Q'
00000000000004d9         db  0x00 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x12 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0x2b ; '+'
00000000000004f1         db  0x01 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x12 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0xf7 ; '.'
0000000000000509         db  0x00 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x12 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0x39 ; '9'
0000000000000521         db  0x01 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x12 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0xcc ; '.'
0000000000000539         db  0x00 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x12 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0x26 ; '&'
0000000000000551         db  0x02 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x12 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0x0f ; '.'
0000000000000569         db  0x01 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x12 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0x4a ; 'J'
0000000000000581         db  0x02 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x12 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0xda ; '.'
0000000000000599         db  0x00 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x12 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0x8d ; '.'
00000000000005b1         db  0x01 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x12 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0xd9 ; '.'
00000000000005c9         db  0x02 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x20 ; ' '
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0x31 ; '1'
00000000000005e1         db  0x01 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x12 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x86 ; '.'
00000000000005f9         db  0x01 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x12 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x3f ; '?'
0000000000000611         db  0x01 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x12 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0x0b ; '.'
0000000000000629         db  0x00 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x12 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x4e ; 'N'
0000000000000641         db  0x01 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x12 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x68 ; 'h'
0000000000000659         db  0x01 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x12 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x16 ; '.'
0000000000000671         db  0x02 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x12 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0x83 ; '.'
0000000000000689         db  0x00 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x12 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0xcf ; '.'
00000000000006a1         db  0x01 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x12 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x1f ; '.'
00000000000006b9         db  0x00 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x12 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x12 ; '.'
00000000000006d1         db  0x00 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x12 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0xf9 ; '.'
00000000000006e9         db  0x01 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x12 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x63 ; 'c'
0000000000000701         db  0x00 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x12 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x38 ; '8'
0000000000000719         db  0x02 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x12 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x31 ; '1'
0000000000000731         db  0x00 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x12 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0x3f ; '?'
0000000000000749         db  0x00 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x12 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0x79 ; 'y'
0000000000000761         db  0x02 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x12 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0x98 ; '.'
0000000000000779         db  0x00 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x12 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x98 ; '.'
0000000000000791         db  0x01 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x12 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0x16 ; '.'
00000000000007a9         db  0x01 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x12 ; '.'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x00 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0xe8 ; '.'
00000000000007c1         db  0x02 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x20 ; ' '
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x00 ; '.'
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x46 ; 'F'
00000000000007d9         db  0x01 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x12 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x00 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0x7a ; 'z'
00000000000007f1         db  0x00 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x12 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x00 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x00 ; '.'
00000000000007f9         db  0x00 ; '.'
00000000000007fa         db  0x00 ; '.'
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x00 ; '.'
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0xea ; '.'
0000000000000809         db  0x01 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x22 ; '"'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x00 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0x00 ; '.'
0000000000000811         db  0x00 ; '.'
0000000000000812         db  0x00 ; '.'
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x00 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0xd6 ; '.'
0000000000000821         db  0x01 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x12 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x00 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0x00 ; '.'
0000000000000829         db  0x00 ; '.'
000000000000082a         db  0x00 ; '.'
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x00 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x5a ; 'Z'
0000000000000839         db  0x01 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x12 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x00 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0x00 ; '.'
0000000000000841         db  0x00 ; '.'
0000000000000842         db  0x00 ; '.'
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x00 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0x24 ; '$'
0000000000000851         db  0x01 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x11 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x19 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0xa8 ; '.'
0000000000000859         db  0xa0 ; '.'
000000000000085a         db  0x20 ; ' '
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x08 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0x5e ; '^'
0000000000000869         db  0x02 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x11 ; '.'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x19 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0xa0 ; '.'
0000000000000871         db  0xa0 ; '.'
0000000000000872         db  0x20 ; ' '
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x08 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0x91 ; '.'
0000000000000881         db  0x00 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x11 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x19 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0xb0 ; '.'
0000000000000889         db  0xa0 ; '.'
000000000000088a         db  0x20 ; ' '
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x08 ; '.'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x00 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0x9d ; '.'
0000000000000899         db  0x00 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x21 ; '!'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x19 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0xc0 ; '.'
00000000000008a1         db  0xa0 ; '.'
00000000000008a2         db  0x20 ; ' '
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x00 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x08 ; '.'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x00 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x00 ; '.'
00000000000008b0         db  0x69 ; 'i'
00000000000008b1         db  0x02 ; '.'
00000000000008b2         db  0x00 ; '.'
00000000000008b3         db  0x00 ; '.'
00000000000008b4         db  0x11 ; '.'
00000000000008b5         db  0x00 ; '.'
00000000000008b6         db  0x19 ; '.'
00000000000008b7         db  0x00 ; '.'
00000000000008b8         db  0xc0 ; '.'
00000000000008b9         db  0xa0 ; '.'
00000000000008ba         db  0x20 ; ' '
00000000000008bb         db  0x00 ; '.'
00000000000008bc         db  0x00 ; '.'
00000000000008bd         db  0x00 ; '.'
00000000000008be         db  0x00 ; '.'
00000000000008bf         db  0x00 ; '.'
00000000000008c0         db  0x08 ; '.'
00000000000008c1         db  0x00 ; '.'
00000000000008c2         db  0x00 ; '.'
00000000000008c3         db  0x00 ; '.'
00000000000008c4         db  0x00 ; '.'
00000000000008c5         db  0x00 ; '.'
00000000000008c6         db  0x00 ; '.'
00000000000008c7         db  0x00 ; '.'
00000000000008c8         db  0xb1 ; '.'
00000000000008c9         db  0x01 ; '.'
00000000000008ca         db  0x00 ; '.'
00000000000008cb         db  0x00 ; '.'
00000000000008cc         db  0x21 ; '!'
00000000000008cd         db  0x00 ; '.'
00000000000008ce         db  0x19 ; '.'
00000000000008cf         db  0x00 ; '.'
00000000000008d0         db  0xa0 ; '.'
00000000000008d1         db  0xa0 ; '.'
00000000000008d2         db  0x20 ; ' '
00000000000008d3         db  0x00 ; '.'
00000000000008d4         db  0x00 ; '.'
00000000000008d5         db  0x00 ; '.'
00000000000008d6         db  0x00 ; '.'
00000000000008d7         db  0x00 ; '.'
00000000000008d8         db  0x08 ; '.'
00000000000008d9         db  0x00 ; '.'
00000000000008da         db  0x00 ; '.'
00000000000008db         db  0x00 ; '.'
00000000000008dc         db  0x00 ; '.'
00000000000008dd         db  0x00 ; '.'
00000000000008de         db  0x00 ; '.'
00000000000008df         db  0x00 ; '.'
00000000000008e0         db  0x73 ; 's'
00000000000008e1         db  0x01 ; '.'
00000000000008e2         db  0x00 ; '.'
00000000000008e3         db  0x00 ; '.'
00000000000008e4         db  0x11 ; '.'
00000000000008e5         db  0x00 ; '.'
00000000000008e6         db  0x19 ; '.'
00000000000008e7         db  0x00 ; '.'
00000000000008e8         db  0xe0 ; '.'
00000000000008e9         db  0xa0 ; '.'
00000000000008ea         db  0x20 ; ' '
00000000000008eb         db  0x00 ; '.'
00000000000008ec         db  0x00 ; '.'
00000000000008ed         db  0x00 ; '.'
00000000000008ee         db  0x00 ; '.'
00000000000008ef         db  0x00 ; '.'
00000000000008f0         db  0x08 ; '.'
00000000000008f1         db  0x00 ; '.'
00000000000008f2         db  0x00 ; '.'
00000000000008f3         db  0x00 ; '.'
00000000000008f4         db  0x00 ; '.'
00000000000008f5         db  0x00 ; '.'
00000000000008f6         db  0x00 ; '.'
00000000000008f7         db  0x00 ; '.'
00000000000008f8         db  0x4a ; 'J'
00000000000008f9         db  0x00 ; '.'
00000000000008fa         db  0x00 ; '.'
00000000000008fb         db  0x00 ; '.'
00000000000008fc         db  0x11 ; '.'
00000000000008fd         db  0x00 ; '.'
00000000000008fe         db  0x19 ; '.'
00000000000008ff         db  0x00 ; '.'
0000000000000900         db  0xb8 ; '.'
0000000000000901         db  0xa0 ; '.'
0000000000000902         db  0x20 ; ' '
0000000000000903         db  0x00 ; '.'
0000000000000904         db  0x00 ; '.'
0000000000000905         db  0x00 ; '.'
0000000000000906         db  0x00 ; '.'
0000000000000907         db  0x00 ; '.'
0000000000000908         db  0x04 ; '.'
0000000000000909         db  0x00 ; '.'
000000000000090a         db  0x00 ; '.'
000000000000090b         db  0x00 ; '.'
000000000000090c         db  0x00 ; '.'
000000000000090d         db  0x00 ; '.'
000000000000090e         db  0x00 ; '.'
000000000000090f         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0x910; 0xc12[ (770 bytes)
        ; File offset : [2320; 3090[ (770 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

0000000000000910         db  0x00 ; '.'
0000000000000911         db  0x6c ; 'l'
0000000000000912         db  0x69 ; 'i'
0000000000000913         db  0x62 ; 'b'
0000000000000914         db  0x63 ; 'c'
0000000000000915         db  0x2e ; '.'
0000000000000916         db  0x73 ; 's'
0000000000000917         db  0x6f ; 'o'
0000000000000918         db  0x2e ; '.'
0000000000000919         db  0x36 ; '6'
000000000000091a         db  0x00 ; '.'
000000000000091b         db  0x66 ; 'f'
000000000000091c         db  0x66 ; 'f'
000000000000091d         db  0x6c ; 'l'
000000000000091e         db  0x75 ; 'u'
000000000000091f         db  0x73 ; 's'
0000000000000920         db  0x68 ; 'h'
0000000000000921         db  0x00 ; '.'
0000000000000922         db  0x5f ; '_'
0000000000000923         db  0x5f ; '_'
0000000000000924         db  0x70 ; 'p'
0000000000000925         db  0x72 ; 'r'
0000000000000926         db  0x69 ; 'i'
0000000000000927         db  0x6e ; 'n'
0000000000000928         db  0x74 ; 't'
0000000000000929         db  0x66 ; 'f'
000000000000092a         db  0x5f ; '_'
000000000000092b         db  0x63 ; 'c'
000000000000092c         db  0x68 ; 'h'
000000000000092d         db  0x6b ; 'k'
000000000000092e         db  0x00 ; '.'
000000000000092f         db  0x73 ; 's'
0000000000000930         db  0x65 ; 'e'
0000000000000931         db  0x74 ; 't'
0000000000000932         db  0x6c ; 'l'
0000000000000933         db  0x6f ; 'o'
0000000000000934         db  0x63 ; 'c'
0000000000000935         db  0x61 ; 'a'
0000000000000936         db  0x6c ; 'l'
0000000000000937         db  0x65 ; 'e'
0000000000000938         db  0x00 ; '.'
0000000000000939         db  0x6d ; 'm'
000000000000093a         db  0x62 ; 'b'
000000000000093b         db  0x72 ; 'r'
000000000000093c         db  0x74 ; 't'
000000000000093d         db  0x6f ; 'o'
000000000000093e         db  0x77 ; 'w'
000000000000093f         db  0x63 ; 'c'
0000000000000940         db  0x00 ; '.'
0000000000000941         db  0x66 ; 'f'
0000000000000942         db  0x6f ; 'o'
0000000000000943         db  0x70 ; 'p'
0000000000000944         db  0x65 ; 'e'
0000000000000945         db  0x6e ; 'n'
0000000000000946         db  0x00 ; '.'
0000000000000947         db  0x73 ; 's'
0000000000000948         db  0x74 ; 't'
0000000000000949         db  0x72 ; 'r'
000000000000094a         db  0x6e ; 'n'
000000000000094b         db  0x63 ; 'c'
000000000000094c         db  0x6d ; 'm'
000000000000094d         db  0x70 ; 'p'
000000000000094e         db  0x00 ; '.'
000000000000094f         db  0x64 ; 'd'
0000000000000950         db  0x63 ; 'c'
0000000000000951         db  0x6e ; 'n'
0000000000000952         db  0x67 ; 'g'
0000000000000953         db  0x65 ; 'e'
0000000000000954         db  0x74 ; 't'
0000000000000955         db  0x74 ; 't'
0000000000000956         db  0x65 ; 'e'
0000000000000957         db  0x78 ; 'x'
0000000000000958         db  0x74 ; 't'
0000000000000959         db  0x00 ; '.'
000000000000095a         db  0x6f ; 'o'
000000000000095b         db  0x70 ; 'p'
000000000000095c         db  0x74 ; 't'
000000000000095d         db  0x69 ; 'i'
000000000000095e         db  0x6e ; 'n'
000000000000095f         db  0x64 ; 'd'
0000000000000960         db  0x00 ; '.'
0000000000000961         db  0x73 ; 's'
0000000000000962         db  0x74 ; 't'
0000000000000963         db  0x72 ; 'r'
0000000000000964         db  0x72 ; 'r'
0000000000000965         db  0x63 ; 'c'
0000000000000966         db  0x68 ; 'h'
0000000000000967         db  0x72 ; 'r'
0000000000000968         db  0x00 ; '.'
0000000000000969         db  0x64 ; 'd'
000000000000096a         db  0x63 ; 'c'
000000000000096b         db  0x67 ; 'g'
000000000000096c         db  0x65 ; 'e'
000000000000096d         db  0x74 ; 't'
000000000000096e         db  0x74 ; 't'
000000000000096f         db  0x65 ; 'e'
0000000000000970         db  0x78 ; 'x'
0000000000000971         db  0x74 ; 't'
0000000000000972         db  0x00 ; '.'
0000000000000973         db  0x65 ; 'e'
0000000000000974         db  0x72 ; 'r'
0000000000000975         db  0x72 ; 'r'
0000000000000976         db  0x6f ; 'o'
0000000000000977         db  0x72 ; 'r'
0000000000000978         db  0x00 ; '.'
0000000000000979         db  0x5f ; '_'
000000000000097a         db  0x5f ; '_'
000000000000097b         db  0x73 ; 's'
000000000000097c         db  0x74 ; 't'
000000000000097d         db  0x61 ; 'a'
000000000000097e         db  0x63 ; 'c'
000000000000097f         db  0x6b ; 'k'
0000000000000980         db  0x5f ; '_'
0000000000000981         db  0x63 ; 'c'
0000000000000982         db  0x68 ; 'h'
0000000000000983         db  0x6b ; 'k'
0000000000000984         db  0x5f ; '_'
0000000000000985         db  0x66 ; 'f'
0000000000000986         db  0x61 ; 'a'
0000000000000987         db  0x69 ; 'i'
0000000000000988         db  0x6c ; 'l'
0000000000000989         db  0x00 ; '.'
000000000000098a         db  0x69 ; 'i'
000000000000098b         db  0x73 ; 's'
000000000000098c         db  0x77 ; 'w'
000000000000098d         db  0x70 ; 'p'
000000000000098e         db  0x72 ; 'r'
000000000000098f         db  0x69 ; 'i'
0000000000000990         db  0x6e ; 'n'
0000000000000991         db  0x74 ; 't'
0000000000000992         db  0x00 ; '.'
0000000000000993         db  0x72 ; 'r'
0000000000000994         db  0x65 ; 'e'
0000000000000995         db  0x61 ; 'a'
0000000000000996         db  0x6c ; 'l'
0000000000000997         db  0x6c ; 'l'
0000000000000998         db  0x6f ; 'o'
0000000000000999         db  0x63 ; 'c'
000000000000099a         db  0x00 ; '.'
000000000000099b         db  0x61 ; 'a'
000000000000099c         db  0x62 ; 'b'
000000000000099d         db  0x6f ; 'o'
000000000000099e         db  0x72 ; 'r'
000000000000099f         db  0x74 ; 't'
00000000000009a0         db  0x00 ; '.'
00000000000009a1         db  0x73 ; 's'
00000000000009a2         db  0x74 ; 't'
00000000000009a3         db  0x64 ; 'd'
00000000000009a4         db  0x69 ; 'i'
00000000000009a5         db  0x6e ; 'n'
00000000000009a6         db  0x00 ; '.'
00000000000009a7         db  0x5f ; '_'
00000000000009a8         db  0x65 ; 'e'
00000000000009a9         db  0x78 ; 'x'
00000000000009aa         db  0x69 ; 'i'
00000000000009ab         db  0x74 ; 't'
00000000000009ac         db  0x00 ; '.'
00000000000009ad         db  0x70 ; 'p'
00000000000009ae         db  0x72 ; 'r'
00000000000009af         db  0x6f ; 'o'
00000000000009b0         db  0x67 ; 'g'
00000000000009b1         db  0x72 ; 'r'
00000000000009b2         db  0x61 ; 'a'
00000000000009b3         db  0x6d ; 'm'
00000000000009b4         db  0x5f ; '_'
00000000000009b5         db  0x69 ; 'i'
00000000000009b6         db  0x6e ; 'n'
00000000000009b7         db  0x76 ; 'v'
00000000000009b8         db  0x6f ; 'o'
00000000000009b9         db  0x63 ; 'c'
00000000000009ba         db  0x61 ; 'a'
00000000000009bb         db  0x74 ; 't'
00000000000009bc         db  0x69 ; 'i'
00000000000009bd         db  0x6f ; 'o'
00000000000009be         db  0x6e ; 'n'
00000000000009bf         db  0x5f ; '_'
00000000000009c0         db  0x6e ; 'n'
00000000000009c1         db  0x61 ; 'a'
00000000000009c2         db  0x6d ; 'm'
00000000000009c3         db  0x65 ; 'e'
00000000000009c4         db  0x00 ; '.'
00000000000009c5         db  0x5f ; '_'
00000000000009c6         db  0x5f ; '_'
00000000000009c7         db  0x63 ; 'c'
00000000000009c8         db  0x74 ; 't'
00000000000009c9         db  0x79 ; 'y'
00000000000009ca         db  0x70 ; 'p'
00000000000009cb         db  0x65 ; 'e'
00000000000009cc         db  0x5f ; '_'
00000000000009cd         db  0x67 ; 'g'
00000000000009ce         db  0x65 ; 'e'
00000000000009cf         db  0x74 ; 't'
00000000000009d0         db  0x5f ; '_'
00000000000009d1         db  0x6d ; 'm'
00000000000009d2         db  0x62 ; 'b'
00000000000009d3         db  0x5f ; '_'
00000000000009d4         db  0x63 ; 'c'
00000000000009d5         db  0x75 ; 'u'
00000000000009d6         db  0x72 ; 'r'
00000000000009d7         db  0x5f ; '_'
00000000000009d8         db  0x6d ; 'm'
00000000000009d9         db  0x61 ; 'a'
00000000000009da         db  0x78 ; 'x'
00000000000009db         db  0x00 ; '.'
00000000000009dc         db  0x70 ; 'p'
00000000000009dd         db  0x6f ; 'o'
00000000000009de         db  0x73 ; 's'
00000000000009df         db  0x69 ; 'i'
00000000000009e0         db  0x78 ; 'x'
00000000000009e1         db  0x5f ; '_'
00000000000009e2         db  0x66 ; 'f'
00000000000009e3         db  0x61 ; 'a'
00000000000009e4         db  0x64 ; 'd'
00000000000009e5         db  0x76 ; 'v'
00000000000009e6         db  0x69 ; 'i'
00000000000009e7         db  0x73 ; 's'
00000000000009e8         db  0x65 ; 'e'
00000000000009e9         db  0x00 ; '.'
00000000000009ea         db  0x63 ; 'c'
00000000000009eb         db  0x61 ; 'a'
00000000000009ec         db  0x6c ; 'l'
00000000000009ed         db  0x6c ; 'l'
00000000000009ee         db  0x6f ; 'o'
00000000000009ef         db  0x63 ; 'c'
00000000000009f0         db  0x00 ; '.'
00000000000009f1         db  0x73 ; 's'
00000000000009f2         db  0x74 ; 't'
00000000000009f3         db  0x72 ; 'r'
00000000000009f4         db  0x6c ; 'l'
00000000000009f5         db  0x65 ; 'e'
00000000000009f6         db  0x6e ; 'n'
00000000000009f7         db  0x00 ; '.'
00000000000009f8         db  0x66 ; 'f'
00000000000009f9         db  0x72 ; 'r'
00000000000009fa         db  0x65 ; 'e'
00000000000009fb         db  0x61 ; 'a'
00000000000009fc         db  0x64 ; 'd'
00000000000009fd         db  0x5f ; '_'
00000000000009fe         db  0x75 ; 'u'
00000000000009ff         db  0x6e ; 'n'
                     aLocked:
0000000000000a00         db         "locked", 0
0000000000000a07         db  0x6d ; 'm'
0000000000000a08         db  0x65 ; 'e'
0000000000000a09         db  0x6d ; 'm'
0000000000000a0a         db  0x73 ; 's'
0000000000000a0b         db  0x65 ; 'e'
0000000000000a0c         db  0x74 ; 't'
0000000000000a0d         db  0x00 ; '.'
0000000000000a0e         db  0x5f ; '_'
0000000000000a0f         db  0x5f ; '_'
0000000000000a10         db  0x65 ; 'e'
0000000000000a11         db  0x72 ; 'r'
0000000000000a12         db  0x72 ; 'r'
0000000000000a13         db  0x6e ; 'n'
0000000000000a14         db  0x6f ; 'o'
0000000000000a15         db  0x5f ; '_'
0000000000000a16         db  0x6c ; 'l'
0000000000000a17         db  0x6f ; 'o'
0000000000000a18         db  0x63 ; 'c'
0000000000000a19         db  0x61 ; 'a'
0000000000000a1a         db  0x74 ; 't'
0000000000000a1b         db  0x69 ; 'i'
0000000000000a1c         db  0x6f ; 'o'
0000000000000a1d         db  0x6e ; 'n'
0000000000000a1e         db  0x00 ; '.'
0000000000000a1f         db  0x6d ; 'm'
0000000000000a20         db  0x65 ; 'e'
0000000000000a21         db  0x6d ; 'm'
0000000000000a22         db  0x63 ; 'c'
0000000000000a23         db  0x6d ; 'm'
0000000000000a24         db  0x70 ; 'p'
0000000000000a25         db  0x00 ; '.'
0000000000000a26         db  0x5f ; '_'
0000000000000a27         db  0x5f ; '_'
0000000000000a28         db  0x66 ; 'f'
0000000000000a29         db  0x70 ; 'p'
0000000000000a2a         db  0x72 ; 'r'
0000000000000a2b         db  0x69 ; 'i'
0000000000000a2c         db  0x6e ; 'n'
0000000000000a2d         db  0x74 ; 't'
0000000000000a2e         db  0x66 ; 'f'
0000000000000a2f         db  0x5f ; '_'
0000000000000a30         db  0x63 ; 'c'
0000000000000a31         db  0x68 ; 'h'
0000000000000a32         db  0x6b ; 'k'
0000000000000a33         db  0x00 ; '.'
0000000000000a34         db  0x73 ; 's'
0000000000000a35         db  0x74 ; 't'
0000000000000a36         db  0x64 ; 'd'
0000000000000a37         db  0x6f ; 'o'
0000000000000a38         db  0x75 ; 'u'
0000000000000a39         db  0x74 ; 't'
0000000000000a3a         db  0x00 ; '.'
0000000000000a3b         db  0x6c ; 'l'
0000000000000a3c         db  0x73 ; 's'
0000000000000a3d         db  0x65 ; 'e'
0000000000000a3e         db  0x65 ; 'e'
0000000000000a3f         db  0x6b ; 'k'
0000000000000a40         db  0x00 ; '.'
0000000000000a41         db  0x6d ; 'm'
0000000000000a42         db  0x65 ; 'e'
0000000000000a43         db  0x6d ; 'm'
0000000000000a44         db  0x63 ; 'c'
0000000000000a45         db  0x70 ; 'p'
0000000000000a46         db  0x79 ; 'y'
0000000000000a47         db  0x00 ; '.'
0000000000000a48         db  0x66 ; 'f'
0000000000000a49         db  0x63 ; 'c'
0000000000000a4a         db  0x6c ; 'l'
0000000000000a4b         db  0x6f ; 'o'
0000000000000a4c         db  0x73 ; 's'
0000000000000a4d         db  0x65 ; 'e'
0000000000000a4e         db  0x00 ; '.'
0000000000000a4f         db  0x6d ; 'm'
0000000000000a50         db  0x61 ; 'a'
0000000000000a51         db  0x6c ; 'l'
0000000000000a52         db  0x6c ; 'l'
0000000000000a53         db  0x6f ; 'o'
0000000000000a54         db  0x63 ; 'c'
0000000000000a55         db  0x00 ; '.'
0000000000000a56         db  0x6d ; 'm'
0000000000000a57         db  0x62 ; 'b'
0000000000000a58         db  0x73 ; 's'
0000000000000a59         db  0x69 ; 'i'
0000000000000a5a         db  0x6e ; 'n'
0000000000000a5b         db  0x69 ; 'i'
0000000000000a5c         db  0x74 ; 't'
0000000000000a5d         db  0x00 ; '.'
0000000000000a5e         db  0x6e ; 'n'
0000000000000a5f         db  0x6c ; 'l'
0000000000000a60         db  0x5f ; '_'
0000000000000a61         db  0x6c ; 'l'
0000000000000a62         db  0x61 ; 'a'
0000000000000a63         db  0x6e ; 'n'
0000000000000a64         db  0x67 ; 'g'
0000000000000a65         db  0x69 ; 'i'
0000000000000a66         db  0x6e ; 'n'
0000000000000a67         db  0x66 ; 'f'
0000000000000a68         db  0x6f ; 'o'
0000000000000a69         db  0x00 ; '.'
0000000000000a6a         db  0x5f ; '_'
0000000000000a6b         db  0x5f ; '_'
0000000000000a6c         db  0x63 ; 'c'
0000000000000a6d         db  0x74 ; 't'
0000000000000a6e         db  0x79 ; 'y'
0000000000000a6f         db  0x70 ; 'p'
0000000000000a70         db  0x65 ; 'e'
0000000000000a71         db  0x5f ; '_'
0000000000000a72         db  0x62 ; 'b'
0000000000000a73         db  0x5f ; '_'
0000000000000a74         db  0x6c ; 'l'
0000000000000a75         db  0x6f ; 'o'
0000000000000a76         db  0x63 ; 'c'
0000000000000a77         db  0x00 ; '.'
0000000000000a78         db  0x5f ; '_'
0000000000000a79         db  0x5f ; '_'
0000000000000a7a         db  0x66 ; 'f'
0000000000000a7b         db  0x72 ; 'r'
0000000000000a7c         db  0x65 ; 'e'
0000000000000a7d         db  0x61 ; 'a'
0000000000000a7e         db  0x64 ; 'd'
0000000000000a7f         db  0x69 ; 'i'
0000000000000a80         db  0x6e ; 'n'
0000000000000a81         db  0x67 ; 'g'
0000000000000a82         db  0x00 ; '.'
0000000000000a83         db  0x73 ; 's'
0000000000000a84         db  0x74 ; 't'
0000000000000a85         db  0x64 ; 'd'
0000000000000a86         db  0x65 ; 'e'
0000000000000a87         db  0x72 ; 'r'
0000000000000a88         db  0x72 ; 'r'
0000000000000a89         db  0x00 ; '.'
0000000000000a8a         db  0x67 ; 'g'
0000000000000a8b         db  0x65 ; 'e'
0000000000000a8c         db  0x74 ; 't'
0000000000000a8d         db  0x6f ; 'o'
0000000000000a8e         db  0x70 ; 'p'
0000000000000a8f         db  0x74 ; 't'
0000000000000a90         db  0x5f ; '_'
0000000000000a91         db  0x6c ; 'l'
0000000000000a92         db  0x6f ; 'o'
0000000000000a93         db  0x6e ; 'n'
0000000000000a94         db  0x67 ; 'g'
0000000000000a95         db  0x00 ; '.'
0000000000000a96         db  0x66 ; 'f'
0000000000000a97         db  0x69 ; 'i'
0000000000000a98         db  0x6c ; 'l'
0000000000000a99         db  0x65 ; 'e'
0000000000000a9a         db  0x6e ; 'n'
0000000000000a9b         db  0x6f ; 'o'
0000000000000a9c         db  0x00 ; '.'
0000000000000a9d         db  0x5f ; '_'
0000000000000a9e         db  0x5f ; '_'
0000000000000a9f         db  0x67 ; 'g'
0000000000000aa0         db  0x65 ; 'e'
0000000000000aa1         db  0x74 ; 't'
0000000000000aa2         db  0x64 ; 'd'
0000000000000aa3         db  0x65 ; 'e'
0000000000000aa4         db  0x6c ; 'l'
0000000000000aa5         db  0x69 ; 'i'
0000000000000aa6         db  0x6d ; 'm'
0000000000000aa7         db  0x00 ; '.'
0000000000000aa8         db  0x66 ; 'f'
0000000000000aa9         db  0x77 ; 'w'
0000000000000aaa         db  0x72 ; 'r'
0000000000000aab         db  0x69 ; 'i'
0000000000000aac         db  0x74 ; 't'
0000000000000aad         db  0x65 ; 'e'
0000000000000aae         db  0x00 ; '.'
0000000000000aaf         db  0x5f ; '_'
0000000000000ab0         db  0x5f ; '_'
0000000000000ab1         db  0x66 ; 'f'
0000000000000ab2         db  0x70 ; 'p'
0000000000000ab3         db  0x65 ; 'e'
0000000000000ab4         db  0x6e ; 'n'
0000000000000ab5         db  0x64 ; 'd'
0000000000000ab6         db  0x69 ; 'i'
0000000000000ab7         db  0x6e ; 'n'
0000000000000ab8         db  0x67 ; 'g'
0000000000000ab9         db  0x00 ; '.'
0000000000000aba         db  0x73 ; 's'
0000000000000abb         db  0x74 ; 't'
0000000000000abc         db  0x72 ; 'r'
0000000000000abd         db  0x63 ; 'c'
0000000000000abe         db  0x68 ; 'h'
0000000000000abf         db  0x72 ; 'r'
0000000000000ac0         db  0x00 ; '.'
0000000000000ac1         db  0x70 ; 'p'
0000000000000ac2         db  0x72 ; 'r'
0000000000000ac3         db  0x6f ; 'o'
0000000000000ac4         db  0x67 ; 'g'
0000000000000ac5         db  0x72 ; 'r'
0000000000000ac6         db  0x61 ; 'a'
0000000000000ac7         db  0x6d ; 'm'
0000000000000ac8         db  0x5f ; '_'
0000000000000ac9         db  0x69 ; 'i'
0000000000000aca         db  0x6e ; 'n'
0000000000000acb         db  0x76 ; 'v'
0000000000000acc         db  0x6f ; 'o'
0000000000000acd         db  0x63 ; 'c'
0000000000000ace         db  0x61 ; 'a'
0000000000000acf         db  0x74 ; 't'
0000000000000ad0         db  0x69 ; 'i'
0000000000000ad1         db  0x6f ; 'o'
0000000000000ad2         db  0x6e ; 'n'
0000000000000ad3         db  0x5f ; '_'
0000000000000ad4         db  0x73 ; 's'
0000000000000ad5         db  0x68 ; 'h'
0000000000000ad6         db  0x6f ; 'o'
0000000000000ad7         db  0x72 ; 'r'
0000000000000ad8         db  0x74 ; 't'
0000000000000ad9         db  0x5f ; '_'
0000000000000ada         db  0x6e ; 'n'
0000000000000adb         db  0x61 ; 'a'
0000000000000adc         db  0x6d ; 'm'
0000000000000add         db  0x65 ; 'e'
0000000000000ade         db  0x00 ; '.'
0000000000000adf         db  0x66 ; 'f'
0000000000000ae0         db  0x64 ; 'd'
0000000000000ae1         db  0x6f ; 'o'
0000000000000ae2         db  0x70 ; 'p'
0000000000000ae3         db  0x65 ; 'e'
0000000000000ae4         db  0x6e ; 'n'
0000000000000ae5         db  0x00 ; '.'
0000000000000ae6         db  0x5f ; '_'
0000000000000ae7         db  0x5f ; '_'
0000000000000ae8         db  0x63 ; 'c'
0000000000000ae9         db  0x74 ; 't'
0000000000000aea         db  0x79 ; 'y'
0000000000000aeb         db  0x70 ; 'p'
0000000000000aec         db  0x65 ; 'e'
0000000000000aed         db  0x5f ; '_'
0000000000000aee         db  0x74 ; 't'
0000000000000aef         db  0x6f ; 'o'
0000000000000af0         db  0x6c ; 'l'
0000000000000af1         db  0x6f ; 'o'
0000000000000af2         db  0x77 ; 'w'
0000000000000af3         db  0x65 ; 'e'
0000000000000af4         db  0x72 ; 'r'
0000000000000af5         db  0x5f ; '_'
0000000000000af6         db  0x6c ; 'l'
0000000000000af7         db  0x6f ; 'o'
0000000000000af8         db  0x63 ; 'c'
0000000000000af9         db  0x00 ; '.'
0000000000000afa         db  0x5f ; '_'
0000000000000afb         db  0x5f ; '_'
0000000000000afc         db  0x63 ; 'c'
0000000000000afd         db  0x78 ; 'x'
0000000000000afe         db  0x61 ; 'a'
0000000000000aff         db  0x5f ; '_'
                     aFinalize:
0000000000000b00         db         "finalize", 0
0000000000000b09         db  0x73 ; 's'
0000000000000b0a         db  0x65 ; 'e'
0000000000000b0b         db  0x74 ; 't'
0000000000000b0c         db  0x76 ; 'v'
0000000000000b0d         db  0x62 ; 'b'
0000000000000b0e         db  0x75 ; 'u'
0000000000000b0f         db  0x66 ; 'f'
0000000000000b10         db  0x00 ; '.'
0000000000000b11         db  0x66 ; 'f'
0000000000000b12         db  0x63 ; 'c'
0000000000000b13         db  0x6e ; 'n'
0000000000000b14         db  0x74 ; 't'
0000000000000b15         db  0x6c ; 'l'
0000000000000b16         db  0x00 ; '.'
0000000000000b17         db  0x62 ; 'b'
0000000000000b18         db  0x69 ; 'i'
0000000000000b19         db  0x6e ; 'n'
0000000000000b1a         db  0x64 ; 'd'
0000000000000b1b         db  0x74 ; 't'
0000000000000b1c         db  0x65 ; 'e'
0000000000000b1d         db  0x78 ; 'x'
0000000000000b1e         db  0x74 ; 't'
0000000000000b1f         db  0x64 ; 'd'
0000000000000b20         db  0x6f ; 'o'
0000000000000b21         db  0x6d ; 'm'
0000000000000b22         db  0x61 ; 'a'
0000000000000b23         db  0x69 ; 'i'
0000000000000b24         db  0x6e ; 'n'
0000000000000b25         db  0x00 ; '.'
0000000000000b26         db  0x66 ; 'f'
0000000000000b27         db  0x77 ; 'w'
0000000000000b28         db  0x72 ; 'r'
0000000000000b29         db  0x69 ; 'i'
0000000000000b2a         db  0x74 ; 't'
0000000000000b2b         db  0x65 ; 'e'
0000000000000b2c         db  0x5f ; '_'
0000000000000b2d         db  0x75 ; 'u'
0000000000000b2e         db  0x6e ; 'n'
0000000000000b2f         db  0x6c ; 'l'
0000000000000b30         db  0x6f ; 'o'
0000000000000b31         db  0x63 ; 'c'
0000000000000b32         db  0x6b ; 'k'
0000000000000b33         db  0x65 ; 'e'
0000000000000b34         db  0x64 ; 'd'
0000000000000b35         db  0x00 ; '.'
0000000000000b36         db  0x5f ; '_'
0000000000000b37         db  0x5f ; '_'
0000000000000b38         db  0x6c ; 'l'
0000000000000b39         db  0x69 ; 'i'
0000000000000b3a         db  0x62 ; 'b'
0000000000000b3b         db  0x63 ; 'c'
0000000000000b3c         db  0x5f ; '_'
0000000000000b3d         db  0x73 ; 's'
0000000000000b3e         db  0x74 ; 't'
0000000000000b3f         db  0x61 ; 'a'
0000000000000b40         db  0x72 ; 'r'
                     aTmain:
0000000000000b41         db         "t_main", 0
0000000000000b48         db  0x66 ; 'f'
0000000000000b49         db  0x73 ; 's'
0000000000000b4a         db  0x65 ; 'e'
0000000000000b4b         db  0x65 ; 'e'
0000000000000b4c         db  0x6b ; 'k'
0000000000000b4d         db  0x6f ; 'o'
0000000000000b4e         db  0x00 ; '.'
0000000000000b4f         db  0x5f ; '_'
0000000000000b50         db  0x5f ; '_'
0000000000000b51         db  0x6f ; 'o'
0000000000000b52         db  0x76 ; 'v'
0000000000000b53         db  0x65 ; 'e'
0000000000000b54         db  0x72 ; 'r'
0000000000000b55         db  0x66 ; 'f'
0000000000000b56         db  0x6c ; 'l'
0000000000000b57         db  0x6f ; 'o'
0000000000000b58         db  0x77 ; 'w'
0000000000000b59         db  0x00 ; '.'
0000000000000b5a         db  0x66 ; 'f'
0000000000000b5b         db  0x70 ; 'p'
0000000000000b5c         db  0x75 ; 'u'
0000000000000b5d         db  0x74 ; 't'
0000000000000b5e         db  0x73 ; 's'
0000000000000b5f         db  0x5f ; '_'
0000000000000b60         db  0x75 ; 'u'
0000000000000b61         db  0x6e ; 'n'
0000000000000b62         db  0x6c ; 'l'
0000000000000b63         db  0x6f ; 'o'
0000000000000b64         db  0x63 ; 'c'
0000000000000b65         db  0x6b ; 'k'
0000000000000b66         db  0x65 ; 'e'
0000000000000b67         db  0x64 ; 'd'
0000000000000b68         db  0x00 ; '.'
0000000000000b69         db  0x66 ; 'f'
0000000000000b6a         db  0x72 ; 'r'
0000000000000b6b         db  0x65 ; 'e'
0000000000000b6c         db  0x65 ; 'e'
0000000000000b6d         db  0x00 ; '.'
0000000000000b6e         db  0x5f ; '_'
0000000000000b6f         db  0x5f ; '_'
0000000000000b70         db  0x70 ; 'p'
0000000000000b71         db  0x72 ; 'r'
0000000000000b72         db  0x6f ; 'o'
0000000000000b73         db  0x67 ; 'g'
0000000000000b74         db  0x6e ; 'n'
0000000000000b75         db  0x61 ; 'a'
0000000000000b76         db  0x6d ; 'm'
0000000000000b77         db  0x65 ; 'e'
0000000000000b78         db  0x00 ; '.'
0000000000000b79         db  0x5f ; '_'
0000000000000b7a         db  0x5f ; '_'
0000000000000b7b         db  0x70 ; 'p'
0000000000000b7c         db  0x72 ; 'r'
0000000000000b7d         db  0x6f ; 'o'
0000000000000b7e         db  0x67 ; 'g'
0000000000000b7f         db  0x6e ; 'n'
0000000000000b80         db  0x61 ; 'a'
0000000000000b81         db  0x6d ; 'm'
0000000000000b82         db  0x65 ; 'e'
0000000000000b83         db  0x5f ; '_'
0000000000000b84         db  0x66 ; 'f'
0000000000000b85         db  0x75 ; 'u'
0000000000000b86         db  0x6c ; 'l'
0000000000000b87         db  0x6c ; 'l'
0000000000000b88         db  0x00 ; '.'
0000000000000b89         db  0x5f ; '_'
0000000000000b8a         db  0x5f ; '_'
0000000000000b8b         db  0x63 ; 'c'
0000000000000b8c         db  0x78 ; 'x'
0000000000000b8d         db  0x61 ; 'a'
0000000000000b8e         db  0x5f ; '_'
0000000000000b8f         db  0x61 ; 'a'
0000000000000b90         db  0x74 ; 't'
0000000000000b91         db  0x65 ; 'e'
0000000000000b92         db  0x78 ; 'x'
0000000000000b93         db  0x69 ; 'i'
0000000000000b94         db  0x74 ; 't'
0000000000000b95         db  0x00 ; '.'
0000000000000b96         db  0x47 ; 'G'
0000000000000b97         db  0x4c ; 'L'
0000000000000b98         db  0x49 ; 'I'
0000000000000b99         db  0x42 ; 'B'
0000000000000b9a         db  0x43 ; 'C'
0000000000000b9b         db  0x5f ; '_'
0000000000000b9c         db  0x32 ; '2'
0000000000000b9d         db  0x2e ; '.'
0000000000000b9e         db  0x33 ; '3'
0000000000000b9f         db  0x00 ; '.'
0000000000000ba0         db  0x47 ; 'G'
0000000000000ba1         db  0x4c ; 'L'
0000000000000ba2         db  0x49 ; 'I'
0000000000000ba3         db  0x42 ; 'B'
0000000000000ba4         db  0x43 ; 'C'
0000000000000ba5         db  0x5f ; '_'
0000000000000ba6         db  0x32 ; '2'
0000000000000ba7         db  0x2e ; '.'
0000000000000ba8         db  0x33 ; '3'
0000000000000ba9         db  0x2e ; '.'
0000000000000baa         db  0x34 ; '4'
0000000000000bab         db  0x00 ; '.'
0000000000000bac         db  0x47 ; 'G'
0000000000000bad         db  0x4c ; 'L'
0000000000000bae         db  0x49 ; 'I'
0000000000000baf         db  0x42 ; 'B'
0000000000000bb0         db  0x43 ; 'C'
0000000000000bb1         db  0x5f ; '_'
0000000000000bb2         db  0x32 ; '2'
0000000000000bb3         db  0x2e ; '.'
0000000000000bb4         db  0x31 ; '1'
0000000000000bb5         db  0x34 ; '4'
0000000000000bb6         db  0x00 ; '.'
0000000000000bb7         db  0x47 ; 'G'
0000000000000bb8         db  0x4c ; 'L'
0000000000000bb9         db  0x49 ; 'I'
0000000000000bba         db  0x42 ; 'B'
0000000000000bbb         db  0x43 ; 'C'
0000000000000bbc         db  0x5f ; '_'
0000000000000bbd         db  0x32 ; '2'
0000000000000bbe         db  0x2e ; '.'
0000000000000bbf         db  0x34 ; '4'
0000000000000bc0         db  0x00 ; '.'
0000000000000bc1         db  0x47 ; 'G'
0000000000000bc2         db  0x4c ; 'L'
0000000000000bc3         db  0x49 ; 'I'
0000000000000bc4         db  0x42 ; 'B'
0000000000000bc5         db  0x43 ; 'C'
0000000000000bc6         db  0x5f ; '_'
0000000000000bc7         db  0x32 ; '2'
0000000000000bc8         db  0x2e ; '.'
0000000000000bc9         db  0x32 ; '2'
0000000000000bca         db  0x2e ; '.'
0000000000000bcb         db  0x35 ; '5'
0000000000000bcc         db  0x00 ; '.'
0000000000000bcd         db  0x5f ; '_'
0000000000000bce         db  0x49 ; 'I'
0000000000000bcf         db  0x54 ; 'T'
0000000000000bd0         db  0x4d ; 'M'
0000000000000bd1         db  0x5f ; '_'
0000000000000bd2         db  0x64 ; 'd'
0000000000000bd3         db  0x65 ; 'e'
0000000000000bd4         db  0x72 ; 'r'
0000000000000bd5         db  0x65 ; 'e'
0000000000000bd6         db  0x67 ; 'g'
0000000000000bd7         db  0x69 ; 'i'
0000000000000bd8         db  0x73 ; 's'
0000000000000bd9         db  0x74 ; 't'
0000000000000bda         db  0x65 ; 'e'
0000000000000bdb         db  0x72 ; 'r'
0000000000000bdc         db  0x54 ; 'T'
0000000000000bdd         db  0x4d ; 'M'
0000000000000bde         db  0x43 ; 'C'
0000000000000bdf         db  0x6c ; 'l'
0000000000000be0         db  0x6f ; 'o'
0000000000000be1         db  0x6e ; 'n'
0000000000000be2         db  0x65 ; 'e'
0000000000000be3         db  0x54 ; 'T'
0000000000000be4         db  0x61 ; 'a'
0000000000000be5         db  0x62 ; 'b'
0000000000000be6         db  0x6c ; 'l'
0000000000000be7         db  0x65 ; 'e'
0000000000000be8         db  0x00 ; '.'
0000000000000be9         db  0x5f ; '_'
0000000000000bea         db  0x5f ; '_'
0000000000000beb         db  0x67 ; 'g'
0000000000000bec         db  0x6d ; 'm'
0000000000000bed         db  0x6f ; 'o'
0000000000000bee         db  0x6e ; 'n'
0000000000000bef         db  0x5f ; '_'
0000000000000bf0         db  0x73 ; 's'
0000000000000bf1         db  0x74 ; 't'
0000000000000bf2         db  0x61 ; 'a'
0000000000000bf3         db  0x72 ; 'r'
0000000000000bf4         db  0x74 ; 't'
0000000000000bf5         db  0x5f ; '_'
0000000000000bf6         db  0x5f ; '_'
0000000000000bf7         db  0x00 ; '.'
0000000000000bf8         db  0x5f ; '_'
0000000000000bf9         db  0x49 ; 'I'
0000000000000bfa         db  0x54 ; 'T'
0000000000000bfb         db  0x4d ; 'M'
0000000000000bfc         db  0x5f ; '_'
0000000000000bfd         db  0x72 ; 'r'
0000000000000bfe         db  0x65 ; 'e'
0000000000000bff         db  0x67 ; 'g'
                     aIstertmcloneta:
0000000000000c00         db         "isterTMCloneTable", 0


        ; Section .gnu.version
        ; Range: [0xc12; 0xc96[ (132 bytes)
        ; File offset : [3090; 3222[ (132 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000c12         db  0x00 ; '.'
0000000000000c13         db  0x00 ; '.'
0000000000000c14         db  0x02 ; '.'
0000000000000c15         db  0x00 ; '.'
0000000000000c16         db  0x02 ; '.'
0000000000000c17         db  0x00 ; '.'
0000000000000c18         db  0x02 ; '.'
0000000000000c19         db  0x00 ; '.'
0000000000000c1a         db  0x02 ; '.'
0000000000000c1b         db  0x00 ; '.'
0000000000000c1c         db  0x00 ; '.'
0000000000000c1d         db  0x00 ; '.'
0000000000000c1e         db  0x02 ; '.'
0000000000000c1f         db  0x00 ; '.'
0000000000000c20         db  0x02 ; '.'
0000000000000c21         db  0x00 ; '.'
0000000000000c22         db  0x02 ; '.'
0000000000000c23         db  0x00 ; '.'
0000000000000c24         db  0x02 ; '.'
0000000000000c25         db  0x00 ; '.'
0000000000000c26         db  0x02 ; '.'
0000000000000c27         db  0x00 ; '.'
0000000000000c28         db  0x02 ; '.'
0000000000000c29         db  0x00 ; '.'
0000000000000c2a         db  0x02 ; '.'
0000000000000c2b         db  0x00 ; '.'
0000000000000c2c         db  0x02 ; '.'
0000000000000c2d         db  0x00 ; '.'
0000000000000c2e         db  0x02 ; '.'
0000000000000c2f         db  0x00 ; '.'
0000000000000c30         db  0x02 ; '.'
0000000000000c31         db  0x00 ; '.'
0000000000000c32         db  0x03 ; '.'
0000000000000c33         db  0x00 ; '.'
0000000000000c34         db  0x02 ; '.'
0000000000000c35         db  0x00 ; '.'
0000000000000c36         db  0x02 ; '.'
0000000000000c37         db  0x00 ; '.'
0000000000000c38         db  0x02 ; '.'
0000000000000c39         db  0x00 ; '.'
0000000000000c3a         db  0x02 ; '.'
0000000000000c3b         db  0x00 ; '.'
0000000000000c3c         db  0x02 ; '.'
0000000000000c3d         db  0x00 ; '.'
0000000000000c3e         db  0x02 ; '.'
0000000000000c3f         db  0x00 ; '.'
0000000000000c40         db  0x02 ; '.'
0000000000000c41         db  0x00 ; '.'
0000000000000c42         db  0x02 ; '.'
0000000000000c43         db  0x00 ; '.'
0000000000000c44         db  0x02 ; '.'
0000000000000c45         db  0x00 ; '.'
0000000000000c46         db  0x02 ; '.'
0000000000000c47         db  0x00 ; '.'
0000000000000c48         db  0x02 ; '.'
0000000000000c49         db  0x00 ; '.'
0000000000000c4a         db  0x02 ; '.'
0000000000000c4b         db  0x00 ; '.'
0000000000000c4c         db  0x02 ; '.'
0000000000000c4d         db  0x00 ; '.'
0000000000000c4e         db  0x02 ; '.'
0000000000000c4f         db  0x00 ; '.'
0000000000000c50         db  0x00 ; '.'
0000000000000c51         db  0x00 ; '.'
0000000000000c52         db  0x04 ; '.'
0000000000000c53         db  0x00 ; '.'
0000000000000c54         db  0x02 ; '.'
0000000000000c55         db  0x00 ; '.'
0000000000000c56         db  0x02 ; '.'
0000000000000c57         db  0x00 ; '.'
0000000000000c58         db  0x02 ; '.'
0000000000000c59         db  0x00 ; '.'
0000000000000c5a         db  0x02 ; '.'
0000000000000c5b         db  0x00 ; '.'
0000000000000c5c         db  0x02 ; '.'
0000000000000c5d         db  0x00 ; '.'
0000000000000c5e         db  0x02 ; '.'
0000000000000c5f         db  0x00 ; '.'
0000000000000c60         db  0x02 ; '.'
0000000000000c61         db  0x00 ; '.'
0000000000000c62         db  0x02 ; '.'
0000000000000c63         db  0x00 ; '.'
0000000000000c64         db  0x02 ; '.'
0000000000000c65         db  0x00 ; '.'
0000000000000c66         db  0x05 ; '.'
0000000000000c67         db  0x00 ; '.'
0000000000000c68         db  0x02 ; '.'
0000000000000c69         db  0x00 ; '.'
0000000000000c6a         db  0x02 ; '.'
0000000000000c6b         db  0x00 ; '.'
0000000000000c6c         db  0x02 ; '.'
0000000000000c6d         db  0x00 ; '.'
0000000000000c6e         db  0x02 ; '.'
0000000000000c6f         db  0x00 ; '.'
0000000000000c70         db  0x02 ; '.'
0000000000000c71         db  0x00 ; '.'
0000000000000c72         db  0x02 ; '.'
0000000000000c73         db  0x00 ; '.'
0000000000000c74         db  0x02 ; '.'
0000000000000c75         db  0x00 ; '.'
0000000000000c76         db  0x02 ; '.'
0000000000000c77         db  0x00 ; '.'
0000000000000c78         db  0x05 ; '.'
0000000000000c79         db  0x00 ; '.'
0000000000000c7a         db  0x00 ; '.'
0000000000000c7b         db  0x00 ; '.'
0000000000000c7c         db  0x02 ; '.'
0000000000000c7d         db  0x00 ; '.'
0000000000000c7e         db  0x02 ; '.'
0000000000000c7f         db  0x00 ; '.'
0000000000000c80         db  0x02 ; '.'
0000000000000c81         db  0x00 ; '.'
0000000000000c82         db  0x06 ; '.'
0000000000000c83         db  0x00 ; '.'
0000000000000c84         db  0x06 ; '.'
0000000000000c85         db  0x00 ; '.'
0000000000000c86         db  0x02 ; '.'
0000000000000c87         db  0x00 ; '.'
0000000000000c88         db  0x02 ; '.'
0000000000000c89         db  0x00 ; '.'
0000000000000c8a         db  0x02 ; '.'
0000000000000c8b         db  0x00 ; '.'
0000000000000c8c         db  0x02 ; '.'
0000000000000c8d         db  0x00 ; '.'
0000000000000c8e         db  0x02 ; '.'
0000000000000c8f         db  0x00 ; '.'
0000000000000c90         db  0x02 ; '.'
0000000000000c91         db  0x00 ; '.'
0000000000000c92         db  0x02 ; '.'
0000000000000c93         db  0x00 ; '.'
0000000000000c94         db  0x02 ; '.'
0000000000000c95         db  0x00 ; '.'
0000000000000c96         db  0x00 ; '.'
0000000000000c97         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xc98; 0xcf8[ (96 bytes)
        ; File offset : [3224; 3320[ (96 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000c98         db  0x01 ; '.'
0000000000000c99         db  0x00 ; '.'
0000000000000c9a         db  0x05 ; '.'
0000000000000c9b         db  0x00 ; '.'
0000000000000c9c         db  0x01 ; '.'
0000000000000c9d         db  0x00 ; '.'
0000000000000c9e         db  0x00 ; '.'
0000000000000c9f         db  0x00 ; '.'
0000000000000ca0         db  0x10 ; '.'
0000000000000ca1         db  0x00 ; '.'
0000000000000ca2         db  0x00 ; '.'
0000000000000ca3         db  0x00 ; '.'
0000000000000ca4         db  0x00 ; '.'
0000000000000ca5         db  0x00 ; '.'
0000000000000ca6         db  0x00 ; '.'
0000000000000ca7         db  0x00 ; '.'
0000000000000ca8         db  0x13 ; '.'
0000000000000ca9         db  0x69 ; 'i'
0000000000000caa         db  0x69 ; 'i'
0000000000000cab         db  0x0d ; '.'
0000000000000cac         db  0x00 ; '.'
0000000000000cad         db  0x00 ; '.'
0000000000000cae         db  0x06 ; '.'
0000000000000caf         db  0x00 ; '.'
0000000000000cb0         db  0x86 ; '.'
0000000000000cb1         db  0x02 ; '.'
0000000000000cb2         db  0x00 ; '.'
0000000000000cb3         db  0x00 ; '.'
0000000000000cb4         db  0x10 ; '.'
0000000000000cb5         db  0x00 ; '.'
0000000000000cb6         db  0x00 ; '.'
0000000000000cb7         db  0x00 ; '.'
0000000000000cb8         db  0x74 ; 't'
0000000000000cb9         db  0x19 ; '.'
0000000000000cba         db  0x69 ; 'i'
0000000000000cbb         db  0x09 ; '.'
0000000000000cbc         db  0x00 ; '.'
0000000000000cbd         db  0x00 ; '.'
0000000000000cbe         db  0x05 ; '.'
0000000000000cbf         db  0x00 ; '.'
0000000000000cc0         db  0x90 ; '.'
0000000000000cc1         db  0x02 ; '.'
0000000000000cc2         db  0x00 ; '.'
0000000000000cc3         db  0x00 ; '.'
0000000000000cc4         db  0x10 ; '.'
0000000000000cc5         db  0x00 ; '.'
0000000000000cc6         db  0x00 ; '.'
0000000000000cc7         db  0x00 ; '.'
0000000000000cc8         db  0x94 ; '.'
0000000000000cc9         db  0x91 ; '.'
0000000000000cca         db  0x96 ; '.'
0000000000000ccb         db  0x06 ; '.'
0000000000000ccc         db  0x00 ; '.'
0000000000000ccd         db  0x00 ; '.'
0000000000000cce         db  0x04 ; '.'
0000000000000ccf         db  0x00 ; '.'
0000000000000cd0         db  0x9c ; '.'
0000000000000cd1         db  0x02 ; '.'
0000000000000cd2         db  0x00 ; '.'
0000000000000cd3         db  0x00 ; '.'
0000000000000cd4         db  0x10 ; '.'
0000000000000cd5         db  0x00 ; '.'
0000000000000cd6         db  0x00 ; '.'
0000000000000cd7         db  0x00 ; '.'
0000000000000cd8         db  0x14 ; '.'
0000000000000cd9         db  0x69 ; 'i'
0000000000000cda         db  0x69 ; 'i'
0000000000000cdb         db  0x0d ; '.'
0000000000000cdc         db  0x00 ; '.'
0000000000000cdd         db  0x00 ; '.'
0000000000000cde         db  0x03 ; '.'
0000000000000cdf         db  0x00 ; '.'
0000000000000ce0         db  0xa7 ; '.'
0000000000000ce1         db  0x02 ; '.'
0000000000000ce2         db  0x00 ; '.'
0000000000000ce3         db  0x00 ; '.'
0000000000000ce4         db  0x10 ; '.'
0000000000000ce5         db  0x00 ; '.'
0000000000000ce6         db  0x00 ; '.'
0000000000000ce7         db  0x00 ; '.'
0000000000000ce8         db  0x75 ; 'u'
0000000000000ce9         db  0x1a ; '.'
0000000000000cea         db  0x69 ; 'i'
0000000000000ceb         db  0x09 ; '.'
0000000000000cec         db  0x00 ; '.'
0000000000000ced         db  0x00 ; '.'
0000000000000cee         db  0x02 ; '.'
0000000000000cef         db  0x00 ; '.'
0000000000000cf0         db  0xb1 ; '.'
0000000000000cf1         db  0x02 ; '.'
0000000000000cf2         db  0x00 ; '.'
0000000000000cf3         db  0x00 ; '.'
0000000000000cf4         db  0x00 ; '.'
0000000000000cf5         db  0x00 ; '.'
0000000000000cf6         db  0x00 ; '.'
0000000000000cf7         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xcf8; 0x10a0[ (936 bytes)
        ; File offset : [3320; 4256[ (936 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000cf8         db  0x10 ; '.'
0000000000000cf9         db  0x9a ; '.'
0000000000000cfa         db  0x20 ; ' '
0000000000000cfb         db  0x00 ; '.'
0000000000000cfc         db  0x00 ; '.'
0000000000000cfd         db  0x00 ; '.'
0000000000000cfe         db  0x00 ; '.'
0000000000000cff         db  0x00 ; '.'
0000000000000d00         db  0x08 ; '.'
0000000000000d01         db  0x00 ; '.'
0000000000000d02         db  0x00 ; '.'
0000000000000d03         db  0x00 ; '.'
0000000000000d04         db  0x00 ; '.'
0000000000000d05         db  0x00 ; '.'
0000000000000d06         db  0x00 ; '.'
0000000000000d07         db  0x00 ; '.'
0000000000000d08         db  0x40 ; '@'
0000000000000d09         db  0x2b ; '+'
0000000000000d0a         db  0x00 ; '.'
0000000000000d0b         db  0x00 ; '.'
0000000000000d0c         db  0x00 ; '.'
0000000000000d0d         db  0x00 ; '.'
0000000000000d0e         db  0x00 ; '.'
0000000000000d0f         db  0x00 ; '.'
0000000000000d10         db  0x18 ; '.'
0000000000000d11         db  0x9a ; '.'
0000000000000d12         db  0x20 ; ' '
0000000000000d13         db  0x00 ; '.'
0000000000000d14         db  0x00 ; '.'
0000000000000d15         db  0x00 ; '.'
0000000000000d16         db  0x00 ; '.'
0000000000000d17         db  0x00 ; '.'
0000000000000d18         db  0x08 ; '.'
0000000000000d19         db  0x00 ; '.'
0000000000000d1a         db  0x00 ; '.'
0000000000000d1b         db  0x00 ; '.'
0000000000000d1c         db  0x00 ; '.'
0000000000000d1d         db  0x00 ; '.'
0000000000000d1e         db  0x00 ; '.'
0000000000000d1f         db  0x00 ; '.'
0000000000000d20         db  0x00 ; '.'
0000000000000d21         db  0x2b ; '+'
0000000000000d22         db  0x00 ; '.'
0000000000000d23         db  0x00 ; '.'
0000000000000d24         db  0x00 ; '.'
0000000000000d25         db  0x00 ; '.'
0000000000000d26         db  0x00 ; '.'
0000000000000d27         db  0x00 ; '.'
0000000000000d28         db  0x20 ; ' '
0000000000000d29         db  0x9a ; '.'
0000000000000d2a         db  0x20 ; ' '
0000000000000d2b         db  0x00 ; '.'
0000000000000d2c         db  0x00 ; '.'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x00 ; '.'
0000000000000d2f         db  0x00 ; '.'
0000000000000d30         db  0x08 ; '.'
0000000000000d31         db  0x00 ; '.'
0000000000000d32         db  0x00 ; '.'
0000000000000d33         db  0x00 ; '.'
0000000000000d34         db  0x00 ; '.'
0000000000000d35         db  0x00 ; '.'
0000000000000d36         db  0x00 ; '.'
0000000000000d37         db  0x00 ; '.'
0000000000000d38         db  0xa6 ; '.'
0000000000000d39         db  0x6f ; 'o'
0000000000000d3a         db  0x00 ; '.'
0000000000000d3b         db  0x00 ; '.'
0000000000000d3c         db  0x00 ; '.'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x00 ; '.'
0000000000000d3f         db  0x00 ; '.'
0000000000000d40         db  0x40 ; '@'
0000000000000d41         db  0x9a ; '.'
0000000000000d42         db  0x20 ; ' '
0000000000000d43         db  0x00 ; '.'
0000000000000d44         db  0x00 ; '.'
0000000000000d45         db  0x00 ; '.'
0000000000000d46         db  0x00 ; '.'
0000000000000d47         db  0x00 ; '.'
0000000000000d48         db  0x08 ; '.'
0000000000000d49         db  0x00 ; '.'
0000000000000d4a         db  0x00 ; '.'
0000000000000d4b         db  0x00 ; '.'
0000000000000d4c         db  0x00 ; '.'
0000000000000d4d         db  0x00 ; '.'
0000000000000d4e         db  0x00 ; '.'
0000000000000d4f         db  0x00 ; '.'
0000000000000d50         db  0xad ; '.'
0000000000000d51         db  0x6f ; 'o'
0000000000000d52         db  0x00 ; '.'
0000000000000d53         db  0x00 ; '.'
0000000000000d54         db  0x00 ; '.'
0000000000000d55         db  0x00 ; '.'
0000000000000d56         db  0x00 ; '.'
0000000000000d57         db  0x00 ; '.'
0000000000000d58         db  0x60 ; '`'
0000000000000d59         db  0x9a ; '.'
0000000000000d5a         db  0x20 ; ' '
0000000000000d5b         db  0x00 ; '.'
0000000000000d5c         db  0x00 ; '.'
0000000000000d5d         db  0x00 ; '.'
0000000000000d5e         db  0x00 ; '.'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0x08 ; '.'
0000000000000d61         db  0x00 ; '.'
0000000000000d62         db  0x00 ; '.'
0000000000000d63         db  0x00 ; '.'
0000000000000d64         db  0x00 ; '.'
0000000000000d65         db  0x00 ; '.'
0000000000000d66         db  0x00 ; '.'
0000000000000d67         db  0x00 ; '.'
0000000000000d68         db  0xb3 ; '.'
0000000000000d69         db  0x6f ; 'o'
0000000000000d6a         db  0x00 ; '.'
0000000000000d6b         db  0x00 ; '.'
0000000000000d6c         db  0x00 ; '.'
0000000000000d6d         db  0x00 ; '.'
0000000000000d6e         db  0x00 ; '.'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0x80 ; '.'
0000000000000d71         db  0x9a ; '.'
0000000000000d72         db  0x20 ; ' '
0000000000000d73         db  0x00 ; '.'
0000000000000d74         db  0x00 ; '.'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x00 ; '.'
0000000000000d77         db  0x00 ; '.'
0000000000000d78         db  0x08 ; '.'
0000000000000d79         db  0x00 ; '.'
0000000000000d7a         db  0x00 ; '.'
0000000000000d7b         db  0x00 ; '.'
0000000000000d7c         db  0x00 ; '.'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x00 ; '.'
0000000000000d7f         db  0x00 ; '.'
0000000000000d80         db  0xc2 ; '.'
0000000000000d81         db  0x6f ; 'o'
0000000000000d82         db  0x00 ; '.'
0000000000000d83         db  0x00 ; '.'
0000000000000d84         db  0x00 ; '.'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x00 ; '.'
0000000000000d87         db  0x00 ; '.'
0000000000000d88         db  0xa0 ; '.'
0000000000000d89         db  0x9a ; '.'
0000000000000d8a         db  0x20 ; ' '
0000000000000d8b         db  0x00 ; '.'
0000000000000d8c         db  0x00 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x00 ; '.'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0x08 ; '.'
0000000000000d91         db  0x00 ; '.'
0000000000000d92         db  0x00 ; '.'
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x00 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x00 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0xc8 ; '.'
0000000000000d99         db  0x6f ; 'o'
0000000000000d9a         db  0x00 ; '.'
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x00 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x00 ; '.'
0000000000000d9f         db  0x00 ; '.'
0000000000000da0         db  0xc0 ; '.'
0000000000000da1         db  0x9a ; '.'
0000000000000da2         db  0x20 ; ' '
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x00 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x00 ; '.'
0000000000000da7         db  0x00 ; '.'
0000000000000da8         db  0x08 ; '.'
0000000000000da9         db  0x00 ; '.'
0000000000000daa         db  0x00 ; '.'
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x00 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x00 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0xcf ; '.'
0000000000000db1         db  0x6f ; 'o'
0000000000000db2         db  0x00 ; '.'
0000000000000db3         db  0x00 ; '.'
0000000000000db4         db  0x00 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x00 ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0xe0 ; '.'
0000000000000db9         db  0x9a ; '.'
0000000000000dba         db  0x20 ; ' '
0000000000000dbb         db  0x00 ; '.'
0000000000000dbc         db  0x00 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x00 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0x08 ; '.'
0000000000000dc1         db  0x00 ; '.'
0000000000000dc2         db  0x00 ; '.'
0000000000000dc3         db  0x00 ; '.'
0000000000000dc4         db  0x00 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x00 ; '.'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0xd4 ; '.'
0000000000000dc9         db  0x6f ; 'o'
0000000000000dca         db  0x00 ; '.'
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x00 ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x00 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0x00 ; '.'
0000000000000dd1         db  0x9b ; '.'
0000000000000dd2         db  0x20 ; ' '
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x00 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x00 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0x08 ; '.'
0000000000000dd9         db  0x00 ; '.'
0000000000000dda         db  0x00 ; '.'
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x00 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x00 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0xd9 ; '.'
0000000000000de1         db  0x6f ; 'o'
0000000000000de2         db  0x00 ; '.'
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x00 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x00 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0x20 ; ' '
0000000000000de9         db  0x9b ; '.'
0000000000000dea         db  0x20 ; ' '
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x00 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x00 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0x08 ; '.'
0000000000000df1         db  0x00 ; '.'
0000000000000df2         db  0x00 ; '.'
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x00 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x00 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0xe0 ; '.'
0000000000000df9         db  0x6f ; 'o'
0000000000000dfa         db  0x00 ; '.'
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x00 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x00 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0x40 ; '@'
0000000000000e01         db  0x9b ; '.'
0000000000000e02         db  0x20 ; ' '
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x00 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x00 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0x08 ; '.'
0000000000000e09         db  0x00 ; '.'
0000000000000e0a         db  0x00 ; '.'
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x00 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x00 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0xe4 ; '.'
0000000000000e11         db  0x6f ; 'o'
0000000000000e12         db  0x00 ; '.'
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x00 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x00 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0x60 ; '`'
0000000000000e19         db  0x9b ; '.'
0000000000000e1a         db  0x20 ; ' '
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x00 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x00 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0x08 ; '.'
0000000000000e21         db  0x00 ; '.'
0000000000000e22         db  0x00 ; '.'
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x00 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x00 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0xe9 ; '.'
0000000000000e29         db  0x6f ; 'o'
0000000000000e2a         db  0x00 ; '.'
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x00 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x00 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0x80 ; '.'
0000000000000e31         db  0x9b ; '.'
0000000000000e32         db  0x20 ; ' '
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0x08 ; '.'
0000000000000e39         db  0x00 ; '.'
0000000000000e3a         db  0x00 ; '.'
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x00 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x00 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0xee ; '.'
0000000000000e41         db  0x6f ; 'o'
0000000000000e42         db  0x00 ; '.'
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x00 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0xc0 ; '.'
0000000000000e49         db  0x9b ; '.'
0000000000000e4a         db  0x20 ; ' '
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x00 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0x08 ; '.'
0000000000000e51         db  0x00 ; '.'
0000000000000e52         db  0x00 ; '.'
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x00 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x00 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0x99 ; '.'
0000000000000e59         db  0x7a ; 'z'
0000000000000e5a         db  0x00 ; '.'
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x00 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x00 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0xc8 ; '.'
0000000000000e61         db  0x9b ; '.'
0000000000000e62         db  0x20 ; ' '
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x00 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0x08 ; '.'
0000000000000e69         db  0x00 ; '.'
0000000000000e6a         db  0x00 ; '.'
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x00 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x00 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0xa1 ; '.'
0000000000000e71         db  0x7a ; 'z'
0000000000000e72         db  0x00 ; '.'
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x00 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0xd0 ; '.'
0000000000000e79         db  0x9b ; '.'
0000000000000e7a         db  0x20 ; ' '
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x00 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0x08 ; '.'
0000000000000e81         db  0x00 ; '.'
0000000000000e82         db  0x00 ; '.'
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x00 ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0xa7 ; '.'
0000000000000e89         db  0x7a ; 'z'
0000000000000e8a         db  0x00 ; '.'
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x00 ; '.'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0xd8 ; '.'
0000000000000e91         db  0x9b ; '.'
0000000000000e92         db  0x20 ; ' '
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'
0000000000000e98         db  0x08 ; '.'
0000000000000e99         db  0x00 ; '.'
0000000000000e9a         db  0x00 ; '.'
0000000000000e9b         db  0x00 ; '.'
0000000000000e9c         db  0x00 ; '.'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x00 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0xb4 ; '.'
0000000000000ea1         db  0x7a ; 'z'
0000000000000ea2         db  0x00 ; '.'
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x00 ; '.'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0xe0 ; '.'
0000000000000ea9         db  0x9b ; '.'
0000000000000eaa         db  0x20 ; ' '
0000000000000eab         db  0x00 ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x00 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0x08 ; '.'
0000000000000eb1         db  0x00 ; '.'
0000000000000eb2         db  0x00 ; '.'
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x00 ; '.'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0xc1 ; '.'
0000000000000eb9         db  0x7a ; 'z'
0000000000000eba         db  0x00 ; '.'
0000000000000ebb         db  0x00 ; '.'
0000000000000ebc         db  0x00 ; '.'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x00 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0xe8 ; '.'
0000000000000ec1         db  0x9b ; '.'
0000000000000ec2         db  0x20 ; ' '
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x00 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0x08 ; '.'
0000000000000ec9         db  0x00 ; '.'
0000000000000eca         db  0x00 ; '.'
0000000000000ecb         db  0x00 ; '.'
0000000000000ecc         db  0x00 ; '.'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0xd5 ; '.'
0000000000000ed1         db  0x7a ; 'z'
0000000000000ed2         db  0x00 ; '.'
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x00 ; '.'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0xf0 ; '.'
0000000000000ed9         db  0x9b ; '.'
0000000000000eda         db  0x20 ; ' '
0000000000000edb         db  0x00 ; '.'
0000000000000edc         db  0x00 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0x08 ; '.'
0000000000000ee1         db  0x00 ; '.'
0000000000000ee2         db  0x00 ; '.'
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x00 ; '.'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0xd7 ; '.'
0000000000000ee9         db  0x7a ; 'z'
0000000000000eea         db  0x00 ; '.'
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x00 ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x00 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0xf8 ; '.'
0000000000000ef1         db  0x9b ; '.'
0000000000000ef2         db  0x20 ; ' '
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0x08 ; '.'
0000000000000ef9         db  0x00 ; '.'
0000000000000efa         db  0x00 ; '.'
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x00 ; '.'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0xba ; '.'
0000000000000f01         db  0x7a ; 'z'
0000000000000f02         db  0x00 ; '.'
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x00 ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0x00 ; '.'
0000000000000f09         db  0x9c ; '.'
0000000000000f0a         db  0x20 ; ' '
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x00 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0x08 ; '.'
0000000000000f11         db  0x00 ; '.'
0000000000000f12         db  0x00 ; '.'
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x00 ; '.'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0xf2 ; '.'
0000000000000f19         db  0x6e ; 'n'
0000000000000f1a         db  0x00 ; '.'
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x00 ; '.'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0x08 ; '.'
0000000000000f21         db  0x9c ; '.'
0000000000000f22         db  0x20 ; ' '
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x00 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0x08 ; '.'
0000000000000f29         db  0x00 ; '.'
0000000000000f2a         db  0x00 ; '.'
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x00 ; '.'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0xdf ; '.'
0000000000000f31         db  0x7a ; 'z'
0000000000000f32         db  0x00 ; '.'
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x00 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0x08 ; '.'
0000000000000f39         db  0xa0 ; '.'
0000000000000f3a         db  0x20 ; ' '
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x00 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0x08 ; '.'
0000000000000f41         db  0x00 ; '.'
0000000000000f42         db  0x00 ; '.'
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x00 ; '.'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0x08 ; '.'
0000000000000f49         db  0xa0 ; '.'
0000000000000f4a         db  0x20 ; ' '
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x00 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0x18 ; '.'
0000000000000f51         db  0xa0 ; '.'
0000000000000f52         db  0x20 ; ' '
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0x08 ; '.'
0000000000000f59         db  0x00 ; '.'
0000000000000f5a         db  0x00 ; '.'
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x00 ; '.'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0xe0 ; '.'
0000000000000f61         db  0x79 ; 'y'
0000000000000f62         db  0x00 ; '.'
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x00 ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0x80 ; '.'
0000000000000f69         db  0xa0 ; '.'
0000000000000f6a         db  0x20 ; ' '
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0x08 ; '.'
0000000000000f71         db  0x00 ; '.'
0000000000000f72         db  0x00 ; '.'
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x00 ; '.'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0x90 ; '.'
0000000000000f79         db  0xa0 ; '.'
0000000000000f7a         db  0x20 ; ' '
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x00 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0x98 ; '.'
0000000000000f81         db  0xa0 ; '.'
0000000000000f82         db  0x20 ; ' '
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x00 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0x08 ; '.'
0000000000000f89         db  0x00 ; '.'
0000000000000f8a         db  0x00 ; '.'
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x00 ; '.'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0x40 ; '@'
0000000000000f91         db  0xa1 ; '.'
0000000000000f92         db  0x20 ; ' '
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x00 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0xc0 ; '.'
0000000000000f99         db  0x9f ; '.'
0000000000000f9a         db  0x20 ; ' '
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'
0000000000000fa0         db  0x06 ; '.'
0000000000000fa1         db  0x00 ; '.'
0000000000000fa2         db  0x00 ; '.'
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x05 ; '.'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0x00 ; '.'
0000000000000fa9         db  0x00 ; '.'
0000000000000faa         db  0x00 ; '.'
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x00 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0xc8 ; '.'
0000000000000fb1         db  0x9f ; '.'
0000000000000fb2         db  0x20 ; ' '
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x00 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0x06 ; '.'
0000000000000fb9         db  0x00 ; '.'
0000000000000fba         db  0x00 ; '.'
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x1a ; '.'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0x00 ; '.'
0000000000000fc1         db  0x00 ; '.'
0000000000000fc2         db  0x00 ; '.'
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x00 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0xd0 ; '.'
0000000000000fc9         db  0x9f ; '.'
0000000000000fca         db  0x20 ; ' '
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0x06 ; '.'
0000000000000fd1         db  0x00 ; '.'
0000000000000fd2         db  0x00 ; '.'
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x1f ; '.'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x00 ; '.'
0000000000000fd9         db  0x00 ; '.'
0000000000000fda         db  0x00 ; '.'
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x00 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0xd8 ; '.'
0000000000000fe1         db  0x9f ; '.'
0000000000000fe2         db  0x20 ; ' '
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x00 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0x06 ; '.'
0000000000000fe9         db  0x00 ; '.'
0000000000000fea         db  0x00 ; '.'
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x34 ; '4'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x00 ; '.'
0000000000000ff1         db  0x00 ; '.'
0000000000000ff2         db  0x00 ; '.'
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x00 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0xe0 ; '.'
0000000000000ff9         db  0x9f ; '.'
0000000000000ffa         db  0x20 ; ' '
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'
0000000000001000         db  0x06 ; '.'
0000000000001001         db  0x00 ; '.'
0000000000001002         db  0x00 ; '.'
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x37 ; '7'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x00 ; '.'
0000000000001009         db  0x00 ; '.'
000000000000100a         db  0x00 ; '.'
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x00 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0xa0 ; '.'
0000000000001011         db  0xa0 ; '.'
0000000000001012         db  0x20 ; ' '
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0x05 ; '.'
0000000000001019         db  0x00 ; '.'
000000000000101a         db  0x00 ; '.'
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x3b ; ';'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x00 ; '.'
0000000000001021         db  0x00 ; '.'
0000000000001022         db  0x00 ; '.'
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x00 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0xa8 ; '.'
0000000000001029         db  0xa0 ; '.'
000000000000102a         db  0x20 ; ' '
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x00 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0x05 ; '.'
0000000000001031         db  0x00 ; '.'
0000000000001032         db  0x00 ; '.'
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x3a ; ':'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x00 ; '.'
0000000000001039         db  0x00 ; '.'
000000000000103a         db  0x00 ; '.'
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x00 ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0xb0 ; '.'
0000000000001041         db  0xa0 ; '.'
0000000000001042         db  0x20 ; ' '
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x00 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0x05 ; '.'
0000000000001049         db  0x00 ; '.'
000000000000104a         db  0x00 ; '.'
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x3c ; '<'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x00 ; '.'
0000000000001051         db  0x00 ; '.'
0000000000001052         db  0x00 ; '.'
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x00 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0xb8 ; '.'
0000000000001059         db  0xa0 ; '.'
000000000000105a         db  0x20 ; ' '
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0x05 ; '.'
0000000000001061         db  0x00 ; '.'
0000000000001062         db  0x00 ; '.'
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x41 ; 'A'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x00 ; '.'
0000000000001069         db  0x00 ; '.'
000000000000106a         db  0x00 ; '.'
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x00 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0xc0 ; '.'
0000000000001071         db  0xa0 ; '.'
0000000000001072         db  0x20 ; ' '
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x00 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0x05 ; '.'
0000000000001079         db  0x00 ; '.'
000000000000107a         db  0x00 ; '.'
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x3e ; '>'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x00 ; '.'
0000000000001081         db  0x00 ; '.'
0000000000001082         db  0x00 ; '.'
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x00 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0xe0 ; '.'
0000000000001089         db  0xa0 ; '.'
000000000000108a         db  0x20 ; ' '
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x00 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0x05 ; '.'
0000000000001091         db  0x00 ; '.'
0000000000001092         db  0x00 ; '.'
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x40 ; '@'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x00 ; '.'
0000000000001099         db  0x00 ; '.'
000000000000109a         db  0x00 ; '.'
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x00 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0x10a0; 0x1580[ (1248 bytes)
        ; File offset : [4256; 5504[ (1248 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

00000000000010a0         db  0x20 ; ' '
00000000000010a1         db  0x9e ; '.'
00000000000010a2         db  0x20 ; ' '
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x00 ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0x07 ; '.'
00000000000010a9         db  0x00 ; '.'
00000000000010aa         db  0x00 ; '.'
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x01 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x00 ; '.'
00000000000010b1         db  0x00 ; '.'
00000000000010b2         db  0x00 ; '.'
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x00 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0x28 ; '('
00000000000010b9         db  0x9e ; '.'
00000000000010ba         db  0x20 ; ' '
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x00 ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0x07 ; '.'
00000000000010c1         db  0x00 ; '.'
00000000000010c2         db  0x00 ; '.'
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x02 ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x00 ; '.'
00000000000010c9         db  0x00 ; '.'
00000000000010ca         db  0x00 ; '.'
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x00 ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0x30 ; '0'
00000000000010d1         db  0x9e ; '.'
00000000000010d2         db  0x20 ; ' '
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x00 ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0x07 ; '.'
00000000000010d9         db  0x00 ; '.'
00000000000010da         db  0x00 ; '.'
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x03 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x00 ; '.'
00000000000010e1         db  0x00 ; '.'
00000000000010e2         db  0x00 ; '.'
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x00 ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0x38 ; '8'
00000000000010e9         db  0x9e ; '.'
00000000000010ea         db  0x20 ; ' '
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x00 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0x07 ; '.'
00000000000010f1         db  0x00 ; '.'
00000000000010f2         db  0x00 ; '.'
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x04 ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0x00 ; '.'
00000000000010f9         db  0x00 ; '.'
00000000000010fa         db  0x00 ; '.'
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x00 ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0x40 ; '@'
0000000000001101         db  0x9e ; '.'
0000000000001102         db  0x20 ; ' '
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x00 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0x07 ; '.'
0000000000001109         db  0x00 ; '.'
000000000000110a         db  0x00 ; '.'
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x06 ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0x00 ; '.'
0000000000001111         db  0x00 ; '.'
0000000000001112         db  0x00 ; '.'
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x00 ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0x48 ; 'H'
0000000000001119         db  0x9e ; '.'
000000000000111a         db  0x20 ; ' '
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x00 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x07 ; '.'
0000000000001121         db  0x00 ; '.'
0000000000001122         db  0x00 ; '.'
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x07 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0x00 ; '.'
0000000000001129         db  0x00 ; '.'
000000000000112a         db  0x00 ; '.'
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x00 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0x50 ; 'P'
0000000000001131         db  0x9e ; '.'
0000000000001132         db  0x20 ; ' '
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x00 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x07 ; '.'
0000000000001139         db  0x00 ; '.'
000000000000113a         db  0x00 ; '.'
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x08 ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0x00 ; '.'
0000000000001141         db  0x00 ; '.'
0000000000001142         db  0x00 ; '.'
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x00 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0x58 ; 'X'
0000000000001149         db  0x9e ; '.'
000000000000114a         db  0x20 ; ' '
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x00 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x07 ; '.'
0000000000001151         db  0x00 ; '.'
0000000000001152         db  0x00 ; '.'
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x09 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0x00 ; '.'
0000000000001159         db  0x00 ; '.'
000000000000115a         db  0x00 ; '.'
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x00 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0x60 ; '`'
0000000000001161         db  0x9e ; '.'
0000000000001162         db  0x20 ; ' '
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x00 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x07 ; '.'
0000000000001169         db  0x00 ; '.'
000000000000116a         db  0x00 ; '.'
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x0a ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0x00 ; '.'
0000000000001171         db  0x00 ; '.'
0000000000001172         db  0x00 ; '.'
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x00 ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0x68 ; 'h'
0000000000001179         db  0x9e ; '.'
000000000000117a         db  0x20 ; ' '
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x00 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x07 ; '.'
0000000000001181         db  0x00 ; '.'
0000000000001182         db  0x00 ; '.'
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x0b ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x00 ; '.'
0000000000001189         db  0x00 ; '.'
000000000000118a         db  0x00 ; '.'
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x00 ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0x70 ; 'p'
0000000000001191         db  0x9e ; '.'
0000000000001192         db  0x20 ; ' '
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x00 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0x07 ; '.'
0000000000001199         db  0x00 ; '.'
000000000000119a         db  0x00 ; '.'
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x0c ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x00 ; '.'
00000000000011a1         db  0x00 ; '.'
00000000000011a2         db  0x00 ; '.'
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x00 ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0x78 ; 'x'
00000000000011a9         db  0x9e ; '.'
00000000000011aa         db  0x20 ; ' '
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x00 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0x07 ; '.'
00000000000011b1         db  0x00 ; '.'
00000000000011b2         db  0x00 ; '.'
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x0d ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x00 ; '.'
00000000000011b9         db  0x00 ; '.'
00000000000011ba         db  0x00 ; '.'
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x00 ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0x80 ; '.'
00000000000011c1         db  0x9e ; '.'
00000000000011c2         db  0x20 ; ' '
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x00 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0x07 ; '.'
00000000000011c9         db  0x00 ; '.'
00000000000011ca         db  0x00 ; '.'
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x0e ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x00 ; '.'
00000000000011d1         db  0x00 ; '.'
00000000000011d2         db  0x00 ; '.'
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x00 ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0x88 ; '.'
00000000000011d9         db  0x9e ; '.'
00000000000011da         db  0x20 ; ' '
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x00 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0x07 ; '.'
00000000000011e1         db  0x00 ; '.'
00000000000011e2         db  0x00 ; '.'
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x0f ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x00 ; '.'
00000000000011e9         db  0x00 ; '.'
00000000000011ea         db  0x00 ; '.'
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x00 ; '.'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0x90 ; '.'
00000000000011f1         db  0x9e ; '.'
00000000000011f2         db  0x20 ; ' '
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x00 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0x07 ; '.'
00000000000011f9         db  0x00 ; '.'
00000000000011fa         db  0x00 ; '.'
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x10 ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x00 ; '.'
0000000000001201         db  0x00 ; '.'
0000000000001202         db  0x00 ; '.'
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x00 ; '.'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0x98 ; '.'
0000000000001209         db  0x9e ; '.'
000000000000120a         db  0x20 ; ' '
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x00 ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0x07 ; '.'
0000000000001211         db  0x00 ; '.'
0000000000001212         db  0x00 ; '.'
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x11 ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x00 ; '.'
0000000000001219         db  0x00 ; '.'
000000000000121a         db  0x00 ; '.'
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x00 ; '.'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0xa0 ; '.'
0000000000001221         db  0x9e ; '.'
0000000000001222         db  0x20 ; ' '
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x00 ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0x07 ; '.'
0000000000001229         db  0x00 ; '.'
000000000000122a         db  0x00 ; '.'
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x12 ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x00 ; '.'
0000000000001231         db  0x00 ; '.'
0000000000001232         db  0x00 ; '.'
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x00 ; '.'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0xa8 ; '.'
0000000000001239         db  0x9e ; '.'
000000000000123a         db  0x20 ; ' '
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x00 ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x07 ; '.'
0000000000001241         db  0x00 ; '.'
0000000000001242         db  0x00 ; '.'
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x13 ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x00 ; '.'
0000000000001249         db  0x00 ; '.'
000000000000124a         db  0x00 ; '.'
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x00 ; '.'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0xb0 ; '.'
0000000000001251         db  0x9e ; '.'
0000000000001252         db  0x20 ; ' '
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x00 ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0x07 ; '.'
0000000000001259         db  0x00 ; '.'
000000000000125a         db  0x00 ; '.'
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x14 ; '.'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x00 ; '.'
0000000000001261         db  0x00 ; '.'
0000000000001262         db  0x00 ; '.'
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x00 ; '.'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0xb8 ; '.'
0000000000001269         db  0x9e ; '.'
000000000000126a         db  0x20 ; ' '
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x00 ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x07 ; '.'
0000000000001271         db  0x00 ; '.'
0000000000001272         db  0x00 ; '.'
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x15 ; '.'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x00 ; '.'
0000000000001279         db  0x00 ; '.'
000000000000127a         db  0x00 ; '.'
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x00 ; '.'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0xc0 ; '.'
0000000000001281         db  0x9e ; '.'
0000000000001282         db  0x20 ; ' '
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x00 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0x07 ; '.'
0000000000001289         db  0x00 ; '.'
000000000000128a         db  0x00 ; '.'
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x16 ; '.'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x00 ; '.'
0000000000001291         db  0x00 ; '.'
0000000000001292         db  0x00 ; '.'
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x00 ; '.'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0xc8 ; '.'
0000000000001299         db  0x9e ; '.'
000000000000129a         db  0x20 ; ' '
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x00 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0x07 ; '.'
00000000000012a1         db  0x00 ; '.'
00000000000012a2         db  0x00 ; '.'
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x17 ; '.'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x00 ; '.'
00000000000012a9         db  0x00 ; '.'
00000000000012aa         db  0x00 ; '.'
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x00 ; '.'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0xd0 ; '.'
00000000000012b1         db  0x9e ; '.'
00000000000012b2         db  0x20 ; ' '
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x00 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0x07 ; '.'
00000000000012b9         db  0x00 ; '.'
00000000000012ba         db  0x00 ; '.'
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x18 ; '.'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x00 ; '.'
00000000000012c1         db  0x00 ; '.'
00000000000012c2         db  0x00 ; '.'
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x00 ; '.'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0xd8 ; '.'
00000000000012c9         db  0x9e ; '.'
00000000000012ca         db  0x20 ; ' '
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x00 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0x07 ; '.'
00000000000012d1         db  0x00 ; '.'
00000000000012d2         db  0x00 ; '.'
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x19 ; '.'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x00 ; '.'
00000000000012d9         db  0x00 ; '.'
00000000000012da         db  0x00 ; '.'
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x00 ; '.'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0xe0 ; '.'
00000000000012e1         db  0x9e ; '.'
00000000000012e2         db  0x20 ; ' '
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x00 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0x07 ; '.'
00000000000012e9         db  0x00 ; '.'
00000000000012ea         db  0x00 ; '.'
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x1b ; '.'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x00 ; '.'
00000000000012f1         db  0x00 ; '.'
00000000000012f2         db  0x00 ; '.'
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x00 ; '.'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0xe8 ; '.'
00000000000012f9         db  0x9e ; '.'
00000000000012fa         db  0x20 ; ' '
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x00 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0x07 ; '.'
0000000000001301         db  0x00 ; '.'
0000000000001302         db  0x00 ; '.'
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x1c ; '.'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x00 ; '.'
0000000000001309         db  0x00 ; '.'
000000000000130a         db  0x00 ; '.'
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x00 ; '.'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0xf0 ; '.'
0000000000001311         db  0x9e ; '.'
0000000000001312         db  0x20 ; ' '
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x00 ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0x07 ; '.'
0000000000001319         db  0x00 ; '.'
000000000000131a         db  0x00 ; '.'
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x1d ; '.'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x00 ; '.'
0000000000001321         db  0x00 ; '.'
0000000000001322         db  0x00 ; '.'
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x00 ; '.'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0xf8 ; '.'
0000000000001329         db  0x9e ; '.'
000000000000132a         db  0x20 ; ' '
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x00 ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0x07 ; '.'
0000000000001331         db  0x00 ; '.'
0000000000001332         db  0x00 ; '.'
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x1e ; '.'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x00 ; '.'
0000000000001339         db  0x00 ; '.'
000000000000133a         db  0x00 ; '.'
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x00 ; '.'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0x00 ; '.'
0000000000001341         db  0x9f ; '.'
0000000000001342         db  0x20 ; ' '
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x00 ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0x07 ; '.'
0000000000001349         db  0x00 ; '.'
000000000000134a         db  0x00 ; '.'
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x20 ; ' '
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x00 ; '.'
0000000000001351         db  0x00 ; '.'
0000000000001352         db  0x00 ; '.'
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x00 ; '.'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0x08 ; '.'
0000000000001359         db  0x9f ; '.'
000000000000135a         db  0x20 ; ' '
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x00 ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0x07 ; '.'
0000000000001361         db  0x00 ; '.'
0000000000001362         db  0x00 ; '.'
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x21 ; '!'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0x00 ; '.'
0000000000001369         db  0x00 ; '.'
000000000000136a         db  0x00 ; '.'
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x00 ; '.'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0x10 ; '.'
0000000000001371         db  0x9f ; '.'
0000000000001372         db  0x20 ; ' '
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x00 ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x07 ; '.'
0000000000001379         db  0x00 ; '.'
000000000000137a         db  0x00 ; '.'
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x22 ; '"'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0x00 ; '.'
0000000000001381         db  0x00 ; '.'
0000000000001382         db  0x00 ; '.'
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x00 ; '.'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0x18 ; '.'
0000000000001389         db  0x9f ; '.'
000000000000138a         db  0x20 ; ' '
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x00 ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x07 ; '.'
0000000000001391         db  0x00 ; '.'
0000000000001392         db  0x00 ; '.'
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x23 ; '#'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0x00 ; '.'
0000000000001399         db  0x00 ; '.'
000000000000139a         db  0x00 ; '.'
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x00 ; '.'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0x20 ; ' '
00000000000013a1         db  0x9f ; '.'
00000000000013a2         db  0x20 ; ' '
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x00 ; '.'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x07 ; '.'
00000000000013a9         db  0x00 ; '.'
00000000000013aa         db  0x00 ; '.'
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x24 ; '$'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x00 ; '.'
00000000000013b1         db  0x00 ; '.'
00000000000013b2         db  0x00 ; '.'
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x00 ; '.'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'
00000000000013b8         db  0x28 ; '('
00000000000013b9         db  0x9f ; '.'
00000000000013ba         db  0x20 ; ' '
00000000000013bb         db  0x00 ; '.'
00000000000013bc         db  0x00 ; '.'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x00 ; '.'
00000000000013bf         db  0x00 ; '.'
00000000000013c0         db  0x07 ; '.'
00000000000013c1         db  0x00 ; '.'
00000000000013c2         db  0x00 ; '.'
00000000000013c3         db  0x00 ; '.'
00000000000013c4         db  0x25 ; '%'
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x00 ; '.'
00000000000013c7         db  0x00 ; '.'
00000000000013c8         db  0x00 ; '.'
00000000000013c9         db  0x00 ; '.'
00000000000013ca         db  0x00 ; '.'
00000000000013cb         db  0x00 ; '.'
00000000000013cc         db  0x00 ; '.'
00000000000013cd         db  0x00 ; '.'
00000000000013ce         db  0x00 ; '.'
00000000000013cf         db  0x00 ; '.'
00000000000013d0         db  0x30 ; '0'
00000000000013d1         db  0x9f ; '.'
00000000000013d2         db  0x20 ; ' '
00000000000013d3         db  0x00 ; '.'
00000000000013d4         db  0x00 ; '.'
00000000000013d5         db  0x00 ; '.'
00000000000013d6         db  0x00 ; '.'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0x07 ; '.'
00000000000013d9         db  0x00 ; '.'
00000000000013da         db  0x00 ; '.'
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x26 ; '&'
00000000000013dd         db  0x00 ; '.'
00000000000013de         db  0x00 ; '.'
00000000000013df         db  0x00 ; '.'
00000000000013e0         db  0x00 ; '.'
00000000000013e1         db  0x00 ; '.'
00000000000013e2         db  0x00 ; '.'
00000000000013e3         db  0x00 ; '.'
00000000000013e4         db  0x00 ; '.'
00000000000013e5         db  0x00 ; '.'
00000000000013e6         db  0x00 ; '.'
00000000000013e7         db  0x00 ; '.'
00000000000013e8         db  0x38 ; '8'
00000000000013e9         db  0x9f ; '.'
00000000000013ea         db  0x20 ; ' '
00000000000013eb         db  0x00 ; '.'
00000000000013ec         db  0x00 ; '.'
00000000000013ed         db  0x00 ; '.'
00000000000013ee         db  0x00 ; '.'
00000000000013ef         db  0x00 ; '.'
00000000000013f0         db  0x07 ; '.'
00000000000013f1         db  0x00 ; '.'
00000000000013f2         db  0x00 ; '.'
00000000000013f3         db  0x00 ; '.'
00000000000013f4         db  0x27 ; '''
00000000000013f5         db  0x00 ; '.'
00000000000013f6         db  0x00 ; '.'
00000000000013f7         db  0x00 ; '.'
00000000000013f8         db  0x00 ; '.'
00000000000013f9         db  0x00 ; '.'
00000000000013fa         db  0x00 ; '.'
00000000000013fb         db  0x00 ; '.'
00000000000013fc         db  0x00 ; '.'
00000000000013fd         db  0x00 ; '.'
00000000000013fe         db  0x00 ; '.'
00000000000013ff         db  0x00 ; '.'
0000000000001400         db  0x40 ; '@'
0000000000001401         db  0x9f ; '.'
0000000000001402         db  0x20 ; ' '
0000000000001403         db  0x00 ; '.'
0000000000001404         db  0x00 ; '.'
0000000000001405         db  0x00 ; '.'
0000000000001406         db  0x00 ; '.'
0000000000001407         db  0x00 ; '.'
0000000000001408         db  0x07 ; '.'
0000000000001409         db  0x00 ; '.'
000000000000140a         db  0x00 ; '.'
000000000000140b         db  0x00 ; '.'
000000000000140c         db  0x28 ; '('
000000000000140d         db  0x00 ; '.'
000000000000140e         db  0x00 ; '.'
000000000000140f         db  0x00 ; '.'
0000000000001410         db  0x00 ; '.'
0000000000001411         db  0x00 ; '.'
0000000000001412         db  0x00 ; '.'
0000000000001413         db  0x00 ; '.'
0000000000001414         db  0x00 ; '.'
0000000000001415         db  0x00 ; '.'
0000000000001416         db  0x00 ; '.'
0000000000001417         db  0x00 ; '.'
0000000000001418         db  0x48 ; 'H'
0000000000001419         db  0x9f ; '.'
000000000000141a         db  0x20 ; ' '
000000000000141b         db  0x00 ; '.'
000000000000141c         db  0x00 ; '.'
000000000000141d         db  0x00 ; '.'
000000000000141e         db  0x00 ; '.'
000000000000141f         db  0x00 ; '.'
0000000000001420         db  0x07 ; '.'
0000000000001421         db  0x00 ; '.'
0000000000001422         db  0x00 ; '.'
0000000000001423         db  0x00 ; '.'
0000000000001424         db  0x29 ; ')'
0000000000001425         db  0x00 ; '.'
0000000000001426         db  0x00 ; '.'
0000000000001427         db  0x00 ; '.'
0000000000001428         db  0x00 ; '.'
0000000000001429         db  0x00 ; '.'
000000000000142a         db  0x00 ; '.'
000000000000142b         db  0x00 ; '.'
000000000000142c         db  0x00 ; '.'
000000000000142d         db  0x00 ; '.'
000000000000142e         db  0x00 ; '.'
000000000000142f         db  0x00 ; '.'
0000000000001430         db  0x50 ; 'P'
0000000000001431         db  0x9f ; '.'
0000000000001432         db  0x20 ; ' '
0000000000001433         db  0x00 ; '.'
0000000000001434         db  0x00 ; '.'
0000000000001435         db  0x00 ; '.'
0000000000001436         db  0x00 ; '.'
0000000000001437         db  0x00 ; '.'
0000000000001438         db  0x07 ; '.'
0000000000001439         db  0x00 ; '.'
000000000000143a         db  0x00 ; '.'
000000000000143b         db  0x00 ; '.'
000000000000143c         db  0x2a ; '*'
000000000000143d         db  0x00 ; '.'
000000000000143e         db  0x00 ; '.'
000000000000143f         db  0x00 ; '.'
0000000000001440         db  0x00 ; '.'
0000000000001441         db  0x00 ; '.'
0000000000001442         db  0x00 ; '.'
0000000000001443         db  0x00 ; '.'
0000000000001444         db  0x00 ; '.'
0000000000001445         db  0x00 ; '.'
0000000000001446         db  0x00 ; '.'
0000000000001447         db  0x00 ; '.'
0000000000001448         db  0x58 ; 'X'
0000000000001449         db  0x9f ; '.'
000000000000144a         db  0x20 ; ' '
000000000000144b         db  0x00 ; '.'
000000000000144c         db  0x00 ; '.'
000000000000144d         db  0x00 ; '.'
000000000000144e         db  0x00 ; '.'
000000000000144f         db  0x00 ; '.'
0000000000001450         db  0x07 ; '.'
0000000000001451         db  0x00 ; '.'
0000000000001452         db  0x00 ; '.'
0000000000001453         db  0x00 ; '.'
0000000000001454         db  0x2b ; '+'
0000000000001455         db  0x00 ; '.'
0000000000001456         db  0x00 ; '.'
0000000000001457         db  0x00 ; '.'
0000000000001458         db  0x00 ; '.'
0000000000001459         db  0x00 ; '.'
000000000000145a         db  0x00 ; '.'
000000000000145b         db  0x00 ; '.'
000000000000145c         db  0x00 ; '.'
000000000000145d         db  0x00 ; '.'
000000000000145e         db  0x00 ; '.'
000000000000145f         db  0x00 ; '.'
0000000000001460         db  0x60 ; '`'
0000000000001461         db  0x9f ; '.'
0000000000001462         db  0x20 ; ' '
0000000000001463         db  0x00 ; '.'
0000000000001464         db  0x00 ; '.'
0000000000001465         db  0x00 ; '.'
0000000000001466         db  0x00 ; '.'
0000000000001467         db  0x00 ; '.'
0000000000001468         db  0x07 ; '.'
0000000000001469         db  0x00 ; '.'
000000000000146a         db  0x00 ; '.'
000000000000146b         db  0x00 ; '.'
000000000000146c         db  0x2c ; ','
000000000000146d         db  0x00 ; '.'
000000000000146e         db  0x00 ; '.'
000000000000146f         db  0x00 ; '.'
0000000000001470         db  0x00 ; '.'
0000000000001471         db  0x00 ; '.'
0000000000001472         db  0x00 ; '.'
0000000000001473         db  0x00 ; '.'
0000000000001474         db  0x00 ; '.'
0000000000001475         db  0x00 ; '.'
0000000000001476         db  0x00 ; '.'
0000000000001477         db  0x00 ; '.'
0000000000001478         db  0x68 ; 'h'
0000000000001479         db  0x9f ; '.'
000000000000147a         db  0x20 ; ' '
000000000000147b         db  0x00 ; '.'
000000000000147c         db  0x00 ; '.'
000000000000147d         db  0x00 ; '.'
000000000000147e         db  0x00 ; '.'
000000000000147f         db  0x00 ; '.'
0000000000001480         db  0x07 ; '.'
0000000000001481         db  0x00 ; '.'
0000000000001482         db  0x00 ; '.'
0000000000001483         db  0x00 ; '.'
0000000000001484         db  0x2d ; '-'
0000000000001485         db  0x00 ; '.'
0000000000001486         db  0x00 ; '.'
0000000000001487         db  0x00 ; '.'
0000000000001488         db  0x00 ; '.'
0000000000001489         db  0x00 ; '.'
000000000000148a         db  0x00 ; '.'
000000000000148b         db  0x00 ; '.'
000000000000148c         db  0x00 ; '.'
000000000000148d         db  0x00 ; '.'
000000000000148e         db  0x00 ; '.'
000000000000148f         db  0x00 ; '.'
0000000000001490         db  0x70 ; 'p'
0000000000001491         db  0x9f ; '.'
0000000000001492         db  0x20 ; ' '
0000000000001493         db  0x00 ; '.'
0000000000001494         db  0x00 ; '.'
0000000000001495         db  0x00 ; '.'
0000000000001496         db  0x00 ; '.'
0000000000001497         db  0x00 ; '.'
0000000000001498         db  0x07 ; '.'
0000000000001499         db  0x00 ; '.'
000000000000149a         db  0x00 ; '.'
000000000000149b         db  0x00 ; '.'
000000000000149c         db  0x2e ; '.'
000000000000149d         db  0x00 ; '.'
000000000000149e         db  0x00 ; '.'
000000000000149f         db  0x00 ; '.'
00000000000014a0         db  0x00 ; '.'
00000000000014a1         db  0x00 ; '.'
00000000000014a2         db  0x00 ; '.'
00000000000014a3         db  0x00 ; '.'
00000000000014a4         db  0x00 ; '.'
00000000000014a5         db  0x00 ; '.'
00000000000014a6         db  0x00 ; '.'
00000000000014a7         db  0x00 ; '.'
00000000000014a8         db  0x78 ; 'x'
00000000000014a9         db  0x9f ; '.'
00000000000014aa         db  0x20 ; ' '
00000000000014ab         db  0x00 ; '.'
00000000000014ac         db  0x00 ; '.'
00000000000014ad         db  0x00 ; '.'
00000000000014ae         db  0x00 ; '.'
00000000000014af         db  0x00 ; '.'
00000000000014b0         db  0x07 ; '.'
00000000000014b1         db  0x00 ; '.'
00000000000014b2         db  0x00 ; '.'
00000000000014b3         db  0x00 ; '.'
00000000000014b4         db  0x2f ; '/'
00000000000014b5         db  0x00 ; '.'
00000000000014b6         db  0x00 ; '.'
00000000000014b7         db  0x00 ; '.'
00000000000014b8         db  0x00 ; '.'
00000000000014b9         db  0x00 ; '.'
00000000000014ba         db  0x00 ; '.'
00000000000014bb         db  0x00 ; '.'
00000000000014bc         db  0x00 ; '.'
00000000000014bd         db  0x00 ; '.'
00000000000014be         db  0x00 ; '.'
00000000000014bf         db  0x00 ; '.'
00000000000014c0         db  0x80 ; '.'
00000000000014c1         db  0x9f ; '.'
00000000000014c2         db  0x20 ; ' '
00000000000014c3         db  0x00 ; '.'
00000000000014c4         db  0x00 ; '.'
00000000000014c5         db  0x00 ; '.'
00000000000014c6         db  0x00 ; '.'
00000000000014c7         db  0x00 ; '.'
00000000000014c8         db  0x07 ; '.'
00000000000014c9         db  0x00 ; '.'
00000000000014ca         db  0x00 ; '.'
00000000000014cb         db  0x00 ; '.'
00000000000014cc         db  0x30 ; '0'
00000000000014cd         db  0x00 ; '.'
00000000000014ce         db  0x00 ; '.'
00000000000014cf         db  0x00 ; '.'
00000000000014d0         db  0x00 ; '.'
00000000000014d1         db  0x00 ; '.'
00000000000014d2         db  0x00 ; '.'
00000000000014d3         db  0x00 ; '.'
00000000000014d4         db  0x00 ; '.'
00000000000014d5         db  0x00 ; '.'
00000000000014d6         db  0x00 ; '.'
00000000000014d7         db  0x00 ; '.'
00000000000014d8         db  0x88 ; '.'
00000000000014d9         db  0x9f ; '.'
00000000000014da         db  0x20 ; ' '
00000000000014db         db  0x00 ; '.'
00000000000014dc         db  0x00 ; '.'
00000000000014dd         db  0x00 ; '.'
00000000000014de         db  0x00 ; '.'
00000000000014df         db  0x00 ; '.'
00000000000014e0         db  0x07 ; '.'
00000000000014e1         db  0x00 ; '.'
00000000000014e2         db  0x00 ; '.'
00000000000014e3         db  0x00 ; '.'
00000000000014e4         db  0x31 ; '1'
00000000000014e5         db  0x00 ; '.'
00000000000014e6         db  0x00 ; '.'
00000000000014e7         db  0x00 ; '.'
00000000000014e8         db  0x00 ; '.'
00000000000014e9         db  0x00 ; '.'
00000000000014ea         db  0x00 ; '.'
00000000000014eb         db  0x00 ; '.'
00000000000014ec         db  0x00 ; '.'
00000000000014ed         db  0x00 ; '.'
00000000000014ee         db  0x00 ; '.'
00000000000014ef         db  0x00 ; '.'
00000000000014f0         db  0x90 ; '.'
00000000000014f1         db  0x9f ; '.'
00000000000014f2         db  0x20 ; ' '
00000000000014f3         db  0x00 ; '.'
00000000000014f4         db  0x00 ; '.'
00000000000014f5         db  0x00 ; '.'
00000000000014f6         db  0x00 ; '.'
00000000000014f7         db  0x00 ; '.'
00000000000014f8         db  0x07 ; '.'
00000000000014f9         db  0x00 ; '.'
00000000000014fa         db  0x00 ; '.'
00000000000014fb         db  0x00 ; '.'
00000000000014fc         db  0x32 ; '2'
00000000000014fd         db  0x00 ; '.'
00000000000014fe         db  0x00 ; '.'
00000000000014ff         db  0x00 ; '.'
0000000000001500         db  0x00 ; '.'
0000000000001501         db  0x00 ; '.'
0000000000001502         db  0x00 ; '.'
0000000000001503         db  0x00 ; '.'
0000000000001504         db  0x00 ; '.'
0000000000001505         db  0x00 ; '.'
0000000000001506         db  0x00 ; '.'
0000000000001507         db  0x00 ; '.'
0000000000001508         db  0x98 ; '.'
0000000000001509         db  0x9f ; '.'
000000000000150a         db  0x20 ; ' '
000000000000150b         db  0x00 ; '.'
000000000000150c         db  0x00 ; '.'
000000000000150d         db  0x00 ; '.'
000000000000150e         db  0x00 ; '.'
000000000000150f         db  0x00 ; '.'
0000000000001510         db  0x07 ; '.'
0000000000001511         db  0x00 ; '.'
0000000000001512         db  0x00 ; '.'
0000000000001513         db  0x00 ; '.'
0000000000001514         db  0x33 ; '3'
0000000000001515         db  0x00 ; '.'
0000000000001516         db  0x00 ; '.'
0000000000001517         db  0x00 ; '.'
0000000000001518         db  0x00 ; '.'
0000000000001519         db  0x00 ; '.'
000000000000151a         db  0x00 ; '.'
000000000000151b         db  0x00 ; '.'
000000000000151c         db  0x00 ; '.'
000000000000151d         db  0x00 ; '.'
000000000000151e         db  0x00 ; '.'
000000000000151f         db  0x00 ; '.'
0000000000001520         db  0xa0 ; '.'
0000000000001521         db  0x9f ; '.'
0000000000001522         db  0x20 ; ' '
0000000000001523         db  0x00 ; '.'
0000000000001524         db  0x00 ; '.'
0000000000001525         db  0x00 ; '.'
0000000000001526         db  0x00 ; '.'
0000000000001527         db  0x00 ; '.'
0000000000001528         db  0x07 ; '.'
0000000000001529         db  0x00 ; '.'
000000000000152a         db  0x00 ; '.'
000000000000152b         db  0x00 ; '.'
000000000000152c         db  0x35 ; '5'
000000000000152d         db  0x00 ; '.'
000000000000152e         db  0x00 ; '.'
000000000000152f         db  0x00 ; '.'
0000000000001530         db  0x00 ; '.'
0000000000001531         db  0x00 ; '.'
0000000000001532         db  0x00 ; '.'
0000000000001533         db  0x00 ; '.'
0000000000001534         db  0x00 ; '.'
0000000000001535         db  0x00 ; '.'
0000000000001536         db  0x00 ; '.'
0000000000001537         db  0x00 ; '.'
0000000000001538         db  0xa8 ; '.'
0000000000001539         db  0x9f ; '.'
000000000000153a         db  0x20 ; ' '
000000000000153b         db  0x00 ; '.'
000000000000153c         db  0x00 ; '.'
000000000000153d         db  0x00 ; '.'
000000000000153e         db  0x00 ; '.'
000000000000153f         db  0x00 ; '.'
0000000000001540         db  0x07 ; '.'
0000000000001541         db  0x00 ; '.'
0000000000001542         db  0x00 ; '.'
0000000000001543         db  0x00 ; '.'
0000000000001544         db  0x36 ; '6'
0000000000001545         db  0x00 ; '.'
0000000000001546         db  0x00 ; '.'
0000000000001547         db  0x00 ; '.'
0000000000001548         db  0x00 ; '.'
0000000000001549         db  0x00 ; '.'
000000000000154a         db  0x00 ; '.'
000000000000154b         db  0x00 ; '.'
000000000000154c         db  0x00 ; '.'
000000000000154d         db  0x00 ; '.'
000000000000154e         db  0x00 ; '.'
000000000000154f         db  0x00 ; '.'
0000000000001550         db  0xb0 ; '.'
0000000000001551         db  0x9f ; '.'
0000000000001552         db  0x20 ; ' '
0000000000001553         db  0x00 ; '.'
0000000000001554         db  0x00 ; '.'
0000000000001555         db  0x00 ; '.'
0000000000001556         db  0x00 ; '.'
0000000000001557         db  0x00 ; '.'
0000000000001558         db  0x07 ; '.'
0000000000001559         db  0x00 ; '.'
000000000000155a         db  0x00 ; '.'
000000000000155b         db  0x00 ; '.'
000000000000155c         db  0x38 ; '8'
000000000000155d         db  0x00 ; '.'
000000000000155e         db  0x00 ; '.'
000000000000155f         db  0x00 ; '.'
0000000000001560         db  0x00 ; '.'
0000000000001561         db  0x00 ; '.'
0000000000001562         db  0x00 ; '.'
0000000000001563         db  0x00 ; '.'
0000000000001564         db  0x00 ; '.'
0000000000001565         db  0x00 ; '.'
0000000000001566         db  0x00 ; '.'
0000000000001567         db  0x00 ; '.'
0000000000001568         db  0xb8 ; '.'
0000000000001569         db  0x9f ; '.'
000000000000156a         db  0x20 ; ' '
000000000000156b         db  0x00 ; '.'
000000000000156c         db  0x00 ; '.'
000000000000156d         db  0x00 ; '.'
000000000000156e         db  0x00 ; '.'
000000000000156f         db  0x00 ; '.'
0000000000001570         db  0x07 ; '.'
0000000000001571         db  0x00 ; '.'
0000000000001572         db  0x00 ; '.'
0000000000001573         db  0x00 ; '.'
0000000000001574         db  0x39 ; '9'
0000000000001575         db  0x00 ; '.'
0000000000001576         db  0x00 ; '.'
0000000000001577         db  0x00 ; '.'
0000000000001578         db  0x00 ; '.'
0000000000001579         db  0x00 ; '.'
000000000000157a         db  0x00 ; '.'
000000000000157b         db  0x00 ; '.'
000000000000157c         db  0x00 ; '.'
000000000000157d         db  0x00 ; '.'
000000000000157e         db  0x00 ; '.'
000000000000157f         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x1580; 0x1597[ (23 bytes)
        ; File offset : [5504; 5527[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
0000000000001580         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
0000000000001584         mov        rax, qword [qword_209fd0]                   ; qword_209fd0
000000000000158b         test       rax, rax
000000000000158e         je         loc_1592

0000000000001590         call       rax

                     loc_1592:
0000000000001592         add        rsp, 0x8                                    ; CODE XREF=_init+14
0000000000001596         ret
                        ; endp
0000000000001597         db  0x00 ; '.'
0000000000001598         db  0x00 ; '.'
0000000000001599         db  0x00 ; '.'
000000000000159a         db  0x00 ; '.'
000000000000159b         db  0x00 ; '.'
000000000000159c         db  0x00 ; '.'
000000000000159d         db  0x00 ; '.'
000000000000159e         db  0x00 ; '.'
000000000000159f         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x15a0; 0x18f0[ (848 bytes)
        ; File offset : [5536; 6384[ (848 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_15a0:
00000000000015a0         push       qword [qword_209e10]                        ; Begin of unwind block (FDE at 0x85fc), qword_209e10, CODE XREF=sub_15b6+5
00000000000015a6         jmp        qword [qword_209e10+8]                      ; 0x209e18
                        ; endp
00000000000015ac         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
00000000000015b0         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=main+1956, md5_stream+196, md5_stream+289, quotearg_n_options+277, quotearg_free+55, quotearg_free+82, quotearg_free+120, xrealloc+40
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15b6:
00000000000015b6         push       0x0
00000000000015bb         jmp        loc_15a0


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
00000000000015c0         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=set_program_name+154, sub_4b10+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15c6:
00000000000015c6         push       0x1
00000000000015cb         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
00000000000015d0         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=main+2886, main+3627, digest_file.isra.1+133, digest_file.isra.1+287, digest_file.isra.1+328, close_stdout+22, fopen_safer+93, fopen_safer+120, quotearg_n_options+28, clone_quoting_options+7, quotearg_buffer+45
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15d6:
00000000000015d6         push       0x2
00000000000015db         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
00000000000015e0         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+796, usage+989
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15e6:
00000000000015e6         push       0x3
00000000000015eb         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
00000000000015f0         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15f6:
00000000000015f6         push       0x4
00000000000015fb         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
0000000000001600         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1606:
0000000000001606         push       0x5
000000000000160b         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fcntl:        // fcntl
0000000000001610         jmp        qword [fcntl@GOT]                           ; fcntl, fcntl@GOT, CODE XREF=rpl_fcntl+128, rpl_fcntl+212, rpl_fcntl+320, rpl_fcntl+407, rpl_fcntl+423, rpl_fcntl+460, rpl_fcntl+483, rpl_fcntl+559, rpl_fcntl+606
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1616:
0000000000001616         push       0x6
000000000000161b         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fread_unlocked:        // fread_unlocked
0000000000001620         jmp        qword [fread_unlocked@GOT]                  ; fread_unlocked, fread_unlocked@GOT, CODE XREF=md5_stream+146
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1626:
0000000000001626         push       0x7
000000000000162b         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
0000000000001630         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+98
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1636:
0000000000001636         push       0x8
000000000000163b         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
0000000000001640         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1646:
0000000000001646         push       0x9
000000000000164b         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
0000000000001650         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+86
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1656:
0000000000001656         push       0xa
000000000000165b         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
0000000000001660         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+701, main+1023, main+1420, main+1901, main+2290, main+3216, main+3431, main+3619, main+4121, usage+56, usage+102
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1666:
0000000000001666         push       0xb
000000000000166b         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
0000000000001670         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1676:
0000000000001676         push       0xc
000000000000167b         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
0000000000001680         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=quotearg_buffer_restyled+343, sub_4b10+411, sub_4b10+1742, xstrdup+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1686:
0000000000001686         push       0xd
000000000000168b         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
0000000000001690         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=main+4323, md5_buffer+128, md5_stream+301, sub_4b10+2739, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137, quotearg_n_custom_mem+140, version_etc_va+101, version_etc+192
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1696:
0000000000001696         push       0xe
000000000000169b         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
00000000000016a0         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+175
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16a6:
00000000000016a6         push       0xf
00000000000016ab         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
00000000000016b0         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16b6:
00000000000016b6         push       0x10
00000000000016bb         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strchr:        // strchr
00000000000016c0         jmp        qword [strchr@GOT]                          ; strchr, strchr@GOT, CODE XREF=main+1765, main+2929, main+3931
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16c6:
00000000000016c6         push       0x11
00000000000016cb         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___overflow:        // __overflow
00000000000016d0         jmp        qword [__overflow@GOT]                      ; __overflow, __overflow@GOT, CODE XREF=main+4186, main+4201, main+4216, main+4230, main+4245, main+4270, main+4295, print_filename+187
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16d6:
00000000000016d6         push       0x12
00000000000016db         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
00000000000016e0         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16e6:
00000000000016e6         push       0x13
00000000000016eb         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
00000000000016f0         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16f6:
00000000000016f6         push       0x14
00000000000016fb         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
0000000000001700         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1706:
0000000000001706         push       0x15
000000000000170b         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_close:        // close
0000000000001710         jmp        qword [close@GOT]                           ; close, close@GOT, CODE XREF=fopen_safer+106, rpl_fcntl+510
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1716:
0000000000001716         push       0x16
000000000000171b         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_posix_fadvise:        // posix_fadvise
0000000000001720         jmp        qword [posix_fadvise@GOT]                   ; posix_fadvise, posix_fadvise@GOT, CODE XREF=fdadvise, fadvise+22
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1726:
0000000000001726         push       0x17
000000000000172b         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
0000000000001730         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=quotearg_buffer_restyled+410
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1736:
0000000000001736         push       0x18
000000000000173b         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
0000000000001740         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=print_filename+173, usage+170, usage+207, usage+285, usage+322, usage+359, usage+396, usage+433, usage+477, usage+1104, version_etc_arn+135
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1746:
0000000000001746         push       0x19
000000000000174b         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
0000000000001750         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1756:
0000000000001756         push       0x1a
000000000000175b         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___getdelim:        // __getdelim
0000000000001760         jmp        qword [__getdelim@GOT]                      ; __getdelim, __getdelim@GOT, CODE XREF=main+1170
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1766:
0000000000001766         push       0x1b
000000000000176b         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
0000000000001770         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=md5_process_bytes+249, md5_process_bytes+367, xmemdup+35
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1776:
0000000000001776         push       0x1c
000000000000177b         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
0000000000001780         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=fadvise+8, fopen_safer+23, rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1786:
0000000000001786         push       0x1d
000000000000178b         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
0000000000001790         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=md5_stream+47, xmalloc+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1796:
0000000000001796         push       0x1e
000000000000179b         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
00000000000017a0         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17a6:
00000000000017a6         push       0x1f
00000000000017ab         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
00000000000017b0         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17b6:
00000000000017b6         push       0x20
00000000000017bb         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
00000000000017c0         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17c6:
00000000000017c6         push       0x21
00000000000017cb         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite_unlocked:        // fwrite_unlocked
00000000000017d0         jmp        qword [fwrite_unlocked@GOT]                 ; fwrite_unlocked, fwrite_unlocked@GOT, CODE XREF=main+3759, main+3788, main+3832, main+3976, main+4005, main+4046, print_filename+57, print_filename+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17d6:
00000000000017d6         push       0x22
00000000000017db         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
00000000000017e0         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17e6:
00000000000017e6         push       0x23
00000000000017eb         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fdopen:        // fdopen
00000000000017f0         jmp        qword [fdopen@GOT]                          ; fdopen, fdopen@GOT, CODE XREF=fopen_safer+80
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17f6:
00000000000017f6         push       0x24
00000000000017fb         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
0000000000001800         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+67, usage+771, usage+964, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1806:
0000000000001806         push       0x25
000000000000180b         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
0000000000001810         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=main+1923, main+3015, usage+133, usage+248, usage+518, usage+759, usage+852, usage+913, usage+952, usage+1055, emit_bug_reporting_address+37
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1816:
0000000000001816         push       0x26
000000000000181b         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setvbuf:        // setvbuf
0000000000001820         jmp        qword [setvbuf@GOT]                         ; setvbuf, setvbuf@GOT, CODE XREF=main+131
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1826:
0000000000001826         push       0x27
000000000000182b         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
0000000000001830         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+715, main+1440, main+2056, main+2116, main+2176, main+2317, main+2907, main+3233, main+3455, main+3644, main+4138
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1836:
0000000000001836         push       0x28
000000000000183b         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
0000000000001840         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1846:
0000000000001846         push       0x29
000000000000184b         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fopen:        // fopen
0000000000001850         jmp        qword [fopen@GOT]                           ; fopen, fopen@GOT, CODE XREF=fopen_safer+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1856:
0000000000001856         push       0x2a
000000000000185b         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcngettext:        // dcngettext
0000000000001860         jmp        qword [dcngettext@GOT]                      ; dcngettext, dcngettext@GOT, CODE XREF=main+2039, main+2099, main+2159
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1866:
0000000000001866         push       0x2b
000000000000186b         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000001870         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1876:
0000000000001876         push       0x2c
000000000000187b         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000001880         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+408, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1886:
0000000000001886         push       0x2d
000000000000188b         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
0000000000001890         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1896:
0000000000001896         push       0x2e
000000000000189b         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
00000000000018a0         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642, version_etc_arn+718, version_etc_arn+872
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18a6:
00000000000018a6         push       0x2f
00000000000018ab         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
00000000000018b0         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_4b10+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18b6:
00000000000018b6         push       0x30
00000000000018bb         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
00000000000018c0         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_4b10+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18c6:
00000000000018c6         push       0x31
00000000000018cb         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_tolower_loc:        // __ctype_tolower_loc
00000000000018d0         jmp        qword [__ctype_tolower_loc@GOT]             ; __ctype_tolower_loc, __ctype_tolower_loc@GOT, CODE XREF=main+2390
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18d6:
00000000000018d6         push       0x32
00000000000018db         jmp        0x15a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
00000000000018e0         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=hex_digits+21, sub_48b0+51
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18e6:
00000000000018e6         push       0x33
00000000000018eb         jmp        0x15a0
                        ; endp


        ; Section .plt.got
        ; Range: [0x18f0; 0x18f8[ (8 bytes)
        ; File offset : [6384; 6392[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_209fe0:        // qword_209fe0
00000000000018f0         jmp        qword [qword_209fe0]                        ; qword, End of unwind block (FDE at 0x85fc), Begin of unwind block (FDE at 0x8624), qword_209fe0, CODE XREF=__do_global_dtors_aux+30
                        ; endp
00000000000018f6         align      8
00000000000018f8         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x8624)
00000000000018f9         db  0x00 ; '.'
00000000000018fa         db  0x00 ; '.'
00000000000018fb         db  0x00 ; '.'
00000000000018fc         db  0x00 ; '.'
00000000000018fd         db  0x00 ; '.'
00000000000018fe         db  0x00 ; '.'
00000000000018ff         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x1900; 0x6e0e[ (21774 bytes)
        ; File offset : [6400; 28174[ (21774 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_58: int8_t, -88
        ;    var_78: int8_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_89: int8_t, -137
        ;    var_9C: int32_t, -156
        ;    var_9D: int8_t, -157
        ;    var_9E: int8_t, -158
        ;    var_9F: int8_t, -159
        ;    var_A0: int8_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_E0: int64_t, -224
        ;    var_E8: int64_t, -232
        ;    var_EC: int32_t, -236
        ;    var_ED: int8_t, -237
        ;    var_F8: int64_t, -248
        ;    var_100: int64_t, -256
        ;    var_108: int64_t, -264
        ;    var_110: int64_t, -272


                     main:
0000000000001900         push       r15                                         ; Begin of unwind block (FDE at 0x8738), DATA XREF=_start+29
0000000000001902         push       r14
0000000000001904         push       r13
0000000000001906         push       r12
0000000000001908         mov        r12d, edi
000000000000190b         push       rbp
000000000000190c         push       rbx
000000000000190d         mov        rbx, rsi
0000000000001910         mov        ebp, 0xffffffff
0000000000001915         sub        rsp, 0xe8
000000000000191c         mov        rdi, qword [rsi]
000000000000191f         mov        rax, qword [fs:0x28]
0000000000001928         mov        qword [rsp+0x118+var_40], rax
0000000000001930         xor        eax, eax
0000000000001932         call       set_program_name                            ; set_program_name
0000000000001937         lea        rsi, qword [aWrittenBySSAnd+27]             ; argument "__locale" for method j_setlocale, 0x7fc1
000000000000193e         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
0000000000001943         call       j_setlocale                                 ; setlocale
0000000000001948         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
000000000000194f         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
0000000000001956         call       j_bindtextdomain                            ; bindtextdomain
000000000000195b         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
0000000000001962         call       j_textdomain                                ; textdomain
0000000000001967         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
000000000000196e         call       atexit                                      ; atexit
0000000000001973         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_setvbuf, stdout@@GLIBC_2.2.5
000000000000197a         xor        ecx, ecx                                    ; argument "__n" for method j_setvbuf
000000000000197c         mov        edx, 0x1                                    ; argument "__modes" for method j_setvbuf
0000000000001981         xor        esi, esi                                    ; argument "__buf" for method j_setvbuf
0000000000001983         call       j_setvbuf                                   ; setvbuf
0000000000001988         mov        byte [rsp+0x118+var_A0], 0x0
000000000000198d         mov        byte [rsp+0x118+var_ED], 0x0
0000000000001992         nop        word [rax+rax]

                     loc_1998:
0000000000001998         lea        rcx, qword [long_options]                   ; argument "__longopts" for method j_getopt_long, long_options, CODE XREF=main+251, main+287, main+321, main+437, main+469, main+487, main+517, main+533, main+549, main+567
000000000000199f         lea        rdx, qword [aBctwz]                         ; argument "__shortopts" for method j_getopt_long, "bctwz"
00000000000019a6         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
00000000000019a9         mov        rsi, rbx                                    ; argument "___argv" for method j_getopt_long
00000000000019ac         mov        edi, r12d                                   ; argument "___argc" for method j_getopt_long
00000000000019af         call       j_getopt_long                               ; getopt_long
00000000000019b4         cmp        eax, 0xffffffff
00000000000019b7         je         loc_1b3c

00000000000019bd         cmp        eax, 0x77
00000000000019c0         je         loc_1aa0

00000000000019c6         jle        loc_1a00

00000000000019c8         cmp        eax, 0x81
00000000000019cd         je         loc_1af0

00000000000019d3         jle        loc_1a28

00000000000019d5         cmp        eax, 0x83
00000000000019da         je         loc_1ae0

00000000000019e0         jl         loc_1ac0

00000000000019e6         cmp        eax, 0x84
00000000000019eb         jne        loc_1bd0

00000000000019f1         mov        byte [rsp+0x118+var_A0], 0x1
00000000000019f6         mov        ebp, 0x1
00000000000019fb         jmp        loc_1998
00000000000019fd         align      512

                     loc_1a00:
0000000000001a00         cmp        eax, 0x62                                   ; CODE XREF=main+198
0000000000001a03         je         loc_1b20

0000000000001a09         jle        loc_1a50

0000000000001a0b         cmp        eax, 0x63
0000000000001a0e         je         loc_1b10

0000000000001a14         cmp        eax, 0x74
0000000000001a17         jne        loc_1bd0

0000000000001a1d         xor        ebp, ebp
0000000000001a1f         jmp        loc_1998
0000000000001a24         align      8

                     loc_1a28:
0000000000001a28         cmp        eax, 0x7a                                   ; CODE XREF=main+211
0000000000001a2b         je         loc_1b30

0000000000001a31         add        eax, 0xffffff80
0000000000001a34         jne        loc_1bd0

0000000000001a3a         mov        byte [ignore_missing], 0x1                  ; ignore_missing
0000000000001a41         jmp        loc_1998
0000000000001a46         align      16

                     loc_1a50:
0000000000001a50         cmp        eax, 0xffffff7d                             ; CODE XREF=main+265
0000000000001a55         jne        loc_29d1

0000000000001a5b         lea        rax, qword [aDavidMadore]                   ; "David Madore"
0000000000001a62         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001a69         mov        rcx, qword [Version]                        ; Version
0000000000001a70         push       0x0
0000000000001a72         lea        r9, qword [aScottMiller]                    ; "Scott Miller"
0000000000001a79         lea        r8, qword [aUlrichDrepper]                  ; "Ulrich Drepper"
0000000000001a80         push       rax
0000000000001a81         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6eb4
0000000000001a88         lea        rsi, qword [aMd5sum]                        ; "md5sum"
0000000000001a8f         xor        eax, eax
0000000000001a91         call       version_etc                                 ; version_etc
0000000000001a96         xor        edi, edi                                    ; argument "__status" for method j_exit
0000000000001a98         call       j_exit                                      ; exit
                        ; endp
0000000000001a9d         align      32

                     loc_1aa0:
0000000000001aa0         mov        byte [status_only], 0x0                     ; status_only, CODE XREF=main+192
0000000000001aa7         mov        byte [warn], 0x1                            ; warn
0000000000001aae         mov        byte [quiet], 0x0                           ; quiet
0000000000001ab5         jmp        loc_1998
0000000000001aba         align      64

                     loc_1ac0:
0000000000001ac0         mov        byte [status_only], 0x0                     ; status_only, CODE XREF=main+224
0000000000001ac7         mov        byte [warn], 0x0                            ; warn
0000000000001ace         mov        byte [quiet], 0x1                           ; quiet
0000000000001ad5         jmp        loc_1998
0000000000001ada         align      32

                     loc_1ae0:
0000000000001ae0         mov        byte [strict], 0x1                          ; strict, CODE XREF=main+218
0000000000001ae7         jmp        loc_1998
0000000000001aec         align      16

                     loc_1af0:
0000000000001af0         mov        byte [status_only], 0x1                     ; status_only, CODE XREF=main+205
0000000000001af7         mov        byte [warn], 0x0                            ; warn
0000000000001afe         mov        byte [quiet], 0x0                           ; quiet
0000000000001b05         jmp        loc_1998
0000000000001b0a         align      16

                     loc_1b10:
0000000000001b10         mov        byte [rsp+0x118+var_ED], 0x1                ; CODE XREF=main+270
0000000000001b15         jmp        loc_1998
0000000000001b1a         align      32

                     loc_1b20:
0000000000001b20         mov        ebp, 0x1                                    ; CODE XREF=main+259
0000000000001b25         jmp        loc_1998
0000000000001b2a         align      16

                     loc_1b30:
0000000000001b30         mov        byte [delim], 0x0                           ; delim, CODE XREF=main+299
0000000000001b37         jmp        loc_1998

                     loc_1b3c:
0000000000001b3c         test       ebp, ebp                                    ; CODE XREF=main+183
0000000000001b3e         mov        qword [min_digest_line_length], 0x22        ; min_digest_line_length
0000000000001b49         mov        qword [digest_hex_bytes], 0x20              ; digest_hex_bytes
0000000000001b54         sete       al
0000000000001b57         test       byte [rsp+0x118+var_A0], al
0000000000001b5b         jne        loc_2a1b

0000000000001b61         cmp        byte [delim], 0xa                           ; delim
0000000000001b68         je         loc_1bda

0000000000001b6a         cmp        byte [rsp+0x118+var_ED], 0x0
0000000000001b6f         mov        edx, 0x5
0000000000001b74         lea        rsi, qword [aTheZeroOptionI]                ; "the --zero option is not supported when verifying checksums"
0000000000001b7b         jne        loc_1bbb

0000000000001b7d         cmp        byte [ignore_missing], 0x0                  ; ignore_missing
0000000000001b84         jne        loc_2a2c

0000000000001b8a         cmp        byte [status_only], 0x0                     ; status_only
0000000000001b91         jne        loc_2a00

                     loc_1b97:
0000000000001b97         cmp        byte [warn], 0x0                            ; warn, CODE XREF=main+4335
0000000000001b9e         je         loc_1ea5

0000000000001ba4         cmp        byte [rsp+0x118+var_ED], 0x0
0000000000001ba9         mov        edx, 0x5
0000000000001bae         lea        rsi, qword [aTheWarnOptionI]                ; "the --warn option is meaningful only when verifying checksums"
0000000000001bb5         jne        loc_1c3d

                     loc_1bbb:
0000000000001bbb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=main+635, main+754, main+777, main+1471, main+1513, main+4364, main+4391, main+4408
0000000000001bbd         call       j_dcgettext                                 ; dcgettext
0000000000001bc2         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001bc4         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001bc7         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001bc9         xor        eax, eax
0000000000001bcb         call       j_error                                     ; error

                     loc_1bd0:
0000000000001bd0         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=main+235, main+279, main+308, main+4310
0000000000001bd5         call       usage                                       ; usage

                     loc_1bda:
0000000000001bda         cmp        byte [rsp+0x118+var_ED], 0x0                ; CODE XREF=main+616
0000000000001bdf         je         loc_1bf4

0000000000001be1         cmp        byte [rsp+0x118+var_A0], 0x0
0000000000001be6         mov        edx, 0x5
0000000000001beb         lea        rsi, qword [aTheTagOptionIs]                ; "the --tag option is meaningless when verifying checksums"
0000000000001bf2         jne        loc_1bbb

                     loc_1bf4:
0000000000001bf4         test       ebp, ebp                                    ; CODE XREF=main+735
0000000000001bf6         js         loc_1c0b

0000000000001bf8         cmp        byte [rsp+0x118+var_ED], 0x0
0000000000001bfd         mov        edx, 0x5
0000000000001c02         lea        rsi, qword [aTheBinaryAndTe]                ; "the --binary and --text options are meaningless when verifying checksums"
0000000000001c09         jne        loc_1bbb

                     loc_1c0b:
0000000000001c0b         cmp        byte [ignore_missing], 0x0                  ; ignore_missing, CODE XREF=main+758
0000000000001c12         je         loc_29e8

0000000000001c18         cmp        byte [rsp+0x118+var_ED], 0x0
0000000000001c1d         je         loc_2a2c

0000000000001c23         cmp        byte [status_only], 0x0                     ; status_only
0000000000001c2a         je         loc_25ad

0000000000001c30         cmp        byte [warn], 0x0                            ; warn
0000000000001c37         je         loc_1ea5

                     loc_1c3d:
0000000000001c3d         cmp        ebp, 0xffffffff                             ; CODE XREF=main+693, main+1484, main+1507, main+3252
0000000000001c40         jne        loc_1c44

0000000000001c42         xor        ebp, ebp

                     loc_1c44:
0000000000001c44         movsxd     rax, r12d                                   ; CODE XREF=main+832
0000000000001c47         lea        rax, qword [rbx+rax*8]
0000000000001c4b         mov        qword [rsp+0x118+var_D0], rax
0000000000001c50         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5
0000000000001c57         cmp        eax, r12d
0000000000001c5a         jne        loc_1c75

0000000000001c5c         mov        rdi, qword [rsp+0x118+var_D0]
0000000000001c61         lea        rsi, qword [aLibs+10]                       ; 0x7a82
0000000000001c68         add        rdi, 0x8
0000000000001c6c         mov        qword [rdi-8], rsi
0000000000001c70         mov        qword [rsp+0x118+var_D0], rdi

                     loc_1c75:
0000000000001c75         lea        rax, qword [rbx+rax*8]                      ; CODE XREF=main+858
0000000000001c79         cmp        qword [rsp+0x118+var_D0], rax
0000000000001c7e         mov        qword [rsp+0x118+var_100], rax
0000000000001c83         jbe        loc_2934

0000000000001c89         cmp        ebp, 0x1
0000000000001c8c         lea        r14, qword [bin2hex.7139]                   ; "0123456789abcdef8.31"
0000000000001c93         mov        byte [rsp+0x118+var_9F], 0x1
0000000000001c98         sbb        eax, eax
0000000000001c9a         and        eax, 0xfffffff6
0000000000001c9d         add        eax, 0x2a
0000000000001ca0         mov        dword [rsp+0x118+var_9C], eax
0000000000001ca4         mov        byte [rsp+0x118+var_9D], al
0000000000001ca8         nop        dword [rax+rax]

                     loc_1cb0:
0000000000001cb0         mov        rax, qword [rsp+0x118+var_100]              ; CODE XREF=main+2685
0000000000001cb5         cmp        byte [rsp+0x118+var_ED], 0x0
0000000000001cba         mov        rsi, qword [rax]
0000000000001cbd         mov        qword [rsp+0x118+var_F8], rsi
0000000000001cc2         je         loc_2340

0000000000001cc8         lea        rdi, qword [aLibs+10]                       ; 0x7a82
0000000000001ccf         mov        ecx, 0x2
0000000000001cd4         rep  cmpsb byte [rsi], byte [rdi]
0000000000001cd6         seta       al
0000000000001cd9         sbb        al, 0x0
0000000000001cdb         movsx      eax, al
0000000000001cde         test       eax, eax
0000000000001ce0         mov        dword [rsp+0x118+var_EC], eax
0000000000001ce4         jne        loc_2415

0000000000001cea         lea        rsi, qword [aStandardInput]                 ; argument "msgid" for method j_dcgettext, "standard input"
0000000000001cf1         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001cf6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001cf8         mov        byte [have_read_stdin], 0x1                 ; have_read_stdin
0000000000001cff         call       j_dcgettext                                 ; dcgettext
0000000000001d04         mov        r12, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5
0000000000001d0b         mov        qword [rsp+0x118+var_F8], rax

                     loc_1d10:
0000000000001d10         lea        rax, qword [rsp+0x118+var_80]               ; CODE XREF=main+2860
0000000000001d18         mov        qword [rsp+0x118+var_88], 0x0
0000000000001d24         mov        qword [rsp+0x118+var_80], 0x0
0000000000001d30         mov        byte [rsp+0x118+var_9E], 0x0
0000000000001d35         mov        byte [rsp+0x118+var_E8], 0x0
0000000000001d3a         xor        r13d, r13d
0000000000001d3d         mov        qword [rsp+0x118+var_108], rax
0000000000001d42         lea        rax, qword [rsp+0x118+var_88]
0000000000001d4a         mov        qword [rsp+0x118+var_C0], 0x0
0000000000001d53         mov        qword [rsp+0x118+var_C8], 0x0
0000000000001d5c         mov        ebp, 0x1
0000000000001d61         mov        qword [rsp+0x118+var_110], rax
0000000000001d66         lea        rax, qword [rsp+0x118+var_89]
0000000000001d6e         mov        qword [rsp+0x118+var_D8], rax
0000000000001d73         lea        rax, qword [rsp+0x118+var_58]
0000000000001d7b         mov        qword [rsp+0x118+var_E0], rax

                     loc_1d80:
0000000000001d80         mov        rsi, qword [rsp+0x118+var_108]              ; argument "__n" for method j___getdelim, CODE XREF=main+1380
0000000000001d85         mov        rdi, qword [rsp+0x118+var_110]              ; argument "__lineptr" for method j___getdelim
0000000000001d8a         mov        rcx, r12                                    ; argument "__stream" for method j___getdelim
0000000000001d8d         mov        edx, 0xa                                    ; argument "__delimiter" for method j___getdelim
0000000000001d92         call       j___getdelim                                ; __getdelim
0000000000001d97         test       rax, rax
0000000000001d9a         jle        loc_209c

0000000000001da0         mov        rbx, qword [rsp+0x118+var_88]
0000000000001da8         movzx      ecx, byte [rbx]
0000000000001dab         cmp        cl, 0x23
0000000000001dae         je         loc_1e55

0000000000001db4         cmp        byte [rbx+rax-1], 0xa
0000000000001db9         mov        r15, rax
0000000000001dbc         jne        loc_1dd2

0000000000001dbe         sub        r15, 0x1
0000000000001dc2         mov        byte [rbx+r15], 0x0
0000000000001dc7         mov        rbx, qword [rsp+0x118+var_88]
0000000000001dcf         movzx      ecx, byte [rbx]

                     loc_1dd2:
0000000000001dd2         cmp        cl, 0x9                                     ; CODE XREF=main+1212
0000000000001dd5         je         loc_1dde

0000000000001dd7         xor        edx, edx
0000000000001dd9         cmp        cl, 0x20
0000000000001ddc         jne        loc_1df2

                     loc_1dde:
0000000000001dde         xor        edx, edx                                    ; CODE XREF=main+1237

                     loc_1de0:
0000000000001de0         add        rdx, 0x1                                    ; CODE XREF=main+1259, main+1264
0000000000001de4         movzx      ecx, byte [rbx+rdx]
0000000000001de8         cmp        cl, 0x20
0000000000001deb         je         loc_1de0

0000000000001ded         cmp        cl, 0x9
0000000000001df0         je         loc_1de0

                     loc_1df2:
0000000000001df2         xor        r9d, r9d                                    ; CODE XREF=main+1244
0000000000001df5         cmp        cl, 0x5c
0000000000001df8         jne        loc_1e04

0000000000001dfa         movzx      r9d, byte [rsp+0x118+var_ED]
0000000000001e00         add        rdx, 0x1

                     loc_1e04:
0000000000001e04         lea        r8, qword [rbx+rdx]                         ; CODE XREF=main+1272
0000000000001e08         lea        rdi, qword [aMd5sum+7]                      ; 0x6e31
0000000000001e0f         mov        ecx, 0x3
0000000000001e14         mov        rsi, r8
0000000000001e17         rep  cmpsb byte [rsi], byte [rdi]
0000000000001e19         seta       al
0000000000001e1c         sbb        al, 0x0
0000000000001e1e         test       al, al
0000000000001e20         jne        loc_1ef0

0000000000001e26         movzx      eax, byte [rbx+rdx+3]
0000000000001e2b         lea        rcx, qword [rdx+3]
0000000000001e2f         cmp        al, 0x20
0000000000001e31         jne        loc_1e3c

0000000000001e33         movzx      eax, byte [rbx+rdx+4]
0000000000001e38         lea        rcx, qword [rdx+4]

                     loc_1e3c:
0000000000001e3c         cmp        al, 0x28                                    ; CODE XREF=main+1329
0000000000001e3e         je         loc_23c4

                     loc_1e44:
0000000000001e44         add        r13, 0x1                                    ; CODE XREF=main+1545, main+1571, main+1605, main+1674, main+1734, main+2763, main+2820, main+3507, main+3687, main+4178
0000000000001e48         cmp        byte [warn], 0x0                            ; warn
0000000000001e4f         jne        loc_21d0

                     loc_1e55:
0000000000001e55         test       byte [r12], 0x30                            ; CODE XREF=main+1198, main+2322
0000000000001e5a         jne        loc_209c

                     loc_1e60:
0000000000001e60         add        rbp, 0x1                                    ; CODE XREF=main+1942
0000000000001e64         jne        loc_1d80

0000000000001e6a         mov        rdx, qword [rsp+0x118+var_F8]
0000000000001e6f         mov        esi, 0x3
0000000000001e74         xor        edi, edi
0000000000001e76         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000001e7b         lea        rsi, qword [aSTooManyChecks]                ; argument "msgid" for method j_dcgettext, "%s: too many checksum lines"
0000000000001e82         mov        rbx, rax
0000000000001e85         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001e8a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001e8c         call       j_dcgettext                                 ; dcgettext
0000000000001e91         mov        rcx, rbx
0000000000001e94         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001e97         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001e99         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001e9e         xor        eax, eax
0000000000001ea0         call       j_error                                     ; error

                     loc_1ea5:
0000000000001ea5         cmp        byte [quiet], 0x1                           ; quiet, CODE XREF=main+670, main+823
0000000000001eac         jne        loc_1ec5

0000000000001eae         cmp        byte [rsp+0x118+var_ED], 0x0
0000000000001eb3         mov        edx, 0x5
0000000000001eb8         lea        rsi, qword [aTheQuietOption]                ; "the --quiet option is meaningful only when verifying checksums"
0000000000001ebf         je         loc_1bbb

                     loc_1ec5:
0000000000001ec5         cmp        byte [strict], 0x0                          ; strict, CODE XREF=main+1452, main+3258
0000000000001ecc         je         loc_1c3d

0000000000001ed2         cmp        byte [rsp+0x118+var_ED], 0x0
0000000000001ed7         mov        edx, 0x5
0000000000001edc         lea        rsi, qword [aTheStrictOptio]                ; "the --strict option is meaningful only when verifying checksums"
0000000000001ee3         jne        loc_1c3d

0000000000001ee9         jmp        loc_1bbb
0000000000001eee         align      16

                     loc_1ef0:
0000000000001ef0         mov        rcx, r15                                    ; CODE XREF=main+1312
0000000000001ef3         xor        eax, eax
0000000000001ef5         sub        rcx, rdx
0000000000001ef8         cmp        byte [r8], 0x5c
0000000000001efc         sete       al
0000000000001eff         add        rax, qword [min_digest_line_length]         ; min_digest_line_length
0000000000001f06         cmp        rcx, rax
0000000000001f09         jb         loc_1e44

0000000000001f0f         add        rdx, qword [digest_hex_bytes]               ; digest_hex_bytes
0000000000001f16         lea        rcx, qword [rbx+rdx]
0000000000001f1a         movzx      eax, byte [rcx]
0000000000001f1d         cmp        al, 0x20
0000000000001f1f         je         loc_1f29

0000000000001f21         cmp        al, 0x9
0000000000001f23         jne        loc_1e44

                     loc_1f29:
0000000000001f29         mov        byte [rcx], 0x0                             ; CODE XREF=main+1567
0000000000001f2c         mov        rdi, r8
0000000000001f2f         mov        qword [rsp+0x118+var_A8], rdx
0000000000001f34         mov        byte [rsp+0x118+var_B0], r9b
0000000000001f39         mov        qword [rsp+0x118+var_B8], r8
0000000000001f3e         call       hex_digits                                  ; hex_digits
0000000000001f43         test       al, al
0000000000001f45         je         loc_1e44

0000000000001f4b         mov        rdx, qword [rsp+0x118+var_A8]
0000000000001f50         mov        rcx, r15
0000000000001f53         mov        esi, dword [bsd_reversed]                   ; bsd_reversed
0000000000001f59         mov        r8, qword [rsp+0x118+var_B8]
0000000000001f5e         movzx      r9d, byte [rsp+0x118+var_B0]
0000000000001f64         lea        rax, qword [rdx+1]
0000000000001f68         sub        rcx, rax
0000000000001f6b         sub        rcx, 0x1
0000000000001f6f         je         loc_1f88

0000000000001f71         movzx      ecx, byte [rbx+rdx+1]
0000000000001f76         cmp        cl, 0x20
0000000000001f79         je         loc_26e4

0000000000001f7f         cmp        cl, 0x2a
0000000000001f82         je         loc_26e4

                     loc_1f88:
0000000000001f88         test       esi, esi                                    ; CODE XREF=main+1647
0000000000001f8a         je         loc_1e44

0000000000001f90         mov        dword [bsd_reversed], 0x1                   ; bsd_reversed

                     loc_1f9a:
0000000000001f9a         add        rbx, rax                                    ; CODE XREF=main+3559, main+3579
0000000000001f9d         test       r9b, r9b
0000000000001fa0         jne        loc_2741

                     loc_1fa6:
0000000000001fa6         mov        eax, dword [rsp+0x118+var_EC]               ; CODE XREF=main+3681
0000000000001faa         test       eax, eax
0000000000001fac         jne        loc_1fcc

0000000000001fae         lea        rdi, qword [aLibs+10]                       ; 0x7a82
0000000000001fb5         mov        ecx, 0x2
0000000000001fba         mov        rsi, rbx
0000000000001fbd         rep  cmpsb byte [rsi], byte [rdi]
0000000000001fbf         seta       al
0000000000001fc2         sbb        al, 0x0
0000000000001fc4         test       al, al
0000000000001fc6         je         loc_1e44

                     loc_1fcc:
0000000000001fcc         xor        r15d, r15d                                  ; CODE XREF=main+1708
0000000000001fcf         cmp        byte [status_only], 0x0                     ; status_only
0000000000001fd6         jne        loc_1ff9

0000000000001fd8         mov        esi, 0xa                                    ; argument "__c" for method j_strchr
0000000000001fdd         mov        rdi, rbx                                    ; argument "__s" for method j_strchr
0000000000001fe0         mov        qword [rsp+0x118+var_E8], r8
0000000000001fe5         call       j_strchr                                    ; strchr
0000000000001fea         mov        r8, qword [rsp+0x118+var_E8]
0000000000001fef         xor        r15d, r15d
0000000000001ff2         test       rax, rax
0000000000001ff5         setne      r15b

                     loc_1ff9:
0000000000001ff9         mov        rdx, qword [rsp+0x118+var_D8]               ; CODE XREF=main+1750
0000000000001ffe         mov        rsi, qword [rsp+0x118+var_E0]
0000000000002003         mov        rdi, rbx
0000000000002006         mov        qword [rsp+0x118+var_E8], r8
000000000000200b         call       digest_file.isra.1                          ; digest_file.isra.1
0000000000002010         test       al, al
0000000000002012         mov        r9d, eax
0000000000002015         mov        r8, qword [rsp+0x118+var_E8]
000000000000201a         jne        loc_2220

0000000000002020         add        qword [rsp+0x118+var_C8], 0x1
0000000000002026         cmp        byte [status_only], 0x0                     ; status_only
000000000000202d         jne        loc_2088

000000000000202f         test       r15d, r15d
0000000000002032         je         loc_2054

0000000000002034         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000203b         mov        rax, qword [rdi+0x28]
000000000000203f         cmp        rax, qword [rdi+0x30]
0000000000002043         jae        loc_2964

0000000000002049         lea        rdx, qword [rax+1]
000000000000204d         mov        qword [rdi+0x28], rdx
0000000000002051         mov        byte [rax], 0x5c

                     loc_2054:
0000000000002054         mov        esi, r15d                                   ; CODE XREF=main+1842, main+4206
0000000000002057         mov        rdi, rbx
000000000000205a         call       print_filename                              ; print_filename
000000000000205f         lea        rsi, qword [aFailedOpenOrRe]                ; "FAILED open or read"
0000000000002066         mov        edx, 0x5

                     loc_206b:
000000000000206b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=main+2617, main+3363
000000000000206d         call       j_dcgettext                                 ; dcgettext
0000000000002072         lea        rsi, qword [aSn]                            ; ": %s\\n"
0000000000002079         mov        rdx, rax
000000000000207c         mov        edi, 0x1
0000000000002081         xor        eax, eax
0000000000002083         call       j___printf_chk                              ; __printf_chk

                     loc_2088:
0000000000002088         movzx      eax, byte [rsp+0x118+var_ED]                ; CODE XREF=main+1837, main+2353, main+2516, main+3278, main+3297, main+3345
000000000000208d         test       byte [r12], 0x30
0000000000002092         mov        byte [rsp+0x118+var_E8], al
0000000000002096         je         loc_1e60

                     loc_209c:
000000000000209c         mov        rdi, qword [rsp+0x118+var_88]               ; argument "__ptr" for method j_free, CODE XREF=main+1178, main+1370
00000000000020a4         call       j_free                                      ; free
00000000000020a9         mov        ebx, dword [r12]
00000000000020ad         and        ebx, 0x20
00000000000020b0         jne        loc_256e

00000000000020b6         cmp        dword [rsp+0x118+var_EC], 0x0
00000000000020bb         jne        loc_2628

                     loc_20c1:
00000000000020c1         cmp        byte [rsp+0x118+var_E8], 0x0                ; CODE XREF=main+3378
00000000000020c6         je         loc_2645

00000000000020cc         cmp        byte [status_only], 0x0                     ; status_only
00000000000020d3         jne        loc_255e

00000000000020d9         test       r13, r13
00000000000020dc         je         loc_210d

00000000000020de         lea        rdx, qword [aWarningLuLines]                ; argument "__msgid2" for method j_dcngettext, "WARNING: %lu lines are improperly formatted"
00000000000020e5         lea        rsi, qword [aWarningLuLineI]                ; argument "__msgid1" for method j_dcngettext, "WARNING: %lu line is improperly formatted"
00000000000020ec         mov        rcx, r13                                    ; argument "__n" for method j_dcngettext
00000000000020ef         xor        edi, edi                                    ; argument "__domainname" for method j_dcngettext
00000000000020f1         mov        r8d, 0x5                                    ; argument "__category" for method j_dcngettext
00000000000020f7         call       j_dcngettext                                ; dcngettext
00000000000020fc         mov        rcx, r13
00000000000020ff         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002102         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002104         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002106         xor        eax, eax
0000000000002108         call       j_error                                     ; error

                     loc_210d:
000000000000210d         cmp        qword [rsp+0x118+var_C8], 0x0               ; CODE XREF=main+2012
0000000000002113         je         loc_2149

0000000000002115         mov        r15, qword [rsp+0x118+var_C8]
000000000000211a         lea        rdx, qword [aWarningLuListe]                ; argument "__msgid2" for method j_dcngettext, "WARNING: %lu listed files could not be read"
0000000000002121         lea        rsi, qword [aWarningLuListe_7938]           ; argument "__msgid1" for method j_dcngettext, "WARNING: %lu listed file could not be read"
0000000000002128         xor        edi, edi                                    ; argument "__domainname" for method j_dcngettext
000000000000212a         mov        r8d, 0x5                                    ; argument "__category" for method j_dcngettext
0000000000002130         mov        rcx, r15                                    ; argument "__n" for method j_dcngettext
0000000000002133         call       j_dcngettext                                ; dcngettext
0000000000002138         mov        rcx, r15
000000000000213b         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000213e         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002140         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002142         xor        eax, eax
0000000000002144         call       j_error                                     ; error

                     loc_2149:
0000000000002149         cmp        qword [rsp+0x118+var_C0], 0x0               ; CODE XREF=main+2067
000000000000214f         je         loc_2185

0000000000002151         mov        r15, qword [rsp+0x118+var_C0]
0000000000002156         lea        rdx, qword [aWarningLuCompu]                ; argument "__msgid2" for method j_dcngettext, "WARNING: %lu computed checksums did NOT match"
000000000000215d         lea        rsi, qword [aWarningLuCompu_7998]           ; argument "__msgid1" for method j_dcngettext, "WARNING: %lu computed checksum did NOT match"
0000000000002164         xor        edi, edi                                    ; argument "__domainname" for method j_dcngettext
0000000000002166         mov        r8d, 0x5                                    ; argument "__category" for method j_dcngettext
000000000000216c         mov        rcx, r15                                    ; argument "__n" for method j_dcngettext
000000000000216f         call       j_dcngettext                                ; dcngettext
0000000000002174         mov        rcx, r15
0000000000002177         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000217a         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000217c         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000217e         xor        eax, eax
0000000000002180         call       j_error                                     ; error

                     loc_2185:
0000000000002185         cmp        byte [ignore_missing], 0x0                  ; ignore_missing, CODE XREF=main+2127
000000000000218c         je         loc_255e

0000000000002192         cmp        byte [rsp+0x118+var_9E], 0x0
0000000000002197         je         loc_28f7

                     loc_219d:
000000000000219d         mov        rax, qword [rsp+0x118+var_C8]               ; CODE XREF=main+3171
00000000000021a2         or         rax, qword [rsp+0x118+var_C0]
00000000000021a7         jne        loc_21be

00000000000021a9         movzx      eax, byte [strict]                          ; strict
00000000000021b0         xor        eax, 0x1
00000000000021b3         test       r13, r13
00000000000021b6         sete       bl
00000000000021b9         or         eax, ebx
00000000000021bb         movzx      ebx, al

                     loc_21be:
00000000000021be         mov        eax, ebx                                    ; CODE XREF=main+2215, main+3177, main+3460, main+4143
00000000000021c0         and        eax, 0x1

                     loc_21c3:
00000000000021c3         and        byte [rsp+0x118+var_9F], al                 ; CODE XREF=main+2914, main+3240
00000000000021c7         jmp        loc_236d
00000000000021cc         align      16

                     loc_21d0:
00000000000021d0         mov        rdx, qword [rsp+0x118+var_F8]               ; CODE XREF=main+1359
00000000000021d5         xor        edi, edi
00000000000021d7         mov        esi, 0x3
00000000000021dc         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
00000000000021e1         lea        rsi, qword [aSLuImproperlyF]                ; argument "msgid" for method j_dcgettext, "%s: %lu: improperly formatted %s checksum line"
00000000000021e8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000021ea         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000021ef         mov        rbx, rax
00000000000021f2         call       j_dcgettext                                 ; dcgettext
00000000000021f7         lea        r9, qword [aMd5sum+7]                       ; 0x6e31
00000000000021fe         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002201         mov        r8, rbp
0000000000002204         mov        rcx, rbx
0000000000002207         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002209         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000220b         xor        eax, eax
000000000000220d         call       j_error                                     ; error
0000000000002212         jmp        loc_1e55
0000000000002217         align      32

                     loc_2220:
0000000000002220         cmp        byte [ignore_missing], 0x0                  ; ignore_missing, CODE XREF=main+1818
0000000000002227         je         loc_2237

0000000000002229         cmp        byte [rsp+0x118+var_89], 0x0
0000000000002231         jne        loc_2088

                     loc_2237:
0000000000002237         mov        rcx, qword [digest_hex_bytes]               ; digest_hex_bytes, CODE XREF=main+2343
000000000000223e         mov        qword [rsp+0x118+var_B0], r8
0000000000002243         shr        rcx, 0x1
0000000000002246         je         loc_25bf

000000000000224c         mov        qword [rsp+0x118+var_B8], rcx
0000000000002251         mov        byte [rsp+0x118+var_E8], r9b
0000000000002256         call       j___ctype_tolower_loc                       ; __ctype_tolower_loc
000000000000225b         xor        edx, edx
000000000000225d         mov        rdi, qword [rax]
0000000000002260         movzx      r9d, byte [rsp+0x118+var_E8]
0000000000002266         mov        rcx, qword [rsp+0x118+var_B8]
000000000000226b         mov        r8, qword [rsp+0x118+var_B0]
0000000000002270         mov        r10, qword [rsp+0x118+var_E0]
0000000000002275         jmp        loc_22a0
0000000000002277         align      128

                     loc_2280:
0000000000002280         movzx      esi, byte [r8+rdx*2+1]                      ; CODE XREF=main+2492
0000000000002286         and        eax, 0xf
0000000000002289         movsx      eax, byte [r14+rax]
000000000000228e         cmp        dword [rdi+rsi*4], eax
0000000000002291         jne        loc_22be

0000000000002293         add        rdx, 0x1
0000000000002297         cmp        rcx, rdx
000000000000229a         je         loc_263d

                     loc_22a0:
00000000000022a0         movzx      eax, byte [r10+rdx]                         ; CODE XREF=main+2421
00000000000022a5         movzx      r11d, byte [r8+rdx*2]
00000000000022aa         mov        esi, eax
00000000000022ac         shr        sil, 0x4
00000000000022b0         and        esi, 0xf
00000000000022b3         movsx      esi, byte [r14+rsi]
00000000000022b8         cmp        dword [rdi+r11*4], esi
00000000000022bc         je         loc_2280

                     loc_22be:
00000000000022be         cmp        rcx, rdx                                    ; CODE XREF=main+2449
00000000000022c1         je         loc_25c1

00000000000022c7         add        qword [rsp+0x118+var_C0], 0x1
00000000000022cd         cmp        byte [status_only], 0x0                     ; status_only
00000000000022d4         jne        loc_2088

00000000000022da         test       r15d, r15d
00000000000022dd         je         loc_28e8

                     loc_22e3:
00000000000022e3         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=main+4374
00000000000022ea         mov        rax, qword [rdi+0x28]
00000000000022ee         cmp        rax, qword [rdi+0x30]
00000000000022f2         jae        loc_299f

00000000000022f8         lea        rsi, qword [rax+1]
00000000000022fc         mov        qword [rdi+0x28], rsi
0000000000002300         mov        byte [rax], 0x5c

                     loc_2303:
0000000000002303         mov        esi, 0x1                                    ; CODE XREF=main+4285
0000000000002308         mov        rdi, rbx
000000000000230b         mov        qword [rsp+0x118+var_B8], rcx
0000000000002310         mov        qword [rsp+0x118+var_E8], rdx
0000000000002315         call       print_filename                              ; print_filename
000000000000231a         mov        rdx, qword [rsp+0x118+var_E8]
000000000000231f         mov        rcx, qword [rsp+0x118+var_B8]
0000000000002324         cmp        rdx, rcx
0000000000002327         je         loc_260a

                     loc_232d:
000000000000232d         mov        edx, 0x5                                    ; CODE XREF=main+4082
0000000000002332         lea        rsi, qword [aFailed]                        ; "FAILED"
0000000000002339         jmp        loc_206b
000000000000233e         align      64

                     loc_2340:
0000000000002340         lea        rax, qword [rsp+0x118+var_80]               ; CODE XREF=main+962
0000000000002348         lea        rbx, qword [rsp+0x118+var_78]
0000000000002350         mov        rdi, qword [rsp+0x118+var_F8]
0000000000002355         mov        rdx, rax
0000000000002358         mov        rsi, rbx
000000000000235b         call       digest_file.isra.1                          ; digest_file.isra.1
0000000000002360         test       al, al
0000000000002362         jne        loc_2467

0000000000002368         mov        byte [rsp+0x118+var_9F], 0x0

                     loc_236d:
000000000000236d         add        qword [rsp+0x118+var_100], 0x8              ; CODE XREF=main+2247, main+3161, main+4191
0000000000002373         mov        rax, qword [rsp+0x118+var_100]
0000000000002378         cmp        qword [rsp+0x118+var_D0], rax
000000000000237d         ja         loc_1cb0

                     loc_2383:
0000000000002383         cmp        byte [have_read_stdin], 0x0                 ; have_read_stdin, CODE XREF=main+4153
000000000000238a         jne        loc_2700

                     loc_2390:
0000000000002390         movzx      eax, byte [rsp+0x118+var_9F]                ; CODE XREF=main+3599
0000000000002395         xor        eax, 0x1
0000000000002398         mov        rdi, qword [rsp+0x118+var_40]
00000000000023a0         xor        rdi, qword [fs:0x28]
00000000000023a9         movzx      eax, al
00000000000023ac         jne        loc_29e3

00000000000023b2         add        rsp, 0xe8
00000000000023b9         pop        rbx
00000000000023ba         pop        rbp
00000000000023bb         pop        r12
00000000000023bd         pop        r13
00000000000023bf         pop        r14
00000000000023c1         pop        r15
00000000000023c3         ret
                        ; endp

                     loc_23c4:
00000000000023c4         add        rcx, 0x1                                    ; CODE XREF=main+1342
00000000000023c8         sub        r15, rcx
00000000000023cb         je         loc_1e44

00000000000023d1         mov        r10, r15
00000000000023d4         add        rbx, rcx
00000000000023d7         sub        r10, 0x1
00000000000023db         je         loc_2401

00000000000023dd         cmp        byte [rbx+r15-1], 0x29
00000000000023e3         jne        loc_23fb

00000000000023e5         jmp        loc_2689
00000000000023ea         align      16

                     loc_23f0:
00000000000023f0         cmp        byte [rbx+r10], 0x29                        ; CODE XREF=main+2815
00000000000023f5         je         loc_2689

                     loc_23fb:
00000000000023fb         sub        r10, 0x1                                    ; CODE XREF=main+2787
00000000000023ff         jne        loc_23f0

                     loc_2401:
0000000000002401         cmp        byte [rbx], 0x29                            ; CODE XREF=main+2779
0000000000002404         jne        loc_1e44

000000000000240a         mov        r11, rbx
000000000000240d         xor        r10d, r10d
0000000000002410         jmp        loc_268d

                     loc_2415:
0000000000002415         mov        rdi, qword [rsp+0x118+var_F8]               ; CODE XREF=main+996
000000000000241a         lea        rsi, qword [aScottMiller+11]                ; 0x6f04
0000000000002421         call       fopen_safer                                 ; fopen_safer
0000000000002426         test       rax, rax
0000000000002429         mov        r12, rax
000000000000242c         jne        loc_1d10

                     loc_2432:
0000000000002432         mov        rdx, qword [rsp+0x118+var_F8]               ; CODE XREF=main+3384
0000000000002437         mov        esi, 0x3
000000000000243c         xor        edi, edi
000000000000243e         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000002443         mov        rbx, rax
0000000000002446         call       j___errno_location                          ; __errno_location
000000000000244b         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000244d         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x79f5
0000000000002454         xor        eax, eax
0000000000002456         mov        rcx, rbx
0000000000002459         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000245b         call       j_error                                     ; error
0000000000002460         xor        eax, eax
0000000000002462         jmp        loc_21c3

                     loc_2467:
0000000000002467         mov        rdi, qword [rsp+0x118+var_F8]               ; argument "__s" for method j_strchr, CODE XREF=main+2658
000000000000246c         mov        esi, 0x5c                                   ; argument "__c" for method j_strchr
0000000000002471         call       j_strchr                                    ; strchr
0000000000002476         test       rax, rax
0000000000002479         je         loc_2851

                     loc_247f:
000000000000247f         cmp        byte [delim], 0xa                           ; delim, CODE XREF=main+3939
0000000000002486         je         loc_276c

                     loc_248c:
000000000000248c         cmp        byte [rsp+0x118+var_A0], 0x0                ; CODE XREF=main+3945
0000000000002491         jne        loc_286e

0000000000002497         mov        rax, qword [digest_hex_bytes]               ; digest_hex_bytes
000000000000249e         xor        ebp, ebp
00000000000024a0         shr        rax, 0x1
00000000000024a3         je         loc_24e2

                     loc_24a5:
00000000000024a5         xor        r12d, r12d                                  ; CODE XREF=main+3852, main+3910, main+4061
00000000000024a8         nop        dword [rax+rax]

                     loc_24b0:
00000000000024b0         movzx      edx, byte [rbx+r12]                         ; CODE XREF=main+3033
00000000000024b5         lea        rsi, qword [aSNoFileWasVeri+25]             ; 0x6f99
00000000000024bc         xor        eax, eax
00000000000024be         mov        edi, 0x1
00000000000024c3         add        r12, 0x1
00000000000024c7         call       j___printf_chk                              ; __printf_chk
00000000000024cc         mov        rax, qword [digest_hex_bytes]               ; digest_hex_bytes
00000000000024d3         shr        rax, 0x1
00000000000024d6         cmp        rax, r12
00000000000024d9         ja         loc_24b0

                     loc_24db:
00000000000024db         cmp        byte [rsp+0x118+var_A0], 0x0                ; CODE XREF=main+3858
00000000000024e0         jne        loc_2533

                     loc_24e2:
00000000000024e2         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=main+2979, main+3916
00000000000024e9         mov        rax, qword [rdi+0x28]
00000000000024ed         cmp        qword [rdi+0x30], rax
00000000000024f1         jbe        loc_2990

00000000000024f7         lea        rdx, qword [rax+1]
00000000000024fb         mov        qword [rdi+0x28], rdx
00000000000024ff         mov        byte [rax], 0x20

                     loc_2502:
0000000000002502         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=main+4250
0000000000002509         mov        rax, qword [rdi+0x28]
000000000000250d         cmp        rax, qword [rdi+0x30]
0000000000002511         jae        loc_2982

0000000000002517         lea        rdx, qword [rax+1]
000000000000251b         mov        qword [rdi+0x28], rdx
000000000000251f         movzx      edi, byte [rsp+0x118+var_9D]
0000000000002524         mov        byte [rax], dil

                     loc_2527:
0000000000002527         mov        rdi, qword [rsp+0x118+var_F8]               ; CODE XREF=main+4235
000000000000252c         mov        esi, ebp
000000000000252e         call       print_filename                              ; print_filename

                     loc_2533:
0000000000002533         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=main+3040, main+4067
000000000000253a         movzx      edx, byte [delim]                           ; delim
0000000000002541         mov        rax, qword [rdi+0x28]
0000000000002545         cmp        rax, qword [rdi+0x30]
0000000000002549         jae        loc_2957

000000000000254f         lea        rcx, qword [rax+1]
0000000000002553         mov        qword [rdi+0x28], rcx
0000000000002557         mov        byte [rax], dl
0000000000002559         jmp        loc_236d

                     loc_255e:
000000000000255e         cmp        byte [rsp+0x118+var_9E], 0x0                ; CODE XREF=main+2003, main+2188
0000000000002563         jne        loc_219d

0000000000002569         jmp        loc_21be

                     loc_256e:
000000000000256e         mov        rdx, qword [rsp+0x118+var_F8]               ; CODE XREF=main+1968
0000000000002573         mov        esi, 0x3
0000000000002578         xor        edi, edi
000000000000257a         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
000000000000257f         lea        rsi, qword [aSReadError]                    ; argument "msgid" for method j_dcgettext, "%s: read error"
0000000000002586         mov        rbx, rax
0000000000002589         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000258e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002590         call       j_dcgettext                                 ; dcgettext
0000000000002595         mov        rcx, rbx
0000000000002598         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000259b         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000259d         xor        eax, eax
000000000000259f         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000025a1         call       j_error                                     ; error
00000000000025a6         xor        eax, eax
00000000000025a8         jmp        loc_21c3

                     loc_25ad:
00000000000025ad         cmp        byte [warn], 0x0                            ; warn, CODE XREF=main+810, main+4346
00000000000025b4         jne        loc_1c3d

00000000000025ba         jmp        loc_1ec5

                     loc_25bf:
00000000000025bf         xor        edx, edx                                    ; CODE XREF=main+2374

                     loc_25c1:
00000000000025c1         movzx      eax, byte [status_only]                     ; status_only, CODE XREF=main+2497, main+3392
00000000000025c8         test       al, al
00000000000025ca         mov        byte [rsp+0x118+var_9E], al
00000000000025ce         jne        loc_2088

00000000000025d4         movzx      eax, byte [quiet]                           ; quiet
00000000000025db         test       al, al
00000000000025dd         mov        byte [rsp+0x118+var_9E], al
00000000000025e1         jne        loc_2088

00000000000025e7         test       r15d, r15d
00000000000025ea         jne        loc_2a11

00000000000025f0         xor        esi, esi
00000000000025f2         mov        rdi, rbx
00000000000025f5         mov        byte [rsp+0x118+var_E8], r9b
00000000000025fa         call       print_filename                              ; print_filename
00000000000025ff         movzx      r9d, byte [rsp+0x118+var_E8]
0000000000002605         mov        byte [rsp+0x118+var_9E], r9b

                     loc_260a:
000000000000260a         cmp        byte [quiet], 0x0                           ; quiet, CODE XREF=main+2599
0000000000002611         jne        loc_2088

0000000000002617         mov        edx, 0x5
000000000000261c         lea        rsi, qword [aFailed+7]                      ; 0x6f6e
0000000000002623         jmp        loc_206b

                     loc_2628:
0000000000002628         mov        rdi, r12                                    ; CODE XREF=main+1979
000000000000262b         call       rpl_fclose                                  ; rpl_fclose
0000000000002630         test       eax, eax
0000000000002632         je         loc_20c1

0000000000002638         jmp        loc_2432

                     loc_263d:
000000000000263d         mov        rdx, rcx                                    ; CODE XREF=main+2458
0000000000002640         jmp        loc_25c1

                     loc_2645:
0000000000002645         mov        rdx, qword [rsp+0x118+var_F8]               ; CODE XREF=main+1990
000000000000264a         xor        edi, edi
000000000000264c         mov        esi, 0x3
0000000000002651         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000002656         lea        rsi, qword [aSNoProperlyFor]                ; argument "msgid" for method j_dcgettext, "%s: no properly formatted %s checksum lines found"
000000000000265d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000265f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002664         mov        rbp, rax
0000000000002667         call       j_dcgettext                                 ; dcgettext
000000000000266c         lea        r8, qword [aMd5sum+7]                       ; 0x6e31
0000000000002673         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002676         mov        rcx, rbp
0000000000002679         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000267b         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000267d         xor        eax, eax
000000000000267f         call       j_error                                     ; error
0000000000002684         jmp        loc_21be

                     loc_2689:
0000000000002689         lea        r11, qword [rbx+r10]                        ; CODE XREF=main+2789, main+2805

                     loc_268d:
000000000000268d         test       r9b, r9b                                    ; CODE XREF=main+2832
0000000000002690         jne        loc_293e

                     loc_2696:
0000000000002696         add        r10, 0x1                                    ; CODE XREF=main+4172
000000000000269a         mov        byte [r11], 0x0
000000000000269e         jmp        loc_26a4

                     loc_26a0:
00000000000026a0         add        r10, 0x1                                    ; CODE XREF=main+3499, main+3503

                     loc_26a4:
00000000000026a4         movzx      eax, byte [rbx+r10]                         ; CODE XREF=main+3486
00000000000026a9         cmp        al, 0x20
00000000000026ab         je         loc_26a0

00000000000026ad         cmp        al, 0x9
00000000000026af         je         loc_26a0

00000000000026b1         cmp        al, 0x3d
00000000000026b3         jne        loc_1e44

00000000000026b9         lea        rdx, qword [rbx+r10+1]

                     loc_26be:
00000000000026be         movzx      eax, byte [rdx]                             ; CODE XREF=main+3530, main+3534
00000000000026c1         mov        r8, rdx
00000000000026c4         lea        rdx, qword [rdx+1]
00000000000026c8         cmp        al, 0x20
00000000000026ca         je         loc_26be

00000000000026cc         cmp        al, 0x9
00000000000026ce         je         loc_26be

00000000000026d0         mov        rdi, r8
00000000000026d3         mov        qword [rsp+0x118+var_B8], r8
00000000000026d8         call       hex_digits                                  ; hex_digits
00000000000026dd         mov        r8, qword [rsp+0x118+var_B8]
00000000000026e2         jmp        loc_275f

                     loc_26e4:
00000000000026e4         sub        esi, 0x1                                    ; CODE XREF=main+1657, main+1666
00000000000026e7         je         loc_1f9a

00000000000026ed         mov        dword [bsd_reversed], 0x0                   ; bsd_reversed
00000000000026f7         lea        rax, qword [rdx+2]
00000000000026fb         jmp        loc_1f9a

                     loc_2700:
0000000000002700         mov        rdi, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5, CODE XREF=main+2698
0000000000002707         call       rpl_fclose                                  ; rpl_fclose
000000000000270c         add        eax, 0x1
000000000000270f         jne        loc_2390

0000000000002715         lea        rsi, qword [aStandardInput]                 ; argument "msgid" for method j_dcgettext, "standard input"
000000000000271c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002721         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002723         call       j_dcgettext                                 ; dcgettext
0000000000002728         mov        rbx, rax
000000000000272b         call       j___errno_location                          ; __errno_location
0000000000002730         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002732         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000002735         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000273a         xor        eax, eax
000000000000273c         call       j_error                                     ; error

                     loc_2741:
0000000000002741         mov        rsi, r15                                    ; CODE XREF=main+1696
0000000000002744         mov        rdi, rbx
0000000000002747         mov        qword [rsp+0x118+var_B8], r8
000000000000274c         sub        rsi, rax
000000000000274f         call       filename_unescape                           ; filename_unescape
0000000000002754         mov        r8, qword [rsp+0x118+var_B8]
0000000000002759         test       rax, rax
000000000000275c         setne      al

                     loc_275f:
000000000000275f         test       al, al                                      ; CODE XREF=main+3554
0000000000002761         jne        loc_1fa6

0000000000002767         jmp        loc_1e44

                     loc_276c:
000000000000276c         cmp        byte [rsp+0x118+var_A0], 0x0                ; CODE XREF=main+2950
0000000000002771         je         loc_2817

0000000000002777         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000277e         mov        rax, qword [rdi+0x28]
0000000000002782         cmp        rax, qword [rdi+0x30]
0000000000002786         jae        loc_29c2

000000000000278c         lea        rdx, qword [rax+1]
0000000000002790         mov        qword [rdi+0x28], rdx
0000000000002794         mov        byte [rax], 0x5c

                     loc_2797:
0000000000002797         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5, CODE XREF=main+4300
000000000000279e         lea        rdi, qword [aMd5sum+7]                      ; argument "__ptr" for method j_fwrite_unlocked, 0x6e31
00000000000027a5         mov        edx, 0x3                                    ; argument "__n" for method j_fwrite_unlocked
00000000000027aa         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
00000000000027af         call       j_fwrite_unlocked                           ; fwrite_unlocked
00000000000027b4         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5
00000000000027bb         lea        rdi, qword [aSNoFileWasVeri+30]             ; argument "__ptr" for method j_fwrite_unlocked, 0x6f9e
00000000000027c2         mov        edx, 0x2                                    ; argument "__n" for method j_fwrite_unlocked
00000000000027c7         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
00000000000027cc         call       j_fwrite_unlocked                           ; fwrite_unlocked
00000000000027d1         mov        rdi, qword [rsp+0x118+var_F8]
00000000000027d6         mov        esi, 0x1
00000000000027db         call       print_filename                              ; print_filename
00000000000027e0         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5
00000000000027e7         lea        rdi, qword [aSNoFileWasVeri+33]             ; argument "__ptr" for method j_fwrite_unlocked, 0x6fa1
00000000000027ee         mov        edx, 0x4                                    ; argument "__n" for method j_fwrite_unlocked
00000000000027f3         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
00000000000027f8         call       j_fwrite_unlocked                           ; fwrite_unlocked

                     loc_27fd:
00000000000027fd         mov        rax, qword [digest_hex_bytes]               ; digest_hex_bytes, CODE XREF=main+4221
0000000000002804         mov        ebp, 0x1
0000000000002809         shr        rax, 0x1
000000000000280c         jne        loc_24a5

0000000000002812         jmp        loc_24db

                     loc_2817:
0000000000002817         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=main+3697
000000000000281e         mov        rax, qword [rdi+0x28]
0000000000002822         cmp        rax, qword [rdi+0x30]
0000000000002826         jae        loc_2973

000000000000282c         lea        rdx, qword [rax+1]
0000000000002830         mov        ebp, 0x1
0000000000002835         mov        qword [rdi+0x28], rdx
0000000000002839         mov        byte [rax], 0x5c
000000000000283c         mov        rax, qword [digest_hex_bytes]               ; digest_hex_bytes
0000000000002843         shr        rax, 0x1
0000000000002846         jne        loc_24a5

000000000000284c         jmp        loc_24e2

                     loc_2851:
0000000000002851         mov        rdi, qword [rsp+0x118+var_F8]               ; argument "__s" for method j_strchr, CODE XREF=main+2937
0000000000002856         mov        esi, 0xa                                    ; argument "__c" for method j_strchr
000000000000285b         call       j_strchr                                    ; strchr
0000000000002860         test       rax, rax
0000000000002863         jne        loc_247f

0000000000002869         jmp        loc_248c

                     loc_286e:
000000000000286e         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5, CODE XREF=main+2961
0000000000002875         lea        rdi, qword [aMd5sum+7]                      ; argument "__ptr" for method j_fwrite_unlocked, 0x6e31
000000000000287c         mov        edx, 0x3                                    ; argument "__n" for method j_fwrite_unlocked
0000000000002881         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
0000000000002886         xor        ebp, ebp
0000000000002888         call       j_fwrite_unlocked                           ; fwrite_unlocked
000000000000288d         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5
0000000000002894         lea        rdi, qword [aSNoFileWasVeri+30]             ; argument "__ptr" for method j_fwrite_unlocked, 0x6f9e
000000000000289b         mov        edx, 0x2                                    ; argument "__n" for method j_fwrite_unlocked
00000000000028a0         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
00000000000028a5         call       j_fwrite_unlocked                           ; fwrite_unlocked
00000000000028aa         mov        rdi, qword [rsp+0x118+var_F8]
00000000000028af         xor        esi, esi
00000000000028b1         call       print_filename                              ; print_filename
00000000000028b6         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5
00000000000028bd         lea        rdi, qword [aSNoFileWasVeri+33]             ; argument "__ptr" for method j_fwrite_unlocked, 0x6fa1
00000000000028c4         mov        edx, 0x4                                    ; argument "__n" for method j_fwrite_unlocked
00000000000028c9         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
00000000000028ce         call       j_fwrite_unlocked                           ; fwrite_unlocked
00000000000028d3         mov        rax, qword [digest_hex_bytes]               ; digest_hex_bytes
00000000000028da         shr        rax, 0x1
00000000000028dd         jne        loc_24a5

00000000000028e3         jmp        loc_2533

                     loc_28e8:
00000000000028e8         xor        esi, esi                                    ; CODE XREF=main+2525
00000000000028ea         mov        rdi, rbx
00000000000028ed         call       print_filename                              ; print_filename
00000000000028f2         jmp        loc_232d

                     loc_28f7:
00000000000028f7         mov        rdx, qword [rsp+0x118+var_F8]               ; CODE XREF=main+2199
00000000000028fc         xor        edi, edi
00000000000028fe         mov        esi, 0x3
0000000000002903         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000002908         lea        rsi, qword [aSNoFileWasVeri]                ; argument "msgid" for method j_dcgettext, "%s: no file was verified"
000000000000290f         mov        rbp, rax
0000000000002912         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002914         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002919         call       j_dcgettext                                 ; dcgettext
000000000000291e         mov        rcx, rbp
0000000000002921         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002924         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002926         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002928         xor        eax, eax
000000000000292a         call       j_error                                     ; error
000000000000292f         jmp        loc_21be

                     loc_2934:
0000000000002934         mov        byte [rsp+0x118+var_9F], 0x1                ; CODE XREF=main+899
0000000000002939         jmp        loc_2383

                     loc_293e:
000000000000293e         mov        rsi, r10                                    ; CODE XREF=main+3472
0000000000002941         mov        rdi, rbx
0000000000002944         call       filename_unescape                           ; filename_unescape
0000000000002949         test       rax, rax
000000000000294c         jne        loc_2696

0000000000002952         jmp        loc_1e44

                     loc_2957:
0000000000002957         movzx      esi, dl                                     ; argument #2 for method j___overflow, CODE XREF=main+3145
000000000000295a         call       j___overflow                                ; __overflow
000000000000295f         jmp        loc_236d

                     loc_2964:
0000000000002964         mov        esi, 0x5c                                   ; argument #2 for method j___overflow, CODE XREF=main+1859
0000000000002969         call       j___overflow                                ; __overflow
000000000000296e         jmp        loc_2054

                     loc_2973:
0000000000002973         mov        esi, 0x5c                                   ; argument #2 for method j___overflow, CODE XREF=main+3878
0000000000002978         call       j___overflow                                ; __overflow
000000000000297d         jmp        loc_27fd

                     loc_2982:
0000000000002982         mov        esi, dword [rsp+0x118+var_9C]               ; argument #2 for method j___overflow, CODE XREF=main+3089
0000000000002986         call       j___overflow                                ; __overflow
000000000000298b         jmp        loc_2527

                     loc_2990:
0000000000002990         mov        esi, 0x20                                   ; argument #2 for method j___overflow, CODE XREF=main+3057
0000000000002995         call       j___overflow                                ; __overflow
000000000000299a         jmp        loc_2502

                     loc_299f:
000000000000299f         mov        esi, 0x5c                                   ; argument #2 for method j___overflow, CODE XREF=main+2546
00000000000029a4         mov        qword [rsp+0x118+var_B8], rcx
00000000000029a9         mov        qword [rsp+0x118+var_E8], rdx
00000000000029ae         call       j___overflow                                ; __overflow
00000000000029b3         mov        rdx, qword [rsp+0x118+var_E8]
00000000000029b8         mov        rcx, qword [rsp+0x118+var_B8]
00000000000029bd         jmp        loc_2303

                     loc_29c2:
00000000000029c2         mov        esi, 0x5c                                   ; argument #2 for method j___overflow, CODE XREF=main+3718
00000000000029c7         call       j___overflow                                ; __overflow
00000000000029cc         jmp        loc_2797

                     loc_29d1:
00000000000029d1         cmp        eax, 0xffffff7e                             ; CODE XREF=main+341
00000000000029d6         jne        loc_1bd0

00000000000029dc         xor        edi, edi                                    ; argument #1 for method usage
00000000000029de         call       usage                                       ; usage

                     loc_29e3:
00000000000029e3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=main+2732
                        ; endp

                     loc_29e8:
00000000000029e8         cmp        byte [status_only], 0x0                     ; status_only, CODE XREF=main+786
00000000000029ef         je         loc_1b97

00000000000029f5         cmp        byte [rsp+0x118+var_ED], 0x0
00000000000029fa         jne        loc_25ad

                     loc_2a00:
0000000000002a00         mov        edx, 0x5                                    ; CODE XREF=main+657
0000000000002a05         lea        rsi, qword [aTheStatusOptio]                ; "the --status option is meaningful only when verifying checksums"
0000000000002a0c         jmp        loc_1bbb

                     loc_2a11:
0000000000002a11         mov        byte [rsp+0x118+var_9E], r9b                ; CODE XREF=main+3306
0000000000002a16         jmp        loc_22e3

                     loc_2a1b:
0000000000002a1b         mov        edx, 0x5                                    ; CODE XREF=main+603
0000000000002a20         lea        rsi, qword [aTagDoesNotSupp]                ; "--tag does not support --text mode"
0000000000002a27         jmp        loc_1bbb

                     loc_2a2c:
0000000000002a2c         mov        edx, 0x5                                    ; CODE XREF=main+644, main+797
0000000000002a31         lea        rsi, qword [aTheIgnoremissi]                ; "the --ignore-missing option is meaningful only when verifying checksums"
0000000000002a38         jmp        loc_1bbb
0000000000002a3d         align      64                                          ; End of unwind block (FDE at 0x8738)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
0000000000002a40         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x85cc)
0000000000002a42         mov        r9, rdx
0000000000002a45         pop        rsi
0000000000002a46         mov        rdx, rsp
0000000000002a49         and        rsp, 0xfffffffffffffff0
0000000000002a4d         push       rax
0000000000002a4e         push       rsp
0000000000002a4f         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
0000000000002a56         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
0000000000002a5d         lea        rdi, qword [main]                           ; main
0000000000002a64         call       qword [qword_209fc0+8]                      ; 0x209fc8
0000000000002a6a         hlt
                        ; endp
0000000000002a6b         align      16                                          ; End of unwind block (FDE at 0x85cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000002a70         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
0000000000002a77         push       rbp
0000000000002a78         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000002a7f         cmp        rax, rdi
0000000000002a82         mov        rbp, rsp
0000000000002a85         je         loc_2aa0

0000000000002a87         mov        rax, qword [qword_209fc0]                   ; qword_209fc0
0000000000002a8e         test       rax, rax
0000000000002a91         je         loc_2aa0

0000000000002a93         pop        rbp
0000000000002a94         jmp        rax
                        ; endp
0000000000002a96         align      32

                     loc_2aa0:
0000000000002aa0         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
0000000000002aa1         ret
                        ; endp
0000000000002aa2         align      16

                     register_tm_clones:
0000000000002ab0         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
0000000000002ab7         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000002abe         push       rbp
0000000000002abf         sub        rsi, rdi
0000000000002ac2         mov        rbp, rsp
0000000000002ac5         sar        rsi, 0x3
0000000000002ac9         mov        rax, rsi
0000000000002acc         shr        rax, 0x3f
0000000000002ad0         add        rsi, rax
0000000000002ad3         sar        rsi, 0x1
0000000000002ad6         je         loc_2af0

0000000000002ad8         mov        rax, qword [qword_209fd8]                   ; qword_209fd8
0000000000002adf         test       rax, rax
0000000000002ae2         je         loc_2af0

0000000000002ae4         pop        rbp
0000000000002ae5         jmp        rax
                        ; endp
0000000000002ae7         align      16

                     loc_2af0:
0000000000002af0         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000002af1         ret
                        ; endp
0000000000002af2         align      256


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
0000000000002b00         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
0000000000002b07         jne        loc_2b38

0000000000002b09         cmp        qword [qword_209fe0], 0x0                   ; qword_209fe0
0000000000002b11         push       rbp
0000000000002b12         mov        rbp, rsp
0000000000002b15         je         loc_2b23

0000000000002b17         mov        rdi, qword [__dso_handle]                   ; __dso_handle
0000000000002b1e         call       j_qword_209fe0                              ; qword_209fe0

                     loc_2b23:
0000000000002b23         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
0000000000002b28         mov        byte [completed.7697], 0x1                  ; completed.7697
0000000000002b2f         pop        rbp
0000000000002b30         ret
                        ; endp
0000000000002b31         align      8

                     loc_2b38:
0000000000002b38         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
0000000000002b3a         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000002b40         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000002b41         mov        rbp, rsp
0000000000002b44         pop        rbp
0000000000002b45         jmp        register_tm_clones                          ; register_tm_clones
0000000000002b4a         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     filename_unescape:
0000000000002b50         xor        edx, edx                                    ; Begin of unwind block (FDE at 0x863c), CODE XREF=main+3663, main+4164
0000000000002b52         test       rsi, rsi
0000000000002b55         lea        rcx, qword [rdi+1]
0000000000002b59         lea        r8, qword [rsi-1]
0000000000002b5d         je         loc_2bb7

                     loc_2b5f:
0000000000002b5f         movzx      eax, byte [rdi+rdx]                         ; CODE XREF=filename_unescape+89
0000000000002b63         test       al, al
0000000000002b65         je         loc_2b90

0000000000002b67         cmp        al, 0x5c
0000000000002b69         jne        loc_2b98

0000000000002b6b         cmp        r8, rdx
0000000000002b6e         je         loc_2b90

0000000000002b70         add        rdx, 0x1
0000000000002b74         movzx      eax, byte [rdi+rdx]
0000000000002b78         cmp        al, 0x5c
0000000000002b7a         je         loc_2bc0

0000000000002b7c         cmp        al, 0x6e
0000000000002b7e         jne        loc_2b90

0000000000002b80         mov        r9, rcx
0000000000002b83         mov        byte [rcx-1], 0xa
0000000000002b87         jmp        loc_2b9e
0000000000002b89         align      16

                     loc_2b90:
0000000000002b90         xor        eax, eax                                    ; CODE XREF=filename_unescape+21, filename_unescape+30, filename_unescape+46
0000000000002b92         ret
                        ; endp
0000000000002b93         align      8

                     loc_2b98:
0000000000002b98         mov        r9, rcx                                     ; CODE XREF=filename_unescape+25
0000000000002b9b         mov        byte [rcx-1], al

                     loc_2b9e:
0000000000002b9e         add        rdx, 0x1                                    ; CODE XREF=filename_unescape+55, filename_unescape+119
0000000000002ba2         add        rcx, 0x1
0000000000002ba6         cmp        rsi, rdx
0000000000002ba9         ja         loc_2b5f

0000000000002bab         add        rsi, rdi
0000000000002bae         cmp        r9, rsi
0000000000002bb1         jae        loc_2bb7

0000000000002bb3         mov        byte [r9], 0x0

                     loc_2bb7:
0000000000002bb7         mov        rax, rdi                                    ; CODE XREF=filename_unescape+13, filename_unescape+97
0000000000002bba         ret
                        ; endp
0000000000002bbb         align      64

                     loc_2bc0:
0000000000002bc0         mov        r9, rcx                                     ; CODE XREF=filename_unescape+42
0000000000002bc3         mov        byte [rcx-1], 0x5c
0000000000002bc7         jmp        loc_2b9e
0000000000002bc9         align      16                                          ; End of unwind block (FDE at 0x863c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hex_digits:
0000000000002bd0         push       rbp                                         ; Begin of unwind block (FDE at 0x8650), CODE XREF=main+1598, main+3544
0000000000002bd1         push       rbx
0000000000002bd2         sub        rsp, 0x8
0000000000002bd6         mov        rbp, qword [digest_hex_bytes]               ; digest_hex_bytes
0000000000002bdd         test       rbp, rbp
0000000000002be0         je         loc_2c20

0000000000002be2         mov        rbx, rdi
0000000000002be5         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000002bea         mov        rcx, qword [rax]
0000000000002bed         mov        rax, rbx
0000000000002bf0         jmp        loc_2c05
0000000000002bf2         align      8

                     loc_2bf8:
0000000000002bf8         add        rax, 0x1                                    ; CODE XREF=hex_digits+61
0000000000002bfc         mov        edx, eax
0000000000002bfe         sub        edx, ebx
0000000000002c00         cmp        rdx, rbp
0000000000002c03         jae        loc_2c23

                     loc_2c05:
0000000000002c05         movzx      edx, byte [rax]                             ; CODE XREF=hex_digits+32
0000000000002c08         test       byte [rcx+rdx*2+1], 0x10
0000000000002c0d         jne        loc_2bf8

0000000000002c0f         add        rsp, 0x8
0000000000002c13         xor        eax, eax
0000000000002c15         pop        rbx
0000000000002c16         pop        rbp
0000000000002c17         ret
                        ; endp
0000000000002c18         align      32

                     loc_2c20:
0000000000002c20         mov        rax, rdi                                    ; CODE XREF=hex_digits+16

                     loc_2c23:
0000000000002c23         cmp        byte [rax], 0x0                             ; CODE XREF=hex_digits+51
0000000000002c26         sete       al
0000000000002c29         add        rsp, 0x8
0000000000002c2d         pop        rbx
0000000000002c2e         pop        rbp
0000000000002c2f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     print_filename:
0000000000002c30         push       rbp                                         ; End of unwind block (FDE at 0x8650), Begin of unwind block (FDE at 0x8684), CODE XREF=main+1882, main+2581, main+3118, main+3322, main+3803, main+4017, main+4077
0000000000002c31         push       rbx
0000000000002c32         mov        rbx, rdi
0000000000002c35         sub        rsp, 0x8
0000000000002c39         test       sil, sil
0000000000002c3c         je         loc_2cd0

0000000000002c42         movzx      esi, byte [rdi]
0000000000002c45         lea        rbp, qword [_IO_stdin_used+4]               ; 0x6e24
0000000000002c4c         test       sil, sil
0000000000002c4f         jne        loc_2c7a

0000000000002c51         jmp        loc_2cae
0000000000002c53         align      8

                     loc_2c58:
0000000000002c58         lea        rdi, qword [_IO_stdin_used+7]               ; argument "__ptr" for method j_fwrite_unlocked, 0x6e27, CODE XREF=print_filename+91
0000000000002c5f         mov        edx, 0x2                                    ; argument "__n" for method j_fwrite_unlocked
0000000000002c64         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
0000000000002c69         call       j_fwrite_unlocked                           ; fwrite_unlocked

                     loc_2c6e:
0000000000002c6e         add        rbx, 0x1                                    ; CODE XREF=print_filename+154, print_filename+192
0000000000002c72         movzx      esi, byte [rbx]
0000000000002c75         test       sil, sil
0000000000002c78         je         loc_2cae

                     loc_2c7a:
0000000000002c7a         cmp        sil, 0xa                                    ; CODE XREF=print_filename+31, print_filename+124
0000000000002c7e         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002c85         je         loc_2cb8

0000000000002c87         cmp        sil, 0x5c
0000000000002c8b         je         loc_2c58

0000000000002c8d         mov        rax, qword [rcx+0x28]
0000000000002c91         cmp        rax, qword [rcx+0x30]
0000000000002c95         jae        loc_2ce8

0000000000002c97         lea        rdx, qword [rax+1]
0000000000002c9b         add        rbx, 0x1
0000000000002c9f         mov        qword [rcx+0x28], rdx
0000000000002ca3         mov        byte [rax], sil
0000000000002ca6         movzx      esi, byte [rbx]
0000000000002ca9         test       sil, sil
0000000000002cac         jne        loc_2c7a

                     loc_2cae:
0000000000002cae         add        rsp, 0x8                                    ; CODE XREF=print_filename+33, print_filename+72
0000000000002cb2         pop        rbx
0000000000002cb3         pop        rbp
0000000000002cb4         ret
                        ; endp
0000000000002cb5         align      8

                     loc_2cb8:
0000000000002cb8         mov        edx, 0x2                                    ; argument "__n" for method j_fwrite_unlocked, CODE XREF=print_filename+85
0000000000002cbd         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
0000000000002cc2         mov        rdi, rbp                                    ; argument "__ptr" for method j_fwrite_unlocked
0000000000002cc5         call       j_fwrite_unlocked                           ; fwrite_unlocked
0000000000002cca         jmp        loc_2c6e
0000000000002ccc         align      16

                     loc_2cd0:
0000000000002cd0         mov        rsi, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fputs_unlocked, stdout@@GLIBC_2.2.5, CODE XREF=print_filename+12
0000000000002cd7         add        rsp, 0x8
0000000000002cdb         pop        rbx
0000000000002cdc         pop        rbp
0000000000002cdd         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp
0000000000002ce2         align      8

                     loc_2ce8:
0000000000002ce8         mov        rdi, rcx                                    ; argument #1 for method j___overflow, CODE XREF=print_filename+101
0000000000002ceb         call       j___overflow                                ; __overflow
0000000000002cf0         jmp        loc_2c6e
0000000000002cf5         align      256                                         ; End of unwind block (FDE at 0x8684)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     digest_file.isra.1:
0000000000002d00         push       r13                                         ; Begin of unwind block (FDE at 0x86bc), CODE XREF=main+1803, main+2651
0000000000002d02         push       r12
0000000000002d04         mov        ecx, 0x2
0000000000002d09         push       rbp
0000000000002d0a         push       rbx
0000000000002d0b         mov        rbp, rdi
0000000000002d0e         lea        rdi, qword [aLibs+10]                       ; 0x7a82
0000000000002d15         mov        r12, rsi
0000000000002d18         mov        rsi, rbp
0000000000002d1b         sub        rsp, 0x8
0000000000002d1f         rep  cmpsb byte [rsi], byte [rdi]
0000000000002d21         mov        byte [rdx], 0x0
0000000000002d24         seta       al
0000000000002d27         sbb        al, 0x0
0000000000002d29         test       al, al
0000000000002d2b         jne        loc_2dc0

0000000000002d31         mov        rbx, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5
0000000000002d38         mov        esi, 0x2
0000000000002d3d         mov        byte [have_read_stdin], 0x1                 ; have_read_stdin
0000000000002d44         mov        rdi, rbx
0000000000002d47         call       fadvise                                     ; fadvise
0000000000002d4c         mov        rsi, r12
0000000000002d4f         mov        rdi, rbx
0000000000002d52         call       md5_stream                                  ; md5_stream
0000000000002d57         test       eax, eax
0000000000002d59         jne        loc_2d70

                     loc_2d5b:
0000000000002d5b         mov        r12d, 0x1                                   ; CODE XREF=digest_file.isra.1+260

                     loc_2d61:
0000000000002d61         add        rsp, 0x8                                    ; CODE XREF=digest_file.isra.1+166, digest_file.isra.1+313, digest_file.isra.1+385, digest_file.isra.1+405
0000000000002d65         mov        eax, r12d
0000000000002d68         pop        rbx
0000000000002d69         pop        rbp
0000000000002d6a         pop        r12
0000000000002d6c         pop        r13
0000000000002d6e         ret
                        ; endp
0000000000002d6f         align      16

                     loc_2d70:
0000000000002d70         mov        rdx, rbp                                    ; CODE XREF=digest_file.isra.1+89, digest_file.isra.1+244
0000000000002d73         xor        edi, edi
0000000000002d75         mov        esi, 0x3
0000000000002d7a         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000002d7f         mov        rbp, rax
0000000000002d82         xor        r12d, r12d
0000000000002d85         call       j___errno_location                          ; __errno_location
0000000000002d8a         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002d8c         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x79f5
0000000000002d93         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002d95         xor        eax, eax
0000000000002d97         mov        rcx, rbp
0000000000002d9a         call       j_error                                     ; error
0000000000002d9f         cmp        qword [stdin@@GLIBC_2.2.5], rbx             ; stdin@@GLIBC_2.2.5
0000000000002da6         je         loc_2d61

0000000000002da8         mov        rdi, rbx
0000000000002dab         call       rpl_fclose                                  ; rpl_fclose
0000000000002db0         add        rsp, 0x8
0000000000002db4         mov        eax, r12d
0000000000002db7         pop        rbx
0000000000002db8         pop        rbp
0000000000002db9         pop        r12
0000000000002dbb         pop        r13
0000000000002dbd         ret
                        ; endp
0000000000002dbe         align      64

                     loc_2dc0:
0000000000002dc0         lea        rsi, qword [aScottMiller+11]                ; 0x6f04, CODE XREF=digest_file.isra.1+43
0000000000002dc7         mov        rdi, rbp
0000000000002dca         mov        r13, rdx
0000000000002dcd         call       fopen_safer                                 ; fopen_safer
0000000000002dd2         test       rax, rax
0000000000002dd5         mov        rbx, rax
0000000000002dd8         je         loc_2e40

0000000000002dda         mov        rdi, rax
0000000000002ddd         mov        esi, 0x2
0000000000002de2         call       fadvise                                     ; fadvise
0000000000002de7         mov        rsi, r12
0000000000002dea         mov        rdi, rbx
0000000000002ded         call       md5_stream                                  ; md5_stream
0000000000002df2         test       eax, eax
0000000000002df4         jne        loc_2d70

0000000000002dfa         mov        rdi, rbx
0000000000002dfd         call       rpl_fclose                                  ; rpl_fclose
0000000000002e02         test       eax, eax
0000000000002e04         je         loc_2d5b

0000000000002e0a         mov        rdx, rbp
0000000000002e0d         mov        esi, 0x3
0000000000002e12         xor        edi, edi
0000000000002e14         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000002e19         mov        rbx, rax
0000000000002e1c         xor        r12d, r12d
0000000000002e1f         call       j___errno_location                          ; __errno_location
0000000000002e24         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002e26         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x79f5
0000000000002e2d         mov        rcx, rbx
0000000000002e30         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002e32         xor        eax, eax
0000000000002e34         call       j_error                                     ; error
0000000000002e39         jmp        loc_2d61
0000000000002e3e         align      64

                     loc_2e40:
0000000000002e40         movzx      r12d, byte [ignore_missing]                 ; ignore_missing, CODE XREF=digest_file.isra.1+216
0000000000002e48         call       j___errno_location                          ; __errno_location
0000000000002e4d         mov        rbx, rax
0000000000002e50         test       r12b, r12b
0000000000002e53         je         loc_2e5a

0000000000002e55         cmp        dword [rax], 0x2
0000000000002e58         je         loc_2e90

                     loc_2e5a:
0000000000002e5a         mov        rdx, rbp                                    ; CODE XREF=digest_file.isra.1+339
0000000000002e5d         mov        esi, 0x3
0000000000002e62         xor        edi, edi
0000000000002e64         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000002e69         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
0000000000002e6b         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x79f5
0000000000002e72         mov        rcx, rax
0000000000002e75         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002e77         xor        eax, eax
0000000000002e79         xor        r12d, r12d
0000000000002e7c         call       j_error                                     ; error
0000000000002e81         jmp        loc_2d61
0000000000002e86         align      16

                     loc_2e90:
0000000000002e90         mov        byte [r13], 0x1                             ; CODE XREF=digest_file.isra.1+344
0000000000002e95         jmp        loc_2d61
0000000000002e9a         align      32                                          ; End of unwind block (FDE at 0x86bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
0000000000002ea0         push       r13                                         ; Begin of unwind block (FDE at 0x870c), CODE XREF=main+725, main+4318
0000000000002ea2         push       r12
0000000000002ea4         mov        edx, 0x5
0000000000002ea9         push       rbp
0000000000002eaa         push       rbx
0000000000002eab         mov        ebp, edi
0000000000002ead         sub        rsp, 0x88
0000000000002eb4         mov        rbx, qword [program_name]                   ; program_name
0000000000002ebb         mov        rax, qword [fs:0x28]
0000000000002ec4         mov        qword [rsp+0xa8+var_30], rax
0000000000002ec9         xor        eax, eax
0000000000002ecb         test       edi, edi
0000000000002ecd         je         loc_2efd

0000000000002ecf         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
0000000000002ed6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002ed8         call       j_dcgettext                                 ; dcgettext
0000000000002edd         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000002ee4         mov        rdx, rax
0000000000002ee7         mov        rcx, rbx
0000000000002eea         mov        esi, 0x1
0000000000002eef         xor        eax, eax
0000000000002ef1         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_2ef6:
0000000000002ef6         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+918
0000000000002ef8         call       j_exit                                      ; exit
                        ; endp

                     loc_2efd:
0000000000002efd         lea        rsi, qword [aUsageSOptionFi]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... [FILE]...\\nPrint or check %s (%d-bit) checksums.\\n", CODE XREF=usage+45
0000000000002f04         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002f06         call       j_dcgettext                                 ; dcgettext
0000000000002f0b         lea        rcx, qword [aMd5sum+7]                      ; 0x6e31
0000000000002f12         mov        r8d, 0x80
0000000000002f18         mov        rdx, rbx
0000000000002f1b         mov        rsi, rax
0000000000002f1e         mov        edi, 0x1
0000000000002f23         xor        eax, eax
0000000000002f25         call       j___printf_chk                              ; __printf_chk
0000000000002f2a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002f31         lea        rsi, qword [aNwithNoFileOrW]                ; argument "msgid" for method j_dcgettext, "\\nWith no FILE, or when FILE is -, read standard input.\\n"
0000000000002f38         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002f3d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002f3f         call       j_dcgettext                                 ; dcgettext
0000000000002f44         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002f47         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002f4a         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002f4f         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002f56         lea        rsi, qword [aNBBinaryReadIn]                ; argument "msgid" for method j_dcgettext, "\\n  -b, --binary         read in binary mode\\n"
0000000000002f5d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002f62         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002f64         call       j_dcgettext                                 ; dcgettext
0000000000002f69         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002f6c         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002f6f         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002f74         lea        rsi, qword [aCCheckReadSSum]                ; argument "msgid" for method j_dcgettext, "  -c, --check          read %s sums from the FILEs and check them\\n"
0000000000002f7b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002f7d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002f82         call       j_dcgettext                                 ; dcgettext
0000000000002f87         lea        rdx, qword [aMd5sum+7]                      ; 0x6e31
0000000000002f8e         mov        rsi, rax
0000000000002f91         mov        edi, 0x1
0000000000002f96         xor        eax, eax
0000000000002f98         call       j___printf_chk                              ; __printf_chk
0000000000002f9d         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002fa4         lea        rsi, qword [aTagCreateABsds]                ; argument "msgid" for method j_dcgettext, "      --tag            create a BSD-style checksum\\n"
0000000000002fab         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002fb0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002fb2         call       j_dcgettext                                 ; dcgettext
0000000000002fb7         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002fba         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002fbd         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002fc2         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002fc9         lea        rsi, qword [aTTextReadInTex]                ; argument "msgid" for method j_dcgettext, "  -t, --text           read in text mode (default)\\n"
0000000000002fd0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002fd5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002fd7         call       j_dcgettext                                 ; dcgettext
0000000000002fdc         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002fdf         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002fe2         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002fe7         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002fee         lea        rsi, qword [aZZeroEndEachOu]                ; argument "msgid" for method j_dcgettext, "  -z, --zero           end each output line with NUL, not newline,\\n                       and disable file name escaping\\n"
0000000000002ff5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002ffa         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002ffc         call       j_dcgettext                                 ; dcgettext
0000000000003001         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003004         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003007         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000300c         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003013         lea        rsi, qword [aNtheFollowingF]                ; argument "msgid" for method j_dcgettext, "\\nThe following five options are useful only when verifying checksums:\\n      --ignore-missing  don't fail or report status for missing files\\n      --quiet          don't print OK for each successfully verified file\\n      --status         don't output anythi…"
000000000000301a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000301f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003021         call       j_dcgettext                                 ; dcgettext
0000000000003026         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003029         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000302c         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003031         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003038         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
000000000000303f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003044         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003046         call       j_dcgettext                                 ; dcgettext
000000000000304b         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000304e         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003051         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003056         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000305d         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
0000000000003064         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003069         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000306b         call       j_dcgettext                                 ; dcgettext
0000000000003070         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003073         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003076         lea        rbx, qword [aMd5sum]                        ; "md5sum"
000000000000307d         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003082         lea        rsi, qword [aNtheSumsAreCom]                ; argument "msgid" for method j_dcgettext, "\\nThe sums are computed as described in %s.  When checking, the input\\nshould be a former output of this program.  The default mode is to print a\\nline with checksum, a space, a character indicating input mode ('*' for binary,\\n' ' for text or where binary is …"
0000000000003089         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000308b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003090         call       j_dcgettext                                 ; dcgettext
0000000000003095         lea        rdx, qword [aRfc1321]                       ; "RFC 1321"
000000000000309c         mov        rsi, rax
000000000000309f         mov        edi, 0x1
00000000000030a4         xor        eax, eax
00000000000030a6         call       j___printf_chk                              ; __printf_chk
00000000000030ab         lea        rax, qword [aRfc1321+9]                     ; 0x6e3e
00000000000030b2         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
00000000000030b9         mov        qword [rsp+0xa8+var_48], 0x0
00000000000030c2         mov        qword [rsp+0xa8+var_40], 0x0
00000000000030cb         mov        rdx, rsp
00000000000030ce         mov        qword [rsp+0xa8+var_A8], rax
00000000000030d2         lea        rax, qword [aTestInvocation]                ; "test invocation"
00000000000030d9         mov        qword [rsp+0xa8+var_78], rcx
00000000000030de         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
00000000000030e5         mov        qword [rsp+0xa8+var_A0], rax
00000000000030ea         lea        rax, qword [aCoreutils]                     ; "coreutils"
00000000000030f1         mov        qword [rsp+0xa8+var_68], rcx
00000000000030f6         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
00000000000030fd         mov        qword [rsp+0xa8+var_98], rax
0000000000003102         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
0000000000003109         mov        qword [rsp+0xa8+var_58], rcx
000000000000310e         mov        qword [rsp+0xa8+var_90], rax
0000000000003113         lea        rax, qword [aSha224sum]                     ; "sha224sum"
000000000000311a         mov        qword [rsp+0xa8+var_88], rax
000000000000311f         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
0000000000003126         mov        qword [rsp+0xa8+var_80], rax
000000000000312b         mov        qword [rsp+0xa8+var_70], rax
0000000000003130         mov        qword [rsp+0xa8+var_60], rax
0000000000003135         mov        qword [rsp+0xa8+var_50], rax
000000000000313a         nop        word [rax+rax]

                     loc_3140:
0000000000003140         add        rdx, 0x10                                   ; CODE XREF=usage+701
0000000000003144         mov        rdi, qword [rdx]
0000000000003147         test       rdi, rdi
000000000000314a         je         loc_315f

000000000000314c         mov        ecx, 0x7
0000000000003151         mov        rsi, rbx
0000000000003154         rep  cmpsb byte [rsi], byte [rdi]
0000000000003156         seta       al
0000000000003159         sbb        al, 0x0
000000000000315b         test       al, al
000000000000315d         jne        loc_3140

                     loc_315f:
000000000000315f         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+682
0000000000003163         xor        edi, edi
0000000000003165         mov        edx, 0x5
000000000000316a         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
0000000000003171         test       r12, r12
0000000000003174         je         loc_323b

000000000000317a         call       j_dcgettext                                 ; dcgettext
000000000000317f         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000003186         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6eb4
000000000000318d         mov        rsi, rax
0000000000003190         mov        edi, 0x1
0000000000003195         xor        eax, eax
0000000000003197         call       j___printf_chk                              ; __printf_chk
000000000000319c         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000319e         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
00000000000031a3         call       j_setlocale                                 ; setlocale
00000000000031a8         test       rax, rax
00000000000031ab         je         loc_31c9

00000000000031ad         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x6ec2
00000000000031b4         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
00000000000031b9         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
00000000000031bc         call       j_strncmp                                   ; strncmp
00000000000031c1         test       eax, eax
00000000000031c3         jne        loc_32d0

                     loc_31c9:
00000000000031c9         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+779, usage+1109
00000000000031d0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000031d2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000031d7         call       j_dcgettext                                 ; dcgettext
00000000000031dc         lea        rcx, qword [aMd5sum]                        ; "md5sum"
00000000000031e3         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000031ea         mov        rsi, rax
00000000000031ed         mov        edi, 0x1
00000000000031f2         xor        eax, eax
00000000000031f4         call       j___printf_chk                              ; __printf_chk
00000000000031f9         cmp        r12, rbx
00000000000031fc         lea        rcx, qword [aMulticallInvoc+10]             ; 0x6e5a
0000000000003203         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0x7fc1
000000000000320a         cmove      rbx, rcx

                     loc_320e:
000000000000320e         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+1060
0000000000003215         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003217         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000321c         call       j_dcgettext                                 ; dcgettext
0000000000003221         mov        rcx, rbx
0000000000003224         mov        rsi, rax
0000000000003227         mov        rdx, r12
000000000000322a         mov        edi, 0x1
000000000000322f         xor        eax, eax
0000000000003231         call       j___printf_chk                              ; __printf_chk
0000000000003236         jmp        loc_2ef6

                     loc_323b:
000000000000323b         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+724
0000000000003240         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000003247         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6eb4
000000000000324e         mov        rsi, rax
0000000000003251         mov        edi, 0x1
0000000000003256         xor        eax, eax
0000000000003258         call       j___printf_chk                              ; __printf_chk
000000000000325d         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000325f         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000003264         call       j_setlocale                                 ; setlocale
0000000000003269         test       rax, rax
000000000000326c         je         loc_3286

000000000000326e         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x6ec2
0000000000003275         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
000000000000327a         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
000000000000327d         call       j_strncmp                                   ; strncmp
0000000000003282         test       eax, eax
0000000000003284         jne        loc_32c9

                     loc_3286:
0000000000003286         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+972
000000000000328d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003292         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003294         lea        r12, qword [aMd5sum]                        ; "md5sum"
000000000000329b         lea        rbx, qword [aMulticallInvoc+10]             ; 0x6e5a
00000000000032a2         call       j_dcgettext                                 ; dcgettext
00000000000032a7         lea        rcx, qword [aMd5sum]                        ; "md5sum"
00000000000032ae         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000032b5         mov        rsi, rax
00000000000032b8         mov        edi, 0x1
00000000000032bd         xor        eax, eax
00000000000032bf         call       j___printf_chk                              ; __printf_chk
00000000000032c4         jmp        loc_320e

                     loc_32c9:
00000000000032c9         lea        r12, qword [aMd5sum]                        ; "md5sum", CODE XREF=usage+996

                     loc_32d0:
00000000000032d0         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+803
00000000000032d7         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
00000000000032de         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000032e0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000032e5         call       j_dcgettext                                 ; dcgettext
00000000000032ea         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
00000000000032ed         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000032f0         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000032f5         jmp        loc_31c9
00000000000032fa         align      256                                         ; End of unwind block (FDE at 0x870c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
0000000000003300         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0x8794), file_name
0000000000003307         ret
                        ; endp
0000000000003308         align      16                                          ; End of unwind block (FDE at 0x8794)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
0000000000003310         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x87a8), ignore_EPIPE
0000000000003317         ret
                        ; endp
0000000000003318         align      32                                          ; End of unwind block (FDE at 0x87a8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
0000000000003320         push       rbp                                         ; Begin of unwind block (FDE at 0x87bc), DATA XREF=main+103
0000000000003321         push       rbx
0000000000003322         sub        rsp, 0x8
0000000000003326         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000332d         call       close_stream                                ; close_stream
0000000000003332         test       eax, eax
0000000000003334         je         loc_334c

0000000000003336         call       j___errno_location                          ; __errno_location
000000000000333b         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
0000000000003342         mov        rbx, rax
0000000000003345         je         loc_3363

0000000000003347         cmp        dword [rax], 0x20
000000000000334a         jne        loc_3363

                     loc_334c:
000000000000334c         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
0000000000003353         call       close_stream                                ; close_stream
0000000000003358         test       eax, eax
000000000000335a         jne        loc_33a2

000000000000335c         add        rsp, 0x8
0000000000003360         pop        rbx
0000000000003361         pop        rbp
0000000000003362         ret
                        ; endp

                     loc_3363:
0000000000003363         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
000000000000336a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000336c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003371         call       j_dcgettext                                 ; dcgettext
0000000000003376         mov        rdi, qword [file_name]                      ; file_name
000000000000337d         mov        rbp, rax
0000000000003380         test       rdi, rdi
0000000000003383         je         loc_33ad

0000000000003385         call       quotearg_colon                              ; quotearg_colon
000000000000338a         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
000000000000338c         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000003393         mov        rcx, rax
0000000000003396         mov        r8, rbp
0000000000003399         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000339b         xor        eax, eax
000000000000339d         call       j_error                                     ; error

                     loc_33a2:
00000000000033a2         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
00000000000033a8         call       j__exit                                     ; _exit
                        ; endp

                     loc_33ad:
00000000000033ad         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
00000000000033af         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x79f5
00000000000033b6         mov        rcx, rax
00000000000033b9         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000033bb         xor        eax, eax
00000000000033bd         call       j_error                                     ; error
00000000000033c2         jmp        loc_33a2
00000000000033c4         align      16                                          ; End of unwind block (FDE at 0x87bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     md5_init_ctx:
00000000000033d0         movabs     rax, 0xefcdab8967452301                     ; Begin of unwind block (FDE at 0x87ec)
00000000000033da         mov        qword [rdi+0x10], 0x0
00000000000033e2         mov        dword [rdi+0x18], 0x0
00000000000033e9         mov        qword [rdi], rax
00000000000033ec         movabs     rax, 0x1032547698badcfe
00000000000033f6         mov        qword [rdi+8], rax
00000000000033fa         ret
                        ; endp
00000000000033fb         align      1024                                        ; End of unwind block (FDE at 0x87ec)

                     md5_read_ctx:
0000000000003400         mov        edx, dword [rdi]                            ; Begin of unwind block (FDE at 0x8800), CODE XREF=md5_finish_ctx+242
0000000000003402         mov        rax, rsi
0000000000003405         mov        dword [rsi], edx
0000000000003407         mov        edx, dword [rdi+4]
000000000000340a         mov        dword [rsi+4], edx
000000000000340d         mov        edx, dword [rdi+8]
0000000000003410         mov        dword [rsi+8], edx
0000000000003413         mov        edx, dword [rdi+0xc]
0000000000003416         mov        dword [rsi+0xc], edx
0000000000003419         ret
                        ; endp
000000000000341a         align      32                                          ; End of unwind block (FDE at 0x8800)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_38: int64_t, -56
        ;    var_40: int64_t, -64
        ;    var_44: int32_t, -68
        ;    var_48: int32_t, -72
        ;    var_4C: int32_t, -76
        ;    var_50: int32_t, -80
        ;    var_54: int32_t, -84
        ;    var_58: int32_t, -88
        ;    var_5C: int32_t, -92
        ;    var_60: int32_t, -96
        ;    var_64: int32_t, -100
        ;    var_68: int32_t, -104
        ;    var_6C: int32_t, -108
        ;    var_70: int32_t, -112
        ;    var_74: int32_t, -116


                     md5_process_block:
0000000000003420         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x8814), CODE XREF=md5_finish_ctx+229, md5_process_bytes+138, md5_process_bytes+230, md5_process_bytes+303, md5_process_bytes+489, md5_stream+267
0000000000003423         push       r15
0000000000003425         push       r14
0000000000003427         and        rax, 0xfffffffffffffffc
000000000000342b         push       r13
000000000000342d         push       r12
000000000000342f         push       rbp
0000000000003430         push       rbx
0000000000003431         mov        rbx, rdi
0000000000003434         lea        rcx, qword [rbx+rax]
0000000000003438         mov        eax, dword [rdx]
000000000000343a         mov        rdi, rdx
000000000000343d         mov        r11d, dword [rdx+4]
0000000000003441         mov        r10d, dword [rdx+8]
0000000000003445         mov        qword [rsp+0x30+var_38], rdx
000000000000344a         mov        qword [rsp+0x30+var_40], rcx
000000000000344f         mov        dword [rsp+0x30+var_48], eax
0000000000003453         mov        eax, dword [rdx+0xc]
0000000000003456         mov        edx, esi
0000000000003458         mov        dword [rsp+0x30+var_50], eax
000000000000345c         xor        eax, eax
000000000000345e         add        edx, dword [rdi+0x10]
0000000000003461         setb       al
0000000000003464         shr        rsi, 0x20
0000000000003468         add        esi, dword [rdi+0x14]
000000000000346b         mov        dword [rdi+0x10], edx
000000000000346e         add        esi, eax
0000000000003470         cmp        rbx, rcx
0000000000003473         mov        dword [rdi+0x14], esi
0000000000003476         jae        loc_3b6a

000000000000347c         mov        r15d, r10d
000000000000347f         nop

                     loc_3480:
0000000000003480         mov        r14d, dword [rbx]                           ; CODE XREF=md5_process_block+1857
0000000000003483         mov        edi, dword [rsp+0x30+var_50]
0000000000003487         mov        eax, dword [rsp+0x30+var_48]
000000000000348b         mov        esi, dword [rbx+4]
000000000000348e         mov        r8d, dword [rbx+0xc]
0000000000003492         mov        r10d, dword [rbx+0x14]
0000000000003496         mov        ebp, dword [rbx+0x18]
0000000000003499         mov        r13d, dword [rbx+0x1c]
000000000000349d         lea        edx, dword [r14+rax-0x28955b88]
00000000000034a5         mov        eax, edi
00000000000034a7         lea        ecx, dword [rsi+rdi-0x173848aa]
00000000000034ae         xor        eax, r15d
00000000000034b1         mov        dword [rsp+0x30+var_74], esi
00000000000034b5         mov        dword [rsp+0x30+var_64], r10d
00000000000034ba         and        eax, r11d
00000000000034bd         mov        r12d, dword [rbx+0x24]
00000000000034c1         mov        dword [rsp+0x30+var_6C], r8d
00000000000034c6         xor        eax, edi
00000000000034c8         lea        edi, dword [r8+r11-0x3e423112]
00000000000034d0         mov        r8d, dword [rbx+0x2c]
00000000000034d4         add        eax, edx
00000000000034d6         mov        edx, r11d
00000000000034d9         rol        eax, 0x7
00000000000034dc         xor        edx, r15d
00000000000034df         mov        dword [rsp+0x30+var_5C], r12d
00000000000034e4         add        eax, r11d
00000000000034e7         mov        dword [rsp+0x30+var_54], r8d
00000000000034ec         and        edx, eax
00000000000034ee         mov        r9d, eax
00000000000034f1         xor        edx, r15d
00000000000034f4         xor        r9d, r11d
00000000000034f7         add        edx, ecx
00000000000034f9         mov        ecx, dword [rbx+8]
00000000000034fc         rol        edx, 0xc
00000000000034ff         add        edx, eax
0000000000003501         lea        esi, dword [rcx+r15+0x242070db]
0000000000003509         mov        dword [rsp+0x30+var_70], ecx
000000000000350d         mov        ecx, r9d
0000000000003510         and        ecx, edx
0000000000003512         mov        r9d, eax
0000000000003515         xor        ecx, r11d
0000000000003518         xor        r9d, edx
000000000000351b         add        ecx, esi
000000000000351d         mov        esi, r9d
0000000000003520         mov        r9d, dword [rbx+0x10]
0000000000003524         ror        ecx, 0xf
0000000000003527         add        ecx, edx
0000000000003529         and        esi, ecx
000000000000352b         mov        dword [rsp+0x30+var_68], r9d
0000000000003530         xor        esi, eax
0000000000003532         add        esi, edi
0000000000003534         lea        edi, dword [r9+rax-0xa83f051]
000000000000353c         mov        eax, edx
000000000000353e         ror        esi, 0xa
0000000000003541         xor        eax, ecx
0000000000003543         mov        r9d, dword [rbx+0x3c]
0000000000003547         add        esi, ecx
0000000000003549         and        eax, esi
000000000000354b         xor        eax, edx
000000000000354d         add        eax, edi
000000000000354f         lea        edi, dword [r10+rdx+0x4787c62a]
0000000000003557         mov        edx, ecx
0000000000003559         rol        eax, 0x7
000000000000355c         xor        edx, esi
000000000000355e         mov        r10d, ebp
0000000000003561         add        eax, esi
0000000000003563         mov        dword [rsp+0x30+var_4C], r10d
0000000000003568         and        edx, eax
000000000000356a         xor        edx, ecx
000000000000356c         add        edx, edi
000000000000356e         lea        edi, dword [rbp+rcx-0x57cfb9ed]
0000000000003575         mov        ebp, esi
0000000000003577         xor        ebp, eax
0000000000003579         rol        edx, 0xc
000000000000357c         add        edx, eax
000000000000357e         mov        ecx, ebp
0000000000003580         mov        ebp, eax
0000000000003582         and        ecx, edx
0000000000003584         xor        ebp, edx
0000000000003586         xor        ecx, esi
0000000000003588         add        ecx, edi
000000000000358a         lea        edi, dword [r13+rsi-0x2b96aff]
0000000000003592         mov        esi, ebp
0000000000003594         ror        ecx, 0xf
0000000000003597         mov        ebp, dword [rbx+0x20]
000000000000359a         add        ecx, edx
000000000000359c         and        esi, ecx
000000000000359e         xor        esi, eax
00000000000035a0         mov        dword [rsp+0x30+var_60], ebp
00000000000035a4         add        esi, edi
00000000000035a6         lea        edi, dword [rbp+rax+0x698098d8]
00000000000035ad         mov        eax, edx
00000000000035af         ror        esi, 0xa
00000000000035b2         xor        eax, ecx
00000000000035b4         mov        ebp, dword [rbx+0x30]
00000000000035b7         add        esi, ecx
00000000000035b9         and        eax, esi
00000000000035bb         xor        eax, edx
00000000000035bd         add        eax, edi
00000000000035bf         lea        edi, dword [r12+rdx-0x74bb0851]
00000000000035c7         mov        edx, ecx
00000000000035c9         rol        eax, 0x7
00000000000035cc         xor        edx, esi
00000000000035ce         mov        r12d, dword [rbx+0x38]
00000000000035d2         add        eax, esi
00000000000035d4         and        edx, eax
00000000000035d6         xor        edx, ecx
00000000000035d8         add        edx, edi
00000000000035da         mov        edi, dword [rbx+0x28]
00000000000035dd         rol        edx, 0xc
00000000000035e0         add        edx, eax
00000000000035e2         mov        dword [rsp+0x30+var_58], edi
00000000000035e6         lea        edi, dword [rdi+rcx-0xa44f]
00000000000035ed         mov        ecx, esi
00000000000035ef         xor        ecx, eax
00000000000035f1         and        ecx, edx
00000000000035f3         xor        ecx, esi
00000000000035f5         add        ecx, edi
00000000000035f7         lea        edi, dword [r8+rsi-0x76a32842]
00000000000035ff         mov        esi, eax
0000000000003601         ror        ecx, 0xf
0000000000003604         xor        esi, edx
0000000000003606         mov        r8d, dword [rbx+0x34]
000000000000360a         add        ecx, edx
000000000000360c         add        rbx, 0x40
0000000000003610         and        esi, ecx
0000000000003612         xor        esi, eax
0000000000003614         add        esi, edi
0000000000003616         lea        edi, dword [rbp+rax+0x6b901122]
000000000000361d         mov        eax, edx
000000000000361f         ror        esi, 0xa
0000000000003622         xor        eax, ecx
0000000000003624         add        esi, ecx
0000000000003626         and        eax, esi
0000000000003628         xor        eax, edx
000000000000362a         add        eax, edi
000000000000362c         lea        edi, dword [r8+rdx-0x2678e6d]
0000000000003634         mov        edx, ecx
0000000000003636         rol        eax, 0x7
0000000000003639         xor        edx, esi
000000000000363b         add        eax, esi
000000000000363d         and        edx, eax
000000000000363f         xor        edx, ecx
0000000000003641         add        edx, edi
0000000000003643         lea        edi, dword [r12+rcx-0x5986bc72]
000000000000364b         mov        ecx, esi
000000000000364d         rol        edx, 0xc
0000000000003650         xor        ecx, eax
0000000000003652         add        edx, eax
0000000000003654         and        ecx, edx
0000000000003656         xor        ecx, esi
0000000000003658         add        ecx, edi
000000000000365a         lea        edi, dword [r9+rsi+0x49b40821]
0000000000003662         mov        esi, eax
0000000000003664         ror        ecx, 0xf
0000000000003667         xor        esi, edx
0000000000003669         add        ecx, edx
000000000000366b         and        esi, ecx
000000000000366d         xor        esi, eax
000000000000366f         add        esi, edi
0000000000003671         mov        edi, dword [rsp+0x30+var_74]
0000000000003675         ror        esi, 0xa
0000000000003678         add        esi, ecx
000000000000367a         lea        edi, dword [rdi+rax-0x9e1da9e]
0000000000003681         mov        eax, ecx
0000000000003683         xor        eax, esi
0000000000003685         and        eax, edx
0000000000003687         xor        eax, ecx
0000000000003689         add        eax, edi
000000000000368b         lea        edi, dword [r10+rdx-0x3fbf4cc0]
0000000000003693         mov        edx, esi
0000000000003695         rol        eax, 0x5
0000000000003698         add        eax, esi
000000000000369a         xor        edx, eax
000000000000369c         and        edx, ecx
000000000000369e         xor        edx, esi
00000000000036a0         add        edx, edi
00000000000036a2         mov        edi, dword [rsp+0x30+var_54]
00000000000036a6         rol        edx, 0x9
00000000000036a9         add        edx, eax
00000000000036ab         lea        edi, dword [rdi+rcx+0x265e5a51]
00000000000036b2         mov        ecx, eax
00000000000036b4         xor        ecx, edx
00000000000036b6         and        ecx, esi
00000000000036b8         xor        ecx, eax
00000000000036ba         add        ecx, edi
00000000000036bc         lea        edi, dword [r14+rsi-0x16493856]
00000000000036c4         mov        esi, edx
00000000000036c6         rol        ecx, 0xe
00000000000036c9         add        ecx, edx
00000000000036cb         xor        esi, ecx
00000000000036cd         and        esi, eax
00000000000036cf         xor        esi, edx
00000000000036d1         add        esi, edi
00000000000036d3         mov        edi, dword [rsp+0x30+var_64]
00000000000036d7         ror        esi, 0xc
00000000000036da         add        esi, ecx
00000000000036dc         lea        edi, dword [rdi+rax-0x29d0efa3]
00000000000036e3         mov        eax, ecx
00000000000036e5         xor        eax, esi
00000000000036e7         and        eax, edx
00000000000036e9         xor        eax, ecx
00000000000036eb         add        eax, edi
00000000000036ed         mov        edi, dword [rsp+0x30+var_58]
00000000000036f1         rol        eax, 0x5
00000000000036f4         add        eax, esi
00000000000036f6         lea        edi, dword [rdi+rdx+0x2441453]
00000000000036fd         mov        edx, esi
00000000000036ff         xor        edx, eax
0000000000003701         and        edx, ecx
0000000000003703         xor        edx, esi
0000000000003705         add        edx, edi
0000000000003707         lea        edi, dword [r9+rcx-0x275e197f]
000000000000370f         mov        ecx, eax
0000000000003711         rol        edx, 0x9
0000000000003714         add        edx, eax
0000000000003716         xor        ecx, edx
0000000000003718         and        ecx, esi
000000000000371a         xor        ecx, eax
000000000000371c         add        ecx, edi
000000000000371e         mov        edi, dword [rsp+0x30+var_68]
0000000000003722         mov        r10d, dword [rsp+0x30+var_5C]
0000000000003727         rol        ecx, 0xe
000000000000372a         add        ecx, edx
000000000000372c         lea        edi, dword [rdi+rsi-0x182c0438]
0000000000003733         mov        esi, edx
0000000000003735         xor        esi, ecx
0000000000003737         and        esi, eax
0000000000003739         xor        esi, edx
000000000000373b         add        esi, edi
000000000000373d         lea        edi, dword [r10+rax+0x21e1cde6]
0000000000003745         mov        eax, ecx
0000000000003747         ror        esi, 0xc
000000000000374a         mov        r10d, dword [rsp+0x30+var_60]
000000000000374f         add        esi, ecx
0000000000003751         xor        eax, esi
0000000000003753         and        eax, edx
0000000000003755         xor        eax, ecx
0000000000003757         add        eax, edi
0000000000003759         lea        edi, dword [r12+rdx-0x3cc8f82a]
0000000000003761         mov        edx, esi
0000000000003763         rol        eax, 0x5
0000000000003766         add        eax, esi
0000000000003768         xor        edx, eax
000000000000376a         and        edx, ecx
000000000000376c         xor        edx, esi
000000000000376e         add        edx, edi
0000000000003770         mov        edi, dword [rsp+0x30+var_6C]
0000000000003774         rol        edx, 0x9
0000000000003777         add        edx, eax
0000000000003779         lea        edi, dword [rdi+rcx-0xb2af279]
0000000000003780         mov        ecx, eax
0000000000003782         xor        ecx, edx
0000000000003784         and        ecx, esi
0000000000003786         lea        esi, dword [r10+rsi+0x455a14ed]
000000000000378e         mov        r10d, edx
0000000000003791         xor        ecx, eax
0000000000003793         add        ecx, edi
0000000000003795         rol        ecx, 0xe
0000000000003798         add        ecx, edx
000000000000379a         xor        r10d, ecx
000000000000379d         mov        edi, r10d
00000000000037a0         and        edi, eax
00000000000037a2         xor        edi, edx
00000000000037a4         add        edi, esi
00000000000037a6         lea        esi, dword [r8+rax-0x561c16fb]
00000000000037ae         mov        eax, ecx
00000000000037b0         ror        edi, 0xc
00000000000037b3         add        edi, ecx
00000000000037b5         xor        eax, edi
00000000000037b7         lea        r10d, dword [rbp+rdi-0x72d5b376]
00000000000037bf         and        eax, edx
00000000000037c1         xor        eax, ecx
00000000000037c3         mov        dword [rsp+0x30+var_44], r10d
00000000000037c8         add        eax, esi
00000000000037ca         mov        esi, dword [rsp+0x30+var_70]
00000000000037ce         rol        eax, 0x5
00000000000037d1         add        eax, edi
00000000000037d3         lea        esi, dword [rsi+rdx-0x3105c08]
00000000000037da         mov        edx, edi
00000000000037dc         xor        edx, eax
00000000000037de         and        edx, ecx
00000000000037e0         lea        ecx, dword [r13+rcx+0x676f02d9]
00000000000037e8         xor        edx, edi
00000000000037ea         add        edx, esi
00000000000037ec         mov        esi, eax
00000000000037ee         rol        edx, 0x9
00000000000037f1         add        edx, eax
00000000000037f3         xor        esi, edx
00000000000037f5         and        esi, edi
00000000000037f7         xor        esi, eax
00000000000037f9         add        esi, ecx
00000000000037fb         mov        ecx, edx
00000000000037fd         rol        esi, 0xe
0000000000003800         add        esi, edx
0000000000003802         xor        ecx, esi
0000000000003804         mov        r10d, ecx
0000000000003807         and        r10d, eax
000000000000380a         mov        edi, r10d
000000000000380d         mov        r10d, dword [rsp+0x30+var_64]
0000000000003812         xor        edi, edx
0000000000003814         add        edi, dword [rsp+0x30+var_44]
0000000000003818         lea        eax, dword [r10+rax-0x5c6be]
0000000000003820         ror        edi, 0xc
0000000000003823         add        edi, esi
0000000000003825         xor        ecx, edi
0000000000003827         add        ecx, eax
0000000000003829         mov        eax, dword [rsp+0x30+var_60]
000000000000382d         rol        ecx, 0x4
0000000000003830         add        ecx, edi
0000000000003832         lea        eax, dword [rax+rdx-0x788e097f]
0000000000003839         mov        edx, esi
000000000000383b         xor        edx, edi
000000000000383d         xor        edx, ecx
000000000000383f         add        edx, eax
0000000000003841         mov        eax, dword [rsp+0x30+var_54]
0000000000003845         rol        edx, 0xb
0000000000003848         add        edx, ecx
000000000000384a         lea        eax, dword [rax+rsi+0x6d9d6122]
0000000000003851         mov        esi, edi
0000000000003853         lea        edi, dword [r12+rdi-0x21ac7f4]
000000000000385b         xor        esi, ecx
000000000000385d         xor        esi, edx
000000000000385f         add        esi, eax
0000000000003861         mov        eax, ecx
0000000000003863         rol        esi, 0x10
0000000000003866         xor        eax, edx
0000000000003868         add        esi, edx
000000000000386a         xor        eax, esi
000000000000386c         mov        r10d, esi
000000000000386f         add        eax, edi
0000000000003871         mov        edi, dword [rsp+0x30+var_74]
0000000000003875         ror        eax, 0x9
0000000000003878         add        eax, esi
000000000000387a         lea        edi, dword [rdi+rcx-0x5b4115bc]
0000000000003881         mov        ecx, edx
0000000000003883         xor        r10d, eax
0000000000003886         xor        ecx, esi
0000000000003888         lea        esi, dword [r13+rsi-0x944b4a0]
0000000000003890         xor        ecx, eax
0000000000003892         add        ecx, edi
0000000000003894         mov        edi, dword [rsp+0x30+var_68]
0000000000003898         rol        ecx, 0x4
000000000000389b         add        ecx, eax
000000000000389d         lea        edx, dword [rdi+rdx+0x4bdecfa9]
00000000000038a4         mov        edi, r10d
00000000000038a7         xor        edi, ecx
00000000000038a9         add        edi, edx
00000000000038ab         mov        edx, eax
00000000000038ad         rol        edi, 0xb
00000000000038b0         xor        edx, ecx
00000000000038b2         add        edi, ecx
00000000000038b4         xor        edx, edi
00000000000038b6         add        edx, esi
00000000000038b8         mov        esi, dword [rsp+0x30+var_58]
00000000000038bc         rol        edx, 0x10
00000000000038bf         add        edx, edi
00000000000038c1         lea        eax, dword [rsi+rax-0x41404390]
00000000000038c8         mov        esi, ecx
00000000000038ca         xor        esi, edi
00000000000038cc         xor        esi, edx
00000000000038ce         add        esi, eax
00000000000038d0         lea        eax, dword [r8+rcx+0x289b7ec6]
00000000000038d8         mov        ecx, edi
00000000000038da         ror        esi, 0x9
00000000000038dd         xor        ecx, edx
00000000000038df         lea        edi, dword [r14+rdi-0x155ed806]
00000000000038e7         add        esi, edx
00000000000038e9         xor        ecx, esi
00000000000038eb         mov        r10d, esi
00000000000038ee         add        ecx, eax
00000000000038f0         mov        eax, edx
00000000000038f2         rol        ecx, 0x4
00000000000038f5         xor        eax, esi
00000000000038f7         add        ecx, esi
00000000000038f9         xor        eax, ecx
00000000000038fb         xor        r10d, ecx
00000000000038fe         add        eax, edi
0000000000003900         mov        edi, dword [rsp+0x30+var_6C]
0000000000003904         rol        eax, 0xb
0000000000003907         add        eax, ecx
0000000000003909         lea        edx, dword [rdi+rdx-0x2b10cf7b]
0000000000003910         mov        edi, r10d
0000000000003913         xor        edi, eax
0000000000003915         add        edi, edx
0000000000003917         mov        edx, dword [rsp+0x30+var_4C]
000000000000391b         rol        edi, 0x10
000000000000391e         add        edi, eax
0000000000003920         lea        edx, dword [rdx+rsi+0x4881d05]
0000000000003927         mov        esi, ecx
0000000000003929         xor        esi, eax
000000000000392b         xor        esi, edi
000000000000392d         add        esi, edx
000000000000392f         mov        edx, dword [rsp+0x30+var_5C]
0000000000003933         ror        esi, 0x9
0000000000003936         add        esi, edi
0000000000003938         lea        ecx, dword [rdx+rcx-0x262b2fc7]
000000000000393f         mov        edx, eax
0000000000003941         lea        eax, dword [rbp+rax-0x1924661b]
0000000000003948         xor        edx, edi
000000000000394a         mov        r10d, esi
000000000000394d         xor        edx, esi
000000000000394f         add        edx, ecx
0000000000003951         mov        ecx, edi
0000000000003953         rol        edx, 0x4
0000000000003956         add        edx, esi
0000000000003958         xor        ecx, esi
000000000000395a         xor        ecx, edx
000000000000395c         xor        r10d, edx
000000000000395f         add        ecx, eax
0000000000003961         lea        eax, dword [r9+rdi+0x1fa27cf8]
0000000000003969         mov        edi, r10d
000000000000396c         rol        ecx, 0xb
000000000000396f         mov        r10d, dword [rsp+0x30+var_64]
0000000000003974         add        ecx, edx
0000000000003976         xor        edi, ecx
0000000000003978         add        edi, eax
000000000000397a         mov        eax, dword [rsp+0x30+var_70]
000000000000397e         rol        edi, 0x10
0000000000003981         add        edi, ecx
0000000000003983         lea        esi, dword [rax+rsi-0x3b53a99b]
000000000000398a         mov        eax, edx
000000000000398c         xor        eax, ecx
000000000000398e         xor        eax, edi
0000000000003990         add        eax, esi
0000000000003992         lea        esi, dword [r14+rdx-0xbd6ddbc]
000000000000399a         mov        edx, ecx
000000000000399c         ror        eax, 0x9
000000000000399f         not        edx
00000000000039a1         mov        r14d, dword [rsp+0x30+var_74]
00000000000039a6         add        eax, edi
00000000000039a8         or         edx, eax
00000000000039aa         xor        edx, edi
00000000000039ac         add        edx, esi
00000000000039ae         lea        esi, dword [r13+rcx+0x432aff97]
00000000000039b6         mov        r13d, edi
00000000000039b9         rol        edx, 0x6
00000000000039bc         not        r13d
00000000000039bf         lea        edi, dword [r12+rdi-0x546bdc59]
00000000000039c7         add        edx, eax
00000000000039c9         mov        ecx, r13d
00000000000039cc         or         ecx, edx
00000000000039ce         mov        r13d, edx
00000000000039d1         xor        ecx, eax
00000000000039d3         not        r13d
00000000000039d6         add        ecx, esi
00000000000039d8         mov        esi, eax
00000000000039da         rol        ecx, 0xa
00000000000039dd         not        esi
00000000000039df         add        ecx, edx
00000000000039e1         or         esi, ecx
00000000000039e3         mov        r12d, ecx
00000000000039e6         xor        esi, edx
00000000000039e8         not        r12d
00000000000039eb         add        esi, edi
00000000000039ed         lea        edi, dword [r10+rax-0x36c5fc7]
00000000000039f5         mov        eax, r13d
00000000000039f8         rol        esi, 0xf
00000000000039fb         mov        r10d, dword [rsp+0x30+var_4C]
0000000000003a00         add        esi, ecx
0000000000003a02         or         eax, esi
0000000000003a04         xor        eax, ecx
0000000000003a06         add        eax, edi
0000000000003a08         lea        edi, dword [rbp+rdx+0x655b59c3]
0000000000003a0f         mov        ebp, dword [rsp+0x30+var_6C]
0000000000003a13         ror        eax, 0xb
0000000000003a16         mov        edx, r12d
0000000000003a19         add        eax, esi
0000000000003a1b         or         edx, eax
0000000000003a1d         xor        edx, esi
0000000000003a1f         add        edx, edi
0000000000003a21         lea        edi, dword [rbp+rcx-0x70f3336e]
0000000000003a28         mov        ebp, esi
0000000000003a2a         rol        edx, 0x6
0000000000003a2d         not        ebp
0000000000003a2f         add        edx, eax
0000000000003a31         mov        ecx, ebp
0000000000003a33         or         ecx, edx
0000000000003a35         mov        ebp, edx
0000000000003a37         xor        ecx, eax
0000000000003a39         not        ebp
0000000000003a3b         add        ecx, edi
0000000000003a3d         mov        edi, dword [rsp+0x30+var_58]
0000000000003a41         rol        ecx, 0xa
0000000000003a44         add        ecx, edx
0000000000003a46         lea        edi, dword [rdi+rsi-0x100b83]
0000000000003a4d         mov        esi, eax
0000000000003a4f         not        esi
0000000000003a51         or         esi, ecx
0000000000003a53         xor        esi, edx
0000000000003a55         add        esi, edi
0000000000003a57         lea        edi, dword [r14+rax-0x7a7ba22f]
0000000000003a5f         mov        eax, ebp
0000000000003a61         rol        esi, 0xf
0000000000003a64         mov        r14d, dword [rsp+0x30+var_60]
0000000000003a69         mov        ebp, ecx
0000000000003a6b         add        esi, ecx
0000000000003a6d         not        ebp
0000000000003a6f         or         eax, esi
0000000000003a71         xor        eax, ecx
0000000000003a73         add        eax, edi
0000000000003a75         lea        edi, dword [r14+rdx+0x6fa87e4f]
0000000000003a7d         mov        edx, ebp
0000000000003a7f         ror        eax, 0xb
0000000000003a82         mov        ebp, esi
0000000000003a84         mov        r14d, dword [rsp+0x30+var_54]
0000000000003a89         add        eax, esi
0000000000003a8b         not        ebp
0000000000003a8d         or         edx, eax
0000000000003a8f         xor        edx, esi
0000000000003a91         add        edx, edi
0000000000003a93         lea        edi, dword [r9+rcx-0x1d31920]
0000000000003a9b         mov        ecx, ebp
0000000000003a9d         rol        edx, 0x6
0000000000003aa0         mov        r9d, dword [rsp+0x30+var_68]
0000000000003aa5         add        edx, eax
0000000000003aa7         or         ecx, edx
0000000000003aa9         xor        ecx, eax
0000000000003aab         add        ecx, edi
0000000000003aad         lea        edi, dword [r10+rsi-0x5cfebcec]
0000000000003ab5         mov        esi, eax
0000000000003ab7         rol        ecx, 0xa
0000000000003aba         not        esi
0000000000003abc         lea        eax, dword [r8+rax+0x4e0811a1]
0000000000003ac4         add        ecx, edx
0000000000003ac6         mov        r8d, edx
0000000000003ac9         mov        r10d, dword [rsp+0x30+var_5C]
0000000000003ace         or         esi, ecx
0000000000003ad0         not        r8d
0000000000003ad3         xor        esi, edx
0000000000003ad5         lea        edx, dword [r9+rdx-0x8ac817e]
0000000000003add         mov        r9d, ecx
0000000000003ae0         add        esi, edi
0000000000003ae2         mov        edi, r8d
0000000000003ae5         not        r9d
0000000000003ae8         rol        esi, 0xf
0000000000003aeb         add        esi, ecx
0000000000003aed         or         edi, esi
0000000000003aef         xor        edi, ecx
0000000000003af1         lea        ecx, dword [r14+rcx-0x42c50dcb]
0000000000003af9         add        edi, eax
0000000000003afb         mov        eax, r9d
0000000000003afe         ror        edi, 0xb
0000000000003b01         add        edi, esi
0000000000003b03         or         eax, edi
0000000000003b05         xor        eax, esi
0000000000003b07         add        eax, edx
0000000000003b09         mov        edx, esi
0000000000003b0b         rol        eax, 0x6
0000000000003b0e         not        edx
0000000000003b10         add        eax, edi
0000000000003b12         or         edx, eax
0000000000003b14         xor        edx, edi
0000000000003b16         add        edx, ecx
0000000000003b18         mov        ecx, dword [rsp+0x30+var_70]
0000000000003b1c         rol        edx, 0xa
0000000000003b1f         add        edx, eax
0000000000003b21         lea        esi, dword [rcx+rsi+0x2ad7d2bb]
0000000000003b28         mov        ecx, edi
0000000000003b2a         lea        edi, dword [r10+rdi-0x14792c6f]
0000000000003b32         not        ecx
0000000000003b34         or         ecx, edx
0000000000003b36         xor        ecx, eax
0000000000003b38         add        ecx, esi
0000000000003b3a         mov        esi, eax
0000000000003b3c         rol        ecx, 0xf
0000000000003b3f         not        esi
0000000000003b41         add        ecx, edx
0000000000003b43         or         esi, ecx
0000000000003b45         xor        esi, edx
0000000000003b47         add        esi, edi
0000000000003b49         ror        esi, 0xb
0000000000003b4c         add        esi, ecx
0000000000003b4e         add        dword [rsp+0x30+var_48], eax
0000000000003b52         add        r15d, ecx
0000000000003b55         add        r11d, esi
0000000000003b58         add        dword [rsp+0x30+var_50], edx
0000000000003b5c         cmp        qword [rsp+0x30+var_40], rbx
0000000000003b61         ja         loc_3480

0000000000003b67         mov        r10d, r15d

                     loc_3b6a:
0000000000003b6a         mov        rax, qword [rsp+0x30+var_38]                ; CODE XREF=md5_process_block+86
0000000000003b6f         mov        ebx, dword [rsp+0x30+var_48]
0000000000003b73         mov        dword [rax], ebx
0000000000003b75         mov        ebx, dword [rsp+0x30+var_50]
0000000000003b79         mov        dword [rax+4], r11d
0000000000003b7d         mov        dword [rax+8], r10d
0000000000003b81         mov        dword [rax+0xc], ebx
0000000000003b84         pop        rbx
0000000000003b85         pop        rbp
0000000000003b86         pop        r12
0000000000003b88         pop        r13
0000000000003b8a         pop        r14
0000000000003b8c         pop        r15
0000000000003b8e         ret
                        ; endp
0000000000003b8f         align      16                                          ; End of unwind block (FDE at 0x8814)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     md5_finish_ctx:
0000000000003b90         push       rbp                                         ; Begin of unwind block (FDE at 0x8858), CODE XREF=md5_buffer+94, md5_stream+188
0000000000003b91         push       rbx
0000000000003b92         mov        rbx, rdi
0000000000003b95         mov        eax, dword [rdi+0x18]
0000000000003b98         mov        rbp, rsi
0000000000003b9b         mov        edx, dword [rbx+0x14]
0000000000003b9e         cmp        eax, 0x38
0000000000003ba1         mov        esi, eax
0000000000003ba3         sbb        r8, r8
0000000000003ba6         and        r8, 0xffffffffffffffc0
0000000000003baa         sub        r8, 0xffffffffffffff80
0000000000003bae         cmp        eax, 0x38
0000000000003bb1         sbb        rcx, rcx
0000000000003bb4         and        rcx, 0xfffffffffffffff0
0000000000003bb8         add        rcx, 0x1f
0000000000003bbc         cmp        eax, 0x38
0000000000003bbf         sbb        rdi, rdi
0000000000003bc2         xor        r9d, r9d
0000000000003bc5         and        rdi, 0xfffffffffffffff0
0000000000003bc9         add        rdi, 0x1e
0000000000003bcd         add        esi, dword [rbx+0x10]
0000000000003bd0         setb       r9b
0000000000003bd4         mov        dword [rbx+0x10], esi
0000000000003bd7         test       r9d, r9d
0000000000003bda         je         loc_3be2

0000000000003bdc         add        edx, 0x1
0000000000003bdf         mov        dword [rbx+0x14], edx

                     loc_3be2:
0000000000003be2         lea        r9d, dword [rsi*8]                          ; CODE XREF=md5_finish_ctx+74
0000000000003bea         shl        edx, 0x3
0000000000003bed         shr        esi, 0x1d
0000000000003bf0         or         edx, esi
0000000000003bf2         lea        rsi, qword [fillbuf]                        ; fillbuf
0000000000003bf9         mov        dword [rbx+rdi*4+0x1c], r9d
0000000000003bfe         mov        rdi, r8
0000000000003c01         mov        dword [rbx+rcx*4+0x1c], edx
0000000000003c05         sub        rdi, rax
0000000000003c08         lea        r9, qword [rbx+0x1c]
0000000000003c0c         lea        rcx, qword [rdi-8]
0000000000003c10         lea        rdx, qword [r9+rax]
0000000000003c14         cmp        rcx, 0x8
0000000000003c18         jae        loc_3c40

0000000000003c1a         test       cl, 0x4
0000000000003c1d         jne        loc_3c90

0000000000003c1f         test       rcx, rcx
0000000000003c22         je         loc_3c6c

0000000000003c24         movzx      eax, byte [fillbuf]                         ; fillbuf
0000000000003c2b         test       cl, 0x2
0000000000003c2e         mov        byte [rdx], al
0000000000003c30         je         loc_3c6c

0000000000003c32         movzx      eax, word [rsi+rcx-2]
0000000000003c37         mov        word [rdx+rcx-2], ax
0000000000003c3c         jmp        loc_3c6c
0000000000003c3e         align      64

                     loc_3c40:
0000000000003c40         mov        rax, qword [fillbuf]                        ; fillbuf, CODE XREF=md5_finish_ctx+136
0000000000003c47         lea        rdi, qword [rdx+8]
0000000000003c4b         and        rdi, 0xfffffffffffffff8
0000000000003c4f         mov        qword [rdx], rax
0000000000003c52         mov        rax, qword [rsi+rcx-8]
0000000000003c57         mov        qword [rdx+rcx-8], rax
0000000000003c5c         sub        rdx, rdi
0000000000003c5f         add        rcx, rdx
0000000000003c62         sub        rsi, rdx
0000000000003c65         shr        rcx, 0x3
0000000000003c69         rep movsq  qword [rdi], qword [rsi]

                     loc_3c6c:
0000000000003c6c         mov        rdx, rbx                                    ; CODE XREF=md5_finish_ctx+146, md5_finish_ctx+160, md5_finish_ctx+172, md5_finish_ctx+272
0000000000003c6f         mov        rsi, r8
0000000000003c72         mov        rdi, r9
0000000000003c75         call       md5_process_block                           ; md5_process_block
0000000000003c7a         mov        rsi, rbp
0000000000003c7d         mov        rdi, rbx
0000000000003c80         pop        rbx
0000000000003c81         pop        rbp
0000000000003c82         jmp        md5_read_ctx                                ; md5_read_ctx
0000000000003c87         align      16

                     loc_3c90:
0000000000003c90         mov        eax, dword [fillbuf]                        ; fillbuf, CODE XREF=md5_finish_ctx+141
0000000000003c96         mov        dword [rdx], eax
0000000000003c98         mov        eax, dword [rsi+rcx-4]
0000000000003c9c         mov        dword [rdx+rcx-4], eax
0000000000003ca0         jmp        loc_3c6c
0000000000003ca2         align      16                                          ; End of unwind block (FDE at 0x8858)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     md5_process_bytes:
0000000000003cb0         push       r15                                         ; Begin of unwind block (FDE at 0x8880), CODE XREF=md5_buffer+83, md5_stream+249
0000000000003cb2         push       r14
0000000000003cb4         push       r13
0000000000003cb6         push       r12
0000000000003cb8         mov        r13, rdx
0000000000003cbb         push       rbp
0000000000003cbc         push       rbx
0000000000003cbd         mov        r12, rsi
0000000000003cc0         mov        rbx, rdi
0000000000003cc3         sub        rsp, 0x8
0000000000003cc7         mov        eax, dword [rdx+0x18]
0000000000003cca         test       eax, eax
0000000000003ccc         jne        loc_3e00

                     loc_3cd2:
0000000000003cd2         cmp        r12, 0x3f                                   ; CODE XREF=md5_process_bytes+394
0000000000003cd6         jbe        loc_3de4

0000000000003cdc         test       bl, 0x3
0000000000003cdf         je         loc_3dc8

0000000000003ce5         cmp        r12, 0x40
0000000000003ce9         lea        rbp, qword [r13+0x1c]
0000000000003ced         je         loc_3d50

0000000000003cef         lea        r15, qword [r12-0x41]
0000000000003cf4         shr        r15, 0x6
0000000000003cf8         lea        r14, qword [r15+1]
0000000000003cfc         shl        r14, 0x6
0000000000003d00         add        r14, rbx
0000000000003d03         nop        dword [rax+rax]

                     loc_3d08:
0000000000003d08         movdqu     xmm0, xmmword [rbx]                         ; CODE XREF=md5_process_bytes+146
0000000000003d0c         mov        rdx, r13
0000000000003d0f         mov        esi, 0x40
0000000000003d14         mov        rdi, rbp
0000000000003d17         add        rbx, 0x40
0000000000003d1b         movups     xmmword [rbp], xmm0
0000000000003d1f         movdqu     xmm0, xmmword [rbx-0x30]
0000000000003d24         movups     xmmword [rbp+0x10], xmm0
0000000000003d28         movdqu     xmm0, xmmword [rbx-0x20]
0000000000003d2d         movups     xmmword [rbp+0x20], xmm0
0000000000003d31         movdqu     xmm0, xmmword [rbx-0x10]
0000000000003d36         movups     xmmword [rbp+0x30], xmm0
0000000000003d3a         call       md5_process_block                           ; md5_process_block
0000000000003d3f         cmp        rbx, r14
0000000000003d42         jne        loc_3d08

0000000000003d44         neg        r15
0000000000003d47         shl        r15, 0x6
0000000000003d4b         lea        r12, qword [r12+r15-0x40]

                     loc_3d50:
0000000000003d50         mov        edi, dword [r13+0x18]                       ; CODE XREF=md5_process_bytes+61, md5_process_bytes+684
0000000000003d54         cmp        r12d, 0x8
0000000000003d58         mov        eax, r12d
0000000000003d5b         lea        rcx, qword [rbp+rdi]
0000000000003d60         jae        loc_3e40

0000000000003d66         test       r12b, 0x4
0000000000003d6a         jne        loc_3f61

0000000000003d70         test       r12d, r12d
0000000000003d73         je         loc_3d82

0000000000003d75         movzx      edx, byte [rbx]
0000000000003d78         test       al, 0x2
0000000000003d7a         mov        byte [rcx], dl
0000000000003d7c         jne        loc_3f75

                     loc_3d82:
0000000000003d82         add        r12, rdi                                    ; CODE XREF=md5_process_bytes+195, md5_process_bytes+445, md5_process_bytes+473, md5_process_bytes+704, md5_process_bytes+722
0000000000003d85         cmp        r12, 0x3f
0000000000003d89         jbe        loc_3dae

0000000000003d8b         mov        rdx, r13
0000000000003d8e         mov        esi, 0x40
0000000000003d93         mov        rdi, rbp
0000000000003d96         call       md5_process_block                           ; md5_process_block
0000000000003d9b         sub        r12, 0x40
0000000000003d9f         lea        rsi, qword [r13+0x5c]                       ; argument "__src" for method j_memcpy
0000000000003da3         mov        rdi, rbp                                    ; argument "__dest" for method j_memcpy
0000000000003da6         mov        rdx, r12                                    ; argument "__n" for method j_memcpy
0000000000003da9         call       j_memcpy                                    ; memcpy

                     loc_3dae:
0000000000003dae         mov        dword [r13+0x18], r12d                      ; CODE XREF=md5_process_bytes+217
0000000000003db2         add        rsp, 0x8
0000000000003db6         pop        rbx
0000000000003db7         pop        rbp
0000000000003db8         pop        r12
0000000000003dba         pop        r13
0000000000003dbc         pop        r14
0000000000003dbe         pop        r15
0000000000003dc0         ret
                        ; endp
0000000000003dc1         align      8

                     loc_3dc8:
0000000000003dc8         mov        rbp, r12                                    ; CODE XREF=md5_process_bytes+47
0000000000003dcb         mov        rdi, rbx
0000000000003dce         mov        rdx, r13
0000000000003dd1         and        rbp, 0xffffffffffffffc0
0000000000003dd5         and        r12d, 0x3f
0000000000003dd9         mov        rsi, rbp
0000000000003ddc         add        rbx, rbp
0000000000003ddf         call       md5_process_block                           ; md5_process_block

                     loc_3de4:
0000000000003de4         test       r12, r12                                    ; CODE XREF=md5_process_bytes+38
0000000000003de7         jne        loc_3f58

0000000000003ded         add        rsp, 0x8
0000000000003df1         pop        rbx
0000000000003df2         pop        rbp
0000000000003df3         pop        r12
0000000000003df5         pop        r13
0000000000003df7         pop        r14
0000000000003df9         pop        r15
0000000000003dfb         ret
                        ; endp
0000000000003dfc         align      512

                     loc_3e00:
0000000000003e00         mov        ebp, eax                                    ; CODE XREF=md5_process_bytes+28
0000000000003e02         mov        edx, 0x80
0000000000003e07         lea        r15, qword [r13+0x1c]
0000000000003e0b         sub        rdx, rbp
0000000000003e0e         cmp        rdx, rsi
0000000000003e11         lea        rdi, qword [r15+rbp]                        ; argument "__dest" for method j_memcpy
0000000000003e15         cmova      rdx, rsi                                    ; argument "__n" for method j_memcpy
0000000000003e19         mov        rsi, rbx                                    ; argument "__src" for method j_memcpy
0000000000003e1c         mov        r14, rdx
0000000000003e1f         call       j_memcpy                                    ; memcpy
0000000000003e24         mov        esi, dword [r13+0x18]
0000000000003e28         add        esi, r14d
0000000000003e2b         cmp        esi, 0x40
0000000000003e2e         mov        dword [r13+0x18], esi
0000000000003e32         ja         loc_3e90

                     loc_3e34:
0000000000003e34         add        rbx, r14                                    ; CODE XREF=md5_process_bytes+531, md5_process_bytes+547, md5_process_bytes+564, md5_process_bytes+620, md5_process_bytes+650, md5_process_bytes+670
0000000000003e37         sub        r12, r14
0000000000003e3a         jmp        loc_3cd2
0000000000003e3f         align      64

                     loc_3e40:
0000000000003e40         mov        rax, qword [rbx]                            ; CODE XREF=md5_process_bytes+176
0000000000003e43         mov        edx, r12d
0000000000003e46         mov        qword [rcx], rax
0000000000003e49         mov        rax, qword [rbx+rdx-8]
0000000000003e4e         mov        qword [rcx+rdx-8], rax
0000000000003e53         lea        rdx, qword [rcx+8]
0000000000003e57         mov        rax, rcx
0000000000003e5a         and        rdx, 0xfffffffffffffff8
0000000000003e5e         sub        rax, rdx
0000000000003e61         sub        rbx, rax
0000000000003e64         add        eax, r12d
0000000000003e67         and        eax, 0xfffffff8
0000000000003e6a         cmp        eax, 0x8
0000000000003e6d         jb         loc_3d82

0000000000003e73         and        eax, 0xfffffff8
0000000000003e76         xor        ecx, ecx

                     loc_3e78:
0000000000003e78         mov        esi, ecx                                    ; CODE XREF=md5_process_bytes+471
0000000000003e7a         add        ecx, 0x8
0000000000003e7d         mov        r8, qword [rbx+rsi]
0000000000003e81         cmp        ecx, eax
0000000000003e83         mov        qword [rdx+rsi], r8
0000000000003e87         jb         loc_3e78

0000000000003e89         jmp        loc_3d82
0000000000003e8e         align      16

                     loc_3e90:
0000000000003e90         and        esi, 0xffffffc0                             ; CODE XREF=md5_process_bytes+386
0000000000003e93         mov        rdx, r13
0000000000003e96         mov        rdi, r15
0000000000003e99         call       md5_process_block                           ; md5_process_block
0000000000003e9e         mov        ecx, dword [r13+0x18]
0000000000003ea2         lea        rax, qword [rbp+r14]
0000000000003ea7         and        rax, 0xffffffffffffffc0
0000000000003eab         mov        edx, ecx
0000000000003ead         add        rax, r15
0000000000003eb0         and        edx, 0x3f
0000000000003eb3         cmp        edx, 0x8
0000000000003eb6         mov        dword [r13+0x18], edx
0000000000003eba         jae        loc_3ef0

0000000000003ebc         test       cl, 0x4
0000000000003ebf         jne        loc_3f3f

0000000000003ec1         test       edx, edx
0000000000003ec3         je         loc_3e34

0000000000003ec9         movzx      esi, byte [rax]
0000000000003ecc         and        ecx, 0x2
0000000000003ecf         mov        byte [r13+0x1c], sil
0000000000003ed3         je         loc_3e34

0000000000003ed9         movzx      eax, word [rax+rdx-2]
0000000000003ede         mov        word [r15+rdx-2], ax
0000000000003ee4         jmp        loc_3e34
0000000000003ee9         align      16

                     loc_3ef0:
0000000000003ef0         mov        rcx, qword [rax]                            ; CODE XREF=md5_process_bytes+522
0000000000003ef3         mov        qword [r13+0x1c], rcx
0000000000003ef7         mov        ecx, edx
0000000000003ef9         mov        rsi, qword [rax+rcx-8]
0000000000003efe         mov        qword [r15+rcx-8], rsi
0000000000003f03         lea        rcx, qword [r13+0x24]
0000000000003f07         and        rcx, 0xfffffffffffffff8
0000000000003f0b         sub        r15, rcx
0000000000003f0e         sub        rax, r15
0000000000003f11         add        r15d, edx
0000000000003f14         and        r15d, 0xfffffff8
0000000000003f18         cmp        r15d, 0x8
0000000000003f1c         jb         loc_3e34

0000000000003f22         and        r15d, 0xfffffff8
0000000000003f26         xor        edx, edx

                     loc_3f28:
0000000000003f28         mov        esi, edx                                    ; CODE XREF=md5_process_bytes+648
0000000000003f2a         add        edx, 0x8
0000000000003f2d         mov        rdi, qword [rax+rsi]
0000000000003f31         cmp        edx, r15d
0000000000003f34         mov        qword [rcx+rsi], rdi
0000000000003f38         jb         loc_3f28

0000000000003f3a         jmp        loc_3e34

                     loc_3f3f:
0000000000003f3f         mov        ecx, dword [rax]                            ; CODE XREF=md5_process_bytes+527
0000000000003f41         mov        dword [r13+0x1c], ecx
0000000000003f45         mov        eax, dword [rax+rdx-4]
0000000000003f49         mov        dword [r15+rdx-4], eax
0000000000003f4e         jmp        loc_3e34
0000000000003f53         align      8

                     loc_3f58:
0000000000003f58         lea        rbp, qword [r13+0x1c]                       ; CODE XREF=md5_process_bytes+311
0000000000003f5c         jmp        loc_3d50

                     loc_3f61:
0000000000003f61         mov        edx, dword [rbx]                            ; CODE XREF=md5_process_bytes+186
0000000000003f63         mov        dword [rcx], edx
0000000000003f65         mov        edx, r12d
0000000000003f68         mov        eax, dword [rbx+rdx-4]
0000000000003f6c         mov        dword [rcx+rdx-4], eax
0000000000003f70         jmp        loc_3d82

                     loc_3f75:
0000000000003f75         mov        edx, r12d                                   ; CODE XREF=md5_process_bytes+204
0000000000003f78         movzx      eax, word [rbx+rdx-2]
0000000000003f7d         mov        word [rcx+rdx-2], ax
0000000000003f82         jmp        loc_3d82
0000000000003f87         align      16                                          ; End of unwind block (FDE at 0x8880)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_B0: int32_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200


                     md5_buffer:
0000000000003f90         push       rbp                                         ; Begin of unwind block (FDE at 0x88e4)
0000000000003f91         push       rbx
0000000000003f92         mov        rbp, rdx
0000000000003f95         sub        rsp, 0xb8
0000000000003f9c         mov        rax, qword [fs:0x28]
0000000000003fa5         mov        qword [rsp+0xc8+var_20], rax
0000000000003fad         xor        eax, eax
0000000000003faf         mov        rbx, rsp
0000000000003fb2         movabs     rax, 0xefcdab8967452301
0000000000003fbc         mov        qword [rsp+0xc8+var_B8], 0x0
0000000000003fc5         mov        qword [rsp+0xc8+var_C8], rax
0000000000003fc9         mov        rdx, rbx
0000000000003fcc         movabs     rax, 0x1032547698badcfe
0000000000003fd6         mov        qword [rsp+0xc8+var_C0], rax
0000000000003fdb         mov        dword [rsp+0xc8+var_B0], 0x0
0000000000003fe3         call       md5_process_bytes                           ; md5_process_bytes
0000000000003fe8         mov        rsi, rbp
0000000000003feb         mov        rdi, rbx
0000000000003fee         call       md5_finish_ctx                              ; md5_finish_ctx
0000000000003ff3         mov        rcx, qword [rsp+0xc8+var_20]
0000000000003ffb         xor        rcx, qword [fs:0x28]
0000000000004004         jne        loc_4010

0000000000004006         add        rsp, 0xb8
000000000000400d         pop        rbx
000000000000400e         pop        rbp
000000000000400f         ret
                        ; endp

                     loc_4010:
0000000000004010         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=md5_buffer+116
                        ; endp
0000000000004015         align      32                                          ; End of unwind block (FDE at 0x88e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_D0: int32_t, -208
        ;    var_D8: int64_t, -216
        ;    var_E0: int64_t, -224
        ;    var_E8: int64_t, -232


                     md5_stream:
0000000000004020         push       r15                                         ; Begin of unwind block (FDE at 0x8910), CODE XREF=digest_file.isra.1+82, digest_file.isra.1+237
0000000000004022         push       r14
0000000000004024         mov        r14, rsi
0000000000004027         push       r13
0000000000004029         push       r12
000000000000402b         push       rbp
000000000000402c         push       rbx
000000000000402d         mov        rbp, rdi
0000000000004030         mov        edi, aEnsesgplhtmlnt                        ; argument "__size" for method j_malloc, "enses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000004035         sub        rsp, 0xb8
000000000000403c         mov        rax, qword [fs:0x28]
0000000000004045         mov        qword [rsp+0xe8+var_40], rax
000000000000404d         xor        eax, eax
000000000000404f         call       j_malloc                                    ; malloc
0000000000004054         mov        r12, rax
0000000000004057         mov        eax, 0x1
000000000000405c         test       r12, r12
000000000000405f         je         loc_40eb

0000000000004065         movabs     rax, 0xefcdab8967452301
000000000000406f         mov        qword [rsp+0xe8+var_D8], 0x0
0000000000004078         mov        dword [rsp+0xe8+var_D0], 0x0
0000000000004080         mov        qword [rsp+0xe8+var_E8], rax
0000000000004084         movabs     rax, 0x1032547698badcfe
000000000000408e         mov        r13d, 0x8000
0000000000004094         mov        qword [rsp+0xe8+var_E0], rax
0000000000004099         mov        r15, rsp

                     loc_409c:
000000000000409c         xor        ebx, ebx                                    ; CODE XREF=md5_stream+272
000000000000409e         jmp        loc_40c8

                     loc_40a0:
00000000000040a0         lea        rdi, qword [r12+rbx]                        ; argument "__ptr" for method j_fread_unlocked, CODE XREF=md5_stream+172
00000000000040a4         mov        rdx, r13
00000000000040a7         mov        rcx, rbp                                    ; argument "__stream" for method j_fread_unlocked
00000000000040aa         sub        rdx, rbx                                    ; argument "__n" for method j_fread_unlocked
00000000000040ad         mov        esi, 0x1                                    ; argument "__size" for method j_fread_unlocked
00000000000040b2         call       j_fread_unlocked                            ; fread_unlocked
00000000000040b7         add        rbx, rax
00000000000040ba         cmp        rbx, 0x8000
00000000000040c1         je         loc_4120

00000000000040c3         test       rax, rax
00000000000040c6         je         loc_4138

                     loc_40c8:
00000000000040c8         test       byte [rbp], 0x10                            ; CODE XREF=md5_stream+126
00000000000040cc         je         loc_40a0

                     loc_40ce:
00000000000040ce         test       rbx, rbx                                    ; CODE XREF=md5_stream+284
00000000000040d1         mov        rbp, rsp
00000000000040d4         jne        loc_4110

                     loc_40d6:
00000000000040d6         mov        rsi, r14                                    ; CODE XREF=md5_stream+254
00000000000040d9         mov        rdi, rbp
00000000000040dc         call       md5_finish_ctx                              ; md5_finish_ctx
00000000000040e1         mov        rdi, r12                                    ; argument "__ptr" for method j_free
00000000000040e4         call       j_free                                      ; free
00000000000040e9         xor        eax, eax

                     loc_40eb:
00000000000040eb         mov        rcx, qword [rsp+0xe8+var_40]                ; CODE XREF=md5_stream+63, md5_stream+299
00000000000040f3         xor        rcx, qword [fs:0x28]
00000000000040fc         jne        loc_414d

00000000000040fe         add        rsp, 0xb8
0000000000004105         pop        rbx
0000000000004106         pop        rbp
0000000000004107         pop        r12
0000000000004109         pop        r13
000000000000410b         pop        r14
000000000000410d         pop        r15
000000000000410f         ret
                        ; endp

                     loc_4110:
0000000000004110         mov        rdx, rbp                                    ; CODE XREF=md5_stream+180
0000000000004113         mov        rsi, rbx
0000000000004116         mov        rdi, r12
0000000000004119         call       md5_process_bytes                           ; md5_process_bytes
000000000000411e         jmp        loc_40d6

                     loc_4120:
0000000000004120         mov        rdx, r15                                    ; CODE XREF=md5_stream+161
0000000000004123         mov        esi, 0x8000
0000000000004128         mov        rdi, r12
000000000000412b         call       md5_process_block                           ; md5_process_block
0000000000004130         jmp        loc_409c
0000000000004135         align      8

                     loc_4138:
0000000000004138         test       byte [rbp], 0x20                            ; CODE XREF=md5_stream+166
000000000000413c         je         loc_40ce

000000000000413e         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000004141         call       j_free                                      ; free
0000000000004146         mov        eax, 0x1
000000000000414b         jmp        loc_40eb

                     loc_414d:
000000000000414d         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=md5_stream+220
                        ; endp
0000000000004152         align      32                                          ; End of unwind block (FDE at 0x8910)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fdadvise:
0000000000004160         jmp        j_posix_fadvise                             ; posix_fadvise, Begin of unwind block (FDE at 0x895c)
                        ; endp
0000000000004165         align      16                                          ; End of unwind block (FDE at 0x895c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fadvise:
0000000000004170         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x8970), CODE XREF=digest_file.isra.1+71, digest_file.isra.1+226
0000000000004173         je         loc_4190

0000000000004175         push       rbx
0000000000004176         mov        ebx, esi
0000000000004178         call       j_fileno                                    ; fileno
000000000000417d         mov        ecx, ebx                                    ; argument "__advise" for method j_posix_fadvise
000000000000417f         xor        edx, edx                                    ; argument "__len" for method j_posix_fadvise
0000000000004181         xor        esi, esi                                    ; argument "__offset" for method j_posix_fadvise
0000000000004183         pop        rbx
0000000000004184         mov        edi, eax                                    ; argument "__fd" for method j_posix_fadvise
0000000000004186         jmp        j_posix_fadvise                             ; posix_fadvise
                        ; endp
000000000000418b         align      16

                     loc_4190:
0000000000004190         ret                                                    ; CODE XREF=fadvise+3
                        ; endp
0000000000004192         align      32                                          ; End of unwind block (FDE at 0x8970)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fopen_safer:
00000000000041a0         push       r12                                         ; Begin of unwind block (FDE at 0x898c), CODE XREF=main+2849, digest_file.isra.1+205
00000000000041a2         push       rbp
00000000000041a3         mov        rbp, rsi
00000000000041a6         push       rbx
00000000000041a7         call       j_fopen                                     ; fopen
00000000000041ac         test       rax, rax
00000000000041af         mov        rbx, rax
00000000000041b2         je         loc_41c1

00000000000041b4         mov        rdi, rax                                    ; argument "__stream" for method j_fileno
00000000000041b7         call       j_fileno                                    ; fileno
00000000000041bc         cmp        eax, 0x2
00000000000041bf         jbe        loc_41d0

                     loc_41c1:
00000000000041c1         mov        rax, rbx                                    ; CODE XREF=fopen_safer+18, fopen_safer+91, fopen_safer+115, fopen_safer+145
00000000000041c4         pop        rbx
00000000000041c5         pop        rbp
00000000000041c6         pop        r12
00000000000041c8         ret
                        ; endp
00000000000041c9         align      16

                     loc_41d0:
00000000000041d0         mov        edi, eax                                    ; CODE XREF=fopen_safer+31
00000000000041d2         call       dup_safer                                   ; dup_safer
00000000000041d7         test       eax, eax
00000000000041d9         mov        r12d, eax
00000000000041dc         js         loc_4218

00000000000041de         mov        rdi, rbx
00000000000041e1         call       rpl_fclose                                  ; rpl_fclose
00000000000041e6         test       eax, eax
00000000000041e8         jne        loc_41fd

00000000000041ea         mov        rsi, rbp                                    ; argument "__modes" for method j_fdopen
00000000000041ed         mov        edi, r12d                                   ; argument "__fd" for method j_fdopen
00000000000041f0         call       j_fdopen                                    ; fdopen
00000000000041f5         test       rax, rax
00000000000041f8         mov        rbx, rax
00000000000041fb         jne        loc_41c1

                     loc_41fd:
00000000000041fd         call       j___errno_location                          ; __errno_location, CODE XREF=fopen_safer+72
0000000000004202         mov        ebp, dword [rax]
0000000000004204         mov        rbx, rax
0000000000004207         mov        edi, r12d                                   ; argument "__fd" for method j_close
000000000000420a         call       j_close                                     ; close
000000000000420f         mov        dword [rbx], ebp
0000000000004211         xor        ebx, ebx
0000000000004213         jmp        loc_41c1
0000000000004215         align      8

                     loc_4218:
0000000000004218         call       j___errno_location                          ; __errno_location, CODE XREF=fopen_safer+60
000000000000421d         mov        r12d, dword [rax]
0000000000004220         mov        rbp, rax
0000000000004223         mov        rdi, rbx
0000000000004226         call       rpl_fclose                                  ; rpl_fclose
000000000000422b         xor        ebx, ebx
000000000000422d         mov        dword [rbp], r12d
0000000000004231         jmp        loc_41c1
0000000000004233         align      64                                          ; End of unwind block (FDE at 0x898c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000004240         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x89bc), CODE XREF=main+50
0000000000004243         push       rbx
0000000000004244         je         loc_42bd

0000000000004246         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
000000000000424b         mov        rbx, rdi
000000000000424e         call       j_strrchr                                   ; strrchr
0000000000004253         test       rax, rax
0000000000004256         je         loc_42ad

0000000000004258         lea        r8, qword [rax+1]
000000000000425c         mov        rdx, r8
000000000000425f         sub        rdx, rbx
0000000000004262         cmp        rdx, 0x6
0000000000004266         jle        loc_42ad

0000000000004268         lea        rsi, qword [rax-6]
000000000000426c         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000004273         mov        ecx, 0x7
0000000000004278         rep  cmpsb byte [rsi], byte [rdi]
000000000000427a         seta       dl
000000000000427d         sbb        dl, 0x0
0000000000004280         test       dl, dl
0000000000004282         jne        loc_42ad

0000000000004284         lea        rdi, qword [aLibs+8]                        ; 0x7a80
000000000000428b         mov        ecx, 0x3
0000000000004290         mov        rsi, r8
0000000000004293         mov        rbx, r8
0000000000004296         rep  cmpsb byte [rsi], byte [rdi]
0000000000004298         seta       dl
000000000000429b         sbb        dl, 0x0
000000000000429e         test       dl, dl
00000000000042a0         jne        loc_42ad

00000000000042a2         lea        rbx, qword [rax+4]
00000000000042a6         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_42ad:
00000000000042ad         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
00000000000042b4         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
00000000000042bb         pop        rbx
00000000000042bc         ret
                        ; endp

                     loc_42bd:
00000000000042bd         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
00000000000042c4         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
00000000000042cb         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
00000000000042d0         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
00000000000042d5         call       j_fwrite                                    ; fwrite
00000000000042da         call       j_abort                                     ; abort
                        ; endp
00000000000042df         align      32                                          ; End of unwind block (FDE at 0x89bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
00000000000042e0         push       rbp                                         ; Begin of unwind block (FDE at 0x89dc), CODE XREF=sub_4b10+2597, sub_4b10+2619
00000000000042e1         push       rbx
00000000000042e2         mov        rbp, rdi
00000000000042e5         mov        ebx, esi
00000000000042e7         sub        rsp, 0x8
00000000000042eb         call       locale_charset                              ; locale_charset
00000000000042f0         movzx      edx, byte [rax]
00000000000042f3         and        edx, 0xffffffdf
00000000000042f6         cmp        dl, 0x55
00000000000042f9         je         loc_4370

00000000000042fb         cmp        dl, 0x47
00000000000042fe         je         loc_4320

                     loc_4300:
0000000000004300         lea        rax, qword [aLibs+27]                       ; 0x7a93, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
0000000000004307         lea        rdx, qword [aLibs+29]                       ; 0x7a95
000000000000430e         cmp        ebx, 0x9
0000000000004311         cmovne     rax, rdx
0000000000004315         add        rsp, 0x8
0000000000004319         pop        rbx
000000000000431a         pop        rbp
000000000000431b         ret
                        ; endp
000000000000431c         align      32

                     loc_4320:
0000000000004320         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
0000000000004324         and        edx, 0xffffffdf
0000000000004327         cmp        dl, 0x42
000000000000432a         jne        loc_4300

000000000000432c         cmp        byte [rax+2], 0x31
0000000000004330         jne        loc_4300

0000000000004332         cmp        byte [rax+3], 0x38
0000000000004336         jne        loc_4300

0000000000004338         cmp        byte [rax+4], 0x30
000000000000433c         jne        loc_4300

000000000000433e         cmp        byte [rax+5], 0x33
0000000000004342         jne        loc_4300

0000000000004344         cmp        byte [rax+6], 0x30
0000000000004348         jne        loc_4300

000000000000434a         cmp        byte [rax+7], 0x0
000000000000434e         jne        loc_4300

0000000000004350         cmp        byte [rbp], 0x60
0000000000004354         lea        rax, qword [aLibs+20]                       ; 0x7a8c
000000000000435b         lea        rdx, qword [aLibs+24]                       ; 0x7a90
0000000000004362         cmovne     rax, rdx
0000000000004366         add        rsp, 0x8
000000000000436a         pop        rbx
000000000000436b         pop        rbp
000000000000436c         ret
                        ; endp
000000000000436d         align      16

                     loc_4370:
0000000000004370         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
0000000000004374         and        edx, 0xffffffdf
0000000000004377         cmp        dl, 0x54
000000000000437a         jne        loc_4300

000000000000437c         movzx      edx, byte [rax+2]
0000000000004380         and        edx, 0xffffffdf
0000000000004383         cmp        dl, 0x46
0000000000004386         jne        loc_4300

000000000000438c         cmp        byte [rax+3], 0x2d
0000000000004390         jne        loc_4300

0000000000004396         cmp        byte [rax+4], 0x38
000000000000439a         jne        loc_4300

00000000000043a0         cmp        byte [rax+5], 0x0
00000000000043a4         jne        loc_4300

00000000000043aa         cmp        byte [rbp], 0x60
00000000000043ae         lea        rax, qword [aLibs+12]                       ; 0x7a84
00000000000043b5         lea        rdx, qword [aLibs+16]                       ; 0x7a88
00000000000043bc         cmovne     rax, rdx
00000000000043c0         add        rsp, 0x8
00000000000043c4         pop        rbx
00000000000043c5         pop        rbp
00000000000043c6         ret
                        ; endp
00000000000043c7         align      16                                          ; End of unwind block (FDE at 0x89dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
00000000000043d0         push       r15                                         ; Begin of unwind block (FDE at 0x8a20), CODE XREF=sub_4b10+1165, sub_4b10+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
00000000000043d2         push       r14
00000000000043d4         mov        r15d, r8d
00000000000043d7         push       r13
00000000000043d9         push       r12
00000000000043db         mov        r14, rdi
00000000000043de         push       rbp
00000000000043df         push       rbx
00000000000043e0         mov        ebx, r9d
00000000000043e3         mov        r13, rsi
00000000000043e6         mov        rbp, rcx
00000000000043e9         and        ebx, 0x2
00000000000043ec         sub        rsp, 0xb8
00000000000043f3         mov        rax, qword [rsp+0xe8+arg_0]
00000000000043fb         mov        qword [rsp+0xe8+var_D8], rdx
0000000000004400         mov        dword [rsp+0xe8+var_E0], r8d
0000000000004405         mov        dword [rsp+0xe8+var_70], r9d
000000000000440a         mov        qword [rsp+0xe8+var_C8], rax
000000000000440f         mov        rax, qword [rsp+0xe8+arg_8]
0000000000004417         mov        qword [rsp+0xe8+var_80], rax
000000000000441c         mov        rax, qword [rsp+0xe8+arg_10]
0000000000004424         mov        qword [rsp+0xe8+var_88], rax
0000000000004429         mov        rax, qword [fs:0x28]
0000000000004432         mov        qword [rsp+0xe8+var_40], rax
000000000000443a         xor        eax, eax
000000000000443c         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000004441         cmp        r15d, 0xa
0000000000004445         mov        qword [rsp+0xe8+var_90], rax
000000000000444a         ja         loc_55ff

0000000000004450         lea        rcx, qword [switch_table_7b00]              ; switch_table_7b00
0000000000004457         mov        edx, r15d
000000000000445a         movsxd     rax, dword [rcx+rdx*4]
000000000000445e         add        rax, rcx
0000000000004461         jmp        rax                                         ; switch statement using table at 0x7b00, with 11 cases, 0x4463,0x5034,0x5090,0x50e5,0x512a,0x5164,0x520a,0x5244,0x5438

                     loc_4463:
0000000000004463         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_4b10+1318
0000000000004468         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000446d         xor        r12d, r12d
0000000000004470         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004479         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000447e         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_4483:
0000000000004483         lea        rax, qword [aLibs+29]                       ; 0x7a95, CODE XREF=sub_4b10+1876
000000000000448a         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004493         xor        r15d, r15d
0000000000004496         mov        dword [rsp+0xe8+var_E0], 0x2
000000000000449e         mov        qword [rsp+0xe8+var_A0], rax

                     loc_44a3:
00000000000044a3         xor        r11d, r11d                                  ; CODE XREF=sub_4b10+180, sub_4b10+1400, sub_4b10+1488, sub_4b10+1557, sub_4b10+1615, sub_4b10+1781, sub_4b10+1839, sub_4b10+2408, sub_4b10+2485
00000000000044a6         mov        rax, rbp
00000000000044a9         mov        r8d, r12d
00000000000044ac         mov        rbp, r11
00000000000044af         mov        r11, rax
00000000000044b2         nop        word [rax+rax]

                     loc_44b8:
00000000000044b8         cmp        r11, rbp                                    ; CODE XREF=sub_45c0+194
00000000000044bb         setne      r12b
00000000000044bf         cmp        r11, 0xffffffffffffffff
00000000000044c3         jne        loc_44d2

00000000000044c5         mov        rax, qword [rsp+0xe8+var_D8]
00000000000044ca         cmp        byte [rax+rbp], 0x0
00000000000044ce         setne      r12b

                     loc_44d2:
00000000000044d2         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
00000000000044d5         je         loc_4b30

00000000000044db         cmp        dword [rsp+0xe8+var_E0], 0x2
00000000000044e0         mov        rdi, qword [rsp+0xe8+var_D8]
00000000000044e5         lea        r9, qword [rdi+rbp]
00000000000044e9         setne      al
00000000000044ec         and        al, byte [rsp+0xe8+var_DB]
00000000000044f0         mov        r10d, eax
00000000000044f3         je         loc_45a0

00000000000044f9         mov        rax, qword [rsp+0xe8+var_D0]
00000000000044fe         test       rax, rax
0000000000004501         je         loc_4930

0000000000004507         cmp        r11, 0xffffffffffffffff
000000000000450b         lea        rbx, qword [rbp+rax]
0000000000004510         jne        loc_4540

0000000000004512         cmp        rax, 0x1
0000000000004516         jbe        loc_4540

0000000000004518         mov        byte [rsp+0xe8+var_B0], r8b
000000000000451d         mov        byte [rsp+0xe8+var_B8], r10b
0000000000004522         mov        qword [rsp+0xe8+var_C0], r9
0000000000004527         call       j_strlen                                    ; strlen
000000000000452c         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000004532         movzx      r10d, byte [rsp+0xe8+var_B8]
0000000000004538         mov        r11, rax
000000000000453b         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_4540:
0000000000004540         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
0000000000004543         mov        byte [rsp+0xe8+var_C0], r10b
0000000000004548         ja         loc_4b00

000000000000454e         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
0000000000004553         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
0000000000004558         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
000000000000455b         mov        qword [rsp+0xe8+var_A8], r11
0000000000004560         mov        byte [rsp+0xe8+var_B0], r8b
0000000000004565         mov        qword [rsp+0xe8+var_B8], r9
000000000000456a         call       j_memcmp                                    ; memcmp
000000000000456f         test       eax, eax
0000000000004571         mov        r9, qword [rsp+0xe8+var_B8]
0000000000004576         movzx      r8d, byte [rsp+0xe8+var_B0]
000000000000457c         mov        r11, qword [rsp+0xe8+var_A8]
0000000000004581         jne        loc_4b00

0000000000004587         cmp        byte [rsp+0xe8+var_D9], 0x0
000000000000458c         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000004592         jne        loc_5515

0000000000004598         nop        dword [rax+rax]

                     loc_45a0:
00000000000045a0         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_4af0+19
00000000000045a4         cmp        bl, 0x7e
00000000000045a7         ja         loc_48c8

00000000000045ad         lea        rcx, qword [switch_table_7b00+44]           ; 0x7b2c
00000000000045b4         movzx      edx, bl
00000000000045b7         movsxd     rax, dword [rcx+rdx*4]
00000000000045bb         add        rax, rcx
00000000000045be         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_45c0:
00000000000045c0         xor        r10d, r10d
00000000000045c3         cmp        r11, 0x1
00000000000045c7         setne      al
00000000000045ca         cmp        r11, 0xffffffffffffffff
00000000000045ce         jne        loc_45dc

00000000000045d0         mov        rax, qword [rsp+arg_8]
00000000000045d5         cmp        byte [rax+1], 0x0
00000000000045d9         setne      al

                     loc_45dc:
00000000000045dc         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_45c0+14
00000000000045e1         sete       dl
00000000000045e4         test       al, al
00000000000045e6         je         loc_4838

                     loc_45ec:
00000000000045ec         xor        r12d, r12d                                  ; CODE XREF=sub_4830+11
00000000000045ef         xor        eax, eax
00000000000045f1         nop        dword [rax]
                        ; endp

                     loc_45f8:
00000000000045f8         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_47e0+50, sub_48b0+119
00000000000045fd         jne        loc_4712

0000000000004603         test       dl, dl
0000000000004605         jne        loc_4712

                     loc_460b:
000000000000460b         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_46c0+87
0000000000004610         test       rsi, rsi
0000000000004613         je         loc_4629

0000000000004615         mov        edx, ebx
0000000000004617         shr        dl, 0x5
000000000000461a         movzx      edx, dl
000000000000461d         mov        edx, dword [rsi+rdx*4]
0000000000004620         bt         edx, ebx
0000000000004623         jb         loc_4773

                     loc_4629:
0000000000004629         test       r10b, r10b                                  ; CODE XREF=sub_45c0+83, sub_46c0+93
000000000000462c         jne        loc_4773

0000000000004632         xor        eax, 0x1
0000000000004635         add        rbp, 0x1
0000000000004639         and        eax, r8d

                     loc_463c:
000000000000463c         test       al, al                                      ; CODE XREF=sub_4b10+936
000000000000463e         je         loc_4660

0000000000004640         cmp        r13, r15
0000000000004643         jbe        loc_464a

0000000000004645         mov        byte [r14+r15], 0x27

                     loc_464a:
000000000000464a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_45c0+131
000000000000464e         cmp        r13, rax
0000000000004651         jbe        loc_4659

0000000000004653         mov        byte [r14+r15+1], 0x27

                     loc_4659:
0000000000004659         add        r15, 0x2                                    ; CODE XREF=sub_45c0+145
000000000000465d         xor        r8d, r8d

                     loc_4660:
0000000000004660         cmp        r15, r13                                    ; CODE XREF=sub_45c0+126, sub_46c0+275, sub_4b10+869
0000000000004663         jae        loc_4669

0000000000004665         mov        byte [r14+r15], bl

                     loc_4669:
0000000000004669         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_45c0+163
000000000000466e         add        r15, 0x1
0000000000004672         mov        eax, 0x0
0000000000004677         test       r12b, r12b
000000000000467a         cmove      edi, eax
000000000000467d         mov        byte [rsp+0xe8+var_DA], dil
0000000000004682         jmp        loc_44b8
0000000000004687         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_4690:
0000000000004690         xor        r10d, r10d
0000000000004693         mov        eax, dword [rsp+arg_0]
0000000000004697         cmp        eax, 0x2
000000000000469a         je         loc_4c58

00000000000046a0         cmp        eax, 0x5
00000000000046a3         je         loc_4c18

00000000000046a9         cmp        eax, 0x2
00000000000046ac         mov        ebx, 0x3f
00000000000046b1         sete       dl
00000000000046b4         xor        r12d, r12d
00000000000046b7         xor        eax, eax
00000000000046b9         jmp        sub_45c0+56
                        ; endp
00000000000046be         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_46c0:
00000000000046c0         xor        r10d, r10d
00000000000046c3         cmp        dword [rsp+arg_0], 0x2
00000000000046c8         je         loc_4bd0

00000000000046ce         mov        byte [rsp+arg_74], r12b
00000000000046d3         xor        edx, edx
00000000000046d5         xor        eax, eax
00000000000046d7         mov        ebx, 0x27
00000000000046dc         jmp        sub_45c0+56
                        ; endp
00000000000046e1         nop        dword [rax]
00000000000046e8         mov        edx, 0x9
00000000000046ed         mov        ebx, 0x74

                     loc_46f2:
00000000000046f2         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_4880+10, sub_4970+37, sub_4ab0+53
00000000000046f7         sete       al
00000000000046fa         and        al, byte [rsp+arg_7]
00000000000046fe         jne        sub_4830+30

0000000000004704         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_46c0+114
0000000000004709         jne        loc_4770

                     loc_470b:
000000000000470b         mov        ebx, edx                                    ; CODE XREF=sub_47e0+18
000000000000470d         xor        r12d, r12d
0000000000004710         xor        eax, eax
                        ; endp

                     loc_4712:
0000000000004712         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_45c0+61, sub_45c0+69
0000000000004717         jne        loc_460b

000000000000471d         jmp        loc_4629
0000000000004722         nop        word [rax+rax]
0000000000004728         mov        edx, 0x8
000000000000472d         mov        ebx, 0x62
0000000000004732         jmp        sub_46c0+68
0000000000004734         nop        dword [rax]
0000000000004738         cmp        dword [rsp+8], 0x2
000000000000473d         je         sub_4b10                                    ; sub_4b10
0000000000004743         cmp        byte [rsp+0xd], 0x0
0000000000004748         je         sub_4950+16

                     loc_474e:
000000000000474e         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_4950+8
0000000000004753         je         loc_4960

0000000000004759         cmp        qword [rsp+arg_10], 0x0
000000000000475f         jne        loc_4b1b

0000000000004765         mov        ebx, 0x5c
000000000000476a         nop        word [rax+rax]
                        ; endp

                     loc_4770:
0000000000004770         xor        r12d, r12d                                  ; CODE XREF=sub_46c0+73, sub_4ab0+29
                        ; endp

                     loc_4773:
0000000000004773         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_45c0+99, sub_45c0+108
0000000000004778         sete       dl
000000000000477b         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000004780         mov        eax, edx
0000000000004782         jne        loc_4fd8

0000000000004788         mov        eax, r8d
000000000000478b         xor        eax, 0x1
000000000000478e         and        al, dl
0000000000004790         je         loc_47c1

0000000000004792         cmp        r13, r15
0000000000004795         jbe        loc_479c

0000000000004797         mov        byte [r14+r15], 0x27

                     loc_479c:
000000000000479c         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_46c0+213
00000000000047a0         cmp        r13, rdx
00000000000047a3         jbe        loc_47ab

00000000000047a5         mov        byte [r14+r15+1], 0x24

                     loc_47ab:
00000000000047ab         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_46c0+227
00000000000047af         cmp        r13, rdx
00000000000047b2         jbe        loc_47ba

00000000000047b4         mov        byte [r14+r15+2], 0x27

                     loc_47ba:
00000000000047ba         add        r15, 0x3                                    ; CODE XREF=sub_46c0+242
00000000000047be         mov        r8d, eax

                     loc_47c1:
00000000000047c1         cmp        r13, r15                                    ; CODE XREF=sub_46c0+208
00000000000047c4         jbe        loc_47cb

00000000000047c6         mov        byte [r14+r15], 0x5c

                     loc_47cb:
00000000000047cb         add        r15, 0x1                                    ; CODE XREF=sub_46c0+260
00000000000047cf         add        rbp, 0x1
00000000000047d3         jmp        loc_4660
00000000000047d8         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_47e0:
00000000000047e0         cmp        byte [rsp+arg_5], 0x0
00000000000047e5         jne        loc_49b3

00000000000047eb         xor        edx, edx
00000000000047ed         test       byte [rsp+arg_70], 0x1
00000000000047f2         je         loc_470b

00000000000047f8         add        rbp, 0x1
00000000000047fc         jmp        quotearg_buffer_restyled+232
                        ; endp
0000000000004801         nop        dword [rax]
0000000000004808         cmp        dword [rsp+8], 0x2
000000000000480d         sete       dl
0000000000004810         xor        eax, eax
0000000000004812         jmp        sub_45c0+56
0000000000004817         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4820:
0000000000004820         mov        edx, 0x7
0000000000004825         mov        ebx, 0x61
000000000000482a         jmp        sub_46c0+68
                        ; endp
000000000000482f         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4830:
0000000000004830         cmp        dword [rsp+8], 0x2
0000000000004835         sete       dl
                        ; endp

                     loc_4838:
0000000000004838         test       rbp, rbp                                    ; CODE XREF=sub_45c0+38, sub_4a50+35
000000000000483b         jne        loc_45ec

0000000000004841         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_4a80+43
0000000000004846         and        al, dl
0000000000004848         je         sub_45c0+56

000000000000484e         mov        rbp, r11
0000000000004851         mov        dword [rsp+arg_0], 0x2
0000000000004859         jmp        sub_4b10+1097
                        ; endp
000000000000485e         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_4860:
0000000000004860         cmp        dword [rsp+arg_0], 0x2
0000000000004865         sete       dl
0000000000004868         xor        r12d, r12d
000000000000486b         jmp        sub_4830+17
                        ; endp
000000000000486d         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_4870:
0000000000004870         cmp        dword [rsp+arg_0], 0x2
0000000000004875         mov        ebx, 0x20
000000000000487a         sete       dl
000000000000487d         jmp        sub_4830+17
                        ; endp
000000000000487f         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_4880:
0000000000004880         mov        edx, 0xd
0000000000004885         mov        ebx, 0x72
000000000000488a         jmp        loc_46f2
000000000000488f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4890:
0000000000004890         mov        edx, 0xc
0000000000004895         mov        ebx, 0x66
000000000000489a         jmp        sub_46c0+68
                        ; endp
000000000000489f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_48a0:
00000000000048a0         mov        edx, 0xb
00000000000048a5         mov        ebx, 0x76
00000000000048aa         jmp        sub_46c0+68
                        ; endp
00000000000048af         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_48b0:
00000000000048b0         mov        edx, 0xa
00000000000048b5         mov        ebx, 0x6e
00000000000048ba         jmp        sub_46c0+50
                        ; endp
00000000000048bf         align      64

                     loc_48c0:
00000000000048c0         xor        r10d, r10d                                  ; CODE XREF=sub_48b0+135
00000000000048c3         nop        dword [rax+rax]

                     loc_48c8:
00000000000048c8         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
00000000000048ce         jne        loc_4c78

00000000000048d4         mov        qword [rsp+0xe8+var_B0], r11
00000000000048d9         mov        byte [rsp+0xe8+var_B8], r8b
00000000000048de         mov        byte [rsp+0xe8+var_C0], r10b
00000000000048e3         call       j___ctype_b_loc                             ; __ctype_b_loc
00000000000048e8         mov        rcx, qword [rax]
00000000000048eb         movzx      edx, bl
00000000000048ee         movzx      r10d, byte [rsp+0xe8+var_C0]
00000000000048f4         movzx      r8d, byte [rsp+0xe8+var_B8]
00000000000048fa         mov        r11, qword [rsp+0xe8+var_B0]
00000000000048ff         mov        edi, 0x1
0000000000004904         movzx      eax, word [rcx+rdx*2]
0000000000004908         and        ax, 0x4000
000000000000490c         setne      r12b
0000000000004910         sete       al
0000000000004913         and        al, byte [rsp+0xe8+var_DB]

                     loc_4917:
0000000000004917         test       al, al                                      ; CODE XREF=sub_4b10+2221
0000000000004919         jne        loc_52b1

000000000000491f         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000004924         sete       dl
0000000000004927         jmp        loc_45f8
000000000000492c         align      16

                     loc_4930:
0000000000004930         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
0000000000004934         cmp        bl, 0x7e
0000000000004937         ja         loc_48c0

0000000000004939         lea        rcx, qword [switch_table_7b00+552]          ; 0x7d28
0000000000004940         movzx      edx, bl
0000000000004943         movsxd     rax, dword [rcx+rdx*4]
0000000000004947         add        rax, rcx
000000000000494a         jmp        rax
                        ; endp
000000000000494c         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_4950:
0000000000004950         xor        r10d, r10d
0000000000004953         cmp        byte [rsp+arg_5], 0x0
0000000000004958         jne        loc_474e

000000000000495e         nop

                     loc_4960:
0000000000004960         mov        edx, 0x5c                                   ; CODE XREF=sub_46c0+136, sub_46c0+147
0000000000004965         mov        ebx, 0x5c
000000000000496a         jmp        sub_46c0+68
                        ; endp
000000000000496f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4970:
0000000000004970         mov        edx, 0xc
0000000000004975         xor        r10d, r10d
0000000000004978         mov        ebx, 0x66
000000000000497d         jmp        sub_46c0+68
                        ; endp
0000000000004982         nop        word [rax+rax]
0000000000004988         mov        edx, 0xa
000000000000498d         xor        r10d, r10d
0000000000004990         mov        ebx, 0x6e
0000000000004995         jmp        sub_46c0+50
000000000000499a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_49a0:
00000000000049a0         mov        ebx, 0x61
00000000000049a5         jmp        sub_46c0+176
                        ; endp
00000000000049aa         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_49b0:
00000000000049b0         xor        r10d, r10d
                        ; endp

                     loc_49b3:
00000000000049b3         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_47e0+5
00000000000049b8         sete       dl
00000000000049bb         cmp        byte [rsp+arg_7], 0x0
00000000000049c0         jne        loc_555a

00000000000049c6         mov        eax, r8d
00000000000049c9         mov        rcx, r15
00000000000049cc         xor        eax, 0x1
00000000000049cf         and        al, dl
00000000000049d1         je         loc_4a00

00000000000049d3         cmp        r13, r15
00000000000049d6         jbe        loc_49dd

00000000000049d8         mov        byte [r14+r15], 0x27

                     loc_49dd:
00000000000049dd         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_49b0+38
00000000000049e1         cmp        r13, rcx
00000000000049e4         jbe        loc_49ec

00000000000049e6         mov        byte [r14+r15+1], 0x24

                     loc_49ec:
00000000000049ec         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_49b0+52
00000000000049f0         cmp        r13, rcx
00000000000049f3         ja         loc_5029

                     loc_49f9:
00000000000049f9         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_4b10+1311
00000000000049fd         mov        r8d, eax

                     loc_4a00:
0000000000004a00         cmp        r13, rcx                                    ; CODE XREF=sub_49b0+33
0000000000004a03         jbe        loc_4a0a

0000000000004a05         mov        byte [r14+rcx], 0x5c

                     loc_4a0a:
0000000000004a0a         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_49b0+83
0000000000004a0f         lea        r15, qword [rcx+1]
0000000000004a13         je         loc_5019

0000000000004a19         lea        rax, qword [rbp+1]
0000000000004a1d         cmp        rax, r11
0000000000004a20         jae        loc_4a3b

0000000000004a22         mov        rax, qword [rsp+arg_8]
0000000000004a27         movzx      eax, byte [rax+rbp+1]
0000000000004a2c         mov        byte [rsp+arg_20], al
0000000000004a30         sub        eax, 0x30
0000000000004a33         cmp        al, 0x9
0000000000004a35         jbe        loc_5269

                     loc_4a3b:
0000000000004a3b         mov        eax, r12d                                   ; CODE XREF=sub_49b0+112
0000000000004a3e         mov        ebx, 0x30
0000000000004a43         xor        r12d, r12d
0000000000004a46         jmp        sub_45c0+56
                        ; endp
0000000000004a4b         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_4a50:
0000000000004a50         cmp        dword [rsp+arg_0], 0x2
0000000000004a55         mov        r12d, r10d
0000000000004a58         sete       dl
0000000000004a5b         xor        r10d, r10d
0000000000004a5e         xor        eax, eax
0000000000004a60         jmp        sub_45c0+56
                        ; endp
0000000000004a65         nop        dword [rax]
0000000000004a68         cmp        dword [rsp+8], 0x2
0000000000004a6d         sete       dl
0000000000004a70         xor        r10d, r10d
0000000000004a73         jmp        sub_4830+8
0000000000004a78         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4a80:
0000000000004a80         cmp        dword [rsp+8], 0x2
0000000000004a85         sete       dl
0000000000004a88         xor        r10d, r10d
0000000000004a8b         xor        r12d, r12d
0000000000004a8e         jmp        sub_4830+17
                        ; endp
0000000000004a93         nop        dword [rax+rax]
0000000000004a98         cmp        dword [rsp+8], 0x2
0000000000004a9d         mov        r12d, r10d
0000000000004aa0         mov        ebx, 0x20
0000000000004aa5         sete       dl
0000000000004aa8         xor        r10d, r10d
0000000000004aab         jmp        sub_4830+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4ab0:
0000000000004ab0         mov        edx, 0xd
0000000000004ab5         xor        r10d, r10d
0000000000004ab8         mov        ebx, 0x72
0000000000004abd         jmp        sub_46c0+50
                        ; endp
0000000000004ac2         nop        word [rax+rax]
0000000000004ac8         mov        ebx, 0x76
0000000000004acd         jmp        sub_46c0+176
0000000000004ad2         nop        word [rax+rax]
0000000000004ad8         mov        edx, 0x9
0000000000004add         xor        r10d, r10d
0000000000004ae0         mov        ebx, 0x74
0000000000004ae5         jmp        sub_46c0+50
0000000000004aea         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4af0:
0000000000004af0         mov        ebx, 0x62
0000000000004af5         jmp        sub_46c0+176
                        ; endp
0000000000004afa         nop        word [rax+rax]

                     loc_4b00:
0000000000004b00         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
0000000000004b03         jmp        loc_45a0
0000000000004b08         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_4b10:
0000000000004b10         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_46c0+125
0000000000004b15         jne        sub_4b10+2416
                        ; endp

                     loc_4b1b:
0000000000004b1b         add        rbp, 0x1                                    ; CODE XREF=sub_46c0+159
0000000000004b1f         mov        eax, r8d
0000000000004b22         xor        r12d, r12d
0000000000004b25         mov        ebx, 0x5c
0000000000004b2a         jmp        sub_45c0+124
                        ; endp
0000000000004b2f         align      16

                     loc_4b30:
0000000000004b30         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
0000000000004b35         movzx      ebx, byte [rsp+0xe8+var_D9]
0000000000004b3a         mov        r12d, r8d
0000000000004b3d         mov        rbp, r11
0000000000004b40         sete       dl
0000000000004b43         mov        eax, ebx
0000000000004b45         test       r15, r15
0000000000004b48         sete       cl
0000000000004b4b         and        eax, edx
0000000000004b4d         and        al, cl
0000000000004b4f         jne        loc_55b6

0000000000004b55         mov        eax, ebx
0000000000004b57         xor        eax, 0x1
0000000000004b5a         and        dl, al
0000000000004b5c         je         loc_54cc

0000000000004b62         cmp        byte [rsp+0xe8+var_6C], 0x0
0000000000004b67         je         loc_54ca

0000000000004b6d         cmp        byte [rsp+0xe8+var_DA], 0x0
0000000000004b72         jne        loc_556d

0000000000004b78         test       r13, r13
0000000000004b7b         sete       al
0000000000004b7e         cmp        qword [rsp+0xe8+var_98], 0x0
0000000000004b84         setne      dl
0000000000004b87         and        al, dl
0000000000004b89         je         loc_55ac

0000000000004b8f         mov        r13, qword [rsp+0xe8+var_98]

                     loc_4b94:
0000000000004b94         lea        rbx, qword [aLibs+29]                       ; 0x7a95, CODE XREF=sub_4b10+2781
0000000000004b9b         mov        byte [r14], 0x27
0000000000004b9f         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000004ba7         mov        r15d, 0x1
0000000000004bad         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004bb6         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000004bbb         mov        qword [rsp+0xe8+var_A0], rbx
0000000000004bc0         mov        byte [rsp+0xe8+var_6C], al
0000000000004bc4         jmp        loc_44a3
0000000000004bc9         align      16

                     loc_4bd0:
0000000000004bd0         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_46c0+8
0000000000004bd5         jne        sub_4b10+2416

0000000000004bdb         test       r13, r13
0000000000004bde         je         loc_4fe0

0000000000004be4         xor        edx, edx
0000000000004be6         cmp        qword [rsp+arg_48], 0x0
0000000000004bec         jne        loc_4fe0

                     loc_4bf2:
0000000000004bf2         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_4b10+1284, sub_4b10+2794
0000000000004bf7         add        r15, 0x3
0000000000004bfb         xor        eax, eax
0000000000004bfd         mov        byte [rsp+arg_74], r12b
0000000000004c02         xor        r8d, r8d
0000000000004c05         mov        r13, rdx
0000000000004c08         mov        ebx, 0x27
0000000000004c0d         jmp        sub_45c0+105
                        ; endp
0000000000004c12         align      8

                     loc_4c18:
0000000000004c18         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_4690+19
0000000000004c1d         je         loc_4c40

0000000000004c1f         lea        rcx, qword [rbp+2]
0000000000004c23         cmp        rcx, r11
0000000000004c26         jae        loc_4c40

0000000000004c28         mov        rax, qword [rsp+arg_8]
0000000000004c2d         cmp        byte [rax+rbp+1], 0x3f
0000000000004c32         je         loc_53c2

0000000000004c38         nop        dword [rax+rax]

                     loc_4c40:
0000000000004c40         xor        edx, edx                                    ; CODE XREF=sub_4b10+269, sub_4b10+278, sub_4b10+2233, sub_4b10+2253
0000000000004c42         xor        r12d, r12d
0000000000004c45         xor        eax, eax
0000000000004c47         mov        ebx, 0x3f
0000000000004c4c         jmp        sub_45c0+56
                        ; endp
0000000000004c51         align      8

                     loc_4c58:
0000000000004c58         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_4690+10
0000000000004c5d         jne        loc_5480

0000000000004c63         xor        r12d, r12d
0000000000004c66         xor        eax, eax
0000000000004c68         mov        ebx, 0x3f
0000000000004c6d         jmp        sub_45c0+105
                        ; endp
0000000000004c72         align      8

                     loc_4c78:
0000000000004c78         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_48b0+30
0000000000004c80         cmp        r11, 0xffffffffffffffff
0000000000004c84         mov        qword [rsp+0xe8+var_48], 0x0
0000000000004c90         mov        qword [rsp+0xe8+var_C0], rax
0000000000004c95         jne        loc_4cc4

0000000000004c97         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
0000000000004c9c         mov        byte [rsp+0xe8+var_A8], r8b
0000000000004ca1         mov        byte [rsp+0xe8+var_B0], r10b
0000000000004ca6         mov        qword [rsp+0xe8+var_B8], r9
0000000000004cab         call       j_strlen                                    ; strlen
0000000000004cb0         movzx      r8d, byte [rsp+0xe8+var_A8]
0000000000004cb6         movzx      r10d, byte [rsp+0xe8+var_B0]
0000000000004cbc         mov        r11, rax
0000000000004cbf         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_4cc4:
0000000000004cc4         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_4b10+389
0000000000004ccc         xor        ecx, ecx
0000000000004cce         mov        byte [rsp+0xe8+var_6A], bl
0000000000004cd2         mov        byte [rsp+0xe8+var_6B], r8b
0000000000004cd7         mov        rbx, rcx
0000000000004cda         mov        qword [rsp+0xe8+var_60], r9
0000000000004ce2         mov        qword [rsp+0xe8+var_B0], rax
0000000000004ce7         mov        byte [rsp+0xe8+var_69], r10b
0000000000004cec         mov        qword [rsp+0xe8+var_68], r15
0000000000004cf4         mov        qword [rsp+0xe8+var_A8], r14
0000000000004cf9         mov        qword [rsp+0xe8+var_78], r13
0000000000004cfe         mov        qword [rsp+0xe8+var_B8], r11

                     loc_4d03:
0000000000004d03         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_4b10+623
0000000000004d08         lea        r14, qword [rbp+rbx]
0000000000004d0d         mov        rdx, qword [rsp+0xe8+var_B8]
0000000000004d12         mov        rcx, qword [rsp+0xe8+var_C0]
0000000000004d17         mov        rdi, qword [rsp+0xe8+var_B0]
0000000000004d1c         lea        r13, qword [rax+r14]
0000000000004d20         sub        rdx, r14
0000000000004d23         mov        rsi, r13
0000000000004d26         call       rpl_mbrtowc                                 ; rpl_mbrtowc
0000000000004d2b         test       rax, rax
0000000000004d2e         mov        r15, rax
0000000000004d31         je         loc_4d81

0000000000004d33         cmp        rax, 0xffffffffffffffff
0000000000004d37         je         loc_5355

0000000000004d3d         cmp        rax, 0xfffffffffffffffe
0000000000004d41         je         loc_52e1

0000000000004d47         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000004d4c         sete       al
0000000000004d4f         and        al, byte [rsp+0xe8+var_D9]
0000000000004d53         jne        loc_4ef0

                     loc_4d59:
0000000000004d59         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_4b10+996, sub_4b10+1031
0000000000004d60         call       j_iswprint                                  ; iswprint
0000000000004d65         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
0000000000004d6a         test       eax, eax
0000000000004d6c         mov        eax, 0x0
0000000000004d71         cmove      r12d, eax
0000000000004d75         add        rbx, r15
0000000000004d78         call       j_mbsinit                                   ; mbsinit
0000000000004d7d         test       eax, eax
0000000000004d7f         je         loc_4d03

                     loc_4d81:
0000000000004d81         mov        edx, r12d                                   ; CODE XREF=sub_4b10+545
0000000000004d84         mov        rdi, rbx
0000000000004d87         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000004d8d         xor        edx, 0x1
0000000000004d90         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000004d95         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000004d9b         and        dl, byte [rsp+0xe8+var_DB]
0000000000004d9f         mov        r15, qword [rsp+0xe8+var_68]
0000000000004da7         mov        r14, qword [rsp+0xe8+var_A8]
0000000000004dac         mov        r13, qword [rsp+0xe8+var_78]
0000000000004db1         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_4db6:
0000000000004db6         cmp        rdi, 0x1                                    ; CODE XREF=sub_4b10+2112, sub_4b10+2168
0000000000004dba         jbe        loc_53bb

                     loc_4dc0:
0000000000004dc0         mov        rcx, rdi                                    ; CODE XREF=sub_4b10+1961
0000000000004dc3         xor        esi, esi
0000000000004dc5         movzx      r9d, byte [rsp+0xe8+var_D9]
0000000000004dcb         add        rcx, rbp
0000000000004dce         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000004dd3         jmp        loc_4e8e
0000000000004dd8         align      32

                     loc_4de0:
0000000000004de0         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_4b10+896
0000000000004de5         sete       al
0000000000004de8         test       r9b, r9b
0000000000004deb         jne        loc_52a0

0000000000004df1         mov        esi, r8d
0000000000004df4         xor        esi, 0x1
0000000000004df7         and        al, sil
0000000000004dfa         je         loc_4e2b

0000000000004dfc         cmp        r13, r15
0000000000004dff         jbe        loc_4e06

0000000000004e01         mov        byte [r14+r15], 0x27

                     loc_4e06:
0000000000004e06         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_4b10+751
0000000000004e0a         cmp        r13, rsi
0000000000004e0d         jbe        loc_4e15

0000000000004e0f         mov        byte [r14+r15+1], 0x24

                     loc_4e15:
0000000000004e15         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_4b10+765
0000000000004e19         cmp        r13, rsi
0000000000004e1c         jbe        loc_4e24

0000000000004e1e         mov        byte [r14+r15+2], 0x27

                     loc_4e24:
0000000000004e24         add        r15, 0x3                                    ; CODE XREF=sub_4b10+780
0000000000004e28         mov        r8d, eax

                     loc_4e2b:
0000000000004e2b         cmp        r13, r15                                    ; CODE XREF=sub_4b10+746
0000000000004e2e         jbe        loc_4e35

0000000000004e30         mov        byte [r14+r15], 0x5c

                     loc_4e35:
0000000000004e35         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4b10+798
0000000000004e39         cmp        r13, rax
0000000000004e3c         jbe        loc_4e4b

0000000000004e3e         mov        eax, ebx
0000000000004e40         shr        al, 0x6
0000000000004e43         add        eax, 0x30
0000000000004e46         mov        byte [r14+r15+1], al

                     loc_4e4b:
0000000000004e4b         lea        rax, qword [r15+2]                          ; CODE XREF=sub_4b10+812
0000000000004e4f         cmp        r13, rax
0000000000004e52         jbe        loc_4e64

0000000000004e54         mov        eax, ebx
0000000000004e56         shr        al, 0x3
0000000000004e59         and        eax, 0x7
0000000000004e5c         add        eax, 0x30
0000000000004e5f         mov        byte [r14+r15+2], al

                     loc_4e64:
0000000000004e64         and        ebx, 0x7                                    ; CODE XREF=sub_4b10+834
0000000000004e67         add        rbp, 0x1
0000000000004e6b         add        r15, 0x3
0000000000004e6f         add        ebx, 0x30
0000000000004e72         cmp        rbp, rcx
0000000000004e75         jae        loc_4660

0000000000004e7b         mov        esi, edx

                     loc_4e7d:
0000000000004e7d         cmp        r13, r15                                    ; CODE XREF=sub_4b10+985, sub_4b10+1969
0000000000004e80         jbe        loc_4e86

0000000000004e82         mov        byte [r14+r15], bl

                     loc_4e86:
0000000000004e86         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_4b10+880
0000000000004e8a         add        r15, 0x1

                     loc_4e8e:
0000000000004e8e         test       dl, dl                                      ; CODE XREF=sub_4b10+707
0000000000004e90         jne        loc_4de0

0000000000004e96         mov        eax, esi
0000000000004e98         xor        eax, 0x1
0000000000004e9b         and        eax, r8d
0000000000004e9e         test       r10b, r10b
0000000000004ea1         je         loc_4eb1

0000000000004ea3         cmp        r13, r15
0000000000004ea6         jbe        loc_4ead

0000000000004ea8         mov        byte [r14+r15], 0x5c

                     loc_4ead:
0000000000004ead         add        r15, 0x1                                    ; CODE XREF=sub_4b10+918

                     loc_4eb1:
0000000000004eb1         add        rbp, 0x1                                    ; CODE XREF=sub_4b10+913
0000000000004eb5         cmp        rbp, rcx
0000000000004eb8         jae        loc_463c

0000000000004ebe         test       al, al
0000000000004ec0         je         loc_52be

0000000000004ec6         cmp        r13, r15
0000000000004ec9         jbe        loc_4ed0

0000000000004ecb         mov        byte [r14+r15], 0x27

                     loc_4ed0:
0000000000004ed0         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4b10+953
0000000000004ed4         cmp        r13, rax
0000000000004ed7         jbe        loc_4edf

0000000000004ed9         mov        byte [r14+r15+1], 0x27

                     loc_4edf:
0000000000004edf         add        r15, 0x2                                    ; CODE XREF=sub_4b10+967
0000000000004ee3         xor        r10d, r10d
0000000000004ee6         xor        r8d, r8d
0000000000004ee9         jmp        loc_4e7d
0000000000004eeb         align      16

                     loc_4ef0:
0000000000004ef0         cmp        r15, 0x1                                    ; CODE XREF=sub_4b10+579
0000000000004ef4         je         loc_4d59

0000000000004efa         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000004eff         lea        rcx, qword [rdi+r15]
0000000000004f03         lea        rdx, qword [rdi+r14+1]
0000000000004f08         lea        r8, qword [rcx+r14]
0000000000004f0c         jmp        loc_4f1d
0000000000004f0e         align      16

                     loc_4f10:
0000000000004f10         add        rdx, 0x1                                    ; CODE XREF=sub_4b10+1046, sub_4b10+1072
0000000000004f14         cmp        r8, rdx
0000000000004f17         je         loc_4d59

                     loc_4f1d:
0000000000004f1d         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_4b10+1020
0000000000004f20         sub        ecx, 0x5b
0000000000004f23         cmp        cl, 0x21
0000000000004f26         ja         loc_4f10

0000000000004f28         mov        esi, 0x1
0000000000004f2d         shl        rsi, cl
0000000000004f30         mov        rcx, rsi
0000000000004f33         movabs     rsi, 0x20000002b
0000000000004f3d         test       rcx, rsi
0000000000004f40         je         loc_4f10

0000000000004f42         mov        r14, qword [rsp+0xe8+var_A8]
0000000000004f47         mov        r13, qword [rsp+0xe8+var_78]
0000000000004f4c         mov        rbp, qword [rsp+0xe8+var_B8]
0000000000004f51         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_4f59:
0000000000004f59         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_4b10+1227, sub_4b10+1948, sub_4b10+2585, sub_4b10+2734
0000000000004f5e         je         loc_4f70

0000000000004f60         test       al, al
0000000000004f62         mov        eax, 0x4
0000000000004f67         cmove      eax, dword [rsp+0xe8+var_E0]
0000000000004f6c         mov        dword [rsp+0xe8+var_E0], eax

                     loc_4f70:
0000000000004f70         sub        rsp, 0x8                                    ; CODE XREF=sub_4b10+1102
0000000000004f74         mov        rcx, rbp
0000000000004f77         mov        rsi, r13
0000000000004f7a         push       qword [rsp+0xf0+var_88]
0000000000004f7e         push       qword [rsp+0xf8+var_80]
0000000000004f82         mov        rdi, r14
0000000000004f85         push       0x0
0000000000004f87         mov        r9d, dword [rsp+0x108+var_70]
0000000000004f8f         mov        r8d, dword [rsp+0x108+var_E0]
0000000000004f94         mov        rdx, qword [rsp+0x108+var_D8]
0000000000004f99         and        r9d, 0xfffffffd
0000000000004f9d         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004fa2         add        rsp, 0x20
0000000000004fa6         mov        r15, rax

                     loc_4fa9:
0000000000004fa9         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_4b10+2549, sub_4b10+2560, sub_4b10+2711
0000000000004fb1         xor        rbx, qword [fs:0x28]
0000000000004fba         mov        rax, r15
0000000000004fbd         jne        loc_55c3

0000000000004fc3         add        rsp, 0xb8
0000000000004fca         pop        rbx
0000000000004fcb         pop        rbp
0000000000004fcc         pop        r12
0000000000004fce         pop        r13
0000000000004fd0         pop        r14
0000000000004fd2         pop        r15
0000000000004fd4         ret
                        ; endp
0000000000004fd5         align      8

                     loc_4fd8:
0000000000004fd8         mov        rbp, r11                                    ; CODE XREF=sub_46c0+194
0000000000004fdb         jmp        loc_4f59

                     loc_4fe0:
0000000000004fe0         cmp        r13, r15                                    ; CODE XREF=sub_4b10+206, sub_4b10+220
0000000000004fe3         jbe        loc_4fea

0000000000004fe5         mov        byte [r14+r15], 0x27

                     loc_4fea:
0000000000004fea         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4b10+1235
0000000000004fee         cmp        r13, rax
0000000000004ff1         jbe        loc_4ff9

0000000000004ff3         mov        byte [r14+r15+1], 0x5c

                     loc_4ff9:
0000000000004ff9         lea        rax, qword [r15+2]                          ; CODE XREF=sub_4b10+1249
0000000000004ffd         cmp        r13, rax
0000000000005000         jbe        loc_55f2

0000000000005006         mov        rdx, r13
0000000000005009         mov        byte [r14+r15+2], 0x27
000000000000500f         mov        r13, qword [rsp+arg_48]
0000000000005014         jmp        loc_4bf2

                     loc_5019:
0000000000005019         mov        eax, r12d                                   ; CODE XREF=sub_49b0+99
000000000000501c         mov        ebx, 0x30
0000000000005021         xor        r12d, r12d
0000000000005024         jmp        sub_45c0+105
                        ; endp

                     loc_5029:
0000000000005029         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_49b0+67
000000000000502f         jmp        loc_49f9

                     loc_5034:
0000000000005034         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
0000000000005036         jne        loc_4463

000000000000503c         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_5041:
0000000000005041         test       r13, r13                                    ; CODE XREF=sub_4b10+2749
0000000000005044         jne        loc_55da

000000000000504a         lea        rax, qword [aLibs+29]                       ; 0x7a95
0000000000005051         mov        qword [rsp+0xe8+var_98], 0x0
000000000000505a         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000505f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000005064         xor        r12d, r12d
0000000000005067         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000506c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000005075         mov        qword [rsp+0xe8+var_A0], rax
000000000000507a         mov        r15d, 0x1
0000000000005080         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000005088         jmp        loc_44a3
000000000000508d         align      16

                     loc_5090:
0000000000005090         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
0000000000005092         jne        loc_548d

0000000000005098         test       r13, r13
000000000000509b         je         loc_52c6

00000000000050a1         mov        byte [r14], 0x22
00000000000050a5         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000050aa         xor        r12d, r12d
00000000000050ad         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000050b2         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_50bb:
00000000000050bb         lea        rax, qword [aLibs+27]                       ; 0x7a93, CODE XREF=sub_4b10+1996
00000000000050c2         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000050c7         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000050cc         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000050d5         mov        r15d, 0x1
00000000000050db         mov        qword [rsp+0xe8+var_A0], rax
00000000000050e0         jmp        loc_44a3

                     loc_50e5:
00000000000050e5         lea        rax, qword [aLibs+27]                       ; case 6, 0x7a93, CODE XREF=quotearg_buffer_restyled+145
00000000000050ec         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000050f1         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000050f6         xor        r12d, r12d
00000000000050f9         mov        qword [rsp+0xe8+var_98], 0x0
0000000000005102         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000005107         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000510c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000005115         xor        r15d, r15d
0000000000005118         mov        qword [rsp+0xe8+var_A0], rax
000000000000511d         mov        dword [rsp+0xe8+var_E0], 0x5
0000000000005125         jmp        loc_44a3

                     loc_512a:
000000000000512a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
000000000000512f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000005134         xor        r12d, r12d
0000000000005137         mov        qword [rsp+0xe8+var_98], 0x0
0000000000005140         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000005145         xor        r15d, r15d
0000000000005148         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000514d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000005156         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000515f         jmp        loc_44a3

                     loc_5164:
0000000000005164         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
0000000000005169         je         loc_51c1

000000000000516b         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0x7a97
0000000000005172         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005174         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005179         call       j_dcgettext                                 ; dcgettext
000000000000517e         mov        rcx, rax
0000000000005181         mov        qword [rsp+0xe8+var_80], rax
0000000000005186         lea        rax, qword [aLibs+31]                       ; 0x7a97
000000000000518d         cmp        rcx, rax
0000000000005190         je         loc_552e

                     loc_5196:
0000000000005196         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x7a95, CODE XREF=sub_4b10+2607
000000000000519d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000519f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000051a4         call       j_dcgettext                                 ; dcgettext
00000000000051a9         mov        rcx, rax
00000000000051ac         mov        qword [rsp+0xe8+var_88], rax
00000000000051b1         lea        rax, qword [aLibs+29]                       ; 0x7a95
00000000000051b8         cmp        rcx, rax
00000000000051bb         je         loc_5544

                     loc_51c1:
00000000000051c1         xor        r15d, r15d                                  ; CODE XREF=sub_4b10+1625, sub_4b10+2629
00000000000051c4         test       ebx, ebx
00000000000051c6         je         loc_538d

                     loc_51cc:
00000000000051cc         test       ebx, ebx                                    ; CODE XREF=sub_4b10+2183, sub_4b10+2214
00000000000051ce         mov        rbx, qword [rsp+0xe8+var_88]
00000000000051d3         setne      byte [rsp+0xe8+var_D9]
00000000000051d8         xor        r12d, r12d
00000000000051db         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
00000000000051de         call       j_strlen                                    ; strlen
00000000000051e3         mov        qword [rsp+0xe8+var_A0], rbx
00000000000051e8         mov        qword [rsp+0xe8+var_D0], rax
00000000000051ed         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000051f2         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000051f7         mov        qword [rsp+0xe8+var_98], 0x0
0000000000005200         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000005205         jmp        loc_44a3

                     loc_520a:
000000000000520a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
000000000000520f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000005214         xor        r12d, r12d
0000000000005217         mov        qword [rsp+0xe8+var_98], 0x0
0000000000005220         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000005225         xor        r15d, r15d
0000000000005228         mov        byte [rsp+0xe8+var_DB], 0x0
000000000000522d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000005236         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000523f         jmp        loc_44a3

                     loc_5244:
0000000000005244         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000005249         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000524e         xor        r12d, r12d
0000000000005251         mov        qword [rsp+0xe8+var_98], 0x0
000000000000525a         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000525f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000005264         jmp        loc_4483

                     loc_5269:
0000000000005269         cmp        r13, r15                                    ; CODE XREF=sub_49b0+133
000000000000526c         jbe        loc_5273

000000000000526e         mov        byte [r14+r15], 0x30

                     loc_5273:
0000000000005273         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_4b10+1884
0000000000005277         cmp        r13, rax
000000000000527a         jbe        loc_5282

000000000000527c         mov        byte [r14+rcx+2], 0x30

                     loc_5282:
0000000000005282         mov        eax, r12d                                   ; CODE XREF=sub_4b10+1898
0000000000005285         lea        r15, qword [rcx+3]
0000000000005289         xor        r12d, r12d
000000000000528c         mov        ebx, 0x30
0000000000005291         jmp        sub_45c0+56
                        ; endp
0000000000005296         align      32

                     loc_52a0:
00000000000052a0         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_4b10+731
00000000000052a5         mov        rbp, r11
00000000000052a8         mov        byte [rsp+0xe8+var_DB], bl
00000000000052ac         jmp        loc_4f59

                     loc_52b1:
00000000000052b1         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_48b0+105
00000000000052b6         xor        r12d, r12d
00000000000052b9         jmp        loc_4dc0

                     loc_52be:
00000000000052be         xor        r10d, r10d                                  ; CODE XREF=sub_4b10+944
00000000000052c1         jmp        loc_4e7d

                     loc_52c6:
00000000000052c6         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_4b10+1419
00000000000052cf         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000052d4         xor        r12d, r12d
00000000000052d7         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000052dc         jmp        loc_50bb

                     loc_52e1:
00000000000052e1         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_4b10+561
00000000000052e6         mov        rsi, r14
00000000000052e9         mov        rcx, r13
00000000000052ec         mov        rax, rbx
00000000000052ef         mov        rdi, rbx
00000000000052f2         movzx      r8d, byte [rsp+0xe8+var_6B]
00000000000052f8         movzx      ebx, byte [rsp+0xe8+var_6A]
00000000000052fd         mov        r9, qword [rsp+0xe8+var_60]
0000000000005305         cmp        rsi, r11
0000000000005308         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000530e         mov        r15, qword [rsp+0xe8+var_68]
0000000000005316         mov        r14, qword [rsp+0xe8+var_A8]
000000000000531b         mov        r13, qword [rsp+0xe8+var_78]
0000000000005320         jae        loc_5348

0000000000005322         cmp        byte [rcx], 0x0
0000000000005325         jne        loc_5337

0000000000005327         jmp        loc_5348
0000000000005329         align      16

                     loc_5330:
0000000000005330         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_4b10+2099
0000000000005335         je         loc_5345

                     loc_5337:
0000000000005337         add        rax, 0x1                                    ; CODE XREF=sub_4b10+2069
000000000000533b         lea        rdx, qword [rbp+rax]
0000000000005340         cmp        r11, rdx
0000000000005343         ja         loc_5330

                     loc_5345:
0000000000005345         mov        rdi, rax                                    ; CODE XREF=sub_4b10+2085

                     loc_5348:
0000000000005348         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_4b10+2064, sub_4b10+2071
000000000000534d         xor        r12d, r12d
0000000000005350         jmp        loc_4db6

                     loc_5355:
0000000000005355         mov        rdi, rbx                                    ; CODE XREF=sub_4b10+551
0000000000005358         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000535e         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000005363         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000005369         mov        r15, qword [rsp+0xe8+var_68]
0000000000005371         xor        r12d, r12d
0000000000005374         mov        r14, qword [rsp+0xe8+var_A8]
0000000000005379         mov        r13, qword [rsp+0xe8+var_78]
000000000000537e         mov        r11, qword [rsp+0xe8+var_B8]
0000000000005383         movzx      edx, byte [rsp+0xe8+var_DB]
0000000000005388         jmp        loc_4db6

                     loc_538d:
000000000000538d         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_4b10+1718
0000000000005392         movzx      eax, byte [rdx]
0000000000005395         test       al, al
0000000000005397         je         loc_51cc

000000000000539d         nop        dword [rax]

                     loc_53a0:
00000000000053a0         cmp        r13, r15                                    ; CODE XREF=sub_4b10+2212
00000000000053a3         jbe        loc_53a9

00000000000053a5         mov        byte [r14+r15], al

                     loc_53a9:
00000000000053a9         add        r15, 0x1                                    ; CODE XREF=sub_4b10+2195
00000000000053ad         movzx      eax, byte [rdx+r15]
00000000000053b2         test       al, al
00000000000053b4         jne        loc_53a0

00000000000053b6         jmp        loc_51cc

                     loc_53bb:
00000000000053bb         mov        eax, edx                                    ; CODE XREF=sub_4b10+682
00000000000053bd         jmp        loc_4917

                     loc_53c2:
00000000000053c2         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_4b10+290
00000000000053c6         cmp        bl, 0x3e
00000000000053c9         ja         loc_4c40

00000000000053cf         movabs     rax, 0x7000a38200000000
00000000000053d9         bt         rax, rbx
00000000000053dd         jae        loc_4c40

00000000000053e3         cmp        byte [rsp+arg_7], 0x0
00000000000053e8         jne        loc_55d2

00000000000053ee         cmp        r13, r15
00000000000053f1         jbe        loc_53f8

00000000000053f3         mov        byte [r14+r15], 0x3f

                     loc_53f8:
00000000000053f8         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4b10+2273
00000000000053fc         cmp        r13, rax
00000000000053ff         jbe        loc_5407

0000000000005401         mov        byte [r14+r15+1], 0x22

                     loc_5407:
0000000000005407         lea        rax, qword [r15+2]                          ; CODE XREF=sub_4b10+2287
000000000000540b         cmp        r13, rax
000000000000540e         jbe        loc_5416

0000000000005410         mov        byte [r14+r15+2], 0x22

                     loc_5416:
0000000000005416         lea        rax, qword [r15+3]                          ; CODE XREF=sub_4b10+2302
000000000000541a         cmp        r13, rax
000000000000541d         jbe        loc_5425

000000000000541f         mov        byte [r14+r15+3], 0x3f

                     loc_5425:
0000000000005425         add        r15, 0x4                                    ; CODE XREF=sub_4b10+2317
0000000000005429         xor        edx, edx
000000000000542b         xor        r12d, r12d
000000000000542e         xor        eax, eax
0000000000005430         mov        rbp, rcx
0000000000005433         jmp        sub_45c0+56
                        ; endp

                     loc_5438:
0000000000005438         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
000000000000543a         je         loc_55c8

0000000000005440         lea        rax, qword [aLibs+29]                       ; 0x7a95
0000000000005447         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000544c         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000005451         xor        r12d, r12d
0000000000005454         mov        qword [rsp+0xe8+var_98], 0x0
000000000000545d         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000005462         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000005467         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000005470         xor        r15d, r15d
0000000000005473         mov        qword [rsp+0xe8+var_A0], rax
0000000000005478         jmp        loc_44a3
000000000000547d         align      128

                     loc_5480:
0000000000005480         mov        rbp, r11                                    ; CODE XREF=sub_4b10+333
0000000000005483         movzx      eax, byte [rsp+arg_7]
0000000000005488         jmp        sub_4b10+1097
                        ; endp

                     loc_548d:
000000000000548d         lea        rax, qword [aLibs+27]                       ; 0x7a93, CODE XREF=sub_4b10+1410
0000000000005494         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000005499         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000549e         xor        r12d, r12d
00000000000054a1         mov        qword [rsp+0xe8+var_98], 0x0
00000000000054aa         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000054af         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000054b4         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000054bd         xor        r15d, r15d
00000000000054c0         mov        qword [rsp+0xe8+var_A0], rax
00000000000054c5         jmp        loc_44a3

                     loc_54ca:
00000000000054ca         mov        eax, edx                                    ; CODE XREF=sub_4b10+87

                     loc_54cc:
00000000000054cc         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_4b10+76, sub_4b10+2721
00000000000054d1         test       rbx, rbx
00000000000054d4         je         loc_5502

00000000000054d6         test       al, al
00000000000054d8         je         loc_5502

00000000000054da         movzx      ecx, byte [rbx]
00000000000054dd         mov        rax, rbx
00000000000054e0         test       cl, cl
00000000000054e2         je         loc_5502

00000000000054e4         mov        rdx, r15
00000000000054e7         sub        rax, r15

                     loc_54ea:
00000000000054ea         cmp        r13, rdx                                    ; CODE XREF=sub_4b10+2541
00000000000054ed         jbe        loc_54f3

00000000000054ef         mov        byte [r14+rdx], cl

                     loc_54f3:
00000000000054f3         add        rdx, 0x1                                    ; CODE XREF=sub_4b10+2525
00000000000054f7         movzx      ecx, byte [rax+rdx]
00000000000054fb         test       cl, cl
00000000000054fd         jne        loc_54ea

00000000000054ff         mov        r15, rdx

                     loc_5502:
0000000000005502         cmp        r13, r15                                    ; CODE XREF=sub_4b10+2500, sub_4b10+2504, sub_4b10+2514
0000000000005505         jbe        loc_4fa9

000000000000550b         mov        byte [r14+r15], 0x0
0000000000005510         jmp        loc_4fa9

                     loc_5515:
0000000000005515         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
000000000000551a         movzx      ebx, byte [rsp+0xe8+var_D9]
000000000000551f         mov        rbp, r11
0000000000005522         sete       al
0000000000005525         mov        byte [rsp+0xe8+var_DB], bl
0000000000005529         jmp        loc_4f59

                     loc_552e:
000000000000552e         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_4b10+1664
0000000000005532         mov        rdi, rcx
0000000000005535         call       gettext_quote.part.1                        ; gettext_quote.part.1
000000000000553a         mov        qword [rsp+0xe8+var_80], rax
000000000000553f         jmp        loc_5196

                     loc_5544:
0000000000005544         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_4b10+1707
0000000000005548         mov        rdi, rcx
000000000000554b         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000005550         mov        qword [rsp+0xe8+var_88], rax
0000000000005555         jmp        loc_51c1

                     loc_555a:
000000000000555a         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_49b0+16
000000000000555f         mov        rbp, r11
0000000000005562         mov        eax, edx
0000000000005564         mov        byte [rsp+arg_5], bl
0000000000005568         jmp        sub_4b10+1097
                        ; endp

                     loc_556d:
000000000000556d         sub        rsp, 0x8                                    ; CODE XREF=sub_4b10+98
0000000000005571         mov        r8d, 0x5
0000000000005577         mov        rcx, r11
000000000000557a         push       qword [rsp+0xf0+var_88]
000000000000557e         push       qword [rsp+0xf8+var_80]
0000000000005582         mov        rdi, r14
0000000000005585         push       qword [rsp+0x100+var_C8]
0000000000005589         mov        r9d, dword [rsp+0x108+var_70]
0000000000005591         mov        rdx, qword [rsp+0x108+var_D8]
0000000000005596         mov        rsi, qword [rsp+0x108+var_98]
000000000000559b         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000055a0         add        rsp, 0x20
00000000000055a4         mov        r15, rax
00000000000055a7         jmp        loc_4fa9

                     loc_55ac:
00000000000055ac         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_4b10+121
00000000000055b1         jmp        loc_54cc

                     loc_55b6:
00000000000055b6         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_4b10+63
00000000000055be         jmp        loc_4f59

                     loc_55c3:
00000000000055c3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_4b10+1197
                        ; endp

                     loc_55c8:
00000000000055c8         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_4b10+2346
00000000000055cd         jmp        loc_5041

                     loc_55d2:
00000000000055d2         mov        rbp, r11                                    ; CODE XREF=sub_4b10+2264
00000000000055d5         jmp        sub_4b10+1120
                        ; endp

                     loc_55da:
00000000000055da         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_4b10+1332
00000000000055df         xor        eax, eax
00000000000055e1         xor        r12d, r12d
00000000000055e4         mov        qword [rsp+0xe8+var_98], 0x0
00000000000055ed         jmp        loc_4b94

                     loc_55f2:
00000000000055f2         mov        rdx, r13                                    ; CODE XREF=sub_4b10+1264
00000000000055f5         mov        r13, qword [rsp+arg_48]
00000000000055fa         jmp        loc_4bf2

                     loc_55ff:
00000000000055ff         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
0000000000005604         align      16                                          ; End of unwind block (FDE at 0x8a20)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
0000000000005610         push       r15                                         ; Begin of unwind block (FDE at 0x8a98), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
0000000000005612         push       r14
0000000000005614         movsxd     r15, edi
0000000000005617         push       r13
0000000000005619         push       r12
000000000000561b         mov        r14, rdx
000000000000561e         push       rbp
000000000000561f         push       rbx
0000000000005620         mov        rbp, rcx
0000000000005623         sub        rsp, 0x28
0000000000005627         mov        qword [rsp+0x58+var_50], rsi
000000000000562c         call       j___errno_location                          ; __errno_location
0000000000005631         mov        r13, rax
0000000000005634         mov        eax, dword [rax]
0000000000005636         test       r15d, r15d
0000000000005639         mov        rbx, qword [slotvec]                        ; slotvec
0000000000005640         mov        dword [rsp+0x58+var_40], eax
0000000000005644         js         loc_57b1

000000000000564a         cmp        dword [nslots], r15d                        ; nslots
0000000000005651         jg         loc_56b5

0000000000005653         cmp        r15d, 0x7fffffff
000000000000565a         je         loc_57b6

0000000000005660         lea        r12d, dword [r15+1]
0000000000005664         lea        rax, qword [slotvec0]                       ; slotvec0
000000000000566b         movsxd     rsi, r12d
000000000000566e         shl        rsi, 0x4
0000000000005672         cmp        rbx, rax
0000000000005675         je         loc_5790

000000000000567b         mov        rdi, rbx                                    ; argument #1 for method xrealloc
000000000000567e         call       xrealloc                                    ; xrealloc
0000000000005683         mov        rbx, rax
0000000000005686         mov        qword [slotvec], rax                        ; slotvec

                     loc_568d:
000000000000568d         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
0000000000005694         mov        edx, r12d
0000000000005697         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000005699         sub        edx, edi
000000000000569b         shl        rdi, 0x4
000000000000569f         movsxd     rdx, edx
00000000000056a2         add        rdi, rbx                                    ; argument "__s" for method j_memset
00000000000056a5         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
00000000000056a9         call       j_memset                                    ; memset
00000000000056ae         mov        dword [nslots], r12d                        ; nslots

                     loc_56b5:
00000000000056b5         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
00000000000056b8         shl        r15, 0x4
00000000000056bc         sub        rsp, 0x8
00000000000056c0         add        rbx, r15
00000000000056c3         lea        r15, qword [rbp+8]
00000000000056c7         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
00000000000056cb         mov        r11, qword [rbx]
00000000000056ce         mov        r12, qword [rbx+8]
00000000000056d2         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
00000000000056d5         or         eax, 0x1
00000000000056d8         mov        dword [rsp+0x60+var_3C], eax
00000000000056dc         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
00000000000056df         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
00000000000056e2         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
00000000000056e5         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
00000000000056e7         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
00000000000056ea         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
00000000000056ef         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
00000000000056f2         mov        qword [rsp+0x78+var_48], r11
00000000000056f7         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000056fc         add        rsp, 0x20
0000000000005700         mov        r11, qword [rsp+0x58+var_48]
0000000000005705         cmp        r11, rax
0000000000005708         ja         loc_5771

000000000000570a         lea        rsi, qword [rax+1]
000000000000570e         lea        rax, qword [slot0]                          ; slot0
0000000000005715         cmp        r12, rax
0000000000005718         mov        qword [rbx], rsi
000000000000571b         je         loc_572f

000000000000571d         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000005720         mov        qword [rsp+0x58+var_48], rsi
0000000000005725         call       j_free                                      ; free
000000000000572a         mov        rsi, qword [rsp+0x58+var_48]

                     loc_572f:
000000000000572f         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
0000000000005732         mov        qword [rsp+0x58+var_48], rsi
0000000000005737         call       xmalloc                                     ; xmalloc
000000000000573c         sub        rsp, 0x8
0000000000005740         mov        qword [rbx+8], rax
0000000000005744         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000005748         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
000000000000574b         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
000000000000574e         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000005751         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000005753         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
0000000000005758         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
000000000000575b         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000005760         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
0000000000005765         mov        r12, rax
0000000000005768         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000576d         add        rsp, 0x20

                     loc_5771:
0000000000005771         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
0000000000005775         mov        dword [r13], eax
0000000000005779         add        rsp, 0x28
000000000000577d         mov        rax, r12
0000000000005780         pop        rbx
0000000000005781         pop        rbp
0000000000005782         pop        r12
0000000000005784         pop        r13
0000000000005786         pop        r14
0000000000005788         pop        r15
000000000000578a         ret
                        ; endp
000000000000578b         align      16

                     loc_5790:
0000000000005790         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
0000000000005792         call       xrealloc                                    ; xrealloc
0000000000005797         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
000000000000579f         mov        rbx, rax
00000000000057a2         mov        qword [slotvec], rax                        ; slotvec
00000000000057a9         movups     xmmword [rax], xmm0
00000000000057ac         jmp        loc_568d

                     loc_57b1:
00000000000057b1         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_57b6:
00000000000057b6         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_57bb:
00000000000057bb         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x8a98)
                     clone_quoting_options:
00000000000057c0         push       r12                                         ; Begin of unwind block (FDE at 0x8b04)
00000000000057c2         push       rbp
00000000000057c3         push       rbx
00000000000057c4         mov        rbx, rdi
00000000000057c7         call       j___errno_location                          ; __errno_location
00000000000057cc         mov        r12d, dword [rax]
00000000000057cf         mov        rbp, rax
00000000000057d2         lea        rax, qword [default_quoting_options]        ; default_quoting_options
00000000000057d9         test       rbx, rbx
00000000000057dc         mov        esi, 0x38                                   ; argument #2 for method xmemdup
00000000000057e1         cmove      rbx, rax
00000000000057e5         mov        rdi, rbx                                    ; argument #1 for method xmemdup
00000000000057e8         call       xmemdup                                     ; xmemdup
00000000000057ed         mov        dword [rbp], r12d
00000000000057f1         pop        rbx
00000000000057f2         pop        rbp
00000000000057f3         pop        r12
00000000000057f5         ret
                        ; endp
00000000000057f6         align      2048                                        ; End of unwind block (FDE at 0x8b04)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
0000000000005800         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8b30), default_quoting_options
0000000000005807         test       rdi, rdi
000000000000580a         cmove      rdi, rax
000000000000580e         mov        eax, dword [rdi]
0000000000005810         ret
                        ; endp
0000000000005811         align      32                                          ; End of unwind block (FDE at 0x8b30)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
0000000000005820         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8b44), default_quoting_options
0000000000005827         test       rdi, rdi
000000000000582a         cmove      rdi, rax
000000000000582e         mov        dword [rdi], esi
0000000000005830         ret
                        ; endp
0000000000005831         align      64                                          ; End of unwind block (FDE at 0x8b44)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
0000000000005840         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8b58), default_quoting_options
0000000000005847         test       rdi, rdi
000000000000584a         mov        ecx, esi
000000000000584c         cmove      rdi, rax
0000000000005850         mov        eax, esi
0000000000005852         and        ecx, 0x1f
0000000000005855         shr        al, 0x5
0000000000005858         movzx      eax, al
000000000000585b         lea        rdi, qword [rdi+rax*4+8]
0000000000005860         mov        esi, dword [rdi]
0000000000005862         mov        eax, esi
0000000000005864         shr        eax, cl
0000000000005866         xor        edx, eax
0000000000005868         and        eax, 0x1
000000000000586b         and        edx, 0x1
000000000000586e         shl        edx, cl
0000000000005870         xor        edx, esi
0000000000005872         mov        dword [rdi], edx
0000000000005874         ret
                        ; endp
0000000000005875         align      128                                         ; End of unwind block (FDE at 0x8b58)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
0000000000005880         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8b6c), default_quoting_options
0000000000005887         test       rdi, rdi
000000000000588a         cmove      rdi, rax
000000000000588e         mov        eax, dword [rdi+4]
0000000000005891         mov        dword [rdi+4], esi
0000000000005894         ret
                        ; endp
0000000000005895         align      32                                          ; End of unwind block (FDE at 0x8b6c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
00000000000058a0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8b80), default_quoting_options
00000000000058a7         test       rdi, rdi
00000000000058aa         cmove      rdi, rax
00000000000058ae         test       rsi, rsi
00000000000058b1         mov        dword [rdi], 0xa
00000000000058b7         je         loc_58c7

00000000000058b9         test       rdx, rdx
00000000000058bc         je         loc_58c7

00000000000058be         mov        qword [rdi+0x28], rsi
00000000000058c2         mov        qword [rdi+0x30], rdx
00000000000058c6         ret
                        ; endp

                     loc_58c7:
00000000000058c7         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
00000000000058cb         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
00000000000058d0         push       r15                                         ; End of unwind block (FDE at 0x8b80), Begin of unwind block (FDE at 0x8b94)
00000000000058d2         push       r14
00000000000058d4         lea        rax, qword [default_quoting_options]        ; default_quoting_options
00000000000058db         push       r13
00000000000058dd         push       r12
00000000000058df         mov        r13, rdi
00000000000058e2         push       rbp
00000000000058e3         push       rbx
00000000000058e4         mov        rbx, r8
00000000000058e7         mov        r14, rsi
00000000000058ea         mov        r15, rdx
00000000000058ed         sub        rsp, 0x18
00000000000058f1         test       r8, r8
00000000000058f4         cmove      rbx, rax
00000000000058f8         mov        qword [rsp+0x48+var_40], rcx
00000000000058fd         call       j___errno_location                          ; __errno_location
0000000000005902         mov        r12d, dword [rax]
0000000000005905         mov        rbp, rax
0000000000005908         lea        rax, qword [rbx+8]
000000000000590c         sub        rsp, 0x8
0000000000005910         mov        r9d, dword [rbx+4]
0000000000005914         push       qword [rbx+0x30]
0000000000005917         mov        r8d, dword [rbx]
000000000000591a         push       qword [rbx+0x28]
000000000000591d         mov        rdx, r15
0000000000005920         push       rax
0000000000005921         mov        rcx, qword [rsp+0x68+var_40]
0000000000005926         mov        rsi, r14
0000000000005929         mov        rdi, r13
000000000000592c         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000005931         mov        dword [rbp], r12d
0000000000005935         add        rsp, 0x38
0000000000005939         pop        rbx
000000000000593a         pop        rbp
000000000000593b         pop        r12
000000000000593d         pop        r13
000000000000593f         pop        r14
0000000000005941         pop        r15
0000000000005943         ret
                        ; endp
0000000000005944         align      16                                          ; End of unwind block (FDE at 0x8b94)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
0000000000005950         push       r15                                         ; Begin of unwind block (FDE at 0x8be8), CODE XREF=quotearg_alloc+5
0000000000005952         push       r14
0000000000005954         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000595b         push       r13
000000000000595d         push       r12
000000000000595f         mov        r12, rdx
0000000000005962         push       rbp
0000000000005963         push       rbx
0000000000005964         mov        rbx, rcx
0000000000005967         mov        r14, rdi
000000000000596a         mov        r15, rsi
000000000000596d         sub        rsp, 0x38
0000000000005971         test       rcx, rcx
0000000000005974         cmove      rbx, rax
0000000000005978         xor        ebp, ebp
000000000000597a         call       j___errno_location                          ; __errno_location
000000000000597f         test       r12, r12
0000000000005982         mov        r13, rax
0000000000005985         mov        eax, dword [rax]
0000000000005987         sete       bpl
000000000000598b         or         ebp, dword [rbx+4]
000000000000598e         lea        r10, qword [rbx+8]
0000000000005992         sub        rsp, 0x8
0000000000005996         mov        r8d, dword [rbx]
0000000000005999         mov        rcx, r15
000000000000599c         mov        dword [rsp+0x70+var_5C], eax
00000000000059a0         push       qword [rbx+0x30]
00000000000059a3         mov        rdx, r14
00000000000059a6         push       qword [rbx+0x28]
00000000000059a9         push       r10
00000000000059ab         xor        esi, esi
00000000000059ad         mov        r9d, ebp
00000000000059b0         xor        edi, edi
00000000000059b2         mov        qword [rsp+0x88+var_48], r10
00000000000059b7         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000059bc         lea        rsi, qword [rax+1]
00000000000059c0         mov        qword [rsp+0x88+var_40], rax
00000000000059c5         add        rsp, 0x20
00000000000059c9         mov        rdi, rsi
00000000000059cc         mov        qword [rsp+0x68+var_50], rsi
00000000000059d1         call       xmalloc                                     ; xmalloc
00000000000059d6         mov        qword [rsp+0x68+var_58], rax
00000000000059db         sub        rsp, 0x8
00000000000059df         push       qword [rbx+0x30]
00000000000059e2         push       qword [rbx+0x28]
00000000000059e5         mov        r10, qword [rsp+0x80+var_48]
00000000000059ea         mov        r9d, ebp
00000000000059ed         mov        r8d, dword [rbx]
00000000000059f0         mov        rcx, r15
00000000000059f3         mov        rdx, r14
00000000000059f6         mov        rdi, rax
00000000000059f9         push       r10
00000000000059fb         mov        rsi, qword [rsp+0x88+var_50]
0000000000005a00         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000005a05         mov        eax, dword [rsp+0x88+var_5C]
0000000000005a09         add        rsp, 0x20
0000000000005a0d         test       r12, r12
0000000000005a10         mov        dword [r13], eax
0000000000005a14         je         loc_5a1f

0000000000005a16         mov        r11, qword [rsp+0x68+var_40]
0000000000005a1b         mov        qword [r12], r11

                     loc_5a1f:
0000000000005a1f         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
0000000000005a24         add        rsp, 0x38
0000000000005a28         pop        rbx
0000000000005a29         pop        rbp
0000000000005a2a         pop        r12
0000000000005a2c         pop        r13
0000000000005a2e         pop        r14
0000000000005a30         pop        r15
0000000000005a32         ret
                        ; endp
0000000000005a33         align      64                                          ; End of unwind block (FDE at 0x8be8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
0000000000005a40         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x8c54)
0000000000005a43         xor        edx, edx
0000000000005a45         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
0000000000005a4a         align      16                                          ; End of unwind block (FDE at 0x8c54)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
0000000000005a50         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0x8c68), nslots
0000000000005a56         push       r12
0000000000005a58         mov        r12, qword [slotvec]                        ; slotvec
0000000000005a5f         push       rbp
0000000000005a60         push       rbx
0000000000005a61         cmp        eax, 0x1
0000000000005a64         jle        loc_5a91

0000000000005a66         sub        eax, 0x2
0000000000005a69         lea        rbx, qword [r12+0x18]
0000000000005a6e         shl        rax, 0x4
0000000000005a72         lea        rbp, qword [r12+rax+0x28]
0000000000005a77         nop        word [rax+rax]

                     loc_5a80:
0000000000005a80         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
0000000000005a83         add        rbx, 0x10
0000000000005a87         call       j_free                                      ; free
0000000000005a8c         cmp        rbx, rbp
0000000000005a8f         jne        loc_5a80

                     loc_5a91:
0000000000005a91         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
0000000000005a96         lea        rbx, qword [slot0]                          ; slot0
0000000000005a9d         cmp        rdi, rbx
0000000000005aa0         je         loc_5ab9

0000000000005aa2         call       j_free                                      ; free
0000000000005aa7         mov        qword [slotvec0], 0x100                     ; slotvec0
0000000000005ab2         mov        qword [slotvec0+8], rbx                     ; 0x20a098

                     loc_5ab9:
0000000000005ab9         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
0000000000005ac0         cmp        r12, rbx
0000000000005ac3         je         loc_5ad4

0000000000005ac5         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000005ac8         call       j_free                                      ; free
0000000000005acd         mov        qword [slotvec], rbx                        ; slotvec

                     loc_5ad4:
0000000000005ad4         pop        rbx                                         ; CODE XREF=quotearg_free+115
0000000000005ad5         mov        dword [nslots], 0x1                         ; nslots
0000000000005adf         pop        rbp
0000000000005ae0         pop        r12
0000000000005ae2         ret
                        ; endp
0000000000005ae3         align      16                                          ; End of unwind block (FDE at 0x8c68)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
0000000000005af0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8c94), default_quoting_options
0000000000005af7         mov        rdx, 0xffffffffffffffff
0000000000005afe         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005b03         align      16                                          ; End of unwind block (FDE at 0x8c94)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
0000000000005b10         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8ca8), default_quoting_options
0000000000005b17         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005b1c         align      32                                          ; End of unwind block (FDE at 0x8ca8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
0000000000005b20         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8cbc), default_quoting_options
0000000000005b27         mov        rsi, rdi
0000000000005b2a         mov        rdx, 0xffffffffffffffff
0000000000005b31         xor        edi, edi
0000000000005b33         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005b38         align      64                                          ; End of unwind block (FDE at 0x8cbc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
0000000000005b40         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8cd0), default_quoting_options
0000000000005b47         mov        rdx, rsi
0000000000005b4a         mov        rsi, rdi
0000000000005b4d         xor        edi, edi
0000000000005b4f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005b54         align      32                                          ; End of unwind block (FDE at 0x8cd0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
0000000000005b60         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x8ce4)
0000000000005b64         mov        rax, rdx
0000000000005b67         mov        rdx, qword [fs:0x28]
0000000000005b70         mov        qword [rsp+0x48+var_10], rdx
0000000000005b75         xor        edx, edx
0000000000005b77         cmp        esi, 0xa
0000000000005b7a         je         loc_5be4

0000000000005b7c         mov        dword [rsp+0x48+var_48], esi
0000000000005b7f         mov        rcx, rsp
0000000000005b82         mov        rdx, 0xffffffffffffffff
0000000000005b89         mov        rsi, rax
0000000000005b8c         mov        qword [rsp+0x48+var_44], 0x0
0000000000005b95         mov        qword [rsp+0x48+var_3C], 0x0
0000000000005b9e         mov        qword [rsp+0x48+var_34], 0x0
0000000000005ba7         mov        qword [rsp+0x48+var_2C], 0x0
0000000000005bb0         mov        qword [rsp+0x48+var_24], 0x0
0000000000005bb9         mov        qword [rsp+0x48+var_1C], 0x0
0000000000005bc2         mov        dword [rsp+0x48+var_14], 0x0
0000000000005bca         call       quotearg_n_options                          ; quotearg_n_options
0000000000005bcf         mov        rcx, qword [rsp+0x48+var_10]
0000000000005bd4         xor        rcx, qword [fs:0x28]
0000000000005bdd         jne        loc_5be9

0000000000005bdf         add        rsp, 0x48
0000000000005be3         ret
                        ; endp

                     loc_5be4:
0000000000005be4         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_5be9:
0000000000005be9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
0000000000005bee         align      16                                          ; End of unwind block (FDE at 0x8ce4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
0000000000005bf0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x8d00), CODE XREF=quotearg_style_mem+10
0000000000005bf4         mov        rax, rdx
0000000000005bf7         mov        rdx, rcx
0000000000005bfa         mov        rcx, qword [fs:0x28]
0000000000005c03         mov        qword [rsp+0x48+var_10], rcx
0000000000005c08         xor        ecx, ecx
0000000000005c0a         cmp        esi, 0xa
0000000000005c0d         je         loc_5c70

0000000000005c0f         mov        dword [rsp+0x48+var_48], esi
0000000000005c12         mov        rcx, rsp
0000000000005c15         mov        rsi, rax
0000000000005c18         mov        qword [rsp+0x48+var_44], 0x0
0000000000005c21         mov        qword [rsp+0x48+var_3C], 0x0
0000000000005c2a         mov        qword [rsp+0x48+var_34], 0x0
0000000000005c33         mov        qword [rsp+0x48+var_2C], 0x0
0000000000005c3c         mov        qword [rsp+0x48+var_24], 0x0
0000000000005c45         mov        qword [rsp+0x48+var_1C], 0x0
0000000000005c4e         mov        dword [rsp+0x48+var_14], 0x0
0000000000005c56         call       quotearg_n_options                          ; quotearg_n_options
0000000000005c5b         mov        rdx, qword [rsp+0x48+var_10]
0000000000005c60         xor        rdx, qword [fs:0x28]
0000000000005c69         jne        loc_5c75

0000000000005c6b         add        rsp, 0x48
0000000000005c6f         ret
                        ; endp

                     loc_5c70:
0000000000005c70         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_5c75:
0000000000005c75         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
0000000000005c7a         align      128                                         ; End of unwind block (FDE at 0x8d00)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
0000000000005c80         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x8d1c)
0000000000005c83         mov        esi, edi
0000000000005c85         xor        edi, edi
0000000000005c87         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
0000000000005c8c         align      16                                          ; End of unwind block (FDE at 0x8d1c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
0000000000005c90         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x8d30)
0000000000005c93         mov        rdx, rsi
0000000000005c96         mov        esi, edi
0000000000005c98         xor        edi, edi
0000000000005c9a         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
0000000000005c9f         align      32                                          ; End of unwind block (FDE at 0x8d30)

                     quotearg_char_mem:
0000000000005ca0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x8d44), CODE XREF=quotearg_char+11
0000000000005ca4         mov        ecx, edx
0000000000005ca6         mov        rax, qword [fs:0x28]
0000000000005caf         mov        qword [rsp+0x48+var_10], rax
0000000000005cb4         xor        eax, eax
0000000000005cb6         mov        rax, qword [qword_20a270]                   ; qword_20a270
0000000000005cbd         mov        r8, rsp
0000000000005cc0         and        ecx, 0x1f
0000000000005cc3         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000005ccb         mov        qword [rsp+0x48+var_18], rax
0000000000005cd0         mov        eax, edx
0000000000005cd2         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000005cd6         shr        al, 0x5
0000000000005cd9         movzx      eax, al
0000000000005cdc         lea        r9, qword [r8+rax*4+8]
0000000000005ce1         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20a250
0000000000005ce9         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000005cee         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20a260
0000000000005cf6         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000005cfb         mov        edx, dword [r9]
0000000000005cfe         mov        eax, edx
0000000000005d00         shr        eax, cl
0000000000005d02         not        eax
0000000000005d04         and        eax, 0x1
0000000000005d07         shl        eax, cl
0000000000005d09         mov        rcx, r8
0000000000005d0c         xor        eax, edx
0000000000005d0e         mov        rdx, rsi
0000000000005d11         mov        rsi, rdi
0000000000005d14         mov        dword [r9], eax
0000000000005d17         xor        edi, edi
0000000000005d19         call       quotearg_n_options                          ; quotearg_n_options
0000000000005d1e         mov        rsi, qword [rsp+0x48+var_10]
0000000000005d23         xor        rsi, qword [fs:0x28]
0000000000005d2c         jne        loc_5d33

0000000000005d2e         add        rsp, 0x48
0000000000005d32         ret
                        ; endp

                     loc_5d33:
0000000000005d33         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
0000000000005d38         align      64                                          ; End of unwind block (FDE at 0x8d44)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
0000000000005d40         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0x8d60)
0000000000005d44         mov        rsi, 0xffffffffffffffff
0000000000005d4b         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
0000000000005d50         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0x8d60), Begin of unwind block (FDE at 0x8d74), CODE XREF=close_stdout+101
0000000000005d55         mov        rsi, 0xffffffffffffffff
0000000000005d5c         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000005d61         align      16                                          ; End of unwind block (FDE at 0x8d74)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
0000000000005d70         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0x8d88)
0000000000005d75         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000005d7a         align      128                                         ; End of unwind block (FDE at 0x8d88)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
0000000000005d80         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x8d9c), CODE XREF=main+1398, main+2268, main+2878, main+3194, main+3409, main+4099, digest_file.isra.1+122, digest_file.isra.1+276, digest_file.isra.1+356
0000000000005d84         mov        rax, rdx
0000000000005d87         mov        rdx, qword [fs:0x28]
0000000000005d90         mov        qword [rsp+0x48+var_10], rdx
0000000000005d95         xor        edx, edx
0000000000005d97         cmp        esi, 0xa
0000000000005d9a         je         loc_5e04

0000000000005d9c         mov        dword [rsp+0x48+var_48], esi
0000000000005d9f         mov        rcx, rsp
0000000000005da2         mov        rdx, 0xffffffffffffffff
0000000000005da9         mov        rsi, rax
0000000000005dac         mov        qword [rsp+0x48+var_44], 0x0
0000000000005db5         mov        qword [rsp+0x48+var_3C], 0x4000000
0000000000005dbe         mov        qword [rsp+0x48+var_34], 0x0
0000000000005dc7         mov        qword [rsp+0x48+var_2C], 0x0
0000000000005dd0         mov        qword [rsp+0x48+var_24], 0x0
0000000000005dd9         mov        qword [rsp+0x48+var_1C], 0x0
0000000000005de2         mov        dword [rsp+0x48+var_14], 0x0
0000000000005dea         call       quotearg_n_options                          ; quotearg_n_options
0000000000005def         mov        rcx, qword [rsp+0x48+var_10]
0000000000005df4         xor        rcx, qword [fs:0x28]
0000000000005dfd         jne        loc_5e09

0000000000005dff         add        rsp, 0x48
0000000000005e03         ret
                        ; endp

                     loc_5e04:
0000000000005e04         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_5e09:
0000000000005e09         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
0000000000005e0e         align      16                                          ; End of unwind block (FDE at 0x8d9c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom_mem:
0000000000005e10         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x8db8), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
0000000000005e14         mov        r9, rcx
0000000000005e17         mov        rcx, qword [qword_20a270]                   ; qword_20a270
0000000000005e1e         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000005e26         mov        rax, qword [fs:0x28]
0000000000005e2f         mov        qword [rsp+0x48+var_10], rax
0000000000005e34         xor        eax, eax
0000000000005e36         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000005e3a         test       rsi, rsi
0000000000005e3d         mov        qword [rsp+0x48+var_18], rcx
0000000000005e42         mov        dword [rsp+0x48+var_48], 0xa
0000000000005e49         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20a250
0000000000005e51         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000005e56         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20a260
0000000000005e5e         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000005e63         je         loc_5e97

0000000000005e65         test       rdx, rdx
0000000000005e68         je         loc_5e97

0000000000005e6a         mov        qword [rsp+0x48+var_20], rsi
0000000000005e6f         mov        qword [rsp+0x48+var_18], rdx
0000000000005e74         mov        rcx, rsp
0000000000005e77         mov        rdx, r8
0000000000005e7a         mov        rsi, r9
0000000000005e7d         call       quotearg_n_options                          ; quotearg_n_options
0000000000005e82         mov        rdi, qword [rsp+0x48+var_10]
0000000000005e87         xor        rdi, qword [fs:0x28]
0000000000005e90         jne        loc_5e9c

0000000000005e92         add        rsp, 0x48
0000000000005e96         ret
                        ; endp

                     loc_5e97:
0000000000005e97         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_5e9c:
0000000000005e9c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
0000000000005ea1         align      16                                          ; End of unwind block (FDE at 0x8db8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_custom:
0000000000005eb0         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0x8dd4)
0000000000005eb7         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000005ebc         align      64                                          ; End of unwind block (FDE at 0x8dd4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
0000000000005ec0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x8de8)
0000000000005ec3         mov        r8, 0xffffffffffffffff
0000000000005eca         mov        rdx, rsi
0000000000005ecd         mov        rsi, rdi
0000000000005ed0         xor        edi, edi
0000000000005ed2         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000005ed7         align      32                                          ; End of unwind block (FDE at 0x8de8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
0000000000005ee0         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0x8dfc)
0000000000005ee3         mov        rcx, rdx
0000000000005ee6         mov        rdx, rsi
0000000000005ee9         mov        rsi, rdi
0000000000005eec         xor        edi, edi
0000000000005eee         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000005ef3         align      256                                         ; End of unwind block (FDE at 0x8dfc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
0000000000005f00         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x8e10), quote_quoting_options
0000000000005f07         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005f0c         align      16                                          ; End of unwind block (FDE at 0x8e10)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
0000000000005f10         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x8e24), quote_quoting_options
0000000000005f17         mov        rdx, rsi
0000000000005f1a         mov        rsi, rdi
0000000000005f1d         xor        edi, edi
0000000000005f1f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005f24         align      16                                          ; End of unwind block (FDE at 0x8e24)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
0000000000005f30         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x8e38), quote_quoting_options
0000000000005f37         mov        rdx, 0xffffffffffffffff
0000000000005f3e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005f43         align      16                                          ; End of unwind block (FDE at 0x8e38)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
0000000000005f50         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x8e4c), quote_quoting_options
0000000000005f57         mov        rsi, rdi
0000000000005f5a         mov        rdx, 0xffffffffffffffff
0000000000005f61         xor        edi, edi
0000000000005f63         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005f68         align      16                                          ; End of unwind block (FDE at 0x8e4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int32_t, -104


                     dup_safer:
0000000000005f70         mov        edx, 0x3                                    ; Begin of unwind block (FDE at 0x8e64), CODE XREF=fopen_safer+50
0000000000005f75         xor        esi, esi
0000000000005f77         xor        eax, eax
0000000000005f79         jmp        rpl_fcntl                                   ; rpl_fcntl
0000000000005f7e         align      128                                         ; End of unwind block (FDE at 0x8e64)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
0000000000005f80         push       r15                                         ; Begin of unwind block (FDE at 0x8e7c), CODE XREF=j_version_etc_arn, version_etc_va+75, version_etc+161
0000000000005f82         push       r14
0000000000005f84         push       r13
0000000000005f86         push       r12
0000000000005f88         mov        r12, r9
0000000000005f8b         push       rbp
0000000000005f8c         push       rbx
0000000000005f8d         mov        rbp, rdi
0000000000005f90         mov        rbx, r8
0000000000005f93         sub        rsp, 0x28
0000000000005f97         test       rsi, rsi
0000000000005f9a         je         loc_60b8

0000000000005fa0         mov        r8, rdx
0000000000005fa3         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
0000000000005faa         mov        r9, rcx
0000000000005fad         xor        eax, eax
0000000000005faf         mov        rcx, rsi
0000000000005fb2         mov        esi, 0x1
0000000000005fb7         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_5fbc:
0000000000005fbc         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0x7f7b, CODE XREF=version_etc_arn+337
0000000000005fc3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005fc5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005fca         call       j_dcgettext                                 ; dcgettext
0000000000005fcf         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000005fd6         mov        rcx, rax
0000000000005fd9         mov        r8d, 0x7e3
0000000000005fdf         mov        esi, 0x1
0000000000005fe4         mov        rdi, rbp
0000000000005fe7         xor        eax, eax
0000000000005fe9         call       j___fprintf_chk                             ; __fprintf_chk
0000000000005fee         lea        rsi, qword [aSHomePageSn+27]                ; argument "msgid" for method j_dcgettext, 0x8008
0000000000005ff5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005ff7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005ffc         call       j_dcgettext                                 ; dcgettext
0000000000006001         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
0000000000006004         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000006007         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000600c         cmp        r12, 0x9
0000000000006010         ja         loc_6350

0000000000006016         lea        rdx, qword [switch_table_8268]              ; switch_table_8268
000000000000601d         movsxd     rax, dword [rdx+r12*4]
0000000000006021         add        rax, rdx
0000000000006024         jmp        rax                                         ; switch statement using table at 0x8268, with 10 cases, 0x6030,0x60a6,0x60e0,0x6138,0x6178,0x61c0,0x6210,0x6268,0x6298,0x6300
0000000000006026         align      16

                     loc_6030:
0000000000006030         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
0000000000006034         mov        rax, qword [rbx+0x10]
0000000000006038         lea        rsi, qword [aWrittenBySSSns_8178]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
000000000000603f         mov        r8, qword [rbx+8]
0000000000006043         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006048         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000604a         mov        r13, qword [rbx+0x30]
000000000000604e         mov        r12, qword [rbx+0x28]
0000000000006052         mov        qword [rsp+0x58+var_48], r9
0000000000006057         mov        r15, qword [rbx+0x20]
000000000000605b         mov        r14, qword [rbx+0x18]
000000000000605f         mov        qword [rsp+0x58+var_58], rax
0000000000006063         mov        qword [rsp+0x58+var_50], r8
0000000000006068         mov        rbx, qword [rbx]
000000000000606b         call       j_dcgettext                                 ; dcgettext
0000000000006070         sub        rsp, 0x8

                     loc_6074:
0000000000006074         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
0000000000006079         mov        rdx, rax
000000000000607c         mov        rcx, rbx
000000000000607f         mov        esi, 0x1
0000000000006084         mov        rdi, rbp
0000000000006087         xor        eax, eax
0000000000006089         push       r9
000000000000608b         push       r13
000000000000608d         push       r12
000000000000608f         push       r15
0000000000006091         push       r14
0000000000006093         mov        r9, qword [rsp+0x88+var_58]
0000000000006098         mov        r8, qword [rsp+0x88+var_50]
000000000000609d         call       j___fprintf_chk                             ; __fprintf_chk
00000000000060a2         add        rsp, 0x30

                     loc_60a6:
00000000000060a6         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
00000000000060aa         pop        rbx
00000000000060ab         pop        rbp
00000000000060ac         pop        r12
00000000000060ae         pop        r13
00000000000060b0         pop        r14
00000000000060b2         pop        r15
00000000000060b4         ret
                        ; endp
00000000000060b5         align      8

                     loc_60b8:
00000000000060b8         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
00000000000060bb         mov        rcx, rdx
00000000000060be         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
00000000000060c5         mov        esi, 0x1
00000000000060ca         xor        eax, eax
00000000000060cc         call       j___fprintf_chk                             ; __fprintf_chk
00000000000060d1         jmp        loc_5fbc
00000000000060d6         align      32

                     loc_60e0:
00000000000060e0         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
00000000000060e4         mov        r9, qword [rbx+0x38]
00000000000060e8         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
00000000000060ef         mov        rax, qword [rbx+0x10]
00000000000060f3         mov        r8, qword [rbx+8]
00000000000060f7         mov        edx, 0x5
00000000000060fc         mov        r13, qword [rbx+0x30]
0000000000006100         mov        r12, qword [rbx+0x28]
0000000000006104         mov        r15, qword [rbx+0x20]
0000000000006108         mov        r14, qword [rbx+0x18]
000000000000610c         mov        rbx, qword [rbx]
000000000000610f         mov        qword [rsp+0x58+var_40], r10
0000000000006114         mov        qword [rsp+0x58+var_48], r9
0000000000006119         mov        qword [rsp+0x58+var_58], rax
000000000000611d         mov        qword [rsp+0x58+var_50], r8

                     loc_6122:
0000000000006122         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
0000000000006124         call       j_dcgettext                                 ; dcgettext
0000000000006129         mov        r10, qword [rsp+0x58+var_40]
000000000000612e         push       r10
0000000000006130         jmp        loc_6074
0000000000006135         align      8

                     loc_6138:
0000000000006138         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
000000000000613b         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
0000000000006142         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006147         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006149         call       j_dcgettext                                 ; dcgettext
000000000000614e         add        rsp, 0x28
0000000000006152         mov        rcx, rbx
0000000000006155         mov        rdi, rbp
0000000000006158         pop        rbx
0000000000006159         pop        rbp
000000000000615a         pop        r12
000000000000615c         pop        r13
000000000000615e         pop        r14
0000000000006160         pop        r15
0000000000006162         mov        rdx, rax
0000000000006165         mov        esi, 0x1
000000000000616a         xor        eax, eax
000000000000616c         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000006171         align      8

                     loc_6178:
0000000000006178         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
000000000000617c         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
0000000000006183         mov        rbx, qword [rbx]
0000000000006186         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000618b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000618d         call       j_dcgettext                                 ; dcgettext
0000000000006192         add        rsp, 0x28
0000000000006196         mov        r8, r12
0000000000006199         mov        rcx, rbx
000000000000619c         mov        rdi, rbp
000000000000619f         mov        rdx, rax
00000000000061a2         mov        esi, 0x1
00000000000061a7         pop        rbx
00000000000061a8         pop        rbp
00000000000061a9         pop        r12
00000000000061ab         pop        r13
00000000000061ad         pop        r14
00000000000061af         pop        r15
00000000000061b1         xor        eax, eax
00000000000061b3         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
00000000000061b8         align      64

                     loc_61c0:
00000000000061c0         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
00000000000061c4         mov        r12, qword [rbx+8]
00000000000061c8         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
00000000000061cf         mov        rbx, qword [rbx]
00000000000061d2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000061d7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000061d9         call       j_dcgettext                                 ; dcgettext
00000000000061de         add        rsp, 0x28
00000000000061e2         mov        r9, r13
00000000000061e5         mov        r8, r12
00000000000061e8         mov        rcx, rbx
00000000000061eb         mov        rdi, rbp
00000000000061ee         mov        rdx, rax
00000000000061f1         pop        rbx
00000000000061f2         pop        rbp
00000000000061f3         pop        r12
00000000000061f5         pop        r13
00000000000061f7         pop        r14
00000000000061f9         pop        r15
00000000000061fb         mov        esi, 0x1
0000000000006200         xor        eax, eax
0000000000006202         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000006207         align      16

                     loc_6210:
0000000000006210         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
0000000000006217         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000621c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000621e         mov        r14, qword [rbx+0x18]
0000000000006222         mov        r13, qword [rbx+0x10]
0000000000006226         mov        r12, qword [rbx+8]
000000000000622a         mov        rbx, qword [rbx]
000000000000622d         call       j_dcgettext                                 ; dcgettext
0000000000006232         sub        rsp, 0x8

                     loc_6236:
0000000000006236         push       r14                                         ; CODE XREF=version_etc_arn+784
0000000000006238         mov        rdx, rax
000000000000623b         mov        r9, r13
000000000000623e         mov        r8, r12
0000000000006241         mov        rcx, rbx
0000000000006244         mov        rdi, rbp
0000000000006247         mov        esi, 0x1
000000000000624c         xor        eax, eax
000000000000624e         call       j___fprintf_chk                             ; __fprintf_chk
0000000000006253         pop        rax
0000000000006254         pop        rdx
0000000000006255         add        rsp, 0x28
0000000000006259         pop        rbx
000000000000625a         pop        rbp
000000000000625b         pop        r12
000000000000625d         pop        r13
000000000000625f         pop        r14
0000000000006261         pop        r15
0000000000006263         ret
                        ; endp
0000000000006264         align      8

                     loc_6268:
0000000000006268         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
000000000000626c         lea        rsi, qword [aWrittenBySSSns_80f8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
0000000000006273         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006278         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000627a         mov        r14, qword [rbx+0x18]
000000000000627e         mov        r13, qword [rbx+0x10]
0000000000006282         mov        r12, qword [rbx+8]
0000000000006286         mov        rbx, qword [rbx]
0000000000006289         call       j_dcgettext                                 ; dcgettext
000000000000628e         push       r15
0000000000006290         jmp        loc_6236
0000000000006292         align      8

                     loc_6298:
0000000000006298         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
000000000000629c         mov        r12, qword [rbx+0x28]
00000000000062a0         lea        rsi, qword [aWrittenBySSSns_8120]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
00000000000062a7         mov        r15, qword [rbx+0x20]
00000000000062ab         mov        r14, qword [rbx+0x18]
00000000000062af         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000062b4         mov        r13, qword [rbx+0x10]
00000000000062b8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000062ba         mov        rbx, qword [rbx]
00000000000062bd         mov        qword [rsp+0x58+var_58], r8
00000000000062c1         call       j_dcgettext                                 ; dcgettext
00000000000062c6         sub        rsp, 0x8
00000000000062ca         mov        r9, r13
00000000000062cd         push       r12
00000000000062cf         push       r15
00000000000062d1         push       r14

                     loc_62d3:
00000000000062d3         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
00000000000062d8         mov        rcx, rbx
00000000000062db         mov        rdx, rax
00000000000062de         mov        rdi, rbp
00000000000062e1         mov        esi, 0x1
00000000000062e6         xor        eax, eax
00000000000062e8         call       j___fprintf_chk                             ; __fprintf_chk
00000000000062ed         add        rsp, 0x20
00000000000062f1         add        rsp, 0x28
00000000000062f5         pop        rbx
00000000000062f6         pop        rbp
00000000000062f7         pop        r12
00000000000062f9         pop        r13
00000000000062fb         pop        r14
00000000000062fd         pop        r15
00000000000062ff         ret
                        ; endp

                     loc_6300:
0000000000006300         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
0000000000006304         mov        r13, qword [rbx+0x30]
0000000000006308         lea        rsi, qword [aWrittenBySSSns_8148]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
000000000000630f         mov        r12, qword [rbx+0x28]
0000000000006313         mov        r15, qword [rbx+0x20]
0000000000006317         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000631c         mov        r14, qword [rbx+0x18]
0000000000006320         mov        r8, qword [rbx+8]
0000000000006324         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006326         mov        qword [rsp+0x58+var_50], r9
000000000000632b         mov        rbx, qword [rbx]
000000000000632e         mov        qword [rsp+0x58+var_58], r8
0000000000006332         call       j_dcgettext                                 ; dcgettext
0000000000006337         push       r13
0000000000006339         push       r12
000000000000633b         push       r15
000000000000633d         push       r14
000000000000633f         mov        r9, qword [rsp+0x78+var_50]
0000000000006344         jmp        loc_62d3
0000000000006346         align      16

                     loc_6350:
0000000000006350         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
0000000000006354         mov        r9, qword [rbx+0x38]
0000000000006358         mov        edx, 0x5
000000000000635d         mov        rax, qword [rbx+0x10]
0000000000006361         mov        r8, qword [rbx+8]
0000000000006365         lea        rsi, qword [aWrittenBySSSns_81e0]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
000000000000636c         mov        r13, qword [rbx+0x30]
0000000000006370         mov        r12, qword [rbx+0x28]
0000000000006374         mov        r15, qword [rbx+0x20]
0000000000006378         mov        r14, qword [rbx+0x18]
000000000000637c         mov        qword [rsp+0x58+var_40], r10
0000000000006381         mov        qword [rsp+0x58+var_48], r9
0000000000006386         mov        qword [rsp+0x58+var_58], rax
000000000000638a         mov        qword [rsp+0x58+var_50], r8
000000000000638f         mov        rbx, qword [rbx]
0000000000006392         jmp        loc_6122
0000000000006397         align      32                                          ; End of unwind block (FDE at 0x8e7c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
00000000000063a0         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0x8f90)
00000000000063a3         cmp        qword [r8], 0x0
00000000000063a7         je         j_version_etc_arn                           ; version_etc_arn

00000000000063a9         nop        dword [rax]

                     loc_63b0:
00000000000063b0         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
00000000000063b4         cmp        qword [r8+r9*8], 0x0
00000000000063b9         jne        loc_63b0

                     j_version_etc_arn:        // version_etc_arn
00000000000063bb         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
00000000000063c0         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0x8f90), Begin of unwind block (FDE at 0x8fa4)
00000000000063c4         mov        r10, r8
00000000000063c7         xor        r9d, r9d
00000000000063ca         mov        rax, qword [fs:0x28]
00000000000063d3         mov        qword [rsp+0x68+var_10], rax
00000000000063d8         xor        eax, eax
00000000000063da         mov        r8, rsp
00000000000063dd         nop        dword [rax]

                     loc_63e0:
00000000000063e0         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
00000000000063e3         cmp        eax, 0x2f
00000000000063e6         ja         loc_642a

00000000000063e8         mov        r11d, eax
00000000000063eb         add        r11, qword [r10+0x10]
00000000000063ef         add        eax, 0x8
00000000000063f2         mov        dword [r10], eax

                     loc_63f5:
00000000000063f5         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
00000000000063f8         test       rax, rax
00000000000063fb         mov        qword [r8+r9*8], rax
00000000000063ff         je         loc_640b

0000000000006401         add        r9, 0x1
0000000000006405         cmp        r9, 0xa
0000000000006409         jne        loc_63e0

                     loc_640b:
000000000000640b         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
0000000000006410         mov        rax, qword [rsp+0x68+var_10]
0000000000006415         xor        rax, qword [fs:0x28]
000000000000641e         jne        loc_6425

0000000000006420         add        rsp, 0x68
0000000000006424         ret
                        ; endp

                     loc_6425:
0000000000006425         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_642a:
000000000000642a         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
000000000000642e         lea        rax, qword [r11+8]
0000000000006432         mov        qword [r10+8], rax
0000000000006436         jmp        loc_63f5
0000000000006438         align      64                                          ; End of unwind block (FDE at 0x8fa4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
0000000000006440         push       rbp                                         ; Begin of unwind block (FDE at 0x8fc0), CODE XREF=main+401
0000000000006441         push       rbx
0000000000006442         mov        r10d, 0x20
0000000000006448         xor        r11d, r11d
000000000000644b         sub        rsp, 0xb8
0000000000006452         mov        rax, qword [fs:0x28]
000000000000645b         mov        qword [rsp+0xc8+var_50], rax
0000000000006460         xor        eax, eax
0000000000006462         lea        rax, qword [rsp+0xc8+arg_0]
000000000000646a         mov        qword [rsp+0xc8+var_28], r8
0000000000006472         lea        rbx, qword [rsp+0xc8+arg_0]
000000000000647a         lea        r8, qword [rsp+0xc8+var_A8]
000000000000647f         mov        qword [rsp+0xc8+var_20], r9
0000000000006487         mov        dword [rsp+0xc8+var_C0], 0x20
000000000000648f         mov        qword [rsp+0xc8+var_B8], rax
0000000000006494         lea        rax, qword [rsp+0xc8+var_48]
000000000000649c         xor        r9d, r9d
000000000000649f         mov        qword [rsp+0xc8+var_B0], rax
00000000000064a4         mov        rbp, rax
00000000000064a7         nop        word [rax+rax]

                     loc_64b0:
00000000000064b0         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
00000000000064b4         ja         loc_650c

00000000000064b6         mov        eax, r10d
00000000000064b9         mov        r11d, 0x1
00000000000064bf         add        r10d, 0x8
00000000000064c3         add        rax, rbp

                     loc_64c6:
00000000000064c6         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
00000000000064c9         test       rax, rax
00000000000064cc         mov        qword [r8+r9*8], rax
00000000000064d0         je         loc_64dc

00000000000064d2         add        r9, 0x1
00000000000064d6         cmp        r9, 0xa
00000000000064da         jne        loc_64b0

                     loc_64dc:
00000000000064dc         test       r11b, r11b                                  ; CODE XREF=version_etc+144
00000000000064df         jne        loc_6505

                     loc_64e1:
00000000000064e1         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
00000000000064e6         mov        rax, qword [rsp+0xc8+var_50]
00000000000064eb         xor        rax, qword [fs:0x28]
00000000000064f4         jne        loc_6500

00000000000064f6         add        rsp, 0xb8
00000000000064fd         pop        rbx
00000000000064fe         pop        rbp
00000000000064ff         ret
                        ; endp

                     loc_6500:
0000000000006500         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_6505:
0000000000006505         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
000000000000650a         jmp        loc_64e1

                     loc_650c:
000000000000650c         mov        rax, rbx                                    ; CODE XREF=version_etc+116
000000000000650f         add        rbx, 0x8
0000000000006513         jmp        loc_64c6
0000000000006515         align      32                                          ; End of unwind block (FDE at 0x8fc0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
0000000000006520         push       rbx                                         ; Begin of unwind block (FDE at 0x8fec)
0000000000006521         lea        rsi, qword [aWrittenBySSAnd+28]             ; argument "msgid" for method j_dcgettext, 0x7fc2
0000000000006528         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000652d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000652f         call       j_dcgettext                                 ; dcgettext
0000000000006534         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
000000000000653b         mov        rsi, rax
000000000000653e         mov        edi, 0x1
0000000000006543         xor        eax, eax
0000000000006545         call       j___printf_chk                              ; __printf_chk
000000000000654a         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
0000000000006551         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006556         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006558         call       j_dcgettext                                 ; dcgettext
000000000000655d         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000006564         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6eb4
000000000000656b         mov        rsi, rax
000000000000656e         mov        edi, 0x1
0000000000006573         xor        eax, eax
0000000000006575         call       j___printf_chk                              ; __printf_chk
000000000000657a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000006581         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
0000000000006588         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000658a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000658f         call       j_dcgettext                                 ; dcgettext
0000000000006594         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000006597         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000659a         pop        rbx
000000000000659b         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
00000000000065a0         push       rbx                                         ; End of unwind block (FDE at 0x8fec), Begin of unwind block (FDE at 0x900c), CODE XREF=quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15
00000000000065a1         mov        rbx, rdi
00000000000065a4         call       j_malloc                                    ; malloc
00000000000065a9         test       rax, rax
00000000000065ac         jne        loc_65b3

00000000000065ae         test       rbx, rbx
00000000000065b1         jne        loc_65b5

                     loc_65b3:
00000000000065b3         pop        rbx                                         ; CODE XREF=xmalloc+12
00000000000065b4         ret
                        ; endp

                     loc_65b5:
00000000000065b5         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_65ba:
00000000000065ba         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x900c)
                     xnmalloc:
00000000000065c0         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x9028)
00000000000065c3         mul        rsi
00000000000065c6         mov        rdi, rax
00000000000065c9         seto       al
00000000000065cc         test       rdi, rdi
00000000000065cf         js         loc_65db

00000000000065d1         movzx      eax, al
00000000000065d4         test       rax, rax
00000000000065d7         jne        loc_65db

00000000000065d9         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_65db:
00000000000065db         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
00000000000065df         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_65e4:
00000000000065e4         nop                                                    ; End of unwind block (FDE at 0x9028)
00000000000065e6         nop        word [cs:rax+rax]
                     xcharalloc:
00000000000065f0         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0x903c)
                        ; endp
00000000000065f2         align      512                                         ; End of unwind block (FDE at 0x903c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000006600         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x9050), CODE XREF=quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
0000000000006603         push       rbx
0000000000006604         mov        rbx, rsi
0000000000006607         jne        loc_660e

0000000000006609         test       rdi, rdi
000000000000660c         jne        loc_6628

                     loc_660e:
000000000000660e         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000006611         call       j_realloc                                   ; realloc
0000000000006616         test       rax, rax
0000000000006619         jne        loc_6620

000000000000661b         test       rbx, rbx
000000000000661e         jne        loc_6631

                     loc_6620:
0000000000006620         pop        rbx                                         ; CODE XREF=xrealloc+25
0000000000006621         ret
                        ; endp
0000000000006622         align      8

                     loc_6628:
0000000000006628         call       j_free                                      ; free, CODE XREF=xrealloc+12
000000000000662d         xor        eax, eax
000000000000662f         pop        rbx
0000000000006630         ret
                        ; endp

                     loc_6631:
0000000000006631         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6636:
0000000000006636         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x9050)
                     xnrealloc:
0000000000006640         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x9074)
0000000000006643         mul        rdx
0000000000006646         mov        rsi, rax
0000000000006649         seto       al
000000000000664c         test       rsi, rsi
000000000000664f         js         loc_665b

0000000000006651         movzx      eax, al
0000000000006654         test       rax, rax
0000000000006657         jne        loc_665b

0000000000006659         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_665b:
000000000000665b         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
000000000000665f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6664:
0000000000006664         nop                                                    ; End of unwind block (FDE at 0x9074)
0000000000006666         nop        word [cs:rax+rax]
                     x2nrealloc:
0000000000006670         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x9088)
0000000000006673         mov        r9, rdx
0000000000006676         mov        rcx, qword [rsi]
0000000000006679         je         loc_66b0

000000000000667b         xor        edx, edx
000000000000667d         movabs     rax, 0x5555555555555554
0000000000006687         div        r9
000000000000668a         cmp        rax, rcx
000000000000668d         jbe        loc_66cb

000000000000668f         mov        rax, rcx
0000000000006692         shr        rax, 0x1
0000000000006695         lea        rcx, qword [rax+rcx+1]

                     loc_669a:
000000000000669a         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
000000000000669d         imul       rcx, r9                                     ; argument #4 for method xrealloc
00000000000066a1         mov        rsi, rcx                                    ; argument #2 for method xrealloc
00000000000066a4         jmp        xrealloc                                    ; xrealloc
                        ; endp
00000000000066a9         align      16

                     loc_66b0:
00000000000066b0         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
00000000000066b3         je         loc_66d8

                     loc_66b5:
00000000000066b5         mov        rax, rcx                                    ; CODE XREF=sub_66d4+28
00000000000066b8         mul        r9
00000000000066bb         seto       dl
00000000000066be         test       rax, rax
00000000000066c1         movzx      edx, dl
00000000000066c4         js         loc_66cb

00000000000066c6         test       rdx, rdx
00000000000066c9         je         loc_669a

                     loc_66cb:
00000000000066cb         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
00000000000066cf         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_66d4:
00000000000066d4         nop        dword [rax]
                        ; endp

                     loc_66d8:
00000000000066d8         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
00000000000066da         mov        eax, 0x80
00000000000066df         xor        r8d, r8d
00000000000066e2         div        r9
00000000000066e5         test       rax, rax
00000000000066e8         sete       r8b
00000000000066ec         lea        rcx, qword [r8+rax]
00000000000066f0         jmp        loc_66b5
00000000000066f2         align      256                                         ; End of unwind block (FDE at 0x9088)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000006700         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x90a0)
0000000000006703         mov        rax, qword [rsi]
0000000000006706         je         loc_6730

0000000000006708         movabs     rdx, 0x5555555555555553
0000000000006712         cmp        rax, rdx
0000000000006715         ja         loc_6741

0000000000006717         mov        rdx, rax
000000000000671a         shr        rdx, 0x1
000000000000671d         lea        rax, qword [rdx+rax+1]

                     loc_6722:
0000000000006722         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
0000000000006725         mov        rsi, rax                                    ; argument #2 for method xrealloc
0000000000006728         jmp        xrealloc                                    ; xrealloc
                        ; endp
000000000000672d         align      16

                     loc_6730:
0000000000006730         test       rax, rax                                    ; CODE XREF=x2realloc+6
0000000000006733         mov        edx, 0x80
0000000000006738         cmove      rax, rdx
000000000000673c         test       rax, rax
000000000000673f         jns        loc_6722

                     loc_6741:
0000000000006741         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
0000000000006745         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_674a:
000000000000674a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x90a0)
                     xzalloc:
0000000000006750         push       rbx                                         ; Begin of unwind block (FDE at 0x90b8)
0000000000006751         mov        rbx, rdi
0000000000006754         call       xmalloc                                     ; xmalloc
0000000000006759         mov        rdx, rbx                                    ; argument "__n" for method j_memset
000000000000675c         xor        esi, esi                                    ; argument "__c" for method j_memset
000000000000675e         mov        rdi, rax                                    ; argument "__s" for method j_memset
0000000000006761         pop        rbx
0000000000006762         jmp        j_memset                                    ; memset
                        ; endp
0000000000006767         align      16                                          ; End of unwind block (FDE at 0x90b8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
0000000000006770         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x90d4)
0000000000006773         sub        rsp, 0x8
0000000000006777         mul        rsi
000000000000677a         seto       dl
000000000000677d         test       rax, rax
0000000000006780         js         loc_6799

0000000000006782         movzx      edx, dl
0000000000006785         test       rdx, rdx
0000000000006788         jne        loc_6799

000000000000678a         call       j_calloc                                    ; calloc
000000000000678f         test       rax, rax
0000000000006792         je         loc_6799

0000000000006794         add        rsp, 0x8
0000000000006798         ret
                        ; endp

                     loc_6799:
0000000000006799         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_679e:
000000000000679e         nop                                                    ; End of unwind block (FDE at 0x90d4)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmemdup:
00000000000067a0         push       rbp                                         ; Begin of unwind block (FDE at 0x90f0), CODE XREF=clone_quoting_options+40
00000000000067a1         push       rbx
00000000000067a2         mov        rbp, rdi
00000000000067a5         mov        rdi, rsi
00000000000067a8         mov        rbx, rsi
00000000000067ab         sub        rsp, 0x8
00000000000067af         call       xmalloc                                     ; xmalloc
00000000000067b4         add        rsp, 0x8
00000000000067b8         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
00000000000067bb         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
00000000000067be         pop        rbx
00000000000067bf         pop        rbp
00000000000067c0         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
00000000000067c3         jmp        j_memcpy                                    ; memcpy
                        ; endp
00000000000067c8         align      16                                          ; End of unwind block (FDE at 0x90f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
00000000000067d0         push       rbx                                         ; Begin of unwind block (FDE at 0x9118)
00000000000067d1         mov        rbx, rdi
00000000000067d4         call       j_strlen                                    ; strlen
00000000000067d9         mov        rdi, rbx
00000000000067dc         lea        rsi, qword [rax+1]
00000000000067e0         pop        rbx
00000000000067e1         jmp        xmemdup                                     ; xmemdup
                        ; endp
00000000000067e3         align      16                                          ; End of unwind block (FDE at 0x9118)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
00000000000067f0         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x9134), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41
00000000000067f7         sub        rsp, 0x8
00000000000067fb         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006800         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006802         call       j_dcgettext                                 ; dcgettext
0000000000006807         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
000000000000680d         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x79f5
0000000000006814         mov        rcx, rax
0000000000006817         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000006819         xor        eax, eax
000000000000681b         call       j_error                                     ; error
0000000000006820         call       j_abort                                     ; abort
                        ; endp
0000000000006825         align      16                                          ; End of unwind block (FDE at 0x9134)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
0000000000006830         push       r12                                         ; Begin of unwind block (FDE at 0x914c), CODE XREF=main+3371, main+3591, digest_file.isra.1+171, digest_file.isra.1+253, fopen_safer+65, fopen_safer+134, close_stream+21
0000000000006832         push       rbp
0000000000006833         push       rbx
0000000000006834         mov        rbx, rdi
0000000000006837         call       j_fileno                                    ; fileno
000000000000683c         test       eax, eax
000000000000683e         mov        rdi, rbx
0000000000006841         js         loc_6897

0000000000006843         call       j___freading                                ; __freading
0000000000006848         test       eax, eax
000000000000684a         jne        loc_6878

                     loc_684c:
000000000000684c         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
000000000000684f         call       rpl_fflush                                  ; rpl_fflush
0000000000006854         test       eax, eax
0000000000006856         je         loc_6894

0000000000006858         call       j___errno_location                          ; __errno_location
000000000000685d         mov        r12d, dword [rax]
0000000000006860         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
0000000000006863         mov        rbp, rax
0000000000006866         call       j_fclose                                    ; fclose
000000000000686b         test       r12d, r12d
000000000000686e         jne        loc_68a0

                     loc_6870:
0000000000006870         pop        rbx                                         ; CODE XREF=rpl_fclose+121
0000000000006871         pop        rbp
0000000000006872         pop        r12
0000000000006874         ret
                        ; endp
0000000000006875         align      8

                     loc_6878:
0000000000006878         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
000000000000687b         call       j_fileno                                    ; fileno
0000000000006880         xor        esi, esi                                    ; argument "__offset" for method j_lseek
0000000000006882         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000006887         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000006889         call       j_lseek                                     ; lseek
000000000000688e         cmp        rax, 0xffffffffffffffff
0000000000006892         jne        loc_684c

                     loc_6894:
0000000000006894         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_6897:
0000000000006897         pop        rbx                                         ; CODE XREF=rpl_fclose+17
0000000000006898         pop        rbp
0000000000006899         pop        r12
000000000000689b         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_68a0:
00000000000068a0         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
00000000000068a4         mov        eax, 0xffffffff
00000000000068a9         jmp        loc_6870
00000000000068ab         align      16                                          ; End of unwind block (FDE at 0x914c)

                     rpl_fcntl:
00000000000068b0         push       r12                                         ; Begin of unwind block (FDE at 0x9184), CODE XREF=dup_safer+9
00000000000068b2         push       rbp
00000000000068b3         mov        ebp, edi
00000000000068b5         push       rbx
00000000000068b6         sub        rsp, 0x50
00000000000068ba         mov        rax, qword [fs:0x28]
00000000000068c3         mov        qword [rsp+0x68+var_50], rax
00000000000068c8         xor        eax, eax
00000000000068ca         lea        rax, qword [rsp+0x68+arg_0]
00000000000068cf         test       esi, esi
00000000000068d1         mov        qword [rsp+0x68+var_38], rdx
00000000000068d6         mov        qword [rsp+0x68+var_30], rcx
00000000000068db         mov        qword [rsp+0x68+var_28], r8
00000000000068e0         mov        qword [rsp+0x68+var_60], rax
00000000000068e5         lea        rax, qword [rsp+0x68+var_48]
00000000000068ea         mov        qword [rsp+0x68+var_20], r9
00000000000068ef         mov        dword [rsp+0x68+var_68], 0x10
00000000000068f6         mov        qword [rsp+0x68+var_58], rax
00000000000068fb         je         loc_6b02

0000000000006901         cmp        esi, 0x406
0000000000006907         jne        loc_6950

0000000000006909         mov        rax, qword [rsp+0x68+var_58]
000000000000690e         cmp        dword [have_dupfd_cloexec.3326], 0x0        ; have_dupfd_cloexec.3326
0000000000006915         mov        dword [rsp+0x68+var_68], 0x18
000000000000691c         mov        r12d, dword [rax+0x10]
0000000000006920         mov        edx, r12d
0000000000006923         js         loc_6a53

0000000000006929         xor        eax, eax
000000000000692b         mov        esi, 0x406                                  ; argument "__cmd" for method j_fcntl
0000000000006930         call       j_fcntl                                     ; fcntl
0000000000006935         test       eax, eax
0000000000006937         mov        ebx, eax
0000000000006939         js         loc_6ac8

                     loc_693f:
000000000000693f         mov        dword [have_dupfd_cloexec.3326], 0x1        ; have_dupfd_cloexec.3326, CODE XREF=rpl_fcntl+544
0000000000006949         jmp        loc_6990
000000000000694b         align      16

                     loc_6950:
0000000000006950         cmp        esi, 0xb                                    ; CODE XREF=rpl_fcntl+87
0000000000006953         je         loc_6980

0000000000006955         jg         loc_69b0

0000000000006957         cmp        esi, 0x4
000000000000695a         je         loc_6a30

0000000000006960         jg         loc_6a20

0000000000006966         cmp        esi, 0x2
0000000000006969         je         loc_6a30

000000000000696f         jg         loc_6980

0000000000006971         cmp        esi, 0x1
0000000000006974         jne        loc_69d8

0000000000006976         nop        word [cs:rax+rax]

                     loc_6980:
0000000000006980         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl, CODE XREF=rpl_fcntl+163, rpl_fcntl+191, rpl_fcntl+278, rpl_fcntl+344, rpl_fcntl+358, rpl_fcntl+371
0000000000006982         xor        eax, eax
0000000000006984         call       j_fcntl                                     ; fcntl
0000000000006989         mov        ebx, eax
000000000000698b         nop        dword [rax+rax]

                     loc_6990:
0000000000006990         mov        rcx, qword [rsp+0x68+var_50]                ; CODE XREF=rpl_fcntl+153, rpl_fcntl+327, rpl_fcntl+414, rpl_fcntl+432, rpl_fcntl+445, rpl_fcntl+491, rpl_fcntl+524, rpl_fcntl+568, rpl_fcntl+613
0000000000006995         xor        rcx, qword [fs:0x28]
000000000000699e         mov        eax, ebx
00000000000069a0         jne        loc_6afd

00000000000069a6         add        rsp, 0x50
00000000000069aa         pop        rbx
00000000000069ab         pop        rbp
00000000000069ac         pop        r12
00000000000069ae         ret
                        ; endp
00000000000069af         align      16

                     loc_69b0:
00000000000069b0         cmp        esi, 0x407                                  ; CODE XREF=rpl_fcntl+165
00000000000069b6         jg         loc_6a00

00000000000069b8         cmp        esi, 0x406
00000000000069be         jge        loc_6a30

00000000000069c0         cmp        esi, 0x401
00000000000069c6         je         loc_6980

00000000000069c8         cmp        esi, 0x402
00000000000069ce         je         loc_6a30

00000000000069d0         cmp        esi, 0x400
00000000000069d6         je         loc_6a30

                     loc_69d8:
00000000000069d8         mov        eax, dword [rsp+0x68+var_68]                ; CODE XREF=rpl_fcntl+196, rpl_fcntl+356, rpl_fcntl+382
00000000000069db         cmp        eax, 0x2f
00000000000069de         ja         loc_6b1a

00000000000069e4         add        rax, qword [rsp+0x68+var_58]

                     loc_69e9:
00000000000069e9         mov        rdx, qword [rax]                            ; CODE XREF=rpl_fcntl+623
00000000000069ec         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
00000000000069ee         xor        eax, eax
00000000000069f0         call       j_fcntl                                     ; fcntl
00000000000069f5         mov        ebx, eax
00000000000069f7         jmp        loc_6990
00000000000069f9         align      512

                     loc_6a00:
0000000000006a00         cmp        esi, 0x409                                  ; CODE XREF=rpl_fcntl+262
0000000000006a06         je         loc_6a30

0000000000006a08         jl         loc_6980

0000000000006a0e         cmp        esi, 0x40a
0000000000006a14         jne        loc_69d8

0000000000006a16         jmp        loc_6980
0000000000006a1b         align      32

                     loc_6a20:
0000000000006a20         cmp        esi, 0x9                                    ; CODE XREF=rpl_fcntl+176
0000000000006a23         je         loc_6980

0000000000006a29         jg         loc_6a30

0000000000006a2b         cmp        esi, 0x8
0000000000006a2e         jne        loc_69d8

                     loc_6a30:
0000000000006a30         mov        eax, dword [rsp+0x68+var_68]                ; CODE XREF=rpl_fcntl+170, rpl_fcntl+185, rpl_fcntl+270, rpl_fcntl+286, rpl_fcntl+294, rpl_fcntl+342, rpl_fcntl+377
0000000000006a33         cmp        eax, 0x2f
0000000000006a36         ja         loc_6b24

0000000000006a3c         add        rax, qword [rsp+0x68+var_58]

                     loc_6a41:
0000000000006a41         mov        edx, dword [rax]                            ; CODE XREF=rpl_fcntl+633
0000000000006a43         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
0000000000006a45         xor        eax, eax
0000000000006a47         call       j_fcntl                                     ; fcntl
0000000000006a4c         mov        ebx, eax
0000000000006a4e         jmp        loc_6990

                     loc_6a53:
0000000000006a53         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl, CODE XREF=rpl_fcntl+115
0000000000006a55         xor        eax, eax
0000000000006a57         call       j_fcntl                                     ; fcntl
0000000000006a5c         test       eax, eax
0000000000006a5e         mov        ebx, eax
0000000000006a60         js         loc_6990

0000000000006a66         cmp        dword [have_dupfd_cloexec.3326], 0xffffffff ; have_dupfd_cloexec.3326
0000000000006a6d         jne        loc_6990

                     loc_6a73:
0000000000006a73         xor        eax, eax                                    ; CODE XREF=rpl_fcntl+584
0000000000006a75         mov        esi, 0x1                                    ; argument "__cmd" for method j_fcntl
0000000000006a7a         mov        edi, ebx                                    ; argument "__fd" for method j_fcntl
0000000000006a7c         call       j_fcntl                                     ; fcntl
0000000000006a81         test       eax, eax
0000000000006a83         js         loc_6aa1

0000000000006a85         or         eax, 0x1
0000000000006a88         mov        esi, 0x2                                    ; argument "__cmd" for method j_fcntl
0000000000006a8d         mov        edi, ebx                                    ; argument "__fd" for method j_fcntl
0000000000006a8f         mov        edx, eax
0000000000006a91         xor        eax, eax
0000000000006a93         call       j_fcntl                                     ; fcntl
0000000000006a98         cmp        eax, 0xffffffff
0000000000006a9b         jne        loc_6990

                     loc_6aa1:
0000000000006aa1         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fcntl+467
0000000000006aa6         mov        r12d, dword [rax]
0000000000006aa9         mov        rbp, rax
0000000000006aac         mov        edi, ebx                                    ; argument "__fd" for method j_close
0000000000006aae         call       j_close                                     ; close
0000000000006ab3         mov        ebx, 0xffffffff
0000000000006ab8         mov        dword [rbp], r12d
0000000000006abc         jmp        loc_6990
0000000000006ac1         align      8

                     loc_6ac8:
0000000000006ac8         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fcntl+137
0000000000006acd         cmp        dword [rax], 0x16
0000000000006ad0         jne        loc_693f

0000000000006ad6         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl
0000000000006ad8         xor        eax, eax
0000000000006ada         mov        edx, r12d
0000000000006add         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
0000000000006adf         call       j_fcntl                                     ; fcntl
0000000000006ae4         test       eax, eax
0000000000006ae6         mov        ebx, eax
0000000000006ae8         js         loc_6990

0000000000006aee         mov        dword [have_dupfd_cloexec.3326], 0xffffffff ; have_dupfd_cloexec.3326
0000000000006af8         jmp        loc_6a73

                     loc_6afd:
0000000000006afd         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_fcntl+240
                        ; endp

                     loc_6b02:
0000000000006b02         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=rpl_fcntl+75
0000000000006b07         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl
0000000000006b09         mov        edx, dword [rax+0x10]
0000000000006b0c         xor        eax, eax
0000000000006b0e         call       j_fcntl                                     ; fcntl
0000000000006b13         mov        ebx, eax
0000000000006b15         jmp        loc_6990

                     loc_6b1a:
0000000000006b1a         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=rpl_fcntl+302
0000000000006b1f         jmp        loc_69e9

                     loc_6b24:
0000000000006b24         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=rpl_fcntl+390
0000000000006b29         jmp        loc_6a41
0000000000006b2e         align      16                                          ; End of unwind block (FDE at 0x9184)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
0000000000006b30         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x91bc), CODE XREF=rpl_fclose+31
0000000000006b33         push       rbx
0000000000006b34         mov        rbx, rdi
0000000000006b37         je         loc_6b4a

0000000000006b39         call       j___freading                                ; __freading
0000000000006b3e         test       eax, eax
0000000000006b40         je         loc_6b4a

0000000000006b42         test       dword [rbx], 0x100
0000000000006b48         jne        loc_6b58

                     loc_6b4a:
0000000000006b4a         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
0000000000006b4d         pop        rbx
0000000000006b4e         jmp        j_fflush                                    ; fflush
                        ; endp
0000000000006b53         align      8

                     loc_6b58:
0000000000006b58         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
0000000000006b5b         mov        edx, 0x1
0000000000006b60         xor        esi, esi
0000000000006b62         call       rpl_fseeko                                  ; rpl_fseeko
0000000000006b67         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
0000000000006b6a         pop        rbx
0000000000006b6b         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
0000000000006b70         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0x91bc), Begin of unwind block (FDE at 0x91dc), CODE XREF=rpl_fflush+50
0000000000006b74         cmp        qword [rdi+0x10], rax
0000000000006b78         je         loc_6b80

                     j_j_fseeko:        // fseeko
0000000000006b7a         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
0000000000006b7f         align      128

                     loc_6b80:
0000000000006b80         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
0000000000006b84         cmp        qword [rdi+0x28], rax
0000000000006b88         jne        j_j_fseeko                                  ; fseeko

0000000000006b8a         cmp        qword [rdi+0x48], 0x0
0000000000006b8f         jne        j_j_fseeko                                  ; fseeko

0000000000006b91         push       r12
0000000000006b93         push       rbp
0000000000006b94         mov        r12d, edx
0000000000006b97         push       rbx
0000000000006b98         mov        rbp, rsi
0000000000006b9b         mov        rbx, rdi
0000000000006b9e         call       j_fileno                                    ; fileno
0000000000006ba3         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000006ba6         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000006ba9         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000006bab         call       j_lseek                                     ; lseek
0000000000006bb0         cmp        rax, 0xffffffffffffffff
0000000000006bb4         je         loc_6bc2

0000000000006bb6         and        dword [rbx], 0xffffffef
0000000000006bb9         mov        qword [rbx+0x90], rax
0000000000006bc0         xor        eax, eax

                     loc_6bc2:
0000000000006bc2         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
0000000000006bc3         pop        rbp
0000000000006bc4         pop        r12
0000000000006bc6         ret
                        ; endp
0000000000006bc7         align      16                                          ; End of unwind block (FDE at 0x91dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
0000000000006bd0         push       r13                                         ; Begin of unwind block (FDE at 0x920c), CODE XREF=sub_4b10+534
0000000000006bd2         push       r12
0000000000006bd4         mov        r13, rsi
0000000000006bd7         push       rbp
0000000000006bd8         push       rbx
0000000000006bd9         mov        rbx, rdi
0000000000006bdc         mov        r12, rdx
0000000000006bdf         sub        rsp, 0x18
0000000000006be3         mov        rax, qword [fs:0x28]
0000000000006bec         mov        qword [rsp+0x38+var_30], rax
0000000000006bf1         xor        eax, eax
0000000000006bf3         lea        rax, qword [rsp+0x38+var_34]
0000000000006bf8         test       rdi, rdi
0000000000006bfb         cmove      rbx, rax
0000000000006bff         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
0000000000006c02         call       j_mbrtowc                                   ; mbrtowc
0000000000006c07         cmp        rax, 0xfffffffffffffffd
0000000000006c0b         mov        rbp, rax
0000000000006c0e         jbe        loc_6c30

0000000000006c10         test       r12, r12
0000000000006c13         je         loc_6c30

0000000000006c15         xor        edi, edi
0000000000006c17         call       hard_locale                                 ; hard_locale
0000000000006c1c         test       al, al
0000000000006c1e         jne        loc_6c30

0000000000006c20         movzx      eax, byte [r13]
0000000000006c25         mov        ebp, 0x1
0000000000006c2a         mov        dword [rbx], eax
0000000000006c2c         nop        dword [rax]

                     loc_6c30:
0000000000006c30         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
0000000000006c35         xor        rdx, qword [fs:0x28]
0000000000006c3e         mov        rax, rbp
0000000000006c41         jne        loc_6c4e

0000000000006c43         add        rsp, 0x18
0000000000006c47         pop        rbx
0000000000006c48         pop        rbp
0000000000006c49         pop        r12
0000000000006c4b         pop        r13
0000000000006c4d         ret
                        ; endp

                     loc_6c4e:
0000000000006c4e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
0000000000006c53         align      32                                          ; End of unwind block (FDE at 0x920c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
0000000000006c60         push       r12                                         ; Begin of unwind block (FDE at 0x924c), CODE XREF=close_stdout+13, close_stdout+51
0000000000006c62         push       rbp
0000000000006c63         mov        rbp, rdi
0000000000006c66         push       rbx
0000000000006c67         call       j___fpending                                ; __fpending
0000000000006c6c         mov        ebx, dword [rbp]
0000000000006c6f         mov        rdi, rbp
0000000000006c72         mov        r12, rax
0000000000006c75         call       rpl_fclose                                  ; rpl_fclose
0000000000006c7a         and        ebx, 0x20
0000000000006c7d         test       ebx, ebx
0000000000006c7f         jne        loc_6c98

0000000000006c81         test       eax, eax
0000000000006c83         je         loc_6c8f

0000000000006c85         test       r12, r12
0000000000006c88         mov        eax, 0xffffffff
0000000000006c8d         je         loc_6cc8

                     loc_6c8f:
0000000000006c8f         pop        rbx                                         ; CODE XREF=close_stream+35
0000000000006c90         pop        rbp
0000000000006c91         pop        r12
0000000000006c93         ret
                        ; endp
0000000000006c94         align      8

                     loc_6c98:
0000000000006c98         test       eax, eax                                    ; CODE XREF=close_stream+31
0000000000006c9a         jne        loc_6cb8

0000000000006c9c         call       j___errno_location                          ; __errno_location
0000000000006ca1         mov        dword [rax], 0x0
0000000000006ca7         mov        eax, 0xffffffff
0000000000006cac         pop        rbx
0000000000006cad         pop        rbp
0000000000006cae         pop        r12
0000000000006cb0         ret
                        ; endp
0000000000006cb1         align      8

                     loc_6cb8:
0000000000006cb8         pop        rbx                                         ; CODE XREF=close_stream+58
0000000000006cb9         mov        eax, 0xffffffff
0000000000006cbe         pop        rbp
0000000000006cbf         pop        r12
0000000000006cc1         ret
                        ; endp
0000000000006cc2         align      8

                     loc_6cc8:
0000000000006cc8         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
0000000000006ccd         cmp        dword [rax], 0x9
0000000000006cd0         pop        rbx
0000000000006cd1         pop        rbp
0000000000006cd2         pop        r12
0000000000006cd4         setne      al
0000000000006cd7         movzx      eax, al
0000000000006cda         neg        eax
0000000000006cdc         ret
                        ; endp
0000000000006cdd         align      32                                          ; End of unwind block (FDE at 0x924c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
0000000000006ce0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x929c), CODE XREF=rpl_mbrtowc+71
0000000000006ce4         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000006ce6         call       j_setlocale                                 ; setlocale
0000000000006ceb         mov        rdx, rax
0000000000006cee         mov        eax, 0x1
0000000000006cf3         test       rdx, rdx
0000000000006cf6         je         loc_6d15

0000000000006cf8         lea        rdi, qword [aMemoryExhauste+17]             ; 0x82e0
0000000000006cff         mov        ecx, 0x2
0000000000006d04         mov        rsi, rdx
0000000000006d07         rep  cmpsb byte [rsi], byte [rdi]
0000000000006d09         seta       cl
0000000000006d0c         sbb        cl, 0x0
0000000000006d0f         xor        eax, eax
0000000000006d11         test       cl, cl
0000000000006d13         jne        loc_6d20

                     loc_6d15:
0000000000006d15         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
0000000000006d19         ret
                        ; endp
0000000000006d1a         align      32

                     loc_6d20:
0000000000006d20         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
0000000000006d27         mov        ecx, 0x6
0000000000006d2c         mov        rsi, rdx
0000000000006d2f         rep  cmpsb byte [rsi], byte [rdi]
0000000000006d31         seta       al
0000000000006d34         sbb        al, 0x0
0000000000006d36         test       al, al
0000000000006d38         setne      al
0000000000006d3b         add        rsp, 0x8
0000000000006d3f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000006d40         sub        rsp, 0x8                                    ; End of unwind block (FDE at 0x929c), Begin of unwind block (FDE at 0x92bc), CODE XREF=gettext_quote.part.1+11
0000000000006d44         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000006d49         call       j_nl_langinfo                               ; nl_langinfo
0000000000006d4e         test       rax, rax
0000000000006d51         je         loc_6d70

0000000000006d53         cmp        byte [rax], 0x0
0000000000006d56         lea        rdx, qword [aAscii]                         ; "ASCII"
0000000000006d5d         cmove      rax, rdx
0000000000006d61         add        rsp, 0x8
0000000000006d65         ret
                        ; endp
0000000000006d66         align      16

                     loc_6d70:
0000000000006d70         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
0000000000006d77         add        rsp, 0x8
0000000000006d7b         ret
                        ; endp
0000000000006d7c         align      128                                         ; End of unwind block (FDE at 0x92bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
0000000000006d80         push       r15                                         ; Begin of unwind block (FDE at 0x92dc), DATA XREF=_start+22
0000000000006d82         push       r14
0000000000006d84         mov        r15, rdx
0000000000006d87         push       r13
0000000000006d89         push       r12
0000000000006d8b         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
0000000000006d92         push       rbp
0000000000006d93         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
0000000000006d9a         push       rbx
0000000000006d9b         mov        r13d, edi
0000000000006d9e         mov        r14, rsi
0000000000006da1         sub        rbp, r12
0000000000006da4         sub        rsp, 0x8
0000000000006da8         sar        rbp, 0x3
0000000000006dac         call       _init                                       ; _init
0000000000006db1         test       rbp, rbp
0000000000006db4         je         loc_6dd6

0000000000006db6         xor        ebx, ebx
0000000000006db8         nop        dword [rax+rax]

                     loc_6dc0:
0000000000006dc0         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
0000000000006dc3         mov        rsi, r14
0000000000006dc6         mov        edi, r13d
0000000000006dc9         call       qword [r12+rbx*8]
0000000000006dcd         add        rbx, 0x1
0000000000006dd1         cmp        rbp, rbx
0000000000006dd4         jne        loc_6dc0

                     loc_6dd6:
0000000000006dd6         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
0000000000006dda         pop        rbx
0000000000006ddb         pop        rbp
0000000000006ddc         pop        r12
0000000000006dde         pop        r13
0000000000006de0         pop        r14
0000000000006de2         pop        r15
0000000000006de4         ret
                        ; endp
0000000000006de5         align      16                                          ; End of unwind block (FDE at 0x92dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
0000000000006df0         ret                                                    ; Begin of unwind block (FDE at 0x9324), DATA XREF=_start+15
                        ; endp
0000000000006df2         align      512                                         ; End of unwind block (FDE at 0x9324)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
0000000000006e00         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0x933c), __dso_handle, CODE XREF=main+110
0000000000006e07         xor        esi, esi
0000000000006e09         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
0000000000006e0e         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x933c)
0000000000006e0f         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x6e10; 0x6e19[ (9 bytes)
        ; File offset : [28176; 28185[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
0000000000006e10         sub        rsp, 0x8
0000000000006e14         add        rsp, 0x8
0000000000006e18         ret
                        ; endp
0000000000006e19         db  0x00 ; '.'
0000000000006e1a         db  0x00 ; '.'
0000000000006e1b         db  0x00 ; '.'
0000000000006e1c         db  0x00 ; '.'
0000000000006e1d         db  0x00 ; '.'
0000000000006e1e         db  0x00 ; '.'
0000000000006e1f         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x6e20; 0x82ee[ (5326 bytes)
        ; File offset : [28192; 33518[ (5326 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
0000000000006e20         db  0x01 ; '.'
0000000000006e21         db  0x00 ; '.'
0000000000006e22         db  0x02 ; '.'
0000000000006e23         db  0x00 ; '.'
0000000000006e24         db  0x5c ; '\'                                         ; DATA XREF=print_filename+21
0000000000006e25         db  0x6e ; 'n'
0000000000006e26         db  0x00 ; '.'
0000000000006e27         db  0x5c ; '\'                                         ; DATA XREF=print_filename+40
0000000000006e28         db  0x5c ; '\'
0000000000006e29         db  0x00 ; '.'
                     aMd5sum:
0000000000006e2a         db         "md5sum", 0                                 ; DATA XREF=main+392, usage+470, usage+828, usage+1012, usage+1031, usage+1065
0000000000006e31         db  0x4d ; 'M'                                         ; DATA XREF=main+1288, main+2295, main+3436, main+3742, main+3957, usage+107, usage+231
0000000000006e32         db  0x44 ; 'D'
0000000000006e33         db  0x35 ; '5'
0000000000006e34         db  0x00 ; '.'
                     aRfc1321:
0000000000006e35         db         "RFC 1321", 0                               ; DATA XREF=usage+501
0000000000006e3e         db  0x5b ; '['                                         ; DATA XREF=usage+523
0000000000006e3f         db  0x00 ; '.'
                     aTestInvocation:
0000000000006e40         db         "test invocation", 0                        ; DATA XREF=usage+562
                     aMulticallInvoc:
0000000000006e50         db         "Multi-call invocation", 0                  ; DATA XREF=usage+610
                     aSha224sum:
0000000000006e66         db         "sha224sum", 0                              ; DATA XREF=usage+627
                     aSha2Utilities:
0000000000006e70         db         "sha2 utilities", 0                         ; DATA XREF=usage+639
                     aSha256sum:
0000000000006e7f         db         "sha256sum", 0                              ; DATA XREF=usage+530
                     aSha384sum:
0000000000006e89         db         "sha384sum", 0                              ; DATA XREF=usage+574
                     aSha512sum:
0000000000006e93         db         "sha512sum", 0                              ; DATA XREF=usage+598
                     aNsOnlineHelpSn:
0000000000006e9d         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+714
0000000000006eb4         db  0x47 ; 'G'                                         ; DATA XREF=main+385, usage+742, usage+935, emit_bug_reporting_address+68
0000000000006eb5         db  0x4e ; 'N'
0000000000006eb6         db  0x55 ; 'U'
0000000000006eb7         db  0x20 ; ' '
                     aCoreutils:
0000000000006eb8         db         "coreutils", 0                              ; DATA XREF=main+79, main+91, usage+586
0000000000006ec2         db  0x65 ; 'e'                                         ; DATA XREF=usage+781, usage+974
0000000000006ec3         db  0x6e ; 'n'
0000000000006ec4         db  0x5f ; '_'
0000000000006ec5         db  0x00 ; '.'
                     aFullDocumentat:
0000000000006ec6         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+809, usage+998
                     aUsrlocalsharel:
0000000000006ee1         db         "/usr/local/share/locale", 0                ; DATA XREF=main+72
                     aScottMiller:
0000000000006ef9         db         "Scott Miller", 0                           ; DATA XREF=main+370
                     aUlrichDrepper:
0000000000006f06         db         "Ulrich Drepper", 0                         ; DATA XREF=main+377
                     aDavidMadore:
0000000000006f15         db         "David Madore", 0                           ; DATA XREF=main+347
                     aBctwz:
0000000000006f22         db         "bctwz", 0                                  ; DATA XREF=main+159
                     aStandardInput:
0000000000006f28         db         "standard input", 0                         ; DATA XREF=main+1002, main+3605
                     aSTooManyChecks:
0000000000006f37         db         "%s: too many checksum lines", 0            ; DATA XREF=main+1403
                     aFailedOpenOrRe:
0000000000006f53         db         "FAILED open or read", 0                    ; DATA XREF=main+1887
                     aFailed:
0000000000006f67         db         "FAILED", 0                                 ; DATA XREF=main+2610
0000000000006f6e         db  0x4f ; 'O'                                         ; DATA XREF=main+3356
0000000000006f6f         db  0x4b ; 'K'
0000000000006f70         db  0x00 ; '.'
                     aSReadError:
0000000000006f71         db         "%s: read error", 0                         ; DATA XREF=main+3199
                     aSNoFileWasVeri:
0000000000006f80         db         "%s: no file was verified", 0               ; DATA XREF=main+4104
0000000000006f99         db  0x25 ; '%'                                         ; DATA XREF=main+2997
0000000000006f9a         db  0x30 ; '0'
0000000000006f9b         db  0x32 ; '2'
0000000000006f9c         db  0x78 ; 'x'
0000000000006f9d         db  0x00 ; '.'
0000000000006f9e         db  0x20 ; ' '                                         ; DATA XREF=main+3771, main+3988
0000000000006f9f         db  0x28 ; '('
0000000000006fa0         db  0x00 ; '.'
0000000000006fa1         db  0x29 ; ')'                                         ; DATA XREF=main+3815, main+4029
0000000000006fa2         db  0x20 ; ' '
0000000000006fa3         db  0x3d ; '='
0000000000006fa4         db  0x20 ; ' '
0000000000006fa5         db  0x00 ; '.'
                     aBinary:
0000000000006fa6         db         "binary", 0
                     aCheck:
0000000000006fad         db         "check", 0
                     aIgnoremissing:
0000000000006fb3         db         "ignore-missing", 0
                     aQuiet:
0000000000006fc2         db         "quiet", 0
                     aStatus:
0000000000006fc8         db         "status", 0
                     aText:
0000000000006fcf         db         "text", 0
                     aWarn:
0000000000006fd4         db         "warn", 0
                     aStrict:
0000000000006fd9         db         "strict", 0
0000000000006fe0         db  0x74 ; 't'
0000000000006fe1         db  0x61 ; 'a'
0000000000006fe2         db  0x67 ; 'g'
0000000000006fe3         db  0x00 ; '.'
                     aZero:
0000000000006fe4         db         "zero", 0
                     aHelp:
0000000000006fe9         db         "help", 0
                     aVersion:
0000000000006fee         db         "version", 0
0000000000006ff6         align      8
                     aTrySHelpForMor:
0000000000006ff8         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
000000000000701f         align      32
                     aUsageSOptionFi:
0000000000007020         db         "Usage: %s [OPTION]... [FILE]...\nPrint or check %s (%d-bit) checksums.\n", 0 ; DATA XREF=usage+93
0000000000007067         align      8
                     aNwithNoFileOrW:
0000000000007068         db         "\nWith no FILE, or when FILE is -, read standard input.\n", 0 ; DATA XREF=usage+145
                     aNBBinaryReadIn:
00000000000070a0         db         "\n  -b, --binary         read in binary mode\n", 0 ; DATA XREF=usage+182
00000000000070cd         align      16
                     aCCheckReadSSum:
00000000000070d0         db         "  -c, --check          read %s sums from the FILEs and check them\n", 0 ; DATA XREF=usage+212
0000000000007113         align      8
                     aTagCreateABsds:
0000000000007118         db         "      --tag            create a BSD-style checksum\n", 0 ; DATA XREF=usage+260
000000000000714c         align      16
                     aTTextReadInTex:
0000000000007150         db         "  -t, --text           read in text mode (default)\n", 0 ; DATA XREF=usage+297
0000000000007184         align      8
                     aZZeroEndEachOu:
0000000000007188         db         "  -z, --zero           end each output line with NUL, not newline,\n                       and disable file name escaping\n", 0 ; DATA XREF=usage+334
0000000000007202         align      8
                     aNtheFollowingF:
0000000000007208         db         "\nThe following five options are useful only when verifying checksums:\n      --ignore-missing  don't fail or report status for missing files\n      --quiet          don't print OK for each successfully verified file\n      --status         don't output anythi" ; DATA XREF=usage+371
0000000000007308         db         "ng, status code shows success\n      --strict         exit non-zero for improperly formatted checksum lines\n  -w, --warn           warn about improperly formatted checksum lines\n\n", 0
00000000000073bb         align      64
                     aHelpDisplayThi:
00000000000073c0         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+408
00000000000073ed         align      16
                     aVersionOutputV:
00000000000073f0         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+445
0000000000007426         align      8
                     aNtheSumsAreCom:
0000000000007428         db         "\nThe sums are computed as described in %s.  When checking, the input\nshould be a former output of this program.  The default mode is to print a\nline with checksum, a space, a character indicating input mode ('*' for binary,\n' ' for text or where binary is " ; DATA XREF=usage+482
0000000000007528         db         "insignificant), and name for each FILE.\n", 0
0000000000007551         align      8
                     aHttpswwwgnuorg:
0000000000007558         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+735, usage+835, usage+928, usage+1038, emit_bug_reporting_address+61
                     aReportAnyTrans:
0000000000007580         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+1079
00000000000075c7         align      8
                     aOrAvailableLoc:
00000000000075c8         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+878
00000000000075fb         align      512
                     aTagDoesNotSupp:
0000000000007600         db         "--tag does not support --text mode", 0     ; DATA XREF=main+4384
0000000000007623         align      8
                     aTheZeroOptionI:
0000000000007628         db         "the --zero option is not supported when verifying checksums", 0 ; DATA XREF=main+628
0000000000007664         align      8
                     aTheTagOptionIs:
0000000000007668         db         "the --tag option is meaningless when verifying checksums", 0 ; DATA XREF=main+747
00000000000076a1         align      8
                     aTheBinaryAndTe:
00000000000076a8         db         "the --binary and --text options are meaningless when verifying checksums", 0 ; DATA XREF=main+770
00000000000076f1         align      8
                     aTheIgnoremissi:
00000000000076f8         db         "the --ignore-missing option is meaningful only when verifying checksums", 0 ; DATA XREF=main+4401
                     aTheStatusOptio:
0000000000007740         db         "the --status option is meaningful only when verifying checksums", 0 ; DATA XREF=main+4357
                     aTheWarnOptionI:
0000000000007780         db         "the --warn option is meaningful only when verifying checksums", 0 ; DATA XREF=main+686
00000000000077be         align      64
                     aTheQuietOption:
00000000000077c0         db         "the --quiet option is meaningful only when verifying checksums", 0 ; DATA XREF=main+1464
00000000000077ff         align      2048
                     aTheStrictOptio:
0000000000007800         db         "the --strict option is meaningful only when verifying checksums", 0 ; DATA XREF=main+1500
                     aSLuImproperlyF:
0000000000007840         db         "%s: %lu: improperly formatted %s checksum line", 0 ; DATA XREF=main+2273
000000000000786f         align      16
                     aSNoProperlyFor:
0000000000007870         db         "%s: no properly formatted %s checksum lines found", 0 ; DATA XREF=main+3414
00000000000078a2         align      8
                     aWarningLuLines:
00000000000078a8         db         "WARNING: %lu lines are improperly formatted", 0 ; DATA XREF=main+2014
00000000000078d4         align      8
                     aWarningLuLineI:
00000000000078d8         db         "WARNING: %lu line is improperly formatted", 0 ; DATA XREF=main+2021
0000000000007902         align      8
                     aWarningLuListe:
0000000000007908         db         "WARNING: %lu listed files could not be read", 0 ; DATA XREF=main+2074
0000000000007934         align      8
                     aWarningLuListe_7938:        // aWarningLuListe
0000000000007938         db         "WARNING: %lu listed file could not be read", 0 ; DATA XREF=main+2081
0000000000007963         align      8
                     aWarningLuCompu:
0000000000007968         db         "WARNING: %lu computed checksums did NOT match", 0 ; DATA XREF=main+2134
0000000000007996         align      8
                     aWarningLuCompu_7998:        // aWarningLuCompu
0000000000007998         db         "WARNING: %lu computed checksum did NOT match", 0 ; DATA XREF=main+2141
00000000000079c5         align      16
                     bin2hex.7139:
00000000000079d0         db         "0123456789abcdef8.31", 0                   ; DATA XREF=main+908
                     aWriteError:
00000000000079e5         db         "write error", 0                            ; DATA XREF=close_stdout+67
                     aSS:
00000000000079f1         db         "%s: %s", 0                                 ; DATA XREF=close_stdout+108
00000000000079f8         align      512
                     fillbuf:
0000000000007a00         db         0x80                                        ; DATA XREF=md5_finish_ctx+98, md5_finish_ctx+148, md5_finish_ctx+176, md5_finish_ctx+256
0000000000007a01         align      64
                     aANullArgv0WasP:
0000000000007a40         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
0000000000007a78         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
0000000000007a80         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
0000000000007a81         db  0x74 ; 't'
0000000000007a82         db  0x2d ; '-'                                         ; DATA XREF=main+865, main+968, main+1710, digest_file.isra.1+14
0000000000007a83         db  0x00 ; '.'
0000000000007a84         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
0000000000007a85         db  0x80 ; '.'
0000000000007a86         db  0x98 ; '.'
0000000000007a87         db  0x00 ; '.'
0000000000007a88         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
0000000000007a89         db  0x80 ; '.'
0000000000007a8a         db  0x99 ; '.'
0000000000007a8b         db  0x00 ; '.'
0000000000007a8c         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
0000000000007a8d         db  0x07 ; '.'
0000000000007a8e         db  0x65 ; 'e'
0000000000007a8f         db  0x00 ; '.'
0000000000007a90         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
0000000000007a91         db  0xaf ; '.'
0000000000007a92         db  0x00 ; '.'
0000000000007a93         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_4b10+1451, sub_4b10+1493, sub_4b10+2429
0000000000007a94         db  0x00 ; '.'
0000000000007a95         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_4b10+132, sub_4b10+1338, sub_4b10+1670, sub_4b10+1697, sub_4b10+2352
0000000000007a96         db  0x00 ; '.'
0000000000007a97         db  0x60 ; '`'                                         ; DATA XREF=sub_4b10+1627, sub_4b10+1654
0000000000007a98         db  0x00 ; '.'
                     aLiteral:
0000000000007a99         db         "literal", 0
                     aShell:
0000000000007aa1         db         "shell", 0
                     aShellalways:
0000000000007aa7         db         "shell-always", 0
0000000000007ab4         db  0x73 ; 's'
0000000000007ab5         db  0x68 ; 'h'
0000000000007ab6         db  0x65 ; 'e'
0000000000007ab7         db  0x6c ; 'l'
0000000000007ab8         db  0x6c ; 'l'
0000000000007ab9         db  0x2d ; '-'
                     aEscape:
0000000000007aba         db         "escape", 0
                     aShellescapealw:
0000000000007ac1         db         "shell-escape-always", 0
0000000000007ad5         db  0x63 ; 'c'
0000000000007ad6         db  0x00 ; '.'
                     aCmaybe:
0000000000007ad7         db         "c-maybe", 0
                     aClocale:
0000000000007adf         db         "clocale", 0
0000000000007ae7         align      256
                     switch_table_7b00:        // switch_table
0000000000007b00         dd         quotearg_buffer_restyled.loc_520a-switch_table_7b00, quotearg_buffer_restyled.loc_4463-switch_table_7b00, quotearg_buffer_restyled.loc_5438-switch_table_7b00, quotearg_buffer_restyled.loc_5244-switch_table_7b00 ; switch table used at 0x4461 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
0000000000007b10         dd         quotearg_buffer_restyled.loc_5034-switch_table_7b00, quotearg_buffer_restyled.loc_5090-switch_table_7b00, quotearg_buffer_restyled.loc_50e5-switch_table_7b00, quotearg_buffer_restyled.loc_512a-switch_table_7b00
0000000000007b20         dd         3 dup (quotearg_buffer_restyled.loc_5164-switch_table_7b00)
0000000000007b2c         db  0xb4 ; '.'                                         ; DATA XREF=quotearg_buffer_restyled+477
0000000000007b2d         db  0xcc ; '.'
0000000000007b2e         db  0xff ; '.'
0000000000007b2f         db  0xff ; '.'
0000000000007b30         db  0x9c ; '.'
0000000000007b31         db  0xcd ; '.'
0000000000007b32         db  0xff ; '.'
0000000000007b33         db  0xff ; '.'
0000000000007b34         db  0x9c ; '.'
0000000000007b35         db  0xcd ; '.'
0000000000007b36         db  0xff ; '.'
0000000000007b37         db  0xff ; '.'
0000000000007b38         db  0x9c ; '.'
0000000000007b39         db  0xcd ; '.'
0000000000007b3a         db  0xff ; '.'
0000000000007b3b         db  0xff ; '.'
0000000000007b3c         db  0x9c ; '.'
0000000000007b3d         db  0xcd ; '.'
0000000000007b3e         db  0xff ; '.'
0000000000007b3f         db  0xff ; '.'
0000000000007b40         db  0x9c ; '.'
0000000000007b41         db  0xcd ; '.'
0000000000007b42         db  0xff ; '.'
0000000000007b43         db  0xff ; '.'
0000000000007b44         db  0x9c ; '.'
0000000000007b45         db  0xcd ; '.'
0000000000007b46         db  0xff ; '.'
0000000000007b47         db  0xff ; '.'
0000000000007b48         db  0xf4 ; '.'
0000000000007b49         db  0xcc ; '.'
0000000000007b4a         db  0xff ; '.'
0000000000007b4b         db  0xff ; '.'
0000000000007b4c         db  0xfc ; '.'
0000000000007b4d         db  0xcb ; '.'
0000000000007b4e         db  0xff ; '.'
0000000000007b4f         db  0xff ; '.'
0000000000007b50         db  0xbc ; '.'
0000000000007b51         db  0xcb ; '.'
0000000000007b52         db  0xff ; '.'
0000000000007b53         db  0xff ; '.'
0000000000007b54         db  0x84 ; '.'
0000000000007b55         db  0xcd ; '.'
0000000000007b56         db  0xff ; '.'
0000000000007b57         db  0xff ; '.'
0000000000007b58         db  0x74 ; 't'
0000000000007b59         db  0xcd ; '.'
0000000000007b5a         db  0xff ; '.'
0000000000007b5b         db  0xff ; '.'
0000000000007b5c         db  0x64 ; 'd'
0000000000007b5d         db  0xcd ; '.'
0000000000007b5e         db  0xff ; '.'
0000000000007b5f         db  0xff ; '.'
0000000000007b60         db  0x54 ; 'T'
0000000000007b61         db  0xcd ; '.'
0000000000007b62         db  0xff ; '.'
0000000000007b63         db  0xff ; '.'
0000000000007b64         db  0x9c ; '.'
0000000000007b65         db  0xcd ; '.'
0000000000007b66         db  0xff ; '.'
0000000000007b67         db  0xff ; '.'
0000000000007b68         db  0x9c ; '.'
0000000000007b69         db  0xcd ; '.'
0000000000007b6a         db  0xff ; '.'
0000000000007b6b         db  0xff ; '.'
0000000000007b6c         db  0x9c ; '.'
0000000000007b6d         db  0xcd ; '.'
0000000000007b6e         db  0xff ; '.'
0000000000007b6f         db  0xff ; '.'
0000000000007b70         db  0x9c ; '.'
0000000000007b71         db  0xcd ; '.'
0000000000007b72         db  0xff ; '.'
0000000000007b73         db  0xff ; '.'
0000000000007b74         db  0x9c ; '.'
0000000000007b75         db  0xcd ; '.'
0000000000007b76         db  0xff ; '.'
0000000000007b77         db  0xff ; '.'
0000000000007b78         db  0x9c ; '.'
0000000000007b79         db  0xcd ; '.'
0000000000007b7a         db  0xff ; '.'
0000000000007b7b         db  0xff ; '.'
0000000000007b7c         db  0x9c ; '.'
0000000000007b7d         db  0xcd ; '.'
0000000000007b7e         db  0xff ; '.'
0000000000007b7f         db  0xff ; '.'
0000000000007b80         db  0x9c ; '.'
0000000000007b81         db  0xcd ; '.'
0000000000007b82         db  0xff ; '.'
0000000000007b83         db  0xff ; '.'
0000000000007b84         db  0x9c ; '.'
0000000000007b85         db  0xcd ; '.'
0000000000007b86         db  0xff ; '.'
0000000000007b87         db  0xff ; '.'
0000000000007b88         db  0x9c ; '.'
0000000000007b89         db  0xcd ; '.'
0000000000007b8a         db  0xff ; '.'
0000000000007b8b         db  0xff ; '.'
0000000000007b8c         db  0x9c ; '.'
0000000000007b8d         db  0xcd ; '.'
0000000000007b8e         db  0xff ; '.'
0000000000007b8f         db  0xff ; '.'
0000000000007b90         db  0x9c ; '.'
0000000000007b91         db  0xcd ; '.'
0000000000007b92         db  0xff ; '.'
0000000000007b93         db  0xff ; '.'
0000000000007b94         db  0x9c ; '.'
0000000000007b95         db  0xcd ; '.'
0000000000007b96         db  0xff ; '.'
0000000000007b97         db  0xff ; '.'
0000000000007b98         db  0x9c ; '.'
0000000000007b99         db  0xcd ; '.'
0000000000007b9a         db  0xff ; '.'
0000000000007b9b         db  0xff ; '.'
0000000000007b9c         db  0x9c ; '.'
0000000000007b9d         db  0xcd ; '.'
0000000000007b9e         db  0xff ; '.'
0000000000007b9f         db  0xff ; '.'
0000000000007ba0         db  0x9c ; '.'
0000000000007ba1         db  0xcd ; '.'
0000000000007ba2         db  0xff ; '.'
0000000000007ba3         db  0xff ; '.'
0000000000007ba4         db  0x9c ; '.'
0000000000007ba5         db  0xcd ; '.'
0000000000007ba6         db  0xff ; '.'
0000000000007ba7         db  0xff ; '.'
0000000000007ba8         db  0x9c ; '.'
0000000000007ba9         db  0xcd ; '.'
0000000000007baa         db  0xff ; '.'
0000000000007bab         db  0xff ; '.'
0000000000007bac         db  0x44 ; 'D'
0000000000007bad         db  0xcd ; '.'
0000000000007bae         db  0xff ; '.'
0000000000007baf         db  0xff ; '.'
0000000000007bb0         db  0x34 ; '4'
0000000000007bb1         db  0xcd ; '.'
0000000000007bb2         db  0xff ; '.'
0000000000007bb3         db  0xff ; '.'
0000000000007bb4         db  0x34 ; '4'
0000000000007bb5         db  0xcd ; '.'
0000000000007bb6         db  0xff ; '.'
0000000000007bb7         db  0xff ; '.'
0000000000007bb8         db  0x04 ; '.'
0000000000007bb9         db  0xcd ; '.'
0000000000007bba         db  0xff ; '.'
0000000000007bbb         db  0xff ; '.'
0000000000007bbc         db  0x34 ; '4'
0000000000007bbd         db  0xcd ; '.'
0000000000007bbe         db  0xff ; '.'
0000000000007bbf         db  0xff ; '.'
0000000000007bc0         db  0xdc ; '.'
0000000000007bc1         db  0xcc ; '.'
0000000000007bc2         db  0xff ; '.'
0000000000007bc3         db  0xff ; '.'
0000000000007bc4         db  0x34 ; '4'
0000000000007bc5         db  0xcd ; '.'
0000000000007bc6         db  0xff ; '.'
0000000000007bc7         db  0xff ; '.'
0000000000007bc8         db  0x97 ; '.'
0000000000007bc9         db  0xcb ; '.'
0000000000007bca         db  0xff ; '.'
0000000000007bcb         db  0xff ; '.'
0000000000007bcc         db  0x34 ; '4'
0000000000007bcd         db  0xcd ; '.'
0000000000007bce         db  0xff ; '.'
0000000000007bcf         db  0xff ; '.'
0000000000007bd0         db  0x34 ; '4'
0000000000007bd1         db  0xcd ; '.'
0000000000007bd2         db  0xff ; '.'
0000000000007bd3         db  0xff ; '.'
0000000000007bd4         db  0x34 ; '4'
0000000000007bd5         db  0xcd ; '.'
0000000000007bd6         db  0xff ; '.'
0000000000007bd7         db  0xff ; '.'
0000000000007bd8         db  0xdc ; '.'
0000000000007bd9         db  0xcc ; '.'
0000000000007bda         db  0xff ; '.'
0000000000007bdb         db  0xff ; '.'
0000000000007bdc         db  0xdc ; '.'
0000000000007bdd         db  0xcc ; '.'
0000000000007bde         db  0xff ; '.'
0000000000007bdf         db  0xff ; '.'
0000000000007be0         db  0xdc ; '.'
0000000000007be1         db  0xcc ; '.'
0000000000007be2         db  0xff ; '.'
0000000000007be3         db  0xff ; '.'
0000000000007be4         db  0xdc ; '.'
0000000000007be5         db  0xcc ; '.'
0000000000007be6         db  0xff ; '.'
0000000000007be7         db  0xff ; '.'
0000000000007be8         db  0xdc ; '.'
0000000000007be9         db  0xcc ; '.'
0000000000007bea         db  0xff ; '.'
0000000000007beb         db  0xff ; '.'
0000000000007bec         db  0xdc ; '.'
0000000000007bed         db  0xcc ; '.'
0000000000007bee         db  0xff ; '.'
0000000000007bef         db  0xff ; '.'
0000000000007bf0         db  0xdc ; '.'
0000000000007bf1         db  0xcc ; '.'
0000000000007bf2         db  0xff ; '.'
0000000000007bf3         db  0xff ; '.'
0000000000007bf4         db  0xdc ; '.'
0000000000007bf5         db  0xcc ; '.'
0000000000007bf6         db  0xff ; '.'
0000000000007bf7         db  0xff ; '.'
0000000000007bf8         db  0xdc ; '.'
0000000000007bf9         db  0xcc ; '.'
0000000000007bfa         db  0xff ; '.'
0000000000007bfb         db  0xff ; '.'
0000000000007bfc         db  0xdc ; '.'
0000000000007bfd         db  0xcc ; '.'
0000000000007bfe         db  0xff ; '.'
0000000000007bff         db  0xff ; '.'
0000000000007c00         db  0xdc ; '.'
0000000000007c01         db  0xcc ; '.'
0000000000007c02         db  0xff ; '.'
0000000000007c03         db  0xff ; '.'
0000000000007c04         db  0xdc ; '.'
0000000000007c05         db  0xcc ; '.'
0000000000007c06         db  0xff ; '.'
0000000000007c07         db  0xff ; '.'
0000000000007c08         db  0xdc ; '.'
0000000000007c09         db  0xcc ; '.'
0000000000007c0a         db  0xff ; '.'
0000000000007c0b         db  0xff ; '.'
0000000000007c0c         db  0xdc ; '.'
0000000000007c0d         db  0xcc ; '.'
0000000000007c0e         db  0xff ; '.'
0000000000007c0f         db  0xff ; '.'
0000000000007c10         db  0xdc ; '.'
0000000000007c11         db  0xcc ; '.'
0000000000007c12         db  0xff ; '.'
0000000000007c13         db  0xff ; '.'
0000000000007c14         db  0xdc ; '.'
0000000000007c15         db  0xcc ; '.'
0000000000007c16         db  0xff ; '.'
0000000000007c17         db  0xff ; '.'
0000000000007c18         db  0x34 ; '4'
0000000000007c19         db  0xcd ; '.'
0000000000007c1a         db  0xff ; '.'
0000000000007c1b         db  0xff ; '.'
0000000000007c1c         db  0x34 ; '4'
0000000000007c1d         db  0xcd ; '.'
0000000000007c1e         db  0xff ; '.'
0000000000007c1f         db  0xff ; '.'
0000000000007c20         db  0x34 ; '4'
0000000000007c21         db  0xcd ; '.'
0000000000007c22         db  0xff ; '.'
0000000000007c23         db  0xff ; '.'
0000000000007c24         db  0x34 ; '4'
0000000000007c25         db  0xcd ; '.'
0000000000007c26         db  0xff ; '.'
0000000000007c27         db  0xff ; '.'
0000000000007c28         db  0x67 ; 'g'
0000000000007c29         db  0xcb ; '.'
0000000000007c2a         db  0xff ; '.'
0000000000007c2b         db  0xff ; '.'
0000000000007c2c         db  0x9c ; '.'
0000000000007c2d         db  0xcd ; '.'
0000000000007c2e         db  0xff ; '.'
0000000000007c2f         db  0xff ; '.'
0000000000007c30         db  0xdc ; '.'
0000000000007c31         db  0xcc ; '.'
0000000000007c32         db  0xff ; '.'
0000000000007c33         db  0xff ; '.'
0000000000007c34         db  0xdc ; '.'
0000000000007c35         db  0xcc ; '.'
0000000000007c36         db  0xff ; '.'
0000000000007c37         db  0xff ; '.'
0000000000007c38         db  0xdc ; '.'
0000000000007c39         db  0xcc ; '.'
0000000000007c3a         db  0xff ; '.'
0000000000007c3b         db  0xff ; '.'
0000000000007c3c         db  0xdc ; '.'
0000000000007c3d         db  0xcc ; '.'
0000000000007c3e         db  0xff ; '.'
0000000000007c3f         db  0xff ; '.'
0000000000007c40         db  0xdc ; '.'
0000000000007c41         db  0xcc ; '.'
0000000000007c42         db  0xff ; '.'
0000000000007c43         db  0xff ; '.'
0000000000007c44         db  0xdc ; '.'
0000000000007c45         db  0xcc ; '.'
0000000000007c46         db  0xff ; '.'
0000000000007c47         db  0xff ; '.'
0000000000007c48         db  0xdc ; '.'
0000000000007c49         db  0xcc ; '.'
0000000000007c4a         db  0xff ; '.'
0000000000007c4b         db  0xff ; '.'
0000000000007c4c         db  0xdc ; '.'
0000000000007c4d         db  0xcc ; '.'
0000000000007c4e         db  0xff ; '.'
0000000000007c4f         db  0xff ; '.'
0000000000007c50         db  0xdc ; '.'
0000000000007c51         db  0xcc ; '.'
0000000000007c52         db  0xff ; '.'
0000000000007c53         db  0xff ; '.'
0000000000007c54         db  0xdc ; '.'
0000000000007c55         db  0xcc ; '.'
0000000000007c56         db  0xff ; '.'
0000000000007c57         db  0xff ; '.'
0000000000007c58         db  0xdc ; '.'
0000000000007c59         db  0xcc ; '.'
0000000000007c5a         db  0xff ; '.'
0000000000007c5b         db  0xff ; '.'
0000000000007c5c         db  0xdc ; '.'
0000000000007c5d         db  0xcc ; '.'
0000000000007c5e         db  0xff ; '.'
0000000000007c5f         db  0xff ; '.'
0000000000007c60         db  0xdc ; '.'
0000000000007c61         db  0xcc ; '.'
0000000000007c62         db  0xff ; '.'
0000000000007c63         db  0xff ; '.'
0000000000007c64         db  0xdc ; '.'
0000000000007c65         db  0xcc ; '.'
0000000000007c66         db  0xff ; '.'
0000000000007c67         db  0xff ; '.'
0000000000007c68         db  0xdc ; '.'
0000000000007c69         db  0xcc ; '.'
0000000000007c6a         db  0xff ; '.'
0000000000007c6b         db  0xff ; '.'
0000000000007c6c         db  0xdc ; '.'
0000000000007c6d         db  0xcc ; '.'
0000000000007c6e         db  0xff ; '.'
0000000000007c6f         db  0xff ; '.'
0000000000007c70         db  0xdc ; '.'
0000000000007c71         db  0xcc ; '.'
0000000000007c72         db  0xff ; '.'
0000000000007c73         db  0xff ; '.'
0000000000007c74         db  0xdc ; '.'
0000000000007c75         db  0xcc ; '.'
0000000000007c76         db  0xff ; '.'
0000000000007c77         db  0xff ; '.'
0000000000007c78         db  0xdc ; '.'
0000000000007c79         db  0xcc ; '.'
0000000000007c7a         db  0xff ; '.'
0000000000007c7b         db  0xff ; '.'
0000000000007c7c         db  0xdc ; '.'
0000000000007c7d         db  0xcc ; '.'
0000000000007c7e         db  0xff ; '.'
0000000000007c7f         db  0xff ; '.'
0000000000007c80         db  0xdc ; '.'
0000000000007c81         db  0xcc ; '.'
0000000000007c82         db  0xff ; '.'
0000000000007c83         db  0xff ; '.'
0000000000007c84         db  0xdc ; '.'
0000000000007c85         db  0xcc ; '.'
0000000000007c86         db  0xff ; '.'
0000000000007c87         db  0xff ; '.'
0000000000007c88         db  0xdc ; '.'
0000000000007c89         db  0xcc ; '.'
0000000000007c8a         db  0xff ; '.'
0000000000007c8b         db  0xff ; '.'
0000000000007c8c         db  0xdc ; '.'
0000000000007c8d         db  0xcc ; '.'
0000000000007c8e         db  0xff ; '.'
0000000000007c8f         db  0xff ; '.'
0000000000007c90         db  0xdc ; '.'
0000000000007c91         db  0xcc ; '.'
0000000000007c92         db  0xff ; '.'
0000000000007c93         db  0xff ; '.'
0000000000007c94         db  0xdc ; '.'
0000000000007c95         db  0xcc ; '.'
0000000000007c96         db  0xff ; '.'
0000000000007c97         db  0xff ; '.'
0000000000007c98         db  0x34 ; '4'
0000000000007c99         db  0xcd ; '.'
0000000000007c9a         db  0xff ; '.'
0000000000007c9b         db  0xff ; '.'
0000000000007c9c         db  0x0c ; '.'
0000000000007c9d         db  0xcc ; '.'
0000000000007c9e         db  0xff ; '.'
0000000000007c9f         db  0xff ; '.'
0000000000007ca0         db  0xdc ; '.'
0000000000007ca1         db  0xcc ; '.'
0000000000007ca2         db  0xff ; '.'
0000000000007ca3         db  0xff ; '.'
0000000000007ca4         db  0x34 ; '4'
0000000000007ca5         db  0xcd ; '.'
0000000000007ca6         db  0xff ; '.'
0000000000007ca7         db  0xff ; '.'
0000000000007ca8         db  0xdc ; '.'
0000000000007ca9         db  0xcc ; '.'
0000000000007caa         db  0xff ; '.'
0000000000007cab         db  0xff ; '.'
0000000000007cac         db  0x34 ; '4'
0000000000007cad         db  0xcd ; '.'
0000000000007cae         db  0xff ; '.'
0000000000007caf         db  0xff ; '.'
0000000000007cb0         db  0xdc ; '.'
0000000000007cb1         db  0xcc ; '.'
0000000000007cb2         db  0xff ; '.'
0000000000007cb3         db  0xff ; '.'
0000000000007cb4         db  0xdc ; '.'
0000000000007cb5         db  0xcc ; '.'
0000000000007cb6         db  0xff ; '.'
0000000000007cb7         db  0xff ; '.'
0000000000007cb8         db  0xdc ; '.'
0000000000007cb9         db  0xcc ; '.'
0000000000007cba         db  0xff ; '.'
0000000000007cbb         db  0xff ; '.'
0000000000007cbc         db  0xdc ; '.'
0000000000007cbd         db  0xcc ; '.'
0000000000007cbe         db  0xff ; '.'
0000000000007cbf         db  0xff ; '.'
0000000000007cc0         db  0xdc ; '.'
0000000000007cc1         db  0xcc ; '.'
0000000000007cc2         db  0xff ; '.'
0000000000007cc3         db  0xff ; '.'
0000000000007cc4         db  0xdc ; '.'
0000000000007cc5         db  0xcc ; '.'
0000000000007cc6         db  0xff ; '.'
0000000000007cc7         db  0xff ; '.'
0000000000007cc8         db  0xdc ; '.'
0000000000007cc9         db  0xcc ; '.'
0000000000007cca         db  0xff ; '.'
0000000000007ccb         db  0xff ; '.'
0000000000007ccc         db  0xdc ; '.'
0000000000007ccd         db  0xcc ; '.'
0000000000007cce         db  0xff ; '.'
0000000000007ccf         db  0xff ; '.'
0000000000007cd0         db  0xdc ; '.'
0000000000007cd1         db  0xcc ; '.'
0000000000007cd2         db  0xff ; '.'
0000000000007cd3         db  0xff ; '.'
0000000000007cd4         db  0xdc ; '.'
0000000000007cd5         db  0xcc ; '.'
0000000000007cd6         db  0xff ; '.'
0000000000007cd7         db  0xff ; '.'
0000000000007cd8         db  0xdc ; '.'
0000000000007cd9         db  0xcc ; '.'
0000000000007cda         db  0xff ; '.'
0000000000007cdb         db  0xff ; '.'
0000000000007cdc         db  0xdc ; '.'
0000000000007cdd         db  0xcc ; '.'
0000000000007cde         db  0xff ; '.'
0000000000007cdf         db  0xff ; '.'
0000000000007ce0         db  0xdc ; '.'
0000000000007ce1         db  0xcc ; '.'
0000000000007ce2         db  0xff ; '.'
0000000000007ce3         db  0xff ; '.'
0000000000007ce4         db  0xdc ; '.'
0000000000007ce5         db  0xcc ; '.'
0000000000007ce6         db  0xff ; '.'
0000000000007ce7         db  0xff ; '.'
0000000000007ce8         db  0xdc ; '.'
0000000000007ce9         db  0xcc ; '.'
0000000000007cea         db  0xff ; '.'
0000000000007ceb         db  0xff ; '.'
0000000000007cec         db  0xdc ; '.'
0000000000007ced         db  0xcc ; '.'
0000000000007cee         db  0xff ; '.'
0000000000007cef         db  0xff ; '.'
0000000000007cf0         db  0xdc ; '.'
0000000000007cf1         db  0xcc ; '.'
0000000000007cf2         db  0xff ; '.'
0000000000007cf3         db  0xff ; '.'
0000000000007cf4         db  0xdc ; '.'
0000000000007cf5         db  0xcc ; '.'
0000000000007cf6         db  0xff ; '.'
0000000000007cf7         db  0xff ; '.'
0000000000007cf8         db  0xdc ; '.'
0000000000007cf9         db  0xcc ; '.'
0000000000007cfa         db  0xff ; '.'
0000000000007cfb         db  0xff ; '.'
0000000000007cfc         db  0xdc ; '.'
0000000000007cfd         db  0xcc ; '.'
0000000000007cfe         db  0xff ; '.'
0000000000007cff         db  0xff ; '.'
0000000000007d00         db  0xdc ; '.'
0000000000007d01         db  0xcc ; '.'
0000000000007d02         db  0xff ; '.'
0000000000007d03         db  0xff ; '.'
0000000000007d04         db  0xdc ; '.'
0000000000007d05         db  0xcc ; '.'
0000000000007d06         db  0xff ; '.'
0000000000007d07         db  0xff ; '.'
0000000000007d08         db  0xdc ; '.'
0000000000007d09         db  0xcc ; '.'
0000000000007d0a         db  0xff ; '.'
0000000000007d0b         db  0xff ; '.'
0000000000007d0c         db  0xdc ; '.'
0000000000007d0d         db  0xcc ; '.'
0000000000007d0e         db  0xff ; '.'
0000000000007d0f         db  0xff ; '.'
0000000000007d10         db  0xdc ; '.'
0000000000007d11         db  0xcc ; '.'
0000000000007d12         db  0xff ; '.'
0000000000007d13         db  0xff ; '.'
0000000000007d14         db  0xdc ; '.'
0000000000007d15         db  0xcc ; '.'
0000000000007d16         db  0xff ; '.'
0000000000007d17         db  0xff ; '.'
0000000000007d18         db  0x97 ; '.'
0000000000007d19         db  0xca ; '.'
0000000000007d1a         db  0xff ; '.'
0000000000007d1b         db  0xff ; '.'
0000000000007d1c         db  0x34 ; '4'
0000000000007d1d         db  0xcd ; '.'
0000000000007d1e         db  0xff ; '.'
0000000000007d1f         db  0xff ; '.'
0000000000007d20         db  0x97 ; '.'
0000000000007d21         db  0xca ; '.'
0000000000007d22         db  0xff ; '.'
0000000000007d23         db  0xff ; '.'
0000000000007d24         db  0x04 ; '.'
0000000000007d25         db  0xcd ; '.'
0000000000007d26         db  0xff ; '.'
0000000000007d27         db  0xff ; '.'
0000000000007d28         db  0x88 ; '.'                                         ; DATA XREF=sub_48b0+137
0000000000007d29         db  0xcc ; '.'
0000000000007d2a         db  0xff ; '.'
0000000000007d2b         db  0xff ; '.'
0000000000007d2c         db  0x98 ; '.'
0000000000007d2d         db  0xcb ; '.'
0000000000007d2e         db  0xff ; '.'
0000000000007d2f         db  0xff ; '.'
0000000000007d30         db  0x98 ; '.'
0000000000007d31         db  0xcb ; '.'
0000000000007d32         db  0xff ; '.'
0000000000007d33         db  0xff ; '.'
0000000000007d34         db  0x98 ; '.'
0000000000007d35         db  0xcb ; '.'
0000000000007d36         db  0xff ; '.'
0000000000007d37         db  0xff ; '.'
0000000000007d38         db  0x98 ; '.'
0000000000007d39         db  0xcb ; '.'
0000000000007d3a         db  0xff ; '.'
0000000000007d3b         db  0xff ; '.'
0000000000007d3c         db  0x98 ; '.'
0000000000007d3d         db  0xcb ; '.'
0000000000007d3e         db  0xff ; '.'
0000000000007d3f         db  0xff ; '.'
0000000000007d40         db  0x98 ; '.'
0000000000007d41         db  0xcb ; '.'
0000000000007d42         db  0xff ; '.'
0000000000007d43         db  0xff ; '.'
0000000000007d44         db  0x78 ; 'x'
0000000000007d45         db  0xcc ; '.'
0000000000007d46         db  0xff ; '.'
0000000000007d47         db  0xff ; '.'
0000000000007d48         db  0xc8 ; '.'
0000000000007d49         db  0xcd ; '.'
0000000000007d4a         db  0xff ; '.'
0000000000007d4b         db  0xff ; '.'
0000000000007d4c         db  0xb0 ; '.'
0000000000007d4d         db  0xcd ; '.'
0000000000007d4e         db  0xff ; '.'
0000000000007d4f         db  0xff ; '.'
0000000000007d50         db  0x60 ; '`'
0000000000007d51         db  0xcc ; '.'
0000000000007d52         db  0xff ; '.'
0000000000007d53         db  0xff ; '.'
0000000000007d54         db  0xa0 ; '.'
0000000000007d55         db  0xcd ; '.'
0000000000007d56         db  0xff ; '.'
0000000000007d57         db  0xff ; '.'
0000000000007d58         db  0x48 ; 'H'
0000000000007d59         db  0xcc ; '.'
0000000000007d5a         db  0xff ; '.'
0000000000007d5b         db  0xff ; '.'
0000000000007d5c         db  0x88 ; '.'
0000000000007d5d         db  0xcd ; '.'
0000000000007d5e         db  0xff ; '.'
0000000000007d5f         db  0xff ; '.'
0000000000007d60         db  0x98 ; '.'
0000000000007d61         db  0xcb ; '.'
0000000000007d62         db  0xff ; '.'
0000000000007d63         db  0xff ; '.'
0000000000007d64         db  0x98 ; '.'
0000000000007d65         db  0xcb ; '.'
0000000000007d66         db  0xff ; '.'
0000000000007d67         db  0xff ; '.'
0000000000007d68         db  0x98 ; '.'
0000000000007d69         db  0xcb ; '.'
0000000000007d6a         db  0xff ; '.'
0000000000007d6b         db  0xff ; '.'
0000000000007d6c         db  0x98 ; '.'
0000000000007d6d         db  0xcb ; '.'
0000000000007d6e         db  0xff ; '.'
0000000000007d6f         db  0xff ; '.'
0000000000007d70         db  0x98 ; '.'
0000000000007d71         db  0xcb ; '.'
0000000000007d72         db  0xff ; '.'
0000000000007d73         db  0xff ; '.'
0000000000007d74         db  0x98 ; '.'
0000000000007d75         db  0xcb ; '.'
0000000000007d76         db  0xff ; '.'
0000000000007d77         db  0xff ; '.'
0000000000007d78         db  0x98 ; '.'
0000000000007d79         db  0xcb ; '.'
0000000000007d7a         db  0xff ; '.'
0000000000007d7b         db  0xff ; '.'
0000000000007d7c         db  0x98 ; '.'
0000000000007d7d         db  0xcb ; '.'
0000000000007d7e         db  0xff ; '.'
0000000000007d7f         db  0xff ; '.'
0000000000007d80         db  0x98 ; '.'
0000000000007d81         db  0xcb ; '.'
0000000000007d82         db  0xff ; '.'
0000000000007d83         db  0xff ; '.'
0000000000007d84         db  0x98 ; '.'
0000000000007d85         db  0xcb ; '.'
0000000000007d86         db  0xff ; '.'
0000000000007d87         db  0xff ; '.'
0000000000007d88         db  0x98 ; '.'
0000000000007d89         db  0xcb ; '.'
0000000000007d8a         db  0xff ; '.'
0000000000007d8b         db  0xff ; '.'
0000000000007d8c         db  0x98 ; '.'
0000000000007d8d         db  0xcb ; '.'
0000000000007d8e         db  0xff ; '.'
0000000000007d8f         db  0xff ; '.'
0000000000007d90         db  0x98 ; '.'
0000000000007d91         db  0xcb ; '.'
0000000000007d92         db  0xff ; '.'
0000000000007d93         db  0xff ; '.'
0000000000007d94         db  0x98 ; '.'
0000000000007d95         db  0xcb ; '.'
0000000000007d96         db  0xff ; '.'
0000000000007d97         db  0xff ; '.'
0000000000007d98         db  0x98 ; '.'
0000000000007d99         db  0xcb ; '.'
0000000000007d9a         db  0xff ; '.'
0000000000007d9b         db  0xff ; '.'
0000000000007d9c         db  0x98 ; '.'
0000000000007d9d         db  0xcb ; '.'
0000000000007d9e         db  0xff ; '.'
0000000000007d9f         db  0xff ; '.'
0000000000007da0         db  0x98 ; '.'
0000000000007da1         db  0xcb ; '.'
0000000000007da2         db  0xff ; '.'
0000000000007da3         db  0xff ; '.'
0000000000007da4         db  0x98 ; '.'
0000000000007da5         db  0xcb ; '.'
0000000000007da6         db  0xff ; '.'
0000000000007da7         db  0xff ; '.'
0000000000007da8         db  0x70 ; 'p'
0000000000007da9         db  0xcd ; '.'
0000000000007daa         db  0xff ; '.'
0000000000007dab         db  0xff ; '.'
0000000000007dac         db  0x58 ; 'X'
0000000000007dad         db  0xcd ; '.'
0000000000007dae         db  0xff ; '.'
0000000000007daf         db  0xff ; '.'
0000000000007db0         db  0x58 ; 'X'
0000000000007db1         db  0xcd ; '.'
0000000000007db2         db  0xff ; '.'
0000000000007db3         db  0xff ; '.'
0000000000007db4         db  0x40 ; '@'
0000000000007db5         db  0xcd ; '.'
0000000000007db6         db  0xff ; '.'
0000000000007db7         db  0xff ; '.'
0000000000007db8         db  0x58 ; 'X'
0000000000007db9         db  0xcd ; '.'
0000000000007dba         db  0xff ; '.'
0000000000007dbb         db  0xff ; '.'
0000000000007dbc         db  0x28 ; '('
0000000000007dbd         db  0xcd ; '.'
0000000000007dbe         db  0xff ; '.'
0000000000007dbf         db  0xff ; '.'
0000000000007dc0         db  0x58 ; 'X'
0000000000007dc1         db  0xcd ; '.'
0000000000007dc2         db  0xff ; '.'
0000000000007dc3         db  0xff ; '.'
0000000000007dc4         db  0x98 ; '.'
0000000000007dc5         db  0xc9 ; '.'
0000000000007dc6         db  0xff ; '.'
0000000000007dc7         db  0xff ; '.'
0000000000007dc8         db  0x58 ; 'X'
0000000000007dc9         db  0xcd ; '.'
0000000000007dca         db  0xff ; '.'
0000000000007dcb         db  0xff ; '.'
0000000000007dcc         db  0x58 ; 'X'
0000000000007dcd         db  0xcd ; '.'
0000000000007dce         db  0xff ; '.'
0000000000007dcf         db  0xff ; '.'
0000000000007dd0         db  0x58 ; 'X'
0000000000007dd1         db  0xcd ; '.'
0000000000007dd2         db  0xff ; '.'
0000000000007dd3         db  0xff ; '.'
0000000000007dd4         db  0x28 ; '('
0000000000007dd5         db  0xcd ; '.'
0000000000007dd6         db  0xff ; '.'
0000000000007dd7         db  0xff ; '.'
0000000000007dd8         db  0x28 ; '('
0000000000007dd9         db  0xcd ; '.'
0000000000007dda         db  0xff ; '.'
0000000000007ddb         db  0xff ; '.'
0000000000007ddc         db  0x28 ; '('
0000000000007ddd         db  0xcd ; '.'
0000000000007dde         db  0xff ; '.'
0000000000007ddf         db  0xff ; '.'
0000000000007de0         db  0x28 ; '('
0000000000007de1         db  0xcd ; '.'
0000000000007de2         db  0xff ; '.'
0000000000007de3         db  0xff ; '.'
0000000000007de4         db  0x28 ; '('
0000000000007de5         db  0xcd ; '.'
0000000000007de6         db  0xff ; '.'
0000000000007de7         db  0xff ; '.'
0000000000007de8         db  0x28 ; '('
0000000000007de9         db  0xcd ; '.'
0000000000007dea         db  0xff ; '.'
0000000000007deb         db  0xff ; '.'
0000000000007dec         db  0x28 ; '('
0000000000007ded         db  0xcd ; '.'
0000000000007dee         db  0xff ; '.'
0000000000007def         db  0xff ; '.'
0000000000007df0         db  0x28 ; '('
0000000000007df1         db  0xcd ; '.'
0000000000007df2         db  0xff ; '.'
0000000000007df3         db  0xff ; '.'
0000000000007df4         db  0x28 ; '('
0000000000007df5         db  0xcd ; '.'
0000000000007df6         db  0xff ; '.'
0000000000007df7         db  0xff ; '.'
0000000000007df8         db  0x28 ; '('
0000000000007df9         db  0xcd ; '.'
0000000000007dfa         db  0xff ; '.'
0000000000007dfb         db  0xff ; '.'
0000000000007dfc         db  0x28 ; '('
0000000000007dfd         db  0xcd ; '.'
0000000000007dfe         db  0xff ; '.'
0000000000007dff         db  0xff ; '.'
0000000000007e00         db  0x28 ; '('
0000000000007e01         db  0xcd ; '.'
0000000000007e02         db  0xff ; '.'
0000000000007e03         db  0xff ; '.'
0000000000007e04         db  0x28 ; '('
0000000000007e05         db  0xcd ; '.'
0000000000007e06         db  0xff ; '.'
0000000000007e07         db  0xff ; '.'
0000000000007e08         db  0x28 ; '('
0000000000007e09         db  0xcd ; '.'
0000000000007e0a         db  0xff ; '.'
0000000000007e0b         db  0xff ; '.'
0000000000007e0c         db  0x28 ; '('
0000000000007e0d         db  0xcd ; '.'
0000000000007e0e         db  0xff ; '.'
0000000000007e0f         db  0xff ; '.'
0000000000007e10         db  0x28 ; '('
0000000000007e11         db  0xcd ; '.'
0000000000007e12         db  0xff ; '.'
0000000000007e13         db  0xff ; '.'
0000000000007e14         db  0x58 ; 'X'
0000000000007e15         db  0xcd ; '.'
0000000000007e16         db  0xff ; '.'
0000000000007e17         db  0xff ; '.'
0000000000007e18         db  0x58 ; 'X'
0000000000007e19         db  0xcd ; '.'
0000000000007e1a         db  0xff ; '.'
0000000000007e1b         db  0xff ; '.'
0000000000007e1c         db  0x58 ; 'X'
0000000000007e1d         db  0xcd ; '.'
0000000000007e1e         db  0xff ; '.'
0000000000007e1f         db  0xff ; '.'
0000000000007e20         db  0x58 ; 'X'
0000000000007e21         db  0xcd ; '.'
0000000000007e22         db  0xff ; '.'
0000000000007e23         db  0xff ; '.'
0000000000007e24         db  0x68 ; 'h'
0000000000007e25         db  0xc9 ; '.'
0000000000007e26         db  0xff ; '.'
0000000000007e27         db  0xff ; '.'
0000000000007e28         db  0x98 ; '.'
0000000000007e29         db  0xcb ; '.'
0000000000007e2a         db  0xff ; '.'
0000000000007e2b         db  0xff ; '.'
0000000000007e2c         db  0x28 ; '('
0000000000007e2d         db  0xcd ; '.'
0000000000007e2e         db  0xff ; '.'
0000000000007e2f         db  0xff ; '.'
0000000000007e30         db  0x28 ; '('
0000000000007e31         db  0xcd ; '.'
0000000000007e32         db  0xff ; '.'
0000000000007e33         db  0xff ; '.'
0000000000007e34         db  0x28 ; '('
0000000000007e35         db  0xcd ; '.'
0000000000007e36         db  0xff ; '.'
0000000000007e37         db  0xff ; '.'
0000000000007e38         db  0x28 ; '('
0000000000007e39         db  0xcd ; '.'
0000000000007e3a         db  0xff ; '.'
0000000000007e3b         db  0xff ; '.'
0000000000007e3c         db  0x28 ; '('
0000000000007e3d         db  0xcd ; '.'
0000000000007e3e         db  0xff ; '.'
0000000000007e3f         db  0xff ; '.'
0000000000007e40         db  0x28 ; '('
0000000000007e41         db  0xcd ; '.'
0000000000007e42         db  0xff ; '.'
0000000000007e43         db  0xff ; '.'
0000000000007e44         db  0x28 ; '('
0000000000007e45         db  0xcd ; '.'
0000000000007e46         db  0xff ; '.'
0000000000007e47         db  0xff ; '.'
0000000000007e48         db  0x28 ; '('
0000000000007e49         db  0xcd ; '.'
0000000000007e4a         db  0xff ; '.'
0000000000007e4b         db  0xff ; '.'
0000000000007e4c         db  0x28 ; '('
0000000000007e4d         db  0xcd ; '.'
0000000000007e4e         db  0xff ; '.'
0000000000007e4f         db  0xff ; '.'
0000000000007e50         db  0x28 ; '('
0000000000007e51         db  0xcd ; '.'
0000000000007e52         db  0xff ; '.'
0000000000007e53         db  0xff ; '.'
0000000000007e54         db  0x28 ; '('
0000000000007e55         db  0xcd ; '.'
0000000000007e56         db  0xff ; '.'
0000000000007e57         db  0xff ; '.'
0000000000007e58         db  0x28 ; '('
0000000000007e59         db  0xcd ; '.'
0000000000007e5a         db  0xff ; '.'
0000000000007e5b         db  0xff ; '.'
0000000000007e5c         db  0x28 ; '('
0000000000007e5d         db  0xcd ; '.'
0000000000007e5e         db  0xff ; '.'
0000000000007e5f         db  0xff ; '.'
0000000000007e60         db  0x28 ; '('
0000000000007e61         db  0xcd ; '.'
0000000000007e62         db  0xff ; '.'
0000000000007e63         db  0xff ; '.'
0000000000007e64         db  0x28 ; '('
0000000000007e65         db  0xcd ; '.'
0000000000007e66         db  0xff ; '.'
0000000000007e67         db  0xff ; '.'
0000000000007e68         db  0x28 ; '('
0000000000007e69         db  0xcd ; '.'
0000000000007e6a         db  0xff ; '.'
0000000000007e6b         db  0xff ; '.'
0000000000007e6c         db  0x28 ; '('
0000000000007e6d         db  0xcd ; '.'
0000000000007e6e         db  0xff ; '.'
0000000000007e6f         db  0xff ; '.'
0000000000007e70         db  0x28 ; '('
0000000000007e71         db  0xcd ; '.'
0000000000007e72         db  0xff ; '.'
0000000000007e73         db  0xff ; '.'
0000000000007e74         db  0x28 ; '('
0000000000007e75         db  0xcd ; '.'
0000000000007e76         db  0xff ; '.'
0000000000007e77         db  0xff ; '.'
0000000000007e78         db  0x28 ; '('
0000000000007e79         db  0xcd ; '.'
0000000000007e7a         db  0xff ; '.'
0000000000007e7b         db  0xff ; '.'
0000000000007e7c         db  0x28 ; '('
0000000000007e7d         db  0xcd ; '.'
0000000000007e7e         db  0xff ; '.'
0000000000007e7f         db  0xff ; '.'
0000000000007e80         db  0x28 ; '('
0000000000007e81         db  0xcd ; '.'
0000000000007e82         db  0xff ; '.'
0000000000007e83         db  0xff ; '.'
0000000000007e84         db  0x28 ; '('
0000000000007e85         db  0xcd ; '.'
0000000000007e86         db  0xff ; '.'
0000000000007e87         db  0xff ; '.'
0000000000007e88         db  0x28 ; '('
0000000000007e89         db  0xcd ; '.'
0000000000007e8a         db  0xff ; '.'
0000000000007e8b         db  0xff ; '.'
0000000000007e8c         db  0x28 ; '('
0000000000007e8d         db  0xcd ; '.'
0000000000007e8e         db  0xff ; '.'
0000000000007e8f         db  0xff ; '.'
0000000000007e90         db  0x28 ; '('
0000000000007e91         db  0xcd ; '.'
0000000000007e92         db  0xff ; '.'
0000000000007e93         db  0xff ; '.'
0000000000007e94         db  0x58 ; 'X'
0000000000007e95         db  0xcd ; '.'
0000000000007e96         db  0xff ; '.'
0000000000007e97         db  0xff ; '.'
0000000000007e98         db  0x28 ; '('
0000000000007e99         db  0xcc ; '.'
0000000000007e9a         db  0xff ; '.'
0000000000007e9b         db  0xff ; '.'
0000000000007e9c         db  0x28 ; '('
0000000000007e9d         db  0xcd ; '.'
0000000000007e9e         db  0xff ; '.'
0000000000007e9f         db  0xff ; '.'
0000000000007ea0         db  0x58 ; 'X'
0000000000007ea1         db  0xcd ; '.'
0000000000007ea2         db  0xff ; '.'
0000000000007ea3         db  0xff ; '.'
0000000000007ea4         db  0x28 ; '('
0000000000007ea5         db  0xcd ; '.'
0000000000007ea6         db  0xff ; '.'
0000000000007ea7         db  0xff ; '.'
0000000000007ea8         db  0x58 ; 'X'
0000000000007ea9         db  0xcd ; '.'
0000000000007eaa         db  0xff ; '.'
0000000000007eab         db  0xff ; '.'
0000000000007eac         db  0x28 ; '('
0000000000007ead         db  0xcd ; '.'
0000000000007eae         db  0xff ; '.'
0000000000007eaf         db  0xff ; '.'
0000000000007eb0         db  0x28 ; '('
0000000000007eb1         db  0xcd ; '.'
0000000000007eb2         db  0xff ; '.'
0000000000007eb3         db  0xff ; '.'
0000000000007eb4         db  0x28 ; '('
0000000000007eb5         db  0xcd ; '.'
0000000000007eb6         db  0xff ; '.'
0000000000007eb7         db  0xff ; '.'
0000000000007eb8         db  0x28 ; '('
0000000000007eb9         db  0xcd ; '.'
0000000000007eba         db  0xff ; '.'
0000000000007ebb         db  0xff ; '.'
0000000000007ebc         db  0x28 ; '('
0000000000007ebd         db  0xcd ; '.'
0000000000007ebe         db  0xff ; '.'
0000000000007ebf         db  0xff ; '.'
0000000000007ec0         db  0x28 ; '('
0000000000007ec1         db  0xcd ; '.'
0000000000007ec2         db  0xff ; '.'
0000000000007ec3         db  0xff ; '.'
0000000000007ec4         db  0x28 ; '('
0000000000007ec5         db  0xcd ; '.'
0000000000007ec6         db  0xff ; '.'
0000000000007ec7         db  0xff ; '.'
0000000000007ec8         db  0x28 ; '('
0000000000007ec9         db  0xcd ; '.'
0000000000007eca         db  0xff ; '.'
0000000000007ecb         db  0xff ; '.'
0000000000007ecc         db  0x28 ; '('
0000000000007ecd         db  0xcd ; '.'
0000000000007ece         db  0xff ; '.'
0000000000007ecf         db  0xff ; '.'
0000000000007ed0         db  0x28 ; '('
0000000000007ed1         db  0xcd ; '.'
0000000000007ed2         db  0xff ; '.'
0000000000007ed3         db  0xff ; '.'
0000000000007ed4         db  0x28 ; '('
0000000000007ed5         db  0xcd ; '.'
0000000000007ed6         db  0xff ; '.'
0000000000007ed7         db  0xff ; '.'
0000000000007ed8         db  0x28 ; '('
0000000000007ed9         db  0xcd ; '.'
0000000000007eda         db  0xff ; '.'
0000000000007edb         db  0xff ; '.'
0000000000007edc         db  0x28 ; '('
0000000000007edd         db  0xcd ; '.'
0000000000007ede         db  0xff ; '.'
0000000000007edf         db  0xff ; '.'
0000000000007ee0         db  0x28 ; '('
0000000000007ee1         db  0xcd ; '.'
0000000000007ee2         db  0xff ; '.'
0000000000007ee3         db  0xff ; '.'
0000000000007ee4         db  0x28 ; '('
0000000000007ee5         db  0xcd ; '.'
0000000000007ee6         db  0xff ; '.'
0000000000007ee7         db  0xff ; '.'
0000000000007ee8         db  0x28 ; '('
0000000000007ee9         db  0xcd ; '.'
0000000000007eea         db  0xff ; '.'
0000000000007eeb         db  0xff ; '.'
0000000000007eec         db  0x28 ; '('
0000000000007eed         db  0xcd ; '.'
0000000000007eee         db  0xff ; '.'
0000000000007eef         db  0xff ; '.'
0000000000007ef0         db  0x28 ; '('
0000000000007ef1         db  0xcd ; '.'
0000000000007ef2         db  0xff ; '.'
0000000000007ef3         db  0xff ; '.'
0000000000007ef4         db  0x28 ; '('
0000000000007ef5         db  0xcd ; '.'
0000000000007ef6         db  0xff ; '.'
0000000000007ef7         db  0xff ; '.'
0000000000007ef8         db  0x28 ; '('
0000000000007ef9         db  0xcd ; '.'
0000000000007efa         db  0xff ; '.'
0000000000007efb         db  0xff ; '.'
0000000000007efc         db  0x28 ; '('
0000000000007efd         db  0xcd ; '.'
0000000000007efe         db  0xff ; '.'
0000000000007eff         db  0xff ; '.'
0000000000007f00         db  0x28 ; '('
0000000000007f01         db  0xcd ; '.'
0000000000007f02         db  0xff ; '.'
0000000000007f03         db  0xff ; '.'
0000000000007f04         db  0x28 ; '('
0000000000007f05         db  0xcd ; '.'
0000000000007f06         db  0xff ; '.'
0000000000007f07         db  0xff ; '.'
0000000000007f08         db  0x28 ; '('
0000000000007f09         db  0xcd ; '.'
0000000000007f0a         db  0xff ; '.'
0000000000007f0b         db  0xff ; '.'
0000000000007f0c         db  0x28 ; '('
0000000000007f0d         db  0xcd ; '.'
0000000000007f0e         db  0xff ; '.'
0000000000007f0f         db  0xff ; '.'
0000000000007f10         db  0x28 ; '('
0000000000007f11         db  0xcd ; '.'
0000000000007f12         db  0xff ; '.'
0000000000007f13         db  0xff ; '.'
0000000000007f14         db  0x98 ; '.'
0000000000007f15         db  0xc8 ; '.'
0000000000007f16         db  0xff ; '.'
0000000000007f17         db  0xff ; '.'
0000000000007f18         db  0x58 ; 'X'
0000000000007f19         db  0xcd ; '.'
0000000000007f1a         db  0xff ; '.'
0000000000007f1b         db  0xff ; '.'
0000000000007f1c         db  0x98 ; '.'
0000000000007f1d         db  0xc8 ; '.'
0000000000007f1e         db  0xff ; '.'
0000000000007f1f         db  0xff ; '.'
0000000000007f20         db  0x40 ; '@'
0000000000007f21         db  0xcd ; '.'
0000000000007f22         db  0xff ; '.'
0000000000007f23         db  0xff ; '.'
0000000000007f24         db  0x00 ; '.'
0000000000007f25         db  0x00 ; '.'
0000000000007f26         db  0x00 ; '.'
0000000000007f27         db  0x00 ; '.'
0000000000007f28         db  0x00 ; '.'
0000000000007f29         db  0x00 ; '.'
0000000000007f2a         db  0x00 ; '.'
0000000000007f2b         db  0x00 ; '.'
0000000000007f2c         db  0x00 ; '.'
0000000000007f2d         db  0x00 ; '.'
0000000000007f2e         db  0x00 ; '.'
0000000000007f2f         db  0x00 ; '.'
0000000000007f30         db  0x00 ; '.'
0000000000007f31         db  0x00 ; '.'
0000000000007f32         db  0x00 ; '.'
0000000000007f33         db  0x00 ; '.'
0000000000007f34         db  0x00 ; '.'
0000000000007f35         db  0x00 ; '.'
0000000000007f36         db  0x00 ; '.'
0000000000007f37         db  0x00 ; '.'
0000000000007f38         db  0x00 ; '.'
0000000000007f39         db  0x00 ; '.'
0000000000007f3a         db  0x00 ; '.'
0000000000007f3b         db  0x00 ; '.'
0000000000007f3c         db  0x00 ; '.'
0000000000007f3d         db  0x00 ; '.'
0000000000007f3e         db  0x00 ; '.'
0000000000007f3f         db  0x00 ; '.'
                     quoting_style_vals:
0000000000007f40         db  0x00 ; '.'
0000000000007f41         db  0x00 ; '.'
0000000000007f42         db  0x00 ; '.'
0000000000007f43         db  0x00 ; '.'
0000000000007f44         db  0x01 ; '.'
0000000000007f45         db  0x00 ; '.'
0000000000007f46         db  0x00 ; '.'
0000000000007f47         db  0x00 ; '.'
0000000000007f48         db  0x02 ; '.'
0000000000007f49         db  0x00 ; '.'
0000000000007f4a         db  0x00 ; '.'
0000000000007f4b         db  0x00 ; '.'
0000000000007f4c         db  0x03 ; '.'
0000000000007f4d         db  0x00 ; '.'
0000000000007f4e         db  0x00 ; '.'
0000000000007f4f         db  0x00 ; '.'
0000000000007f50         db  0x04 ; '.'
0000000000007f51         db  0x00 ; '.'
0000000000007f52         db  0x00 ; '.'
0000000000007f53         db  0x00 ; '.'
0000000000007f54         db  0x05 ; '.'
0000000000007f55         db  0x00 ; '.'
0000000000007f56         db  0x00 ; '.'
0000000000007f57         db  0x00 ; '.'
0000000000007f58         db  0x06 ; '.'
0000000000007f59         db  0x00 ; '.'
0000000000007f5a         db  0x00 ; '.'
0000000000007f5b         db  0x00 ; '.'
0000000000007f5c         db  0x07 ; '.'
0000000000007f5d         db  0x00 ; '.'
0000000000007f5e         db  0x00 ; '.'
0000000000007f5f         db  0x00 ; '.'
0000000000007f60         db  0x08 ; '.'
0000000000007f61         db  0x00 ; '.'
0000000000007f62         db  0x00 ; '.'
0000000000007f63         db  0x00 ; '.'
0000000000007f64         db  0x09 ; '.'
0000000000007f65         db  0x00 ; '.'
0000000000007f66         db  0x00 ; '.'
0000000000007f67         db  0x00 ; '.'
                     aSSSn:
0000000000007f68         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
0000000000007f74         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
0000000000007f7b         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
0000000000007f7c         db  0x43 ; 'C'
0000000000007f7d         db  0x29 ; ')'
0000000000007f7e         db  0x00 ; '.'
                     aWrittenBySn:
0000000000007f7f         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
0000000000007f8f         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
0000000000007fa6         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
0000000000007fc2         db  0x0a ; '.'                                         ; DATA XREF=emit_bug_reporting_address+1
0000000000007fc3         db  0x52 ; 'R'
0000000000007fc4         db  0x65 ; 'e'
0000000000007fc5         db  0x70 ; 'p'
0000000000007fc6         db  0x6f ; 'o'
0000000000007fc7         db  0x72 ; 'r'
0000000000007fc8         db  0x74 ; 't'
0000000000007fc9         db  0x20 ; ' '
0000000000007fca         db  0x62 ; 'b'
0000000000007fcb         db  0x75 ; 'u'
0000000000007fcc         db  0x67 ; 'g'
0000000000007fcd         db  0x73 ; 's'
0000000000007fce         db  0x20 ; ' '
0000000000007fcf         db  0x74 ; 't'
0000000000007fd0         db  0x6f ; 'o'
                     aSn:
0000000000007fd1         db         ": %s\n", 0                                 ; DATA XREF=main+1906
                     aBugcoreutilsgn:
0000000000007fd7         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
0000000000007fed         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
0000000000008001         db  0x00 ; '.'
0000000000008002         db  0x00 ; '.'
0000000000008003         db  0x00 ; '.'
0000000000008004         db  0x00 ; '.'
0000000000008005         db  0x00 ; '.'
0000000000008006         db  0x00 ; '.'
0000000000008007         db  0x00 ; '.'
0000000000008008         db  0x0a ; '.'                                         ; DATA XREF=version_etc_arn+110
0000000000008009         db  0x4c ; 'L'
000000000000800a         db  0x69 ; 'i'
000000000000800b         db  0x63 ; 'c'
000000000000800c         db  0x65 ; 'e'
000000000000800d         db  0x6e ; 'n'
000000000000800e         db  0x73 ; 's'
000000000000800f         db  0x65 ; 'e'
0000000000008010         db  0x20 ; ' '
0000000000008011         db  0x47 ; 'G'
0000000000008012         db  0x50 ; 'P'
0000000000008013         db  0x4c ; 'L'
0000000000008014         db  0x76 ; 'v'
0000000000008015         db  0x33 ; '3'
0000000000008016         db  0x2b ; '+'
0000000000008017         db  0x3a ; ':'
0000000000008018         db  0x20 ; ' '
0000000000008019         db  0x47 ; 'G'
000000000000801a         db  0x4e ; 'N'
000000000000801b         db  0x55 ; 'U'
000000000000801c         db  0x20 ; ' '
000000000000801d         db  0x47 ; 'G'
000000000000801e         db  0x50 ; 'P'
000000000000801f         db  0x4c ; 'L'
0000000000008020         db  0x20 ; ' '
0000000000008021         db  0x76 ; 'v'
0000000000008022         db  0x65 ; 'e'
0000000000008023         db  0x72 ; 'r'
0000000000008024         db  0x73 ; 's'
0000000000008025         db  0x69 ; 'i'
0000000000008026         db  0x6f ; 'o'
0000000000008027         db  0x6e ; 'n'
0000000000008028         db  0x20 ; ' '
0000000000008029         db  0x33 ; '3'
000000000000802a         db  0x20 ; ' '
000000000000802b         db  0x6f ; 'o'
000000000000802c         db  0x72 ; 'r'
000000000000802d         db  0x20 ; ' '
000000000000802e         db  0x6c ; 'l'
000000000000802f         db  0x61 ; 'a'
0000000000008030         db  0x74 ; 't'
0000000000008031         db  0x65 ; 'e'
0000000000008032         db  0x72 ; 'r'
0000000000008033         db  0x20 ; ' '
0000000000008034         db  0x3c ; '<'
0000000000008035         db  0x68 ; 'h'
0000000000008036         db  0x74 ; 't'
0000000000008037         db  0x74 ; 't'
0000000000008038         db  0x70 ; 'p'
0000000000008039         db  0x73 ; 's'
000000000000803a         db  0x3a ; ':'
000000000000803b         db  0x2f ; '/'
000000000000803c         db  0x2f ; '/'
000000000000803d         db  0x67 ; 'g'
000000000000803e         db  0x6e ; 'n'
000000000000803f         db  0x75 ; 'u'
0000000000008040         db  0x2e ; '.'
0000000000008041         db  0x6f ; 'o'
0000000000008042         db  0x72 ; 'r'
0000000000008043         db  0x67 ; 'g'
0000000000008044         db  0x2f ; '/'
0000000000008045         db  0x6c ; 'l'
0000000000008046         db  0x69 ; 'i'
0000000000008047         db  0x63 ; 'c'
                     aEnsesgplhtmlnt:
0000000000008048         db         "enses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=md5_stream+16
00000000000080d4         align      8
                     aWrittenBySSSna:
00000000000080d8         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_80f8:        // aWrittenBySSSns
00000000000080f8         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
000000000000811c         align      32
                     aWrittenBySSSns_8120:        // aWrittenBySSSns
0000000000008120         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_8148:        // aWrittenBySSSns
0000000000008148         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
0000000000008174         align      8
                     aWrittenBySSSns_8178:        // aWrittenBySSSns
0000000000008178         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
00000000000081a8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
00000000000081dc         align      32
                     aWrittenBySSSns_81e0:        // aWrittenBySSSns
00000000000081e0         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
000000000000821c         align      32
                     aGeneralHelpUsi:
0000000000008220         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
0000000000008261         align      8
                     switch_table_8268:        // switch_table
0000000000008268         dd         version_etc_arn.loc_60a6-switch_table_8268, version_etc_arn.loc_6138-switch_table_8268, version_etc_arn.loc_6178-switch_table_8268, version_etc_arn.loc_61c0-switch_table_8268 ; switch table used at 0x6024 containing 10 entries, DATA XREF=version_etc_arn+150
0000000000008278         dd         version_etc_arn.loc_6210-switch_table_8268, version_etc_arn.loc_6268-switch_table_8268, version_etc_arn.loc_6298-switch_table_8268, version_etc_arn.loc_6300-switch_table_8268
0000000000008288         dd         version_etc_arn.loc_6030-switch_table_8268, version_etc_arn.loc_60e0-switch_table_8268
0000000000008290         align      32
                     version_etc_copyright:
00000000000082a0         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
00000000000082cf         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
00000000000082e0         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
00000000000082e1         db  0x00 ; '.'
                     aPosix:
00000000000082e2         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aAscii:
00000000000082e8         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
00000000000082ee         db  0x00 ; '.'
00000000000082ef         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0x82f0; 0x85ac[ (700 bytes)
        ; File offset : [33520; 34220[ (700 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

00000000000082f0         db  0x01 ; '.'
00000000000082f1         db  0x1b ; '.'
00000000000082f2         db  0x03 ; '.'
00000000000082f3         db  0x3b ; ';'
00000000000082f4         db  0xbc ; '.'
00000000000082f5         db  0x02 ; '.'
00000000000082f6         db  0x00 ; '.'
00000000000082f7         db  0x00 ; '.'
00000000000082f8         db  0x56 ; 'V'
00000000000082f9         db  0x00 ; '.'
00000000000082fa         db  0x00 ; '.'
00000000000082fb         db  0x00 ; '.'
00000000000082fc         db  0xb0 ; '.'
00000000000082fd         db  0x92 ; '.'
00000000000082fe         db  0xff ; '.'
00000000000082ff         db  0xff ; '.'
0000000000008300         db  0x08 ; '.'
0000000000008301         db  0x03 ; '.'
0000000000008302         db  0x00 ; '.'
0000000000008303         db  0x00 ; '.'
0000000000008304         db  0x00 ; '.'
0000000000008305         db  0x96 ; '.'
0000000000008306         db  0xff ; '.'
0000000000008307         db  0xff ; '.'
0000000000008308         db  0x30 ; '0'
0000000000008309         db  0x03 ; '.'
000000000000830a         db  0x00 ; '.'
000000000000830b         db  0x00 ; '.'
000000000000830c         db  0x10 ; '.'
000000000000830d         db  0x96 ; '.'
000000000000830e         db  0xff ; '.'
000000000000830f         db  0xff ; '.'
0000000000008310         db  0x44 ; 'D'
0000000000008311         db  0x04 ; '.'
0000000000008312         db  0x00 ; '.'
0000000000008313         db  0x00 ; '.'
0000000000008314         db  0x50 ; 'P'
0000000000008315         db  0xa7 ; '.'
0000000000008316         db  0xff ; '.'
0000000000008317         db  0xff ; '.'
0000000000008318         db  0xd8 ; '.'
0000000000008319         db  0x02 ; '.'
000000000000831a         db  0x00 ; '.'
000000000000831b         db  0x00 ; '.'
000000000000831c         db  0x60 ; '`'
000000000000831d         db  0xa8 ; '.'
000000000000831e         db  0xff ; '.'
000000000000831f         db  0xff ; '.'
0000000000008320         db  0x48 ; 'H'
0000000000008321         db  0x03 ; '.'
0000000000008322         db  0x00 ; '.'
0000000000008323         db  0x00 ; '.'
0000000000008324         db  0xe0 ; '.'
0000000000008325         db  0xa8 ; '.'
0000000000008326         db  0xff ; '.'
0000000000008327         db  0xff ; '.'
0000000000008328         db  0x5c ; '\'
0000000000008329         db  0x03 ; '.'
000000000000832a         db  0x00 ; '.'
000000000000832b         db  0x00 ; '.'
000000000000832c         db  0x40 ; '@'
000000000000832d         db  0xa9 ; '.'
000000000000832e         db  0xff ; '.'
000000000000832f         db  0xff ; '.'
0000000000008330         db  0x90 ; '.'
0000000000008331         db  0x03 ; '.'
0000000000008332         db  0x00 ; '.'
0000000000008333         db  0x00 ; '.'
0000000000008334         db  0x10 ; '.'
0000000000008335         db  0xaa ; '.'
0000000000008336         db  0xff ; '.'
0000000000008337         db  0xff ; '.'
0000000000008338         db  0xc8 ; '.'
0000000000008339         db  0x03 ; '.'
000000000000833a         db  0x00 ; '.'
000000000000833b         db  0x00 ; '.'
000000000000833c         db  0xb0 ; '.'
000000000000833d         db  0xab ; '.'
000000000000833e         db  0xff ; '.'
000000000000833f         db  0xff ; '.'
0000000000008340         db  0x18 ; '.'
0000000000008341         db  0x04 ; '.'
0000000000008342         db  0x00 ; '.'
0000000000008343         db  0x00 ; '.'
0000000000008344         db  0x10 ; '.'
0000000000008345         db  0xb0 ; '.'
0000000000008346         db  0xff ; '.'
0000000000008347         db  0xff ; '.'
0000000000008348         db  0xa0 ; '.'
0000000000008349         db  0x04 ; '.'
000000000000834a         db  0x00 ; '.'
000000000000834b         db  0x00 ; '.'
000000000000834c         db  0x20 ; ' '
000000000000834d         db  0xb0 ; '.'
000000000000834e         db  0xff ; '.'
000000000000834f         db  0xff ; '.'
0000000000008350         db  0xb4 ; '.'
0000000000008351         db  0x04 ; '.'
0000000000008352         db  0x00 ; '.'
0000000000008353         db  0x00 ; '.'
0000000000008354         db  0x30 ; '0'
0000000000008355         db  0xb0 ; '.'
0000000000008356         db  0xff ; '.'
0000000000008357         db  0xff ; '.'
0000000000008358         db  0xc8 ; '.'
0000000000008359         db  0x04 ; '.'
000000000000835a         db  0x00 ; '.'
000000000000835b         db  0x00 ; '.'
000000000000835c         db  0xe0 ; '.'
000000000000835d         db  0xb0 ; '.'
000000000000835e         db  0xff ; '.'
000000000000835f         db  0xff ; '.'
0000000000008360         db  0xf8 ; '.'
0000000000008361         db  0x04 ; '.'
0000000000008362         db  0x00 ; '.'
0000000000008363         db  0x00 ; '.'
0000000000008364         db  0x10 ; '.'
0000000000008365         db  0xb1 ; '.'
0000000000008366         db  0xff ; '.'
0000000000008367         db  0xff ; '.'
0000000000008368         db  0x0c ; '.'
0000000000008369         db  0x05 ; '.'
000000000000836a         db  0x00 ; '.'
000000000000836b         db  0x00 ; '.'
000000000000836c         db  0x30 ; '0'
000000000000836d         db  0xb1 ; '.'
000000000000836e         db  0xff ; '.'
000000000000836f         db  0xff ; '.'
0000000000008370         db  0x20 ; ' '
0000000000008371         db  0x05 ; '.'
0000000000008372         db  0x00 ; '.'
0000000000008373         db  0x00 ; '.'
0000000000008374         db  0xa0 ; '.'
0000000000008375         db  0xb8 ; '.'
0000000000008376         db  0xff ; '.'
0000000000008377         db  0xff ; '.'
0000000000008378         db  0x64 ; 'd'
0000000000008379         db  0x05 ; '.'
000000000000837a         db  0x00 ; '.'
000000000000837b         db  0x00 ; '.'
000000000000837c         db  0xc0 ; '.'
000000000000837d         db  0xb9 ; '.'
000000000000837e         db  0xff ; '.'
000000000000837f         db  0xff ; '.'
0000000000008380         db  0x8c ; '.'
0000000000008381         db  0x05 ; '.'
0000000000008382         db  0x00 ; '.'
0000000000008383         db  0x00 ; '.'
0000000000008384         db  0xa0 ; '.'
0000000000008385         db  0xbc ; '.'
0000000000008386         db  0xff ; '.'
0000000000008387         db  0xff ; '.'
0000000000008388         db  0xf0 ; '.'
0000000000008389         db  0x05 ; '.'
000000000000838a         db  0x00 ; '.'
000000000000838b         db  0x00 ; '.'
000000000000838c         db  0x30 ; '0'
000000000000838d         db  0xbd ; '.'
000000000000838e         db  0xff ; '.'
000000000000838f         db  0xff ; '.'
0000000000008390         db  0x1c ; '.'
0000000000008391         db  0x06 ; '.'
0000000000008392         db  0x00 ; '.'
0000000000008393         db  0x00 ; '.'
0000000000008394         db  0x70 ; 'p'
0000000000008395         db  0xbe ; '.'
0000000000008396         db  0xff ; '.'
0000000000008397         db  0xff ; '.'
0000000000008398         db  0x68 ; 'h'
0000000000008399         db  0x06 ; '.'
000000000000839a         db  0x00 ; '.'
000000000000839b         db  0x00 ; '.'
000000000000839c         db  0x80 ; '.'
000000000000839d         db  0xbe ; '.'
000000000000839e         db  0xff ; '.'
000000000000839f         db  0xff ; '.'
00000000000083a0         db  0x7c ; '|'
00000000000083a1         db  0x06 ; '.'
00000000000083a2         db  0x00 ; '.'
00000000000083a3         db  0x00 ; '.'
00000000000083a4         db  0xb0 ; '.'
00000000000083a5         db  0xbe ; '.'
00000000000083a6         db  0xff ; '.'
00000000000083a7         db  0xff ; '.'
00000000000083a8         db  0x98 ; '.'
00000000000083a9         db  0x06 ; '.'
00000000000083aa         db  0x00 ; '.'
00000000000083ab         db  0x00 ; '.'
00000000000083ac         db  0x50 ; 'P'
00000000000083ad         db  0xbf ; '.'
00000000000083ae         db  0xff ; '.'
00000000000083af         db  0xff ; '.'
00000000000083b0         db  0xc8 ; '.'
00000000000083b1         db  0x06 ; '.'
00000000000083b2         db  0x00 ; '.'
00000000000083b3         db  0x00 ; '.'
00000000000083b4         db  0xf0 ; '.'
00000000000083b5         db  0xbf ; '.'
00000000000083b6         db  0xff ; '.'
00000000000083b7         db  0xff ; '.'
00000000000083b8         db  0xe8 ; '.'
00000000000083b9         db  0x06 ; '.'
00000000000083ba         db  0x00 ; '.'
00000000000083bb         db  0x00 ; '.'
00000000000083bc         db  0xe0 ; '.'
00000000000083bd         db  0xc0 ; '.'
00000000000083be         db  0xff ; '.'
00000000000083bf         db  0xff ; '.'
00000000000083c0         db  0x2c ; ','
00000000000083c1         db  0x07 ; '.'
00000000000083c2         db  0x00 ; '.'
00000000000083c3         db  0x00 ; '.'
00000000000083c4         db  0x20 ; ' '
00000000000083c5         db  0xd3 ; '.'
00000000000083c6         db  0xff ; '.'
00000000000083c7         db  0xff ; '.'
00000000000083c8         db  0xa4 ; '.'
00000000000083c9         db  0x07 ; '.'
00000000000083ca         db  0x00 ; '.'
00000000000083cb         db  0x00 ; '.'
00000000000083cc         db  0xd0 ; '.'
00000000000083cd         db  0xd4 ; '.'
00000000000083ce         db  0xff ; '.'
00000000000083cf         db  0xff ; '.'
00000000000083d0         db  0x10 ; '.'
00000000000083d1         db  0x08 ; '.'
00000000000083d2         db  0x00 ; '.'
00000000000083d3         db  0x00 ; '.'
00000000000083d4         db  0x10 ; '.'
00000000000083d5         db  0xd5 ; '.'
00000000000083d6         db  0xff ; '.'
00000000000083d7         db  0xff ; '.'
00000000000083d8         db  0x3c ; '<'
00000000000083d9         db  0x08 ; '.'
00000000000083da         db  0x00 ; '.'
00000000000083db         db  0x00 ; '.'
00000000000083dc         db  0x30 ; '0'
00000000000083dd         db  0xd5 ; '.'
00000000000083de         db  0xff ; '.'
00000000000083df         db  0xff ; '.'
00000000000083e0         db  0x50 ; 'P'
00000000000083e1         db  0x08 ; '.'
00000000000083e2         db  0x00 ; '.'
00000000000083e3         db  0x00 ; '.'
00000000000083e4         db  0x50 ; 'P'
00000000000083e5         db  0xd5 ; '.'
00000000000083e6         db  0xff ; '.'
00000000000083e7         db  0xff ; '.'
00000000000083e8         db  0x64 ; 'd'
00000000000083e9         db  0x08 ; '.'
00000000000083ea         db  0x00 ; '.'
00000000000083eb         db  0x00 ; '.'
00000000000083ec         db  0x90 ; '.'
00000000000083ed         db  0xd5 ; '.'
00000000000083ee         db  0xff ; '.'
00000000000083ef         db  0xff ; '.'
00000000000083f0         db  0x78 ; 'x'
00000000000083f1         db  0x08 ; '.'
00000000000083f2         db  0x00 ; '.'
00000000000083f3         db  0x00 ; '.'
00000000000083f4         db  0xb0 ; '.'
00000000000083f5         db  0xd5 ; '.'
00000000000083f6         db  0xff ; '.'
00000000000083f7         db  0xff ; '.'
00000000000083f8         db  0x8c ; '.'
00000000000083f9         db  0x08 ; '.'
00000000000083fa         db  0x00 ; '.'
00000000000083fb         db  0x00 ; '.'
00000000000083fc         db  0xe0 ; '.'
00000000000083fd         db  0xd5 ; '.'
00000000000083fe         db  0xff ; '.'
00000000000083ff         db  0xff ; '.'
0000000000008400         db  0xa0 ; '.'
0000000000008401         db  0x08 ; '.'
0000000000008402         db  0x00 ; '.'
0000000000008403         db  0x00 ; '.'
0000000000008404         db  0x60 ; '`'
0000000000008405         db  0xd6 ; '.'
0000000000008406         db  0xff ; '.'
0000000000008407         db  0xff ; '.'
0000000000008408         db  0xf4 ; '.'
0000000000008409         db  0x08 ; '.'
000000000000840a         db  0x00 ; '.'
000000000000840b         db  0x00 ; '.'
000000000000840c         db  0x50 ; 'P'
000000000000840d         db  0xd7 ; '.'
000000000000840e         db  0xff ; '.'
000000000000840f         db  0xff ; '.'
0000000000008410         db  0x60 ; '`'
0000000000008411         db  0x09 ; '.'
0000000000008412         db  0x00 ; '.'
0000000000008413         db  0x00 ; '.'
0000000000008414         db  0x60 ; '`'
0000000000008415         db  0xd7 ; '.'
0000000000008416         db  0xff ; '.'
0000000000008417         db  0xff ; '.'
0000000000008418         db  0x74 ; 't'
0000000000008419         db  0x09 ; '.'
000000000000841a         db  0x00 ; '.'
000000000000841b         db  0x00 ; '.'
000000000000841c         db  0x00 ; '.'
000000000000841d         db  0xd8 ; '.'
000000000000841e         db  0xff ; '.'
000000000000841f         db  0xff ; '.'
0000000000008420         db  0xa0 ; '.'
0000000000008421         db  0x09 ; '.'
0000000000008422         db  0x00 ; '.'
0000000000008423         db  0x00 ; '.'
0000000000008424         db  0x20 ; ' '
0000000000008425         db  0xd8 ; '.'
0000000000008426         db  0xff ; '.'
0000000000008427         db  0xff ; '.'
0000000000008428         db  0xb4 ; '.'
0000000000008429         db  0x09 ; '.'
000000000000842a         db  0x00 ; '.'
000000000000842b         db  0x00 ; '.'
000000000000842c         db  0x30 ; '0'
000000000000842d         db  0xd8 ; '.'
000000000000842e         db  0xff ; '.'
000000000000842f         db  0xff ; '.'
0000000000008430         db  0xc8 ; '.'
0000000000008431         db  0x09 ; '.'
0000000000008432         db  0x00 ; '.'
0000000000008433         db  0x00 ; '.'
0000000000008434         db  0x50 ; 'P'
0000000000008435         db  0xd8 ; '.'
0000000000008436         db  0xff ; '.'
0000000000008437         db  0xff ; '.'
0000000000008438         db  0xdc ; '.'
0000000000008439         db  0x09 ; '.'
000000000000843a         db  0x00 ; '.'
000000000000843b         db  0x00 ; '.'
000000000000843c         db  0x70 ; 'p'
000000000000843d         db  0xd8 ; '.'
000000000000843e         db  0xff ; '.'
000000000000843f         db  0xff ; '.'
0000000000008440         db  0xf0 ; '.'
0000000000008441         db  0x09 ; '.'
0000000000008442         db  0x00 ; '.'
0000000000008443         db  0x00 ; '.'
0000000000008444         db  0x00 ; '.'
0000000000008445         db  0xd9 ; '.'
0000000000008446         db  0xff ; '.'
0000000000008447         db  0xff ; '.'
0000000000008448         db  0x0c ; '.'
0000000000008449         db  0x0a ; '.'
000000000000844a         db  0x00 ; '.'
000000000000844b         db  0x00 ; '.'
000000000000844c         db  0x90 ; '.'
000000000000844d         db  0xd9 ; '.'
000000000000844e         db  0xff ; '.'
000000000000844f         db  0xff ; '.'
0000000000008450         db  0x28 ; '('
0000000000008451         db  0x0a ; '.'
0000000000008452         db  0x00 ; '.'
0000000000008453         db  0x00 ; '.'
0000000000008454         db  0xa0 ; '.'
0000000000008455         db  0xd9 ; '.'
0000000000008456         db  0xff ; '.'
0000000000008457         db  0xff ; '.'
0000000000008458         db  0x3c ; '<'
0000000000008459         db  0x0a ; '.'
000000000000845a         db  0x00 ; '.'
000000000000845b         db  0x00 ; '.'
000000000000845c         db  0xb0 ; '.'
000000000000845d         db  0xd9 ; '.'
000000000000845e         db  0xff ; '.'
000000000000845f         db  0xff ; '.'
0000000000008460         db  0x50 ; 'P'
0000000000008461         db  0x0a ; '.'
0000000000008462         db  0x00 ; '.'
0000000000008463         db  0x00 ; '.'
0000000000008464         db  0x50 ; 'P'
0000000000008465         db  0xda ; '.'
0000000000008466         db  0xff ; '.'
0000000000008467         db  0xff ; '.'
0000000000008468         db  0x6c ; 'l'
0000000000008469         db  0x0a ; '.'
000000000000846a         db  0x00 ; '.'
000000000000846b         db  0x00 ; '.'
000000000000846c         db  0x60 ; '`'
000000000000846d         db  0xda ; '.'
000000000000846e         db  0xff ; '.'
000000000000846f         db  0xff ; '.'
0000000000008470         db  0x80 ; '.'
0000000000008471         db  0x0a ; '.'
0000000000008472         db  0x00 ; '.'
0000000000008473         db  0x00 ; '.'
0000000000008474         db  0x80 ; '.'
0000000000008475         db  0xda ; '.'
0000000000008476         db  0xff ; '.'
0000000000008477         db  0xff ; '.'
0000000000008478         db  0x94 ; '.'
0000000000008479         db  0x0a ; '.'
000000000000847a         db  0x00 ; '.'
000000000000847b         db  0x00 ; '.'
000000000000847c         db  0x90 ; '.'
000000000000847d         db  0xda ; '.'
000000000000847e         db  0xff ; '.'
000000000000847f         db  0xff ; '.'
0000000000008480         db  0xa8 ; '.'
0000000000008481         db  0x0a ; '.'
0000000000008482         db  0x00 ; '.'
0000000000008483         db  0x00 ; '.'
0000000000008484         db  0x20 ; ' '
0000000000008485         db  0xdb ; '.'
0000000000008486         db  0xff ; '.'
0000000000008487         db  0xff ; '.'
0000000000008488         db  0xc4 ; '.'
0000000000008489         db  0x0a ; '.'
000000000000848a         db  0x00 ; '.'
000000000000848b         db  0x00 ; '.'
000000000000848c         db  0xc0 ; '.'
000000000000848d         db  0xdb ; '.'
000000000000848e         db  0xff ; '.'
000000000000848f         db  0xff ; '.'
0000000000008490         db  0xe0 ; '.'
0000000000008491         db  0x0a ; '.'
0000000000008492         db  0x00 ; '.'
0000000000008493         db  0x00 ; '.'
0000000000008494         db  0xd0 ; '.'
0000000000008495         db  0xdb ; '.'
0000000000008496         db  0xff ; '.'
0000000000008497         db  0xff ; '.'
0000000000008498         db  0xf4 ; '.'
0000000000008499         db  0x0a ; '.'
000000000000849a         db  0x00 ; '.'
000000000000849b         db  0x00 ; '.'
000000000000849c         db  0xf0 ; '.'
000000000000849d         db  0xdb ; '.'
000000000000849e         db  0xff ; '.'
000000000000849f         db  0xff ; '.'
00000000000084a0         db  0x08 ; '.'
00000000000084a1         db  0x0b ; '.'
00000000000084a2         db  0x00 ; '.'
00000000000084a3         db  0x00 ; '.'
00000000000084a4         db  0x10 ; '.'
00000000000084a5         db  0xdc ; '.'
00000000000084a6         db  0xff ; '.'
00000000000084a7         db  0xff ; '.'
00000000000084a8         db  0x1c ; '.'
00000000000084a9         db  0x0b ; '.'
00000000000084aa         db  0x00 ; '.'
00000000000084ab         db  0x00 ; '.'
00000000000084ac         db  0x20 ; ' '
00000000000084ad         db  0xdc ; '.'
00000000000084ae         db  0xff ; '.'
00000000000084af         db  0xff ; '.'
00000000000084b0         db  0x30 ; '0'
00000000000084b1         db  0x0b ; '.'
00000000000084b2         db  0x00 ; '.'
00000000000084b3         db  0x00 ; '.'
00000000000084b4         db  0x40 ; '@'
00000000000084b5         db  0xdc ; '.'
00000000000084b6         db  0xff ; '.'
00000000000084b7         db  0xff ; '.'
00000000000084b8         db  0x44 ; 'D'
00000000000084b9         db  0x0b ; '.'
00000000000084ba         db  0x00 ; '.'
00000000000084bb         db  0x00 ; '.'
00000000000084bc         db  0x60 ; '`'
00000000000084bd         db  0xdc ; '.'
00000000000084be         db  0xff ; '.'
00000000000084bf         db  0xff ; '.'
00000000000084c0         db  0x58 ; 'X'
00000000000084c1         db  0x0b ; '.'
00000000000084c2         db  0x00 ; '.'
00000000000084c3         db  0x00 ; '.'
00000000000084c4         db  0x80 ; '.'
00000000000084c5         db  0xdc ; '.'
00000000000084c6         db  0xff ; '.'
00000000000084c7         db  0xff ; '.'
00000000000084c8         db  0x70 ; 'p'
00000000000084c9         db  0x0b ; '.'
00000000000084ca         db  0x00 ; '.'
00000000000084cb         db  0x00 ; '.'
00000000000084cc         db  0x90 ; '.'
00000000000084cd         db  0xdc ; '.'
00000000000084ce         db  0xff ; '.'
00000000000084cf         db  0xff ; '.'
00000000000084d0         db  0x88 ; '.'
00000000000084d1         db  0x0b ; '.'
00000000000084d2         db  0x00 ; '.'
00000000000084d3         db  0x00 ; '.'
00000000000084d4         db  0xb0 ; '.'
00000000000084d5         db  0xe0 ; '.'
00000000000084d6         db  0xff ; '.'
00000000000084d7         db  0xff ; '.'
00000000000084d8         db  0x9c ; '.'
00000000000084d9         db  0x0c ; '.'
00000000000084da         db  0x00 ; '.'
00000000000084db         db  0x00 ; '.'
00000000000084dc         db  0xd0 ; '.'
00000000000084dd         db  0xe0 ; '.'
00000000000084de         db  0xff ; '.'
00000000000084df         db  0xff ; '.'
00000000000084e0         db  0xb0 ; '.'
00000000000084e1         db  0x0c ; '.'
00000000000084e2         db  0x00 ; '.'
00000000000084e3         db  0x00 ; '.'
00000000000084e4         db  0x50 ; 'P'
00000000000084e5         db  0xe1 ; '.'
00000000000084e6         db  0xff ; '.'
00000000000084e7         db  0xff ; '.'
00000000000084e8         db  0xcc ; '.'
00000000000084e9         db  0x0c ; '.'
00000000000084ea         db  0x00 ; '.'
00000000000084eb         db  0x00 ; '.'
00000000000084ec         db  0x30 ; '0'
00000000000084ed         db  0xe2 ; '.'
00000000000084ee         db  0xff ; '.'
00000000000084ef         db  0xff ; '.'
00000000000084f0         db  0xf8 ; '.'
00000000000084f1         db  0x0c ; '.'
00000000000084f2         db  0x00 ; '.'
00000000000084f3         db  0x00 ; '.'
00000000000084f4         db  0xb0 ; '.'
00000000000084f5         db  0xe2 ; '.'
00000000000084f6         db  0xff ; '.'
00000000000084f7         db  0xff ; '.'
00000000000084f8         db  0x18 ; '.'
00000000000084f9         db  0x0d ; '.'
00000000000084fa         db  0x00 ; '.'
00000000000084fb         db  0x00 ; '.'
00000000000084fc         db  0xd0 ; '.'
00000000000084fd         db  0xe2 ; '.'
00000000000084fe         db  0xff ; '.'
00000000000084ff         db  0xff ; '.'
0000000000008500         db  0x34 ; '4'
0000000000008501         db  0x0d ; '.'
0000000000008502         db  0x00 ; '.'
0000000000008503         db  0x00 ; '.'
0000000000008504         db  0x00 ; '.'
0000000000008505         db  0xe3 ; '.'
0000000000008506         db  0xff ; '.'
0000000000008507         db  0xff ; '.'
0000000000008508         db  0x48 ; 'H'
0000000000008509         db  0x0d ; '.'
000000000000850a         db  0x00 ; '.'
000000000000850b         db  0x00 ; '.'
000000000000850c         db  0x10 ; '.'
000000000000850d         db  0xe3 ; '.'
000000000000850e         db  0xff ; '.'
000000000000850f         db  0xff ; '.'
0000000000008510         db  0x5c ; '\'
0000000000008511         db  0x0d ; '.'
0000000000008512         db  0x00 ; '.'
0000000000008513         db  0x00 ; '.'
0000000000008514         db  0x50 ; 'P'
0000000000008515         db  0xe3 ; '.'
0000000000008516         db  0xff ; '.'
0000000000008517         db  0xff ; '.'
0000000000008518         db  0x80 ; '.'
0000000000008519         db  0x0d ; '.'
000000000000851a         db  0x00 ; '.'
000000000000851b         db  0x00 ; '.'
000000000000851c         db  0x80 ; '.'
000000000000851d         db  0xe3 ; '.'
000000000000851e         db  0xff ; '.'
000000000000851f         db  0xff ; '.'
0000000000008520         db  0x94 ; '.'
0000000000008521         db  0x0d ; '.'
0000000000008522         db  0x00 ; '.'
0000000000008523         db  0x00 ; '.'
0000000000008524         db  0x10 ; '.'
0000000000008525         db  0xe4 ; '.'
0000000000008526         db  0xff ; '.'
0000000000008527         db  0xff ; '.'
0000000000008528         db  0xac ; '.'
0000000000008529         db  0x0d ; '.'
000000000000852a         db  0x00 ; '.'
000000000000852b         db  0x00 ; '.'
000000000000852c         db  0x60 ; '`'
000000000000852d         db  0xe4 ; '.'
000000000000852e         db  0xff ; '.'
000000000000852f         db  0xff ; '.'
0000000000008530         db  0xc4 ; '.'
0000000000008531         db  0x0d ; '.'
0000000000008532         db  0x00 ; '.'
0000000000008533         db  0x00 ; '.'
0000000000008534         db  0x80 ; '.'
0000000000008535         db  0xe4 ; '.'
0000000000008536         db  0xff ; '.'
0000000000008537         db  0xff ; '.'
0000000000008538         db  0xe0 ; '.'
0000000000008539         db  0x0d ; '.'
000000000000853a         db  0x00 ; '.'
000000000000853b         db  0x00 ; '.'
000000000000853c         db  0xb0 ; '.'
000000000000853d         db  0xe4 ; '.'
000000000000853e         db  0xff ; '.'
000000000000853f         db  0xff ; '.'
0000000000008540         db  0xfc ; '.'
0000000000008541         db  0x0d ; '.'
0000000000008542         db  0x00 ; '.'
0000000000008543         db  0x00 ; '.'
0000000000008544         db  0xe0 ; '.'
0000000000008545         db  0xe4 ; '.'
0000000000008546         db  0xff ; '.'
0000000000008547         db  0xff ; '.'
0000000000008548         db  0x24 ; '$'
0000000000008549         db  0x0e ; '.'
000000000000854a         db  0x00 ; '.'
000000000000854b         db  0x00 ; '.'
000000000000854c         db  0x00 ; '.'
000000000000854d         db  0xe5 ; '.'
000000000000854e         db  0xff ; '.'
000000000000854f         db  0xff ; '.'
0000000000008550         db  0x40 ; '@'
0000000000008551         db  0x0e ; '.'
0000000000008552         db  0x00 ; '.'
0000000000008553         db  0x00 ; '.'
0000000000008554         db  0x40 ; '@'
0000000000008555         db  0xe5 ; '.'
0000000000008556         db  0xff ; '.'
0000000000008557         db  0xff ; '.'
0000000000008558         db  0x58 ; 'X'
0000000000008559         db  0x0e ; '.'
000000000000855a         db  0x00 ; '.'
000000000000855b         db  0x00 ; '.'
000000000000855c         db  0xc0 ; '.'
000000000000855d         db  0xe5 ; '.'
000000000000855e         db  0xff ; '.'
000000000000855f         db  0xff ; '.'
0000000000008560         db  0x90 ; '.'
0000000000008561         db  0x0e ; '.'
0000000000008562         db  0x00 ; '.'
0000000000008563         db  0x00 ; '.'
0000000000008564         db  0x40 ; '@'
0000000000008565         db  0xe8 ; '.'
0000000000008566         db  0xff ; '.'
0000000000008567         db  0xff ; '.'
0000000000008568         db  0xc8 ; '.'
0000000000008569         db  0x0e ; '.'
000000000000856a         db  0x00 ; '.'
000000000000856b         db  0x00 ; '.'
000000000000856c         db  0x80 ; '.'
000000000000856d         db  0xe8 ; '.'
000000000000856e         db  0xff ; '.'
000000000000856f         db  0xff ; '.'
0000000000008570         db  0xe8 ; '.'
0000000000008571         db  0x0e ; '.'
0000000000008572         db  0x00 ; '.'
0000000000008573         db  0x00 ; '.'
0000000000008574         db  0xe0 ; '.'
0000000000008575         db  0xe8 ; '.'
0000000000008576         db  0xff ; '.'
0000000000008577         db  0xff ; '.'
0000000000008578         db  0x18 ; '.'
0000000000008579         db  0x0f ; '.'
000000000000857a         db  0x00 ; '.'
000000000000857b         db  0x00 ; '.'
000000000000857c         db  0x70 ; 'p'
000000000000857d         db  0xe9 ; '.'
000000000000857e         db  0xff ; '.'
000000000000857f         db  0xff ; '.'
0000000000008580         db  0x58 ; 'X'
0000000000008581         db  0x0f ; '.'
0000000000008582         db  0x00 ; '.'
0000000000008583         db  0x00 ; '.'
0000000000008584         db  0xf0 ; '.'
0000000000008585         db  0xe9 ; '.'
0000000000008586         db  0xff ; '.'
0000000000008587         db  0xff ; '.'
0000000000008588         db  0xa8 ; '.'
0000000000008589         db  0x0f ; '.'
000000000000858a         db  0x00 ; '.'
000000000000858b         db  0x00 ; '.'
000000000000858c         db  0x50 ; 'P'
000000000000858d         db  0xea ; '.'
000000000000858e         db  0xff ; '.'
000000000000858f         db  0xff ; '.'
0000000000008590         db  0xc8 ; '.'
0000000000008591         db  0x0f ; '.'
0000000000008592         db  0x00 ; '.'
0000000000008593         db  0x00 ; '.'
0000000000008594         db  0x90 ; '.'
0000000000008595         db  0xea ; '.'
0000000000008596         db  0xff ; '.'
0000000000008597         db  0xff ; '.'
0000000000008598         db  0xe8 ; '.'
0000000000008599         db  0x0f ; '.'
000000000000859a         db  0x00 ; '.'
000000000000859b         db  0x00 ; '.'
000000000000859c         db  0x00 ; '.'
000000000000859d         db  0xeb ; '.'
000000000000859e         db  0xff ; '.'
000000000000859f         db  0xff ; '.'
00000000000085a0         db  0x30 ; '0'
00000000000085a1         db  0x10 ; '.'
00000000000085a2         db  0x00 ; '.'
00000000000085a3         db  0x00 ; '.'
00000000000085a4         db  0x10 ; '.'
00000000000085a5         db  0xeb ; '.'
00000000000085a6         db  0xff ; '.'
00000000000085a7         db  0xff ; '.'
00000000000085a8         db  0x48 ; 'H'
00000000000085a9         db  0x10 ; '.'
00000000000085aa         db  0x00 ; '.'
00000000000085ab         db  0x00 ; '.'
00000000000085ac         db  0x00 ; '.'
00000000000085ad         db  0x00 ; '.'
00000000000085ae         db  0x00 ; '.'
00000000000085af         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x85b0; 0x9350[ (3488 bytes)
        ; File offset : [34224; 37712[ (3488 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

00000000000085b0         dd         0x00000014                                  ; Length of the record
00000000000085b4         dd         0x00000000                                  ; CIE ID
00000000000085b8         db         0x01                                        ; Version
00000000000085b9         db         "zR", 0                                     ; Augmentation String
00000000000085bc         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
00000000000085bd         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
00000000000085be         db         0x10                                        ; Return address register
00000000000085bf         db         0x01                                        ; Augmentation data length
00000000000085c0         db         0x1b                                        ; FDE encoding
00000000000085c1         db  0x0c ; '.'
00000000000085c2         db  0x07 ; '.'
00000000000085c3         db  0x08 ; '.'
00000000000085c4         db  0x90 ; '.'
00000000000085c5         db  0x01 ; '.'
00000000000085c6         db  0x07 ; '.'
00000000000085c7         db  0x10 ; '.'
00000000000085c8         dd         0x00000014                                  ; Length of the record
00000000000085cc         dd         0x0000001c                                  ; FDE: parent CIE at 0x85b0 (FDE encoding = 0x1B)
00000000000085d0         db         0x70, 0xa4, 2 dup (0xff)                    ; begin 0x2a40
00000000000085d4         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x2a6b)
00000000000085d8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000085d9         align      32
00000000000085e0         dd         0x00000014                                  ; Length of the record
00000000000085e4         dd         0x00000000                                  ; CIE ID
00000000000085e8         db         0x01                                        ; Version
00000000000085e9         db         "zR", 0                                     ; Augmentation String
00000000000085ec         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
00000000000085ed         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
00000000000085ee         db         0x10                                        ; Return address register
00000000000085ef         db         0x01                                        ; Augmentation data length
00000000000085f0         db         0x1b                                        ; FDE encoding
00000000000085f1         db  0x0c ; '.'
00000000000085f2         db  0x07 ; '.'
00000000000085f3         db  0x08 ; '.'
00000000000085f4         db  0x90 ; '.'
00000000000085f5         db  0x01 ; '.'
00000000000085f6         db  0x00 ; '.'
00000000000085f7         db  0x00 ; '.'
00000000000085f8         dd         0x00000024                                  ; Length of the record
00000000000085fc         dd         0x0000001c                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008600         db         0xa0, 0x8f, 2 dup (0xff)                    ; begin 0x15a0
0000000000008604         db         0x50, 0x03, 2 dup (0x00)                    ; length 0x350 (end at 0x18f0)
0000000000008608         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008609         db  0x0e ; '.'
000000000000860a         db  0x10 ; '.'
000000000000860b         db  0x46 ; 'F'
000000000000860c         db  0x0e ; '.'
000000000000860d         db  0x18 ; '.'
000000000000860e         db  0x4a ; 'J'
000000000000860f         db  0x0f ; '.'
0000000000008610         db  0x0b ; '.'
0000000000008611         db  0x77 ; 'w'
0000000000008612         db  0x08 ; '.'
0000000000008613         db  0x80 ; '.'
0000000000008614         db  0x00 ; '.'
0000000000008615         db  0x3f ; '?'
0000000000008616         db  0x1a ; '.'
0000000000008617         db  0x3b ; ';'
0000000000008618         db  0x2a ; '*'
0000000000008619         db  0x33 ; '3'
000000000000861a         db  0x24 ; '$'
000000000000861b         db  0x22 ; '"'
000000000000861c         db  0x00 ; '.'
000000000000861d         db  0x00 ; '.'
000000000000861e         db  0x00 ; '.'
000000000000861f         db  0x00 ; '.'
0000000000008620         dd         0x00000014                                  ; Length of the record
0000000000008624         dd         0x00000044                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008628         db         0xc8, 0x92, 2 dup (0xff)                    ; begin 0x18f0
000000000000862c         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x18f8)
0000000000008630         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008631         align      8
0000000000008638         dd         0x00000010                                  ; Length of the record
000000000000863c         dd         0x0000005c                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008640         db         0x10, 0xa5, 2 dup (0xff)                    ; begin 0x2b50
0000000000008644         db         0x79, 3 dup (0x00)                          ; length 0x79 (end at 0x2bc9)
0000000000008648         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008649         align      4
000000000000864c         dd         0x00000030                                  ; Length of the record
0000000000008650         dd         0x00000070                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008654         db         0x7c, 0xa5, 2 dup (0xff)                    ; begin 0x2bd0
0000000000008658         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x2c30)
000000000000865c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000865d         db  0x41 ; 'A'
000000000000865e         db  0x0e ; '.'
000000000000865f         db  0x10 ; '.'
0000000000008660         db  0x86 ; '.'
0000000000008661         db  0x02 ; '.'
0000000000008662         db  0x41 ; 'A'
0000000000008663         db  0x0e ; '.'
0000000000008664         db  0x18 ; '.'
0000000000008665         db  0x83 ; '.'
0000000000008666         db  0x03 ; '.'
0000000000008667         db  0x44 ; 'D'
0000000000008668         db  0x0e ; '.'
0000000000008669         db  0x20 ; ' '
000000000000866a         db  0x7d ; '}'
000000000000866b         db  0x0a ; '.'
000000000000866c         db  0x0e ; '.'
000000000000866d         db  0x18 ; '.'
000000000000866e         db  0x43 ; 'C'
000000000000866f         db  0x0e ; '.'
0000000000008670         db  0x10 ; '.'
0000000000008671         db  0x41 ; 'A'
0000000000008672         db  0x0e ; '.'
0000000000008673         db  0x08 ; '.'
0000000000008674         db  0x49 ; 'I'
0000000000008675         db  0x0b ; '.'
0000000000008676         db  0x4d ; 'M'
0000000000008677         db  0x0e ; '.'
0000000000008678         db  0x18 ; '.'
0000000000008679         db  0x41 ; 'A'
000000000000867a         db  0x0e ; '.'
000000000000867b         db  0x10 ; '.'
000000000000867c         db  0x41 ; 'A'
000000000000867d         db  0x0e ; '.'
000000000000867e         db  0x08 ; '.'
000000000000867f         db  0x00 ; '.'
0000000000008680         dd         0x00000034                                  ; Length of the record
0000000000008684         dd         0x000000a4                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008688         db         0xa8, 0xa5, 2 dup (0xff)                    ; begin 0x2c30
000000000000868c         db         0xc5, 3 dup (0x00)                          ; length 0xc5 (end at 0x2cf5)
0000000000008690         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008691         db  0x41 ; 'A'
0000000000008692         db  0x0e ; '.'
0000000000008693         db  0x10 ; '.'
0000000000008694         db  0x86 ; '.'
0000000000008695         db  0x02 ; '.'
0000000000008696         db  0x41 ; 'A'
0000000000008697         db  0x0e ; '.'
0000000000008698         db  0x18 ; '.'
0000000000008699         db  0x83 ; '.'
000000000000869a         db  0x03 ; '.'
000000000000869b         db  0x47 ; 'G'
000000000000869c         db  0x0e ; '.'
000000000000869d         db  0x20 ; ' '
000000000000869e         db  0x02 ; '.'
000000000000869f         db  0x79 ; 'y'
00000000000086a0         db  0x0a ; '.'
00000000000086a1         db  0x0e ; '.'
00000000000086a2         db  0x18 ; '.'
00000000000086a3         db  0x41 ; 'A'
00000000000086a4         db  0x0e ; '.'
00000000000086a5         db  0x10 ; '.'
00000000000086a6         db  0x41 ; 'A'
00000000000086a7         db  0x0e ; '.'
00000000000086a8         db  0x08 ; '.'
00000000000086a9         db  0x44 ; 'D'
00000000000086aa         db  0x0b ; '.'
00000000000086ab         db  0x63 ; 'c'
00000000000086ac         db  0x0a ; '.'
00000000000086ad         db  0x0e ; '.'
00000000000086ae         db  0x18 ; '.'
00000000000086af         db  0x41 ; 'A'
00000000000086b0         db  0x0e ; '.'
00000000000086b1         db  0x10 ; '.'
00000000000086b2         db  0x41 ; 'A'
00000000000086b3         db  0x0e ; '.'
00000000000086b4         db  0x08 ; '.'
00000000000086b5         db  0x4b ; 'K'
00000000000086b6         db  0x0b ; '.'
00000000000086b7         db  0x00 ; '.'
00000000000086b8         dd         0x0000004c                                  ; Length of the record
00000000000086bc         dd         0x000000dc                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
00000000000086c0         db         0x40, 0xa6, 2 dup (0xff)                    ; begin 0x2d00
00000000000086c4         db         0x9a, 0x01, 2 dup (0x00)                    ; length 0x19a (end at 0x2e9a)
00000000000086c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000086c9         db  0x42 ; 'B'
00000000000086ca         db  0x0e ; '.'
00000000000086cb         db  0x10 ; '.'
00000000000086cc         db  0x8d ; '.'
00000000000086cd         db  0x02 ; '.'
00000000000086ce         db  0x42 ; 'B'
00000000000086cf         db  0x0e ; '.'
00000000000086d0         db  0x18 ; '.'
00000000000086d1         db  0x8c ; '.'
00000000000086d2         db  0x03 ; '.'
00000000000086d3         db  0x46 ; 'F'
00000000000086d4         db  0x0e ; '.'
00000000000086d5         db  0x20 ; ' '
00000000000086d6         db  0x86 ; '.'
00000000000086d7         db  0x04 ; '.'
00000000000086d8         db  0x41 ; 'A'
00000000000086d9         db  0x0e ; '.'
00000000000086da         db  0x28 ; '('
00000000000086db         db  0x83 ; '.'
00000000000086dc         db  0x05 ; '.'
00000000000086dd         db  0x54 ; 'T'
00000000000086de         db  0x0e ; '.'
00000000000086df         db  0x30 ; '0'
00000000000086e0         db  0x02 ; '.'
00000000000086e1         db  0x46 ; 'F'
00000000000086e2         db  0x0a ; '.'
00000000000086e3         db  0x0e ; '.'
00000000000086e4         db  0x28 ; '('
00000000000086e5         db  0x44 ; 'D'
00000000000086e6         db  0x0e ; '.'
00000000000086e7         db  0x20 ; ' '
00000000000086e8         db  0x41 ; 'A'
00000000000086e9         db  0x0e ; '.'
00000000000086ea         db  0x18 ; '.'
00000000000086eb         db  0x42 ; 'B'
00000000000086ec         db  0x0e ; '.'
00000000000086ed         db  0x10 ; '.'
00000000000086ee         db  0x42 ; 'B'
00000000000086ef         db  0x0e ; '.'
00000000000086f0         db  0x08 ; '.'
00000000000086f1         db  0x42 ; 'B'
00000000000086f2         db  0x0b ; '.'
00000000000086f3         db  0x02 ; '.'
00000000000086f4         db  0x44 ; 'D'
00000000000086f5         db  0x0a ; '.'
00000000000086f6         db  0x0e ; '.'
00000000000086f7         db  0x28 ; '('
00000000000086f8         db  0x44 ; 'D'
00000000000086f9         db  0x0e ; '.'
00000000000086fa         db  0x20 ; ' '
00000000000086fb         db  0x41 ; 'A'
00000000000086fc         db  0x0e ; '.'
00000000000086fd         db  0x18 ; '.'
00000000000086fe         db  0x42 ; 'B'
00000000000086ff         db  0x0e ; '.'
0000000000008700         db  0x10 ; '.'
0000000000008701         db  0x42 ; 'B'
0000000000008702         db  0x0e ; '.'
0000000000008703         db  0x08 ; '.'
0000000000008704         db  0x43 ; 'C'
0000000000008705         db  0x0b ; '.'
0000000000008706         db  0x00 ; '.'
0000000000008707         db  0x00 ; '.'
0000000000008708         dd         0x00000028                                  ; Length of the record
000000000000870c         dd         0x0000012c                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008710         db         0x90, 0xa7, 2 dup (0xff)                    ; begin 0x2ea0
0000000000008714         db         0x5a, 0x04, 2 dup (0x00)                    ; length 0x45a (end at 0x32fa)
0000000000008718         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008719         db  0x42 ; 'B'
000000000000871a         db  0x0e ; '.'
000000000000871b         db  0x10 ; '.'
000000000000871c         db  0x8d ; '.'
000000000000871d         db  0x02 ; '.'
000000000000871e         db  0x42 ; 'B'
000000000000871f         db  0x0e ; '.'
0000000000008720         db  0x18 ; '.'
0000000000008721         db  0x8c ; '.'
0000000000008722         db  0x03 ; '.'
0000000000008723         db  0x46 ; 'F'
0000000000008724         db  0x0e ; '.'
0000000000008725         db  0x20 ; ' '
0000000000008726         db  0x86 ; '.'
0000000000008727         db  0x04 ; '.'
0000000000008728         db  0x41 ; 'A'
0000000000008729         db  0x0e ; '.'
000000000000872a         db  0x28 ; '('
000000000000872b         db  0x83 ; '.'
000000000000872c         db  0x05 ; '.'
000000000000872d         db  0x49 ; 'I'
000000000000872e         db  0x0e ; '.'
000000000000872f         db  0xb0 ; '.'
0000000000008730         db  0x01 ; '.'
0000000000008731         db  0x00 ; '.'
0000000000008732         db  0x00 ; '.'
0000000000008733         db  0x00 ; '.'
0000000000008734         dd         0x00000058                                  ; Length of the record
0000000000008738         dd         0x00000158                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
000000000000873c         db         0xc4, 0x91, 2 dup (0xff)                    ; begin 0x1900
0000000000008740         db         0x3d, 0x11, 2 dup (0x00)                    ; length 0x113d (end at 0x2a3d)
0000000000008744         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008745         db  0x42 ; 'B'
0000000000008746         db  0x0e ; '.'
0000000000008747         db  0x10 ; '.'
0000000000008748         db  0x8f ; '.'
0000000000008749         db  0x02 ; '.'
000000000000874a         db  0x42 ; 'B'
000000000000874b         db  0x0e ; '.'
000000000000874c         db  0x18 ; '.'
000000000000874d         db  0x8e ; '.'
000000000000874e         db  0x03 ; '.'
000000000000874f         db  0x42 ; 'B'
0000000000008750         db  0x0e ; '.'
0000000000008751         db  0x20 ; ' '
0000000000008752         db  0x8d ; '.'
0000000000008753         db  0x04 ; '.'
0000000000008754         db  0x42 ; 'B'
0000000000008755         db  0x0e ; '.'
0000000000008756         db  0x28 ; '('
0000000000008757         db  0x8c ; '.'
0000000000008758         db  0x05 ; '.'
0000000000008759         db  0x44 ; 'D'
000000000000875a         db  0x0e ; '.'
000000000000875b         db  0x30 ; '0'
000000000000875c         db  0x86 ; '.'
000000000000875d         db  0x06 ; '.'
000000000000875e         db  0x41 ; 'A'
000000000000875f         db  0x0e ; '.'
0000000000008760         db  0x38 ; '8'
0000000000008761         db  0x83 ; '.'
0000000000008762         db  0x07 ; '.'
0000000000008763         db  0x4f ; 'O'
0000000000008764         db  0x0e ; '.'
0000000000008765         db  0xa0 ; '.'
0000000000008766         db  0x02 ; '.'
0000000000008767         db  0x03 ; '.'
0000000000008768         db  0x56 ; 'V'
0000000000008769         db  0x01 ; '.'
000000000000876a         db  0x0a ; '.'
000000000000876b         db  0x0e ; '.'
000000000000876c         db  0xa8 ; '.'
000000000000876d         db  0x02 ; '.'
000000000000876e         db  0x4f ; 'O'
000000000000876f         db  0x0e ; '.'
0000000000008770         db  0xb0 ; '.'
0000000000008771         db  0x02 ; '.'
0000000000008772         db  0x5f ; '_'
0000000000008773         db  0x0b ; '.'
0000000000008774         db  0x03 ; '.'
0000000000008775         db  0x19 ; '.'
0000000000008776         db  0x09 ; '.'
0000000000008777         db  0x0a ; '.'
0000000000008778         db  0x0e ; '.'
0000000000008779         db  0x38 ; '8'
000000000000877a         db  0x41 ; 'A'
000000000000877b         db  0x0e ; '.'
000000000000877c         db  0x30 ; '0'
000000000000877d         db  0x41 ; 'A'
000000000000877e         db  0x0e ; '.'
000000000000877f         db  0x28 ; '('
0000000000008780         db  0x42 ; 'B'
0000000000008781         db  0x0e ; '.'
0000000000008782         db  0x20 ; ' '
0000000000008783         db  0x42 ; 'B'
0000000000008784         db  0x0e ; '.'
0000000000008785         db  0x18 ; '.'
0000000000008786         db  0x42 ; 'B'
0000000000008787         db  0x0e ; '.'
0000000000008788         db  0x10 ; '.'
0000000000008789         db  0x42 ; 'B'
000000000000878a         db  0x0e ; '.'
000000000000878b         db  0x08 ; '.'
000000000000878c         db  0x41 ; 'A'
000000000000878d         db  0x0b ; '.'
000000000000878e         db  0x00 ; '.'
000000000000878f         db  0x00 ; '.'
0000000000008790         dd         0x00000010                                  ; Length of the record
0000000000008794         dd         0x000001b4                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008798         db         0x68, 0xab, 2 dup (0xff)                    ; begin 0x3300
000000000000879c         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x3308)
00000000000087a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000087a1         align      4
00000000000087a4         dd         0x00000010                                  ; Length of the record
00000000000087a8         dd         0x000001c8                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
00000000000087ac         db         0x64, 0xab, 2 dup (0xff)                    ; begin 0x3310
00000000000087b0         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x3318)
00000000000087b4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000087b5         align      8
00000000000087b8         dd         0x0000002c                                  ; Length of the record
00000000000087bc         dd         0x000001dc                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
00000000000087c0         db         0x60, 0xab, 2 dup (0xff)                    ; begin 0x3320
00000000000087c4         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x33c4)
00000000000087c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000087c9         db  0x41 ; 'A'
00000000000087ca         db  0x0e ; '.'
00000000000087cb         db  0x10 ; '.'
00000000000087cc         db  0x86 ; '.'
00000000000087cd         db  0x02 ; '.'
00000000000087ce         db  0x41 ; 'A'
00000000000087cf         db  0x0e ; '.'
00000000000087d0         db  0x18 ; '.'
00000000000087d1         db  0x83 ; '.'
00000000000087d2         db  0x03 ; '.'
00000000000087d3         db  0x44 ; 'D'
00000000000087d4         db  0x0e ; '.'
00000000000087d5         db  0x20 ; ' '
00000000000087d6         db  0x7a ; 'z'
00000000000087d7         db  0x0a ; '.'
00000000000087d8         db  0x0e ; '.'
00000000000087d9         db  0x18 ; '.'
00000000000087da         db  0x41 ; 'A'
00000000000087db         db  0x0e ; '.'
00000000000087dc         db  0x10 ; '.'
00000000000087dd         db  0x41 ; 'A'
00000000000087de         db  0x0e ; '.'
00000000000087df         db  0x08 ; '.'
00000000000087e0         db  0x41 ; 'A'
00000000000087e1         db  0x0b ; '.'
00000000000087e2         db  0x00 ; '.'
00000000000087e3         db  0x00 ; '.'
00000000000087e4         db  0x00 ; '.'
00000000000087e5         db  0x00 ; '.'
00000000000087e6         db  0x00 ; '.'
00000000000087e7         db  0x00 ; '.'
00000000000087e8         dd         0x00000010                                  ; Length of the record
00000000000087ec         dd         0x0000020c                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
00000000000087f0         db         0xe0, 0xab, 2 dup (0xff)                    ; begin 0x33d0
00000000000087f4         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x33fb)
00000000000087f8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000087f9         align      4
00000000000087fc         dd         0x00000010                                  ; Length of the record
0000000000008800         dd         0x00000220                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008804         db         0xfc, 0xab, 2 dup (0xff)                    ; begin 0x3400
0000000000008808         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x341a)
000000000000880c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000880d         align      16
0000000000008810         dd         0x00000040                                  ; Length of the record
0000000000008814         dd         0x00000234                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008818         db         0x08, 0xac, 2 dup (0xff)                    ; begin 0x3420
000000000000881c         db         0x6f, 0x07, 2 dup (0x00)                    ; length 0x76f (end at 0x3b8f)
0000000000008820         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008821         db  0x45 ; 'E'
0000000000008822         db  0x0e ; '.'
0000000000008823         db  0x10 ; '.'
0000000000008824         db  0x8f ; '.'
0000000000008825         db  0x02 ; '.'
0000000000008826         db  0x42 ; 'B'
0000000000008827         db  0x0e ; '.'
0000000000008828         db  0x18 ; '.'
0000000000008829         db  0x8e ; '.'
000000000000882a         db  0x03 ; '.'
000000000000882b         db  0x46 ; 'F'
000000000000882c         db  0x0e ; '.'
000000000000882d         db  0x20 ; ' '
000000000000882e         db  0x8d ; '.'
000000000000882f         db  0x04 ; '.'
0000000000008830         db  0x42 ; 'B'
0000000000008831         db  0x0e ; '.'
0000000000008832         db  0x28 ; '('
0000000000008833         db  0x8c ; '.'
0000000000008834         db  0x05 ; '.'
0000000000008835         db  0x41 ; 'A'
0000000000008836         db  0x0e ; '.'
0000000000008837         db  0x30 ; '0'
0000000000008838         db  0x86 ; '.'
0000000000008839         db  0x06 ; '.'
000000000000883a         db  0x41 ; 'A'
000000000000883b         db  0x0e ; '.'
000000000000883c         db  0x38 ; '8'
000000000000883d         db  0x83 ; '.'
000000000000883e         db  0x07 ; '.'
000000000000883f         db  0x03 ; '.'
0000000000008840         db  0x54 ; 'T'
0000000000008841         db  0x07 ; '.'
0000000000008842         db  0x0e ; '.'
0000000000008843         db  0x30 ; '0'
0000000000008844         db  0x41 ; 'A'
0000000000008845         db  0x0e ; '.'
0000000000008846         db  0x28 ; '('
0000000000008847         db  0x42 ; 'B'
0000000000008848         db  0x0e ; '.'
0000000000008849         db  0x20 ; ' '
000000000000884a         db  0x42 ; 'B'
000000000000884b         db  0x0e ; '.'
000000000000884c         db  0x18 ; '.'
000000000000884d         db  0x42 ; 'B'
000000000000884e         db  0x0e ; '.'
000000000000884f         db  0x10 ; '.'
0000000000008850         db  0x42 ; 'B'
0000000000008851         db  0x0e ; '.'
0000000000008852         db  0x08 ; '.'
0000000000008853         db  0x00 ; '.'
0000000000008854         dd         0x00000024                                  ; Length of the record
0000000000008858         dd         0x00000278                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
000000000000885c         db         0x34, 0xb3, 2 dup (0xff)                    ; begin 0x3b90
0000000000008860         db         0x12, 0x01, 2 dup (0x00)                    ; length 0x112 (end at 0x3ca2)
0000000000008864         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008865         db  0x41 ; 'A'
0000000000008866         db  0x0e ; '.'
0000000000008867         db  0x10 ; '.'
0000000000008868         db  0x86 ; '.'
0000000000008869         db  0x02 ; '.'
000000000000886a         db  0x41 ; 'A'
000000000000886b         db  0x0e ; '.'
000000000000886c         db  0x18 ; '.'
000000000000886d         db  0x83 ; '.'
000000000000886e         db  0x03 ; '.'
000000000000886f         db  0x02 ; '.'
0000000000008870         db  0xef ; '.'
0000000000008871         db  0x0a ; '.'
0000000000008872         db  0x0e ; '.'
0000000000008873         db  0x10 ; '.'
0000000000008874         db  0x41 ; 'A'
0000000000008875         db  0x0e ; '.'
0000000000008876         db  0x08 ; '.'
0000000000008877         db  0x4e ; 'N'
0000000000008878         db  0x0b ; '.'
0000000000008879         db  0x00 ; '.'
000000000000887a         db  0x00 ; '.'
000000000000887b         db  0x00 ; '.'
000000000000887c         dd         0x00000060                                  ; Length of the record
0000000000008880         dd         0x000002a0                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008884         db         0x2c, 0xb4, 2 dup (0xff)                    ; begin 0x3cb0
0000000000008888         db         0xd7, 0x02, 2 dup (0x00)                    ; length 0x2d7 (end at 0x3f87)
000000000000888c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000888d         db  0x42 ; 'B'
000000000000888e         db  0x0e ; '.'
000000000000888f         db  0x10 ; '.'
0000000000008890         db  0x8f ; '.'
0000000000008891         db  0x02 ; '.'
0000000000008892         db  0x42 ; 'B'
0000000000008893         db  0x0e ; '.'
0000000000008894         db  0x18 ; '.'
0000000000008895         db  0x8e ; '.'
0000000000008896         db  0x03 ; '.'
0000000000008897         db  0x42 ; 'B'
0000000000008898         db  0x0e ; '.'
0000000000008899         db  0x20 ; ' '
000000000000889a         db  0x8d ; '.'
000000000000889b         db  0x04 ; '.'
000000000000889c         db  0x42 ; 'B'
000000000000889d         db  0x0e ; '.'
000000000000889e         db  0x28 ; '('
000000000000889f         db  0x8c ; '.'
00000000000088a0         db  0x05 ; '.'
00000000000088a1         db  0x44 ; 'D'
00000000000088a2         db  0x0e ; '.'
00000000000088a3         db  0x30 ; '0'
00000000000088a4         db  0x86 ; '.'
00000000000088a5         db  0x06 ; '.'
00000000000088a6         db  0x41 ; 'A'
00000000000088a7         db  0x0e ; '.'
00000000000088a8         db  0x38 ; '8'
00000000000088a9         db  0x83 ; '.'
00000000000088aa         db  0x07 ; '.'
00000000000088ab         db  0x4a ; 'J'
00000000000088ac         db  0x0e ; '.'
00000000000088ad         db  0x40 ; '@'
00000000000088ae         db  0x02 ; '.'
00000000000088af         db  0xef ; '.'
00000000000088b0         db  0x0a ; '.'
00000000000088b1         db  0x0e ; '.'
00000000000088b2         db  0x38 ; '8'
00000000000088b3         db  0x41 ; 'A'
00000000000088b4         db  0x0e ; '.'
00000000000088b5         db  0x30 ; '0'
00000000000088b6         db  0x41 ; 'A'
00000000000088b7         db  0x0e ; '.'
00000000000088b8         db  0x28 ; '('
00000000000088b9         db  0x42 ; 'B'
00000000000088ba         db  0x0e ; '.'
00000000000088bb         db  0x20 ; ' '
00000000000088bc         db  0x42 ; 'B'
00000000000088bd         db  0x0e ; '.'
00000000000088be         db  0x18 ; '.'
00000000000088bf         db  0x42 ; 'B'
00000000000088c0         db  0x0e ; '.'
00000000000088c1         db  0x10 ; '.'
00000000000088c2         db  0x42 ; 'B'
00000000000088c3         db  0x0e ; '.'
00000000000088c4         db  0x08 ; '.'
00000000000088c5         db  0x48 ; 'H'
00000000000088c6         db  0x0b ; '.'
00000000000088c7         db  0x69 ; 'i'
00000000000088c8         db  0x0a ; '.'
00000000000088c9         db  0x0e ; '.'
00000000000088ca         db  0x38 ; '8'
00000000000088cb         db  0x41 ; 'A'
00000000000088cc         db  0x0e ; '.'
00000000000088cd         db  0x30 ; '0'
00000000000088ce         db  0x41 ; 'A'
00000000000088cf         db  0x0e ; '.'
00000000000088d0         db  0x28 ; '('
00000000000088d1         db  0x42 ; 'B'
00000000000088d2         db  0x0e ; '.'
00000000000088d3         db  0x20 ; ' '
00000000000088d4         db  0x42 ; 'B'
00000000000088d5         db  0x0e ; '.'
00000000000088d6         db  0x18 ; '.'
00000000000088d7         db  0x42 ; 'B'
00000000000088d8         db  0x0e ; '.'
00000000000088d9         db  0x10 ; '.'
00000000000088da         db  0x42 ; 'B'
00000000000088db         db  0x0e ; '.'
00000000000088dc         db  0x08 ; '.'
00000000000088dd         db  0x45 ; 'E'
00000000000088de         db  0x0b ; '.'
00000000000088df         db  0x00 ; '.'
00000000000088e0         dd         0x00000028                                  ; Length of the record
00000000000088e4         dd         0x00000304                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
00000000000088e8         db         0xa8, 0xb6, 2 dup (0xff)                    ; begin 0x3f90
00000000000088ec         db         0x85, 3 dup (0x00)                          ; length 0x85 (end at 0x4015)
00000000000088f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000088f1         db  0x41 ; 'A'
00000000000088f2         db  0x0e ; '.'
00000000000088f3         db  0x10 ; '.'
00000000000088f4         db  0x86 ; '.'
00000000000088f5         db  0x02 ; '.'
00000000000088f6         db  0x41 ; 'A'
00000000000088f7         db  0x0e ; '.'
00000000000088f8         db  0x18 ; '.'
00000000000088f9         db  0x83 ; '.'
00000000000088fa         db  0x03 ; '.'
00000000000088fb         db  0x4a ; 'J'
00000000000088fc         db  0x0e ; '.'
00000000000088fd         db  0xd0 ; '.'
00000000000088fe         db  0x01 ; '.'
00000000000088ff         db  0x02 ; '.'
0000000000008900         db  0x71 ; 'q'
0000000000008901         db  0x0a ; '.'
0000000000008902         db  0x0e ; '.'
0000000000008903         db  0x18 ; '.'
0000000000008904         db  0x41 ; 'A'
0000000000008905         db  0x0e ; '.'
0000000000008906         db  0x10 ; '.'
0000000000008907         db  0x41 ; 'A'
0000000000008908         db  0x0e ; '.'
0000000000008909         db  0x08 ; '.'
000000000000890a         db  0x41 ; 'A'
000000000000890b         db  0x0b ; '.'
000000000000890c         dd         0x00000048                                  ; Length of the record
0000000000008910         dd         0x00000330                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008914         db         0x0c, 0xb7, 2 dup (0xff)                    ; begin 0x4020
0000000000008918         db         0x32, 0x01, 2 dup (0x00)                    ; length 0x132 (end at 0x4152)
000000000000891c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000891d         db  0x42 ; 'B'
000000000000891e         db  0x0e ; '.'
000000000000891f         db  0x10 ; '.'
0000000000008920         db  0x8f ; '.'
0000000000008921         db  0x02 ; '.'
0000000000008922         db  0x42 ; 'B'
0000000000008923         db  0x0e ; '.'
0000000000008924         db  0x18 ; '.'
0000000000008925         db  0x8e ; '.'
0000000000008926         db  0x03 ; '.'
0000000000008927         db  0x45 ; 'E'
0000000000008928         db  0x0e ; '.'
0000000000008929         db  0x20 ; ' '
000000000000892a         db  0x8d ; '.'
000000000000892b         db  0x04 ; '.'
000000000000892c         db  0x42 ; 'B'
000000000000892d         db  0x0e ; '.'
000000000000892e         db  0x28 ; '('
000000000000892f         db  0x8c ; '.'
0000000000008930         db  0x05 ; '.'
0000000000008931         db  0x41 ; 'A'
0000000000008932         db  0x0e ; '.'
0000000000008933         db  0x30 ; '0'
0000000000008934         db  0x86 ; '.'
0000000000008935         db  0x06 ; '.'
0000000000008936         db  0x41 ; 'A'
0000000000008937         db  0x0e ; '.'
0000000000008938         db  0x38 ; '8'
0000000000008939         db  0x83 ; '.'
000000000000893a         db  0x07 ; '.'
000000000000893b         db  0x4f ; 'O'
000000000000893c         db  0x0e ; '.'
000000000000893d         db  0xf0 ; '.'
000000000000893e         db  0x01 ; '.'
000000000000893f         db  0x02 ; '.'
0000000000008940         db  0xc9 ; '.'
0000000000008941         db  0x0a ; '.'
0000000000008942         db  0x0e ; '.'
0000000000008943         db  0x38 ; '8'
0000000000008944         db  0x41 ; 'A'
0000000000008945         db  0x0e ; '.'
0000000000008946         db  0x30 ; '0'
0000000000008947         db  0x41 ; 'A'
0000000000008948         db  0x0e ; '.'
0000000000008949         db  0x28 ; '('
000000000000894a         db  0x42 ; 'B'
000000000000894b         db  0x0e ; '.'
000000000000894c         db  0x20 ; ' '
000000000000894d         db  0x42 ; 'B'
000000000000894e         db  0x0e ; '.'
000000000000894f         db  0x18 ; '.'
0000000000008950         db  0x42 ; 'B'
0000000000008951         db  0x0e ; '.'
0000000000008952         db  0x10 ; '.'
0000000000008953         db  0x42 ; 'B'
0000000000008954         db  0x0e ; '.'
0000000000008955         db  0x08 ; '.'
0000000000008956         db  0x41 ; 'A'
0000000000008957         db  0x0b ; '.'
0000000000008958         dd         0x00000010                                  ; Length of the record
000000000000895c         dd         0x0000037c                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008960         db         0x00, 0xb8, 2 dup (0xff)                    ; begin 0x4160
0000000000008964         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x4165)
0000000000008968         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008969         align      4
000000000000896c         dd         0x00000018                                  ; Length of the record
0000000000008970         dd         0x00000390                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008974         db         0xfc, 0xb7, 2 dup (0xff)                    ; begin 0x4170
0000000000008978         db         0x22, 3 dup (0x00)                          ; length 0x22 (end at 0x4192)
000000000000897c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000897d         db  0x46 ; 'F'
000000000000897e         db  0x0e ; '.'
000000000000897f         db  0x10 ; '.'
0000000000008980         db  0x83 ; '.'
0000000000008981         db  0x02 ; '.'
0000000000008982         db  0x4e ; 'N'
0000000000008983         db  0xc3 ; '.'
0000000000008984         db  0x0e ; '.'
0000000000008985         db  0x08 ; '.'
0000000000008986         db  0x00 ; '.'
0000000000008987         db  0x00 ; '.'
0000000000008988         dd         0x0000002c                                  ; Length of the record
000000000000898c         dd         0x000003ac                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008990         db         0x10, 0xb8, 2 dup (0xff)                    ; begin 0x41a0
0000000000008994         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x4233)
0000000000008998         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008999         db  0x42 ; 'B'
000000000000899a         db  0x0e ; '.'
000000000000899b         db  0x10 ; '.'
000000000000899c         db  0x8c ; '.'
000000000000899d         db  0x02 ; '.'
000000000000899e         db  0x41 ; 'A'
000000000000899f         db  0x0e ; '.'
00000000000089a0         db  0x18 ; '.'
00000000000089a1         db  0x86 ; '.'
00000000000089a2         db  0x03 ; '.'
00000000000089a3         db  0x44 ; 'D'
00000000000089a4         db  0x0e ; '.'
00000000000089a5         db  0x20 ; ' '
00000000000089a6         db  0x83 ; '.'
00000000000089a7         db  0x04 ; '.'
00000000000089a8         db  0x5e ; '^'
00000000000089a9         db  0x0a ; '.'
00000000000089aa         db  0x0e ; '.'
00000000000089ab         db  0x18 ; '.'
00000000000089ac         db  0x41 ; 'A'
00000000000089ad         db  0x0e ; '.'
00000000000089ae         db  0x10 ; '.'
00000000000089af         db  0x42 ; 'B'
00000000000089b0         db  0x0e ; '.'
00000000000089b1         db  0x08 ; '.'
00000000000089b2         db  0x48 ; 'H'
00000000000089b3         db  0x0b ; '.'
00000000000089b4         db  0x00 ; '.'
00000000000089b5         db  0x00 ; '.'
00000000000089b6         db  0x00 ; '.'
00000000000089b7         db  0x00 ; '.'
00000000000089b8         dd         0x0000001c                                  ; Length of the record
00000000000089bc         dd         0x000003dc                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
00000000000089c0         db         0x80, 0xb8, 2 dup (0xff)                    ; begin 0x4240
00000000000089c4         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x42df)
00000000000089c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000089c9         db  0x44 ; 'D'
00000000000089ca         db  0x0e ; '.'
00000000000089cb         db  0x10 ; '.'
00000000000089cc         db  0x83 ; '.'
00000000000089cd         db  0x02 ; '.'
00000000000089ce         db  0x02 ; '.'
00000000000089cf         db  0x78 ; 'x'
00000000000089d0         db  0x0a ; '.'
00000000000089d1         db  0x0e ; '.'
00000000000089d2         db  0x08 ; '.'
00000000000089d3         db  0x41 ; 'A'
00000000000089d4         db  0x0b ; '.'
00000000000089d5         db  0x00 ; '.'
00000000000089d6         db  0x00 ; '.'
00000000000089d7         db  0x00 ; '.'
00000000000089d8         dd         0x00000040                                  ; Length of the record
00000000000089dc         dd         0x000003fc                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
00000000000089e0         db         0x00, 0xb9, 2 dup (0xff)                    ; begin 0x42e0
00000000000089e4         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x43c7)
00000000000089e8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000089e9         db  0x41 ; 'A'
00000000000089ea         db  0x0e ; '.'
00000000000089eb         db  0x10 ; '.'
00000000000089ec         db  0x86 ; '.'
00000000000089ed         db  0x02 ; '.'
00000000000089ee         db  0x41 ; 'A'
00000000000089ef         db  0x0e ; '.'
00000000000089f0         db  0x18 ; '.'
00000000000089f1         db  0x83 ; '.'
00000000000089f2         db  0x03 ; '.'
00000000000089f3         db  0x49 ; 'I'
00000000000089f4         db  0x0e ; '.'
00000000000089f5         db  0x20 ; ' '
00000000000089f6         db  0x6e ; 'n'
00000000000089f7         db  0x0a ; '.'
00000000000089f8         db  0x0e ; '.'
00000000000089f9         db  0x18 ; '.'
00000000000089fa         db  0x41 ; 'A'
00000000000089fb         db  0x0e ; '.'
00000000000089fc         db  0x10 ; '.'
00000000000089fd         db  0x41 ; 'A'
00000000000089fe         db  0x0e ; '.'
00000000000089ff         db  0x08 ; '.'
0000000000008a00         db  0x45 ; 'E'
0000000000008a01         db  0x0b ; '.'
0000000000008a02         db  0x02 ; '.'
0000000000008a03         db  0x4a ; 'J'
0000000000008a04         db  0x0a ; '.'
0000000000008a05         db  0x0e ; '.'
0000000000008a06         db  0x18 ; '.'
0000000000008a07         db  0x41 ; 'A'
0000000000008a08         db  0x0e ; '.'
0000000000008a09         db  0x10 ; '.'
0000000000008a0a         db  0x41 ; 'A'
0000000000008a0b         db  0x0e ; '.'
0000000000008a0c         db  0x08 ; '.'
0000000000008a0d         db  0x44 ; 'D'
0000000000008a0e         db  0x0b ; '.'
0000000000008a0f         db  0x02 ; '.'
0000000000008a10         db  0x54 ; 'T'
0000000000008a11         db  0x0e ; '.'
0000000000008a12         db  0x18 ; '.'
0000000000008a13         db  0x41 ; 'A'
0000000000008a14         db  0x0e ; '.'
0000000000008a15         db  0x10 ; '.'
0000000000008a16         db  0x41 ; 'A'
0000000000008a17         db  0x0e ; '.'
0000000000008a18         db  0x08 ; '.'
0000000000008a19         db  0x00 ; '.'
0000000000008a1a         db  0x00 ; '.'
0000000000008a1b         db  0x00 ; '.'
0000000000008a1c         dd         0x00000074                                  ; Length of the record
0000000000008a20         dd         0x00000440                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008a24         db         0xac, 0xb9, 2 dup (0xff)                    ; begin 0x43d0
0000000000008a28         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x5604)
0000000000008a2c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008a2d         db  0x42 ; 'B'
0000000000008a2e         db  0x0e ; '.'
0000000000008a2f         db  0x10 ; '.'
0000000000008a30         db  0x8f ; '.'
0000000000008a31         db  0x02 ; '.'
0000000000008a32         db  0x42 ; 'B'
0000000000008a33         db  0x0e ; '.'
0000000000008a34         db  0x18 ; '.'
0000000000008a35         db  0x8e ; '.'
0000000000008a36         db  0x03 ; '.'
0000000000008a37         db  0x45 ; 'E'
0000000000008a38         db  0x0e ; '.'
0000000000008a39         db  0x20 ; ' '
0000000000008a3a         db  0x8d ; '.'
0000000000008a3b         db  0x04 ; '.'
0000000000008a3c         db  0x42 ; 'B'
0000000000008a3d         db  0x0e ; '.'
0000000000008a3e         db  0x28 ; '('
0000000000008a3f         db  0x8c ; '.'
0000000000008a40         db  0x05 ; '.'
0000000000008a41         db  0x44 ; 'D'
0000000000008a42         db  0x0e ; '.'
0000000000008a43         db  0x30 ; '0'
0000000000008a44         db  0x86 ; '.'
0000000000008a45         db  0x06 ; '.'
0000000000008a46         db  0x41 ; 'A'
0000000000008a47         db  0x0e ; '.'
0000000000008a48         db  0x38 ; '8'
0000000000008a49         db  0x83 ; '.'
0000000000008a4a         db  0x07 ; '.'
0000000000008a4b         db  0x53 ; 'S'
0000000000008a4c         db  0x0e ; '.'
0000000000008a4d         db  0xf0 ; '.'
0000000000008a4e         db  0x01 ; '.'
0000000000008a4f         db  0x03 ; '.'
0000000000008a50         db  0x81 ; '.'
0000000000008a51         db  0x0b ; '.'
0000000000008a52         db  0x0e ; '.'
0000000000008a53         db  0xf8 ; '.'
0000000000008a54         db  0x01 ; '.'
0000000000008a55         db  0x4a ; 'J'
0000000000008a56         db  0x0e ; '.'
0000000000008a57         db  0x80 ; '.'
0000000000008a58         db  0x02 ; '.'
0000000000008a59         db  0x44 ; 'D'
0000000000008a5a         db  0x0e ; '.'
0000000000008a5b         db  0x88 ; '.'
0000000000008a5c         db  0x02 ; '.'
0000000000008a5d         db  0x45 ; 'E'
0000000000008a5e         db  0x0e ; '.'
0000000000008a5f         db  0x90 ; '.'
0000000000008a60         db  0x02 ; '.'
0000000000008a61         db  0x5f ; '_'
0000000000008a62         db  0x0e ; '.'
0000000000008a63         db  0xf0 ; '.'
0000000000008a64         db  0x01 ; '.'
0000000000008a65         db  0x64 ; 'd'
0000000000008a66         db  0x0a ; '.'
0000000000008a67         db  0x0e ; '.'
0000000000008a68         db  0x38 ; '8'
0000000000008a69         db  0x41 ; 'A'
0000000000008a6a         db  0x0e ; '.'
0000000000008a6b         db  0x30 ; '0'
0000000000008a6c         db  0x41 ; 'A'
0000000000008a6d         db  0x0e ; '.'
0000000000008a6e         db  0x28 ; '('
0000000000008a6f         db  0x42 ; 'B'
0000000000008a70         db  0x0e ; '.'
0000000000008a71         db  0x20 ; ' '
0000000000008a72         db  0x42 ; 'B'
0000000000008a73         db  0x0e ; '.'
0000000000008a74         db  0x18 ; '.'
0000000000008a75         db  0x42 ; 'B'
0000000000008a76         db  0x0e ; '.'
0000000000008a77         db  0x10 ; '.'
0000000000008a78         db  0x42 ; 'B'
0000000000008a79         db  0x0e ; '.'
0000000000008a7a         db  0x08 ; '.'
0000000000008a7b         db  0x44 ; 'D'
0000000000008a7c         db  0x0b ; '.'
0000000000008a7d         db  0x03 ; '.'
0000000000008a7e         db  0x99 ; '.'
0000000000008a7f         db  0x05 ; '.'
0000000000008a80         db  0x0e ; '.'
0000000000008a81         db  0xf8 ; '.'
0000000000008a82         db  0x01 ; '.'
0000000000008a83         db  0x4d ; 'M'
0000000000008a84         db  0x0e ; '.'
0000000000008a85         db  0x80 ; '.'
0000000000008a86         db  0x02 ; '.'
0000000000008a87         db  0x44 ; 'D'
0000000000008a88         db  0x0e ; '.'
0000000000008a89         db  0x88 ; '.'
0000000000008a8a         db  0x02 ; '.'
0000000000008a8b         db  0x47 ; 'G'
0000000000008a8c         db  0x0e ; '.'
0000000000008a8d         db  0x90 ; '.'
0000000000008a8e         db  0x02 ; '.'
0000000000008a8f         db  0x5b ; '['
0000000000008a90         db  0x0e ; '.'
0000000000008a91         db  0xf0 ; '.'
0000000000008a92         db  0x01 ; '.'
0000000000008a93         db  0x00 ; '.'
0000000000008a94         dd         0x00000068                                  ; Length of the record
0000000000008a98         dd         0x000004b8                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008a9c         db         0x74, 0xcb, 2 dup (0xff)                    ; begin 0x5610
0000000000008aa0         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x57bb)
0000000000008aa4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008aa5         db  0x42 ; 'B'
0000000000008aa6         db  0x0e ; '.'
0000000000008aa7         db  0x10 ; '.'
0000000000008aa8         db  0x8f ; '.'
0000000000008aa9         db  0x02 ; '.'
0000000000008aaa         db  0x42 ; 'B'
0000000000008aab         db  0x0e ; '.'
0000000000008aac         db  0x18 ; '.'
0000000000008aad         db  0x8e ; '.'
0000000000008aae         db  0x03 ; '.'
0000000000008aaf         db  0x45 ; 'E'
0000000000008ab0         db  0x0e ; '.'
0000000000008ab1         db  0x20 ; ' '
0000000000008ab2         db  0x8d ; '.'
0000000000008ab3         db  0x04 ; '.'
0000000000008ab4         db  0x42 ; 'B'
0000000000008ab5         db  0x0e ; '.'
0000000000008ab6         db  0x28 ; '('
0000000000008ab7         db  0x8c ; '.'
0000000000008ab8         db  0x05 ; '.'
0000000000008ab9         db  0x44 ; 'D'
0000000000008aba         db  0x0e ; '.'
0000000000008abb         db  0x30 ; '0'
0000000000008abc         db  0x86 ; '.'
0000000000008abd         db  0x06 ; '.'
0000000000008abe         db  0x41 ; 'A'
0000000000008abf         db  0x0e ; '.'
0000000000008ac0         db  0x38 ; '8'
0000000000008ac1         db  0x83 ; '.'
0000000000008ac2         db  0x07 ; '.'
0000000000008ac3         db  0x47 ; 'G'
0000000000008ac4         db  0x0e ; '.'
0000000000008ac5         db  0x60 ; '`'
0000000000008ac6         db  0x02 ; '.'
0000000000008ac7         db  0x99 ; '.'
0000000000008ac8         db  0x0e ; '.'
0000000000008ac9         db  0x68 ; 'h'
0000000000008aca         db  0x5f ; '_'
0000000000008acb         db  0x0e ; '.'
0000000000008acc         db  0x70 ; 'p'
0000000000008acd         db  0x46 ; 'F'
0000000000008ace         db  0x0e ; '.'
0000000000008acf         db  0x78 ; 'x'
0000000000008ad0         db  0x42 ; 'B'
0000000000008ad1         db  0x0e ; '.'
0000000000008ad2         db  0x80 ; '.'
0000000000008ad3         db  0x01 ; '.'
0000000000008ad4         db  0x59 ; 'Y'
0000000000008ad5         db  0x0e ; '.'
0000000000008ad6         db  0x60 ; '`'
0000000000008ad7         db  0x02 ; '.'
0000000000008ad8         db  0x40 ; '@'
0000000000008ad9         db  0x0e ; '.'
0000000000008ada         db  0x68 ; 'h'
0000000000008adb         db  0x4b ; 'K'
0000000000008adc         db  0x0e ; '.'
0000000000008add         db  0x70 ; 'p'
0000000000008ade         db  0x43 ; 'C'
0000000000008adf         db  0x0e ; '.'
0000000000008ae0         db  0x78 ; 'x'
0000000000008ae1         db  0x45 ; 'E'
0000000000008ae2         db  0x0e ; '.'
0000000000008ae3         db  0x80 ; '.'
0000000000008ae4         db  0x01 ; '.'
0000000000008ae5         db  0x5e ; '^'
0000000000008ae6         db  0x0e ; '.'
0000000000008ae7         db  0x60 ; '`'
0000000000008ae8         db  0x4c ; 'L'
0000000000008ae9         db  0x0a ; '.'
0000000000008aea         db  0x0e ; '.'
0000000000008aeb         db  0x38 ; '8'
0000000000008aec         db  0x44 ; 'D'
0000000000008aed         db  0x0e ; '.'
0000000000008aee         db  0x30 ; '0'
0000000000008aef         db  0x41 ; 'A'
0000000000008af0         db  0x0e ; '.'
0000000000008af1         db  0x28 ; '('
0000000000008af2         db  0x42 ; 'B'
0000000000008af3         db  0x0e ; '.'
0000000000008af4         db  0x20 ; ' '
0000000000008af5         db  0x42 ; 'B'
0000000000008af6         db  0x0e ; '.'
0000000000008af7         db  0x18 ; '.'
0000000000008af8         db  0x42 ; 'B'
0000000000008af9         db  0x0e ; '.'
0000000000008afa         db  0x10 ; '.'
0000000000008afb         db  0x42 ; 'B'
0000000000008afc         db  0x0e ; '.'
0000000000008afd         db  0x08 ; '.'
0000000000008afe         db  0x46 ; 'F'
0000000000008aff         db  0x0b ; '.'
0000000000008b00         dd         0x00000028                                  ; Length of the record
0000000000008b04         dd         0x00000524                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008b08         db         0xb8, 0xcc, 2 dup (0xff)                    ; begin 0x57c0
0000000000008b0c         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x57f6)
0000000000008b10         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b11         db  0x42 ; 'B'
0000000000008b12         db  0x0e ; '.'
0000000000008b13         db  0x10 ; '.'
0000000000008b14         db  0x8c ; '.'
0000000000008b15         db  0x02 ; '.'
0000000000008b16         db  0x41 ; 'A'
0000000000008b17         db  0x0e ; '.'
0000000000008b18         db  0x18 ; '.'
0000000000008b19         db  0x86 ; '.'
0000000000008b1a         db  0x03 ; '.'
0000000000008b1b         db  0x41 ; 'A'
0000000000008b1c         db  0x0e ; '.'
0000000000008b1d         db  0x20 ; ' '
0000000000008b1e         db  0x83 ; '.'
0000000000008b1f         db  0x04 ; '.'
0000000000008b20         db  0x6e ; 'n'
0000000000008b21         db  0x0e ; '.'
0000000000008b22         db  0x18 ; '.'
0000000000008b23         db  0x41 ; 'A'
0000000000008b24         db  0x0e ; '.'
0000000000008b25         db  0x10 ; '.'
0000000000008b26         db  0x42 ; 'B'
0000000000008b27         db  0x0e ; '.'
0000000000008b28         db  0x08 ; '.'
0000000000008b29         db  0x00 ; '.'
0000000000008b2a         db  0x00 ; '.'
0000000000008b2b         db  0x00 ; '.'
0000000000008b2c         dd         0x00000010                                  ; Length of the record
0000000000008b30         dd         0x00000550                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008b34         db         2 dup (0xcc), 2 dup (0xff)                  ; begin 0x5800
0000000000008b38         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x5811)
0000000000008b3c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b3d         align      64
0000000000008b40         dd         0x00000010                                  ; Length of the record
0000000000008b44         dd         0x00000564                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008b48         db         0xd8, 0xcc, 2 dup (0xff)                    ; begin 0x5820
0000000000008b4c         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x5831)
0000000000008b50         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b51         align      4
0000000000008b54         dd         0x00000010                                  ; Length of the record
0000000000008b58         dd         0x00000578                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008b5c         db         0xe4, 0xcc, 2 dup (0xff)                    ; begin 0x5840
0000000000008b60         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x5875)
0000000000008b64         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b65         align      8
0000000000008b68         dd         0x00000010                                  ; Length of the record
0000000000008b6c         dd         0x0000058c                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008b70         db         0x10, 0xcd, 2 dup (0xff)                    ; begin 0x5880
0000000000008b74         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x5895)
0000000000008b78         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b79         align      4
0000000000008b7c         dd         0x00000010                                  ; Length of the record
0000000000008b80         dd         0x000005a0                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008b84         db         0x1c, 0xcd, 2 dup (0xff)                    ; begin 0x58a0
0000000000008b88         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x58d0)
0000000000008b8c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b8d         db  0x6b ; 'k'
0000000000008b8e         db  0x0e ; '.'
0000000000008b8f         db  0x10 ; '.'
0000000000008b90         dd         0x00000050                                  ; Length of the record
0000000000008b94         dd         0x000005b4                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008b98         db         0x38, 0xcd, 2 dup (0xff)                    ; begin 0x58d0
0000000000008b9c         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x5944)
0000000000008ba0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ba1         db  0x42 ; 'B'
0000000000008ba2         db  0x0e ; '.'
0000000000008ba3         db  0x10 ; '.'
0000000000008ba4         db  0x8f ; '.'
0000000000008ba5         db  0x02 ; '.'
0000000000008ba6         db  0x42 ; 'B'
0000000000008ba7         db  0x0e ; '.'
0000000000008ba8         db  0x18 ; '.'
0000000000008ba9         db  0x8e ; '.'
0000000000008baa         db  0x03 ; '.'
0000000000008bab         db  0x49 ; 'I'
0000000000008bac         db  0x0e ; '.'
0000000000008bad         db  0x20 ; ' '
0000000000008bae         db  0x8d ; '.'
0000000000008baf         db  0x04 ; '.'
0000000000008bb0         db  0x42 ; 'B'
0000000000008bb1         db  0x0e ; '.'
0000000000008bb2         db  0x28 ; '('
0000000000008bb3         db  0x8c ; '.'
0000000000008bb4         db  0x05 ; '.'
0000000000008bb5         db  0x44 ; 'D'
0000000000008bb6         db  0x0e ; '.'
0000000000008bb7         db  0x30 ; '0'
0000000000008bb8         db  0x86 ; '.'
0000000000008bb9         db  0x06 ; '.'
0000000000008bba         db  0x41 ; 'A'
0000000000008bbb         db  0x0e ; '.'
0000000000008bbc         db  0x38 ; '8'
0000000000008bbd         db  0x83 ; '.'
0000000000008bbe         db  0x07 ; '.'
0000000000008bbf         db  0x4d ; 'M'
0000000000008bc0         db  0x0e ; '.'
0000000000008bc1         db  0x50 ; 'P'
0000000000008bc2         db  0x5f ; '_'
0000000000008bc3         db  0x0e ; '.'
0000000000008bc4         db  0x58 ; 'X'
0000000000008bc5         db  0x47 ; 'G'
0000000000008bc6         db  0x0e ; '.'
0000000000008bc7         db  0x60 ; '`'
0000000000008bc8         db  0x46 ; 'F'
0000000000008bc9         db  0x0e ; '.'
0000000000008bca         db  0x68 ; 'h'
0000000000008bcb         db  0x44 ; 'D'
0000000000008bcc         db  0x0e ; '.'
0000000000008bcd         db  0x70 ; 'p'
0000000000008bce         db  0x58 ; 'X'
0000000000008bcf         db  0x0e ; '.'
0000000000008bd0         db  0x38 ; '8'
0000000000008bd1         db  0x41 ; 'A'
0000000000008bd2         db  0x0e ; '.'
0000000000008bd3         db  0x30 ; '0'
0000000000008bd4         db  0x41 ; 'A'
0000000000008bd5         db  0x0e ; '.'
0000000000008bd6         db  0x28 ; '('
0000000000008bd7         db  0x42 ; 'B'
0000000000008bd8         db  0x0e ; '.'
0000000000008bd9         db  0x20 ; ' '
0000000000008bda         db  0x42 ; 'B'
0000000000008bdb         db  0x0e ; '.'
0000000000008bdc         db  0x18 ; '.'
0000000000008bdd         db  0x42 ; 'B'
0000000000008bde         db  0x0e ; '.'
0000000000008bdf         db  0x10 ; '.'
0000000000008be0         db  0x42 ; 'B'
0000000000008be1         db  0x0e ; '.'
0000000000008be2         db  0x08 ; '.'
0000000000008be3         db  0x00 ; '.'
0000000000008be4         dd         0x00000068                                  ; Length of the record
0000000000008be8         dd         0x00000608                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008bec         db         0x64, 0xcd, 2 dup (0xff)                    ; begin 0x5950
0000000000008bf0         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x5a33)
0000000000008bf4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008bf5         db  0x42 ; 'B'
0000000000008bf6         db  0x0e ; '.'
0000000000008bf7         db  0x10 ; '.'
0000000000008bf8         db  0x8f ; '.'
0000000000008bf9         db  0x02 ; '.'
0000000000008bfa         db  0x42 ; 'B'
0000000000008bfb         db  0x0e ; '.'
0000000000008bfc         db  0x18 ; '.'
0000000000008bfd         db  0x8e ; '.'
0000000000008bfe         db  0x03 ; '.'
0000000000008bff         db  0x49 ; 'I'
0000000000008c00         db  0x0e ; '.'
0000000000008c01         db  0x20 ; ' '
0000000000008c02         db  0x8d ; '.'
0000000000008c03         db  0x04 ; '.'
0000000000008c04         db  0x42 ; 'B'
0000000000008c05         db  0x0e ; '.'
0000000000008c06         db  0x28 ; '('
0000000000008c07         db  0x8c ; '.'
0000000000008c08         db  0x05 ; '.'
0000000000008c09         db  0x44 ; 'D'
0000000000008c0a         db  0x0e ; '.'
0000000000008c0b         db  0x30 ; '0'
0000000000008c0c         db  0x86 ; '.'
0000000000008c0d         db  0x06 ; '.'
0000000000008c0e         db  0x41 ; 'A'
0000000000008c0f         db  0x0e ; '.'
0000000000008c10         db  0x38 ; '8'
0000000000008c11         db  0x83 ; '.'
0000000000008c12         db  0x07 ; '.'
0000000000008c13         db  0x4d ; 'M'
0000000000008c14         db  0x0e ; '.'
0000000000008c15         db  0x70 ; 'p'
0000000000008c16         db  0x65 ; 'e'
0000000000008c17         db  0x0e ; '.'
0000000000008c18         db  0x78 ; 'x'
0000000000008c19         db  0x4d ; 'M'
0000000000008c1a         db  0x0e ; '.'
0000000000008c1b         db  0x80 ; '.'
0000000000008c1c         db  0x01 ; '.'
0000000000008c1d         db  0x46 ; 'F'
0000000000008c1e         db  0x0e ; '.'
0000000000008c1f         db  0x88 ; '.'
0000000000008c20         db  0x01 ; '.'
0000000000008c21         db  0x42 ; 'B'
0000000000008c22         db  0x0e ; '.'
0000000000008c23         db  0x90 ; '.'
0000000000008c24         db  0x01 ; '.'
0000000000008c25         db  0x5e ; '^'
0000000000008c26         db  0x0e ; '.'
0000000000008c27         db  0x70 ; 'p'
0000000000008c28         db  0x56 ; 'V'
0000000000008c29         db  0x0e ; '.'
0000000000008c2a         db  0x78 ; 'x'
0000000000008c2b         db  0x43 ; 'C'
0000000000008c2c         db  0x0e ; '.'
0000000000008c2d         db  0x80 ; '.'
0000000000008c2e         db  0x01 ; '.'
0000000000008c2f         db  0x43 ; 'C'
0000000000008c30         db  0x0e ; '.'
0000000000008c31         db  0x88 ; '.'
0000000000008c32         db  0x01 ; '.'
0000000000008c33         db  0x56 ; 'V'
0000000000008c34         db  0x0e ; '.'
0000000000008c35         db  0x90 ; '.'
0000000000008c36         db  0x01 ; '.'
0000000000008c37         db  0x52 ; 'R'
0000000000008c38         db  0x0e ; '.'
0000000000008c39         db  0x70 ; 'p'
0000000000008c3a         db  0x5b ; '['
0000000000008c3b         db  0x0e ; '.'
0000000000008c3c         db  0x38 ; '8'
0000000000008c3d         db  0x41 ; 'A'
0000000000008c3e         db  0x0e ; '.'
0000000000008c3f         db  0x30 ; '0'
0000000000008c40         db  0x41 ; 'A'
0000000000008c41         db  0x0e ; '.'
0000000000008c42         db  0x28 ; '('
0000000000008c43         db  0x42 ; 'B'
0000000000008c44         db  0x0e ; '.'
0000000000008c45         db  0x20 ; ' '
0000000000008c46         db  0x42 ; 'B'
0000000000008c47         db  0x0e ; '.'
0000000000008c48         db  0x18 ; '.'
0000000000008c49         db  0x42 ; 'B'
0000000000008c4a         db  0x0e ; '.'
0000000000008c4b         db  0x10 ; '.'
0000000000008c4c         db  0x42 ; 'B'
0000000000008c4d         db  0x0e ; '.'
0000000000008c4e         db  0x08 ; '.'
0000000000008c4f         db  0x00 ; '.'
0000000000008c50         dd         0x00000010                                  ; Length of the record
0000000000008c54         dd         0x00000674                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008c58         db         0xe8, 0xcd, 2 dup (0xff)                    ; begin 0x5a40
0000000000008c5c         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x5a4a)
0000000000008c60         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c61         align      4
0000000000008c64         dd         0x00000028                                  ; Length of the record
0000000000008c68         dd         0x00000688                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008c6c         db         0xe4, 0xcd, 2 dup (0xff)                    ; begin 0x5a50
0000000000008c70         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x5ae3)
0000000000008c74         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c75         db  0x48 ; 'H'
0000000000008c76         db  0x0e ; '.'
0000000000008c77         db  0x10 ; '.'
0000000000008c78         db  0x8c ; '.'
0000000000008c79         db  0x02 ; '.'
0000000000008c7a         db  0x48 ; 'H'
0000000000008c7b         db  0x0e ; '.'
0000000000008c7c         db  0x18 ; '.'
0000000000008c7d         db  0x86 ; '.'
0000000000008c7e         db  0x03 ; '.'
0000000000008c7f         db  0x41 ; 'A'
0000000000008c80         db  0x0e ; '.'
0000000000008c81         db  0x20 ; ' '
0000000000008c82         db  0x83 ; '.'
0000000000008c83         db  0x04 ; '.'
0000000000008c84         db  0x02 ; '.'
0000000000008c85         db  0x74 ; 't'
0000000000008c86         db  0x0e ; '.'
0000000000008c87         db  0x18 ; '.'
0000000000008c88         db  0x4b ; 'K'
0000000000008c89         db  0x0e ; '.'
0000000000008c8a         db  0x10 ; '.'
0000000000008c8b         db  0x42 ; 'B'
0000000000008c8c         db  0x0e ; '.'
0000000000008c8d         db  0x08 ; '.'
0000000000008c8e         db  0x00 ; '.'
0000000000008c8f         db  0x00 ; '.'
0000000000008c90         dd         0x00000010                                  ; Length of the record
0000000000008c94         dd         0x000006b4                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008c98         db         0x58, 0xce, 2 dup (0xff)                    ; begin 0x5af0
0000000000008c9c         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5b03)
0000000000008ca0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ca1         align      4
0000000000008ca4         dd         0x00000010                                  ; Length of the record
0000000000008ca8         dd         0x000006c8                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008cac         db         0x64, 0xce, 2 dup (0xff)                    ; begin 0x5b10
0000000000008cb0         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x5b1c)
0000000000008cb4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008cb5         align      8
0000000000008cb8         dd         0x00000010                                  ; Length of the record
0000000000008cbc         dd         0x000006dc                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008cc0         db         0x60, 0xce, 2 dup (0xff)                    ; begin 0x5b20
0000000000008cc4         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x5b38)
0000000000008cc8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008cc9         align      4
0000000000008ccc         dd         0x00000010                                  ; Length of the record
0000000000008cd0         dd         0x000006f0                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008cd4         db         0x6c, 0xce, 2 dup (0xff)                    ; begin 0x5b40
0000000000008cd8         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x5b54)
0000000000008cdc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008cdd         align      32
0000000000008ce0         dd         0x00000018                                  ; Length of the record
0000000000008ce4         dd         0x00000704                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008ce8         db         0x78, 0xce, 2 dup (0xff)                    ; begin 0x5b60
0000000000008cec         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x5bee)
0000000000008cf0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008cf1         db  0x44 ; 'D'
0000000000008cf2         db  0x0e ; '.'
0000000000008cf3         db  0x50 ; 'P'
0000000000008cf4         db  0x02 ; '.'
0000000000008cf5         db  0x7f ; '.'
0000000000008cf6         db  0x0a ; '.'
0000000000008cf7         db  0x0e ; '.'
0000000000008cf8         db  0x08 ; '.'
0000000000008cf9         db  0x41 ; 'A'
0000000000008cfa         db  0x0b ; '.'
0000000000008cfb         db  0x00 ; '.'
0000000000008cfc         dd         0x00000018                                  ; Length of the record
0000000000008d00         dd         0x00000720                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008d04         db         0xec, 0xce, 2 dup (0xff)                    ; begin 0x5bf0
0000000000008d08         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x5c7a)
0000000000008d0c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d0d         db  0x44 ; 'D'
0000000000008d0e         db  0x0e ; '.'
0000000000008d0f         db  0x50 ; 'P'
0000000000008d10         db  0x02 ; '.'
0000000000008d11         db  0x7b ; '{'
0000000000008d12         db  0x0a ; '.'
0000000000008d13         db  0x0e ; '.'
0000000000008d14         db  0x08 ; '.'
0000000000008d15         db  0x41 ; 'A'
0000000000008d16         db  0x0b ; '.'
0000000000008d17         db  0x00 ; '.'
0000000000008d18         dd         0x00000010                                  ; Length of the record
0000000000008d1c         dd         0x0000073c                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008d20         db         0x60, 0xcf, 2 dup (0xff)                    ; begin 0x5c80
0000000000008d24         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x5c8c)
0000000000008d28         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d29         align      4
0000000000008d2c         dd         0x00000010                                  ; Length of the record
0000000000008d30         dd         0x00000750                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008d34         db         0x5c, 0xcf, 2 dup (0xff)                    ; begin 0x5c90
0000000000008d38         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x5c9f)
0000000000008d3c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d3d         align      64
0000000000008d40         dd         0x00000018                                  ; Length of the record
0000000000008d44         dd         0x00000764                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008d48         db         0x58, 0xcf, 2 dup (0xff)                    ; begin 0x5ca0
0000000000008d4c         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x5d38)
0000000000008d50         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d51         db  0x44 ; 'D'
0000000000008d52         db  0x0e ; '.'
0000000000008d53         db  0x50 ; 'P'
0000000000008d54         db  0x02 ; '.'
0000000000008d55         db  0x8e ; '.'
0000000000008d56         db  0x0a ; '.'
0000000000008d57         db  0x0e ; '.'
0000000000008d58         db  0x08 ; '.'
0000000000008d59         db  0x41 ; 'A'
0000000000008d5a         db  0x0b ; '.'
0000000000008d5b         db  0x00 ; '.'
0000000000008d5c         dd         0x00000010                                  ; Length of the record
0000000000008d60         dd         0x00000780                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008d64         db         0xdc, 0xcf, 2 dup (0xff)                    ; begin 0x5d40
0000000000008d68         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x5d50)
0000000000008d6c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d6d         align      16
0000000000008d70         dd         0x00000010                                  ; Length of the record
0000000000008d74         dd         0x00000794                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008d78         db         0xd8, 0xcf, 2 dup (0xff)                    ; begin 0x5d50
0000000000008d7c         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x5d61)
0000000000008d80         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d81         align      4
0000000000008d84         dd         0x00000010                                  ; Length of the record
0000000000008d88         dd         0x000007a8                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008d8c         db         0xe4, 0xcf, 2 dup (0xff)                    ; begin 0x5d70
0000000000008d90         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x5d7a)
0000000000008d94         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d95         align      8
0000000000008d98         dd         0x00000018                                  ; Length of the record
0000000000008d9c         dd         0x000007bc                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008da0         db         0xe0, 0xcf, 2 dup (0xff)                    ; begin 0x5d80
0000000000008da4         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x5e0e)
0000000000008da8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008da9         db  0x44 ; 'D'
0000000000008daa         db  0x0e ; '.'
0000000000008dab         db  0x50 ; 'P'
0000000000008dac         db  0x02 ; '.'
0000000000008dad         db  0x7f ; '.'
0000000000008dae         db  0x0a ; '.'
0000000000008daf         db  0x0e ; '.'
0000000000008db0         db  0x08 ; '.'
0000000000008db1         db  0x41 ; 'A'
0000000000008db2         db  0x0b ; '.'
0000000000008db3         db  0x00 ; '.'
0000000000008db4         dd         0x00000018                                  ; Length of the record
0000000000008db8         dd         0x000007d8                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008dbc         db         0x54, 0xd0, 2 dup (0xff)                    ; begin 0x5e10
0000000000008dc0         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x5ea1)
0000000000008dc4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008dc5         db  0x44 ; 'D'
0000000000008dc6         db  0x0e ; '.'
0000000000008dc7         db  0x50 ; 'P'
0000000000008dc8         db  0x02 ; '.'
0000000000008dc9         db  0x82 ; '.'
0000000000008dca         db  0x0a ; '.'
0000000000008dcb         db  0x0e ; '.'
0000000000008dcc         db  0x08 ; '.'
0000000000008dcd         db  0x41 ; 'A'
0000000000008dce         db  0x0b ; '.'
0000000000008dcf         db  0x00 ; '.'
0000000000008dd0         dd         0x00000010                                  ; Length of the record
0000000000008dd4         dd         0x000007f4                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008dd8         db         0xd8, 0xd0, 2 dup (0xff)                    ; begin 0x5eb0
0000000000008ddc         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x5ebc)
0000000000008de0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008de1         align      4
0000000000008de4         dd         0x00000010                                  ; Length of the record
0000000000008de8         dd         0x00000808                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008dec         db         0xd4, 0xd0, 2 dup (0xff)                    ; begin 0x5ec0
0000000000008df0         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x5ed7)
0000000000008df4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008df5         align      8
0000000000008df8         dd         0x00000010                                  ; Length of the record
0000000000008dfc         dd         0x0000081c                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008e00         db         0xe0, 0xd0, 2 dup (0xff)                    ; begin 0x5ee0
0000000000008e04         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5ef3)
0000000000008e08         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e09         align      4
0000000000008e0c         dd         0x00000010                                  ; Length of the record
0000000000008e10         dd         0x00000830                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008e14         db         0xec, 0xd0, 2 dup (0xff)                    ; begin 0x5f00
0000000000008e18         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x5f0c)
0000000000008e1c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e1d         align      32
0000000000008e20         dd         0x00000010                                  ; Length of the record
0000000000008e24         dd         0x00000844                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008e28         db         0xe8, 0xd0, 2 dup (0xff)                    ; begin 0x5f10
0000000000008e2c         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x5f24)
0000000000008e30         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e31         align      4
0000000000008e34         dd         0x00000010                                  ; Length of the record
0000000000008e38         dd         0x00000858                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008e3c         db         0xf4, 0xd0, 2 dup (0xff)                    ; begin 0x5f30
0000000000008e40         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5f43)
0000000000008e44         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e45         align      8
0000000000008e48         dd         0x00000014                                  ; Length of the record
0000000000008e4c         dd         0x0000086c                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008e50         db         0x00, 0xd1, 2 dup (0xff)                    ; begin 0x5f50
0000000000008e54         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x5f68)
0000000000008e58         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e59         align      32
0000000000008e60         dd         0x00000014                                  ; Length of the record
0000000000008e64         dd         0x00000884                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008e68         db         0x08, 0xd1, 2 dup (0xff)                    ; begin 0x5f70
0000000000008e6c         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x5f7e)
0000000000008e70         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e71         align      8
0000000000008e78         dd         0x00000110                                  ; Length of the record
0000000000008e7c         dd         0x0000089c                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008e80         db         0x00, 0xd1, 2 dup (0xff)                    ; begin 0x5f80
0000000000008e84         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x6397)
0000000000008e88         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e89         db  0x42 ; 'B'
0000000000008e8a         db  0x0e ; '.'
0000000000008e8b         db  0x10 ; '.'
0000000000008e8c         db  0x8f ; '.'
0000000000008e8d         db  0x02 ; '.'
0000000000008e8e         db  0x42 ; 'B'
0000000000008e8f         db  0x0e ; '.'
0000000000008e90         db  0x18 ; '.'
0000000000008e91         db  0x8e ; '.'
0000000000008e92         db  0x03 ; '.'
0000000000008e93         db  0x42 ; 'B'
0000000000008e94         db  0x0e ; '.'
0000000000008e95         db  0x20 ; ' '
0000000000008e96         db  0x8d ; '.'
0000000000008e97         db  0x04 ; '.'
0000000000008e98         db  0x42 ; 'B'
0000000000008e99         db  0x0e ; '.'
0000000000008e9a         db  0x28 ; '('
0000000000008e9b         db  0x8c ; '.'
0000000000008e9c         db  0x05 ; '.'
0000000000008e9d         db  0x44 ; 'D'
0000000000008e9e         db  0x0e ; '.'
0000000000008e9f         db  0x30 ; '0'
0000000000008ea0         db  0x86 ; '.'
0000000000008ea1         db  0x06 ; '.'
0000000000008ea2         db  0x41 ; 'A'
0000000000008ea3         db  0x0e ; '.'
0000000000008ea4         db  0x38 ; '8'
0000000000008ea5         db  0x83 ; '.'
0000000000008ea6         db  0x07 ; '.'
0000000000008ea7         db  0x4a ; 'J'
0000000000008ea8         db  0x0e ; '.'
0000000000008ea9         db  0x60 ; '`'
0000000000008eaa         db  0x02 ; '.'
0000000000008eab         db  0xdd ; '.'
0000000000008eac         db  0x0e ; '.'
0000000000008ead         db  0x68 ; 'h'
0000000000008eae         db  0x57 ; 'W'
0000000000008eaf         db  0x0e ; '.'
0000000000008eb0         db  0x70 ; 'p'
0000000000008eb1         db  0x42 ; 'B'
0000000000008eb2         db  0x0e ; '.'
0000000000008eb3         db  0x78 ; 'x'
0000000000008eb4         db  0x42 ; 'B'
0000000000008eb5         db  0x0e ; '.'
0000000000008eb6         db  0x80 ; '.'
0000000000008eb7         db  0x01 ; '.'
0000000000008eb8         db  0x42 ; 'B'
0000000000008eb9         db  0x0e ; '.'
0000000000008eba         db  0x88 ; '.'
0000000000008ebb         db  0x01 ; '.'
0000000000008ebc         db  0x42 ; 'B'
0000000000008ebd         db  0x0e ; '.'
0000000000008ebe         db  0x90 ; '.'
0000000000008ebf         db  0x01 ; '.'
0000000000008ec0         db  0x53 ; 'S'
0000000000008ec1         db  0x0e ; '.'
0000000000008ec2         db  0x60 ; '`'
0000000000008ec3         db  0x44 ; 'D'
0000000000008ec4         db  0x0a ; '.'
0000000000008ec5         db  0x0e ; '.'
0000000000008ec6         db  0x38 ; '8'
0000000000008ec7         db  0x41 ; 'A'
0000000000008ec8         db  0x0e ; '.'
0000000000008ec9         db  0x30 ; '0'
0000000000008eca         db  0x41 ; 'A'
0000000000008ecb         db  0x0e ; '.'
0000000000008ecc         db  0x28 ; '('
0000000000008ecd         db  0x42 ; 'B'
0000000000008ece         db  0x0e ; '.'
0000000000008ecf         db  0x20 ; ' '
0000000000008ed0         db  0x42 ; 'B'
0000000000008ed1         db  0x0e ; '.'
0000000000008ed2         db  0x18 ; '.'
0000000000008ed3         db  0x42 ; 'B'
0000000000008ed4         db  0x0e ; '.'
0000000000008ed5         db  0x10 ; '.'
0000000000008ed6         db  0x42 ; 'B'
0000000000008ed7         db  0x0e ; '.'
0000000000008ed8         db  0x08 ; '.'
0000000000008ed9         db  0x44 ; 'D'
0000000000008eda         db  0x0b ; '.'
0000000000008edb         db  0x02 ; '.'
0000000000008edc         db  0x78 ; 'x'
0000000000008edd         db  0x0a ; '.'
0000000000008ede         db  0x0e ; '.'
0000000000008edf         db  0x68 ; 'h'
0000000000008ee0         db  0x48 ; 'H'
0000000000008ee1         db  0x0b ; '.'
0000000000008ee2         db  0x5a ; 'Z'
0000000000008ee3         db  0x0a ; '.'
0000000000008ee4         db  0x0e ; '.'
0000000000008ee5         db  0x38 ; '8'
0000000000008ee6         db  0x47 ; 'G'
0000000000008ee7         db  0x0e ; '.'
0000000000008ee8         db  0x30 ; '0'
0000000000008ee9         db  0x41 ; 'A'
0000000000008eea         db  0x0e ; '.'
0000000000008eeb         db  0x28 ; '('
0000000000008eec         db  0x42 ; 'B'
0000000000008eed         db  0x0e ; '.'
0000000000008eee         db  0x20 ; ' '
0000000000008eef         db  0x42 ; 'B'
0000000000008ef0         db  0x0e ; '.'
0000000000008ef1         db  0x18 ; '.'
0000000000008ef2         db  0x42 ; 'B'
0000000000008ef3         db  0x0e ; '.'
0000000000008ef4         db  0x10 ; '.'
0000000000008ef5         db  0x42 ; 'B'
0000000000008ef6         db  0x0e ; '.'
0000000000008ef7         db  0x08 ; '.'
0000000000008ef8         db  0x56 ; 'V'
0000000000008ef9         db  0x0b ; '.'
0000000000008efa         db  0x5e ; '^'
0000000000008efb         db  0x0a ; '.'
0000000000008efc         db  0x0e ; '.'
0000000000008efd         db  0x38 ; '8'
0000000000008efe         db  0x52 ; 'R'
0000000000008eff         db  0x0e ; '.'
0000000000008f00         db  0x30 ; '0'
0000000000008f01         db  0x41 ; 'A'
0000000000008f02         db  0x0e ; '.'
0000000000008f03         db  0x28 ; '('
0000000000008f04         db  0x42 ; 'B'
0000000000008f05         db  0x0e ; '.'
0000000000008f06         db  0x20 ; ' '
0000000000008f07         db  0x42 ; 'B'
0000000000008f08         db  0x0e ; '.'
0000000000008f09         db  0x18 ; '.'
0000000000008f0a         db  0x42 ; 'B'
0000000000008f0b         db  0x0e ; '.'
0000000000008f0c         db  0x10 ; '.'
0000000000008f0d         db  0x42 ; 'B'
0000000000008f0e         db  0x0e ; '.'
0000000000008f0f         db  0x08 ; '.'
0000000000008f10         db  0x4f ; 'O'
0000000000008f11         db  0x0b ; '.'
0000000000008f12         db  0x62 ; 'b'
0000000000008f13         db  0x0a ; '.'
0000000000008f14         db  0x0e ; '.'
0000000000008f15         db  0x38 ; '8'
0000000000008f16         db  0x50 ; 'P'
0000000000008f17         db  0x0e ; '.'
0000000000008f18         db  0x30 ; '0'
0000000000008f19         db  0x41 ; 'A'
0000000000008f1a         db  0x0e ; '.'
0000000000008f1b         db  0x28 ; '('
0000000000008f1c         db  0x42 ; 'B'
0000000000008f1d         db  0x0e ; '.'
0000000000008f1e         db  0x20 ; ' '
0000000000008f1f         db  0x42 ; 'B'
0000000000008f20         db  0x0e ; '.'
0000000000008f21         db  0x18 ; '.'
0000000000008f22         db  0x42 ; 'B'
0000000000008f23         db  0x0e ; '.'
0000000000008f24         db  0x10 ; '.'
0000000000008f25         db  0x42 ; 'B'
0000000000008f26         db  0x0e ; '.'
0000000000008f27         db  0x08 ; '.'
0000000000008f28         db  0x55 ; 'U'
0000000000008f29         db  0x0b ; '.'
0000000000008f2a         db  0x66 ; 'f'
0000000000008f2b         db  0x0e ; '.'
0000000000008f2c         db  0x68 ; 'h'
0000000000008f2d         db  0x42 ; 'B'
0000000000008f2e         db  0x0e ; '.'
0000000000008f2f         db  0x70 ; 'p'
0000000000008f30         db  0x5c ; '\'
0000000000008f31         db  0x0e ; '.'
0000000000008f32         db  0x68 ; 'h'
0000000000008f33         db  0x41 ; 'A'
0000000000008f34         db  0x0e ; '.'
0000000000008f35         db  0x60 ; '`'
0000000000008f36         db  0x44 ; 'D'
0000000000008f37         db  0x0a ; '.'
0000000000008f38         db  0x0e ; '.'
0000000000008f39         db  0x38 ; '8'
0000000000008f3a         db  0x41 ; 'A'
0000000000008f3b         db  0x0e ; '.'
0000000000008f3c         db  0x30 ; '0'
0000000000008f3d         db  0x41 ; 'A'
0000000000008f3e         db  0x0e ; '.'
0000000000008f3f         db  0x28 ; '('
0000000000008f40         db  0x42 ; 'B'
0000000000008f41         db  0x0e ; '.'
0000000000008f42         db  0x20 ; ' '
0000000000008f43         db  0x42 ; 'B'
0000000000008f44         db  0x0e ; '.'
0000000000008f45         db  0x18 ; '.'
0000000000008f46         db  0x42 ; 'B'
0000000000008f47         db  0x0e ; '.'
0000000000008f48         db  0x10 ; '.'
0000000000008f49         db  0x42 ; 'B'
0000000000008f4a         db  0x0e ; '.'
0000000000008f4b         db  0x08 ; '.'
0000000000008f4c         db  0x45 ; 'E'
0000000000008f4d         db  0x0b ; '.'
0000000000008f4e         db  0x68 ; 'h'
0000000000008f4f         db  0x0a ; '.'
0000000000008f50         db  0x0e ; '.'
0000000000008f51         db  0x68 ; 'h'
0000000000008f52         db  0x48 ; 'H'
0000000000008f53         db  0x0b ; '.'
0000000000008f54         db  0x72 ; 'r'
0000000000008f55         db  0x0e ; '.'
0000000000008f56         db  0x68 ; 'h'
0000000000008f57         db  0x45 ; 'E'
0000000000008f58         db  0x0e ; '.'
0000000000008f59         db  0x70 ; 'p'
0000000000008f5a         db  0x42 ; 'B'
0000000000008f5b         db  0x0e ; '.'
0000000000008f5c         db  0x78 ; 'x'
0000000000008f5d         db  0x42 ; 'B'
0000000000008f5e         db  0x0e ; '.'
0000000000008f5f         db  0x80 ; '.'
0000000000008f60         db  0x01 ; '.'
0000000000008f61         db  0x5e ; '^'
0000000000008f62         db  0x0e ; '.'
0000000000008f63         db  0x60 ; '`'
0000000000008f64         db  0x44 ; 'D'
0000000000008f65         db  0x0a ; '.'
0000000000008f66         db  0x0e ; '.'
0000000000008f67         db  0x38 ; '8'
0000000000008f68         db  0x41 ; 'A'
0000000000008f69         db  0x0e ; '.'
0000000000008f6a         db  0x30 ; '0'
0000000000008f6b         db  0x41 ; 'A'
0000000000008f6c         db  0x0e ; '.'
0000000000008f6d         db  0x28 ; '('
0000000000008f6e         db  0x42 ; 'B'
0000000000008f6f         db  0x0e ; '.'
0000000000008f70         db  0x20 ; ' '
0000000000008f71         db  0x42 ; 'B'
0000000000008f72         db  0x0e ; '.'
0000000000008f73         db  0x18 ; '.'
0000000000008f74         db  0x42 ; 'B'
0000000000008f75         db  0x0e ; '.'
0000000000008f76         db  0x10 ; '.'
0000000000008f77         db  0x42 ; 'B'
0000000000008f78         db  0x0e ; '.'
0000000000008f79         db  0x08 ; '.'
0000000000008f7a         db  0x41 ; 'A'
0000000000008f7b         db  0x0b ; '.'
0000000000008f7c         db  0x79 ; 'y'
0000000000008f7d         db  0x0a ; '.'
0000000000008f7e         db  0x0e ; '.'
0000000000008f7f         db  0x68 ; 'h'
0000000000008f80         db  0x42 ; 'B'
0000000000008f81         db  0x0e ; '.'
0000000000008f82         db  0x70 ; 'p'
0000000000008f83         db  0x42 ; 'B'
0000000000008f84         db  0x0e ; '.'
0000000000008f85         db  0x78 ; 'x'
0000000000008f86         db  0x42 ; 'B'
0000000000008f87         db  0x0e ; '.'
0000000000008f88         db  0x80 ; '.'
0000000000008f89         db  0x01 ; '.'
0000000000008f8a         db  0x51 ; 'Q'
0000000000008f8b         db  0x0b ; '.'
0000000000008f8c         dd         0x00000010                                  ; Length of the record
0000000000008f90         dd         0x000009b0                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008f94         db         0x0c, 0xd4, 2 dup (0xff)                    ; begin 0x63a0
0000000000008f98         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x63c0)
0000000000008f9c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008f9d         align      32
0000000000008fa0         dd         0x00000018                                  ; Length of the record
0000000000008fa4         dd         0x000009c4                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008fa8         db         0x18, 0xd4, 2 dup (0xff)                    ; begin 0x63c0
0000000000008fac         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x6438)
0000000000008fb0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008fb1         db  0x44 ; 'D'
0000000000008fb2         db  0x0e ; '.'
0000000000008fb3         db  0x70 ; 'p'
0000000000008fb4         db  0x02 ; '.'
0000000000008fb5         db  0x60 ; '`'
0000000000008fb6         db  0x0a ; '.'
0000000000008fb7         db  0x0e ; '.'
0000000000008fb8         db  0x08 ; '.'
0000000000008fb9         db  0x41 ; 'A'
0000000000008fba         db  0x0b ; '.'
0000000000008fbb         db  0x00 ; '.'
0000000000008fbc         dd         0x00000028                                  ; Length of the record
0000000000008fc0         dd         0x000009e0                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008fc4         db         0x7c, 0xd4, 2 dup (0xff)                    ; begin 0x6440
0000000000008fc8         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x6515)
0000000000008fcc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008fcd         db  0x41 ; 'A'
0000000000008fce         db  0x0e ; '.'
0000000000008fcf         db  0x10 ; '.'
0000000000008fd0         db  0x86 ; '.'
0000000000008fd1         db  0x02 ; '.'
0000000000008fd2         db  0x41 ; 'A'
0000000000008fd3         db  0x0e ; '.'
0000000000008fd4         db  0x18 ; '.'
0000000000008fd5         db  0x83 ; '.'
0000000000008fd6         db  0x03 ; '.'
0000000000008fd7         db  0x50 ; 'P'
0000000000008fd8         db  0x0e ; '.'
0000000000008fd9         db  0xd0 ; '.'
0000000000008fda         db  0x01 ; '.'
0000000000008fdb         db  0x02 ; '.'
0000000000008fdc         db  0xab ; '.'
0000000000008fdd         db  0x0a ; '.'
0000000000008fde         db  0x0e ; '.'
0000000000008fdf         db  0x18 ; '.'
0000000000008fe0         db  0x41 ; 'A'
0000000000008fe1         db  0x0e ; '.'
0000000000008fe2         db  0x10 ; '.'
0000000000008fe3         db  0x41 ; 'A'
0000000000008fe4         db  0x0e ; '.'
0000000000008fe5         db  0x08 ; '.'
0000000000008fe6         db  0x41 ; 'A'
0000000000008fe7         db  0x0b ; '.'
0000000000008fe8         dd         0x0000001c                                  ; Length of the record
0000000000008fec         dd         0x00000a0c                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000008ff0         db         0x30, 0xd5, 2 dup (0xff)                    ; begin 0x6520
0000000000008ff4         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x65a0)
0000000000008ff8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ff9         db  0x41 ; 'A'
0000000000008ffa         db  0x0e ; '.'
0000000000008ffb         db  0x10 ; '.'
0000000000008ffc         db  0x83 ; '.'
0000000000008ffd         db  0x02 ; '.'
0000000000008ffe         db  0x02 ; '.'
0000000000008fff         db  0x7a ; 'z'
0000000000009000         db  0x0e ; '.'
0000000000009001         db  0x08 ; '.'
0000000000009002         db  0x00 ; '.'
0000000000009003         db  0x00 ; '.'
0000000000009004         db  0x00 ; '.'
0000000000009005         db  0x00 ; '.'
0000000000009006         db  0x00 ; '.'
0000000000009007         db  0x00 ; '.'
0000000000009008         dd         0x00000018                                  ; Length of the record
000000000000900c         dd         0x00000a2c                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000009010         db         0x90, 0xd5, 2 dup (0xff)                    ; begin 0x65a0
0000000000009014         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x65ba)
0000000000009018         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009019         db  0x41 ; 'A'
000000000000901a         db  0x0e ; '.'
000000000000901b         db  0x10 ; '.'
000000000000901c         db  0x83 ; '.'
000000000000901d         db  0x02 ; '.'
000000000000901e         db  0x53 ; 'S'
000000000000901f         db  0x0a ; '.'
0000000000009020         db  0x0e ; '.'
0000000000009021         db  0x08 ; '.'
0000000000009022         db  0x41 ; 'A'
0000000000009023         db  0x0b ; '.'
0000000000009024         dd         0x00000010                                  ; Length of the record
0000000000009028         dd         0x00000a48                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
000000000000902c         db         0x94, 0xd5, 2 dup (0xff)                    ; begin 0x65c0
0000000000009030         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x65e4)
0000000000009034         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009035         db  0x5f ; '_'
0000000000009036         db  0x0e ; '.'
0000000000009037         db  0x10 ; '.'
0000000000009038         dd         0x00000010                                  ; Length of the record
000000000000903c         dd         0x00000a5c                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000009040         db         0xb0, 0xd5, 2 dup (0xff)                    ; begin 0x65f0
0000000000009044         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x65f2)
0000000000009048         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009049         align      4
000000000000904c         dd         0x00000020                                  ; Length of the record
0000000000009050         dd         0x00000a70                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000009054         db         0xac, 0xd5, 2 dup (0xff)                    ; begin 0x6600
0000000000009058         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x6636)
000000000000905c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000905d         db  0x44 ; 'D'
000000000000905e         db  0x0e ; '.'
000000000000905f         db  0x10 ; '.'
0000000000009060         db  0x83 ; '.'
0000000000009061         db  0x02 ; '.'
0000000000009062         db  0x5d ; ']'
0000000000009063         db  0x0a ; '.'
0000000000009064         db  0x0e ; '.'
0000000000009065         db  0x08 ; '.'
0000000000009066         db  0x47 ; 'G'
0000000000009067         db  0x0b ; '.'
0000000000009068         db  0x48 ; 'H'
0000000000009069         db  0x0a ; '.'
000000000000906a         db  0x0e ; '.'
000000000000906b         db  0x08 ; '.'
000000000000906c         db  0x41 ; 'A'
000000000000906d         db  0x0b ; '.'
000000000000906e         db  0x00 ; '.'
000000000000906f         db  0x00 ; '.'
0000000000009070         dd         0x00000010                                  ; Length of the record
0000000000009074         dd         0x00000a94                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000009078         db         0xc8, 0xd5, 2 dup (0xff)                    ; begin 0x6640
000000000000907c         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x6664)
0000000000009080         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009081         db  0x5f ; '_'
0000000000009082         db  0x0e ; '.'
0000000000009083         db  0x10 ; '.'
0000000000009084         dd         0x00000014                                  ; Length of the record
0000000000009088         dd         0x00000aa8                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
000000000000908c         db         0xe4, 0xd5, 2 dup (0xff)                    ; begin 0x6670
0000000000009090         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x66f2)
0000000000009094         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009095         db  0x02 ; '.'
0000000000009096         db  0x5f ; '_'
0000000000009097         db  0x0e ; '.'
0000000000009098         db  0x10 ; '.'
0000000000009099         db  0x49 ; 'I'
000000000000909a         db  0x0e ; '.'
000000000000909b         db  0x08 ; '.'
000000000000909c         dd         0x00000014                                  ; Length of the record
00000000000090a0         dd         0x00000ac0                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
00000000000090a4         db         0x5c, 0xd6, 2 dup (0xff)                    ; begin 0x6700
00000000000090a8         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x674a)
00000000000090ac         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000090ad         db  0x02 ; '.'
00000000000090ae         db  0x45 ; 'E'
00000000000090af         db  0x0e ; '.'
00000000000090b0         db  0x10 ; '.'
00000000000090b1         db  0x00 ; '.'
00000000000090b2         db  0x00 ; '.'
00000000000090b3         db  0x00 ; '.'
00000000000090b4         dd         0x00000018                                  ; Length of the record
00000000000090b8         dd         0x00000ad8                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
00000000000090bc         db         0x94, 0xd6, 2 dup (0xff)                    ; begin 0x6750
00000000000090c0         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x6767)
00000000000090c4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000090c5         db  0x41 ; 'A'
00000000000090c6         db  0x0e ; '.'
00000000000090c7         db  0x10 ; '.'
00000000000090c8         db  0x83 ; '.'
00000000000090c9         db  0x02 ; '.'
00000000000090ca         db  0x51 ; 'Q'
00000000000090cb         db  0x0e ; '.'
00000000000090cc         db  0x08 ; '.'
00000000000090cd         db  0x00 ; '.'
00000000000090ce         db  0x00 ; '.'
00000000000090cf         db  0x00 ; '.'
00000000000090d0         dd         0x00000018                                  ; Length of the record
00000000000090d4         dd         0x00000af4                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
00000000000090d8         db         0x98, 0xd6, 2 dup (0xff)                    ; begin 0x6770
00000000000090dc         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x679e)
00000000000090e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000090e1         db  0x47 ; 'G'
00000000000090e2         db  0x0e ; '.'
00000000000090e3         db  0x10 ; '.'
00000000000090e4         db  0x61 ; 'a'
00000000000090e5         db  0x0a ; '.'
00000000000090e6         db  0x0e ; '.'
00000000000090e7         db  0x08 ; '.'
00000000000090e8         db  0x41 ; 'A'
00000000000090e9         db  0x0b ; '.'
00000000000090ea         db  0x00 ; '.'
00000000000090eb         db  0x00 ; '.'
00000000000090ec         dd         0x00000024                                  ; Length of the record
00000000000090f0         dd         0x00000b10                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
00000000000090f4         db         0xac, 0xd6, 2 dup (0xff)                    ; begin 0x67a0
00000000000090f8         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x67c8)
00000000000090fc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000090fd         db  0x41 ; 'A'
00000000000090fe         db  0x0e ; '.'
00000000000090ff         db  0x10 ; '.'
0000000000009100         db  0x86 ; '.'
0000000000009101         db  0x02 ; '.'
0000000000009102         db  0x41 ; 'A'
0000000000009103         db  0x0e ; '.'
0000000000009104         db  0x18 ; '.'
0000000000009105         db  0x83 ; '.'
0000000000009106         db  0x03 ; '.'
0000000000009107         db  0x4d ; 'M'
0000000000009108         db  0x0e ; '.'
0000000000009109         db  0x20 ; ' '
000000000000910a         db  0x49 ; 'I'
000000000000910b         db  0x0e ; '.'
000000000000910c         db  0x18 ; '.'
000000000000910d         db  0x47 ; 'G'
000000000000910e         db  0x0e ; '.'
000000000000910f         db  0x10 ; '.'
0000000000009110         db  0x41 ; 'A'
0000000000009111         db  0x0e ; '.'
0000000000009112         db  0x08 ; '.'
0000000000009113         db  0x00 ; '.'
0000000000009114         dd         0x00000018                                  ; Length of the record
0000000000009118         dd         0x00000b38                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
000000000000911c         db         0xb4, 0xd6, 2 dup (0xff)                    ; begin 0x67d0
0000000000009120         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x67e3)
0000000000009124         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009125         db  0x41 ; 'A'
0000000000009126         db  0x0e ; '.'
0000000000009127         db  0x10 ; '.'
0000000000009128         db  0x83 ; '.'
0000000000009129         db  0x02 ; '.'
000000000000912a         db  0x50 ; 'P'
000000000000912b         db  0x0e ; '.'
000000000000912c         db  0x08 ; '.'
000000000000912d         db  0x00 ; '.'
000000000000912e         db  0x00 ; '.'
000000000000912f         db  0x00 ; '.'
0000000000009130         dd         0x00000014                                  ; Length of the record
0000000000009134         dd         0x00000b54                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000009138         db         0xb8, 0xd6, 2 dup (0xff)                    ; begin 0x67f0
000000000000913c         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x6825)
0000000000009140         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009141         db  0x4b ; 'K'
0000000000009142         db  0x0e ; '.'
0000000000009143         db  0x10 ; '.'
0000000000009144         db  0x00 ; '.'
0000000000009145         db  0x00 ; '.'
0000000000009146         db  0x00 ; '.'
0000000000009147         db  0x00 ; '.'
0000000000009148         dd         0x00000034                                  ; Length of the record
000000000000914c         dd         0x00000b6c                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000009150         db         0xe0, 0xd6, 2 dup (0xff)                    ; begin 0x6830
0000000000009154         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x68ab)
0000000000009158         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009159         db  0x42 ; 'B'
000000000000915a         db  0x0e ; '.'
000000000000915b         db  0x10 ; '.'
000000000000915c         db  0x8c ; '.'
000000000000915d         db  0x02 ; '.'
000000000000915e         db  0x41 ; 'A'
000000000000915f         db  0x0e ; '.'
0000000000009160         db  0x18 ; '.'
0000000000009161         db  0x86 ; '.'
0000000000009162         db  0x03 ; '.'
0000000000009163         db  0x41 ; 'A'
0000000000009164         db  0x0e ; '.'
0000000000009165         db  0x20 ; ' '
0000000000009166         db  0x83 ; '.'
0000000000009167         db  0x04 ; '.'
0000000000009168         db  0x7d ; '}'
0000000000009169         db  0x0a ; '.'
000000000000916a         db  0x0e ; '.'
000000000000916b         db  0x18 ; '.'
000000000000916c         db  0x41 ; 'A'
000000000000916d         db  0x0e ; '.'
000000000000916e         db  0x10 ; '.'
000000000000916f         db  0x42 ; 'B'
0000000000009170         db  0x0e ; '.'
0000000000009171         db  0x08 ; '.'
0000000000009172         db  0x44 ; 'D'
0000000000009173         db  0x0b ; '.'
0000000000009174         db  0x60 ; '`'
0000000000009175         db  0x0a ; '.'
0000000000009176         db  0x0e ; '.'
0000000000009177         db  0x18 ; '.'
0000000000009178         db  0x41 ; 'A'
0000000000009179         db  0x0e ; '.'
000000000000917a         db  0x10 ; '.'
000000000000917b         db  0x42 ; 'B'
000000000000917c         db  0x0e ; '.'
000000000000917d         db  0x08 ; '.'
000000000000917e         db  0x45 ; 'E'
000000000000917f         db  0x0b ; '.'
0000000000009180         dd         0x00000034                                  ; Length of the record
0000000000009184         dd         0x00000ba4                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000009188         db         0x28, 0xd7, 2 dup (0xff)                    ; begin 0x68b0
000000000000918c         db         0x7e, 0x02, 2 dup (0x00)                    ; length 0x27e (end at 0x6b2e)
0000000000009190         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009191         db  0x42 ; 'B'
0000000000009192         db  0x0e ; '.'
0000000000009193         db  0x10 ; '.'
0000000000009194         db  0x8c ; '.'
0000000000009195         db  0x02 ; '.'
0000000000009196         db  0x41 ; 'A'
0000000000009197         db  0x0e ; '.'
0000000000009198         db  0x18 ; '.'
0000000000009199         db  0x86 ; '.'
000000000000919a         db  0x03 ; '.'
000000000000919b         db  0x43 ; 'C'
000000000000919c         db  0x0e ; '.'
000000000000919d         db  0x20 ; ' '
000000000000919e         db  0x83 ; '.'
000000000000919f         db  0x04 ; '.'
00000000000091a0         db  0x44 ; 'D'
00000000000091a1         db  0x0e ; '.'
00000000000091a2         db  0x70 ; 'p'
00000000000091a3         db  0x02 ; '.'
00000000000091a4         db  0xf0 ; '.'
00000000000091a5         db  0x0a ; '.'
00000000000091a6         db  0x0e ; '.'
00000000000091a7         db  0x20 ; ' '
00000000000091a8         db  0x41 ; 'A'
00000000000091a9         db  0x0e ; '.'
00000000000091aa         db  0x18 ; '.'
00000000000091ab         db  0x41 ; 'A'
00000000000091ac         db  0x0e ; '.'
00000000000091ad         db  0x10 ; '.'
00000000000091ae         db  0x42 ; 'B'
00000000000091af         db  0x0e ; '.'
00000000000091b0         db  0x08 ; '.'
00000000000091b1         db  0x42 ; 'B'
00000000000091b2         db  0x0b ; '.'
00000000000091b3         db  0x00 ; '.'
00000000000091b4         db  0x00 ; '.'
00000000000091b5         db  0x00 ; '.'
00000000000091b6         db  0x00 ; '.'
00000000000091b7         db  0x00 ; '.'
00000000000091b8         dd         0x0000001c                                  ; Length of the record
00000000000091bc         dd         0x00000bdc                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
00000000000091c0         db         0x70, 0xd9, 2 dup (0xff)                    ; begin 0x6b30
00000000000091c4         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x6b70)
00000000000091c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000091c9         db  0x44 ; 'D'
00000000000091ca         db  0x0e ; '.'
00000000000091cb         db  0x10 ; '.'
00000000000091cc         db  0x83 ; '.'
00000000000091cd         db  0x02 ; '.'
00000000000091ce         db  0x5a ; 'Z'
00000000000091cf         db  0x0a ; '.'
00000000000091d0         db  0x0e ; '.'
00000000000091d1         db  0x08 ; '.'
00000000000091d2         db  0x4a ; 'J'
00000000000091d3         db  0x0b ; '.'
00000000000091d4         db  0x53 ; 'S'
00000000000091d5         db  0x0e ; '.'
00000000000091d6         db  0x08 ; '.'
00000000000091d7         db  0x00 ; '.'
00000000000091d8         dd         0x0000002c                                  ; Length of the record
00000000000091dc         dd         0x00000bfc                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
00000000000091e0         db         0x90, 0xd9, 2 dup (0xff)                    ; begin 0x6b70
00000000000091e4         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x6bc7)
00000000000091e8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000091e9         db  0x63 ; 'c'
00000000000091ea         db  0x0e ; '.'
00000000000091eb         db  0x10 ; '.'
00000000000091ec         db  0x8c ; '.'
00000000000091ed         db  0x02 ; '.'
00000000000091ee         db  0x41 ; 'A'
00000000000091ef         db  0x0e ; '.'
00000000000091f0         db  0x18 ; '.'
00000000000091f1         db  0x86 ; '.'
00000000000091f2         db  0x03 ; '.'
00000000000091f3         db  0x44 ; 'D'
00000000000091f4         db  0x0e ; '.'
00000000000091f5         db  0x20 ; ' '
00000000000091f6         db  0x83 ; '.'
00000000000091f7         db  0x04 ; '.'
00000000000091f8         db  0x6b ; 'k'
00000000000091f9         db  0x0e ; '.'
00000000000091fa         db  0x18 ; '.'
00000000000091fb         db  0x41 ; 'A'
00000000000091fc         db  0x0e ; '.'
00000000000091fd         db  0x10 ; '.'
00000000000091fe         db  0x42 ; 'B'
00000000000091ff         db  0x0e ; '.'
0000000000009200         db  0x08 ; '.'
0000000000009201         db  0x00 ; '.'
0000000000009202         db  0x00 ; '.'
0000000000009203         db  0x00 ; '.'
0000000000009204         db  0x00 ; '.'
0000000000009205         db  0x00 ; '.'
0000000000009206         db  0x00 ; '.'
0000000000009207         db  0x00 ; '.'
0000000000009208         dd         0x0000003c                                  ; Length of the record
000000000000920c         dd         0x00000c2c                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000009210         db         0xc0, 0xd9, 2 dup (0xff)                    ; begin 0x6bd0
0000000000009214         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x6c53)
0000000000009218         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009219         db  0x42 ; 'B'
000000000000921a         db  0x0e ; '.'
000000000000921b         db  0x10 ; '.'
000000000000921c         db  0x8d ; '.'
000000000000921d         db  0x02 ; '.'
000000000000921e         db  0x42 ; 'B'
000000000000921f         db  0x0e ; '.'
0000000000009220         db  0x18 ; '.'
0000000000009221         db  0x8c ; '.'
0000000000009222         db  0x03 ; '.'
0000000000009223         db  0x44 ; 'D'
0000000000009224         db  0x0e ; '.'
0000000000009225         db  0x20 ; ' '
0000000000009226         db  0x86 ; '.'
0000000000009227         db  0x04 ; '.'
0000000000009228         db  0x41 ; 'A'
0000000000009229         db  0x0e ; '.'
000000000000922a         db  0x28 ; '('
000000000000922b         db  0x83 ; '.'
000000000000922c         db  0x05 ; '.'
000000000000922d         db  0x4a ; 'J'
000000000000922e         db  0x0e ; '.'
000000000000922f         db  0x40 ; '@'
0000000000009230         db  0x02 ; '.'
0000000000009231         db  0x64 ; 'd'
0000000000009232         db  0x0a ; '.'
0000000000009233         db  0x0e ; '.'
0000000000009234         db  0x28 ; '('
0000000000009235         db  0x41 ; 'A'
0000000000009236         db  0x0e ; '.'
0000000000009237         db  0x20 ; ' '
0000000000009238         db  0x41 ; 'A'
0000000000009239         db  0x0e ; '.'
000000000000923a         db  0x18 ; '.'
000000000000923b         db  0x42 ; 'B'
000000000000923c         db  0x0e ; '.'
000000000000923d         db  0x10 ; '.'
000000000000923e         db  0x42 ; 'B'
000000000000923f         db  0x0e ; '.'
0000000000009240         db  0x08 ; '.'
0000000000009241         db  0x41 ; 'A'
0000000000009242         db  0x0b ; '.'
0000000000009243         db  0x00 ; '.'
0000000000009244         db  0x00 ; '.'
0000000000009245         db  0x00 ; '.'
0000000000009246         db  0x00 ; '.'
0000000000009247         db  0x00 ; '.'
0000000000009248         dd         0x0000004c                                  ; Length of the record
000000000000924c         dd         0x00000c6c                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000009250         db         0x10, 0xda, 2 dup (0xff)                    ; begin 0x6c60
0000000000009254         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x6cdd)
0000000000009258         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009259         db  0x42 ; 'B'
000000000000925a         db  0x0e ; '.'
000000000000925b         db  0x10 ; '.'
000000000000925c         db  0x8c ; '.'
000000000000925d         db  0x02 ; '.'
000000000000925e         db  0x41 ; 'A'
000000000000925f         db  0x0e ; '.'
0000000000009260         db  0x18 ; '.'
0000000000009261         db  0x86 ; '.'
0000000000009262         db  0x03 ; '.'
0000000000009263         db  0x44 ; 'D'
0000000000009264         db  0x0e ; '.'
0000000000009265         db  0x20 ; ' '
0000000000009266         db  0x83 ; '.'
0000000000009267         db  0x04 ; '.'
0000000000009268         db  0x69 ; 'i'
0000000000009269         db  0x0a ; '.'
000000000000926a         db  0x0e ; '.'
000000000000926b         db  0x18 ; '.'
000000000000926c         db  0x41 ; 'A'
000000000000926d         db  0x0e ; '.'
000000000000926e         db  0x10 ; '.'
000000000000926f         db  0x42 ; 'B'
0000000000009270         db  0x0e ; '.'
0000000000009271         db  0x08 ; '.'
0000000000009272         db  0x45 ; 'E'
0000000000009273         db  0x0b ; '.'
0000000000009274         db  0x55 ; 'U'
0000000000009275         db  0x0a ; '.'
0000000000009276         db  0x0e ; '.'
0000000000009277         db  0x18 ; '.'
0000000000009278         db  0x41 ; 'A'
0000000000009279         db  0x0e ; '.'
000000000000927a         db  0x10 ; '.'
000000000000927b         db  0x42 ; 'B'
000000000000927c         db  0x0e ; '.'
000000000000927d         db  0x08 ; '.'
000000000000927e         db  0x48 ; 'H'
000000000000927f         db  0x0b ; '.'
0000000000009280         db  0x41 ; 'A'
0000000000009281         db  0x0a ; '.'
0000000000009282         db  0x0e ; '.'
0000000000009283         db  0x18 ; '.'
0000000000009284         db  0x46 ; 'F'
0000000000009285         db  0x0e ; '.'
0000000000009286         db  0x10 ; '.'
0000000000009287         db  0x42 ; 'B'
0000000000009288         db  0x0e ; '.'
0000000000009289         db  0x08 ; '.'
000000000000928a         db  0x47 ; 'G'
000000000000928b         db  0x0b ; '.'
000000000000928c         db  0x49 ; 'I'
000000000000928d         db  0x0e ; '.'
000000000000928e         db  0x18 ; '.'
000000000000928f         db  0x41 ; 'A'
0000000000009290         db  0x0e ; '.'
0000000000009291         db  0x10 ; '.'
0000000000009292         db  0x42 ; 'B'
0000000000009293         db  0x0e ; '.'
0000000000009294         db  0x08 ; '.'
0000000000009295         db  0x00 ; '.'
0000000000009296         db  0x00 ; '.'
0000000000009297         db  0x00 ; '.'
0000000000009298         dd         0x0000001c                                  ; Length of the record
000000000000929c         dd         0x00000cbc                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
00000000000092a0         db         0x40, 0xda, 2 dup (0xff)                    ; begin 0x6ce0
00000000000092a4         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x6d40)
00000000000092a8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000092a9         db  0x44 ; 'D'
00000000000092aa         db  0x0e ; '.'
00000000000092ab         db  0x10 ; '.'
00000000000092ac         db  0x75 ; 'u'
00000000000092ad         db  0x0a ; '.'
00000000000092ae         db  0x0e ; '.'
00000000000092af         db  0x08 ; '.'
00000000000092b0         db  0x47 ; 'G'
00000000000092b1         db  0x0b ; '.'
00000000000092b2         db  0x5f ; '_'
00000000000092b3         db  0x0e ; '.'
00000000000092b4         db  0x08 ; '.'
00000000000092b5         db  0x00 ; '.'
00000000000092b6         db  0x00 ; '.'
00000000000092b7         db  0x00 ; '.'
00000000000092b8         dd         0x0000001c                                  ; Length of the record
00000000000092bc         dd         0x00000cdc                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
00000000000092c0         db         0x80, 0xda, 2 dup (0xff)                    ; begin 0x6d40
00000000000092c4         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x6d7c)
00000000000092c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000092c9         db  0x44 ; 'D'
00000000000092ca         db  0x0e ; '.'
00000000000092cb         db  0x10 ; '.'
00000000000092cc         db  0x61 ; 'a'
00000000000092cd         db  0x0a ; '.'
00000000000092ce         db  0x0e ; '.'
00000000000092cf         db  0x08 ; '.'
00000000000092d0         db  0x4b ; 'K'
00000000000092d1         db  0x0b ; '.'
00000000000092d2         db  0x4b ; 'K'
00000000000092d3         db  0x0e ; '.'
00000000000092d4         db  0x08 ; '.'
00000000000092d5         db  0x00 ; '.'
00000000000092d6         db  0x00 ; '.'
00000000000092d7         db  0x00 ; '.'
00000000000092d8         dd         0x00000044                                  ; Length of the record
00000000000092dc         dd         0x00000cfc                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
00000000000092e0         db         0xa0, 0xda, 2 dup (0xff)                    ; begin 0x6d80
00000000000092e4         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x6de5)
00000000000092e8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000092e9         db  0x42 ; 'B'
00000000000092ea         db  0x0e ; '.'
00000000000092eb         db  0x10 ; '.'
00000000000092ec         db  0x8f ; '.'
00000000000092ed         db  0x02 ; '.'
00000000000092ee         db  0x42 ; 'B'
00000000000092ef         db  0x0e ; '.'
00000000000092f0         db  0x18 ; '.'
00000000000092f1         db  0x8e ; '.'
00000000000092f2         db  0x03 ; '.'
00000000000092f3         db  0x45 ; 'E'
00000000000092f4         db  0x0e ; '.'
00000000000092f5         db  0x20 ; ' '
00000000000092f6         db  0x8d ; '.'
00000000000092f7         db  0x04 ; '.'
00000000000092f8         db  0x42 ; 'B'
00000000000092f9         db  0x0e ; '.'
00000000000092fa         db  0x28 ; '('
00000000000092fb         db  0x8c ; '.'
00000000000092fc         db  0x05 ; '.'
00000000000092fd         db  0x48 ; 'H'
00000000000092fe         db  0x0e ; '.'
00000000000092ff         db  0x30 ; '0'
0000000000009300         db  0x86 ; '.'
0000000000009301         db  0x06 ; '.'
0000000000009302         db  0x48 ; 'H'
0000000000009303         db  0x0e ; '.'
0000000000009304         db  0x38 ; '8'
0000000000009305         db  0x83 ; '.'
0000000000009306         db  0x07 ; '.'
0000000000009307         db  0x4d ; 'M'
0000000000009308         db  0x0e ; '.'
0000000000009309         db  0x40 ; '@'
000000000000930a         db  0x72 ; 'r'
000000000000930b         db  0x0e ; '.'
000000000000930c         db  0x38 ; '8'
000000000000930d         db  0x41 ; 'A'
000000000000930e         db  0x0e ; '.'
000000000000930f         db  0x30 ; '0'
0000000000009310         db  0x41 ; 'A'
0000000000009311         db  0x0e ; '.'
0000000000009312         db  0x28 ; '('
0000000000009313         db  0x42 ; 'B'
0000000000009314         db  0x0e ; '.'
0000000000009315         db  0x20 ; ' '
0000000000009316         db  0x42 ; 'B'
0000000000009317         db  0x0e ; '.'
0000000000009318         db  0x18 ; '.'
0000000000009319         db  0x42 ; 'B'
000000000000931a         db  0x0e ; '.'
000000000000931b         db  0x10 ; '.'
000000000000931c         db  0x42 ; 'B'
000000000000931d         db  0x0e ; '.'
000000000000931e         db  0x08 ; '.'
000000000000931f         db  0x00 ; '.'
0000000000009320         dd         0x00000014                                  ; Length of the record
0000000000009324         dd         0x00000d44                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000009328         db         0xc8, 0xda, 2 dup (0xff)                    ; begin 0x6df0
000000000000932c         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x6df2)
0000000000009330         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009331         align      8
0000000000009338         dd         0x00000010                                  ; Length of the record
000000000000933c         dd         0x00000d5c                                  ; FDE: parent CIE at 0x85e0 (FDE encoding = 0x1B)
0000000000009340         db         0xc0, 0xda, 2 dup (0xff)                    ; begin 0x6e00
0000000000009344         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x6e0e)
0000000000009348         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009349         align      16


        ; Segment Segment 3
        ; Range: [0x209a10; 0x20a280[ (2160 bytes)
        ; File offset : [39440; 41120[ (1680 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x209a10; 0x209a18[ (8 bytes)
        ; File offset : [39440; 39448[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
0000000000209a10         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x209a18; 0x209a20[ (8 bytes)
        ; File offset : [39448; 39456[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
0000000000209a18         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x209a20; 0x209c18[ (504 bytes)
        ; File offset : [39456; 39960[ (504 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     long_options:
0000000000209a20         db  0xa6 ; '.'                                         ; DATA XREF=main+152
0000000000209a21         db  0x6f ; 'o'
0000000000209a22         db  0x00 ; '.'
0000000000209a23         db  0x00 ; '.'
0000000000209a24         db  0x00 ; '.'
0000000000209a25         db  0x00 ; '.'
0000000000209a26         db  0x00 ; '.'
0000000000209a27         db  0x00 ; '.'
0000000000209a28         db  0x00 ; '.'
0000000000209a29         db  0x00 ; '.'
0000000000209a2a         db  0x00 ; '.'
0000000000209a2b         db  0x00 ; '.'
0000000000209a2c         db  0x00 ; '.'
0000000000209a2d         db  0x00 ; '.'
0000000000209a2e         db  0x00 ; '.'
0000000000209a2f         db  0x00 ; '.'
0000000000209a30         db  0x00 ; '.'
0000000000209a31         db  0x00 ; '.'
0000000000209a32         db  0x00 ; '.'
0000000000209a33         db  0x00 ; '.'
0000000000209a34         db  0x00 ; '.'
0000000000209a35         db  0x00 ; '.'
0000000000209a36         db  0x00 ; '.'
0000000000209a37         db  0x00 ; '.'
0000000000209a38         db  0x62 ; 'b'
0000000000209a39         db  0x00 ; '.'
0000000000209a3a         db  0x00 ; '.'
0000000000209a3b         db  0x00 ; '.'
0000000000209a3c         db  0x00 ; '.'
0000000000209a3d         db  0x00 ; '.'
0000000000209a3e         db  0x00 ; '.'
0000000000209a3f         db  0x00 ; '.'
0000000000209a40         db  0xad ; '.'
0000000000209a41         db  0x6f ; 'o'
0000000000209a42         db  0x00 ; '.'
0000000000209a43         db  0x00 ; '.'
0000000000209a44         db  0x00 ; '.'
0000000000209a45         db  0x00 ; '.'
0000000000209a46         db  0x00 ; '.'
0000000000209a47         db  0x00 ; '.'
0000000000209a48         db  0x00 ; '.'
0000000000209a49         db  0x00 ; '.'
0000000000209a4a         db  0x00 ; '.'
0000000000209a4b         db  0x00 ; '.'
0000000000209a4c         db  0x00 ; '.'
0000000000209a4d         db  0x00 ; '.'
0000000000209a4e         db  0x00 ; '.'
0000000000209a4f         db  0x00 ; '.'
0000000000209a50         db  0x00 ; '.'
0000000000209a51         db  0x00 ; '.'
0000000000209a52         db  0x00 ; '.'
0000000000209a53         db  0x00 ; '.'
0000000000209a54         db  0x00 ; '.'
0000000000209a55         db  0x00 ; '.'
0000000000209a56         db  0x00 ; '.'
0000000000209a57         db  0x00 ; '.'
0000000000209a58         db  0x63 ; 'c'
0000000000209a59         db  0x00 ; '.'
0000000000209a5a         db  0x00 ; '.'
0000000000209a5b         db  0x00 ; '.'
0000000000209a5c         db  0x00 ; '.'
0000000000209a5d         db  0x00 ; '.'
0000000000209a5e         db  0x00 ; '.'
0000000000209a5f         db  0x00 ; '.'
0000000000209a60         db  0xb3 ; '.'
0000000000209a61         db  0x6f ; 'o'
0000000000209a62         db  0x00 ; '.'
0000000000209a63         db  0x00 ; '.'
0000000000209a64         db  0x00 ; '.'
0000000000209a65         db  0x00 ; '.'
0000000000209a66         db  0x00 ; '.'
0000000000209a67         db  0x00 ; '.'
0000000000209a68         db  0x00 ; '.'
0000000000209a69         db  0x00 ; '.'
0000000000209a6a         db  0x00 ; '.'
0000000000209a6b         db  0x00 ; '.'
0000000000209a6c         db  0x00 ; '.'
0000000000209a6d         db  0x00 ; '.'
0000000000209a6e         db  0x00 ; '.'
0000000000209a6f         db  0x00 ; '.'
0000000000209a70         db  0x00 ; '.'
0000000000209a71         db  0x00 ; '.'
0000000000209a72         db  0x00 ; '.'
0000000000209a73         db  0x00 ; '.'
0000000000209a74         db  0x00 ; '.'
0000000000209a75         db  0x00 ; '.'
0000000000209a76         db  0x00 ; '.'
0000000000209a77         db  0x00 ; '.'
0000000000209a78         db  0x80 ; '.'
0000000000209a79         db  0x00 ; '.'
0000000000209a7a         db  0x00 ; '.'
0000000000209a7b         db  0x00 ; '.'
0000000000209a7c         db  0x00 ; '.'
0000000000209a7d         db  0x00 ; '.'
0000000000209a7e         db  0x00 ; '.'
0000000000209a7f         db  0x00 ; '.'
0000000000209a80         db  0xc2 ; '.'
0000000000209a81         db  0x6f ; 'o'
0000000000209a82         db  0x00 ; '.'
0000000000209a83         db  0x00 ; '.'
0000000000209a84         db  0x00 ; '.'
0000000000209a85         db  0x00 ; '.'
0000000000209a86         db  0x00 ; '.'
0000000000209a87         db  0x00 ; '.'
0000000000209a88         db  0x00 ; '.'
0000000000209a89         db  0x00 ; '.'
0000000000209a8a         db  0x00 ; '.'
0000000000209a8b         db  0x00 ; '.'
0000000000209a8c         db  0x00 ; '.'
0000000000209a8d         db  0x00 ; '.'
0000000000209a8e         db  0x00 ; '.'
0000000000209a8f         db  0x00 ; '.'
0000000000209a90         db  0x00 ; '.'
0000000000209a91         db  0x00 ; '.'
0000000000209a92         db  0x00 ; '.'
0000000000209a93         db  0x00 ; '.'
0000000000209a94         db  0x00 ; '.'
0000000000209a95         db  0x00 ; '.'
0000000000209a96         db  0x00 ; '.'
0000000000209a97         db  0x00 ; '.'
0000000000209a98         db  0x82 ; '.'
0000000000209a99         db  0x00 ; '.'
0000000000209a9a         db  0x00 ; '.'
0000000000209a9b         db  0x00 ; '.'
0000000000209a9c         db  0x00 ; '.'
0000000000209a9d         db  0x00 ; '.'
0000000000209a9e         db  0x00 ; '.'
0000000000209a9f         db  0x00 ; '.'
0000000000209aa0         db  0xc8 ; '.'
0000000000209aa1         db  0x6f ; 'o'
0000000000209aa2         db  0x00 ; '.'
0000000000209aa3         db  0x00 ; '.'
0000000000209aa4         db  0x00 ; '.'
0000000000209aa5         db  0x00 ; '.'
0000000000209aa6         db  0x00 ; '.'
0000000000209aa7         db  0x00 ; '.'
0000000000209aa8         db  0x00 ; '.'
0000000000209aa9         db  0x00 ; '.'
0000000000209aaa         db  0x00 ; '.'
0000000000209aab         db  0x00 ; '.'
0000000000209aac         db  0x00 ; '.'
0000000000209aad         db  0x00 ; '.'
0000000000209aae         db  0x00 ; '.'
0000000000209aaf         db  0x00 ; '.'
0000000000209ab0         db  0x00 ; '.'
0000000000209ab1         db  0x00 ; '.'
0000000000209ab2         db  0x00 ; '.'
0000000000209ab3         db  0x00 ; '.'
0000000000209ab4         db  0x00 ; '.'
0000000000209ab5         db  0x00 ; '.'
0000000000209ab6         db  0x00 ; '.'
0000000000209ab7         db  0x00 ; '.'
0000000000209ab8         db  0x81 ; '.'
0000000000209ab9         db  0x00 ; '.'
0000000000209aba         db  0x00 ; '.'
0000000000209abb         db  0x00 ; '.'
0000000000209abc         db  0x00 ; '.'
0000000000209abd         db  0x00 ; '.'
0000000000209abe         db  0x00 ; '.'
0000000000209abf         db  0x00 ; '.'
0000000000209ac0         db  0xcf ; '.'
0000000000209ac1         db  0x6f ; 'o'
0000000000209ac2         db  0x00 ; '.'
0000000000209ac3         db  0x00 ; '.'
0000000000209ac4         db  0x00 ; '.'
0000000000209ac5         db  0x00 ; '.'
0000000000209ac6         db  0x00 ; '.'
0000000000209ac7         db  0x00 ; '.'
0000000000209ac8         db  0x00 ; '.'
0000000000209ac9         db  0x00 ; '.'
0000000000209aca         db  0x00 ; '.'
0000000000209acb         db  0x00 ; '.'
0000000000209acc         db  0x00 ; '.'
0000000000209acd         db  0x00 ; '.'
0000000000209ace         db  0x00 ; '.'
0000000000209acf         db  0x00 ; '.'
0000000000209ad0         db  0x00 ; '.'
0000000000209ad1         db  0x00 ; '.'
0000000000209ad2         db  0x00 ; '.'
0000000000209ad3         db  0x00 ; '.'
0000000000209ad4         db  0x00 ; '.'
0000000000209ad5         db  0x00 ; '.'
0000000000209ad6         db  0x00 ; '.'
0000000000209ad7         db  0x00 ; '.'
0000000000209ad8         db  0x74 ; 't'
0000000000209ad9         db  0x00 ; '.'
0000000000209ada         db  0x00 ; '.'
0000000000209adb         db  0x00 ; '.'
0000000000209adc         db  0x00 ; '.'
0000000000209add         db  0x00 ; '.'
0000000000209ade         db  0x00 ; '.'
0000000000209adf         db  0x00 ; '.'
0000000000209ae0         db  0xd4 ; '.'
0000000000209ae1         db  0x6f ; 'o'
0000000000209ae2         db  0x00 ; '.'
0000000000209ae3         db  0x00 ; '.'
0000000000209ae4         db  0x00 ; '.'
0000000000209ae5         db  0x00 ; '.'
0000000000209ae6         db  0x00 ; '.'
0000000000209ae7         db  0x00 ; '.'
0000000000209ae8         db  0x00 ; '.'
0000000000209ae9         db  0x00 ; '.'
0000000000209aea         db  0x00 ; '.'
0000000000209aeb         db  0x00 ; '.'
0000000000209aec         db  0x00 ; '.'
0000000000209aed         db  0x00 ; '.'
0000000000209aee         db  0x00 ; '.'
0000000000209aef         db  0x00 ; '.'
0000000000209af0         db  0x00 ; '.'
0000000000209af1         db  0x00 ; '.'
0000000000209af2         db  0x00 ; '.'
0000000000209af3         db  0x00 ; '.'
0000000000209af4         db  0x00 ; '.'
0000000000209af5         db  0x00 ; '.'
0000000000209af6         db  0x00 ; '.'
0000000000209af7         db  0x00 ; '.'
0000000000209af8         db  0x77 ; 'w'
0000000000209af9         db  0x00 ; '.'
0000000000209afa         db  0x00 ; '.'
0000000000209afb         db  0x00 ; '.'
0000000000209afc         db  0x00 ; '.'
0000000000209afd         db  0x00 ; '.'
0000000000209afe         db  0x00 ; '.'
0000000000209aff         db  0x00 ; '.'
0000000000209b00         db  0xd9 ; '.'
0000000000209b01         db  0x6f ; 'o'
0000000000209b02         db  0x00 ; '.'
0000000000209b03         db  0x00 ; '.'
0000000000209b04         db  0x00 ; '.'
0000000000209b05         db  0x00 ; '.'
0000000000209b06         db  0x00 ; '.'
0000000000209b07         db  0x00 ; '.'
0000000000209b08         db  0x00 ; '.'
0000000000209b09         db  0x00 ; '.'
0000000000209b0a         db  0x00 ; '.'
0000000000209b0b         db  0x00 ; '.'
0000000000209b0c         db  0x00 ; '.'
0000000000209b0d         db  0x00 ; '.'
0000000000209b0e         db  0x00 ; '.'
0000000000209b0f         db  0x00 ; '.'
0000000000209b10         db  0x00 ; '.'
0000000000209b11         db  0x00 ; '.'
0000000000209b12         db  0x00 ; '.'
0000000000209b13         db  0x00 ; '.'
0000000000209b14         db  0x00 ; '.'
0000000000209b15         db  0x00 ; '.'
0000000000209b16         db  0x00 ; '.'
0000000000209b17         db  0x00 ; '.'
0000000000209b18         db  0x83 ; '.'
0000000000209b19         db  0x00 ; '.'
0000000000209b1a         db  0x00 ; '.'
0000000000209b1b         db  0x00 ; '.'
0000000000209b1c         db  0x00 ; '.'
0000000000209b1d         db  0x00 ; '.'
0000000000209b1e         db  0x00 ; '.'
0000000000209b1f         db  0x00 ; '.'
0000000000209b20         db  0xe0 ; '.'
0000000000209b21         db  0x6f ; 'o'
0000000000209b22         db  0x00 ; '.'
0000000000209b23         db  0x00 ; '.'
0000000000209b24         db  0x00 ; '.'
0000000000209b25         db  0x00 ; '.'
0000000000209b26         db  0x00 ; '.'
0000000000209b27         db  0x00 ; '.'
0000000000209b28         db  0x00 ; '.'
0000000000209b29         db  0x00 ; '.'
0000000000209b2a         db  0x00 ; '.'
0000000000209b2b         db  0x00 ; '.'
0000000000209b2c         db  0x00 ; '.'
0000000000209b2d         db  0x00 ; '.'
0000000000209b2e         db  0x00 ; '.'
0000000000209b2f         db  0x00 ; '.'
0000000000209b30         db  0x00 ; '.'
0000000000209b31         db  0x00 ; '.'
0000000000209b32         db  0x00 ; '.'
0000000000209b33         db  0x00 ; '.'
0000000000209b34         db  0x00 ; '.'
0000000000209b35         db  0x00 ; '.'
0000000000209b36         db  0x00 ; '.'
0000000000209b37         db  0x00 ; '.'
0000000000209b38         db  0x84 ; '.'
0000000000209b39         db  0x00 ; '.'
0000000000209b3a         db  0x00 ; '.'
0000000000209b3b         db  0x00 ; '.'
0000000000209b3c         db  0x00 ; '.'
0000000000209b3d         db  0x00 ; '.'
0000000000209b3e         db  0x00 ; '.'
0000000000209b3f         db  0x00 ; '.'
0000000000209b40         db  0xe4 ; '.'
0000000000209b41         db  0x6f ; 'o'
0000000000209b42         db  0x00 ; '.'
0000000000209b43         db  0x00 ; '.'
0000000000209b44         db  0x00 ; '.'
0000000000209b45         db  0x00 ; '.'
0000000000209b46         db  0x00 ; '.'
0000000000209b47         db  0x00 ; '.'
0000000000209b48         db  0x00 ; '.'
0000000000209b49         db  0x00 ; '.'
0000000000209b4a         db  0x00 ; '.'
0000000000209b4b         db  0x00 ; '.'
0000000000209b4c         db  0x00 ; '.'
0000000000209b4d         db  0x00 ; '.'
0000000000209b4e         db  0x00 ; '.'
0000000000209b4f         db  0x00 ; '.'
0000000000209b50         db  0x00 ; '.'
0000000000209b51         db  0x00 ; '.'
0000000000209b52         db  0x00 ; '.'
0000000000209b53         db  0x00 ; '.'
0000000000209b54         db  0x00 ; '.'
0000000000209b55         db  0x00 ; '.'
0000000000209b56         db  0x00 ; '.'
0000000000209b57         db  0x00 ; '.'
0000000000209b58         db  0x7a ; 'z'
0000000000209b59         db  0x00 ; '.'
0000000000209b5a         db  0x00 ; '.'
0000000000209b5b         db  0x00 ; '.'
0000000000209b5c         db  0x00 ; '.'
0000000000209b5d         db  0x00 ; '.'
0000000000209b5e         db  0x00 ; '.'
0000000000209b5f         db  0x00 ; '.'
0000000000209b60         db  0xe9 ; '.'
0000000000209b61         db  0x6f ; 'o'
0000000000209b62         db  0x00 ; '.'
0000000000209b63         db  0x00 ; '.'
0000000000209b64         db  0x00 ; '.'
0000000000209b65         db  0x00 ; '.'
0000000000209b66         db  0x00 ; '.'
0000000000209b67         db  0x00 ; '.'
0000000000209b68         db  0x00 ; '.'
0000000000209b69         db  0x00 ; '.'
0000000000209b6a         db  0x00 ; '.'
0000000000209b6b         db  0x00 ; '.'
0000000000209b6c         db  0x00 ; '.'
0000000000209b6d         db  0x00 ; '.'
0000000000209b6e         db  0x00 ; '.'
0000000000209b6f         db  0x00 ; '.'
0000000000209b70         db  0x00 ; '.'
0000000000209b71         db  0x00 ; '.'
0000000000209b72         db  0x00 ; '.'
0000000000209b73         db  0x00 ; '.'
0000000000209b74         db  0x00 ; '.'
0000000000209b75         db  0x00 ; '.'
0000000000209b76         db  0x00 ; '.'
0000000000209b77         db  0x00 ; '.'
0000000000209b78         db  0x7e ; '~'
0000000000209b79         db  0xff ; '.'
0000000000209b7a         db  0xff ; '.'
0000000000209b7b         db  0xff ; '.'
0000000000209b7c         db  0x00 ; '.'
0000000000209b7d         db  0x00 ; '.'
0000000000209b7e         db  0x00 ; '.'
0000000000209b7f         db  0x00 ; '.'
0000000000209b80         db  0xee ; '.'
0000000000209b81         db  0x6f ; 'o'
0000000000209b82         db  0x00 ; '.'
0000000000209b83         db  0x00 ; '.'
0000000000209b84         db  0x00 ; '.'
0000000000209b85         db  0x00 ; '.'
0000000000209b86         db  0x00 ; '.'
0000000000209b87         db  0x00 ; '.'
0000000000209b88         db  0x00 ; '.'
0000000000209b89         db  0x00 ; '.'
0000000000209b8a         db  0x00 ; '.'
0000000000209b8b         db  0x00 ; '.'
0000000000209b8c         db  0x00 ; '.'
0000000000209b8d         db  0x00 ; '.'
0000000000209b8e         db  0x00 ; '.'
0000000000209b8f         db  0x00 ; '.'
0000000000209b90         db  0x00 ; '.'
0000000000209b91         db  0x00 ; '.'
0000000000209b92         db  0x00 ; '.'
0000000000209b93         db  0x00 ; '.'
0000000000209b94         db  0x00 ; '.'
0000000000209b95         db  0x00 ; '.'
0000000000209b96         db  0x00 ; '.'
0000000000209b97         db  0x00 ; '.'
0000000000209b98         db  0x7d ; '}'
0000000000209b99         db  0xff ; '.'
0000000000209b9a         db  0xff ; '.'
0000000000209b9b         db  0xff ; '.'
0000000000209b9c         db  0x00 ; '.'
0000000000209b9d         db  0x00 ; '.'
0000000000209b9e         db  0x00 ; '.'
0000000000209b9f         db  0x00 ; '.'
0000000000209ba0         db  0x00 ; '.'
0000000000209ba1         db  0x00 ; '.'
0000000000209ba2         db  0x00 ; '.'
0000000000209ba3         db  0x00 ; '.'
0000000000209ba4         db  0x00 ; '.'
0000000000209ba5         db  0x00 ; '.'
0000000000209ba6         db  0x00 ; '.'
0000000000209ba7         db  0x00 ; '.'
0000000000209ba8         db  0x00 ; '.'
0000000000209ba9         db  0x00 ; '.'
0000000000209baa         db  0x00 ; '.'
0000000000209bab         db  0x00 ; '.'
0000000000209bac         db  0x00 ; '.'
0000000000209bad         db  0x00 ; '.'
0000000000209bae         db  0x00 ; '.'
0000000000209baf         db  0x00 ; '.'
0000000000209bb0         db  0x00 ; '.'
0000000000209bb1         db  0x00 ; '.'
0000000000209bb2         db  0x00 ; '.'
0000000000209bb3         db  0x00 ; '.'
0000000000209bb4         db  0x00 ; '.'
0000000000209bb5         db  0x00 ; '.'
0000000000209bb6         db  0x00 ; '.'
0000000000209bb7         db  0x00 ; '.'
0000000000209bb8         db  0x00 ; '.'
0000000000209bb9         db  0x00 ; '.'
0000000000209bba         db  0x00 ; '.'
0000000000209bbb         db  0x00 ; '.'
0000000000209bbc         db  0x00 ; '.'
0000000000209bbd         db  0x00 ; '.'
0000000000209bbe         db  0x00 ; '.'
0000000000209bbf         db  0x00 ; '.'
                     quoting_style_args:
0000000000209bc0         db  0x99 ; '.'
0000000000209bc1         db  0x7a ; 'z'
0000000000209bc2         db  0x00 ; '.'
0000000000209bc3         db  0x00 ; '.'
0000000000209bc4         db  0x00 ; '.'
0000000000209bc5         db  0x00 ; '.'
0000000000209bc6         db  0x00 ; '.'
0000000000209bc7         db  0x00 ; '.'
0000000000209bc8         db  0xa1 ; '.'
0000000000209bc9         db  0x7a ; 'z'
0000000000209bca         db  0x00 ; '.'
0000000000209bcb         db  0x00 ; '.'
0000000000209bcc         db  0x00 ; '.'
0000000000209bcd         db  0x00 ; '.'
0000000000209bce         db  0x00 ; '.'
0000000000209bcf         db  0x00 ; '.'
0000000000209bd0         db  0xa7 ; '.'
0000000000209bd1         db  0x7a ; 'z'
0000000000209bd2         db  0x00 ; '.'
0000000000209bd3         db  0x00 ; '.'
0000000000209bd4         db  0x00 ; '.'
0000000000209bd5         db  0x00 ; '.'
0000000000209bd6         db  0x00 ; '.'
0000000000209bd7         db  0x00 ; '.'
0000000000209bd8         db  0xb4 ; '.'
0000000000209bd9         db  0x7a ; 'z'
0000000000209bda         db  0x00 ; '.'
0000000000209bdb         db  0x00 ; '.'
0000000000209bdc         db  0x00 ; '.'
0000000000209bdd         db  0x00 ; '.'
0000000000209bde         db  0x00 ; '.'
0000000000209bdf         db  0x00 ; '.'
0000000000209be0         db  0xc1 ; '.'
0000000000209be1         db  0x7a ; 'z'
0000000000209be2         db  0x00 ; '.'
0000000000209be3         db  0x00 ; '.'
0000000000209be4         db  0x00 ; '.'
0000000000209be5         db  0x00 ; '.'
0000000000209be6         db  0x00 ; '.'
0000000000209be7         db  0x00 ; '.'
0000000000209be8         db  0xd5 ; '.'
0000000000209be9         db  0x7a ; 'z'
0000000000209bea         db  0x00 ; '.'
0000000000209beb         db  0x00 ; '.'
0000000000209bec         db  0x00 ; '.'
0000000000209bed         db  0x00 ; '.'
0000000000209bee         db  0x00 ; '.'
0000000000209bef         db  0x00 ; '.'
0000000000209bf0         db  0xd7 ; '.'
0000000000209bf1         db  0x7a ; 'z'
0000000000209bf2         db  0x00 ; '.'
0000000000209bf3         db  0x00 ; '.'
0000000000209bf4         db  0x00 ; '.'
0000000000209bf5         db  0x00 ; '.'
0000000000209bf6         db  0x00 ; '.'
0000000000209bf7         db  0x00 ; '.'
0000000000209bf8         db  0xba ; '.'
0000000000209bf9         db  0x7a ; 'z'
0000000000209bfa         db  0x00 ; '.'
0000000000209bfb         db  0x00 ; '.'
0000000000209bfc         db  0x00 ; '.'
0000000000209bfd         db  0x00 ; '.'
0000000000209bfe         db  0x00 ; '.'
0000000000209bff         db  0x00 ; '.'
0000000000209c00         db  0xf2 ; '.'
0000000000209c01         db  0x6e ; 'n'
0000000000209c02         db  0x00 ; '.'
0000000000209c03         db  0x00 ; '.'
0000000000209c04         db  0x00 ; '.'
0000000000209c05         db  0x00 ; '.'
0000000000209c06         db  0x00 ; '.'
0000000000209c07         db  0x00 ; '.'
0000000000209c08         db  0xdf ; '.'
0000000000209c09         db  0x7a ; 'z'
0000000000209c0a         db  0x00 ; '.'
0000000000209c0b         db  0x00 ; '.'
0000000000209c0c         db  0x00 ; '.'
0000000000209c0d         db  0x00 ; '.'
0000000000209c0e         db  0x00 ; '.'
0000000000209c0f         db  0x00 ; '.'
0000000000209c10         db  0x00 ; '.'
0000000000209c11         db  0x00 ; '.'
0000000000209c12         db  0x00 ; '.'
0000000000209c13         db  0x00 ; '.'
0000000000209c14         db  0x00 ; '.'
0000000000209c15         db  0x00 ; '.'
0000000000209c16         db  0x00 ; '.'
0000000000209c17         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x209c18; 0x209e08[ (496 bytes)
        ; File offset : [39960; 40456[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
0000000000209c18         db  0x01 ; '.'
0000000000209c19         db  0x00 ; '.'
0000000000209c1a         db  0x00 ; '.'
0000000000209c1b         db  0x00 ; '.'
0000000000209c1c         db  0x00 ; '.'
0000000000209c1d         db  0x00 ; '.'
0000000000209c1e         db  0x00 ; '.'
0000000000209c1f         db  0x00 ; '.'
0000000000209c20         db  0x01 ; '.'
0000000000209c21         db  0x00 ; '.'
0000000000209c22         db  0x00 ; '.'
0000000000209c23         db  0x00 ; '.'
0000000000209c24         db  0x00 ; '.'
0000000000209c25         db  0x00 ; '.'
0000000000209c26         db  0x00 ; '.'
0000000000209c27         db  0x00 ; '.'
0000000000209c28         db  0x0c ; '.'
0000000000209c29         db  0x00 ; '.'
0000000000209c2a         db  0x00 ; '.'
0000000000209c2b         db  0x00 ; '.'
0000000000209c2c         db  0x00 ; '.'
0000000000209c2d         db  0x00 ; '.'
0000000000209c2e         db  0x00 ; '.'
0000000000209c2f         db  0x00 ; '.'
0000000000209c30         db  0x80 ; '.'
0000000000209c31         db  0x15 ; '.'
0000000000209c32         db  0x00 ; '.'
0000000000209c33         db  0x00 ; '.'
0000000000209c34         db  0x00 ; '.'
0000000000209c35         db  0x00 ; '.'
0000000000209c36         db  0x00 ; '.'
0000000000209c37         db  0x00 ; '.'
0000000000209c38         db  0x0d ; '.'
0000000000209c39         db  0x00 ; '.'
0000000000209c3a         db  0x00 ; '.'
0000000000209c3b         db  0x00 ; '.'
0000000000209c3c         db  0x00 ; '.'
0000000000209c3d         db  0x00 ; '.'
0000000000209c3e         db  0x00 ; '.'
0000000000209c3f         db  0x00 ; '.'
0000000000209c40         db  0x10 ; '.'
0000000000209c41         db  0x6e ; 'n'
0000000000209c42         db  0x00 ; '.'
0000000000209c43         db  0x00 ; '.'
0000000000209c44         db  0x00 ; '.'
0000000000209c45         db  0x00 ; '.'
0000000000209c46         db  0x00 ; '.'
0000000000209c47         db  0x00 ; '.'
0000000000209c48         db  0x19 ; '.'
0000000000209c49         db  0x00 ; '.'
0000000000209c4a         db  0x00 ; '.'
0000000000209c4b         db  0x00 ; '.'
0000000000209c4c         db  0x00 ; '.'
0000000000209c4d         db  0x00 ; '.'
0000000000209c4e         db  0x00 ; '.'
0000000000209c4f         db  0x00 ; '.'
0000000000209c50         db  0x10 ; '.'
0000000000209c51         db  0x9a ; '.'
0000000000209c52         db  0x20 ; ' '
0000000000209c53         db  0x00 ; '.'
0000000000209c54         db  0x00 ; '.'
0000000000209c55         db  0x00 ; '.'
0000000000209c56         db  0x00 ; '.'
0000000000209c57         db  0x00 ; '.'
0000000000209c58         db  0x1b ; '.'
0000000000209c59         db  0x00 ; '.'
0000000000209c5a         db  0x00 ; '.'
0000000000209c5b         db  0x00 ; '.'
0000000000209c5c         db  0x00 ; '.'
0000000000209c5d         db  0x00 ; '.'
0000000000209c5e         db  0x00 ; '.'
0000000000209c5f         db  0x00 ; '.'
0000000000209c60         db  0x08 ; '.'
0000000000209c61         db  0x00 ; '.'
0000000000209c62         db  0x00 ; '.'
0000000000209c63         db  0x00 ; '.'
0000000000209c64         db  0x00 ; '.'
0000000000209c65         db  0x00 ; '.'
0000000000209c66         db  0x00 ; '.'
0000000000209c67         db  0x00 ; '.'
0000000000209c68         db  0x1a ; '.'
0000000000209c69         db  0x00 ; '.'
0000000000209c6a         db  0x00 ; '.'
0000000000209c6b         db  0x00 ; '.'
0000000000209c6c         db  0x00 ; '.'
0000000000209c6d         db  0x00 ; '.'
0000000000209c6e         db  0x00 ; '.'
0000000000209c6f         db  0x00 ; '.'
0000000000209c70         db  0x18 ; '.'
0000000000209c71         db  0x9a ; '.'
0000000000209c72         db  0x20 ; ' '
0000000000209c73         db  0x00 ; '.'
0000000000209c74         db  0x00 ; '.'
0000000000209c75         db  0x00 ; '.'
0000000000209c76         db  0x00 ; '.'
0000000000209c77         db  0x00 ; '.'
0000000000209c78         db  0x1c ; '.'
0000000000209c79         db  0x00 ; '.'
0000000000209c7a         db  0x00 ; '.'
0000000000209c7b         db  0x00 ; '.'
0000000000209c7c         db  0x00 ; '.'
0000000000209c7d         db  0x00 ; '.'
0000000000209c7e         db  0x00 ; '.'
0000000000209c7f         db  0x00 ; '.'
0000000000209c80         db  0x08 ; '.'
0000000000209c81         db  0x00 ; '.'
0000000000209c82         db  0x00 ; '.'
0000000000209c83         db  0x00 ; '.'
0000000000209c84         db  0x00 ; '.'
0000000000209c85         db  0x00 ; '.'
0000000000209c86         db  0x00 ; '.'
0000000000209c87         db  0x00 ; '.'
0000000000209c88         db  0xf5 ; '.'
0000000000209c89         db  0xfe ; '.'
0000000000209c8a         db  0xff ; '.'
0000000000209c8b         db  0x6f ; 'o'
0000000000209c8c         db  0x00 ; '.'
0000000000209c8d         db  0x00 ; '.'
0000000000209c8e         db  0x00 ; '.'
0000000000209c8f         db  0x00 ; '.'
0000000000209c90         db  0x98 ; '.'
0000000000209c91         db  0x02 ; '.'
0000000000209c92         db  0x00 ; '.'
0000000000209c93         db  0x00 ; '.'
0000000000209c94         db  0x00 ; '.'
0000000000209c95         db  0x00 ; '.'
0000000000209c96         db  0x00 ; '.'
0000000000209c97         db  0x00 ; '.'
0000000000209c98         db  0x05 ; '.'
0000000000209c99         db  0x00 ; '.'
0000000000209c9a         db  0x00 ; '.'
0000000000209c9b         db  0x00 ; '.'
0000000000209c9c         db  0x00 ; '.'
0000000000209c9d         db  0x00 ; '.'
0000000000209c9e         db  0x00 ; '.'
0000000000209c9f         db  0x00 ; '.'
0000000000209ca0         db  0x10 ; '.'
0000000000209ca1         db  0x09 ; '.'
0000000000209ca2         db  0x00 ; '.'
0000000000209ca3         db  0x00 ; '.'
0000000000209ca4         db  0x00 ; '.'
0000000000209ca5         db  0x00 ; '.'
0000000000209ca6         db  0x00 ; '.'
0000000000209ca7         db  0x00 ; '.'
0000000000209ca8         db  0x06 ; '.'
0000000000209ca9         db  0x00 ; '.'
0000000000209caa         db  0x00 ; '.'
0000000000209cab         db  0x00 ; '.'
0000000000209cac         db  0x00 ; '.'
0000000000209cad         db  0x00 ; '.'
0000000000209cae         db  0x00 ; '.'
0000000000209caf         db  0x00 ; '.'
0000000000209cb0         db  0xe0 ; '.'
0000000000209cb1         db  0x02 ; '.'
0000000000209cb2         db  0x00 ; '.'
0000000000209cb3         db  0x00 ; '.'
0000000000209cb4         db  0x00 ; '.'
0000000000209cb5         db  0x00 ; '.'
0000000000209cb6         db  0x00 ; '.'
0000000000209cb7         db  0x00 ; '.'
0000000000209cb8         db  0x0a ; '.'
0000000000209cb9         db  0x00 ; '.'
0000000000209cba         db  0x00 ; '.'
0000000000209cbb         db  0x00 ; '.'
0000000000209cbc         db  0x00 ; '.'
0000000000209cbd         db  0x00 ; '.'
0000000000209cbe         db  0x00 ; '.'
0000000000209cbf         db  0x00 ; '.'
0000000000209cc0         db  0x02 ; '.'
0000000000209cc1         db  0x03 ; '.'
0000000000209cc2         db  0x00 ; '.'
0000000000209cc3         db  0x00 ; '.'
0000000000209cc4         db  0x00 ; '.'
0000000000209cc5         db  0x00 ; '.'
0000000000209cc6         db  0x00 ; '.'
0000000000209cc7         db  0x00 ; '.'
0000000000209cc8         db  0x0b ; '.'
0000000000209cc9         db  0x00 ; '.'
0000000000209cca         db  0x00 ; '.'
0000000000209ccb         db  0x00 ; '.'
0000000000209ccc         db  0x00 ; '.'
0000000000209ccd         db  0x00 ; '.'
0000000000209cce         db  0x00 ; '.'
0000000000209ccf         db  0x00 ; '.'
0000000000209cd0         db  0x18 ; '.'
0000000000209cd1         db  0x00 ; '.'
0000000000209cd2         db  0x00 ; '.'
0000000000209cd3         db  0x00 ; '.'
0000000000209cd4         db  0x00 ; '.'
0000000000209cd5         db  0x00 ; '.'
0000000000209cd6         db  0x00 ; '.'
0000000000209cd7         db  0x00 ; '.'
0000000000209cd8         db  0x15 ; '.'
0000000000209cd9         db  0x00 ; '.'
0000000000209cda         db  0x00 ; '.'
0000000000209cdb         db  0x00 ; '.'
0000000000209cdc         db  0x00 ; '.'
0000000000209cdd         db  0x00 ; '.'
0000000000209cde         db  0x00 ; '.'
0000000000209cdf         db  0x00 ; '.'
0000000000209ce0         db  0x00 ; '.'
0000000000209ce1         db  0x00 ; '.'
0000000000209ce2         db  0x00 ; '.'
0000000000209ce3         db  0x00 ; '.'
0000000000209ce4         db  0x00 ; '.'
0000000000209ce5         db  0x00 ; '.'
0000000000209ce6         db  0x00 ; '.'
0000000000209ce7         db  0x00 ; '.'
0000000000209ce8         db  0x03 ; '.'
0000000000209ce9         db  0x00 ; '.'
0000000000209cea         db  0x00 ; '.'
0000000000209ceb         db  0x00 ; '.'
0000000000209cec         db  0x00 ; '.'
0000000000209ced         db  0x00 ; '.'
0000000000209cee         db  0x00 ; '.'
0000000000209cef         db  0x00 ; '.'
0000000000209cf0         db  0x08 ; '.'
0000000000209cf1         db  0x9e ; '.'
0000000000209cf2         db  0x20 ; ' '
0000000000209cf3         db  0x00 ; '.'
0000000000209cf4         db  0x00 ; '.'
0000000000209cf5         db  0x00 ; '.'
0000000000209cf6         db  0x00 ; '.'
0000000000209cf7         db  0x00 ; '.'
0000000000209cf8         db  0x02 ; '.'
0000000000209cf9         db  0x00 ; '.'
0000000000209cfa         db  0x00 ; '.'
0000000000209cfb         db  0x00 ; '.'
0000000000209cfc         db  0x00 ; '.'
0000000000209cfd         db  0x00 ; '.'
0000000000209cfe         db  0x00 ; '.'
0000000000209cff         db  0x00 ; '.'
0000000000209d00         db  0xe0 ; '.'
0000000000209d01         db  0x04 ; '.'
0000000000209d02         db  0x00 ; '.'
0000000000209d03         db  0x00 ; '.'
0000000000209d04         db  0x00 ; '.'
0000000000209d05         db  0x00 ; '.'
0000000000209d06         db  0x00 ; '.'
0000000000209d07         db  0x00 ; '.'
0000000000209d08         db  0x14 ; '.'
0000000000209d09         db  0x00 ; '.'
0000000000209d0a         db  0x00 ; '.'
0000000000209d0b         db  0x00 ; '.'
0000000000209d0c         db  0x00 ; '.'
0000000000209d0d         db  0x00 ; '.'
0000000000209d0e         db  0x00 ; '.'
0000000000209d0f         db  0x00 ; '.'
0000000000209d10         db  0x07 ; '.'
0000000000209d11         db  0x00 ; '.'
0000000000209d12         db  0x00 ; '.'
0000000000209d13         db  0x00 ; '.'
0000000000209d14         db  0x00 ; '.'
0000000000209d15         db  0x00 ; '.'
0000000000209d16         db  0x00 ; '.'
0000000000209d17         db  0x00 ; '.'
0000000000209d18         db  0x17 ; '.'
0000000000209d19         db  0x00 ; '.'
0000000000209d1a         db  0x00 ; '.'
0000000000209d1b         db  0x00 ; '.'
0000000000209d1c         db  0x00 ; '.'
0000000000209d1d         db  0x00 ; '.'
0000000000209d1e         db  0x00 ; '.'
0000000000209d1f         db  0x00 ; '.'
0000000000209d20         db  0xa0 ; '.'
0000000000209d21         db  0x10 ; '.'
0000000000209d22         db  0x00 ; '.'
0000000000209d23         db  0x00 ; '.'
0000000000209d24         db  0x00 ; '.'
0000000000209d25         db  0x00 ; '.'
0000000000209d26         db  0x00 ; '.'
0000000000209d27         db  0x00 ; '.'
0000000000209d28         db  0x07 ; '.'
0000000000209d29         db  0x00 ; '.'
0000000000209d2a         db  0x00 ; '.'
0000000000209d2b         db  0x00 ; '.'
0000000000209d2c         db  0x00 ; '.'
0000000000209d2d         db  0x00 ; '.'
0000000000209d2e         db  0x00 ; '.'
0000000000209d2f         db  0x00 ; '.'
0000000000209d30         db  0xf8 ; '.'
0000000000209d31         db  0x0c ; '.'
0000000000209d32         db  0x00 ; '.'
0000000000209d33         db  0x00 ; '.'
0000000000209d34         db  0x00 ; '.'
0000000000209d35         db  0x00 ; '.'
0000000000209d36         db  0x00 ; '.'
0000000000209d37         db  0x00 ; '.'
0000000000209d38         db  0x08 ; '.'
0000000000209d39         db  0x00 ; '.'
0000000000209d3a         db  0x00 ; '.'
0000000000209d3b         db  0x00 ; '.'
0000000000209d3c         db  0x00 ; '.'
0000000000209d3d         db  0x00 ; '.'
0000000000209d3e         db  0x00 ; '.'
0000000000209d3f         db  0x00 ; '.'
0000000000209d40         db  0xa8 ; '.'
0000000000209d41         db  0x03 ; '.'
0000000000209d42         db  0x00 ; '.'
0000000000209d43         db  0x00 ; '.'
0000000000209d44         db  0x00 ; '.'
0000000000209d45         db  0x00 ; '.'
0000000000209d46         db  0x00 ; '.'
0000000000209d47         db  0x00 ; '.'
0000000000209d48         db  0x09 ; '.'
0000000000209d49         db  0x00 ; '.'
0000000000209d4a         db  0x00 ; '.'
0000000000209d4b         db  0x00 ; '.'
0000000000209d4c         db  0x00 ; '.'
0000000000209d4d         db  0x00 ; '.'
0000000000209d4e         db  0x00 ; '.'
0000000000209d4f         db  0x00 ; '.'
0000000000209d50         db  0x18 ; '.'
0000000000209d51         db  0x00 ; '.'
0000000000209d52         db  0x00 ; '.'
0000000000209d53         db  0x00 ; '.'
0000000000209d54         db  0x00 ; '.'
0000000000209d55         db  0x00 ; '.'
0000000000209d56         db  0x00 ; '.'
0000000000209d57         db  0x00 ; '.'
0000000000209d58         db  0x1e ; '.'
0000000000209d59         db  0x00 ; '.'
0000000000209d5a         db  0x00 ; '.'
0000000000209d5b         db  0x00 ; '.'
0000000000209d5c         db  0x00 ; '.'
0000000000209d5d         db  0x00 ; '.'
0000000000209d5e         db  0x00 ; '.'
0000000000209d5f         db  0x00 ; '.'
0000000000209d60         db  0x08 ; '.'
0000000000209d61         db  0x00 ; '.'
0000000000209d62         db  0x00 ; '.'
0000000000209d63         db  0x00 ; '.'
0000000000209d64         db  0x00 ; '.'
0000000000209d65         db  0x00 ; '.'
0000000000209d66         db  0x00 ; '.'
0000000000209d67         db  0x00 ; '.'
0000000000209d68         db  0xfb ; '.'
0000000000209d69         db  0xff ; '.'
0000000000209d6a         db  0xff ; '.'
0000000000209d6b         db  0x6f ; 'o'
0000000000209d6c         db  0x00 ; '.'
0000000000209d6d         db  0x00 ; '.'
0000000000209d6e         db  0x00 ; '.'
0000000000209d6f         db  0x00 ; '.'
0000000000209d70         db  0x01 ; '.'
0000000000209d71         db  0x00 ; '.'
0000000000209d72         db  0x00 ; '.'
0000000000209d73         db  0x08 ; '.'
0000000000209d74         db  0x00 ; '.'
0000000000209d75         db  0x00 ; '.'
0000000000209d76         db  0x00 ; '.'
0000000000209d77         db  0x00 ; '.'
0000000000209d78         db  0xfe ; '.'
0000000000209d79         db  0xff ; '.'
0000000000209d7a         db  0xff ; '.'
0000000000209d7b         db  0x6f ; 'o'
0000000000209d7c         db  0x00 ; '.'
0000000000209d7d         db  0x00 ; '.'
0000000000209d7e         db  0x00 ; '.'
0000000000209d7f         db  0x00 ; '.'
0000000000209d80         db  0x98 ; '.'
0000000000209d81         db  0x0c ; '.'
0000000000209d82         db  0x00 ; '.'
0000000000209d83         db  0x00 ; '.'
0000000000209d84         db  0x00 ; '.'
0000000000209d85         db  0x00 ; '.'
0000000000209d86         db  0x00 ; '.'
0000000000209d87         db  0x00 ; '.'
0000000000209d88         db  0xff ; '.'
0000000000209d89         db  0xff ; '.'
0000000000209d8a         db  0xff ; '.'
0000000000209d8b         db  0x6f ; 'o'
0000000000209d8c         db  0x00 ; '.'
0000000000209d8d         db  0x00 ; '.'
0000000000209d8e         db  0x00 ; '.'
0000000000209d8f         db  0x00 ; '.'
0000000000209d90         db  0x01 ; '.'
0000000000209d91         db  0x00 ; '.'
0000000000209d92         db  0x00 ; '.'
0000000000209d93         db  0x00 ; '.'
0000000000209d94         db  0x00 ; '.'
0000000000209d95         db  0x00 ; '.'
0000000000209d96         db  0x00 ; '.'
0000000000209d97         db  0x00 ; '.'
0000000000209d98         db  0xf0 ; '.'
0000000000209d99         db  0xff ; '.'
0000000000209d9a         db  0xff ; '.'
0000000000209d9b         db  0x6f ; 'o'
0000000000209d9c         db  0x00 ; '.'
0000000000209d9d         db  0x00 ; '.'
0000000000209d9e         db  0x00 ; '.'
0000000000209d9f         db  0x00 ; '.'
0000000000209da0         db  0x12 ; '.'
0000000000209da1         db  0x0c ; '.'
0000000000209da2         db  0x00 ; '.'
0000000000209da3         db  0x00 ; '.'
0000000000209da4         db  0x00 ; '.'
0000000000209da5         db  0x00 ; '.'
0000000000209da6         db  0x00 ; '.'
0000000000209da7         db  0x00 ; '.'
0000000000209da8         db  0xf9 ; '.'
0000000000209da9         db  0xff ; '.'
0000000000209daa         db  0xff ; '.'
0000000000209dab         db  0x6f ; 'o'
0000000000209dac         db  0x00 ; '.'
0000000000209dad         db  0x00 ; '.'
0000000000209dae         db  0x00 ; '.'
0000000000209daf         db  0x00 ; '.'
0000000000209db0         db  0x1c ; '.'
0000000000209db1         db  0x00 ; '.'
0000000000209db2         db  0x00 ; '.'
0000000000209db3         db  0x00 ; '.'
0000000000209db4         db  0x00 ; '.'
0000000000209db5         db  0x00 ; '.'
0000000000209db6         db  0x00 ; '.'
0000000000209db7         db  0x00 ; '.'
0000000000209db8         db  0x00 ; '.'
0000000000209db9         db  0x00 ; '.'
0000000000209dba         db  0x00 ; '.'
0000000000209dbb         db  0x00 ; '.'
0000000000209dbc         db  0x00 ; '.'
0000000000209dbd         db  0x00 ; '.'
0000000000209dbe         db  0x00 ; '.'
0000000000209dbf         db  0x00 ; '.'
0000000000209dc0         db  0x00 ; '.'
0000000000209dc1         db  0x00 ; '.'
0000000000209dc2         db  0x00 ; '.'
0000000000209dc3         db  0x00 ; '.'
0000000000209dc4         db  0x00 ; '.'
0000000000209dc5         db  0x00 ; '.'
0000000000209dc6         db  0x00 ; '.'
0000000000209dc7         db  0x00 ; '.'
0000000000209dc8         db  0x00 ; '.'
0000000000209dc9         db  0x00 ; '.'
0000000000209dca         db  0x00 ; '.'
0000000000209dcb         db  0x00 ; '.'
0000000000209dcc         db  0x00 ; '.'
0000000000209dcd         db  0x00 ; '.'
0000000000209dce         db  0x00 ; '.'
0000000000209dcf         db  0x00 ; '.'
0000000000209dd0         db  0x00 ; '.'
0000000000209dd1         db  0x00 ; '.'
0000000000209dd2         db  0x00 ; '.'
0000000000209dd3         db  0x00 ; '.'
0000000000209dd4         db  0x00 ; '.'
0000000000209dd5         db  0x00 ; '.'
0000000000209dd6         db  0x00 ; '.'
0000000000209dd7         db  0x00 ; '.'
0000000000209dd8         db  0x00 ; '.'
0000000000209dd9         db  0x00 ; '.'
0000000000209dda         db  0x00 ; '.'
0000000000209ddb         db  0x00 ; '.'
0000000000209ddc         db  0x00 ; '.'
0000000000209ddd         db  0x00 ; '.'
0000000000209dde         db  0x00 ; '.'
0000000000209ddf         db  0x00 ; '.'
0000000000209de0         db  0x00 ; '.'
0000000000209de1         db  0x00 ; '.'
0000000000209de2         db  0x00 ; '.'
0000000000209de3         db  0x00 ; '.'
0000000000209de4         db  0x00 ; '.'
0000000000209de5         db  0x00 ; '.'
0000000000209de6         db  0x00 ; '.'
0000000000209de7         db  0x00 ; '.'
0000000000209de8         db  0x00 ; '.'
0000000000209de9         db  0x00 ; '.'
0000000000209dea         db  0x00 ; '.'
0000000000209deb         db  0x00 ; '.'
0000000000209dec         db  0x00 ; '.'
0000000000209ded         db  0x00 ; '.'
0000000000209dee         db  0x00 ; '.'
0000000000209def         db  0x00 ; '.'
0000000000209df0         db  0x00 ; '.'
0000000000209df1         db  0x00 ; '.'
0000000000209df2         db  0x00 ; '.'
0000000000209df3         db  0x00 ; '.'
0000000000209df4         db  0x00 ; '.'
0000000000209df5         db  0x00 ; '.'
0000000000209df6         db  0x00 ; '.'
0000000000209df7         db  0x00 ; '.'
0000000000209df8         db  0x00 ; '.'
0000000000209df9         db  0x00 ; '.'
0000000000209dfa         db  0x00 ; '.'
0000000000209dfb         db  0x00 ; '.'
0000000000209dfc         db  0x00 ; '.'
0000000000209dfd         db  0x00 ; '.'
0000000000209dfe         db  0x00 ; '.'
0000000000209dff         db  0x00 ; '.'
0000000000209e00         db  0x00 ; '.'
0000000000209e01         db  0x00 ; '.'
0000000000209e02         db  0x00 ; '.'
0000000000209e03         db  0x00 ; '.'
0000000000209e04         db  0x00 ; '.'
0000000000209e05         db  0x00 ; '.'
0000000000209e06         db  0x00 ; '.'
0000000000209e07         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x209e08; 0x209fe8[ (480 bytes)
        ; File offset : [40456; 40936[ (480 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
0000000000209e08         db  0x18 ; '.'
0000000000209e09         db  0x9c ; '.'
0000000000209e0a         db  0x20 ; ' '
0000000000209e0b         db  0x00 ; '.'
0000000000209e0c         db  0x00 ; '.'
0000000000209e0d         db  0x00 ; '.'
0000000000209e0e         db  0x00 ; '.'
0000000000209e0f         db  0x00 ; '.'
                     qword_209e10:
0000000000209e10         dq         0x0000000000000000                          ; DATA XREF=0x15a0
0000000000209e18         db  0x00 ; '.'                                         ; DATA XREF=0x15a6
0000000000209e19         db  0x00 ; '.'
0000000000209e1a         db  0x00 ; '.'
0000000000209e1b         db  0x00 ; '.'
0000000000209e1c         db  0x00 ; '.'
0000000000209e1d         db  0x00 ; '.'
0000000000209e1e         db  0x00 ; '.'
0000000000209e1f         db  0x00 ; '.'
                     free@GOT:        // free
0000000000209e20         dq         0x000000000020a290                          ; DATA XREF=j_free
                     abort@GOT:        // abort
0000000000209e28         dq         0x000000000020a298                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
0000000000209e30         dq         0x000000000020a2a0                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
0000000000209e38         dq         0x000000000020a2a8                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
0000000000209e40         dq         0x000000000020a2b8                          ; DATA XREF=j__exit
                     __fpending@GOT:        // __fpending
0000000000209e48         dq         0x000000000020a2c0                          ; DATA XREF=j___fpending
                     fcntl@GOT:        // fcntl
0000000000209e50         dq         0x000000000020a2c8                          ; DATA XREF=j_fcntl
                     fread_unlocked@GOT:        // fread_unlocked
0000000000209e58         dq         0x000000000020a2d0                          ; DATA XREF=j_fread_unlocked
                     textdomain@GOT:        // textdomain
0000000000209e60         dq         0x000000000020a2d8                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
0000000000209e68         dq         0x000000000020a2e0                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
0000000000209e70         dq         0x000000000020a2e8                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
0000000000209e78         dq         0x000000000020a2f0                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
0000000000209e80         dq         0x000000000020a2f8                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
0000000000209e88         dq         0x000000000020a300                          ; DATA XREF=j_strlen
                     __stack_chk_fail@GOT:        // __stack_chk_fail
0000000000209e90         dq         0x000000000020a308                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
0000000000209e98         dq         0x000000000020a310                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
0000000000209ea0         dq         0x000000000020a318                          ; DATA XREF=j_mbrtowc
                     strchr@GOT:        // strchr
0000000000209ea8         dq         0x000000000020a320                          ; DATA XREF=j_strchr
                     __overflow@GOT:        // __overflow
0000000000209eb0         dq         0x000000000020a328                          ; DATA XREF=j___overflow
                     strrchr@GOT:        // strrchr
0000000000209eb8         dq         0x000000000020a330                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
0000000000209ec0         dq         0x000000000020a338                          ; DATA XREF=j_lseek
                     memset@GOT:        // memset
0000000000209ec8         dq         0x000000000020a340                          ; DATA XREF=j_memset
                     close@GOT:        // close
0000000000209ed0         dq         0x000000000020a348                          ; DATA XREF=j_close
                     posix_fadvise@GOT:        // posix_fadvise
0000000000209ed8         dq         0x000000000020a350                          ; DATA XREF=j_posix_fadvise
                     memcmp@GOT:        // memcmp
0000000000209ee0         dq         0x000000000020a360                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
0000000000209ee8         dq         0x000000000020a368                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
0000000000209ef0         dq         0x000000000020a370                          ; DATA XREF=j_calloc
                     __getdelim@GOT:        // __getdelim
0000000000209ef8         dq         0x000000000020a378                          ; DATA XREF=j___getdelim
                     memcpy@GOT:        // memcpy
0000000000209f00         dq         0x000000000020a388                          ; DATA XREF=j_memcpy
                     fileno@GOT:        // fileno
0000000000209f08         dq         0x000000000020a390                          ; DATA XREF=j_fileno
                     malloc@GOT:        // malloc
0000000000209f10         dq         0x000000000020a398                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
0000000000209f18         dq         0x000000000020a3a0                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
0000000000209f20         dq         0x000000000020a3a8                          ; DATA XREF=j_nl_langinfo
                     __freading@GOT:        // __freading
0000000000209f28         dq         0x000000000020a3b0                          ; DATA XREF=j___freading
                     fwrite_unlocked@GOT:        // fwrite_unlocked
0000000000209f30         dq         0x000000000020a3b8                          ; DATA XREF=j_fwrite_unlocked
                     realloc@GOT:        // realloc
0000000000209f38         dq         0x000000000020a3c0                          ; DATA XREF=j_realloc
                     fdopen@GOT:        // fdopen
0000000000209f40         dq         0x000000000020a3c8                          ; DATA XREF=j_fdopen
                     setlocale@GOT:        // setlocale
0000000000209f48         dq         0x000000000020a3d0                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
0000000000209f50         dq         0x000000000020a3d8                          ; DATA XREF=j___printf_chk
                     setvbuf@GOT:        // setvbuf
0000000000209f58         dq         0x000000000020a3e0                          ; DATA XREF=j_setvbuf
                     error@GOT:        // error
0000000000209f60         dq         0x000000000020a3e8                          ; DATA XREF=j_error
                     fseeko@GOT:        // fseeko
0000000000209f68         dq         0x000000000020a3f0                          ; DATA XREF=j_fseeko
                     fopen@GOT:        // fopen
0000000000209f70         dq         0x000000000020a3f8                          ; DATA XREF=j_fopen
                     dcngettext@GOT:        // dcngettext
0000000000209f78         dq         0x000000000020a400                          ; DATA XREF=j_dcngettext
                     __cxa_atexit@GOT:        // __cxa_atexit
0000000000209f80         dq         0x000000000020a408                          ; DATA XREF=j___cxa_atexit
                     exit@GOT:        // exit
0000000000209f88         dq         0x000000000020a410                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
0000000000209f90         dq         0x000000000020a418                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
0000000000209f98         dq         0x000000000020a420                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
0000000000209fa0         dq         0x000000000020a430                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
0000000000209fa8         dq         0x000000000020a438                          ; DATA XREF=j_iswprint
                     __ctype_tolower_loc@GOT:        // __ctype_tolower_loc
0000000000209fb0         dq         0x000000000020a448                          ; DATA XREF=j___ctype_tolower_loc
                     __ctype_b_loc@GOT:        // __ctype_b_loc
0000000000209fb8         dq         0x000000000020a450                          ; DATA XREF=j___ctype_b_loc
                     qword_209fc0:
0000000000209fc0         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
0000000000209fc8         db  0x00 ; '.'                                         ; DATA XREF=_start+36
0000000000209fc9         db  0x00 ; '.'
0000000000209fca         db  0x00 ; '.'
0000000000209fcb         db  0x00 ; '.'
0000000000209fcc         db  0x00 ; '.'
0000000000209fcd         db  0x00 ; '.'
0000000000209fce         db  0x00 ; '.'
0000000000209fcf         db  0x00 ; '.'
                     qword_209fd0:
0000000000209fd0         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_209fd8:
0000000000209fd8         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_209fe0:
0000000000209fe0         dq         0x0000000000000000                          ; DATA XREF=j_qword_209fe0, __do_global_dtors_aux+9
0000000000209fe8         db  0x00 ; '.'
0000000000209fe9         db  0x00 ; '.'
0000000000209fea         db  0x00 ; '.'
0000000000209feb         db  0x00 ; '.'
0000000000209fec         db  0x00 ; '.'
0000000000209fed         db  0x00 ; '.'
0000000000209fee         db  0x00 ; '.'
0000000000209fef         db  0x00 ; '.'
0000000000209ff0         db  0x00 ; '.'
0000000000209ff1         db  0x00 ; '.'
0000000000209ff2         db  0x00 ; '.'
0000000000209ff3         db  0x00 ; '.'
0000000000209ff4         db  0x00 ; '.'
0000000000209ff5         db  0x00 ; '.'
0000000000209ff6         db  0x00 ; '.'
0000000000209ff7         db  0x00 ; '.'
0000000000209ff8         db  0x00 ; '.'
0000000000209ff9         db  0x00 ; '.'
0000000000209ffa         db  0x00 ; '.'
0000000000209ffb         db  0x00 ; '.'
0000000000209ffc         db  0x00 ; '.'
0000000000209ffd         db  0x00 ; '.'
0000000000209ffe         db  0x00 ; '.'
0000000000209fff         db  0x00 ; '.'


        ; Section .data
        ; Range: [0x20a000; 0x20a0a0[ (160 bytes)
        ; File offset : [40960; 41120[ (160 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

000000000020a000         db  0x00 ; '.'
000000000020a001         db  0x00 ; '.'
000000000020a002         db  0x00 ; '.'
000000000020a003         db  0x00 ; '.'
000000000020a004         db  0x00 ; '.'
000000000020a005         db  0x00 ; '.'
000000000020a006         db  0x00 ; '.'
000000000020a007         db  0x00 ; '.'
                     __dso_handle:
000000000020a008         dq         0x000000000020a008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     delim:
000000000020a010         db         0x0a                                        ; DATA XREF=main+560, main+609, main+2943, main+3130
000000000020a011         align      4
                     bsd_reversed:
000000000020a014         dd         0xffffffff                                  ; DATA XREF=main+1619, main+1680, main+3565
                     Version:
000000000020a018         dq         0x00000000000079e0                          ; DATA XREF=main+361
                     exit_failure:
000000000020a020         dd         0x00000001                                  ; DATA XREF=close_stdout+130, xalloc_die+23
000000000020a024         db  0x00 ; '.'
000000000020a025         db  0x00 ; '.'
000000000020a026         db  0x00 ; '.'
000000000020a027         db  0x00 ; '.'
000000000020a028         db  0x00 ; '.'
000000000020a029         db  0x00 ; '.'
000000000020a02a         db  0x00 ; '.'
000000000020a02b         db  0x00 ; '.'
000000000020a02c         db  0x00 ; '.'
000000000020a02d         db  0x00 ; '.'
000000000020a02e         db  0x00 ; '.'
000000000020a02f         db  0x00 ; '.'
000000000020a030         db  0x00 ; '.'
000000000020a031         db  0x00 ; '.'
000000000020a032         db  0x00 ; '.'
000000000020a033         db  0x00 ; '.'
000000000020a034         db  0x00 ; '.'
000000000020a035         db  0x00 ; '.'
000000000020a036         db  0x00 ; '.'
000000000020a037         db  0x00 ; '.'
000000000020a038         db  0x00 ; '.'
000000000020a039         db  0x00 ; '.'
000000000020a03a         db  0x00 ; '.'
000000000020a03b         db  0x00 ; '.'
000000000020a03c         db  0x00 ; '.'
000000000020a03d         db  0x00 ; '.'
000000000020a03e         db  0x00 ; '.'
000000000020a03f         db  0x00 ; '.'
                     quote_quoting_options:
000000000020a040         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
000000000020a041         db  0x00 ; '.'
000000000020a042         db  0x00 ; '.'
000000000020a043         db  0x00 ; '.'
000000000020a044         db  0x00 ; '.'
000000000020a045         db  0x00 ; '.'
000000000020a046         db  0x00 ; '.'
000000000020a047         db  0x00 ; '.'
000000000020a048         db  0x00 ; '.'
000000000020a049         db  0x00 ; '.'
000000000020a04a         db  0x00 ; '.'
000000000020a04b         db  0x00 ; '.'
000000000020a04c         db  0x00 ; '.'
000000000020a04d         db  0x00 ; '.'
000000000020a04e         db  0x00 ; '.'
000000000020a04f         db  0x00 ; '.'
000000000020a050         db  0x00 ; '.'
000000000020a051         db  0x00 ; '.'
000000000020a052         db  0x00 ; '.'
000000000020a053         db  0x00 ; '.'
000000000020a054         db  0x00 ; '.'
000000000020a055         db  0x00 ; '.'
000000000020a056         db  0x00 ; '.'
000000000020a057         db  0x00 ; '.'
000000000020a058         db  0x00 ; '.'
000000000020a059         db  0x00 ; '.'
000000000020a05a         db  0x00 ; '.'
000000000020a05b         db  0x00 ; '.'
000000000020a05c         db  0x00 ; '.'
000000000020a05d         db  0x00 ; '.'
000000000020a05e         db  0x00 ; '.'
000000000020a05f         db  0x00 ; '.'
000000000020a060         db  0x00 ; '.'
000000000020a061         db  0x00 ; '.'
000000000020a062         db  0x00 ; '.'
000000000020a063         db  0x00 ; '.'
000000000020a064         db  0x00 ; '.'
000000000020a065         db  0x00 ; '.'
000000000020a066         db  0x00 ; '.'
000000000020a067         db  0x00 ; '.'
000000000020a068         db  0x00 ; '.'
000000000020a069         db  0x00 ; '.'
000000000020a06a         db  0x00 ; '.'
000000000020a06b         db  0x00 ; '.'
000000000020a06c         db  0x00 ; '.'
000000000020a06d         db  0x00 ; '.'
000000000020a06e         db  0x00 ; '.'
000000000020a06f         db  0x00 ; '.'
000000000020a070         db  0x00 ; '.'
000000000020a071         db  0x00 ; '.'
000000000020a072         db  0x00 ; '.'
000000000020a073         db  0x00 ; '.'
000000000020a074         db  0x00 ; '.'
000000000020a075         db  0x00 ; '.'
000000000020a076         db  0x00 ; '.'
000000000020a077         db  0x00 ; '.'
                     nslots:
000000000020a078         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020a07c         db  0x00 ; '.'
000000000020a07d         db  0x00 ; '.'
000000000020a07e         db  0x00 ; '.'
000000000020a07f         db  0x00 ; '.'
                     slotvec:
000000000020a080         dq         0x000000000020a090                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
000000000020a088         db  0x00 ; '.'
000000000020a089         db  0x00 ; '.'
000000000020a08a         db  0x00 ; '.'
000000000020a08b         db  0x00 ; '.'
000000000020a08c         db  0x00 ; '.'
000000000020a08d         db  0x00 ; '.'
000000000020a08e         db  0x00 ; '.'
000000000020a08f         db  0x00 ; '.'
                     slotvec0:
000000000020a090         dq         1.26481e-321, 1.05653e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec


        ; Section .bss
        ; Range: [0x20a0a0; 0x20a280[ (480 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
000000000020a0a0         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
000000000020a0a1         db  0x00 ; '.'
000000000020a0a2         db  0x00 ; '.'
000000000020a0a3         db  0x00 ; '.'
000000000020a0a4         db  0x00 ; '.'
000000000020a0a5         db  0x00 ; '.'
000000000020a0a6         db  0x00 ; '.'
000000000020a0a7         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
000000000020a0a8         db  0x00 ; '.'                                         ; DATA XREF=main+115, main+354, main+1844, main+2531, main+3042, main+3074, main+3123, main+3703, main+3735, main+3764, main+3808
000000000020a0a9         db  0x00 ; '.'
000000000020a0aa         db  0x00 ; '.'
000000000020a0ab         db  0x00 ; '.'
000000000020a0ac         db  0x00 ; '.'
000000000020a0ad         db  0x00 ; '.'
000000000020a0ae         db  0x00 ; '.'
000000000020a0af         db  0x00 ; '.'
                     stdin@@GLIBC_2.2.5:
000000000020a0b0         db  0x00 ; '.'                                         ; DATA XREF=main+1028, main+3584, digest_file.isra.1+49, digest_file.isra.1+159
000000000020a0b1         db  0x00 ; '.'
000000000020a0b2         db  0x00 ; '.'
000000000020a0b3         db  0x00 ; '.'
000000000020a0b4         db  0x00 ; '.'
000000000020a0b5         db  0x00 ; '.'
000000000020a0b6         db  0x00 ; '.'
000000000020a0b7         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
000000000020a0b8         db  0x00 ; '.'                                         ; DATA XREF=main+848
000000000020a0b9         db  0x00 ; '.'
000000000020a0ba         db  0x00 ; '.'
000000000020a0bb         db  0x00 ; '.'
000000000020a0bc         db  0x00 ; '.'
000000000020a0bd         db  0x00 ; '.'
000000000020a0be         db  0x00 ; '.'
000000000020a0bf         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
000000000020a0c0         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
000000000020a0c1         db  0x00 ; '.'
000000000020a0c2         db  0x00 ; '.'
000000000020a0c3         db  0x00 ; '.'
000000000020a0c4         db  0x00 ; '.'
000000000020a0c5         db  0x00 ; '.'
000000000020a0c6         db  0x00 ; '.'
000000000020a0c7         db  0x00 ; '.'
000000000020a0c8         db  0x00 ; '.'
000000000020a0c9         db  0x00 ; '.'
000000000020a0ca         db  0x00 ; '.'
000000000020a0cb         db  0x00 ; '.'
000000000020a0cc         db  0x00 ; '.'
000000000020a0cd         db  0x00 ; '.'
000000000020a0ce         db  0x00 ; '.'
000000000020a0cf         db  0x00 ; '.'
000000000020a0d0         db  0x00 ; '.'
000000000020a0d1         db  0x00 ; '.'
000000000020a0d2         db  0x00 ; '.'
000000000020a0d3         db  0x00 ; '.'
000000000020a0d4         db  0x00 ; '.'
000000000020a0d5         db  0x00 ; '.'
000000000020a0d6         db  0x00 ; '.'
000000000020a0d7         db  0x00 ; '.'
000000000020a0d8         db  0x00 ; '.'
000000000020a0d9         db  0x00 ; '.'
000000000020a0da         db  0x00 ; '.'
000000000020a0db         db  0x00 ; '.'
000000000020a0dc         db  0x00 ; '.'
000000000020a0dd         db  0x00 ; '.'
000000000020a0de         db  0x00 ; '.'
000000000020a0df         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
000000000020a0e0         db  0x00 ; '.'                                         ; DATA XREF=usage+61, close_stdout+44, set_program_name+125
000000000020a0e1         db  0x00 ; '.'
000000000020a0e2         db  0x00 ; '.'
000000000020a0e3         db  0x00 ; '.'
000000000020a0e4         db  0x00 ; '.'
000000000020a0e5         db  0x00 ; '.'
000000000020a0e6         db  0x00 ; '.'
000000000020a0e7         db  0x00 ; '.'
                     completed.7697:
000000000020a0e8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
000000000020a0e9         db  0x00 ; '.'
000000000020a0ea         db  0x00 ; '.'
000000000020a0eb         db  0x00 ; '.'
000000000020a0ec         db  0x00 ; '.'
000000000020a0ed         db  0x00 ; '.'
000000000020a0ee         db  0x00 ; '.'
000000000020a0ef         db  0x00 ; '.'
                     strict:
000000000020a0f0         db  0x00 ; '.'                                         ; DATA XREF=main+480, main+1477, main+2217
                     quiet:
000000000020a0f1         db  0x00 ; '.'                                         ; DATA XREF=main+430, main+462, main+510, main+1445, main+3284, main+3338
                     ignore_missing:
000000000020a0f2         db  0x00 ; '.'                                         ; DATA XREF=main+314, main+637, main+779, main+2181, main+2336, digest_file.isra.1+320
                     warn:
000000000020a0f3         db  0x00 ; '.'                                         ; DATA XREF=main+423, main+455, main+503, main+663, main+816, main+1352, main+3245
                     status_only:
000000000020a0f4         db  0x00 ; '.'                                         ; DATA XREF=main+416, main+448, main+496, main+650, main+803, main+1743, main+1830, main+1996, main+2509, main+3265, main+4328
000000000020a0f5         db  0x00 ; '.'
000000000020a0f6         db  0x00 ; '.'
000000000020a0f7         db  0x00 ; '.'
                     digest_hex_bytes:
000000000020a0f8         db  0x00 ; '.'                                         ; DATA XREF=main+585, main+1551, main+2359, main+2967, main+3020, main+3837, main+3900, main+4051, hex_digits+6
000000000020a0f9         db  0x00 ; '.'
000000000020a0fa         db  0x00 ; '.'
000000000020a0fb         db  0x00 ; '.'
000000000020a0fc         db  0x00 ; '.'
000000000020a0fd         db  0x00 ; '.'
000000000020a0fe         db  0x00 ; '.'
000000000020a0ff         db  0x00 ; '.'
                     min_digest_line_length:
000000000020a100         db  0x00 ; '.'                                         ; DATA XREF=main+574, main+1535
000000000020a101         db  0x00 ; '.'
000000000020a102         db  0x00 ; '.'
000000000020a103         db  0x00 ; '.'
000000000020a104         db  0x00 ; '.'
000000000020a105         db  0x00 ; '.'
000000000020a106         db  0x00 ; '.'
000000000020a107         db  0x00 ; '.'
                     have_read_stdin:
000000000020a108         db  0x00 ; '.'                                         ; DATA XREF=main+1016, main+2691, digest_file.isra.1+61
000000000020a109         db  0x00 ; '.'
000000000020a10a         db  0x00 ; '.'
000000000020a10b         db  0x00 ; '.'
000000000020a10c         db  0x00 ; '.'
000000000020a10d         db  0x00 ; '.'
000000000020a10e         db  0x00 ; '.'
000000000020a10f         db  0x00 ; '.'
                     ignore_EPIPE:
000000000020a110         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
000000000020a111         db  0x00 ; '.'
000000000020a112         db  0x00 ; '.'
000000000020a113         db  0x00 ; '.'
000000000020a114         db  0x00 ; '.'
000000000020a115         db  0x00 ; '.'
000000000020a116         db  0x00 ; '.'
000000000020a117         db  0x00 ; '.'
                     file_name:
000000000020a118         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
000000000020a119         db  0x00 ; '.'
000000000020a11a         db  0x00 ; '.'
000000000020a11b         db  0x00 ; '.'
000000000020a11c         db  0x00 ; '.'
000000000020a11d         db  0x00 ; '.'
000000000020a11e         db  0x00 ; '.'
000000000020a11f         db  0x00 ; '.'
                     program_name:
000000000020a120         db  0x00 ; '.'                                         ; DATA XREF=usage+20, set_program_name+109
000000000020a121         db  0x00 ; '.'
000000000020a122         db  0x00 ; '.'
000000000020a123         db  0x00 ; '.'
000000000020a124         db  0x00 ; '.'
000000000020a125         db  0x00 ; '.'
000000000020a126         db  0x00 ; '.'
000000000020a127         db  0x00 ; '.'
000000000020a128         db  0x00 ; '.'
000000000020a129         db  0x00 ; '.'
000000000020a12a         db  0x00 ; '.'
000000000020a12b         db  0x00 ; '.'
000000000020a12c         db  0x00 ; '.'
000000000020a12d         db  0x00 ; '.'
000000000020a12e         db  0x00 ; '.'
000000000020a12f         db  0x00 ; '.'
000000000020a130         db  0x00 ; '.'
000000000020a131         db  0x00 ; '.'
000000000020a132         db  0x00 ; '.'
000000000020a133         db  0x00 ; '.'
000000000020a134         db  0x00 ; '.'
000000000020a135         db  0x00 ; '.'
000000000020a136         db  0x00 ; '.'
000000000020a137         db  0x00 ; '.'
000000000020a138         db  0x00 ; '.'
000000000020a139         db  0x00 ; '.'
000000000020a13a         db  0x00 ; '.'
000000000020a13b         db  0x00 ; '.'
000000000020a13c         db  0x00 ; '.'
000000000020a13d         db  0x00 ; '.'
000000000020a13e         db  0x00 ; '.'
000000000020a13f         db  0x00 ; '.'
                     slot0:
000000000020a140         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
000000000020a141         db  0x00 ; '.'
000000000020a142         db  0x00 ; '.'
000000000020a143         db  0x00 ; '.'
000000000020a144         db  0x00 ; '.'
000000000020a145         db  0x00 ; '.'
000000000020a146         db  0x00 ; '.'
000000000020a147         db  0x00 ; '.'
000000000020a148         db  0x00 ; '.'
000000000020a149         db  0x00 ; '.'
000000000020a14a         db  0x00 ; '.'
000000000020a14b         db  0x00 ; '.'
000000000020a14c         db  0x00 ; '.'
000000000020a14d         db  0x00 ; '.'
000000000020a14e         db  0x00 ; '.'
000000000020a14f         db  0x00 ; '.'
000000000020a150         db  0x00 ; '.'
000000000020a151         db  0x00 ; '.'
000000000020a152         db  0x00 ; '.'
000000000020a153         db  0x00 ; '.'
000000000020a154         db  0x00 ; '.'
000000000020a155         db  0x00 ; '.'
000000000020a156         db  0x00 ; '.'
000000000020a157         db  0x00 ; '.'
000000000020a158         db  0x00 ; '.'
000000000020a159         db  0x00 ; '.'
000000000020a15a         db  0x00 ; '.'
000000000020a15b         db  0x00 ; '.'
000000000020a15c         db  0x00 ; '.'
000000000020a15d         db  0x00 ; '.'
000000000020a15e         db  0x00 ; '.'
000000000020a15f         db  0x00 ; '.'
000000000020a160         db  0x00 ; '.'
000000000020a161         db  0x00 ; '.'
000000000020a162         db  0x00 ; '.'
000000000020a163         db  0x00 ; '.'
000000000020a164         db  0x00 ; '.'
000000000020a165         db  0x00 ; '.'
000000000020a166         db  0x00 ; '.'
000000000020a167         db  0x00 ; '.'
000000000020a168         db  0x00 ; '.'
000000000020a169         db  0x00 ; '.'
000000000020a16a         db  0x00 ; '.'
000000000020a16b         db  0x00 ; '.'
000000000020a16c         db  0x00 ; '.'
000000000020a16d         db  0x00 ; '.'
000000000020a16e         db  0x00 ; '.'
000000000020a16f         db  0x00 ; '.'
000000000020a170         db  0x00 ; '.'
000000000020a171         db  0x00 ; '.'
000000000020a172         db  0x00 ; '.'
000000000020a173         db  0x00 ; '.'
000000000020a174         db  0x00 ; '.'
000000000020a175         db  0x00 ; '.'
000000000020a176         db  0x00 ; '.'
000000000020a177         db  0x00 ; '.'
000000000020a178         db  0x00 ; '.'
000000000020a179         db  0x00 ; '.'
000000000020a17a         db  0x00 ; '.'
000000000020a17b         db  0x00 ; '.'
000000000020a17c         db  0x00 ; '.'
000000000020a17d         db  0x00 ; '.'
000000000020a17e         db  0x00 ; '.'
000000000020a17f         db  0x00 ; '.'
000000000020a180         db  0x00 ; '.'
000000000020a181         db  0x00 ; '.'
000000000020a182         db  0x00 ; '.'
000000000020a183         db  0x00 ; '.'
000000000020a184         db  0x00 ; '.'
000000000020a185         db  0x00 ; '.'
000000000020a186         db  0x00 ; '.'
000000000020a187         db  0x00 ; '.'
000000000020a188         db  0x00 ; '.'
000000000020a189         db  0x00 ; '.'
000000000020a18a         db  0x00 ; '.'
000000000020a18b         db  0x00 ; '.'
000000000020a18c         db  0x00 ; '.'
000000000020a18d         db  0x00 ; '.'
000000000020a18e         db  0x00 ; '.'
000000000020a18f         db  0x00 ; '.'
000000000020a190         db  0x00 ; '.'
000000000020a191         db  0x00 ; '.'
000000000020a192         db  0x00 ; '.'
000000000020a193         db  0x00 ; '.'
000000000020a194         db  0x00 ; '.'
000000000020a195         db  0x00 ; '.'
000000000020a196         db  0x00 ; '.'
000000000020a197         db  0x00 ; '.'
000000000020a198         db  0x00 ; '.'
000000000020a199         db  0x00 ; '.'
000000000020a19a         db  0x00 ; '.'
000000000020a19b         db  0x00 ; '.'
000000000020a19c         db  0x00 ; '.'
000000000020a19d         db  0x00 ; '.'
000000000020a19e         db  0x00 ; '.'
000000000020a19f         db  0x00 ; '.'
000000000020a1a0         db  0x00 ; '.'
000000000020a1a1         db  0x00 ; '.'
000000000020a1a2         db  0x00 ; '.'
000000000020a1a3         db  0x00 ; '.'
000000000020a1a4         db  0x00 ; '.'
000000000020a1a5         db  0x00 ; '.'
000000000020a1a6         db  0x00 ; '.'
000000000020a1a7         db  0x00 ; '.'
000000000020a1a8         db  0x00 ; '.'
000000000020a1a9         db  0x00 ; '.'
000000000020a1aa         db  0x00 ; '.'
000000000020a1ab         db  0x00 ; '.'
000000000020a1ac         db  0x00 ; '.'
000000000020a1ad         db  0x00 ; '.'
000000000020a1ae         db  0x00 ; '.'
000000000020a1af         db  0x00 ; '.'
000000000020a1b0         db  0x00 ; '.'
000000000020a1b1         db  0x00 ; '.'
000000000020a1b2         db  0x00 ; '.'
000000000020a1b3         db  0x00 ; '.'
000000000020a1b4         db  0x00 ; '.'
000000000020a1b5         db  0x00 ; '.'
000000000020a1b6         db  0x00 ; '.'
000000000020a1b7         db  0x00 ; '.'
000000000020a1b8         db  0x00 ; '.'
000000000020a1b9         db  0x00 ; '.'
000000000020a1ba         db  0x00 ; '.'
000000000020a1bb         db  0x00 ; '.'
000000000020a1bc         db  0x00 ; '.'
000000000020a1bd         db  0x00 ; '.'
000000000020a1be         db  0x00 ; '.'
000000000020a1bf         db  0x00 ; '.'
000000000020a1c0         db  0x00 ; '.'
000000000020a1c1         db  0x00 ; '.'
000000000020a1c2         db  0x00 ; '.'
000000000020a1c3         db  0x00 ; '.'
000000000020a1c4         db  0x00 ; '.'
000000000020a1c5         db  0x00 ; '.'
000000000020a1c6         db  0x00 ; '.'
000000000020a1c7         db  0x00 ; '.'
000000000020a1c8         db  0x00 ; '.'
000000000020a1c9         db  0x00 ; '.'
000000000020a1ca         db  0x00 ; '.'
000000000020a1cb         db  0x00 ; '.'
000000000020a1cc         db  0x00 ; '.'
000000000020a1cd         db  0x00 ; '.'
000000000020a1ce         db  0x00 ; '.'
000000000020a1cf         db  0x00 ; '.'
000000000020a1d0         db  0x00 ; '.'
000000000020a1d1         db  0x00 ; '.'
000000000020a1d2         db  0x00 ; '.'
000000000020a1d3         db  0x00 ; '.'
000000000020a1d4         db  0x00 ; '.'
000000000020a1d5         db  0x00 ; '.'
000000000020a1d6         db  0x00 ; '.'
000000000020a1d7         db  0x00 ; '.'
000000000020a1d8         db  0x00 ; '.'
000000000020a1d9         db  0x00 ; '.'
000000000020a1da         db  0x00 ; '.'
000000000020a1db         db  0x00 ; '.'
000000000020a1dc         db  0x00 ; '.'
000000000020a1dd         db  0x00 ; '.'
000000000020a1de         db  0x00 ; '.'
000000000020a1df         db  0x00 ; '.'
000000000020a1e0         db  0x00 ; '.'
000000000020a1e1         db  0x00 ; '.'
000000000020a1e2         db  0x00 ; '.'
000000000020a1e3         db  0x00 ; '.'
000000000020a1e4         db  0x00 ; '.'
000000000020a1e5         db  0x00 ; '.'
000000000020a1e6         db  0x00 ; '.'
000000000020a1e7         db  0x00 ; '.'
000000000020a1e8         db  0x00 ; '.'
000000000020a1e9         db  0x00 ; '.'
000000000020a1ea         db  0x00 ; '.'
000000000020a1eb         db  0x00 ; '.'
000000000020a1ec         db  0x00 ; '.'
000000000020a1ed         db  0x00 ; '.'
000000000020a1ee         db  0x00 ; '.'
000000000020a1ef         db  0x00 ; '.'
000000000020a1f0         db  0x00 ; '.'
000000000020a1f1         db  0x00 ; '.'
000000000020a1f2         db  0x00 ; '.'
000000000020a1f3         db  0x00 ; '.'
000000000020a1f4         db  0x00 ; '.'
000000000020a1f5         db  0x00 ; '.'
000000000020a1f6         db  0x00 ; '.'
000000000020a1f7         db  0x00 ; '.'
000000000020a1f8         db  0x00 ; '.'
000000000020a1f9         db  0x00 ; '.'
000000000020a1fa         db  0x00 ; '.'
000000000020a1fb         db  0x00 ; '.'
000000000020a1fc         db  0x00 ; '.'
000000000020a1fd         db  0x00 ; '.'
000000000020a1fe         db  0x00 ; '.'
000000000020a1ff         db  0x00 ; '.'
000000000020a200         db  0x00 ; '.'
000000000020a201         db  0x00 ; '.'
000000000020a202         db  0x00 ; '.'
000000000020a203         db  0x00 ; '.'
000000000020a204         db  0x00 ; '.'
000000000020a205         db  0x00 ; '.'
000000000020a206         db  0x00 ; '.'
000000000020a207         db  0x00 ; '.'
000000000020a208         db  0x00 ; '.'
000000000020a209         db  0x00 ; '.'
000000000020a20a         db  0x00 ; '.'
000000000020a20b         db  0x00 ; '.'
000000000020a20c         db  0x00 ; '.'
000000000020a20d         db  0x00 ; '.'
000000000020a20e         db  0x00 ; '.'
000000000020a20f         db  0x00 ; '.'
000000000020a210         db  0x00 ; '.'
000000000020a211         db  0x00 ; '.'
000000000020a212         db  0x00 ; '.'
000000000020a213         db  0x00 ; '.'
000000000020a214         db  0x00 ; '.'
000000000020a215         db  0x00 ; '.'
000000000020a216         db  0x00 ; '.'
000000000020a217         db  0x00 ; '.'
000000000020a218         db  0x00 ; '.'
000000000020a219         db  0x00 ; '.'
000000000020a21a         db  0x00 ; '.'
000000000020a21b         db  0x00 ; '.'
000000000020a21c         db  0x00 ; '.'
000000000020a21d         db  0x00 ; '.'
000000000020a21e         db  0x00 ; '.'
000000000020a21f         db  0x00 ; '.'
000000000020a220         db  0x00 ; '.'
000000000020a221         db  0x00 ; '.'
000000000020a222         db  0x00 ; '.'
000000000020a223         db  0x00 ; '.'
000000000020a224         db  0x00 ; '.'
000000000020a225         db  0x00 ; '.'
000000000020a226         db  0x00 ; '.'
000000000020a227         db  0x00 ; '.'
000000000020a228         db  0x00 ; '.'
000000000020a229         db  0x00 ; '.'
000000000020a22a         db  0x00 ; '.'
000000000020a22b         db  0x00 ; '.'
000000000020a22c         db  0x00 ; '.'
000000000020a22d         db  0x00 ; '.'
000000000020a22e         db  0x00 ; '.'
000000000020a22f         db  0x00 ; '.'
000000000020a230         db  0x00 ; '.'
000000000020a231         db  0x00 ; '.'
000000000020a232         db  0x00 ; '.'
000000000020a233         db  0x00 ; '.'
000000000020a234         db  0x00 ; '.'
000000000020a235         db  0x00 ; '.'
000000000020a236         db  0x00 ; '.'
000000000020a237         db  0x00 ; '.'
000000000020a238         db  0x00 ; '.'
000000000020a239         db  0x00 ; '.'
000000000020a23a         db  0x00 ; '.'
000000000020a23b         db  0x00 ; '.'
000000000020a23c         db  0x00 ; '.'
000000000020a23d         db  0x00 ; '.'
000000000020a23e         db  0x00 ; '.'
000000000020a23f         db  0x00 ; '.'
                     default_quoting_options:
000000000020a240         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
000000000020a241         db  0x00 ; '.'
000000000020a242         db  0x00 ; '.'
000000000020a243         db  0x00 ; '.'
000000000020a244         db  0x00 ; '.'
000000000020a245         db  0x00 ; '.'
000000000020a246         db  0x00 ; '.'
000000000020a247         db  0x00 ; '.'
000000000020a248         db  0x00 ; '.'
000000000020a249         db  0x00 ; '.'
000000000020a24a         db  0x00 ; '.'
000000000020a24b         db  0x00 ; '.'
000000000020a24c         db  0x00 ; '.'
000000000020a24d         db  0x00 ; '.'
000000000020a24e         db  0x00 ; '.'
000000000020a24f         db  0x00 ; '.'
000000000020a250         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
000000000020a251         db  0x00 ; '.'
000000000020a252         db  0x00 ; '.'
000000000020a253         db  0x00 ; '.'
000000000020a254         db  0x00 ; '.'
000000000020a255         db  0x00 ; '.'
000000000020a256         db  0x00 ; '.'
000000000020a257         db  0x00 ; '.'
000000000020a258         db  0x00 ; '.'
000000000020a259         db  0x00 ; '.'
000000000020a25a         db  0x00 ; '.'
000000000020a25b         db  0x00 ; '.'
000000000020a25c         db  0x00 ; '.'
000000000020a25d         db  0x00 ; '.'
000000000020a25e         db  0x00 ; '.'
000000000020a25f         db  0x00 ; '.'
000000000020a260         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
000000000020a261         db  0x00 ; '.'
000000000020a262         db  0x00 ; '.'
000000000020a263         db  0x00 ; '.'
000000000020a264         db  0x00 ; '.'
000000000020a265         db  0x00 ; '.'
000000000020a266         db  0x00 ; '.'
000000000020a267         db  0x00 ; '.'
000000000020a268         db  0x00 ; '.'
000000000020a269         db  0x00 ; '.'
000000000020a26a         db  0x00 ; '.'
000000000020a26b         db  0x00 ; '.'
000000000020a26c         db  0x00 ; '.'
000000000020a26d         db  0x00 ; '.'
000000000020a26e         db  0x00 ; '.'
000000000020a26f         db  0x00 ; '.'
                     qword_20a270:
000000000020a270         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
000000000020a271         db  0x00 ; '.'
000000000020a272         db  0x00 ; '.'
000000000020a273         db  0x00 ; '.'
000000000020a274         db  0x00 ; '.'
000000000020a275         db  0x00 ; '.'
000000000020a276         db  0x00 ; '.'
000000000020a277         db  0x00 ; '.'
                     have_dupfd_cloexec.3326:
000000000020a278         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+94, rpl_fcntl+143, rpl_fcntl+438, rpl_fcntl+574
000000000020a279         db  0x00 ; '.'
000000000020a27a         db  0x00 ; '.'
000000000020a27b         db  0x00 ; '.'
000000000020a27c         db  0x00 ; '.'
000000000020a27d         db  0x00 ; '.'
000000000020a27e         db  0x00 ; '.'
000000000020a27f         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x20a290; 0x20a620[ (912 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x20a290; 0x4148b0[ (2139680 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     free:
000000000020a290         extern function code                                   ; DATA XREF=free@GOT
                     abort:
000000000020a298         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
000000000020a2a0         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
000000000020a2a8         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
000000000020a2b0         extern function code
                     _exit:
000000000020a2b8         extern function code                                   ; DATA XREF=_exit@GOT
                     __fpending:
000000000020a2c0         extern function code                                   ; DATA XREF=__fpending@GOT
                     fcntl:
000000000020a2c8         extern function code                                   ; DATA XREF=fcntl@GOT
                     fread_unlocked:
000000000020a2d0         extern function code                                   ; DATA XREF=fread_unlocked@GOT
                     textdomain:
000000000020a2d8         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
000000000020a2e0         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
000000000020a2e8         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
000000000020a2f0         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
000000000020a2f8         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
000000000020a300         extern function code                                   ; DATA XREF=strlen@GOT
                     __stack_chk_fail:
000000000020a308         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
000000000020a310         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
000000000020a318         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     strchr:
000000000020a320         extern function code                                   ; DATA XREF=strchr@GOT
                     __overflow:
000000000020a328         extern function code                                   ; DATA XREF=__overflow@GOT
                     strrchr:
000000000020a330         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
000000000020a338         extern function code                                   ; DATA XREF=lseek@GOT
                     memset:
000000000020a340         extern function code                                   ; DATA XREF=memset@GOT
                     close:
000000000020a348         extern function code                                   ; DATA XREF=close@GOT
                     posix_fadvise:
000000000020a350         extern function code                                   ; DATA XREF=posix_fadvise@GOT
                     __libc_start_main:
000000000020a358         extern function code
                     memcmp:
000000000020a360         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
000000000020a368         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
000000000020a370         extern function code                                   ; DATA XREF=calloc@GOT
                     __getdelim:
000000000020a378         extern function code                                   ; DATA XREF=__getdelim@GOT
                     __gmon_start__:
000000000020a380         extern function code
                     memcpy:
000000000020a388         extern function code                                   ; DATA XREF=memcpy@GOT
                     fileno:
000000000020a390         extern function code                                   ; DATA XREF=fileno@GOT
                     malloc:
000000000020a398         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
000000000020a3a0         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
000000000020a3a8         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __freading:
000000000020a3b0         extern function code                                   ; DATA XREF=__freading@GOT
                     fwrite_unlocked:
000000000020a3b8         extern function code                                   ; DATA XREF=fwrite_unlocked@GOT
                     realloc:
000000000020a3c0         extern function code                                   ; DATA XREF=realloc@GOT
                     fdopen:
000000000020a3c8         extern function code                                   ; DATA XREF=fdopen@GOT
                     setlocale:
000000000020a3d0         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
000000000020a3d8         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     setvbuf:
000000000020a3e0         extern function code                                   ; DATA XREF=setvbuf@GOT
                     error:
000000000020a3e8         extern function code                                   ; DATA XREF=error@GOT
                     fseeko:
000000000020a3f0         extern function code                                   ; DATA XREF=fseeko@GOT
                     fopen:
000000000020a3f8         extern function code                                   ; DATA XREF=fopen@GOT
                     dcngettext:
000000000020a400         extern function code                                   ; DATA XREF=dcngettext@GOT
                     __cxa_atexit:
000000000020a408         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     exit:
000000000020a410         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
000000000020a418         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
000000000020a420         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
000000000020a428         extern function code
                     mbsinit:
000000000020a430         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
000000000020a438         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
000000000020a440         extern function code
                     __ctype_tolower_loc:
000000000020a448         extern function code                                   ; DATA XREF=__ctype_tolower_loc@GOT
                     __ctype_b_loc:
000000000020a450         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     free@@GLIBC_2.2.5:
000000000020a458         extern function code
                     abort@@GLIBC_2.2.5:
000000000020a460         extern function code
                     __errno_location@@GLIBC_2.2.5:
000000000020a468         extern function code
                     strncmp@@GLIBC_2.2.5:
000000000020a470         extern function code
                     _ITM_deregisterTMCloneTable_20a478:        // _ITM_deregisterTMCloneTable
000000000020a478         extern function code
                     _exit@@GLIBC_2.2.5:
000000000020a480         extern function code
                     __fpending@@GLIBC_2.2.5:
000000000020a488         extern function code
                     fcntl@@GLIBC_2.2.5:
000000000020a490         extern function code
                     fread_unlocked@@GLIBC_2.2.5:
000000000020a498         extern function code
                     textdomain@@GLIBC_2.2.5:
000000000020a4a0         extern function code
                     fclose@@GLIBC_2.2.5:
000000000020a4a8         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
000000000020a4b0         extern function code
                     dcgettext@@GLIBC_2.2.5:
000000000020a4b8         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
000000000020a4c0         extern function code
                     strlen@@GLIBC_2.2.5:
000000000020a4c8         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
000000000020a4d0         extern function code
                     getopt_long@@GLIBC_2.2.5:
000000000020a4d8         extern function code
                     mbrtowc@@GLIBC_2.2.5:
000000000020a4e0         extern function code
                     strchr@@GLIBC_2.2.5:
000000000020a4e8         extern function code
                     __overflow@@GLIBC_2.2.5:
000000000020a4f0         extern function code
                     strrchr@@GLIBC_2.2.5:
000000000020a4f8         extern function code
                     lseek@@GLIBC_2.2.5:
000000000020a500         extern function code
                     memset@@GLIBC_2.2.5:
000000000020a508         extern function code
                     close@@GLIBC_2.2.5:
000000000020a510         extern function code
                     posix_fadvise@@GLIBC_2.2.5:
000000000020a518         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
000000000020a520         extern function code
                     memcmp@@GLIBC_2.2.5:
000000000020a528         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
000000000020a530         extern function code
                     calloc@@GLIBC_2.2.5:
000000000020a538         extern function code
                     __getdelim@@GLIBC_2.2.5:
000000000020a540         extern function code
                     __gmon_start___20a548:        // __gmon_start__
000000000020a548         extern function code
                     memcpy@@GLIBC_2.14:
000000000020a550         extern function code
                     fileno@@GLIBC_2.2.5:
000000000020a558         extern function code
                     malloc@@GLIBC_2.2.5:
000000000020a560         extern function code
                     fflush@@GLIBC_2.2.5:
000000000020a568         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
000000000020a570         extern function code
                     __freading@@GLIBC_2.2.5:
000000000020a578         extern function code
                     fwrite_unlocked@@GLIBC_2.2.5:
000000000020a580         extern function code
                     realloc@@GLIBC_2.2.5:
000000000020a588         extern function code
                     fdopen@@GLIBC_2.2.5:
000000000020a590         extern function code
                     setlocale@@GLIBC_2.2.5:
000000000020a598         extern function code
                     __printf_chk@@GLIBC_2.3.4:
000000000020a5a0         extern function code
                     setvbuf@@GLIBC_2.2.5:
000000000020a5a8         extern function code
                     error@@GLIBC_2.2.5:
000000000020a5b0         extern function code
                     fseeko@@GLIBC_2.2.5:
000000000020a5b8         extern function code
                     fopen@@GLIBC_2.2.5:
000000000020a5c0         extern function code
                     dcngettext@@GLIBC_2.2.5:
000000000020a5c8         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
000000000020a5d0         extern function code
                     exit@@GLIBC_2.2.5:
000000000020a5d8         extern function code
                     fwrite@@GLIBC_2.2.5:
000000000020a5e0         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
000000000020a5e8         extern function code
                     _ITM_registerTMCloneTable_20a5f0:        // _ITM_registerTMCloneTable
000000000020a5f0         extern function code
                     mbsinit@@GLIBC_2.2.5:
000000000020a5f8         extern function code
                     iswprint@@GLIBC_2.2.5:
000000000020a600         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
000000000020a608         extern function code
                     __ctype_tolower_loc@@GLIBC_2.3:
000000000020a610         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
000000000020a618         extern function code
