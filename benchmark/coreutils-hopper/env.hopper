
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/env
        UUID: F8B3F05B-D7F8-FE48-A966-DD9857081A97
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0x8f40[ (36672 bytes)
        ; File offset : [0; 36672[ (36672 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0xe0 ; '.'
0000000000000019         db  0x30 ; '0'
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0xc0 ; '.'
0000000000000029         db  0xec ; '.'
000000000000002a         db  0x02 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0x40 ; '@'
00000000000000d1         db  0x8f ; '.'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0x40 ; '@'
00000000000000d9         db  0x8f ; '.'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0xd0 ; '.'
00000000000000f1         db  0x99 ; '.'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0xd0 ; '.'
00000000000000f9         db  0x99 ; '.'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0xd0 ; '.'                                         ; DATA XREF=quotearg_free+87, rpl_fflush+18, slotvec0
0000000000000101         db  0x99 ; '.'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'                                         ; DATA XREF=main+121
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0x54 ; 'T'
0000000000000109         db  0x08 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0x88 ; '.'
0000000000000111         db  0x0b ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'                                         ; DATA XREF=main+13, main+2862
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0xd8 ; '.'
0000000000000129         db  0x9b ; '.'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'                                         ; DATA XREF=main+4863
0000000000000130         db  0xd8 ; '.'
0000000000000131         db  0x9b ; '.'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'                                         ; DATA XREF=main+4832
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0xd8 ; '.'
0000000000000139         db  0x9b ; '.'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'                                         ; DATA XREF=list_signal_handling+10, list_signal_handling+291
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0xe0 ; '.'
0000000000000199         db  0x7f ; '.'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0xe0 ; '.'
00000000000001a1         db  0x7f ; '.'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0xe0 ; '.'
00000000000001a9         db  0x7f ; '.'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0x74 ; 't'
00000000000001b1         db  0x02 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0x74 ; 't'
00000000000001b9         db  0x02 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0xd0 ; '.'
0000000000000209         db  0x99 ; '.'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0xd0 ; '.'
0000000000000211         db  0x99 ; '.'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0xd0 ; '.'
0000000000000219         db  0x99 ; '.'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0x30 ; '0'
0000000000000221         db  0x06 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0x30 ; '0'
0000000000000229         db  0x06 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0xf8 ; '.'
0000000000000285         db  0xb3 ; '.'
0000000000000286         db  0xf0 ; '.'
0000000000000287         db  0x5b ; '['
0000000000000288         db  0xd7 ; '.'
0000000000000289         db  0xf8 ; '.'
000000000000028a         db  0xfe ; '.'
000000000000028b         db  0x48 ; 'H'
000000000000028c         db  0xa9 ; '.'
000000000000028d         db  0x66 ; 'f'
000000000000028e         db  0xdd ; '.'
000000000000028f         db  0x98 ; '.'
0000000000000290         db  0x57 ; 'W'
0000000000000291         db  0x08 ; '.'
0000000000000292         db  0x1a ; '.'
0000000000000293         db  0x97 ; '.'
0000000000000294         db  0xf6 ; '.'
0000000000000295         db  0x32 ; '2'
0000000000000296         db  0x6e ; 'n'
0000000000000297         db  0x44 ; 'D'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2e8[ (80 bytes)
        ; File offset : [664; 744[ (80 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x44 ; 'D'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x34 ; '4'
00000000000002a9         db  0x4d ; 'M'
00000000000002aa         db  0x41 ; 'A'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0xe0 ; '.'
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x5c ; '\'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x44 ; 'D'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x47 ; 'G'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x4d ; 'M'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x28 ; '('
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xc4 ; '.'
00000000000002c1         db  0x89 ; '.'
00000000000002c2         db  0x05 ; '.'
00000000000002c3         db  0x90 ; '.'
00000000000002c4         db  0xa7 ; '.'
00000000000002c5         db  0xdd ; '.'
00000000000002c6         db  0xa3 ; '.'
00000000000002c7         db  0x6b ; 'k'
00000000000002c8         db  0xbc ; '.'
00000000000002c9         db  0x50 ; 'P'
00000000000002ca         db  0x76 ; 'v'
00000000000002cb         db  0x9e ; '.'
00000000000002cc         db  0x96 ; '.'
00000000000002cd         db  0xa0 ; '.'
00000000000002ce         db  0x89 ; '.'
00000000000002cf         db  0x97 ; '.'
00000000000002d0         db  0xce ; '.'
00000000000002d1         db  0x2c ; ','
00000000000002d2         db  0x63 ; 'c'
00000000000002d3         db  0x72 ; 'r'
00000000000002d4         db  0xc4 ; '.'
00000000000002d5         db  0xb9 ; '.'
00000000000002d6         db  0x9c ; '.'
00000000000002d7         db  0x40 ; '@'
00000000000002d8         db  0xe4 ; '.'
00000000000002d9         db  0x62 ; 'b'
00000000000002da         db  0x41 ; 'A'
00000000000002db         db  0xf5 ; '.'
00000000000002dc         db  0x39 ; '9'
00000000000002dd         db  0xf2 ; '.'
00000000000002de         db  0x8b ; '.'
00000000000002df         db  0x1c ; '.'
00000000000002e0         db  0x32 ; '2'
00000000000002e1         db  0xc4 ; '.'
00000000000002e2         db  0xf7 ; '.'
00000000000002e3         db  0x12 ; '.'
00000000000002e4         db  0xb3 ; '.'
00000000000002e5         db  0xa2 ; '.'
00000000000002e6         db  0xf7 ; '.'
00000000000002e7         db  0x12 ; '.'


        ; Section .dynsym
        ; Range: [0x2e8; 0xa50[ (1896 bytes)
        ; File offset : [744; 2640[ (1896 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0x00 ; '.'
00000000000002f9         db  0x00 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x00 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0xb9 ; '.'
0000000000000301         db  0x01 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x12 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x00 ; '.'
0000000000000311         db  0x00 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x00 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x5f ; '_'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x12 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0x00 ; '.'
0000000000000329         db  0x00 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x00 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0xc4 ; '.'
0000000000000331         db  0x02 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x12 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0x00 ; '.'
0000000000000341         db  0x00 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x00 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x98 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x12 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0x00 ; '.'
0000000000000359         db  0x00 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x00 ; '.'
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x17 ; '.'
0000000000000361         db  0x01 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x12 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0x00 ; '.'
0000000000000371         db  0x00 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x00 ; '.'
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x38 ; '8'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x12 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0x00 ; '.'
0000000000000389         db  0x00 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x00 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x32 ; '2'
0000000000000391         db  0x03 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x20 ; ' '
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0x00 ; '.'
00000000000003a1         db  0x00 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x00 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x9e ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x12 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0x00 ; '.'
00000000000003b9         db  0x00 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x00 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x12 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x12 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0x00 ; '.'
00000000000003d1         db  0x00 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x00 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x1a ; '.'
00000000000003d9         db  0x02 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x12 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0x00 ; '.'
00000000000003e9         db  0x00 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x00 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x04 ; '.'
00000000000003f1         db  0x02 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x12 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0x00 ; '.'
0000000000000401         db  0x00 ; '.'
0000000000000402         db  0x00 ; '.'
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x00 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'
0000000000000407         db  0x00 ; '.'
0000000000000408         db  0x83 ; '.'
0000000000000409         db  0x02 ; '.'
000000000000040a         db  0x00 ; '.'
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x12 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0x00 ; '.'
0000000000000419         db  0x00 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x00 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x71 ; 'q'
0000000000000421         db  0x01 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x12 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0x00 ; '.'
0000000000000431         db  0x00 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x00 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x7f ; '.'
0000000000000439         db  0x02 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x12 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0x00 ; '.'
0000000000000449         db  0x00 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x00 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0xa7 ; '.'
0000000000000451         db  0x02 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x12 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0x00 ; '.'
0000000000000461         db  0x00 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x00 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x4f ; 'O'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x12 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x00 ; '.'
0000000000000479         db  0x00 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x00 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0xd1 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x12 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0x00 ; '.'
0000000000000491         db  0x00 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x00 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0xfd ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x12 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x00 ; '.'
00000000000004a9         db  0x00 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x00 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x28 ; '('
00000000000004b1         db  0x01 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x12 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0x00 ; '.'
00000000000004c1         db  0x00 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x00 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x76 ; 'v'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x12 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x00 ; '.'
00000000000004d9         db  0x00 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x00 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0xe3 ; '.'
00000000000004e1         db  0x01 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x12 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0x00 ; '.'
00000000000004f1         db  0x00 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x00 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x30 ; '0'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x12 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0x00 ; '.'
0000000000000509         db  0x00 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x00 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x25 ; '%'
0000000000000511         db  0x02 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x12 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0x00 ; '.'
0000000000000521         db  0x00 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x00 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x47 ; 'G'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x12 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0x00 ; '.'
0000000000000539         db  0x00 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x00 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x64 ; 'd'
0000000000000541         db  0x01 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x12 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0x00 ; '.'
0000000000000551         db  0x00 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x00 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0xc3 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x12 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0x00 ; '.'
0000000000000569         db  0x00 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x00 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x10 ; '.'
0000000000000571         db  0x01 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x12 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0x00 ; '.'
0000000000000581         db  0x00 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x00 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0xa4 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x12 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0x00 ; '.'
0000000000000599         db  0x00 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x00 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x95 ; '.'
00000000000005a1         db  0x02 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x12 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0x00 ; '.'
00000000000005b1         db  0x00 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x00 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x2e ; '.'
00000000000005b9         db  0x01 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x12 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0x00 ; '.'
00000000000005c9         db  0x00 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x00 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0xb5 ; '.'
00000000000005d1         db  0x02 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x12 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0x00 ; '.'
00000000000005e1         db  0x00 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x00 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0xf6 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x12 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x00 ; '.'
00000000000005f9         db  0x00 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x00 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x56 ; 'V'
0000000000000601         db  0x01 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x12 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x00 ; '.'
0000000000000611         db  0x00 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x00 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x8e ; '.'
0000000000000619         db  0x02 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x12 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0x00 ; '.'
0000000000000629         db  0x00 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x00 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x04 ; '.'
0000000000000631         db  0x01 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x12 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x00 ; '.'
0000000000000641         db  0x00 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x00 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x4e ; 'N'
0000000000000649         db  0x03 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x20 ; ' '
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x00 ; '.'
0000000000000659         db  0x00 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x00 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0xef ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x12 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x00 ; '.'
0000000000000671         db  0x00 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x00 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x6b ; 'k'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x12 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0x00 ; '.'
0000000000000689         db  0x00 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x00 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x6a ; 'j'
0000000000000691         db  0x01 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x12 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x00 ; '.'
00000000000006a1         db  0x00 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x00 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0xf6 ; '.'
00000000000006a9         db  0x01 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x12 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x00 ; '.'
00000000000006b9         db  0x00 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x00 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x78 ; 'x'
00000000000006c1         db  0x01 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x12 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x00 ; '.'
00000000000006d1         db  0x00 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x00 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x0b ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x12 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0x00 ; '.'
00000000000006e9         db  0x00 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x00 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x87 ; '.'
00000000000006f1         db  0x01 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x12 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x00 ; '.'
0000000000000701         db  0x00 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x00 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0xc7 ; '.'
0000000000000709         db  0x01 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x12 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x00 ; '.'
0000000000000719         db  0x00 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x00 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x90 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x12 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x00 ; '.'
0000000000000731         db  0x00 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x00 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x26 ; '&'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x12 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0x00 ; '.'
0000000000000749         db  0x00 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x00 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x19 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x12 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0x00 ; '.'
0000000000000761         db  0x00 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x00 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x59 ; 'Y'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x12 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0x00 ; '.'
0000000000000779         db  0x00 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x00 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0xae ; '.'
0000000000000781         db  0x02 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x12 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x00 ; '.'
0000000000000791         db  0x00 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x00 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0xd9 ; '.'
0000000000000799         db  0x01 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x12 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0x00 ; '.'
00000000000007a9         db  0x00 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x00 ; '.'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0xe8 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x12 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x00 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0x00 ; '.'
00000000000007c1         db  0x00 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x00 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x35 ; '5'
00000000000007c9         db  0x01 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x12 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x00 ; '.'
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x00 ; '.'
00000000000007d9         db  0x00 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x00 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0xef ; '.'
00000000000007e1         db  0x01 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x12 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x00 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0x00 ; '.'
00000000000007f1         db  0x00 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x00 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x00 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0xee ; '.'
00000000000007f9         db  0x02 ; '.'
00000000000007fa         db  0x00 ; '.'
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x12 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x00 ; '.'
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x00 ; '.'
0000000000000809         db  0x00 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x00 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x00 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0x59 ; 'Y'
0000000000000811         db  0x02 ; '.'
0000000000000812         db  0x00 ; '.'
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x12 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x00 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0x00 ; '.'
0000000000000821         db  0x00 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x00 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x00 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0x0e ; '.'
0000000000000829         db  0x02 ; '.'
000000000000082a         db  0x00 ; '.'
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x12 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x00 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x00 ; '.'
0000000000000839         db  0x00 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x00 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x00 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0x9f ; '.'
0000000000000841         db  0x00 ; '.'
0000000000000842         db  0x00 ; '.'
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x12 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x00 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0x00 ; '.'
0000000000000851         db  0x00 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x00 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x00 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0xfd ; '.'
0000000000000859         db  0x01 ; '.'
000000000000085a         db  0x00 ; '.'
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x12 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x00 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0x00 ; '.'
0000000000000869         db  0x00 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x00 ; '.'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x00 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0x3e ; '>'
0000000000000871         db  0x01 ; '.'
0000000000000872         db  0x00 ; '.'
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x12 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x00 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0x00 ; '.'
0000000000000881         db  0x00 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x00 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x00 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0x93 ; '.'
0000000000000889         db  0x01 ; '.'
000000000000088a         db  0x00 ; '.'
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x12 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x00 ; '.'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x00 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0x00 ; '.'
0000000000000899         db  0x00 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x00 ; '.'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x00 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0x5d ; ']'
00000000000008a1         db  0x03 ; '.'
00000000000008a2         db  0x00 ; '.'
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x20 ; ' '
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x00 ; '.'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x00 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x00 ; '.'
00000000000008b0         db  0x00 ; '.'
00000000000008b1         db  0x00 ; '.'
00000000000008b2         db  0x00 ; '.'
00000000000008b3         db  0x00 ; '.'
00000000000008b4         db  0x00 ; '.'
00000000000008b5         db  0x00 ; '.'
00000000000008b6         db  0x00 ; '.'
00000000000008b7         db  0x00 ; '.'
00000000000008b8         db  0x7f ; '.'
00000000000008b9         db  0x01 ; '.'
00000000000008ba         db  0x00 ; '.'
00000000000008bb         db  0x00 ; '.'
00000000000008bc         db  0x12 ; '.'
00000000000008bd         db  0x00 ; '.'
00000000000008be         db  0x00 ; '.'
00000000000008bf         db  0x00 ; '.'
00000000000008c0         db  0x00 ; '.'
00000000000008c1         db  0x00 ; '.'
00000000000008c2         db  0x00 ; '.'
00000000000008c3         db  0x00 ; '.'
00000000000008c4         db  0x00 ; '.'
00000000000008c5         db  0x00 ; '.'
00000000000008c6         db  0x00 ; '.'
00000000000008c7         db  0x00 ; '.'
00000000000008c8         db  0x00 ; '.'
00000000000008c9         db  0x00 ; '.'
00000000000008ca         db  0x00 ; '.'
00000000000008cb         db  0x00 ; '.'
00000000000008cc         db  0x00 ; '.'
00000000000008cd         db  0x00 ; '.'
00000000000008ce         db  0x00 ; '.'
00000000000008cf         db  0x00 ; '.'
00000000000008d0         db  0x87 ; '.'
00000000000008d1         db  0x00 ; '.'
00000000000008d2         db  0x00 ; '.'
00000000000008d3         db  0x00 ; '.'
00000000000008d4         db  0x12 ; '.'
00000000000008d5         db  0x00 ; '.'
00000000000008d6         db  0x00 ; '.'
00000000000008d7         db  0x00 ; '.'
00000000000008d8         db  0x00 ; '.'
00000000000008d9         db  0x00 ; '.'
00000000000008da         db  0x00 ; '.'
00000000000008db         db  0x00 ; '.'
00000000000008dc         db  0x00 ; '.'
00000000000008dd         db  0x00 ; '.'
00000000000008de         db  0x00 ; '.'
00000000000008df         db  0x00 ; '.'
00000000000008e0         db  0x00 ; '.'
00000000000008e1         db  0x00 ; '.'
00000000000008e2         db  0x00 ; '.'
00000000000008e3         db  0x00 ; '.'
00000000000008e4         db  0x00 ; '.'
00000000000008e5         db  0x00 ; '.'
00000000000008e6         db  0x00 ; '.'
00000000000008e7         db  0x00 ; '.'
00000000000008e8         db  0x4a ; 'J'
00000000000008e9         db  0x02 ; '.'
00000000000008ea         db  0x00 ; '.'
00000000000008eb         db  0x00 ; '.'
00000000000008ec         db  0x22 ; '"'
00000000000008ed         db  0x00 ; '.'
00000000000008ee         db  0x00 ; '.'
00000000000008ef         db  0x00 ; '.'
00000000000008f0         db  0x00 ; '.'
00000000000008f1         db  0x00 ; '.'
00000000000008f2         db  0x00 ; '.'
00000000000008f3         db  0x00 ; '.'
00000000000008f4         db  0x00 ; '.'
00000000000008f5         db  0x00 ; '.'
00000000000008f6         db  0x00 ; '.'
00000000000008f7         db  0x00 ; '.'
00000000000008f8         db  0x00 ; '.'
00000000000008f9         db  0x00 ; '.'
00000000000008fa         db  0x00 ; '.'
00000000000008fb         db  0x00 ; '.'
00000000000008fc         db  0x00 ; '.'
00000000000008fd         db  0x00 ; '.'
00000000000008fe         db  0x00 ; '.'
00000000000008ff         db  0x00 ; '.'
0000000000000900         db  0x4c ; 'L'
0000000000000901         db  0x01 ; '.'
0000000000000902         db  0x00 ; '.'
0000000000000903         db  0x00 ; '.'
0000000000000904         db  0x12 ; '.'
0000000000000905         db  0x00 ; '.'
0000000000000906         db  0x00 ; '.'
0000000000000907         db  0x00 ; '.'
0000000000000908         db  0x00 ; '.'
0000000000000909         db  0x00 ; '.'
000000000000090a         db  0x00 ; '.'
000000000000090b         db  0x00 ; '.'
000000000000090c         db  0x00 ; '.'
000000000000090d         db  0x00 ; '.'
000000000000090e         db  0x00 ; '.'
000000000000090f         db  0x00 ; '.'
0000000000000910         db  0x00 ; '.'
0000000000000911         db  0x00 ; '.'
0000000000000912         db  0x00 ; '.'
0000000000000913         db  0x00 ; '.'
0000000000000914         db  0x00 ; '.'
0000000000000915         db  0x00 ; '.'
0000000000000916         db  0x00 ; '.'
0000000000000917         db  0x00 ; '.'
0000000000000918         db  0xab ; '.'
0000000000000919         db  0x01 ; '.'
000000000000091a         db  0x00 ; '.'
000000000000091b         db  0x00 ; '.'
000000000000091c         db  0x12 ; '.'
000000000000091d         db  0x00 ; '.'
000000000000091e         db  0x00 ; '.'
000000000000091f         db  0x00 ; '.'
0000000000000920         db  0x00 ; '.'
0000000000000921         db  0x00 ; '.'
0000000000000922         db  0x00 ; '.'
0000000000000923         db  0x00 ; '.'
0000000000000924         db  0x00 ; '.'
0000000000000925         db  0x00 ; '.'
0000000000000926         db  0x00 ; '.'
0000000000000927         db  0x00 ; '.'
0000000000000928         db  0x00 ; '.'
0000000000000929         db  0x00 ; '.'
000000000000092a         db  0x00 ; '.'
000000000000092b         db  0x00 ; '.'
000000000000092c         db  0x00 ; '.'
000000000000092d         db  0x00 ; '.'
000000000000092e         db  0x00 ; '.'
000000000000092f         db  0x00 ; '.'
0000000000000930         db  0x71 ; 'q'
0000000000000931         db  0x02 ; '.'
0000000000000932         db  0x00 ; '.'
0000000000000933         db  0x00 ; '.'
0000000000000934         db  0x12 ; '.'
0000000000000935         db  0x00 ; '.'
0000000000000936         db  0x00 ; '.'
0000000000000937         db  0x00 ; '.'
0000000000000938         db  0x00 ; '.'
0000000000000939         db  0x00 ; '.'
000000000000093a         db  0x00 ; '.'
000000000000093b         db  0x00 ; '.'
000000000000093c         db  0x00 ; '.'
000000000000093d         db  0x00 ; '.'
000000000000093e         db  0x00 ; '.'
000000000000093f         db  0x00 ; '.'
0000000000000940         db  0x00 ; '.'
0000000000000941         db  0x00 ; '.'
0000000000000942         db  0x00 ; '.'
0000000000000943         db  0x00 ; '.'
0000000000000944         db  0x00 ; '.'
0000000000000945         db  0x00 ; '.'
0000000000000946         db  0x00 ; '.'
0000000000000947         db  0x00 ; '.'
0000000000000948         db  0x5d ; ']'
0000000000000949         db  0x01 ; '.'
000000000000094a         db  0x00 ; '.'
000000000000094b         db  0x00 ; '.'
000000000000094c         db  0x11 ; '.'
000000000000094d         db  0x00 ; '.'
000000000000094e         db  0x19 ; '.'
000000000000094f         db  0x00 ; '.'
0000000000000950         db  0x48 ; 'H'
0000000000000951         db  0xa2 ; '.'
0000000000000952         db  0x20 ; ' '
0000000000000953         db  0x00 ; '.'
0000000000000954         db  0x00 ; '.'
0000000000000955         db  0x00 ; '.'
0000000000000956         db  0x00 ; '.'
0000000000000957         db  0x00 ; '.'
0000000000000958         db  0x08 ; '.'
0000000000000959         db  0x00 ; '.'
000000000000095a         db  0x00 ; '.'
000000000000095b         db  0x00 ; '.'
000000000000095c         db  0x00 ; '.'
000000000000095d         db  0x00 ; '.'
000000000000095e         db  0x00 ; '.'
000000000000095f         db  0x00 ; '.'
0000000000000960         db  0xd5 ; '.'
0000000000000961         db  0x02 ; '.'
0000000000000962         db  0x00 ; '.'
0000000000000963         db  0x00 ; '.'
0000000000000964         db  0x21 ; '!'
0000000000000965         db  0x00 ; '.'
0000000000000966         db  0x19 ; '.'
0000000000000967         db  0x00 ; '.'
0000000000000968         db  0x58 ; 'X'
0000000000000969         db  0xa2 ; '.'
000000000000096a         db  0x20 ; ' '
000000000000096b         db  0x00 ; '.'
000000000000096c         db  0x00 ; '.'
000000000000096d         db  0x00 ; '.'
000000000000096e         db  0x00 ; '.'
000000000000096f         db  0x00 ; '.'
0000000000000970         db  0x08 ; '.'
0000000000000971         db  0x00 ; '.'
0000000000000972         db  0x00 ; '.'
0000000000000973         db  0x00 ; '.'
0000000000000974         db  0x00 ; '.'
0000000000000975         db  0x00 ; '.'
0000000000000976         db  0x00 ; '.'
0000000000000977         db  0x00 ; '.'
0000000000000978         db  0xd6 ; '.'
0000000000000979         db  0x02 ; '.'
000000000000097a         db  0x00 ; '.'
000000000000097b         db  0x00 ; '.'
000000000000097c         db  0x21 ; '!'
000000000000097d         db  0x00 ; '.'
000000000000097e         db  0x19 ; '.'
000000000000097f         db  0x00 ; '.'
0000000000000980         db  0x58 ; 'X'
0000000000000981         db  0xa2 ; '.'
0000000000000982         db  0x20 ; ' '
0000000000000983         db  0x00 ; '.'
0000000000000984         db  0x00 ; '.'
0000000000000985         db  0x00 ; '.'
0000000000000986         db  0x00 ; '.'
0000000000000987         db  0x00 ; '.'
0000000000000988         db  0x08 ; '.'
0000000000000989         db  0x00 ; '.'
000000000000098a         db  0x00 ; '.'
000000000000098b         db  0x00 ; '.'
000000000000098c         db  0x00 ; '.'
000000000000098d         db  0x00 ; '.'
000000000000098e         db  0x00 ; '.'
000000000000098f         db  0x00 ; '.'
0000000000000990         db  0xc9 ; '.'
0000000000000991         db  0x02 ; '.'
0000000000000992         db  0x00 ; '.'
0000000000000993         db  0x00 ; '.'
0000000000000994         db  0x11 ; '.'
0000000000000995         db  0x00 ; '.'
0000000000000996         db  0x19 ; '.'
0000000000000997         db  0x00 ; '.'
0000000000000998         db  0x40 ; '@'
0000000000000999         db  0xa2 ; '.'
000000000000099a         db  0x20 ; ' '
000000000000099b         db  0x00 ; '.'
000000000000099c         db  0x00 ; '.'
000000000000099d         db  0x00 ; '.'
000000000000099e         db  0x00 ; '.'
000000000000099f         db  0x00 ; '.'
00000000000009a0         db  0x08 ; '.'
00000000000009a1         db  0x00 ; '.'
00000000000009a2         db  0x00 ; '.'
00000000000009a3         db  0x00 ; '.'
00000000000009a4         db  0x00 ; '.'
00000000000009a5         db  0x00 ; '.'
00000000000009a6         db  0x00 ; '.'
00000000000009a7         db  0x00 ; '.'
00000000000009a8         db  0xab ; '.'
00000000000009a9         db  0x00 ; '.'
00000000000009aa         db  0x00 ; '.'
00000000000009ab         db  0x00 ; '.'
00000000000009ac         db  0x21 ; '!'
00000000000009ad         db  0x00 ; '.'
00000000000009ae         db  0x19 ; '.'
00000000000009af         db  0x00 ; '.'
00000000000009b0         db  0x68 ; 'h'
00000000000009b1         db  0xa2 ; '.'
00000000000009b2         db  0x20 ; ' '
00000000000009b3         db  0x00 ; '.'
00000000000009b4         db  0x00 ; '.'
00000000000009b5         db  0x00 ; '.'
00000000000009b6         db  0x00 ; '.'
00000000000009b7         db  0x00 ; '.'
00000000000009b8         db  0x08 ; '.'
00000000000009b9         db  0x00 ; '.'
00000000000009ba         db  0x00 ; '.'
00000000000009bb         db  0x00 ; '.'
00000000000009bc         db  0x00 ; '.'
00000000000009bd         db  0x00 ; '.'
00000000000009be         db  0x00 ; '.'
00000000000009bf         db  0x00 ; '.'
00000000000009c0         db  0xde ; '.'
00000000000009c1         db  0x02 ; '.'
00000000000009c2         db  0x00 ; '.'
00000000000009c3         db  0x00 ; '.'
00000000000009c4         db  0x11 ; '.'
00000000000009c5         db  0x00 ; '.'
00000000000009c6         db  0x19 ; '.'
00000000000009c7         db  0x00 ; '.'
00000000000009c8         db  0x68 ; 'h'
00000000000009c9         db  0xa2 ; '.'
00000000000009ca         db  0x20 ; ' '
00000000000009cb         db  0x00 ; '.'
00000000000009cc         db  0x00 ; '.'
00000000000009cd         db  0x00 ; '.'
00000000000009ce         db  0x00 ; '.'
00000000000009cf         db  0x00 ; '.'
00000000000009d0         db  0x08 ; '.'
00000000000009d1         db  0x00 ; '.'
00000000000009d2         db  0x00 ; '.'
00000000000009d3         db  0x00 ; '.'
00000000000009d4         db  0x00 ; '.'
00000000000009d5         db  0x00 ; '.'
00000000000009d6         db  0x00 ; '.'
00000000000009d7         db  0x00 ; '.'
00000000000009d8         db  0xd4 ; '.'
00000000000009d9         db  0x02 ; '.'
00000000000009da         db  0x00 ; '.'
00000000000009db         db  0x00 ; '.'
00000000000009dc         db  0x11 ; '.'
00000000000009dd         db  0x00 ; '.'
00000000000009de         db  0x19 ; '.'
00000000000009df         db  0x00 ; '.'
00000000000009e0         db  0x58 ; 'X'
00000000000009e1         db  0xa2 ; '.'
00000000000009e2         db  0x20 ; ' '
00000000000009e3         db  0x00 ; '.'
00000000000009e4         db  0x00 ; '.'
00000000000009e5         db  0x00 ; '.'
00000000000009e6         db  0x00 ; '.'
00000000000009e7         db  0x00 ; '.'
00000000000009e8         db  0x08 ; '.'
00000000000009e9         db  0x00 ; '.'
00000000000009ea         db  0x00 ; '.'
00000000000009eb         db  0x00 ; '.'
00000000000009ec         db  0x00 ; '.'
00000000000009ed         db  0x00 ; '.'
00000000000009ee         db  0x00 ; '.'
00000000000009ef         db  0x00 ; '.'
00000000000009f0         db  0x2c ; ','
00000000000009f1         db  0x02 ; '.'
00000000000009f2         db  0x00 ; '.'
00000000000009f3         db  0x00 ; '.'
00000000000009f4         db  0x21 ; '!'
00000000000009f5         db  0x00 ; '.'
00000000000009f6         db  0x19 ; '.'
00000000000009f7         db  0x00 ; '.'
00000000000009f8         db  0x40 ; '@'
00000000000009f9         db  0xa2 ; '.'
00000000000009fa         db  0x20 ; ' '
00000000000009fb         db  0x00 ; '.'
00000000000009fc         db  0x00 ; '.'
00000000000009fd         db  0x00 ; '.'
00000000000009fe         db  0x00 ; '.'
00000000000009ff         db  0x00 ; '.'
0000000000000a00         db  0x08 ; '.'
0000000000000a01         db  0x00 ; '.'
0000000000000a02         db  0x00 ; '.'
0000000000000a03         db  0x00 ; '.'
0000000000000a04         db  0x00 ; '.'
0000000000000a05         db  0x00 ; '.'
0000000000000a06         db  0x00 ; '.'
0000000000000a07         db  0x00 ; '.'
0000000000000a08         db  0xd2 ; '.'
0000000000000a09         db  0x01 ; '.'
0000000000000a0a         db  0x00 ; '.'
0000000000000a0b         db  0x00 ; '.'
0000000000000a0c         db  0x11 ; '.'
0000000000000a0d         db  0x00 ; '.'
0000000000000a0e         db  0x19 ; '.'
0000000000000a0f         db  0x00 ; '.'
0000000000000a10         db  0x80 ; '.'
0000000000000a11         db  0xa2 ; '.'
0000000000000a12         db  0x20 ; ' '
0000000000000a13         db  0x00 ; '.'
0000000000000a14         db  0x00 ; '.'
0000000000000a15         db  0x00 ; '.'
0000000000000a16         db  0x00 ; '.'
0000000000000a17         db  0x00 ; '.'
0000000000000a18         db  0x08 ; '.'
0000000000000a19         db  0x00 ; '.'
0000000000000a1a         db  0x00 ; '.'
0000000000000a1b         db  0x00 ; '.'
0000000000000a1c         db  0x00 ; '.'
0000000000000a1d         db  0x00 ; '.'
0000000000000a1e         db  0x00 ; '.'
0000000000000a1f         db  0x00 ; '.'
0000000000000a20         db  0x40 ; '@'
0000000000000a21         db  0x00 ; '.'
0000000000000a22         db  0x00 ; '.'
0000000000000a23         db  0x00 ; '.'
0000000000000a24         db  0x11 ; '.'
0000000000000a25         db  0x00 ; '.'
0000000000000a26         db  0x19 ; '.'
0000000000000a27         db  0x00 ; '.'
0000000000000a28         db  0x50 ; 'P'
0000000000000a29         db  0xa2 ; '.'
0000000000000a2a         db  0x20 ; ' '
0000000000000a2b         db  0x00 ; '.'
0000000000000a2c         db  0x00 ; '.'
0000000000000a2d         db  0x00 ; '.'
0000000000000a2e         db  0x00 ; '.'
0000000000000a2f         db  0x00 ; '.'
0000000000000a30         db  0x04 ; '.'
0000000000000a31         db  0x00 ; '.'
0000000000000a32         db  0x00 ; '.'
0000000000000a33         db  0x00 ; '.'
0000000000000a34         db  0x00 ; '.'
0000000000000a35         db  0x00 ; '.'
0000000000000a36         db  0x00 ; '.'
0000000000000a37         db  0x00 ; '.'
0000000000000a38         db  0xc0 ; '.'
0000000000000a39         db  0x01 ; '.'
0000000000000a3a         db  0x00 ; '.'
0000000000000a3b         db  0x00 ; '.'
0000000000000a3c         db  0x11 ; '.'
0000000000000a3d         db  0x00 ; '.'
0000000000000a3e         db  0x19 ; '.'
0000000000000a3f         db  0x00 ; '.'
0000000000000a40         db  0x60 ; '`'
0000000000000a41         db  0xa2 ; '.'
0000000000000a42         db  0x20 ; ' '
0000000000000a43         db  0x00 ; '.'
0000000000000a44         db  0x00 ; '.'
0000000000000a45         db  0x00 ; '.'
0000000000000a46         db  0x00 ; '.'
0000000000000a47         db  0x00 ; '.'
0000000000000a48         db  0x08 ; '.'
0000000000000a49         db  0x00 ; '.'
0000000000000a4a         db  0x00 ; '.'
0000000000000a4b         db  0x00 ; '.'
0000000000000a4c         db  0x00 ; '.'
0000000000000a4d         db  0x00 ; '.'
0000000000000a4e         db  0x00 ; '.'
0000000000000a4f         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0xa50; 0xdc7[ (887 bytes)
        ; File offset : [2640; 3527[ (887 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

0000000000000a50         db  0x00 ; '.'
0000000000000a51         db  0x6c ; 'l'
0000000000000a52         db  0x69 ; 'i'
0000000000000a53         db  0x62 ; 'b'
0000000000000a54         db  0x63 ; 'c'
0000000000000a55         db  0x2e ; '.'
0000000000000a56         db  0x73 ; 's'
0000000000000a57         db  0x6f ; 'o'
0000000000000a58         db  0x2e ; '.'
0000000000000a59         db  0x36 ; '6'
0000000000000a5a         db  0x00 ; '.'
0000000000000a5b         db  0x66 ; 'f'
0000000000000a5c         db  0x66 ; 'f'
0000000000000a5d         db  0x6c ; 'l'
0000000000000a5e         db  0x75 ; 'u'
0000000000000a5f         db  0x73 ; 's'
0000000000000a60         db  0x68 ; 'h'
0000000000000a61         db  0x00 ; '.'
0000000000000a62         db  0x73 ; 's'
0000000000000a63         db  0x74 ; 't'
0000000000000a64         db  0x72 ; 'r'
0000000000000a65         db  0x63 ; 'c'
0000000000000a66         db  0x70 ; 'p'
0000000000000a67         db  0x79 ; 'y'
0000000000000a68         db  0x00 ; '.'
0000000000000a69         db  0x5f ; '_'
0000000000000a6a         db  0x5f ; '_'
0000000000000a6b         db  0x70 ; 'p'
0000000000000a6c         db  0x72 ; 'r'
0000000000000a6d         db  0x69 ; 'i'
0000000000000a6e         db  0x6e ; 'n'
0000000000000a6f         db  0x74 ; 't'
0000000000000a70         db  0x66 ; 'f'
0000000000000a71         db  0x5f ; '_'
0000000000000a72         db  0x63 ; 'c'
0000000000000a73         db  0x68 ; 'h'
0000000000000a74         db  0x6b ; 'k'
0000000000000a75         db  0x00 ; '.'
0000000000000a76         db  0x73 ; 's'
0000000000000a77         db  0x65 ; 'e'
0000000000000a78         db  0x74 ; 't'
0000000000000a79         db  0x6c ; 'l'
0000000000000a7a         db  0x6f ; 'o'
0000000000000a7b         db  0x63 ; 'c'
0000000000000a7c         db  0x61 ; 'a'
0000000000000a7d         db  0x6c ; 'l'
0000000000000a7e         db  0x65 ; 'e'
0000000000000a7f         db  0x00 ; '.'
0000000000000a80         db  0x6d ; 'm'
0000000000000a81         db  0x62 ; 'b'
0000000000000a82         db  0x72 ; 'r'
0000000000000a83         db  0x74 ; 't'
0000000000000a84         db  0x6f ; 'o'
0000000000000a85         db  0x77 ; 'w'
0000000000000a86         db  0x63 ; 'c'
0000000000000a87         db  0x00 ; '.'
0000000000000a88         db  0x73 ; 's'
0000000000000a89         db  0x74 ; 't'
0000000000000a8a         db  0x72 ; 'r'
0000000000000a8b         db  0x6e ; 'n'
0000000000000a8c         db  0x63 ; 'c'
0000000000000a8d         db  0x6d ; 'm'
0000000000000a8e         db  0x70 ; 'p'
0000000000000a8f         db  0x00 ; '.'
0000000000000a90         db  0x6f ; 'o'
0000000000000a91         db  0x70 ; 'p'
0000000000000a92         db  0x74 ; 't'
0000000000000a93         db  0x69 ; 'i'
0000000000000a94         db  0x6e ; 'n'
0000000000000a95         db  0x64 ; 'd'
0000000000000a96         db  0x00 ; '.'
0000000000000a97         db  0x73 ; 's'
0000000000000a98         db  0x74 ; 't'
0000000000000a99         db  0x72 ; 'r'
0000000000000a9a         db  0x72 ; 'r'
0000000000000a9b         db  0x63 ; 'c'
0000000000000a9c         db  0x68 ; 'h'
0000000000000a9d         db  0x72 ; 'r'
0000000000000a9e         db  0x00 ; '.'
0000000000000a9f         db  0x64 ; 'd'
0000000000000aa0         db  0x63 ; 'c'
0000000000000aa1         db  0x67 ; 'g'
0000000000000aa2         db  0x65 ; 'e'
0000000000000aa3         db  0x74 ; 't'
0000000000000aa4         db  0x74 ; 't'
0000000000000aa5         db  0x65 ; 'e'
0000000000000aa6         db  0x78 ; 'x'
0000000000000aa7         db  0x74 ; 't'
0000000000000aa8         db  0x00 ; '.'
0000000000000aa9         db  0x65 ; 'e'
0000000000000aaa         db  0x72 ; 'r'
0000000000000aab         db  0x72 ; 'r'
0000000000000aac         db  0x6f ; 'o'
0000000000000aad         db  0x72 ; 'r'
0000000000000aae         db  0x00 ; '.'
0000000000000aaf         db  0x73 ; 's'
0000000000000ab0         db  0x69 ; 'i'
0000000000000ab1         db  0x67 ; 'g'
0000000000000ab2         db  0x70 ; 'p'
0000000000000ab3         db  0x72 ; 'r'
0000000000000ab4         db  0x6f ; 'o'
0000000000000ab5         db  0x63 ; 'c'
0000000000000ab6         db  0x6d ; 'm'
0000000000000ab7         db  0x61 ; 'a'
0000000000000ab8         db  0x73 ; 's'
0000000000000ab9         db  0x6b ; 'k'
0000000000000aba         db  0x00 ; '.'
0000000000000abb         db  0x73 ; 's'
0000000000000abc         db  0x69 ; 'i'
0000000000000abd         db  0x67 ; 'g'
0000000000000abe         db  0x66 ; 'f'
0000000000000abf         db  0x69 ; 'i'
0000000000000ac0         db  0x6c ; 'l'
0000000000000ac1         db  0x6c ; 'l'
0000000000000ac2         db  0x73 ; 's'
0000000000000ac3         db  0x65 ; 'e'
0000000000000ac4         db  0x74 ; 't'
0000000000000ac5         db  0x00 ; '.'
0000000000000ac6         db  0x5f ; '_'
0000000000000ac7         db  0x5f ; '_'
0000000000000ac8         db  0x73 ; 's'
0000000000000ac9         db  0x74 ; 't'
0000000000000aca         db  0x61 ; 'a'
0000000000000acb         db  0x63 ; 'c'
0000000000000acc         db  0x6b ; 'k'
0000000000000acd         db  0x5f ; '_'
0000000000000ace         db  0x63 ; 'c'
0000000000000acf         db  0x68 ; 'h'
0000000000000ad0         db  0x6b ; 'k'
0000000000000ad1         db  0x5f ; '_'
0000000000000ad2         db  0x66 ; 'f'
0000000000000ad3         db  0x61 ; 'a'
0000000000000ad4         db  0x69 ; 'i'
0000000000000ad5         db  0x6c ; 'l'
0000000000000ad6         db  0x00 ; '.'
0000000000000ad7         db  0x69 ; 'i'
0000000000000ad8         db  0x73 ; 's'
0000000000000ad9         db  0x77 ; 'w'
0000000000000ada         db  0x70 ; 'p'
0000000000000adb         db  0x72 ; 'r'
0000000000000adc         db  0x69 ; 'i'
0000000000000add         db  0x6e ; 'n'
0000000000000ade         db  0x74 ; 't'
0000000000000adf         db  0x00 ; '.'
0000000000000ae0         db  0x72 ; 'r'
0000000000000ae1         db  0x65 ; 'e'
0000000000000ae2         db  0x61 ; 'a'
0000000000000ae3         db  0x6c ; 'l'
0000000000000ae4         db  0x6c ; 'l'
0000000000000ae5         db  0x6f ; 'o'
0000000000000ae6         db  0x63 ; 'c'
0000000000000ae7         db  0x00 ; '.'
0000000000000ae8         db  0x61 ; 'a'
0000000000000ae9         db  0x62 ; 'b'
0000000000000aea         db  0x6f ; 'o'
0000000000000aeb         db  0x72 ; 'r'
0000000000000aec         db  0x74 ; 't'
0000000000000aed         db  0x00 ; '.'
0000000000000aee         db  0x5f ; '_'
0000000000000aef         db  0x65 ; 'e'
0000000000000af0         db  0x78 ; 'x'
0000000000000af1         db  0x69 ; 'i'
0000000000000af2         db  0x74 ; 't'
0000000000000af3         db  0x00 ; '.'
0000000000000af4         db  0x73 ; 's'
0000000000000af5         db  0x74 ; 't'
0000000000000af6         db  0x72 ; 'r'
0000000000000af7         db  0x73 ; 's'
0000000000000af8         db  0x70 ; 'p'
0000000000000af9         db  0x6e ; 'n'
0000000000000afa         db  0x00 ; '.'
0000000000000afb         db  0x70 ; 'p'
0000000000000afc         db  0x72 ; 'r'
0000000000000afd         db  0x6f ; 'o'
0000000000000afe         db  0x67 ; 'g'
0000000000000aff         db  0x72 ; 'r'
                     aAminvocationna:
0000000000000b00         db         "am_invocation_name", 0
0000000000000b13         db  0x5f ; '_'
0000000000000b14         db  0x5f ; '_'
0000000000000b15         db  0x61 ; 'a'
0000000000000b16         db  0x73 ; 's'
0000000000000b17         db  0x73 ; 's'
0000000000000b18         db  0x65 ; 'e'
0000000000000b19         db  0x72 ; 'r'
0000000000000b1a         db  0x74 ; 't'
0000000000000b1b         db  0x5f ; '_'
0000000000000b1c         db  0x66 ; 'f'
0000000000000b1d         db  0x61 ; 'a'
0000000000000b1e         db  0x69 ; 'i'
0000000000000b1f         db  0x6c ; 'l'
0000000000000b20         db  0x00 ; '.'
0000000000000b21         db  0x5f ; '_'
0000000000000b22         db  0x5f ; '_'
0000000000000b23         db  0x63 ; 'c'
0000000000000b24         db  0x74 ; 't'
0000000000000b25         db  0x79 ; 'y'
0000000000000b26         db  0x70 ; 'p'
0000000000000b27         db  0x65 ; 'e'
0000000000000b28         db  0x5f ; '_'
0000000000000b29         db  0x67 ; 'g'
0000000000000b2a         db  0x65 ; 'e'
0000000000000b2b         db  0x74 ; 't'
0000000000000b2c         db  0x5f ; '_'
0000000000000b2d         db  0x6d ; 'm'
0000000000000b2e         db  0x62 ; 'b'
0000000000000b2f         db  0x5f ; '_'
0000000000000b30         db  0x63 ; 'c'
0000000000000b31         db  0x75 ; 'u'
0000000000000b32         db  0x72 ; 'r'
0000000000000b33         db  0x5f ; '_'
0000000000000b34         db  0x6d ; 'm'
0000000000000b35         db  0x61 ; 'a'
0000000000000b36         db  0x78 ; 'x'
0000000000000b37         db  0x00 ; '.'
0000000000000b38         db  0x73 ; 's'
0000000000000b39         db  0x74 ; 't'
0000000000000b3a         db  0x72 ; 'r'
0000000000000b3b         db  0x74 ; 't'
0000000000000b3c         db  0x6f ; 'o'
0000000000000b3d         db  0x6b ; 'k'
0000000000000b3e         db  0x00 ; '.'
0000000000000b3f         db  0x73 ; 's'
0000000000000b40         db  0x74 ; 't'
                     aRtol:
0000000000000b41         db         "rtol", 0
0000000000000b46         db  0x63 ; 'c'
0000000000000b47         db  0x61 ; 'a'
0000000000000b48         db  0x6c ; 'l'
0000000000000b49         db  0x6c ; 'l'
0000000000000b4a         db  0x6f ; 'o'
0000000000000b4b         db  0x63 ; 'c'
0000000000000b4c         db  0x00 ; '.'
0000000000000b4d         db  0x73 ; 's'
0000000000000b4e         db  0x74 ; 't'
0000000000000b4f         db  0x72 ; 'r'
0000000000000b50         db  0x6c ; 'l'
0000000000000b51         db  0x65 ; 'e'
0000000000000b52         db  0x6e ; 'n'
0000000000000b53         db  0x00 ; '.'
0000000000000b54         db  0x73 ; 's'
0000000000000b55         db  0x69 ; 'i'
0000000000000b56         db  0x67 ; 'g'
0000000000000b57         db  0x65 ; 'e'
0000000000000b58         db  0x6d ; 'm'
0000000000000b59         db  0x70 ; 'p'
0000000000000b5a         db  0x74 ; 't'
0000000000000b5b         db  0x79 ; 'y'
0000000000000b5c         db  0x73 ; 's'
0000000000000b5d         db  0x65 ; 'e'
0000000000000b5e         db  0x74 ; 't'
0000000000000b5f         db  0x00 ; '.'
0000000000000b60         db  0x6d ; 'm'
0000000000000b61         db  0x65 ; 'e'
0000000000000b62         db  0x6d ; 'm'
0000000000000b63         db  0x73 ; 's'
0000000000000b64         db  0x65 ; 'e'
0000000000000b65         db  0x74 ; 't'
0000000000000b66         db  0x00 ; '.'
0000000000000b67         db  0x5f ; '_'
0000000000000b68         db  0x5f ; '_'
0000000000000b69         db  0x65 ; 'e'
0000000000000b6a         db  0x72 ; 'r'
0000000000000b6b         db  0x72 ; 'r'
0000000000000b6c         db  0x6e ; 'n'
0000000000000b6d         db  0x6f ; 'o'
0000000000000b6e         db  0x5f ; '_'
0000000000000b6f         db  0x6c ; 'l'
0000000000000b70         db  0x6f ; 'o'
0000000000000b71         db  0x63 ; 'c'
0000000000000b72         db  0x61 ; 'a'
0000000000000b73         db  0x74 ; 't'
0000000000000b74         db  0x69 ; 'i'
0000000000000b75         db  0x6f ; 'o'
0000000000000b76         db  0x6e ; 'n'
0000000000000b77         db  0x00 ; '.'
0000000000000b78         db  0x63 ; 'c'
0000000000000b79         db  0x68 ; 'h'
0000000000000b7a         db  0x64 ; 'd'
0000000000000b7b         db  0x69 ; 'i'
0000000000000b7c         db  0x72 ; 'r'
0000000000000b7d         db  0x00 ; '.'
0000000000000b7e         db  0x6d ; 'm'
0000000000000b7f         db  0x65 ; 'e'
0000000000000b80         db  0x6d ; 'm'
0000000000000b81         db  0x63 ; 'c'
0000000000000b82         db  0x6d ; 'm'
0000000000000b83         db  0x70 ; 'p'
0000000000000b84         db  0x00 ; '.'
0000000000000b85         db  0x75 ; 'u'
0000000000000b86         db  0x6e ; 'n'
0000000000000b87         db  0x73 ; 's'
0000000000000b88         db  0x65 ; 'e'
0000000000000b89         db  0x74 ; 't'
0000000000000b8a         db  0x65 ; 'e'
0000000000000b8b         db  0x6e ; 'n'
0000000000000b8c         db  0x76 ; 'v'
0000000000000b8d         db  0x00 ; '.'
0000000000000b8e         db  0x5f ; '_'
0000000000000b8f         db  0x5f ; '_'
0000000000000b90         db  0x66 ; 'f'
0000000000000b91         db  0x70 ; 'p'
0000000000000b92         db  0x72 ; 'r'
0000000000000b93         db  0x69 ; 'i'
0000000000000b94         db  0x6e ; 'n'
0000000000000b95         db  0x74 ; 't'
0000000000000b96         db  0x66 ; 'f'
0000000000000b97         db  0x5f ; '_'
0000000000000b98         db  0x63 ; 'c'
0000000000000b99         db  0x68 ; 'h'
0000000000000b9a         db  0x6b ; 'k'
0000000000000b9b         db  0x00 ; '.'
0000000000000b9c         db  0x73 ; 's'
0000000000000b9d         db  0x69 ; 'i'
0000000000000b9e         db  0x67 ; 'g'
0000000000000b9f         db  0x61 ; 'a'
0000000000000ba0         db  0x64 ; 'd'
0000000000000ba1         db  0x64 ; 'd'
0000000000000ba2         db  0x73 ; 's'
0000000000000ba3         db  0x65 ; 'e'
0000000000000ba4         db  0x74 ; 't'
0000000000000ba5         db  0x00 ; '.'
0000000000000ba6         db  0x70 ; 'p'
0000000000000ba7         db  0x75 ; 'u'
0000000000000ba8         db  0x74 ; 't'
0000000000000ba9         db  0x65 ; 'e'
0000000000000baa         db  0x6e ; 'n'
0000000000000bab         db  0x76 ; 'v'
0000000000000bac         db  0x00 ; '.'
0000000000000bad         db  0x73 ; 's'
0000000000000bae         db  0x74 ; 't'
0000000000000baf         db  0x64 ; 'd'
0000000000000bb0         db  0x6f ; 'o'
0000000000000bb1         db  0x75 ; 'u'
0000000000000bb2         db  0x74 ; 't'
0000000000000bb3         db  0x00 ; '.'
0000000000000bb4         db  0x6c ; 'l'
0000000000000bb5         db  0x73 ; 's'
0000000000000bb6         db  0x65 ; 'e'
0000000000000bb7         db  0x65 ; 'e'
0000000000000bb8         db  0x6b ; 'k'
0000000000000bb9         db  0x00 ; '.'
0000000000000bba         db  0x6d ; 'm'
0000000000000bbb         db  0x65 ; 'e'
0000000000000bbc         db  0x6d ; 'm'
0000000000000bbd         db  0x63 ; 'c'
0000000000000bbe         db  0x70 ; 'p'
0000000000000bbf         db  0x79 ; 'y'
0000000000000bc0         db  0x00 ; '.'
0000000000000bc1         db  0x66 ; 'f'
0000000000000bc2         db  0x63 ; 'c'
0000000000000bc3         db  0x6c ; 'l'
0000000000000bc4         db  0x6f ; 'o'
0000000000000bc5         db  0x73 ; 's'
0000000000000bc6         db  0x65 ; 'e'
0000000000000bc7         db  0x00 ; '.'
0000000000000bc8         db  0x6d ; 'm'
0000000000000bc9         db  0x61 ; 'a'
0000000000000bca         db  0x6c ; 'l'
0000000000000bcb         db  0x6c ; 'l'
0000000000000bcc         db  0x6f ; 'o'
0000000000000bcd         db  0x63 ; 'c'
0000000000000bce         db  0x00 ; '.'
0000000000000bcf         db  0x6d ; 'm'
0000000000000bd0         db  0x62 ; 'b'
0000000000000bd1         db  0x73 ; 's'
0000000000000bd2         db  0x69 ; 'i'
0000000000000bd3         db  0x6e ; 'n'
0000000000000bd4         db  0x69 ; 'i'
0000000000000bd5         db  0x74 ; 't'
0000000000000bd6         db  0x00 ; '.'
0000000000000bd7         db  0x6e ; 'n'
0000000000000bd8         db  0x6c ; 'l'
0000000000000bd9         db  0x5f ; '_'
0000000000000bda         db  0x6c ; 'l'
0000000000000bdb         db  0x61 ; 'a'
0000000000000bdc         db  0x6e ; 'n'
0000000000000bdd         db  0x67 ; 'g'
0000000000000bde         db  0x69 ; 'i'
0000000000000bdf         db  0x6e ; 'n'
0000000000000be0         db  0x66 ; 'f'
0000000000000be1         db  0x6f ; 'o'
0000000000000be2         db  0x00 ; '.'
0000000000000be3         db  0x5f ; '_'
0000000000000be4         db  0x5f ; '_'
0000000000000be5         db  0x6c ; 'l'
0000000000000be6         db  0x69 ; 'i'
0000000000000be7         db  0x62 ; 'b'
0000000000000be8         db  0x63 ; 'c'
0000000000000be9         db  0x5f ; '_'
0000000000000bea         db  0x63 ; 'c'
0000000000000beb         db  0x75 ; 'u'
0000000000000bec         db  0x72 ; 'r'
0000000000000bed         db  0x72 ; 'r'
0000000000000bee         db  0x65 ; 'e'
0000000000000bef         db  0x6e ; 'n'
0000000000000bf0         db  0x74 ; 't'
0000000000000bf1         db  0x5f ; '_'
0000000000000bf2         db  0x73 ; 's'
0000000000000bf3         db  0x69 ; 'i'
0000000000000bf4         db  0x67 ; 'g'
0000000000000bf5         db  0x72 ; 'r'
0000000000000bf6         db  0x74 ; 't'
0000000000000bf7         db  0x6d ; 'm'
0000000000000bf8         db  0x61 ; 'a'
0000000000000bf9         db  0x78 ; 'x'
0000000000000bfa         db  0x00 ; '.'
0000000000000bfb         db  0x5f ; '_'
0000000000000bfc         db  0x5f ; '_'
0000000000000bfd         db  0x63 ; 'c'
0000000000000bfe         db  0x74 ; 't'
0000000000000bff         db  0x79 ; 'y'
                     aPebloc:
0000000000000c00         db         "pe_b_loc", 0
0000000000000c09         db  0x67 ; 'g'
0000000000000c0a         db  0x65 ; 'e'
0000000000000c0b         db  0x74 ; 't'
0000000000000c0c         db  0x65 ; 'e'
0000000000000c0d         db  0x6e ; 'n'
0000000000000c0e         db  0x76 ; 'v'
0000000000000c0f         db  0x00 ; '.'
0000000000000c10         db  0x6f ; 'o'
0000000000000c11         db  0x70 ; 'p'
0000000000000c12         db  0x74 ; 't'
0000000000000c13         db  0x61 ; 'a'
0000000000000c14         db  0x72 ; 'r'
0000000000000c15         db  0x67 ; 'g'
0000000000000c16         db  0x00 ; '.'
0000000000000c17         db  0x5f ; '_'
0000000000000c18         db  0x5f ; '_'
0000000000000c19         db  0x66 ; 'f'
0000000000000c1a         db  0x72 ; 'r'
0000000000000c1b         db  0x65 ; 'e'
0000000000000c1c         db  0x61 ; 'a'
0000000000000c1d         db  0x64 ; 'd'
0000000000000c1e         db  0x69 ; 'i'
0000000000000c1f         db  0x6e ; 'n'
0000000000000c20         db  0x67 ; 'g'
0000000000000c21         db  0x00 ; '.'
0000000000000c22         db  0x73 ; 's'
0000000000000c23         db  0x74 ; 't'
0000000000000c24         db  0x64 ; 'd'
0000000000000c25         db  0x65 ; 'e'
0000000000000c26         db  0x72 ; 'r'
0000000000000c27         db  0x72 ; 'r'
0000000000000c28         db  0x00 ; '.'
0000000000000c29         db  0x73 ; 's'
0000000000000c2a         db  0x69 ; 'i'
0000000000000c2b         db  0x67 ; 'g'
0000000000000c2c         db  0x64 ; 'd'
0000000000000c2d         db  0x65 ; 'e'
0000000000000c2e         db  0x6c ; 'l'
0000000000000c2f         db  0x73 ; 's'
0000000000000c30         db  0x65 ; 'e'
0000000000000c31         db  0x74 ; 't'
0000000000000c32         db  0x00 ; '.'
0000000000000c33         db  0x67 ; 'g'
0000000000000c34         db  0x65 ; 'e'
0000000000000c35         db  0x74 ; 't'
0000000000000c36         db  0x6f ; 'o'
0000000000000c37         db  0x70 ; 'p'
0000000000000c38         db  0x74 ; 't'
0000000000000c39         db  0x5f ; '_'
0000000000000c3a         db  0x6c ; 'l'
0000000000000c3b         db  0x6f ; 'o'
0000000000000c3c         db  0x6e ; 'n'
0000000000000c3d         db  0x67 ; 'g'
0000000000000c3e         db  0x00 ; '.'
0000000000000c3f         db  0x65 ; 'e'
0000000000000c40         db  0x78 ; 'x'
0000000000000c41         db  0x65 ; 'e'
0000000000000c42         db  0x63 ; 'c'
0000000000000c43         db  0x76 ; 'v'
0000000000000c44         db  0x70 ; 'p'
0000000000000c45         db  0x00 ; '.'
0000000000000c46         db  0x66 ; 'f'
0000000000000c47         db  0x69 ; 'i'
0000000000000c48         db  0x6c ; 'l'
0000000000000c49         db  0x65 ; 'e'
0000000000000c4a         db  0x6e ; 'n'
0000000000000c4b         db  0x6f ; 'o'
0000000000000c4c         db  0x00 ; '.'
0000000000000c4d         db  0x66 ; 'f'
0000000000000c4e         db  0x77 ; 'w'
0000000000000c4f         db  0x72 ; 'r'
0000000000000c50         db  0x69 ; 'i'
0000000000000c51         db  0x74 ; 't'
0000000000000c52         db  0x65 ; 'e'
0000000000000c53         db  0x00 ; '.'
0000000000000c54         db  0x73 ; 's'
0000000000000c55         db  0x69 ; 'i'
0000000000000c56         db  0x67 ; 'g'
0000000000000c57         db  0x61 ; 'a'
0000000000000c58         db  0x63 ; 'c'
0000000000000c59         db  0x74 ; 't'
0000000000000c5a         db  0x69 ; 'i'
0000000000000c5b         db  0x6f ; 'o'
0000000000000c5c         db  0x6e ; 'n'
0000000000000c5d         db  0x00 ; '.'
0000000000000c5e         db  0x73 ; 's'
0000000000000c5f         db  0x69 ; 'i'
0000000000000c60         db  0x67 ; 'g'
0000000000000c61         db  0x69 ; 'i'
0000000000000c62         db  0x73 ; 's'
0000000000000c63         db  0x6d ; 'm'
0000000000000c64         db  0x65 ; 'e'
0000000000000c65         db  0x6d ; 'm'
0000000000000c66         db  0x62 ; 'b'
0000000000000c67         db  0x65 ; 'e'
0000000000000c68         db  0x72 ; 'r'
0000000000000c69         db  0x00 ; '.'
0000000000000c6a         db  0x5f ; '_'
0000000000000c6b         db  0x5f ; '_'
0000000000000c6c         db  0x66 ; 'f'
0000000000000c6d         db  0x70 ; 'p'
0000000000000c6e         db  0x65 ; 'e'
0000000000000c6f         db  0x6e ; 'n'
0000000000000c70         db  0x64 ; 'd'
0000000000000c71         db  0x69 ; 'i'
0000000000000c72         db  0x6e ; 'n'
0000000000000c73         db  0x67 ; 'g'
0000000000000c74         db  0x00 ; '.'
0000000000000c75         db  0x73 ; 's'
0000000000000c76         db  0x74 ; 't'
0000000000000c77         db  0x72 ; 'r'
0000000000000c78         db  0x63 ; 'c'
0000000000000c79         db  0x68 ; 'h'
0000000000000c7a         db  0x72 ; 'r'
0000000000000c7b         db  0x00 ; '.'
0000000000000c7c         db  0x70 ; 'p'
0000000000000c7d         db  0x72 ; 'r'
0000000000000c7e         db  0x6f ; 'o'
0000000000000c7f         db  0x67 ; 'g'
0000000000000c80         db  0x72 ; 'r'
0000000000000c81         db  0x61 ; 'a'
0000000000000c82         db  0x6d ; 'm'
0000000000000c83         db  0x5f ; '_'
0000000000000c84         db  0x69 ; 'i'
0000000000000c85         db  0x6e ; 'n'
0000000000000c86         db  0x76 ; 'v'
0000000000000c87         db  0x6f ; 'o'
0000000000000c88         db  0x63 ; 'c'
0000000000000c89         db  0x61 ; 'a'
0000000000000c8a         db  0x74 ; 't'
0000000000000c8b         db  0x69 ; 'i'
0000000000000c8c         db  0x6f ; 'o'
0000000000000c8d         db  0x6e ; 'n'
0000000000000c8e         db  0x5f ; '_'
0000000000000c8f         db  0x73 ; 's'
0000000000000c90         db  0x68 ; 'h'
0000000000000c91         db  0x6f ; 'o'
0000000000000c92         db  0x72 ; 'r'
0000000000000c93         db  0x74 ; 't'
0000000000000c94         db  0x5f ; '_'
0000000000000c95         db  0x6e ; 'n'
0000000000000c96         db  0x61 ; 'a'
0000000000000c97         db  0x6d ; 'm'
0000000000000c98         db  0x65 ; 'e'
0000000000000c99         db  0x00 ; '.'
0000000000000c9a         db  0x5f ; '_'
0000000000000c9b         db  0x5f ; '_'
0000000000000c9c         db  0x63 ; 'c'
0000000000000c9d         db  0x78 ; 'x'
0000000000000c9e         db  0x61 ; 'a'
0000000000000c9f         db  0x5f ; '_'
0000000000000ca0         db  0x66 ; 'f'
0000000000000ca1         db  0x69 ; 'i'
0000000000000ca2         db  0x6e ; 'n'
0000000000000ca3         db  0x61 ; 'a'
0000000000000ca4         db  0x6c ; 'l'
0000000000000ca5         db  0x69 ; 'i'
0000000000000ca6         db  0x7a ; 'z'
0000000000000ca7         db  0x65 ; 'e'
0000000000000ca8         db  0x00 ; '.'
0000000000000ca9         db  0x5f ; '_'
0000000000000caa         db  0x5f ; '_'
0000000000000cab         db  0x6c ; 'l'
0000000000000cac         db  0x69 ; 'i'
0000000000000cad         db  0x62 ; 'b'
0000000000000cae         db  0x63 ; 'c'
0000000000000caf         db  0x5f ; '_'
0000000000000cb0         db  0x63 ; 'c'
0000000000000cb1         db  0x75 ; 'u'
0000000000000cb2         db  0x72 ; 'r'
0000000000000cb3         db  0x72 ; 'r'
0000000000000cb4         db  0x65 ; 'e'
0000000000000cb5         db  0x6e ; 'n'
0000000000000cb6         db  0x74 ; 't'
0000000000000cb7         db  0x5f ; '_'
0000000000000cb8         db  0x73 ; 's'
0000000000000cb9         db  0x69 ; 'i'
0000000000000cba         db  0x67 ; 'g'
0000000000000cbb         db  0x72 ; 'r'
0000000000000cbc         db  0x74 ; 't'
0000000000000cbd         db  0x6d ; 'm'
0000000000000cbe         db  0x69 ; 'i'
0000000000000cbf         db  0x6e ; 'n'
0000000000000cc0         db  0x00 ; '.'
0000000000000cc1         db  0x5f ; '_'
0000000000000cc2         db  0x5f ; '_'
0000000000000cc3         db  0x73 ; 's'
0000000000000cc4         db  0x70 ; 'p'
0000000000000cc5         db  0x72 ; 'r'
0000000000000cc6         db  0x69 ; 'i'
0000000000000cc7         db  0x6e ; 'n'
0000000000000cc8         db  0x74 ; 't'
0000000000000cc9         db  0x66 ; 'f'
0000000000000cca         db  0x5f ; '_'
0000000000000ccb         db  0x63 ; 'c'
0000000000000ccc         db  0x68 ; 'h'
0000000000000ccd         db  0x6b ; 'k'
0000000000000cce         db  0x00 ; '.'
0000000000000ccf         db  0x62 ; 'b'
0000000000000cd0         db  0x69 ; 'i'
0000000000000cd1         db  0x6e ; 'n'
0000000000000cd2         db  0x64 ; 'd'
0000000000000cd3         db  0x74 ; 't'
0000000000000cd4         db  0x65 ; 'e'
0000000000000cd5         db  0x78 ; 'x'
0000000000000cd6         db  0x74 ; 't'
0000000000000cd7         db  0x64 ; 'd'
0000000000000cd8         db  0x6f ; 'o'
0000000000000cd9         db  0x6d ; 'm'
0000000000000cda         db  0x61 ; 'a'
0000000000000cdb         db  0x69 ; 'i'
0000000000000cdc         db  0x6e ; 'n'
0000000000000cdd         db  0x00 ; '.'
0000000000000cde         db  0x73 ; 's'
0000000000000cdf         db  0x74 ; 't'
0000000000000ce0         db  0x72 ; 'r'
0000000000000ce1         db  0x63 ; 'c'
0000000000000ce2         db  0x6d ; 'm'
0000000000000ce3         db  0x70 ; 'p'
0000000000000ce4         db  0x00 ; '.'
0000000000000ce5         db  0x5f ; '_'
0000000000000ce6         db  0x5f ; '_'
0000000000000ce7         db  0x6c ; 'l'
0000000000000ce8         db  0x69 ; 'i'
0000000000000ce9         db  0x62 ; 'b'
0000000000000cea         db  0x63 ; 'c'
0000000000000ceb         db  0x5f ; '_'
0000000000000cec         db  0x73 ; 's'
0000000000000ced         db  0x74 ; 't'
0000000000000cee         db  0x61 ; 'a'
0000000000000cef         db  0x72 ; 'r'
0000000000000cf0         db  0x74 ; 't'
0000000000000cf1         db  0x5f ; '_'
0000000000000cf2         db  0x6d ; 'm'
0000000000000cf3         db  0x61 ; 'a'
0000000000000cf4         db  0x69 ; 'i'
0000000000000cf5         db  0x6e ; 'n'
0000000000000cf6         db  0x00 ; '.'
0000000000000cf7         db  0x73 ; 's'
0000000000000cf8         db  0x74 ; 't'
0000000000000cf9         db  0x70 ; 'p'
0000000000000cfa         db  0x63 ; 'c'
0000000000000cfb         db  0x70 ; 'p'
0000000000000cfc         db  0x79 ; 'y'
0000000000000cfd         db  0x00 ; '.'
0000000000000cfe         db  0x66 ; 'f'
0000000000000cff         db  0x73 ; 's'
                     aEeko:
0000000000000d00         db         "eeko", 0
0000000000000d05         db  0x66 ; 'f'
0000000000000d06         db  0x70 ; 'p'
0000000000000d07         db  0x75 ; 'u'
0000000000000d08         db  0x74 ; 't'
0000000000000d09         db  0x73 ; 's'
0000000000000d0a         db  0x5f ; '_'
0000000000000d0b         db  0x75 ; 'u'
0000000000000d0c         db  0x6e ; 'n'
0000000000000d0d         db  0x6c ; 'l'
0000000000000d0e         db  0x6f ; 'o'
0000000000000d0f         db  0x63 ; 'c'
0000000000000d10         db  0x6b ; 'k'
0000000000000d11         db  0x65 ; 'e'
0000000000000d12         db  0x64 ; 'd'
0000000000000d13         db  0x00 ; '.'
0000000000000d14         db  0x66 ; 'f'
0000000000000d15         db  0x72 ; 'r'
0000000000000d16         db  0x65 ; 'e'
0000000000000d17         db  0x65 ; 'e'
0000000000000d18         db  0x00 ; '.'
0000000000000d19         db  0x5f ; '_'
0000000000000d1a         db  0x5f ; '_'
0000000000000d1b         db  0x70 ; 'p'
0000000000000d1c         db  0x72 ; 'r'
0000000000000d1d         db  0x6f ; 'o'
0000000000000d1e         db  0x67 ; 'g'
0000000000000d1f         db  0x6e ; 'n'
0000000000000d20         db  0x61 ; 'a'
0000000000000d21         db  0x6d ; 'm'
0000000000000d22         db  0x65 ; 'e'
0000000000000d23         db  0x00 ; '.'
0000000000000d24         db  0x5f ; '_'
0000000000000d25         db  0x5f ; '_'
0000000000000d26         db  0x65 ; 'e'
0000000000000d27         db  0x6e ; 'n'
0000000000000d28         db  0x76 ; 'v'
0000000000000d29         db  0x69 ; 'i'
0000000000000d2a         db  0x72 ; 'r'
0000000000000d2b         db  0x6f ; 'o'
0000000000000d2c         db  0x6e ; 'n'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x5f ; '_'
0000000000000d2f         db  0x5f ; '_'
0000000000000d30         db  0x70 ; 'p'
0000000000000d31         db  0x72 ; 'r'
0000000000000d32         db  0x6f ; 'o'
0000000000000d33         db  0x67 ; 'g'
0000000000000d34         db  0x6e ; 'n'
0000000000000d35         db  0x61 ; 'a'
0000000000000d36         db  0x6d ; 'm'
0000000000000d37         db  0x65 ; 'e'
0000000000000d38         db  0x5f ; '_'
0000000000000d39         db  0x66 ; 'f'
0000000000000d3a         db  0x75 ; 'u'
0000000000000d3b         db  0x6c ; 'l'
0000000000000d3c         db  0x6c ; 'l'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x5f ; '_'
0000000000000d3f         db  0x5f ; '_'
0000000000000d40         db  0x63 ; 'c'
0000000000000d41         db  0x78 ; 'x'
0000000000000d42         db  0x61 ; 'a'
0000000000000d43         db  0x5f ; '_'
0000000000000d44         db  0x61 ; 'a'
0000000000000d45         db  0x74 ; 't'
0000000000000d46         db  0x65 ; 'e'
0000000000000d47         db  0x78 ; 'x'
0000000000000d48         db  0x69 ; 'i'
0000000000000d49         db  0x74 ; 't'
0000000000000d4a         db  0x00 ; '.'
0000000000000d4b         db  0x47 ; 'G'
0000000000000d4c         db  0x4c ; 'L'
0000000000000d4d         db  0x49 ; 'I'
0000000000000d4e         db  0x42 ; 'B'
0000000000000d4f         db  0x43 ; 'C'
0000000000000d50         db  0x5f ; '_'
0000000000000d51         db  0x32 ; '2'
0000000000000d52         db  0x2e ; '.'
0000000000000d53         db  0x33 ; '3'
0000000000000d54         db  0x00 ; '.'
0000000000000d55         db  0x47 ; 'G'
0000000000000d56         db  0x4c ; 'L'
0000000000000d57         db  0x49 ; 'I'
0000000000000d58         db  0x42 ; 'B'
0000000000000d59         db  0x43 ; 'C'
0000000000000d5a         db  0x5f ; '_'
0000000000000d5b         db  0x32 ; '2'
0000000000000d5c         db  0x2e ; '.'
0000000000000d5d         db  0x33 ; '3'
0000000000000d5e         db  0x2e ; '.'
0000000000000d5f         db  0x34 ; '4'
0000000000000d60         db  0x00 ; '.'
0000000000000d61         db  0x47 ; 'G'
0000000000000d62         db  0x4c ; 'L'
0000000000000d63         db  0x49 ; 'I'
0000000000000d64         db  0x42 ; 'B'
0000000000000d65         db  0x43 ; 'C'
0000000000000d66         db  0x5f ; '_'
0000000000000d67         db  0x32 ; '2'
0000000000000d68         db  0x2e ; '.'
0000000000000d69         db  0x31 ; '1'
0000000000000d6a         db  0x34 ; '4'
0000000000000d6b         db  0x00 ; '.'
0000000000000d6c         db  0x47 ; 'G'
0000000000000d6d         db  0x4c ; 'L'
0000000000000d6e         db  0x49 ; 'I'
0000000000000d6f         db  0x42 ; 'B'
0000000000000d70         db  0x43 ; 'C'
0000000000000d71         db  0x5f ; '_'
0000000000000d72         db  0x32 ; '2'
0000000000000d73         db  0x2e ; '.'
0000000000000d74         db  0x34 ; '4'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x47 ; 'G'
0000000000000d77         db  0x4c ; 'L'
0000000000000d78         db  0x49 ; 'I'
0000000000000d79         db  0x42 ; 'B'
0000000000000d7a         db  0x43 ; 'C'
0000000000000d7b         db  0x5f ; '_'
0000000000000d7c         db  0x32 ; '2'
0000000000000d7d         db  0x2e ; '.'
0000000000000d7e         db  0x32 ; '2'
0000000000000d7f         db  0x2e ; '.'
0000000000000d80         db  0x35 ; '5'
0000000000000d81         db  0x00 ; '.'
0000000000000d82         db  0x5f ; '_'
0000000000000d83         db  0x49 ; 'I'
0000000000000d84         db  0x54 ; 'T'
0000000000000d85         db  0x4d ; 'M'
0000000000000d86         db  0x5f ; '_'
0000000000000d87         db  0x64 ; 'd'
0000000000000d88         db  0x65 ; 'e'
0000000000000d89         db  0x72 ; 'r'
0000000000000d8a         db  0x65 ; 'e'
0000000000000d8b         db  0x67 ; 'g'
0000000000000d8c         db  0x69 ; 'i'
0000000000000d8d         db  0x73 ; 's'
0000000000000d8e         db  0x74 ; 't'
0000000000000d8f         db  0x65 ; 'e'
0000000000000d90         db  0x72 ; 'r'
0000000000000d91         db  0x54 ; 'T'
0000000000000d92         db  0x4d ; 'M'
0000000000000d93         db  0x43 ; 'C'
0000000000000d94         db  0x6c ; 'l'
0000000000000d95         db  0x6f ; 'o'
0000000000000d96         db  0x6e ; 'n'
0000000000000d97         db  0x65 ; 'e'
0000000000000d98         db  0x54 ; 'T'
0000000000000d99         db  0x61 ; 'a'
0000000000000d9a         db  0x62 ; 'b'
0000000000000d9b         db  0x6c ; 'l'
0000000000000d9c         db  0x65 ; 'e'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x5f ; '_'
0000000000000d9f         db  0x5f ; '_'
0000000000000da0         db  0x67 ; 'g'
0000000000000da1         db  0x6d ; 'm'
0000000000000da2         db  0x6f ; 'o'
0000000000000da3         db  0x6e ; 'n'
0000000000000da4         db  0x5f ; '_'
0000000000000da5         db  0x73 ; 's'
0000000000000da6         db  0x74 ; 't'
0000000000000da7         db  0x61 ; 'a'
0000000000000da8         db  0x72 ; 'r'
0000000000000da9         db  0x74 ; 't'
0000000000000daa         db  0x5f ; '_'
0000000000000dab         db  0x5f ; '_'
0000000000000dac         db  0x00 ; '.'
0000000000000dad         db  0x5f ; '_'
0000000000000dae         db  0x49 ; 'I'
0000000000000daf         db  0x54 ; 'T'
0000000000000db0         db  0x4d ; 'M'
0000000000000db1         db  0x5f ; '_'
0000000000000db2         db  0x72 ; 'r'
0000000000000db3         db  0x65 ; 'e'
0000000000000db4         db  0x67 ; 'g'
0000000000000db5         db  0x69 ; 'i'
0000000000000db6         db  0x73 ; 's'
0000000000000db7         db  0x74 ; 't'
0000000000000db8         db  0x65 ; 'e'
0000000000000db9         db  0x72 ; 'r'
0000000000000dba         db  0x54 ; 'T'
0000000000000dbb         db  0x4d ; 'M'
0000000000000dbc         db  0x43 ; 'C'
0000000000000dbd         db  0x6c ; 'l'
0000000000000dbe         db  0x6f ; 'o'
0000000000000dbf         db  0x6e ; 'n'
0000000000000dc0         db  0x65 ; 'e'
0000000000000dc1         db  0x54 ; 'T'
0000000000000dc2         db  0x61 ; 'a'
0000000000000dc3         db  0x62 ; 'b'
0000000000000dc4         db  0x6c ; 'l'
0000000000000dc5         db  0x65 ; 'e'
0000000000000dc6         db  0x00 ; '.'
0000000000000dc7         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xdc8; 0xe66[ (158 bytes)
        ; File offset : [3528; 3686[ (158 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000dc8         db  0x00 ; '.'
0000000000000dc9         db  0x00 ; '.'
0000000000000dca         db  0x02 ; '.'
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x02 ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x02 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0x02 ; '.'
0000000000000dd1         db  0x00 ; '.'
0000000000000dd2         db  0x02 ; '.'
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x02 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x00 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0x02 ; '.'
0000000000000dd9         db  0x00 ; '.'
0000000000000dda         db  0x02 ; '.'
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x02 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x02 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0x02 ; '.'
0000000000000de1         db  0x00 ; '.'
0000000000000de2         db  0x02 ; '.'
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x02 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x02 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0x02 ; '.'
0000000000000de9         db  0x00 ; '.'
0000000000000dea         db  0x02 ; '.'
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x02 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x02 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0x03 ; '.'
0000000000000df1         db  0x00 ; '.'
0000000000000df2         db  0x02 ; '.'
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x02 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x02 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0x02 ; '.'
0000000000000df9         db  0x00 ; '.'
0000000000000dfa         db  0x02 ; '.'
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x02 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x02 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0x02 ; '.'
0000000000000e01         db  0x00 ; '.'
0000000000000e02         db  0x02 ; '.'
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x02 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x02 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0x02 ; '.'
0000000000000e09         db  0x00 ; '.'
0000000000000e0a         db  0x02 ; '.'
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x02 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x02 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0x00 ; '.'
0000000000000e11         db  0x00 ; '.'
0000000000000e12         db  0x02 ; '.'
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x02 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x04 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0x02 ; '.'
0000000000000e19         db  0x00 ; '.'
0000000000000e1a         db  0x02 ; '.'
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x02 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x02 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0x02 ; '.'
0000000000000e21         db  0x00 ; '.'
0000000000000e22         db  0x02 ; '.'
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x02 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x05 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0x02 ; '.'
0000000000000e29         db  0x00 ; '.'
0000000000000e2a         db  0x02 ; '.'
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x02 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x02 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0x02 ; '.'
0000000000000e31         db  0x00 ; '.'
0000000000000e32         db  0x02 ; '.'
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x02 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x02 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0x02 ; '.'
0000000000000e39         db  0x00 ; '.'
0000000000000e3a         db  0x02 ; '.'
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x02 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x05 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0x02 ; '.'
0000000000000e41         db  0x00 ; '.'
0000000000000e42         db  0x00 ; '.'
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x02 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x02 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0x02 ; '.'
0000000000000e49         db  0x00 ; '.'
0000000000000e4a         db  0x02 ; '.'
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x06 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x05 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0x02 ; '.'
0000000000000e51         db  0x00 ; '.'
0000000000000e52         db  0x02 ; '.'
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x02 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x02 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0x02 ; '.'
0000000000000e59         db  0x00 ; '.'
0000000000000e5a         db  0x02 ; '.'
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x02 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x02 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0x02 ; '.'
0000000000000e61         db  0x00 ; '.'
0000000000000e62         db  0x02 ; '.'
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x02 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xe68; 0xec8[ (96 bytes)
        ; File offset : [3688; 3784[ (96 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000e68         db  0x01 ; '.'
0000000000000e69         db  0x00 ; '.'
0000000000000e6a         db  0x05 ; '.'
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x01 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x00 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0x10 ; '.'
0000000000000e71         db  0x00 ; '.'
0000000000000e72         db  0x00 ; '.'
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x00 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0x13 ; '.'
0000000000000e79         db  0x69 ; 'i'
0000000000000e7a         db  0x69 ; 'i'
0000000000000e7b         db  0x0d ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x06 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0xfb ; '.'
0000000000000e81         db  0x02 ; '.'
0000000000000e82         db  0x00 ; '.'
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x10 ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0x74 ; 't'
0000000000000e89         db  0x19 ; '.'
0000000000000e8a         db  0x69 ; 'i'
0000000000000e8b         db  0x09 ; '.'
0000000000000e8c         db  0x00 ; '.'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x05 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0x05 ; '.'
0000000000000e91         db  0x03 ; '.'
0000000000000e92         db  0x00 ; '.'
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x10 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'
0000000000000e98         db  0x94 ; '.'
0000000000000e99         db  0x91 ; '.'
0000000000000e9a         db  0x96 ; '.'
0000000000000e9b         db  0x06 ; '.'
0000000000000e9c         db  0x00 ; '.'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x04 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0x11 ; '.'
0000000000000ea1         db  0x03 ; '.'
0000000000000ea2         db  0x00 ; '.'
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x10 ; '.'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0x14 ; '.'
0000000000000ea9         db  0x69 ; 'i'
0000000000000eaa         db  0x69 ; 'i'
0000000000000eab         db  0x0d ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x03 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0x1c ; '.'
0000000000000eb1         db  0x03 ; '.'
0000000000000eb2         db  0x00 ; '.'
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x10 ; '.'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0x75 ; 'u'
0000000000000eb9         db  0x1a ; '.'
0000000000000eba         db  0x69 ; 'i'
0000000000000ebb         db  0x09 ; '.'
0000000000000ebc         db  0x00 ; '.'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x02 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0x26 ; '&'
0000000000000ec1         db  0x03 ; '.'
0000000000000ec2         db  0x00 ; '.'
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x00 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xec8; 0x1288[ (960 bytes)
        ; File offset : [3784; 4744[ (960 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000ec8         db  0xd0 ; '.'
0000000000000ec9         db  0x99 ; '.'
0000000000000eca         db  0x20 ; ' '
0000000000000ecb         db  0x00 ; '.'
0000000000000ecc         db  0x00 ; '.'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0x08 ; '.'
0000000000000ed1         db  0x00 ; '.'
0000000000000ed2         db  0x00 ; '.'
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x00 ; '.'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0xe0 ; '.'
0000000000000ed9         db  0x31 ; '1'
0000000000000eda         db  0x00 ; '.'
0000000000000edb         db  0x00 ; '.'
0000000000000edc         db  0x00 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0xd8 ; '.'
0000000000000ee1         db  0x99 ; '.'
0000000000000ee2         db  0x20 ; ' '
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x00 ; '.'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0x08 ; '.'
0000000000000ee9         db  0x00 ; '.'
0000000000000eea         db  0x00 ; '.'
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x00 ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x00 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0xa0 ; '.'
0000000000000ef1         db  0x31 ; '1'
0000000000000ef2         db  0x00 ; '.'
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0xe0 ; '.'
0000000000000ef9         db  0x99 ; '.'
0000000000000efa         db  0x20 ; ' '
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x00 ; '.'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0x08 ; '.'
0000000000000f01         db  0x00 ; '.'
0000000000000f02         db  0x00 ; '.'
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x00 ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0xf7 ; '.'
0000000000000f09         db  0x6d ; 'm'
0000000000000f0a         db  0x00 ; '.'
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x00 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0x00 ; '.'
0000000000000f11         db  0x9a ; '.'
0000000000000f12         db  0x20 ; ' '
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x00 ; '.'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0x08 ; '.'
0000000000000f19         db  0x00 ; '.'
0000000000000f1a         db  0x00 ; '.'
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x00 ; '.'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0x0a ; '.'
0000000000000f21         db  0x6e ; 'n'
0000000000000f22         db  0x00 ; '.'
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x00 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0x20 ; ' '
0000000000000f29         db  0x9a ; '.'
0000000000000f2a         db  0x20 ; ' '
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x00 ; '.'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0x08 ; '.'
0000000000000f31         db  0x00 ; '.'
0000000000000f32         db  0x00 ; '.'
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x00 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0x0f ; '.'
0000000000000f39         db  0x6e ; 'n'
0000000000000f3a         db  0x00 ; '.'
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x00 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0x40 ; '@'
0000000000000f41         db  0x9a ; '.'
0000000000000f42         db  0x20 ; ' '
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x00 ; '.'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0x08 ; '.'
0000000000000f49         db  0x00 ; '.'
0000000000000f4a         db  0x00 ; '.'
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x00 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0x15 ; '.'
0000000000000f51         db  0x6e ; 'n'
0000000000000f52         db  0x00 ; '.'
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0x60 ; '`'
0000000000000f59         db  0x9a ; '.'
0000000000000f5a         db  0x20 ; ' '
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x00 ; '.'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0x08 ; '.'
0000000000000f61         db  0x00 ; '.'
0000000000000f62         db  0x00 ; '.'
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x00 ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0x1b ; '.'
0000000000000f69         db  0x6e ; 'n'
0000000000000f6a         db  0x00 ; '.'
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0x80 ; '.'
0000000000000f71         db  0x9a ; '.'
0000000000000f72         db  0x20 ; ' '
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x00 ; '.'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0x08 ; '.'
0000000000000f79         db  0x00 ; '.'
0000000000000f7a         db  0x00 ; '.'
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x00 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0x2a ; '*'
0000000000000f81         db  0x6e ; 'n'
0000000000000f82         db  0x00 ; '.'
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x00 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0xa0 ; '.'
0000000000000f89         db  0x9a ; '.'
0000000000000f8a         db  0x20 ; ' '
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x00 ; '.'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0x08 ; '.'
0000000000000f91         db  0x00 ; '.'
0000000000000f92         db  0x00 ; '.'
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x00 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0x38 ; '8'
0000000000000f99         db  0x6e ; 'n'
0000000000000f9a         db  0x00 ; '.'
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'
0000000000000fa0         db  0xc0 ; '.'
0000000000000fa1         db  0x9a ; '.'
0000000000000fa2         db  0x20 ; ' '
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x00 ; '.'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0x08 ; '.'
0000000000000fa9         db  0x00 ; '.'
0000000000000faa         db  0x00 ; '.'
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x00 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0x45 ; 'E'
0000000000000fb1         db  0x6e ; 'n'
0000000000000fb2         db  0x00 ; '.'
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x00 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0xe0 ; '.'
0000000000000fb9         db  0x9a ; '.'
0000000000000fba         db  0x20 ; ' '
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x00 ; '.'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0x08 ; '.'
0000000000000fc1         db  0x00 ; '.'
0000000000000fc2         db  0x00 ; '.'
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x00 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0x5a ; 'Z'
0000000000000fc9         db  0x6e ; 'n'
0000000000000fca         db  0x00 ; '.'
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0x00 ; '.'
0000000000000fd1         db  0x9b ; '.'
0000000000000fd2         db  0x20 ; ' '
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x00 ; '.'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x08 ; '.'
0000000000000fd9         db  0x00 ; '.'
0000000000000fda         db  0x00 ; '.'
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x00 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0x60 ; '`'
0000000000000fe1         db  0x6e ; 'n'
0000000000000fe2         db  0x00 ; '.'
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x00 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0x20 ; ' '
0000000000000fe9         db  0x9b ; '.'
0000000000000fea         db  0x20 ; ' '
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x00 ; '.'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x08 ; '.'
0000000000000ff1         db  0x00 ; '.'
0000000000000ff2         db  0x00 ; '.'
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x00 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0x6d ; 'm'
0000000000000ff9         db  0x6e ; 'n'
0000000000000ffa         db  0x00 ; '.'
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'
0000000000001000         db  0x40 ; '@'
0000000000001001         db  0x9b ; '.'
0000000000001002         db  0x20 ; ' '
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x00 ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x08 ; '.'
0000000000001009         db  0x00 ; '.'
000000000000100a         db  0x00 ; '.'
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x00 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0x72 ; 'r'
0000000000001011         db  0x6e ; 'n'
0000000000001012         db  0x00 ; '.'
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0x80 ; '.'
0000000000001019         db  0x9b ; '.'
000000000000101a         db  0x20 ; ' '
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x00 ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x08 ; '.'
0000000000001021         db  0x00 ; '.'
0000000000001022         db  0x00 ; '.'
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x00 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x8f ; '.'
0000000000001029         db  0x77 ; 'w'
000000000000102a         db  0x00 ; '.'
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x00 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0x88 ; '.'
0000000000001031         db  0x9b ; '.'
0000000000001032         db  0x20 ; ' '
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x00 ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x08 ; '.'
0000000000001039         db  0x00 ; '.'
000000000000103a         db  0x00 ; '.'
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x00 ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0x97 ; '.'
0000000000001041         db  0x77 ; 'w'
0000000000001042         db  0x00 ; '.'
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x00 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0x90 ; '.'
0000000000001049         db  0x9b ; '.'
000000000000104a         db  0x20 ; ' '
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x00 ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x08 ; '.'
0000000000001051         db  0x00 ; '.'
0000000000001052         db  0x00 ; '.'
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x00 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0x9d ; '.'
0000000000001059         db  0x77 ; 'w'
000000000000105a         db  0x00 ; '.'
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0x98 ; '.'
0000000000001061         db  0x9b ; '.'
0000000000001062         db  0x20 ; ' '
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x00 ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x08 ; '.'
0000000000001069         db  0x00 ; '.'
000000000000106a         db  0x00 ; '.'
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x00 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0xaa ; '.'
0000000000001071         db  0x77 ; 'w'
0000000000001072         db  0x00 ; '.'
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x00 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0xa0 ; '.'
0000000000001079         db  0x9b ; '.'
000000000000107a         db  0x20 ; ' '
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x00 ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x08 ; '.'
0000000000001081         db  0x00 ; '.'
0000000000001082         db  0x00 ; '.'
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x00 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0xb7 ; '.'
0000000000001089         db  0x77 ; 'w'
000000000000108a         db  0x00 ; '.'
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x00 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0xa8 ; '.'
0000000000001091         db  0x9b ; '.'
0000000000001092         db  0x20 ; ' '
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x00 ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x08 ; '.'
0000000000001099         db  0x00 ; '.'
000000000000109a         db  0x00 ; '.'
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x00 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0x8c ; '.'
00000000000010a1         db  0x6d ; 'm'
00000000000010a2         db  0x00 ; '.'
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x00 ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0xb0 ; '.'
00000000000010a9         db  0x9b ; '.'
00000000000010aa         db  0x20 ; ' '
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x00 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x08 ; '.'
00000000000010b1         db  0x00 ; '.'
00000000000010b2         db  0x00 ; '.'
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x00 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0xcb ; '.'
00000000000010b9         db  0x77 ; 'w'
00000000000010ba         db  0x00 ; '.'
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x00 ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0xb8 ; '.'
00000000000010c1         db  0x9b ; '.'
00000000000010c2         db  0x20 ; ' '
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x00 ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x08 ; '.'
00000000000010c9         db  0x00 ; '.'
00000000000010ca         db  0x00 ; '.'
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x00 ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0xb0 ; '.'
00000000000010d1         db  0x77 ; 'w'
00000000000010d2         db  0x00 ; '.'
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x00 ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0xc0 ; '.'
00000000000010d9         db  0x9b ; '.'
00000000000010da         db  0x20 ; ' '
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x00 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x08 ; '.'
00000000000010e1         db  0x00 ; '.'
00000000000010e2         db  0x00 ; '.'
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x00 ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0x7f ; '.'
00000000000010e9         db  0x6c ; 'l'
00000000000010ea         db  0x00 ; '.'
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x00 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0xc8 ; '.'
00000000000010f1         db  0x9b ; '.'
00000000000010f2         db  0x20 ; ' '
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x00 ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0x08 ; '.'
00000000000010f9         db  0x00 ; '.'
00000000000010fa         db  0x00 ; '.'
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x00 ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0xd3 ; '.'
0000000000001101         db  0x77 ; 'w'
0000000000001102         db  0x00 ; '.'
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x00 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0x08 ; '.'
0000000000001109         db  0xa0 ; '.'
000000000000110a         db  0x20 ; ' '
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x00 ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0x08 ; '.'
0000000000001111         db  0x00 ; '.'
0000000000001112         db  0x00 ; '.'
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x00 ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0x08 ; '.'
0000000000001119         db  0xa0 ; '.'
000000000000111a         db  0x20 ; ' '
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x00 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x10 ; '.'
0000000000001121         db  0xa0 ; '.'
0000000000001122         db  0x20 ; ' '
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x00 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0x08 ; '.'
0000000000001129         db  0x00 ; '.'
000000000000112a         db  0x00 ; '.'
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x00 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0x20 ; ' '
0000000000001131         db  0x77 ; 'w'
0000000000001132         db  0x00 ; '.'
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x00 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x60 ; '`'
0000000000001139         db  0xa0 ; '.'
000000000000113a         db  0x20 ; ' '
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x00 ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0x08 ; '.'
0000000000001141         db  0x00 ; '.'
0000000000001142         db  0x00 ; '.'
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x00 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0x70 ; 'p'
0000000000001149         db  0xa0 ; '.'
000000000000114a         db  0x20 ; ' '
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x00 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x78 ; 'x'
0000000000001151         db  0xa0 ; '.'
0000000000001152         db  0x20 ; ' '
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x00 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0x08 ; '.'
0000000000001159         db  0x00 ; '.'
000000000000115a         db  0x00 ; '.'
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x00 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0x20 ; ' '
0000000000001161         db  0xa4 ; '.'
0000000000001162         db  0x20 ; ' '
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x00 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0xd0 ; '.'
0000000000001169         db  0x9f ; '.'
000000000000116a         db  0x20 ; ' '
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x00 ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0x06 ; '.'
0000000000001171         db  0x00 ; '.'
0000000000001172         db  0x00 ; '.'
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x07 ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0x00 ; '.'
0000000000001179         db  0x00 ; '.'
000000000000117a         db  0x00 ; '.'
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x00 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0xd8 ; '.'
0000000000001181         db  0x9f ; '.'
0000000000001182         db  0x20 ; ' '
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x00 ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x06 ; '.'
0000000000001189         db  0x00 ; '.'
000000000000118a         db  0x00 ; '.'
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x1d ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0x00 ; '.'
0000000000001191         db  0x00 ; '.'
0000000000001192         db  0x00 ; '.'
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x00 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0xe0 ; '.'
0000000000001199         db  0x9f ; '.'
000000000000119a         db  0x20 ; ' '
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x00 ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x06 ; '.'
00000000000011a1         db  0x00 ; '.'
00000000000011a2         db  0x00 ; '.'
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x24 ; '$'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0x00 ; '.'
00000000000011a9         db  0x00 ; '.'
00000000000011aa         db  0x00 ; '.'
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x00 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0xe8 ; '.'
00000000000011b1         db  0x9f ; '.'
00000000000011b2         db  0x20 ; ' '
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x00 ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x06 ; '.'
00000000000011b9         db  0x00 ; '.'
00000000000011ba         db  0x00 ; '.'
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x3d ; '='
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0x00 ; '.'
00000000000011c1         db  0x00 ; '.'
00000000000011c2         db  0x00 ; '.'
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x00 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0xf0 ; '.'
00000000000011c9         db  0x9f ; '.'
00000000000011ca         db  0x20 ; ' '
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x00 ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x06 ; '.'
00000000000011d1         db  0x00 ; '.'
00000000000011d2         db  0x00 ; '.'
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x40 ; '@'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0x00 ; '.'
00000000000011d9         db  0x00 ; '.'
00000000000011da         db  0x00 ; '.'
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x00 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0x40 ; '@'
00000000000011e1         db  0xa2 ; '.'
00000000000011e2         db  0x20 ; ' '
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x00 ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x05 ; '.'
00000000000011e9         db  0x00 ; '.'
00000000000011ea         db  0x00 ; '.'
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x47 ; 'G'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0x00 ; '.'
00000000000011f1         db  0x00 ; '.'
00000000000011f2         db  0x00 ; '.'
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x00 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0x48 ; 'H'
00000000000011f9         db  0xa2 ; '.'
00000000000011fa         db  0x20 ; ' '
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x00 ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x05 ; '.'
0000000000001201         db  0x00 ; '.'
0000000000001202         db  0x00 ; '.'
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x44 ; 'D'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0x00 ; '.'
0000000000001209         db  0x00 ; '.'
000000000000120a         db  0x00 ; '.'
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x00 ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0x50 ; 'P'
0000000000001211         db  0xa2 ; '.'
0000000000001212         db  0x20 ; ' '
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x00 ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x05 ; '.'
0000000000001219         db  0x00 ; '.'
000000000000121a         db  0x00 ; '.'
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x4d ; 'M'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0x00 ; '.'
0000000000001221         db  0x00 ; '.'
0000000000001222         db  0x00 ; '.'
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x00 ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0x58 ; 'X'
0000000000001229         db  0xa2 ; '.'
000000000000122a         db  0x20 ; ' '
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x00 ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x05 ; '.'
0000000000001231         db  0x00 ; '.'
0000000000001232         db  0x00 ; '.'
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x4a ; 'J'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0x00 ; '.'
0000000000001239         db  0x00 ; '.'
000000000000123a         db  0x00 ; '.'
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x00 ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x60 ; '`'
0000000000001241         db  0xa2 ; '.'
0000000000001242         db  0x20 ; ' '
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x00 ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x05 ; '.'
0000000000001249         db  0x00 ; '.'
000000000000124a         db  0x00 ; '.'
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x4e ; 'N'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0x00 ; '.'
0000000000001251         db  0x00 ; '.'
0000000000001252         db  0x00 ; '.'
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x00 ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0x68 ; 'h'
0000000000001259         db  0xa2 ; '.'
000000000000125a         db  0x20 ; ' '
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x00 ; '.'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x05 ; '.'
0000000000001261         db  0x00 ; '.'
0000000000001262         db  0x00 ; '.'
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x49 ; 'I'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x00 ; '.'
0000000000001269         db  0x00 ; '.'
000000000000126a         db  0x00 ; '.'
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x00 ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x80 ; '.'
0000000000001271         db  0xa2 ; '.'
0000000000001272         db  0x20 ; ' '
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x00 ; '.'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x05 ; '.'
0000000000001279         db  0x00 ; '.'
000000000000127a         db  0x00 ; '.'
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x4c ; 'L'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x00 ; '.'
0000000000001281         db  0x00 ; '.'
0000000000001282         db  0x00 ; '.'
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x00 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0x1288; 0x1858[ (1488 bytes)
        ; File offset : [4744; 6232[ (1488 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000001288         db  0xe0 ; '.'
0000000000001289         db  0x9d ; '.'
000000000000128a         db  0x20 ; ' '
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x00 ; '.'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x07 ; '.'
0000000000001291         db  0x00 ; '.'
0000000000001292         db  0x00 ; '.'
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x01 ; '.'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x00 ; '.'
0000000000001299         db  0x00 ; '.'
000000000000129a         db  0x00 ; '.'
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x00 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0xe8 ; '.'
00000000000012a1         db  0x9d ; '.'
00000000000012a2         db  0x20 ; ' '
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x00 ; '.'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x07 ; '.'
00000000000012a9         db  0x00 ; '.'
00000000000012aa         db  0x00 ; '.'
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x02 ; '.'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x00 ; '.'
00000000000012b1         db  0x00 ; '.'
00000000000012b2         db  0x00 ; '.'
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x00 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0xf0 ; '.'
00000000000012b9         db  0x9d ; '.'
00000000000012ba         db  0x20 ; ' '
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x00 ; '.'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x07 ; '.'
00000000000012c1         db  0x00 ; '.'
00000000000012c2         db  0x00 ; '.'
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x03 ; '.'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0x00 ; '.'
00000000000012c9         db  0x00 ; '.'
00000000000012ca         db  0x00 ; '.'
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x00 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0xf8 ; '.'
00000000000012d1         db  0x9d ; '.'
00000000000012d2         db  0x20 ; ' '
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x00 ; '.'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x07 ; '.'
00000000000012d9         db  0x00 ; '.'
00000000000012da         db  0x00 ; '.'
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x04 ; '.'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0x00 ; '.'
00000000000012e1         db  0x00 ; '.'
00000000000012e2         db  0x00 ; '.'
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x00 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0x00 ; '.'
00000000000012e9         db  0x9e ; '.'
00000000000012ea         db  0x20 ; ' '
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x00 ; '.'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x07 ; '.'
00000000000012f1         db  0x00 ; '.'
00000000000012f2         db  0x00 ; '.'
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x05 ; '.'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x00 ; '.'
00000000000012f9         db  0x00 ; '.'
00000000000012fa         db  0x00 ; '.'
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x00 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0x08 ; '.'
0000000000001301         db  0x9e ; '.'
0000000000001302         db  0x20 ; ' '
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x00 ; '.'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x07 ; '.'
0000000000001309         db  0x00 ; '.'
000000000000130a         db  0x00 ; '.'
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x06 ; '.'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0x00 ; '.'
0000000000001311         db  0x00 ; '.'
0000000000001312         db  0x00 ; '.'
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x00 ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0x10 ; '.'
0000000000001319         db  0x9e ; '.'
000000000000131a         db  0x20 ; ' '
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x00 ; '.'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x07 ; '.'
0000000000001321         db  0x00 ; '.'
0000000000001322         db  0x00 ; '.'
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x08 ; '.'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0x00 ; '.'
0000000000001329         db  0x00 ; '.'
000000000000132a         db  0x00 ; '.'
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x00 ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0x18 ; '.'
0000000000001331         db  0x9e ; '.'
0000000000001332         db  0x20 ; ' '
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x00 ; '.'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x07 ; '.'
0000000000001339         db  0x00 ; '.'
000000000000133a         db  0x00 ; '.'
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x09 ; '.'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0x00 ; '.'
0000000000001341         db  0x00 ; '.'
0000000000001342         db  0x00 ; '.'
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x00 ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0x20 ; ' '
0000000000001349         db  0x9e ; '.'
000000000000134a         db  0x20 ; ' '
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x00 ; '.'
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x07 ; '.'
0000000000001351         db  0x00 ; '.'
0000000000001352         db  0x00 ; '.'
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x0a ; '.'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0x00 ; '.'
0000000000001359         db  0x00 ; '.'
000000000000135a         db  0x00 ; '.'
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x00 ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0x28 ; '('
0000000000001361         db  0x9e ; '.'
0000000000001362         db  0x20 ; ' '
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x00 ; '.'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0x07 ; '.'
0000000000001369         db  0x00 ; '.'
000000000000136a         db  0x00 ; '.'
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x0b ; '.'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0x00 ; '.'
0000000000001371         db  0x00 ; '.'
0000000000001372         db  0x00 ; '.'
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x00 ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x30 ; '0'
0000000000001379         db  0x9e ; '.'
000000000000137a         db  0x20 ; ' '
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x00 ; '.'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0x07 ; '.'
0000000000001381         db  0x00 ; '.'
0000000000001382         db  0x00 ; '.'
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x0c ; '.'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0x00 ; '.'
0000000000001389         db  0x00 ; '.'
000000000000138a         db  0x00 ; '.'
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x00 ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x38 ; '8'
0000000000001391         db  0x9e ; '.'
0000000000001392         db  0x20 ; ' '
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x00 ; '.'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0x07 ; '.'
0000000000001399         db  0x00 ; '.'
000000000000139a         db  0x00 ; '.'
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x0d ; '.'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0x00 ; '.'
00000000000013a1         db  0x00 ; '.'
00000000000013a2         db  0x00 ; '.'
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x00 ; '.'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x40 ; '@'
00000000000013a9         db  0x9e ; '.'
00000000000013aa         db  0x20 ; ' '
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x00 ; '.'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x07 ; '.'
00000000000013b1         db  0x00 ; '.'
00000000000013b2         db  0x00 ; '.'
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x0e ; '.'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'
00000000000013b8         db  0x00 ; '.'
00000000000013b9         db  0x00 ; '.'
00000000000013ba         db  0x00 ; '.'
00000000000013bb         db  0x00 ; '.'
00000000000013bc         db  0x00 ; '.'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x00 ; '.'
00000000000013bf         db  0x00 ; '.'
00000000000013c0         db  0x48 ; 'H'
00000000000013c1         db  0x9e ; '.'
00000000000013c2         db  0x20 ; ' '
00000000000013c3         db  0x00 ; '.'
00000000000013c4         db  0x00 ; '.'
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x00 ; '.'
00000000000013c7         db  0x00 ; '.'
00000000000013c8         db  0x07 ; '.'
00000000000013c9         db  0x00 ; '.'
00000000000013ca         db  0x00 ; '.'
00000000000013cb         db  0x00 ; '.'
00000000000013cc         db  0x0f ; '.'
00000000000013cd         db  0x00 ; '.'
00000000000013ce         db  0x00 ; '.'
00000000000013cf         db  0x00 ; '.'
00000000000013d0         db  0x00 ; '.'
00000000000013d1         db  0x00 ; '.'
00000000000013d2         db  0x00 ; '.'
00000000000013d3         db  0x00 ; '.'
00000000000013d4         db  0x00 ; '.'
00000000000013d5         db  0x00 ; '.'
00000000000013d6         db  0x00 ; '.'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0x50 ; 'P'
00000000000013d9         db  0x9e ; '.'
00000000000013da         db  0x20 ; ' '
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x00 ; '.'
00000000000013dd         db  0x00 ; '.'
00000000000013de         db  0x00 ; '.'
00000000000013df         db  0x00 ; '.'
00000000000013e0         db  0x07 ; '.'
00000000000013e1         db  0x00 ; '.'
00000000000013e2         db  0x00 ; '.'
00000000000013e3         db  0x00 ; '.'
00000000000013e4         db  0x10 ; '.'
00000000000013e5         db  0x00 ; '.'
00000000000013e6         db  0x00 ; '.'
00000000000013e7         db  0x00 ; '.'
00000000000013e8         db  0x00 ; '.'
00000000000013e9         db  0x00 ; '.'
00000000000013ea         db  0x00 ; '.'
00000000000013eb         db  0x00 ; '.'
00000000000013ec         db  0x00 ; '.'
00000000000013ed         db  0x00 ; '.'
00000000000013ee         db  0x00 ; '.'
00000000000013ef         db  0x00 ; '.'
00000000000013f0         db  0x58 ; 'X'
00000000000013f1         db  0x9e ; '.'
00000000000013f2         db  0x20 ; ' '
00000000000013f3         db  0x00 ; '.'
00000000000013f4         db  0x00 ; '.'
00000000000013f5         db  0x00 ; '.'
00000000000013f6         db  0x00 ; '.'
00000000000013f7         db  0x00 ; '.'
00000000000013f8         db  0x07 ; '.'
00000000000013f9         db  0x00 ; '.'
00000000000013fa         db  0x00 ; '.'
00000000000013fb         db  0x00 ; '.'
00000000000013fc         db  0x11 ; '.'
00000000000013fd         db  0x00 ; '.'
00000000000013fe         db  0x00 ; '.'
00000000000013ff         db  0x00 ; '.'
0000000000001400         db  0x00 ; '.'
0000000000001401         db  0x00 ; '.'
0000000000001402         db  0x00 ; '.'
0000000000001403         db  0x00 ; '.'
0000000000001404         db  0x00 ; '.'
0000000000001405         db  0x00 ; '.'
0000000000001406         db  0x00 ; '.'
0000000000001407         db  0x00 ; '.'
0000000000001408         db  0x60 ; '`'
0000000000001409         db  0x9e ; '.'
000000000000140a         db  0x20 ; ' '
000000000000140b         db  0x00 ; '.'
000000000000140c         db  0x00 ; '.'
000000000000140d         db  0x00 ; '.'
000000000000140e         db  0x00 ; '.'
000000000000140f         db  0x00 ; '.'
0000000000001410         db  0x07 ; '.'
0000000000001411         db  0x00 ; '.'
0000000000001412         db  0x00 ; '.'
0000000000001413         db  0x00 ; '.'
0000000000001414         db  0x12 ; '.'
0000000000001415         db  0x00 ; '.'
0000000000001416         db  0x00 ; '.'
0000000000001417         db  0x00 ; '.'
0000000000001418         db  0x00 ; '.'
0000000000001419         db  0x00 ; '.'
000000000000141a         db  0x00 ; '.'
000000000000141b         db  0x00 ; '.'
000000000000141c         db  0x00 ; '.'
000000000000141d         db  0x00 ; '.'
000000000000141e         db  0x00 ; '.'
000000000000141f         db  0x00 ; '.'
0000000000001420         db  0x68 ; 'h'
0000000000001421         db  0x9e ; '.'
0000000000001422         db  0x20 ; ' '
0000000000001423         db  0x00 ; '.'
0000000000001424         db  0x00 ; '.'
0000000000001425         db  0x00 ; '.'
0000000000001426         db  0x00 ; '.'
0000000000001427         db  0x00 ; '.'
0000000000001428         db  0x07 ; '.'
0000000000001429         db  0x00 ; '.'
000000000000142a         db  0x00 ; '.'
000000000000142b         db  0x00 ; '.'
000000000000142c         db  0x13 ; '.'
000000000000142d         db  0x00 ; '.'
000000000000142e         db  0x00 ; '.'
000000000000142f         db  0x00 ; '.'
0000000000001430         db  0x00 ; '.'
0000000000001431         db  0x00 ; '.'
0000000000001432         db  0x00 ; '.'
0000000000001433         db  0x00 ; '.'
0000000000001434         db  0x00 ; '.'
0000000000001435         db  0x00 ; '.'
0000000000001436         db  0x00 ; '.'
0000000000001437         db  0x00 ; '.'
0000000000001438         db  0x70 ; 'p'
0000000000001439         db  0x9e ; '.'
000000000000143a         db  0x20 ; ' '
000000000000143b         db  0x00 ; '.'
000000000000143c         db  0x00 ; '.'
000000000000143d         db  0x00 ; '.'
000000000000143e         db  0x00 ; '.'
000000000000143f         db  0x00 ; '.'
0000000000001440         db  0x07 ; '.'
0000000000001441         db  0x00 ; '.'
0000000000001442         db  0x00 ; '.'
0000000000001443         db  0x00 ; '.'
0000000000001444         db  0x14 ; '.'
0000000000001445         db  0x00 ; '.'
0000000000001446         db  0x00 ; '.'
0000000000001447         db  0x00 ; '.'
0000000000001448         db  0x00 ; '.'
0000000000001449         db  0x00 ; '.'
000000000000144a         db  0x00 ; '.'
000000000000144b         db  0x00 ; '.'
000000000000144c         db  0x00 ; '.'
000000000000144d         db  0x00 ; '.'
000000000000144e         db  0x00 ; '.'
000000000000144f         db  0x00 ; '.'
0000000000001450         db  0x78 ; 'x'
0000000000001451         db  0x9e ; '.'
0000000000001452         db  0x20 ; ' '
0000000000001453         db  0x00 ; '.'
0000000000001454         db  0x00 ; '.'
0000000000001455         db  0x00 ; '.'
0000000000001456         db  0x00 ; '.'
0000000000001457         db  0x00 ; '.'
0000000000001458         db  0x07 ; '.'
0000000000001459         db  0x00 ; '.'
000000000000145a         db  0x00 ; '.'
000000000000145b         db  0x00 ; '.'
000000000000145c         db  0x15 ; '.'
000000000000145d         db  0x00 ; '.'
000000000000145e         db  0x00 ; '.'
000000000000145f         db  0x00 ; '.'
0000000000001460         db  0x00 ; '.'
0000000000001461         db  0x00 ; '.'
0000000000001462         db  0x00 ; '.'
0000000000001463         db  0x00 ; '.'
0000000000001464         db  0x00 ; '.'
0000000000001465         db  0x00 ; '.'
0000000000001466         db  0x00 ; '.'
0000000000001467         db  0x00 ; '.'
0000000000001468         db  0x80 ; '.'
0000000000001469         db  0x9e ; '.'
000000000000146a         db  0x20 ; ' '
000000000000146b         db  0x00 ; '.'
000000000000146c         db  0x00 ; '.'
000000000000146d         db  0x00 ; '.'
000000000000146e         db  0x00 ; '.'
000000000000146f         db  0x00 ; '.'
0000000000001470         db  0x07 ; '.'
0000000000001471         db  0x00 ; '.'
0000000000001472         db  0x00 ; '.'
0000000000001473         db  0x00 ; '.'
0000000000001474         db  0x16 ; '.'
0000000000001475         db  0x00 ; '.'
0000000000001476         db  0x00 ; '.'
0000000000001477         db  0x00 ; '.'
0000000000001478         db  0x00 ; '.'
0000000000001479         db  0x00 ; '.'
000000000000147a         db  0x00 ; '.'
000000000000147b         db  0x00 ; '.'
000000000000147c         db  0x00 ; '.'
000000000000147d         db  0x00 ; '.'
000000000000147e         db  0x00 ; '.'
000000000000147f         db  0x00 ; '.'
0000000000001480         db  0x88 ; '.'
0000000000001481         db  0x9e ; '.'
0000000000001482         db  0x20 ; ' '
0000000000001483         db  0x00 ; '.'
0000000000001484         db  0x00 ; '.'
0000000000001485         db  0x00 ; '.'
0000000000001486         db  0x00 ; '.'
0000000000001487         db  0x00 ; '.'
0000000000001488         db  0x07 ; '.'
0000000000001489         db  0x00 ; '.'
000000000000148a         db  0x00 ; '.'
000000000000148b         db  0x00 ; '.'
000000000000148c         db  0x17 ; '.'
000000000000148d         db  0x00 ; '.'
000000000000148e         db  0x00 ; '.'
000000000000148f         db  0x00 ; '.'
0000000000001490         db  0x00 ; '.'
0000000000001491         db  0x00 ; '.'
0000000000001492         db  0x00 ; '.'
0000000000001493         db  0x00 ; '.'
0000000000001494         db  0x00 ; '.'
0000000000001495         db  0x00 ; '.'
0000000000001496         db  0x00 ; '.'
0000000000001497         db  0x00 ; '.'
0000000000001498         db  0x90 ; '.'
0000000000001499         db  0x9e ; '.'
000000000000149a         db  0x20 ; ' '
000000000000149b         db  0x00 ; '.'
000000000000149c         db  0x00 ; '.'
000000000000149d         db  0x00 ; '.'
000000000000149e         db  0x00 ; '.'
000000000000149f         db  0x00 ; '.'
00000000000014a0         db  0x07 ; '.'
00000000000014a1         db  0x00 ; '.'
00000000000014a2         db  0x00 ; '.'
00000000000014a3         db  0x00 ; '.'
00000000000014a4         db  0x18 ; '.'
00000000000014a5         db  0x00 ; '.'
00000000000014a6         db  0x00 ; '.'
00000000000014a7         db  0x00 ; '.'
00000000000014a8         db  0x00 ; '.'
00000000000014a9         db  0x00 ; '.'
00000000000014aa         db  0x00 ; '.'
00000000000014ab         db  0x00 ; '.'
00000000000014ac         db  0x00 ; '.'
00000000000014ad         db  0x00 ; '.'
00000000000014ae         db  0x00 ; '.'
00000000000014af         db  0x00 ; '.'
00000000000014b0         db  0x98 ; '.'
00000000000014b1         db  0x9e ; '.'
00000000000014b2         db  0x20 ; ' '
00000000000014b3         db  0x00 ; '.'
00000000000014b4         db  0x00 ; '.'
00000000000014b5         db  0x00 ; '.'
00000000000014b6         db  0x00 ; '.'
00000000000014b7         db  0x00 ; '.'
00000000000014b8         db  0x07 ; '.'
00000000000014b9         db  0x00 ; '.'
00000000000014ba         db  0x00 ; '.'
00000000000014bb         db  0x00 ; '.'
00000000000014bc         db  0x19 ; '.'
00000000000014bd         db  0x00 ; '.'
00000000000014be         db  0x00 ; '.'
00000000000014bf         db  0x00 ; '.'
00000000000014c0         db  0x00 ; '.'
00000000000014c1         db  0x00 ; '.'
00000000000014c2         db  0x00 ; '.'
00000000000014c3         db  0x00 ; '.'
00000000000014c4         db  0x00 ; '.'
00000000000014c5         db  0x00 ; '.'
00000000000014c6         db  0x00 ; '.'
00000000000014c7         db  0x00 ; '.'
00000000000014c8         db  0xa0 ; '.'
00000000000014c9         db  0x9e ; '.'
00000000000014ca         db  0x20 ; ' '
00000000000014cb         db  0x00 ; '.'
00000000000014cc         db  0x00 ; '.'
00000000000014cd         db  0x00 ; '.'
00000000000014ce         db  0x00 ; '.'
00000000000014cf         db  0x00 ; '.'
00000000000014d0         db  0x07 ; '.'
00000000000014d1         db  0x00 ; '.'
00000000000014d2         db  0x00 ; '.'
00000000000014d3         db  0x00 ; '.'
00000000000014d4         db  0x1a ; '.'
00000000000014d5         db  0x00 ; '.'
00000000000014d6         db  0x00 ; '.'
00000000000014d7         db  0x00 ; '.'
00000000000014d8         db  0x00 ; '.'
00000000000014d9         db  0x00 ; '.'
00000000000014da         db  0x00 ; '.'
00000000000014db         db  0x00 ; '.'
00000000000014dc         db  0x00 ; '.'
00000000000014dd         db  0x00 ; '.'
00000000000014de         db  0x00 ; '.'
00000000000014df         db  0x00 ; '.'
00000000000014e0         db  0xa8 ; '.'
00000000000014e1         db  0x9e ; '.'
00000000000014e2         db  0x20 ; ' '
00000000000014e3         db  0x00 ; '.'
00000000000014e4         db  0x00 ; '.'
00000000000014e5         db  0x00 ; '.'
00000000000014e6         db  0x00 ; '.'
00000000000014e7         db  0x00 ; '.'
00000000000014e8         db  0x07 ; '.'
00000000000014e9         db  0x00 ; '.'
00000000000014ea         db  0x00 ; '.'
00000000000014eb         db  0x00 ; '.'
00000000000014ec         db  0x1b ; '.'
00000000000014ed         db  0x00 ; '.'
00000000000014ee         db  0x00 ; '.'
00000000000014ef         db  0x00 ; '.'
00000000000014f0         db  0x00 ; '.'
00000000000014f1         db  0x00 ; '.'
00000000000014f2         db  0x00 ; '.'
00000000000014f3         db  0x00 ; '.'
00000000000014f4         db  0x00 ; '.'
00000000000014f5         db  0x00 ; '.'
00000000000014f6         db  0x00 ; '.'
00000000000014f7         db  0x00 ; '.'
00000000000014f8         db  0xb0 ; '.'
00000000000014f9         db  0x9e ; '.'
00000000000014fa         db  0x20 ; ' '
00000000000014fb         db  0x00 ; '.'
00000000000014fc         db  0x00 ; '.'
00000000000014fd         db  0x00 ; '.'
00000000000014fe         db  0x00 ; '.'
00000000000014ff         db  0x00 ; '.'
0000000000001500         db  0x07 ; '.'
0000000000001501         db  0x00 ; '.'
0000000000001502         db  0x00 ; '.'
0000000000001503         db  0x00 ; '.'
0000000000001504         db  0x1c ; '.'
0000000000001505         db  0x00 ; '.'
0000000000001506         db  0x00 ; '.'
0000000000001507         db  0x00 ; '.'
0000000000001508         db  0x00 ; '.'
0000000000001509         db  0x00 ; '.'
000000000000150a         db  0x00 ; '.'
000000000000150b         db  0x00 ; '.'
000000000000150c         db  0x00 ; '.'
000000000000150d         db  0x00 ; '.'
000000000000150e         db  0x00 ; '.'
000000000000150f         db  0x00 ; '.'
0000000000001510         db  0xb8 ; '.'
0000000000001511         db  0x9e ; '.'
0000000000001512         db  0x20 ; ' '
0000000000001513         db  0x00 ; '.'
0000000000001514         db  0x00 ; '.'
0000000000001515         db  0x00 ; '.'
0000000000001516         db  0x00 ; '.'
0000000000001517         db  0x00 ; '.'
0000000000001518         db  0x07 ; '.'
0000000000001519         db  0x00 ; '.'
000000000000151a         db  0x00 ; '.'
000000000000151b         db  0x00 ; '.'
000000000000151c         db  0x1e ; '.'
000000000000151d         db  0x00 ; '.'
000000000000151e         db  0x00 ; '.'
000000000000151f         db  0x00 ; '.'
0000000000001520         db  0x00 ; '.'
0000000000001521         db  0x00 ; '.'
0000000000001522         db  0x00 ; '.'
0000000000001523         db  0x00 ; '.'
0000000000001524         db  0x00 ; '.'
0000000000001525         db  0x00 ; '.'
0000000000001526         db  0x00 ; '.'
0000000000001527         db  0x00 ; '.'
0000000000001528         db  0xc0 ; '.'
0000000000001529         db  0x9e ; '.'
000000000000152a         db  0x20 ; ' '
000000000000152b         db  0x00 ; '.'
000000000000152c         db  0x00 ; '.'
000000000000152d         db  0x00 ; '.'
000000000000152e         db  0x00 ; '.'
000000000000152f         db  0x00 ; '.'
0000000000001530         db  0x07 ; '.'
0000000000001531         db  0x00 ; '.'
0000000000001532         db  0x00 ; '.'
0000000000001533         db  0x00 ; '.'
0000000000001534         db  0x1f ; '.'
0000000000001535         db  0x00 ; '.'
0000000000001536         db  0x00 ; '.'
0000000000001537         db  0x00 ; '.'
0000000000001538         db  0x00 ; '.'
0000000000001539         db  0x00 ; '.'
000000000000153a         db  0x00 ; '.'
000000000000153b         db  0x00 ; '.'
000000000000153c         db  0x00 ; '.'
000000000000153d         db  0x00 ; '.'
000000000000153e         db  0x00 ; '.'
000000000000153f         db  0x00 ; '.'
0000000000001540         db  0xc8 ; '.'
0000000000001541         db  0x9e ; '.'
0000000000001542         db  0x20 ; ' '
0000000000001543         db  0x00 ; '.'
0000000000001544         db  0x00 ; '.'
0000000000001545         db  0x00 ; '.'
0000000000001546         db  0x00 ; '.'
0000000000001547         db  0x00 ; '.'
0000000000001548         db  0x07 ; '.'
0000000000001549         db  0x00 ; '.'
000000000000154a         db  0x00 ; '.'
000000000000154b         db  0x00 ; '.'
000000000000154c         db  0x20 ; ' '
000000000000154d         db  0x00 ; '.'
000000000000154e         db  0x00 ; '.'
000000000000154f         db  0x00 ; '.'
0000000000001550         db  0x00 ; '.'
0000000000001551         db  0x00 ; '.'
0000000000001552         db  0x00 ; '.'
0000000000001553         db  0x00 ; '.'
0000000000001554         db  0x00 ; '.'
0000000000001555         db  0x00 ; '.'
0000000000001556         db  0x00 ; '.'
0000000000001557         db  0x00 ; '.'
0000000000001558         db  0xd0 ; '.'
0000000000001559         db  0x9e ; '.'
000000000000155a         db  0x20 ; ' '
000000000000155b         db  0x00 ; '.'
000000000000155c         db  0x00 ; '.'
000000000000155d         db  0x00 ; '.'
000000000000155e         db  0x00 ; '.'
000000000000155f         db  0x00 ; '.'
0000000000001560         db  0x07 ; '.'
0000000000001561         db  0x00 ; '.'
0000000000001562         db  0x00 ; '.'
0000000000001563         db  0x00 ; '.'
0000000000001564         db  0x21 ; '!'
0000000000001565         db  0x00 ; '.'
0000000000001566         db  0x00 ; '.'
0000000000001567         db  0x00 ; '.'
0000000000001568         db  0x00 ; '.'
0000000000001569         db  0x00 ; '.'
000000000000156a         db  0x00 ; '.'
000000000000156b         db  0x00 ; '.'
000000000000156c         db  0x00 ; '.'
000000000000156d         db  0x00 ; '.'
000000000000156e         db  0x00 ; '.'
000000000000156f         db  0x00 ; '.'
0000000000001570         db  0xd8 ; '.'
0000000000001571         db  0x9e ; '.'
0000000000001572         db  0x20 ; ' '
0000000000001573         db  0x00 ; '.'
0000000000001574         db  0x00 ; '.'
0000000000001575         db  0x00 ; '.'
0000000000001576         db  0x00 ; '.'
0000000000001577         db  0x00 ; '.'
0000000000001578         db  0x07 ; '.'
0000000000001579         db  0x00 ; '.'
000000000000157a         db  0x00 ; '.'
000000000000157b         db  0x00 ; '.'
000000000000157c         db  0x22 ; '"'
000000000000157d         db  0x00 ; '.'
000000000000157e         db  0x00 ; '.'
000000000000157f         db  0x00 ; '.'
0000000000001580         db  0x00 ; '.'
0000000000001581         db  0x00 ; '.'
0000000000001582         db  0x00 ; '.'
0000000000001583         db  0x00 ; '.'
0000000000001584         db  0x00 ; '.'
0000000000001585         db  0x00 ; '.'
0000000000001586         db  0x00 ; '.'
0000000000001587         db  0x00 ; '.'
0000000000001588         db  0xe0 ; '.'
0000000000001589         db  0x9e ; '.'
000000000000158a         db  0x20 ; ' '
000000000000158b         db  0x00 ; '.'
000000000000158c         db  0x00 ; '.'
000000000000158d         db  0x00 ; '.'
000000000000158e         db  0x00 ; '.'
000000000000158f         db  0x00 ; '.'
0000000000001590         db  0x07 ; '.'
0000000000001591         db  0x00 ; '.'
0000000000001592         db  0x00 ; '.'
0000000000001593         db  0x00 ; '.'
0000000000001594         db  0x23 ; '#'
0000000000001595         db  0x00 ; '.'
0000000000001596         db  0x00 ; '.'
0000000000001597         db  0x00 ; '.'
0000000000001598         db  0x00 ; '.'
0000000000001599         db  0x00 ; '.'
000000000000159a         db  0x00 ; '.'
000000000000159b         db  0x00 ; '.'
000000000000159c         db  0x00 ; '.'
000000000000159d         db  0x00 ; '.'
000000000000159e         db  0x00 ; '.'
000000000000159f         db  0x00 ; '.'
00000000000015a0         db  0xe8 ; '.'
00000000000015a1         db  0x9e ; '.'
00000000000015a2         db  0x20 ; ' '
00000000000015a3         db  0x00 ; '.'
00000000000015a4         db  0x00 ; '.'
00000000000015a5         db  0x00 ; '.'
00000000000015a6         db  0x00 ; '.'
00000000000015a7         db  0x00 ; '.'
00000000000015a8         db  0x07 ; '.'
00000000000015a9         db  0x00 ; '.'
00000000000015aa         db  0x00 ; '.'
00000000000015ab         db  0x00 ; '.'
00000000000015ac         db  0x25 ; '%'
00000000000015ad         db  0x00 ; '.'
00000000000015ae         db  0x00 ; '.'
00000000000015af         db  0x00 ; '.'
00000000000015b0         db  0x00 ; '.'
00000000000015b1         db  0x00 ; '.'
00000000000015b2         db  0x00 ; '.'
00000000000015b3         db  0x00 ; '.'
00000000000015b4         db  0x00 ; '.'
00000000000015b5         db  0x00 ; '.'
00000000000015b6         db  0x00 ; '.'
00000000000015b7         db  0x00 ; '.'
00000000000015b8         db  0xf0 ; '.'
00000000000015b9         db  0x9e ; '.'
00000000000015ba         db  0x20 ; ' '
00000000000015bb         db  0x00 ; '.'
00000000000015bc         db  0x00 ; '.'
00000000000015bd         db  0x00 ; '.'
00000000000015be         db  0x00 ; '.'
00000000000015bf         db  0x00 ; '.'
00000000000015c0         db  0x07 ; '.'
00000000000015c1         db  0x00 ; '.'
00000000000015c2         db  0x00 ; '.'
00000000000015c3         db  0x00 ; '.'
00000000000015c4         db  0x26 ; '&'
00000000000015c5         db  0x00 ; '.'
00000000000015c6         db  0x00 ; '.'
00000000000015c7         db  0x00 ; '.'
00000000000015c8         db  0x00 ; '.'
00000000000015c9         db  0x00 ; '.'
00000000000015ca         db  0x00 ; '.'
00000000000015cb         db  0x00 ; '.'
00000000000015cc         db  0x00 ; '.'
00000000000015cd         db  0x00 ; '.'
00000000000015ce         db  0x00 ; '.'
00000000000015cf         db  0x00 ; '.'
00000000000015d0         db  0xf8 ; '.'
00000000000015d1         db  0x9e ; '.'
00000000000015d2         db  0x20 ; ' '
00000000000015d3         db  0x00 ; '.'
00000000000015d4         db  0x00 ; '.'
00000000000015d5         db  0x00 ; '.'
00000000000015d6         db  0x00 ; '.'
00000000000015d7         db  0x00 ; '.'
00000000000015d8         db  0x07 ; '.'
00000000000015d9         db  0x00 ; '.'
00000000000015da         db  0x00 ; '.'
00000000000015db         db  0x00 ; '.'
00000000000015dc         db  0x27 ; '''
00000000000015dd         db  0x00 ; '.'
00000000000015de         db  0x00 ; '.'
00000000000015df         db  0x00 ; '.'
00000000000015e0         db  0x00 ; '.'
00000000000015e1         db  0x00 ; '.'
00000000000015e2         db  0x00 ; '.'
00000000000015e3         db  0x00 ; '.'
00000000000015e4         db  0x00 ; '.'
00000000000015e5         db  0x00 ; '.'
00000000000015e6         db  0x00 ; '.'
00000000000015e7         db  0x00 ; '.'
00000000000015e8         db  0x00 ; '.'
00000000000015e9         db  0x9f ; '.'
00000000000015ea         db  0x20 ; ' '
00000000000015eb         db  0x00 ; '.'
00000000000015ec         db  0x00 ; '.'
00000000000015ed         db  0x00 ; '.'
00000000000015ee         db  0x00 ; '.'
00000000000015ef         db  0x00 ; '.'
00000000000015f0         db  0x07 ; '.'
00000000000015f1         db  0x00 ; '.'
00000000000015f2         db  0x00 ; '.'
00000000000015f3         db  0x00 ; '.'
00000000000015f4         db  0x28 ; '('
00000000000015f5         db  0x00 ; '.'
00000000000015f6         db  0x00 ; '.'
00000000000015f7         db  0x00 ; '.'
00000000000015f8         db  0x00 ; '.'
00000000000015f9         db  0x00 ; '.'
00000000000015fa         db  0x00 ; '.'
00000000000015fb         db  0x00 ; '.'
00000000000015fc         db  0x00 ; '.'
00000000000015fd         db  0x00 ; '.'
00000000000015fe         db  0x00 ; '.'
00000000000015ff         db  0x00 ; '.'
0000000000001600         db  0x08 ; '.'
0000000000001601         db  0x9f ; '.'
0000000000001602         db  0x20 ; ' '
0000000000001603         db  0x00 ; '.'
0000000000001604         db  0x00 ; '.'
0000000000001605         db  0x00 ; '.'
0000000000001606         db  0x00 ; '.'
0000000000001607         db  0x00 ; '.'
0000000000001608         db  0x07 ; '.'
0000000000001609         db  0x00 ; '.'
000000000000160a         db  0x00 ; '.'
000000000000160b         db  0x00 ; '.'
000000000000160c         db  0x29 ; ')'
000000000000160d         db  0x00 ; '.'
000000000000160e         db  0x00 ; '.'
000000000000160f         db  0x00 ; '.'
0000000000001610         db  0x00 ; '.'
0000000000001611         db  0x00 ; '.'
0000000000001612         db  0x00 ; '.'
0000000000001613         db  0x00 ; '.'
0000000000001614         db  0x00 ; '.'
0000000000001615         db  0x00 ; '.'
0000000000001616         db  0x00 ; '.'
0000000000001617         db  0x00 ; '.'
0000000000001618         db  0x10 ; '.'
0000000000001619         db  0x9f ; '.'
000000000000161a         db  0x20 ; ' '
000000000000161b         db  0x00 ; '.'
000000000000161c         db  0x00 ; '.'
000000000000161d         db  0x00 ; '.'
000000000000161e         db  0x00 ; '.'
000000000000161f         db  0x00 ; '.'
0000000000001620         db  0x07 ; '.'
0000000000001621         db  0x00 ; '.'
0000000000001622         db  0x00 ; '.'
0000000000001623         db  0x00 ; '.'
0000000000001624         db  0x2a ; '*'
0000000000001625         db  0x00 ; '.'
0000000000001626         db  0x00 ; '.'
0000000000001627         db  0x00 ; '.'
0000000000001628         db  0x00 ; '.'
0000000000001629         db  0x00 ; '.'
000000000000162a         db  0x00 ; '.'
000000000000162b         db  0x00 ; '.'
000000000000162c         db  0x00 ; '.'
000000000000162d         db  0x00 ; '.'
000000000000162e         db  0x00 ; '.'
000000000000162f         db  0x00 ; '.'
0000000000001630         db  0x18 ; '.'
0000000000001631         db  0x9f ; '.'
0000000000001632         db  0x20 ; ' '
0000000000001633         db  0x00 ; '.'
0000000000001634         db  0x00 ; '.'
0000000000001635         db  0x00 ; '.'
0000000000001636         db  0x00 ; '.'
0000000000001637         db  0x00 ; '.'
0000000000001638         db  0x07 ; '.'
0000000000001639         db  0x00 ; '.'
000000000000163a         db  0x00 ; '.'
000000000000163b         db  0x00 ; '.'
000000000000163c         db  0x2b ; '+'
000000000000163d         db  0x00 ; '.'
000000000000163e         db  0x00 ; '.'
000000000000163f         db  0x00 ; '.'
0000000000001640         db  0x00 ; '.'
0000000000001641         db  0x00 ; '.'
0000000000001642         db  0x00 ; '.'
0000000000001643         db  0x00 ; '.'
0000000000001644         db  0x00 ; '.'
0000000000001645         db  0x00 ; '.'
0000000000001646         db  0x00 ; '.'
0000000000001647         db  0x00 ; '.'
0000000000001648         db  0x20 ; ' '
0000000000001649         db  0x9f ; '.'
000000000000164a         db  0x20 ; ' '
000000000000164b         db  0x00 ; '.'
000000000000164c         db  0x00 ; '.'
000000000000164d         db  0x00 ; '.'
000000000000164e         db  0x00 ; '.'
000000000000164f         db  0x00 ; '.'
0000000000001650         db  0x07 ; '.'
0000000000001651         db  0x00 ; '.'
0000000000001652         db  0x00 ; '.'
0000000000001653         db  0x00 ; '.'
0000000000001654         db  0x2c ; ','
0000000000001655         db  0x00 ; '.'
0000000000001656         db  0x00 ; '.'
0000000000001657         db  0x00 ; '.'
0000000000001658         db  0x00 ; '.'
0000000000001659         db  0x00 ; '.'
000000000000165a         db  0x00 ; '.'
000000000000165b         db  0x00 ; '.'
000000000000165c         db  0x00 ; '.'
000000000000165d         db  0x00 ; '.'
000000000000165e         db  0x00 ; '.'
000000000000165f         db  0x00 ; '.'
0000000000001660         db  0x28 ; '('
0000000000001661         db  0x9f ; '.'
0000000000001662         db  0x20 ; ' '
0000000000001663         db  0x00 ; '.'
0000000000001664         db  0x00 ; '.'
0000000000001665         db  0x00 ; '.'
0000000000001666         db  0x00 ; '.'
0000000000001667         db  0x00 ; '.'
0000000000001668         db  0x07 ; '.'
0000000000001669         db  0x00 ; '.'
000000000000166a         db  0x00 ; '.'
000000000000166b         db  0x00 ; '.'
000000000000166c         db  0x2d ; '-'
000000000000166d         db  0x00 ; '.'
000000000000166e         db  0x00 ; '.'
000000000000166f         db  0x00 ; '.'
0000000000001670         db  0x00 ; '.'
0000000000001671         db  0x00 ; '.'
0000000000001672         db  0x00 ; '.'
0000000000001673         db  0x00 ; '.'
0000000000001674         db  0x00 ; '.'
0000000000001675         db  0x00 ; '.'
0000000000001676         db  0x00 ; '.'
0000000000001677         db  0x00 ; '.'
0000000000001678         db  0x30 ; '0'
0000000000001679         db  0x9f ; '.'
000000000000167a         db  0x20 ; ' '
000000000000167b         db  0x00 ; '.'
000000000000167c         db  0x00 ; '.'
000000000000167d         db  0x00 ; '.'
000000000000167e         db  0x00 ; '.'
000000000000167f         db  0x00 ; '.'
0000000000001680         db  0x07 ; '.'
0000000000001681         db  0x00 ; '.'
0000000000001682         db  0x00 ; '.'
0000000000001683         db  0x00 ; '.'
0000000000001684         db  0x2e ; '.'
0000000000001685         db  0x00 ; '.'
0000000000001686         db  0x00 ; '.'
0000000000001687         db  0x00 ; '.'
0000000000001688         db  0x00 ; '.'
0000000000001689         db  0x00 ; '.'
000000000000168a         db  0x00 ; '.'
000000000000168b         db  0x00 ; '.'
000000000000168c         db  0x00 ; '.'
000000000000168d         db  0x00 ; '.'
000000000000168e         db  0x00 ; '.'
000000000000168f         db  0x00 ; '.'
0000000000001690         db  0x38 ; '8'
0000000000001691         db  0x9f ; '.'
0000000000001692         db  0x20 ; ' '
0000000000001693         db  0x00 ; '.'
0000000000001694         db  0x00 ; '.'
0000000000001695         db  0x00 ; '.'
0000000000001696         db  0x00 ; '.'
0000000000001697         db  0x00 ; '.'
0000000000001698         db  0x07 ; '.'
0000000000001699         db  0x00 ; '.'
000000000000169a         db  0x00 ; '.'
000000000000169b         db  0x00 ; '.'
000000000000169c         db  0x2f ; '/'
000000000000169d         db  0x00 ; '.'
000000000000169e         db  0x00 ; '.'
000000000000169f         db  0x00 ; '.'
00000000000016a0         db  0x00 ; '.'
00000000000016a1         db  0x00 ; '.'
00000000000016a2         db  0x00 ; '.'
00000000000016a3         db  0x00 ; '.'
00000000000016a4         db  0x00 ; '.'
00000000000016a5         db  0x00 ; '.'
00000000000016a6         db  0x00 ; '.'
00000000000016a7         db  0x00 ; '.'
00000000000016a8         db  0x40 ; '@'
00000000000016a9         db  0x9f ; '.'
00000000000016aa         db  0x20 ; ' '
00000000000016ab         db  0x00 ; '.'
00000000000016ac         db  0x00 ; '.'
00000000000016ad         db  0x00 ; '.'
00000000000016ae         db  0x00 ; '.'
00000000000016af         db  0x00 ; '.'
00000000000016b0         db  0x07 ; '.'
00000000000016b1         db  0x00 ; '.'
00000000000016b2         db  0x00 ; '.'
00000000000016b3         db  0x00 ; '.'
00000000000016b4         db  0x30 ; '0'
00000000000016b5         db  0x00 ; '.'
00000000000016b6         db  0x00 ; '.'
00000000000016b7         db  0x00 ; '.'
00000000000016b8         db  0x00 ; '.'
00000000000016b9         db  0x00 ; '.'
00000000000016ba         db  0x00 ; '.'
00000000000016bb         db  0x00 ; '.'
00000000000016bc         db  0x00 ; '.'
00000000000016bd         db  0x00 ; '.'
00000000000016be         db  0x00 ; '.'
00000000000016bf         db  0x00 ; '.'
00000000000016c0         db  0x48 ; 'H'
00000000000016c1         db  0x9f ; '.'
00000000000016c2         db  0x20 ; ' '
00000000000016c3         db  0x00 ; '.'
00000000000016c4         db  0x00 ; '.'
00000000000016c5         db  0x00 ; '.'
00000000000016c6         db  0x00 ; '.'
00000000000016c7         db  0x00 ; '.'
00000000000016c8         db  0x07 ; '.'
00000000000016c9         db  0x00 ; '.'
00000000000016ca         db  0x00 ; '.'
00000000000016cb         db  0x00 ; '.'
00000000000016cc         db  0x31 ; '1'
00000000000016cd         db  0x00 ; '.'
00000000000016ce         db  0x00 ; '.'
00000000000016cf         db  0x00 ; '.'
00000000000016d0         db  0x00 ; '.'
00000000000016d1         db  0x00 ; '.'
00000000000016d2         db  0x00 ; '.'
00000000000016d3         db  0x00 ; '.'
00000000000016d4         db  0x00 ; '.'
00000000000016d5         db  0x00 ; '.'
00000000000016d6         db  0x00 ; '.'
00000000000016d7         db  0x00 ; '.'
00000000000016d8         db  0x50 ; 'P'
00000000000016d9         db  0x9f ; '.'
00000000000016da         db  0x20 ; ' '
00000000000016db         db  0x00 ; '.'
00000000000016dc         db  0x00 ; '.'
00000000000016dd         db  0x00 ; '.'
00000000000016de         db  0x00 ; '.'
00000000000016df         db  0x00 ; '.'
00000000000016e0         db  0x07 ; '.'
00000000000016e1         db  0x00 ; '.'
00000000000016e2         db  0x00 ; '.'
00000000000016e3         db  0x00 ; '.'
00000000000016e4         db  0x32 ; '2'
00000000000016e5         db  0x00 ; '.'
00000000000016e6         db  0x00 ; '.'
00000000000016e7         db  0x00 ; '.'
00000000000016e8         db  0x00 ; '.'
00000000000016e9         db  0x00 ; '.'
00000000000016ea         db  0x00 ; '.'
00000000000016eb         db  0x00 ; '.'
00000000000016ec         db  0x00 ; '.'
00000000000016ed         db  0x00 ; '.'
00000000000016ee         db  0x00 ; '.'
00000000000016ef         db  0x00 ; '.'
00000000000016f0         db  0x58 ; 'X'
00000000000016f1         db  0x9f ; '.'
00000000000016f2         db  0x20 ; ' '
00000000000016f3         db  0x00 ; '.'
00000000000016f4         db  0x00 ; '.'
00000000000016f5         db  0x00 ; '.'
00000000000016f6         db  0x00 ; '.'
00000000000016f7         db  0x00 ; '.'
00000000000016f8         db  0x07 ; '.'
00000000000016f9         db  0x00 ; '.'
00000000000016fa         db  0x00 ; '.'
00000000000016fb         db  0x00 ; '.'
00000000000016fc         db  0x33 ; '3'
00000000000016fd         db  0x00 ; '.'
00000000000016fe         db  0x00 ; '.'
00000000000016ff         db  0x00 ; '.'
0000000000001700         db  0x00 ; '.'
0000000000001701         db  0x00 ; '.'
0000000000001702         db  0x00 ; '.'
0000000000001703         db  0x00 ; '.'
0000000000001704         db  0x00 ; '.'
0000000000001705         db  0x00 ; '.'
0000000000001706         db  0x00 ; '.'
0000000000001707         db  0x00 ; '.'
0000000000001708         db  0x60 ; '`'
0000000000001709         db  0x9f ; '.'
000000000000170a         db  0x20 ; ' '
000000000000170b         db  0x00 ; '.'
000000000000170c         db  0x00 ; '.'
000000000000170d         db  0x00 ; '.'
000000000000170e         db  0x00 ; '.'
000000000000170f         db  0x00 ; '.'
0000000000001710         db  0x07 ; '.'
0000000000001711         db  0x00 ; '.'
0000000000001712         db  0x00 ; '.'
0000000000001713         db  0x00 ; '.'
0000000000001714         db  0x34 ; '4'
0000000000001715         db  0x00 ; '.'
0000000000001716         db  0x00 ; '.'
0000000000001717         db  0x00 ; '.'
0000000000001718         db  0x00 ; '.'
0000000000001719         db  0x00 ; '.'
000000000000171a         db  0x00 ; '.'
000000000000171b         db  0x00 ; '.'
000000000000171c         db  0x00 ; '.'
000000000000171d         db  0x00 ; '.'
000000000000171e         db  0x00 ; '.'
000000000000171f         db  0x00 ; '.'
0000000000001720         db  0x68 ; 'h'
0000000000001721         db  0x9f ; '.'
0000000000001722         db  0x20 ; ' '
0000000000001723         db  0x00 ; '.'
0000000000001724         db  0x00 ; '.'
0000000000001725         db  0x00 ; '.'
0000000000001726         db  0x00 ; '.'
0000000000001727         db  0x00 ; '.'
0000000000001728         db  0x07 ; '.'
0000000000001729         db  0x00 ; '.'
000000000000172a         db  0x00 ; '.'
000000000000172b         db  0x00 ; '.'
000000000000172c         db  0x35 ; '5'
000000000000172d         db  0x00 ; '.'
000000000000172e         db  0x00 ; '.'
000000000000172f         db  0x00 ; '.'
0000000000001730         db  0x00 ; '.'
0000000000001731         db  0x00 ; '.'
0000000000001732         db  0x00 ; '.'
0000000000001733         db  0x00 ; '.'
0000000000001734         db  0x00 ; '.'
0000000000001735         db  0x00 ; '.'
0000000000001736         db  0x00 ; '.'
0000000000001737         db  0x00 ; '.'
0000000000001738         db  0x70 ; 'p'
0000000000001739         db  0x9f ; '.'
000000000000173a         db  0x20 ; ' '
000000000000173b         db  0x00 ; '.'
000000000000173c         db  0x00 ; '.'
000000000000173d         db  0x00 ; '.'
000000000000173e         db  0x00 ; '.'
000000000000173f         db  0x00 ; '.'
0000000000001740         db  0x07 ; '.'
0000000000001741         db  0x00 ; '.'
0000000000001742         db  0x00 ; '.'
0000000000001743         db  0x00 ; '.'
0000000000001744         db  0x36 ; '6'
0000000000001745         db  0x00 ; '.'
0000000000001746         db  0x00 ; '.'
0000000000001747         db  0x00 ; '.'
0000000000001748         db  0x00 ; '.'
0000000000001749         db  0x00 ; '.'
000000000000174a         db  0x00 ; '.'
000000000000174b         db  0x00 ; '.'
000000000000174c         db  0x00 ; '.'
000000000000174d         db  0x00 ; '.'
000000000000174e         db  0x00 ; '.'
000000000000174f         db  0x00 ; '.'
0000000000001750         db  0x78 ; 'x'
0000000000001751         db  0x9f ; '.'
0000000000001752         db  0x20 ; ' '
0000000000001753         db  0x00 ; '.'
0000000000001754         db  0x00 ; '.'
0000000000001755         db  0x00 ; '.'
0000000000001756         db  0x00 ; '.'
0000000000001757         db  0x00 ; '.'
0000000000001758         db  0x07 ; '.'
0000000000001759         db  0x00 ; '.'
000000000000175a         db  0x00 ; '.'
000000000000175b         db  0x00 ; '.'
000000000000175c         db  0x37 ; '7'
000000000000175d         db  0x00 ; '.'
000000000000175e         db  0x00 ; '.'
000000000000175f         db  0x00 ; '.'
0000000000001760         db  0x00 ; '.'
0000000000001761         db  0x00 ; '.'
0000000000001762         db  0x00 ; '.'
0000000000001763         db  0x00 ; '.'
0000000000001764         db  0x00 ; '.'
0000000000001765         db  0x00 ; '.'
0000000000001766         db  0x00 ; '.'
0000000000001767         db  0x00 ; '.'
0000000000001768         db  0x80 ; '.'
0000000000001769         db  0x9f ; '.'
000000000000176a         db  0x20 ; ' '
000000000000176b         db  0x00 ; '.'
000000000000176c         db  0x00 ; '.'
000000000000176d         db  0x00 ; '.'
000000000000176e         db  0x00 ; '.'
000000000000176f         db  0x00 ; '.'
0000000000001770         db  0x07 ; '.'
0000000000001771         db  0x00 ; '.'
0000000000001772         db  0x00 ; '.'
0000000000001773         db  0x00 ; '.'
0000000000001774         db  0x38 ; '8'
0000000000001775         db  0x00 ; '.'
0000000000001776         db  0x00 ; '.'
0000000000001777         db  0x00 ; '.'
0000000000001778         db  0x00 ; '.'
0000000000001779         db  0x00 ; '.'
000000000000177a         db  0x00 ; '.'
000000000000177b         db  0x00 ; '.'
000000000000177c         db  0x00 ; '.'
000000000000177d         db  0x00 ; '.'
000000000000177e         db  0x00 ; '.'
000000000000177f         db  0x00 ; '.'
0000000000001780         db  0x88 ; '.'
0000000000001781         db  0x9f ; '.'
0000000000001782         db  0x20 ; ' '
0000000000001783         db  0x00 ; '.'
0000000000001784         db  0x00 ; '.'
0000000000001785         db  0x00 ; '.'
0000000000001786         db  0x00 ; '.'
0000000000001787         db  0x00 ; '.'
0000000000001788         db  0x07 ; '.'
0000000000001789         db  0x00 ; '.'
000000000000178a         db  0x00 ; '.'
000000000000178b         db  0x00 ; '.'
000000000000178c         db  0x39 ; '9'
000000000000178d         db  0x00 ; '.'
000000000000178e         db  0x00 ; '.'
000000000000178f         db  0x00 ; '.'
0000000000001790         db  0x00 ; '.'
0000000000001791         db  0x00 ; '.'
0000000000001792         db  0x00 ; '.'
0000000000001793         db  0x00 ; '.'
0000000000001794         db  0x00 ; '.'
0000000000001795         db  0x00 ; '.'
0000000000001796         db  0x00 ; '.'
0000000000001797         db  0x00 ; '.'
0000000000001798         db  0x90 ; '.'
0000000000001799         db  0x9f ; '.'
000000000000179a         db  0x20 ; ' '
000000000000179b         db  0x00 ; '.'
000000000000179c         db  0x00 ; '.'
000000000000179d         db  0x00 ; '.'
000000000000179e         db  0x00 ; '.'
000000000000179f         db  0x00 ; '.'
00000000000017a0         db  0x07 ; '.'
00000000000017a1         db  0x00 ; '.'
00000000000017a2         db  0x00 ; '.'
00000000000017a3         db  0x00 ; '.'
00000000000017a4         db  0x3a ; ':'
00000000000017a5         db  0x00 ; '.'
00000000000017a6         db  0x00 ; '.'
00000000000017a7         db  0x00 ; '.'
00000000000017a8         db  0x00 ; '.'
00000000000017a9         db  0x00 ; '.'
00000000000017aa         db  0x00 ; '.'
00000000000017ab         db  0x00 ; '.'
00000000000017ac         db  0x00 ; '.'
00000000000017ad         db  0x00 ; '.'
00000000000017ae         db  0x00 ; '.'
00000000000017af         db  0x00 ; '.'
00000000000017b0         db  0x98 ; '.'
00000000000017b1         db  0x9f ; '.'
00000000000017b2         db  0x20 ; ' '
00000000000017b3         db  0x00 ; '.'
00000000000017b4         db  0x00 ; '.'
00000000000017b5         db  0x00 ; '.'
00000000000017b6         db  0x00 ; '.'
00000000000017b7         db  0x00 ; '.'
00000000000017b8         db  0x07 ; '.'
00000000000017b9         db  0x00 ; '.'
00000000000017ba         db  0x00 ; '.'
00000000000017bb         db  0x00 ; '.'
00000000000017bc         db  0x3b ; ';'
00000000000017bd         db  0x00 ; '.'
00000000000017be         db  0x00 ; '.'
00000000000017bf         db  0x00 ; '.'
00000000000017c0         db  0x00 ; '.'
00000000000017c1         db  0x00 ; '.'
00000000000017c2         db  0x00 ; '.'
00000000000017c3         db  0x00 ; '.'
00000000000017c4         db  0x00 ; '.'
00000000000017c5         db  0x00 ; '.'
00000000000017c6         db  0x00 ; '.'
00000000000017c7         db  0x00 ; '.'
00000000000017c8         db  0xa0 ; '.'
00000000000017c9         db  0x9f ; '.'
00000000000017ca         db  0x20 ; ' '
00000000000017cb         db  0x00 ; '.'
00000000000017cc         db  0x00 ; '.'
00000000000017cd         db  0x00 ; '.'
00000000000017ce         db  0x00 ; '.'
00000000000017cf         db  0x00 ; '.'
00000000000017d0         db  0x07 ; '.'
00000000000017d1         db  0x00 ; '.'
00000000000017d2         db  0x00 ; '.'
00000000000017d3         db  0x00 ; '.'
00000000000017d4         db  0x3c ; '<'
00000000000017d5         db  0x00 ; '.'
00000000000017d6         db  0x00 ; '.'
00000000000017d7         db  0x00 ; '.'
00000000000017d8         db  0x00 ; '.'
00000000000017d9         db  0x00 ; '.'
00000000000017da         db  0x00 ; '.'
00000000000017db         db  0x00 ; '.'
00000000000017dc         db  0x00 ; '.'
00000000000017dd         db  0x00 ; '.'
00000000000017de         db  0x00 ; '.'
00000000000017df         db  0x00 ; '.'
00000000000017e0         db  0xa8 ; '.'
00000000000017e1         db  0x9f ; '.'
00000000000017e2         db  0x20 ; ' '
00000000000017e3         db  0x00 ; '.'
00000000000017e4         db  0x00 ; '.'
00000000000017e5         db  0x00 ; '.'
00000000000017e6         db  0x00 ; '.'
00000000000017e7         db  0x00 ; '.'
00000000000017e8         db  0x07 ; '.'
00000000000017e9         db  0x00 ; '.'
00000000000017ea         db  0x00 ; '.'
00000000000017eb         db  0x00 ; '.'
00000000000017ec         db  0x3e ; '>'
00000000000017ed         db  0x00 ; '.'
00000000000017ee         db  0x00 ; '.'
00000000000017ef         db  0x00 ; '.'
00000000000017f0         db  0x00 ; '.'
00000000000017f1         db  0x00 ; '.'
00000000000017f2         db  0x00 ; '.'
00000000000017f3         db  0x00 ; '.'
00000000000017f4         db  0x00 ; '.'
00000000000017f5         db  0x00 ; '.'
00000000000017f6         db  0x00 ; '.'
00000000000017f7         db  0x00 ; '.'
00000000000017f8         db  0xb0 ; '.'
00000000000017f9         db  0x9f ; '.'
00000000000017fa         db  0x20 ; ' '
00000000000017fb         db  0x00 ; '.'
00000000000017fc         db  0x00 ; '.'
00000000000017fd         db  0x00 ; '.'
00000000000017fe         db  0x00 ; '.'
00000000000017ff         db  0x00 ; '.'
0000000000001800         db  0x07 ; '.'
0000000000001801         db  0x00 ; '.'
0000000000001802         db  0x00 ; '.'
0000000000001803         db  0x00 ; '.'
0000000000001804         db  0x3f ; '?'
0000000000001805         db  0x00 ; '.'
0000000000001806         db  0x00 ; '.'
0000000000001807         db  0x00 ; '.'
0000000000001808         db  0x00 ; '.'
0000000000001809         db  0x00 ; '.'
000000000000180a         db  0x00 ; '.'
000000000000180b         db  0x00 ; '.'
000000000000180c         db  0x00 ; '.'
000000000000180d         db  0x00 ; '.'
000000000000180e         db  0x00 ; '.'
000000000000180f         db  0x00 ; '.'
0000000000001810         db  0xb8 ; '.'
0000000000001811         db  0x9f ; '.'
0000000000001812         db  0x20 ; ' '
0000000000001813         db  0x00 ; '.'
0000000000001814         db  0x00 ; '.'
0000000000001815         db  0x00 ; '.'
0000000000001816         db  0x00 ; '.'
0000000000001817         db  0x00 ; '.'
0000000000001818         db  0x07 ; '.'
0000000000001819         db  0x00 ; '.'
000000000000181a         db  0x00 ; '.'
000000000000181b         db  0x00 ; '.'
000000000000181c         db  0x41 ; 'A'
000000000000181d         db  0x00 ; '.'
000000000000181e         db  0x00 ; '.'
000000000000181f         db  0x00 ; '.'
0000000000001820         db  0x00 ; '.'
0000000000001821         db  0x00 ; '.'
0000000000001822         db  0x00 ; '.'
0000000000001823         db  0x00 ; '.'
0000000000001824         db  0x00 ; '.'
0000000000001825         db  0x00 ; '.'
0000000000001826         db  0x00 ; '.'
0000000000001827         db  0x00 ; '.'
0000000000001828         db  0xc0 ; '.'
0000000000001829         db  0x9f ; '.'
000000000000182a         db  0x20 ; ' '
000000000000182b         db  0x00 ; '.'
000000000000182c         db  0x00 ; '.'
000000000000182d         db  0x00 ; '.'
000000000000182e         db  0x00 ; '.'
000000000000182f         db  0x00 ; '.'
0000000000001830         db  0x07 ; '.'
0000000000001831         db  0x00 ; '.'
0000000000001832         db  0x00 ; '.'
0000000000001833         db  0x00 ; '.'
0000000000001834         db  0x42 ; 'B'
0000000000001835         db  0x00 ; '.'
0000000000001836         db  0x00 ; '.'
0000000000001837         db  0x00 ; '.'
0000000000001838         db  0x00 ; '.'
0000000000001839         db  0x00 ; '.'
000000000000183a         db  0x00 ; '.'
000000000000183b         db  0x00 ; '.'
000000000000183c         db  0x00 ; '.'
000000000000183d         db  0x00 ; '.'
000000000000183e         db  0x00 ; '.'
000000000000183f         db  0x00 ; '.'
0000000000001840         db  0xc8 ; '.'
0000000000001841         db  0x9f ; '.'
0000000000001842         db  0x20 ; ' '
0000000000001843         db  0x00 ; '.'
0000000000001844         db  0x00 ; '.'
0000000000001845         db  0x00 ; '.'
0000000000001846         db  0x00 ; '.'
0000000000001847         db  0x00 ; '.'
0000000000001848         db  0x07 ; '.'
0000000000001849         db  0x00 ; '.'
000000000000184a         db  0x00 ; '.'
000000000000184b         db  0x00 ; '.'
000000000000184c         db  0x43 ; 'C'
000000000000184d         db  0x00 ; '.'
000000000000184e         db  0x00 ; '.'
000000000000184f         db  0x00 ; '.'
0000000000001850         db  0x00 ; '.'
0000000000001851         db  0x00 ; '.'
0000000000001852         db  0x00 ; '.'
0000000000001853         db  0x00 ; '.'
0000000000001854         db  0x00 ; '.'
0000000000001855         db  0x00 ; '.'
0000000000001856         db  0x00 ; '.'
0000000000001857         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x1858; 0x186f[ (23 bytes)
        ; File offset : [6232; 6255[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
0000000000001858         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
000000000000185c         mov        rax, qword [qword_209fe0]                   ; qword_209fe0
0000000000001863         test       rax, rax
0000000000001866         je         loc_186a

0000000000001868         call       rax

                     loc_186a:
000000000000186a         add        rsp, 0x8                                    ; CODE XREF=_init+14
000000000000186e         ret
                        ; endp
000000000000186f         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x1870; 0x1c60[ (1008 bytes)
        ; File offset : [6256; 7264[ (1008 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_1870:
0000000000001870         push       qword [qword_209dd0]                        ; Begin of unwind block (FDE at 0x82a4), qword_209dd0, CODE XREF=sub_1886+5
0000000000001876         jmp        qword [qword_209dd0+8]                      ; 0x209dd8
                        ; endp
000000000000187c         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getenv:        // getenv
0000000000001880         jmp        qword [getenv@GOT]                          ; getenv, getenv@GOT, CODE XREF=main+1732, main+1934
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1886:
0000000000001886         push       0x0
000000000000188b         jmp        loc_1870


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_sigprocmask:        // sigprocmask
0000000000001890         jmp        qword [sigprocmask@GOT]                     ; sigprocmask, sigprocmask@GOT, CODE XREF=main+4263, main+4462, list_signal_handling+61
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1896:
0000000000001896         push       0x1
000000000000189b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
00000000000018a0         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=parse_signal_action_params+247, parse_block_signal_params+335, operand2sig+285, operand2sig+378, quotearg_n_options+277, quotearg_free+55, quotearg_free+82, quotearg_free+120, xrealloc+40
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18a6:
00000000000018a6         push       0x2
00000000000018ab         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
00000000000018b0         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=set_program_name+154, sub_4850+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18b6:
00000000000018b6         push       0x3
00000000000018bb         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
00000000000018c0         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=main+3224, main+4682, main+4750, main+4972, main+5094, list_signal_handling+331, operand2sig+51, close_stdout+22, quotearg_n_options+28, clone_quoting_options+7, quotearg_buffer+45
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18c6:
00000000000018c6         push       0x4
00000000000018cb         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
00000000000018d0         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+924, usage+1117
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18d6:
00000000000018d6         push       0x5
00000000000018db         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
00000000000018e0         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18e6:
00000000000018e6         push       0x6
00000000000018eb         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcpy:        // strcpy
00000000000018f0         jmp        qword [strcpy@GOT]                          ; strcpy, strcpy@GOT, CODE XREF=sig2str+57
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18f6:
00000000000018f6         push       0x7
00000000000018fb         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
0000000000001900         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1906:
0000000000001906         push       0x8
000000000000190b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_sigaction:        // sigaction
0000000000001910         jmp        qword [sigaction@GOT]                       ; sigaction, sigaction@GOT, CODE XREF=main+2975, main+3021, list_signal_handling+196
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1916:
0000000000001916         push       0x9
000000000000191b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
0000000000001920         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+94
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1926:
0000000000001926         push       0xa
000000000000192b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
0000000000001930         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1936:
0000000000001936         push       0xb
000000000000193b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
0000000000001940         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+82
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1946:
0000000000001946         push       0xc
000000000000194b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_stpcpy:        // stpcpy
0000000000001950         jmp        qword [stpcpy@GOT]                          ; stpcpy, stpcpy@GOT, CODE XREF=main+2041
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1956:
0000000000001956         push       0xd
000000000000195b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
0000000000001960         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+691, main+3668, main+3947, main+4489, main+4570, main+4622, main+4674, main+4742, main+4789, main+4887, main+4923
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1966:
0000000000001966         push       0xe
000000000000196b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
0000000000001970         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1976:
0000000000001976         push       0xf
000000000000197b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
0000000000001980         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=quotearg_buffer_restyled+343, sub_4850+411, sub_4850+1742, xstrdup+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1986:
0000000000001986         push       0x10
000000000000198b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_chdir:        // chdir
0000000000001990         jmp        qword [chdir@GOT]                           ; chdir, chdir@GOT, CODE XREF=main+3292
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1996:
0000000000001996         push       0x11
000000000000199b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
00000000000019a0         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=main+4997, list_signal_handling+353, parse_signal_action_params+354, parse_block_signal_params+469, operand2sig+476, sub_4850+2739, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137, quotearg_n_custom_mem+140
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19a6:
00000000000019a6         push       0x12
00000000000019ab         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
00000000000019b0         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+216
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19b6:
00000000000019b6         push       0x13
00000000000019bb         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
00000000000019c0         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19c6:
00000000000019c6         push       0x14
00000000000019cb         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strchr:        // strchr
00000000000019d0         jmp        qword [strchr@GOT]                          ; strchr, strchr@GOT, CODE XREF=main+2097, main+2497, main+3919, operand2sig+230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19d6:
00000000000019d6         push       0x15
00000000000019db         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
00000000000019e0         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19e6:
00000000000019e6         push       0x16
00000000000019eb         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
00000000000019f0         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19f6:
00000000000019f6         push       0x17
00000000000019fb         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___assert_fail:        // __assert_fail
0000000000001a00         jmp        qword [__assert_fail@GOT]                   ; __assert_fail, __assert_fail@GOT, CODE XREF=main+4837, main+4868, main+5045, extract_varname+291
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a06:
0000000000001a06         push       0x18
0000000000001a0b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
0000000000001a10         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a16:
0000000000001a16         push       0x19
0000000000001a1b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strspn:        // strspn
0000000000001a20         jmp        qword [strspn@GOT]                          ; strspn, strspn@GOT, CODE XREF=main+1842
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a26:
0000000000001a26         push       0x1a
0000000000001a2b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
0000000000001a30         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=quotearg_buffer_restyled+410
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a36:
0000000000001a36         push       0x1b
0000000000001a3b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
0000000000001a40         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+157, usage+194, usage+231, usage+268, usage+305, usage+342, usage+379, usage+416, usage+453, usage+490, usage+527
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a46:
0000000000001a46         push       0x1c
0000000000001a4b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
0000000000001a50         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a56:
0000000000001a56         push       0x1d
0000000000001a5b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_putenv:        // putenv
0000000000001a60         jmp        qword [putenv@GOT]                          ; putenv, putenv@GOT, CODE XREF=main+2443
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a66:
0000000000001a66         push       0x1e
0000000000001a6b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcmp:        // strcmp
0000000000001a70         jmp        qword [strcmp@GOT]                          ; strcmp, strcmp@GOT, CODE XREF=main+2637, str2sig+82
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a76:
0000000000001a76         push       0x1f
0000000000001a7b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_sigemptyset:        // sigemptyset
0000000000001a80         jmp        qword [sigemptyset@GOT]                     ; sigemptyset, sigemptyset@GOT, CODE XREF=main+4251, list_signal_handling+49, parse_block_signal_params+351, parse_block_signal_params+363, parse_block_signal_params+400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a86:
0000000000001a86         push       0x20
0000000000001a8b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strtol:        // strtol
0000000000001a90         jmp        qword [strtol@GOT]                          ; strtol, strtol@GOT, CODE XREF=operand2sig+78, str2sig+152, str2sig+279, str2sig+336
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a96:
0000000000001a96         push       0x21
0000000000001a9b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_sigfillset:        // sigfillset
0000000000001aa0         jmp        qword [sigfillset@GOT]                      ; sigfillset, sigfillset@GOT, CODE XREF=parse_block_signal_params+388, parse_block_signal_params+455
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1aa6:
0000000000001aa6         push       0x22
0000000000001aab         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
0000000000001ab0         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=extract_varname+148, xmemdup+35
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ab6:
0000000000001ab6         push       0x23
0000000000001abb         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
0000000000001ac0         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ac6:
0000000000001ac6         push       0x24
0000000000001acb         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
0000000000001ad0         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=xmalloc+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ad6:
0000000000001ad6         push       0x25
0000000000001adb         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
0000000000001ae0         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ae6:
0000000000001ae6         push       0x26
0000000000001aeb         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
0000000000001af0         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1af6:
0000000000001af6         push       0x27
0000000000001afb         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
0000000000001b00         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b06:
0000000000001b06         push       0x28
0000000000001b0b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
0000000000001b10         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b16:
0000000000001b16         push       0x29
0000000000001b1b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
0000000000001b20         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+63, usage+899, usage+1092, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b26:
0000000000001b26         push       0x2a
0000000000001b2b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
0000000000001b30         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=main+2824, usage+120, usage+887, usage+980, usage+1041, usage+1080, usage+1183, emit_bug_reporting_address+37, emit_bug_reporting_address+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b36:
0000000000001b36         push       0x2b
0000000000001b3b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
0000000000001b40         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+712, main+3391, main+3682, main+3898, main+3961, main+4511, main+4586, main+4642, main+4702, main+4770, main+4806
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b46:
0000000000001b46         push       0x2c
0000000000001b4b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
0000000000001b50         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b56:
0000000000001b56         push       0x2d
0000000000001b5b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_sigdelset:        // sigdelset
0000000000001b60         jmp        qword [sigdelset@GOT]                       ; sigdelset, sigdelset@GOT, CODE XREF=main+4384, parse_block_signal_params+159
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b66:
0000000000001b66         push       0x2e
0000000000001b6b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strtok:        // strtok
0000000000001b70         jmp        qword [strtok@GOT]                          ; strtok, strtok@GOT, CODE XREF=parse_signal_action_params+57, parse_signal_action_params+123, parse_block_signal_params+90, parse_block_signal_params+173
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b76:
0000000000001b76         push       0x2f
0000000000001b7b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_unsetenv:        // unsetenv
0000000000001b80         jmp        qword [unsetenv@GOT]                        ; unsetenv, unsetenv@GOT, CODE XREF=main+3453
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b86:
0000000000001b86         push       0x30
0000000000001b8b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_execvp:        // execvp
0000000000001b90         jmp        qword [execvp@GOT]                          ; execvp, execvp@GOT, CODE XREF=main+3335
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b96:
0000000000001b96         push       0x31
0000000000001b9b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000001ba0         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ba6:
0000000000001ba6         push       0x32
0000000000001bab         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___libc_current_sigrtmin:        // __libc_current_sigrtmin
0000000000001bb0         jmp        qword [__libc_current_sigrtmin@GOT]         ; __libc_current_sigrtmin, __libc_current_sigrtmin@GOT, CODE XREF=str2sig+192, sig2str+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1bb6:
0000000000001bb6         push       0x33
0000000000001bbb         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_sigismember:        // sigismember
0000000000001bc0         jmp        qword [sigismember@GOT]                     ; sigismember, sigismember@GOT, CODE XREF=main+4345, main+4363, list_signal_handling+96, list_signal_handling+223
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1bc6:
0000000000001bc6         push       0x34
0000000000001bcb         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000001bd0         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+984, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1bd6:
0000000000001bd6         push       0x35
0000000000001bdb         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
0000000000001be0         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=main+2379, set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1be6:
0000000000001be6         push       0x36
0000000000001beb         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
0000000000001bf0         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=main+1369, main+2543, main+3160, main+3518, main+3558, main+3741, main+3828, main+4035, main+4099, main+4156, main+4216
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1bf6:
0000000000001bf6         push       0x37
0000000000001bfb         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___libc_current_sigrtmax:        // __libc_current_sigrtmax
0000000000001c00         jmp        qword [__libc_current_sigrtmax@GOT]         ; __libc_current_sigrtmax, __libc_current_sigrtmax@GOT, CODE XREF=str2sig+199, sig2str+92
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c06:
0000000000001c06         push       0x38
0000000000001c0b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
0000000000001c10         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_4850+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c16:
0000000000001c16         push       0x39
0000000000001c1b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
0000000000001c20         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_4850+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c26:
0000000000001c26         push       0x3a
0000000000001c2b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_sigaddset:        // sigaddset
0000000000001c30         jmp        qword [sigaddset@GOT]                       ; sigaddset, sigaddset@GOT, CODE XREF=main+4318, parse_block_signal_params+149, parse_block_signal_params+220
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c36:
0000000000001c36         push       0x3b
0000000000001c3b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
0000000000001c40         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=main+400, sub_45f0+51
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c46:
0000000000001c46         push       0x3c
0000000000001c4b         jmp        0x1870
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___sprintf_chk:        // __sprintf_chk
0000000000001c50         jmp        qword [__sprintf_chk@GOT]                   ; __sprintf_chk, __sprintf_chk@GOT, CODE XREF=sig2str+173
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c56:
0000000000001c56         push       0x3d
0000000000001c5b         jmp        0x1870
                        ; endp


        ; Section .plt.got
        ; Range: [0x1c60; 0x1c68[ (8 bytes)
        ; File offset : [7264; 7272[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_209ff0:        // qword_209ff0
0000000000001c60         jmp        qword [qword_209ff0]                        ; qword, End of unwind block (FDE at 0x82a4), Begin of unwind block (FDE at 0x82cc), qword_209ff0, CODE XREF=__do_global_dtors_aux+30
                        ; endp
0000000000001c66         align      8
0000000000001c68         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x82cc)
0000000000001c69         db  0x00 ; '.'
0000000000001c6a         db  0x00 ; '.'
0000000000001c6b         db  0x00 ; '.'
0000000000001c6c         db  0x00 ; '.'
0000000000001c6d         db  0x00 ; '.'
0000000000001c6e         db  0x00 ; '.'
0000000000001c6f         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x1c70; 0x6b2e[ (20158 bytes)
        ; File offset : [7280; 27438[ (20158 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_58: int8_t, -88
        ;    var_F8: int64_t, -248
        ;    var_F9: int8_t, -249
        ;    var_100: int32_t, -256
        ;    var_108: int64_t, -264
        ;    var_110: int64_t, -272
        ;    var_118: int64_t, -280
        ;    var_120: int64_t, -288
        ;    var_128: int64_t, -296
        ;    var_130: int64_t, -304
        ;    var_138: int64_t, -312
        ;    var_140: int64_t, -320


                     main:
0000000000001c70         push       r15                                         ; Begin of unwind block (FDE at 0x846c), DATA XREF=_start+29
0000000000001c72         push       r14
0000000000001c74         mov        r15, rsi
0000000000001c77         push       r13
0000000000001c79         push       r12
0000000000001c7b         push       rbp
0000000000001c7c         push       rbx
0000000000001c7d         sub        rsp, 0x118
0000000000001c84         mov        dword [rsp+0x148+var_100], edi
0000000000001c88         mov        rdi, qword [rsi]
0000000000001c8b         mov        rax, qword [fs:0x28]
0000000000001c94         mov        qword [rsp+0x148+var_40], rax
0000000000001c9c         xor        eax, eax
0000000000001c9e         call       set_program_name                            ; set_program_name
0000000000001ca3         lea        rsi, qword [aInvalidSequenc+31]             ; argument "__locale" for method j_setlocale, 0x6cb1
0000000000001caa         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
0000000000001caf         call       j_setlocale                                 ; setlocale
0000000000001cb4         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
0000000000001cbb         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
0000000000001cc2         call       j_bindtextdomain                            ; bindtextdomain
0000000000001cc7         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
0000000000001cce         call       j_textdomain                                ; textdomain
0000000000001cd3         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
0000000000001cda         mov        dword [exit_failure], 0x7d                  ; exit_failure
0000000000001ce4         call       atexit                                      ; atexit
0000000000001ce9         mov        edi, 0x104                                  ; argument #1 for method xmalloc
0000000000001cee         call       xmalloc                                     ; xmalloc
0000000000001cf3         lea        rdx, qword [rax+0x104]
0000000000001cfa         mov        qword [signals], rax                        ; signals
0000000000001d01         nop        dword [rax]

                     loc_1d08:
0000000000001d08         mov        dword [rax], 0x0                            ; CODE XREF=main+165
0000000000001d0e         add        rax, 0x4
0000000000001d12         cmp        rdx, rax
0000000000001d15         jne        loc_1d08

0000000000001d17         mov        qword [rsp+0x148+var_140], 0x0
0000000000001d20         mov        byte [rsp+0x148+var_138], 0x0
0000000000001d25         mov        byte [rsp+0x148+var_130], 0x0
0000000000001d2a         nop        word [rax+rax]

                     loc_1d30:
0000000000001d30         mov        edi, dword [rsp+0x148+var_100]              ; argument "___argc" for method j_getopt_long, CODE XREF=main+293, main+349, main+391, main+447, main+751, main+774, main+801, main+823, main+884, main+901, main+1550
0000000000001d34         lea        rcx, qword [longopts]                       ; argument "__longopts" for method j_getopt_long, longopts
0000000000001d3b         lea        rdx, qword [shortopts]                      ; argument "__shortopts" for method j_getopt_long, "+C:iS:u:v0 \\t"
0000000000001d42         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
0000000000001d45         mov        rsi, r15                                    ; argument "___argv" for method j_getopt_long
0000000000001d48         call       j_getopt_long                               ; getopt_long
0000000000001d4d         cmp        eax, 0xffffffff
0000000000001d50         je         loc_257d

0000000000001d56         cmp        eax, 0x53
0000000000001d59         je         loc_1e00

0000000000001d5f         jle        loc_1da0

0000000000001d61         cmp        eax, 0x80
0000000000001d66         je         loc_1f40

0000000000001d6c         jg         loc_1dd8

0000000000001d6e         cmp        eax, 0x75
0000000000001d71         je         loc_1fb0

0000000000001d77         cmp        eax, 0x76
0000000000001d7a         je         loc_1fa0

0000000000001d80         cmp        eax, 0x69
0000000000001d83         je         loc_1d90

                     loc_1d85:
0000000000001d85         mov        edi, 0x7d                                   ; argument #1 for method usage, CODE XREF=main+382, main+3687, main+4541, main+4652
0000000000001d8a         call       usage                                       ; usage
0000000000001d8f         nop

                     loc_1d90:
0000000000001d90         mov        byte [rsp+0x148+var_130], 0x1               ; CODE XREF=main+275
0000000000001d95         jmp        loc_1d30
0000000000001d97         align      32

                     loc_1da0:
0000000000001da0         cmp        eax, 0x9                                    ; CODE XREF=main+239
0000000000001da3         je         loc_2e3a

0000000000001da9         jle        loc_2000

0000000000001daf         cmp        eax, 0x30
0000000000001db2         je         loc_1ff0

0000000000001db8         cmp        eax, 0x43
0000000000001dbb         jne        loc_2e97

0000000000001dc1         mov        rax, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000001dc8         mov        qword [rsp+0x148+var_140], rax
0000000000001dcd         jmp        loc_1d30
0000000000001dd2         align      8

                     loc_1dd8:
0000000000001dd8         cmp        eax, 0x82                                   ; CODE XREF=main+252
0000000000001ddd         je         loc_1f80

0000000000001de3         jl         loc_1f68

0000000000001de9         cmp        eax, 0x83
0000000000001dee         jne        loc_1d85

0000000000001df0         mov        byte [report_signal_handling], 0x1          ; report_signal_handling
0000000000001df7         jmp        loc_1d30
0000000000001dfc         align      512

                     loc_1e00:
0000000000001e00         call       j___ctype_b_loc                             ; __ctype_b_loc, CODE XREF=main+233
0000000000001e05         mov        r12, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000001e0c         mov        r11, rax
0000000000001e0f         mov        r8, qword [rax]
0000000000001e12         jmp        loc_1e1c
0000000000001e14         align      8

                     loc_1e18:
0000000000001e18         add        r12, 0x1                                    ; CODE XREF=main+442

                     loc_1e1c:
0000000000001e1c         movsx      rsi, byte [r12]                             ; CODE XREF=main+418
0000000000001e21         test       byte [r8+rsi*2+1], 0x20
0000000000001e27         mov        rdx, rsi
0000000000001e2a         jne        loc_1e18

0000000000001e2c         test       sil, sil
0000000000001e2f         je         loc_1d30

0000000000001e35         mov        eax, dword [rsp+0x148+var_100]
0000000000001e39         sub        eax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5
0000000000001e3f         or         r9, 0xffffffffffffffff
0000000000001e43         mov        rdi, r12
0000000000001e46         mov        rcx, r9
0000000000001e49         mov        ebx, 0x1
0000000000001e4e         xor        r10d, r10d
0000000000001e51         mov        r13, r12
0000000000001e54         xor        r14d, r14d
0000000000001e57         xor        ebp, ebp
0000000000001e59         mov        dword [rsp+0x148+var_118], eax
0000000000001e5d         xor        eax, eax
0000000000001e5f         repne scasb al, byte [rdi]
0000000000001e61         mov        qword [rsp+0x148+var_110], r12
0000000000001e66         mov        qword [rsp+0x148+var_108], r15
0000000000001e6b         mov        r12d, r10d
0000000000001e6e         not        rcx
0000000000001e71         mov        r15d, ebx
0000000000001e74         mov        qword [rsp+0x148+var_120], r9
0000000000001e79         mov        qword [rsp+0x148+var_128], rcx
0000000000001e7e         mov        rbx, r11
0000000000001e81         nop        dword [rax]

                     loc_1e88:
0000000000001e88         test       byte [r8+rsi*2+1], 0x20                     ; CODE XREF=main+1052
0000000000001e8e         movzx      eax, byte [r13+1]
0000000000001e93         je         loc_2050

0000000000001e99         mov        ecx, r14d
0000000000001e9c         or         cl, bpl
0000000000001e9f         jne        loc_2050

0000000000001ea5         cmp        dl, 0x24
0000000000001ea8         mov        r12d, 0x1
0000000000001eae         je         loc_22ab

0000000000001eb4         jle        loc_2300

0000000000001eba         cmp        dl, 0x27
0000000000001ebd         je         loc_2288

0000000000001ec3         cmp        dl, 0x5c
0000000000001ec6         jne        loc_2309

                     loc_1ecc:
0000000000001ecc         cmp        al, 0x63                                    ; CODE XREF=main+1026
0000000000001ece         sete       sil
0000000000001ed2         test       sil, sil
0000000000001ed5         mov        edx, esi
0000000000001ed7         je         loc_1ee2

0000000000001ed9         test       bpl, bpl
0000000000001edc         jne        loc_306f

                     loc_1ee2:
0000000000001ee2         test       al, al                                      ; CODE XREF=main+615
0000000000001ee4         je         loc_2f17

0000000000001eea         lea        ecx, dword [rax-0x66]
0000000000001eed         cmp        cl, 0x10
0000000000001ef0         ja         loc_1eff

0000000000001ef2         mov        edx, 0x15101
0000000000001ef7         shr        rdx, cl
0000000000001efa         and        edx, 0x1
0000000000001efd         or         edx, esi

                     loc_1eff:
0000000000001eff         test       dl, dl                                      ; CODE XREF=main+640
0000000000001f01         jne        loc_22e0

0000000000001f07         lea        edx, dword [rax-0x22]
0000000000001f0a         cmp        dl, 0x3d
0000000000001f0d         jbe        loc_22c3

                     loc_1f13:
0000000000001f13         lea        rsi, qword [aInvalidSequenc]                ; argument "msgid" for method j_dcgettext, "invalid sequence '\\%c' in -S", CODE XREF=main+1633
0000000000001f1a         mov        ebp, eax
0000000000001f1c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001f21         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001f23         call       j_dcgettext                                 ; dcgettext
0000000000001f28         movsx      ecx, bpl
0000000000001f2c         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001f2f         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001f31         mov        edi, 0x7d                                   ; argument "__status" for method j_error
0000000000001f36         xor        eax, eax
0000000000001f38         call       j_error                                     ; error
0000000000001f3d         nop        dword [rax]

                     loc_1f40:
0000000000001f40         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; argument #1 for method parse_signal_action_params, optarg@@GLIBC_2.2.5, CODE XREF=main+246
0000000000001f47         mov        esi, 0x1                                    ; argument #2 for method parse_signal_action_params
0000000000001f4c         call       parse_signal_action_params                  ; parse_signal_action_params
0000000000001f51         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; argument #1 for method parse_block_signal_params, optarg@@GLIBC_2.2.5
0000000000001f58         xor        esi, esi                                    ; argument #2 for method parse_block_signal_params
0000000000001f5a         call       parse_block_signal_params                   ; parse_block_signal_params
0000000000001f5f         jmp        loc_1d30
0000000000001f64         align      8

                     loc_1f68:
0000000000001f68         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; argument #1 for method parse_signal_action_params, optarg@@GLIBC_2.2.5, CODE XREF=main+371
0000000000001f6f         xor        esi, esi                                    ; argument #2 for method parse_signal_action_params
0000000000001f71         call       parse_signal_action_params                  ; parse_signal_action_params
0000000000001f76         jmp        loc_1d30
0000000000001f7b         align      128

                     loc_1f80:
0000000000001f80         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; argument #1 for method parse_block_signal_params, optarg@@GLIBC_2.2.5, CODE XREF=main+365
0000000000001f87         mov        esi, 0x1                                    ; argument #2 for method parse_block_signal_params
0000000000001f8c         call       parse_block_signal_params                   ; parse_block_signal_params
0000000000001f91         jmp        loc_1d30
0000000000001f96         align      32

                     loc_1fa0:
0000000000001fa0         mov        byte [dev_debug], 0x1                       ; dev_debug, CODE XREF=main+266
0000000000001fa7         jmp        loc_1d30
0000000000001fac         align      16

                     loc_1fb0:
0000000000001fb0         mov        rcx, qword [usvars_used]                    ; usvars_used, CODE XREF=main+257
0000000000001fb7         cmp        rcx, qword [usvars_alloc]                   ; usvars_alloc
0000000000001fbe         mov        rbx, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000001fc5         mov        rax, rcx
0000000000001fc8         je         loc_26da

                     loc_1fce:
0000000000001fce         lea        rdx, qword [rax+1]                          ; CODE XREF=main+2746
0000000000001fd2         mov        qword [usvars_used], rdx                    ; usvars_used
0000000000001fd9         mov        rdx, qword [usvars]                         ; usvars
0000000000001fe0         mov        qword [rdx+rax*8], rbx
0000000000001fe4         jmp        loc_1d30
0000000000001fe9         align      16

                     loc_1ff0:
0000000000001ff0         mov        byte [rsp+0x148+var_138], 0x1               ; CODE XREF=main+322
0000000000001ff5         jmp        loc_1d30
0000000000001ffa         align      8192

                     loc_2000:
0000000000002000         cmp        eax, 0xffffff7d                             ; CODE XREF=main+313
0000000000002005         jne        loc_2e28

000000000000200b         lea        rax, qword [aAssafGordon]                   ; "Assaf Gordon"
0000000000002012         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002019         mov        rcx, qword [Version]                        ; Version
0000000000002020         push       0x0
0000000000002022         lea        r9, qword [aDavidMackenzie]                 ; "David MacKenzie"
0000000000002029         lea        r8, qword [aRichardMlynari]                 ; "Richard Mlynarik"
0000000000002030         push       rax
0000000000002031         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6c0b
0000000000002038         lea        rsi, qword [a10s2dSssn+21]                  ; 0x6b91
000000000000203f         xor        eax, eax
0000000000002041         call       version_etc                                 ; version_etc
0000000000002046         xor        edi, edi                                    ; argument "__status" for method j_exit
0000000000002048         call       j_exit                                      ; exit
                        ; endp
000000000000204d         align      16

                     loc_2050:
0000000000002050         cmp        r12b, 0x1                                   ; CODE XREF=main+547, main+559
0000000000002054         sbb        r15d, 0xffffffff
0000000000002058         cmp        dl, 0x24
000000000000205b         je         loc_22a8

0000000000002061         jle        loc_2098

0000000000002063         xor        r12d, r12d
0000000000002066         cmp        dl, 0x27
0000000000002069         je         loc_2288

000000000000206f         cmp        dl, 0x5c
0000000000002072         je         loc_1ecc

                     loc_2078:
0000000000002078         mov        edx, eax                                    ; CODE XREF=main+1067
000000000000207a         xor        r12d, r12d

                     loc_207d:
000000000000207d         add        r13, 0x1                                    ; CODE XREF=main+1583, main+1668, main+1702, main+1778
0000000000002081         test       dl, dl
0000000000002083         je         loc_20b9

                     loc_2085:
0000000000002085         mov        r8, qword [rbx]                             ; CODE XREF=main+1095

                     loc_2088:
0000000000002088         movsx      rsi, dl                                     ; CODE XREF=main+1614
000000000000208c         jmp        loc_1e88
0000000000002091         align      8

                     loc_2098:
0000000000002098         cmp        dl, 0x22                                    ; CODE XREF=main+1009
000000000000209b         jne        loc_2078

000000000000209d         mov        r12d, r14d
00000000000020a0         and        r12b, bpl
00000000000020a3         jne        loc_2f3b

                     loc_20a9:
00000000000020a9         or         ebp, r14d                                   ; CODE XREF=main+1683
00000000000020ac         mov        edx, eax
00000000000020ae         add        r13, 0x1
00000000000020b2         xor        ebp, 0x1
00000000000020b5         test       dl, dl
00000000000020b7         jne        loc_2085

                     loc_20b9:
00000000000020b9         or         bpl, r14b                                   ; CODE XREF=main+1043
00000000000020bc         mov        ebx, r15d
00000000000020bf         mov        r12, qword [rsp+0x148+var_110]
00000000000020c4         mov        r15, qword [rsp+0x148+var_108]
00000000000020c9         jne        loc_2f79

00000000000020cf         mov        rdi, qword [rsp+0x148+var_128]
00000000000020d4         add        rdi, 0x7                                    ; argument #1 for method xmalloc
00000000000020d8         call       xmalloc                                     ; xmalloc
00000000000020dd         mov        rbp, rax
00000000000020e0         mov        eax, dword [rsp+0x148+var_118]
00000000000020e4         lea        edi, dword [rax+rbx+2]
00000000000020e8         mov        rbx, r12
00000000000020eb         movsxd     rdi, edi
00000000000020ee         shl        rdi, 0x3                                    ; argument #1 for method xmalloc
00000000000020f2         call       xmalloc                                     ; xmalloc
00000000000020f7         lea        r14, qword [rax+8]
00000000000020fb         mov        dword [rbp], 0x4d4d5544
0000000000002102         mov        word [rbp+4], 0x59
0000000000002108         mov        qword [rax], rbp
000000000000210b         mov        r10, rax
000000000000210e         add        rbp, 0x6
0000000000002112         mov        r13, r14
0000000000002115         xor        r9d, r9d
0000000000002118         xor        r11d, r11d
000000000000211b         mov        r8d, 0x1

                     loc_2121:
0000000000002121         movzx      eax, byte [rbx]                             ; CODE XREF=main+1867, main+2129, main+2227, main+2586
0000000000002124         test       al, al
0000000000002126         je         loc_217e

                     loc_2128:
0000000000002128         cmp        al, 0x23                                    ; CODE XREF=main+1292
000000000000212a         je         loc_2528

0000000000002130         jle        loc_2370

0000000000002136         cmp        al, 0x27
0000000000002138         je         loc_24f4

000000000000213e         cmp        al, 0x5c
0000000000002140         je         loc_24c6

0000000000002146         cmp        al, 0x24
0000000000002148         je         loc_23ce

                     loc_214e:
000000000000214e         mov        rcx, rbx                                    ; CODE XREF=main+1806

                     loc_2151:
0000000000002151         test       r8b, r8b                                    ; CODE XREF=main+1821, main+1892, main+2154, main+2175, main+2186, main+2262, main+2312, main+2567, main+3219, main+3649, main+3697
0000000000002154         lea        rdx, qword [rbp+1]
0000000000002158         je         loc_23c0

000000000000215e         mov        byte [rbp], 0x0
0000000000002162         mov        qword [r13], rdx
0000000000002166         add        rbp, 0x2
000000000000216a         add        r13, 0x8

                     loc_216e:
000000000000216e         lea        rbx, qword [rcx+1]                          ; CODE XREF=main+1881, main+2251
0000000000002172         mov        byte [rdx], al
0000000000002174         xor        r8d, r8d
0000000000002177         movzx      eax, byte [rbx]
000000000000217a         test       al, al
000000000000217c         jne        loc_2128

                     loc_217e:
000000000000217e         cmp        byte [dev_debug], 0x0                       ; dev_debug, CODE XREF=main+1206, main+2235, main+3175
0000000000002185         mov        qword [r13], 0x0
000000000000218d         mov        rax, qword [r15]
0000000000002190         mov        byte [rbp], 0x0
0000000000002194         mov        qword [r10], rax
0000000000002197         je         loc_268f

000000000000219d         cmp        qword [r10+8], 0x0
00000000000021a2         je         loc_2200

00000000000021a4         mov        rdi, r12                                    ; argument #1 for method quote
00000000000021a7         mov        qword [rsp+0x148+var_128], r10
00000000000021ac         call       quote                                       ; quote
00000000000021b1         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
00000000000021b8         lea        rdx, qword [aSplitSSn]                      ; "split -S:  %s\\n"
00000000000021bf         mov        rcx, rax
00000000000021c2         mov        esi, 0x1
00000000000021c7         xor        eax, eax
00000000000021c9         call       j___fprintf_chk                             ; __fprintf_chk
00000000000021ce         cmp        byte [dev_debug], 0x0                       ; dev_debug
00000000000021d5         mov        r10, qword [rsp+0x148+var_128]
00000000000021da         jne        loc_2c4e

00000000000021e0         mov        rbx, r10

                     loc_21e3:
00000000000021e3         mov        rdi, qword [r14]                            ; CODE XREF=main+3563, main+4112
00000000000021e6         movzx      eax, byte [dev_debug]                       ; dev_debug
00000000000021ed         jmp        loc_21f8
00000000000021ef         align      16

                     loc_21f0:
00000000000021f0         test       al, al                                      ; CODE XREF=main+1419
00000000000021f2         jne        loc_2a35

                     loc_21f8:
00000000000021f8         test       rdi, rdi                                    ; CODE XREF=main+1405
00000000000021fb         jne        loc_21f0

00000000000021fd         mov        r10, rbx

                     loc_2200:
0000000000002200         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+1330, main+2596, main+2618
0000000000002207         mov        ecx, dword [rsp+0x148+var_100]
000000000000220b         cmp        eax, ecx
000000000000220d         jge        loc_2244

000000000000220f         mov        edi, eax
0000000000002211         not        edi
0000000000002213         lea        edx, dword [rdi+rcx]
0000000000002216         lea        rcx, qword [r15+rax*8]
000000000000221a         xor        eax, eax
000000000000221c         lea        rsi, qword [0x8+rdx*8]
0000000000002224         nop        dword [rax]

                     loc_2228:
0000000000002228         mov        rdx, qword [rcx+rax]                        ; CODE XREF=main+1479
000000000000222c         mov        qword [r14+rax], rdx
0000000000002230         add        rax, 0x8
0000000000002234         cmp        rsi, rax
0000000000002237         jne        loc_2228

0000000000002239         mov        eax, dword [rsp+0x148+var_100]
000000000000223d         add        eax, edi
000000000000223f         lea        r14, qword [r14+rax*8+8]

                     loc_2244:
0000000000002244         mov        qword [r14], 0x0                            ; CODE XREF=main+1437
000000000000224b         cmp        qword [r10], 0x0
000000000000224f         je         loc_2b21

0000000000002255         mov        rax, r10
0000000000002258         xor        edx, edx
000000000000225a         nop        word [rax+rax]

                     loc_2260:
0000000000002260         add        rax, 0x8                                    ; CODE XREF=main+1531
0000000000002264         add        edx, 0x1
0000000000002267         cmp        qword [rax], 0x0
000000000000226b         jne        loc_2260

000000000000226d         mov        dword [rsp+0x148+var_100], edx

                     loc_2271:
0000000000002271         mov        dword [optind@@GLIBC_2.2.5], 0x0            ; optind@@GLIBC_2.2.5, CODE XREF=main+3769
000000000000227b         mov        r15, r10
000000000000227e         jmp        loc_1d30
0000000000002283         align      8

                     loc_2288:
0000000000002288         test       r14b, r14b                                  ; CODE XREF=main+589, main+1017
000000000000228b         je         loc_2296

000000000000228d         test       bpl, bpl
0000000000002290         jne        loc_2f5a

                     loc_2296:
0000000000002296         or         r14d, ebp                                   ; CODE XREF=main+1563
0000000000002299         mov        edx, eax
000000000000229b         xor        r14d, 0x1
000000000000229f         jmp        loc_207d
00000000000022a4         align      8

                     loc_22a8:
00000000000022a8         xor        r12d, r12d                                  ; CODE XREF=main+1003

                     loc_22ab:
00000000000022ab         test       r14b, r14b                                  ; CODE XREF=main+574
00000000000022ae         je         loc_2320

00000000000022b0         add        r13, 0x1
00000000000022b4         test       al, al
00000000000022b6         je         loc_2f79

00000000000022bc         mov        edx, eax
00000000000022be         jmp        loc_2088

                     loc_22c3:
00000000000022c3         movabs     rcx, 0x2400000000000027                     ; CODE XREF=main+669
00000000000022cd         bt         rcx, rdx
00000000000022d1         jae        loc_1f13

00000000000022d7         nop        word [rax+rax]

                     loc_22e0:
00000000000022e0         cmp        al, 0x5f                                    ; CODE XREF=main+657
00000000000022e2         movzx      edx, byte [r13+2]
00000000000022e7         sete       al
00000000000022ea         add        r13, 0x1
00000000000022ee         movzx      eax, al
00000000000022f1         add        r15d, eax
00000000000022f4         jmp        loc_207d
00000000000022f9         align      256

                     loc_2300:
0000000000002300         cmp        dl, 0x22                                    ; CODE XREF=main+580
0000000000002303         je         loc_20a9

                     loc_2309:
0000000000002309         mov        edx, eax                                    ; CODE XREF=main+598
000000000000230b         xor        r14d, r14d
000000000000230e         xor        ebp, ebp
0000000000002310         mov        r12d, 0x1
0000000000002316         jmp        loc_207d
000000000000231b         align      32

                     loc_2320:
0000000000002320         mov        rdi, r13                                    ; argument #1 for method extract_varname, CODE XREF=main+1598
0000000000002323         call       extract_varname                             ; extract_varname
0000000000002328         test       rax, rax
000000000000232b         je         loc_2e70

0000000000002331         mov        rdi, rax                                    ; argument "__name" for method j_getenv
0000000000002334         call       j_getenv                                    ; getenv
0000000000002339         test       rax, rax
000000000000233c         mov        rdi, rax
000000000000233f         je         loc_235d

0000000000002341         mov        rcx, qword [rsp+0x148+var_120]
0000000000002346         mov        eax, r14d
0000000000002349         repne scasb al, byte [rdi]
000000000000234b         mov        rax, qword [rsp+0x148+var_128]
0000000000002350         not        rcx
0000000000002353         lea        rax, qword [rax+rcx-1]
0000000000002358         mov        qword [rsp+0x148+var_128], rax

                     loc_235d:
000000000000235d         movzx      edx, byte [r13+1]                           ; CODE XREF=main+1743
0000000000002362         jmp        loc_207d
0000000000002367         align      16

                     loc_2370:
0000000000002370         cmp        al, 0x20                                    ; CODE XREF=main+1216
0000000000002372         je         loc_2384

0000000000002374         cmp        al, 0x22
0000000000002376         je         loc_2540

000000000000237c         cmp        al, 0x9
000000000000237e         jne        loc_214e

                     loc_2384:
0000000000002384         mov        edi, r11d                                   ; CODE XREF=main+1794
0000000000002387         mov        rcx, rbx
000000000000238a         or         dil, r9b
000000000000238d         jne        loc_2151

0000000000002393         lea        rsi, qword [aInvalidSequenc+29]             ; argument "__accept" for method j_strspn, 0x6caf
000000000000239a         mov        rdi, rbx                                    ; argument "__s" for method j_strspn
000000000000239d         mov        qword [rsp+0x148+var_128], r10
00000000000023a2         call       j_strspn                                    ; strspn
00000000000023a7         xor        r9d, r9d
00000000000023aa         add        rbx, rax
00000000000023ad         xor        r11d, r11d
00000000000023b0         mov        r8d, 0x1
00000000000023b6         mov        r10, qword [rsp+0x148+var_128]
00000000000023bb         jmp        loc_2121

                     loc_23c0:
00000000000023c0         mov        rsi, rdx                                    ; CODE XREF=main+1256
00000000000023c3         mov        rdx, rbp
00000000000023c6         mov        rbp, rsi
00000000000023c9         jmp        loc_216e

                     loc_23ce:
00000000000023ce         test       r9b, r9b                                    ; CODE XREF=main+1240
00000000000023d1         mov        rcx, rbx
00000000000023d4         jne        loc_2151

00000000000023da         mov        rdi, rbx                                    ; argument #1 for method extract_varname
00000000000023dd         mov        byte [rsp+0x148+var_F9], r11b
00000000000023e2         mov        qword [rsp+0x148+var_108], r10
00000000000023e7         mov        byte [rsp+0x148+var_110], r9b
00000000000023ec         mov        byte [rsp+0x148+var_118], r8b
00000000000023f1         call       extract_varname                             ; extract_varname
00000000000023f6         mov        rdi, rax                                    ; argument "__name" for method j_getenv
00000000000023f9         mov        qword [rsp+0x148+var_120], rax
00000000000023fe         call       j_getenv                                    ; getenv
0000000000002403         test       rax, rax
0000000000002406         mov        qword [rsp+0x148+var_128], rax
000000000000240b         mov        rcx, qword [rsp+0x148+var_120]
0000000000002410         movzx      r8d, byte [rsp+0x148+var_118]
0000000000002416         movzx      r9d, byte [rsp+0x148+var_110]
000000000000241c         mov        r10, qword [rsp+0x148+var_108]
0000000000002421         movzx      r11d, byte [rsp+0x148+var_F9]
0000000000002427         je         loc_2b2e

000000000000242d         test       r8b, r8b
0000000000002430         je         loc_2445

0000000000002432         lea        rax, qword [rbp+1]
0000000000002436         mov        byte [rbp], 0x0
000000000000243a         add        r13, 0x8
000000000000243e         mov        qword [r13-8], rax
0000000000002442         mov        rbp, rax

                     loc_2445:
0000000000002445         cmp        byte [dev_debug], 0x0                       ; dev_debug, CODE XREF=main+1984
000000000000244c         jne        loc_2bf8

                     loc_2452:
0000000000002452         mov        rsi, qword [rsp+0x148+var_128]              ; argument "__src" for method j_stpcpy, CODE XREF=main+4057
0000000000002457         mov        rdi, rbp                                    ; argument "__dest" for method j_stpcpy
000000000000245a         mov        byte [rsp+0x148+var_110], r11b
000000000000245f         mov        qword [rsp+0x148+var_118], r10
0000000000002464         mov        byte [rsp+0x148+var_120], r9b
0000000000002469         call       j_stpcpy                                    ; stpcpy
000000000000246e         movzx      r9d, byte [rsp+0x148+var_120]
0000000000002474         movzx      r11d, byte [rsp+0x148+var_110]
000000000000247a         mov        rbp, rax
000000000000247d         mov        r10, qword [rsp+0x148+var_118]
0000000000002482         xor        r8d, r8d

                     loc_2485:
0000000000002485         mov        rdi, rbx                                    ; argument "__s" for method j_strchr, CODE XREF=main+3781, main+3856
0000000000002488         mov        esi, 0x7d                                   ; argument "__c" for method j_strchr
000000000000248d         mov        byte [rsp+0x148+var_110], r11b
0000000000002492         mov        qword [rsp+0x148+var_118], r10
0000000000002497         mov        byte [rsp+0x148+var_120], r9b
000000000000249c         mov        byte [rsp+0x148+var_128], r8b
00000000000024a1         call       j_strchr                                    ; strchr
00000000000024a6         movzx      r8d, byte [rsp+0x148+var_128]
00000000000024ac         lea        rbx, qword [rax+1]
00000000000024b0         movzx      r9d, byte [rsp+0x148+var_120]
00000000000024b6         mov        r10, qword [rsp+0x148+var_118]
00000000000024bb         movzx      r11d, byte [rsp+0x148+var_110]
00000000000024c1         jmp        loc_2121

                     loc_24c6:
00000000000024c6         test       r9b, r9b                                    ; CODE XREF=main+1232
00000000000024c9         lea        rcx, qword [rbx+1]
00000000000024cd         movzx      edx, byte [rbx+1]
00000000000024d1         je         loc_2557

00000000000024d7         cmp        dl, 0x5c
00000000000024da         je         loc_2151

00000000000024e0         cmp        dl, 0x27
00000000000024e3         mov        esi, 0x27
00000000000024e8         cmove      eax, esi
00000000000024eb         cmovne     rcx, rbx
00000000000024ef         jmp        loc_2151

                     loc_24f4:
00000000000024f4         test       r11b, r11b                                  ; CODE XREF=main+1224
00000000000024f7         mov        rcx, rbx
00000000000024fa         jne        loc_2151

0000000000002500         xor        r9d, 0x1
0000000000002504         test       r8b, r8b
0000000000002507         je         loc_251c

                     loc_2509:
0000000000002509         lea        rax, qword [rbp+1]                          ; CODE XREF=main+2277
000000000000250d         mov        byte [rbp], 0x0
0000000000002511         add        r13, 0x8
0000000000002515         mov        qword [r13-8], rax
0000000000002519         mov        rbp, rax

                     loc_251c:
000000000000251c         add        rbx, 0x1                                    ; CODE XREF=main+2199, main+2275
0000000000002520         xor        r8d, r8d
0000000000002523         jmp        loc_2121

                     loc_2528:
0000000000002528         test       r8b, r8b                                    ; CODE XREF=main+1210
000000000000252b         jne        loc_217e

0000000000002531         mov        rdx, rbp
0000000000002534         mov        rcx, rbx
0000000000002537         add        rbp, 0x1
000000000000253b         jmp        loc_216e

                     loc_2540:
0000000000002540         test       r9b, r9b                                    ; CODE XREF=main+1798
0000000000002543         mov        rcx, rbx
0000000000002546         jne        loc_2151

000000000000254c         xor        r11d, 0x1
0000000000002550         test       r8b, r8b
0000000000002553         je         loc_251c

0000000000002555         jmp        loc_2509

                     loc_2557:
0000000000002557         lea        eax, dword [rdx-0x22]                       ; CODE XREF=main+2145
000000000000255a         cmp        al, 0x3a
000000000000255c         ja         loc_2666

0000000000002562         movabs     rbx, 0x400000000000027
000000000000256c         bt         rbx, rax
0000000000002570         jae        loc_28d4

0000000000002576         mov        eax, edx
0000000000002578         jmp        loc_2151

                     loc_257d:
000000000000257d         mov        r13d, dword [optind@@GLIBC_2.2.5]           ; optind@@GLIBC_2.2.5, CODE XREF=main+224
0000000000002584         cmp        r13d, dword [rsp+0x148+var_100]
0000000000002589         jl         loc_26af

                     loc_258f:
000000000000258f         cmp        byte [rsp+0x148+var_130], 0x0               ; CODE XREF=main+2644
0000000000002594         je         loc_29be

                     loc_259a:
000000000000259a         cmp        byte [dev_debug], 0x0                       ; dev_debug, CODE XREF=main+2661
00000000000025a1         je         loc_25c0

00000000000025a3         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5
00000000000025aa         lea        rdi, qword [aCleaningEnviro]                ; argument "__ptr" for method j_fwrite, "cleaning environ\\n"
00000000000025b1         mov        edx, 0x11                                   ; argument "__n" for method j_fwrite
00000000000025b6         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
00000000000025bb         call       j_fwrite                                    ; fwrite

                     loc_25c0:
00000000000025c0         lea        rax, qword [dummy_environ.7817]             ; dummy_environ.7817, CODE XREF=main+2353
00000000000025c7         mov        r13d, dword [optind@@GLIBC_2.2.5]           ; optind@@GLIBC_2.2.5
00000000000025ce         mov        qword [__environ@@GLIBC_2.2.5], rax         ; __environ@@GLIBC_2.2.5

                     loc_25d5:
00000000000025d5         mov        r14d, dword [rsp+0x148+var_100]             ; CODE XREF=main+3414, main+3575
00000000000025da         cmp        r13d, r14d
00000000000025dd         jge        loc_272f

00000000000025e3         lea        rbp, qword [aSetenvSn]                      ; "setenv:   %s\\n"
00000000000025ea         jmp        loc_2622
00000000000025ec         align      16

                     loc_25f0:
00000000000025f0         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+2521, main+2548
00000000000025f7         mov        rdi, qword [r15+rax*8]                      ; argument "__string" for method j_putenv
00000000000025fb         call       j_putenv                                    ; putenv
0000000000002600         test       eax, eax
0000000000002602         jne        loc_302a

0000000000002608         mov        eax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5
000000000000260e         lea        r13d, dword [rax+1]
0000000000002612         cmp        r13d, r14d
0000000000002615         mov        dword [optind@@GLIBC_2.2.5], r13d           ; optind@@GLIBC_2.2.5
000000000000261c         jge        loc_272f

                     loc_2622:
0000000000002622         movsxd     rax, r13d                                   ; CODE XREF=main+2426
0000000000002625         mov        esi, 0x3d                                   ; argument "__c" for method j_strchr
000000000000262a         mov        r12, qword [r15+rax*8]
000000000000262e         mov        rdi, r12                                    ; argument "__s" for method j_strchr
0000000000002631         call       j_strchr                                    ; strchr
0000000000002636         test       rax, rax
0000000000002639         mov        rbx, rax
000000000000263c         je         loc_27b0

0000000000002642         cmp        byte [dev_debug], 0x0                       ; dev_debug
0000000000002649         je         loc_25f0

000000000000264b         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000002652         mov        rcx, r12
0000000000002655         mov        rdx, rbp
0000000000002658         mov        esi, 0x1
000000000000265d         xor        eax, eax
000000000000265f         call       j___fprintf_chk                             ; __fprintf_chk
0000000000002664         jmp        loc_25f0

                     loc_2666:
0000000000002666         cmp        dl, 0x5f                                    ; CODE XREF=main+2284
0000000000002669         jne        loc_28d4

000000000000266f         test       r11b, r11b
0000000000002672         mov        eax, 0x20
0000000000002677         jne        loc_2151

000000000000267d         add        rbx, 0x2
0000000000002681         mov        r9d, r11d
0000000000002684         mov        r8d, 0x1
000000000000268a         jmp        loc_2121

                     loc_268f:
000000000000268f         cmp        qword [r10+8], 0x0                          ; CODE XREF=main+1319
0000000000002694         je         loc_2200

000000000000269a         nop        word [rax+rax]

                     loc_26a0:
00000000000026a0         add        r14, 0x8                                    ; CODE XREF=main+2616
00000000000026a4         cmp        qword [r14], 0x0
00000000000026a8         jne        loc_26a0

00000000000026aa         jmp        loc_2200

                     loc_26af:
00000000000026af         movsxd     rax, r13d                                   ; CODE XREF=main+2329
00000000000026b2         lea        rsi, qword [aLibs+10]                       ; argument "__s2" for method j_strcmp, 0x777a
00000000000026b9         mov        rdi, qword [r15+rax*8]                      ; argument "__s1" for method j_strcmp
00000000000026bd         call       j_strcmp                                    ; strcmp
00000000000026c2         test       eax, eax
00000000000026c4         jne        loc_258f

00000000000026ca         add        r13d, 0x1
00000000000026ce         mov        dword [optind@@GLIBC_2.2.5], r13d           ; optind@@GLIBC_2.2.5
00000000000026d5         jmp        loc_259a

                     loc_26da:
00000000000026da         mov        rdi, qword [usvars]                         ; usvars, CODE XREF=main+856
00000000000026e1         test       rdi, rdi
00000000000026e4         je         loc_2a6c

00000000000026ea         movabs     rax, 0xaaaaaaaaaaaaaa9
00000000000026f4         cmp        rcx, rax
00000000000026f7         ja         loc_2a99

00000000000026fd         mov        rax, rcx
0000000000002700         shr        rax, 0x1
0000000000002703         lea        rcx, qword [rcx+rax+1]

                     loc_2708:
0000000000002708         lea        rsi, qword [rcx*8]                          ; argument #2 for method xrealloc, CODE XREF=main+3619
0000000000002710         mov        qword [usvars_alloc], rcx                   ; usvars_alloc
0000000000002717         call       xrealloc                                    ; xrealloc
000000000000271c         mov        qword [usvars], rax                         ; usvars
0000000000002723         mov        rax, qword [usvars_used]                    ; usvars_used
000000000000272a         jmp        loc_1fce

                     loc_272f:
000000000000272f         cmp        qword [rsp+0x148+var_140], 0x0              ; CODE XREF=main+2413, main+2476
0000000000002735         je         loc_2742

0000000000002737         cmp        r13d, dword [rsp+0x148+var_100]
000000000000273c         jge        loc_2ffa

                     loc_2742:
0000000000002742         mov        rbx, qword [__environ@@GLIBC_2.2.5]         ; __environ@@GLIBC_2.2.5, CODE XREF=main+2757
0000000000002749         mov        rdx, qword [rbx]
000000000000274c         test       rdx, rdx
000000000000274f         je         loc_2785

0000000000002751         cmp        byte [rsp+0x148+var_138], 0x1
0000000000002756         lea        r12, qword [aCannotSetS+14]                 ; 0x6d89
000000000000275d         sbb        ebp, ebp
000000000000275f         and        ebp, 0xa
0000000000002762         nop        word [rax+rax]

                     loc_2768:
0000000000002768         add        rbx, 0x8                                    ; CODE XREF=main+2835
000000000000276c         xor        eax, eax
000000000000276e         mov        ecx, ebp
0000000000002770         mov        rsi, r12
0000000000002773         mov        edi, 0x1
0000000000002778         call       j___printf_chk                              ; __printf_chk
000000000000277d         mov        rdx, qword [rbx]
0000000000002780         test       rdx, rdx
0000000000002783         jne        loc_2768

                     loc_2785:
0000000000002785         xor        eax, eax                                    ; CODE XREF=main+2783

                     loc_2787:
0000000000002787         mov        rcx, qword [rsp+0x148+var_40]               ; CODE XREF=main+3401, main+3971, main+4531
000000000000278f         xor        rcx, qword [fs:0x28]
0000000000002798         jne        loc_2ff5

000000000000279e         add        rsp, 0x118
00000000000027a5         pop        rbx
00000000000027a6         pop        rbp
00000000000027a7         pop        r12
00000000000027a9         pop        r13
00000000000027ab         pop        r14
00000000000027ad         pop        r15
00000000000027af         ret
                        ; endp

                     loc_27b0:
00000000000027b0         cmp        r13d, dword [rsp+0x148+var_100]             ; CODE XREF=main+2508
00000000000027b5         jge        loc_27c2

00000000000027b7         cmp        byte [rsp+0x148+var_138], 0x0
00000000000027bc         jne        loc_2ab6

                     loc_27c2:
00000000000027c2         mov        r13d, 0x4                                   ; CODE XREF=main+2885
00000000000027c8         mov        r12d, 0x1
00000000000027ce         mov        qword [rsp+0x148+var_138], r15
00000000000027d3         jmp        loc_27ea
00000000000027d5         align      8

                     loc_27d8:
00000000000027d8         add        r12d, 0x1                                   ; CODE XREF=main+2951, main+3048, main+3080, main+3167
00000000000027dc         add        r13, 0x4
00000000000027e0         cmp        r12d, 0x41
00000000000027e4         je         loc_2908

                     loc_27ea:
00000000000027ea         mov        rax, qword [signals]                        ; signals, CODE XREF=main+2915
00000000000027f1         mov        eax, dword [rax+r13]
00000000000027f5         test       eax, eax
00000000000027f7         je         loc_27d8

00000000000027f9         lea        r15, qword [rsp+0x148+var_F8]
00000000000027fe         lea        ebp, dword [rax-2]
0000000000002801         xor        esi, esi                                    ; argument "__act" for method j_sigaction
0000000000002803         mov        edi, r12d                                   ; argument "__sig" for method j_sigaction
0000000000002806         lea        ebx, dword [rax-1]
0000000000002809         mov        rdx, r15                                    ; argument "__oact" for method j_sigaction
000000000000280c         and        ebp, 0xfffffffd
000000000000280f         call       j_sigaction                                 ; sigaction
0000000000002814         test       eax, eax
0000000000002816         mov        r14d, eax
0000000000002819         je         loc_2823

000000000000281b         test       ebp, ebp
000000000000281d         jne        loc_2fc6

                     loc_2823:
0000000000002823         test       r14d, r14d                                  ; CODE XREF=main+2985
0000000000002826         jne        loc_2851

0000000000002828         xor        eax, eax
000000000000282a         cmp        ebx, 0x1
000000000000282d         mov        rsi, r15                                    ; argument "__act" for method j_sigaction
0000000000002830         seta       al
0000000000002833         mov        edi, r12d                                   ; argument "__sig" for method j_sigaction
0000000000002836         xor        edx, edx                                    ; argument "__oact" for method j_sigaction
0000000000002838         mov        qword [rsp+0x148+var_F8], rax
000000000000283d         call       j_sigaction                                 ; sigaction
0000000000002842         test       eax, eax
0000000000002844         mov        r14d, eax
0000000000002847         je         loc_2851

0000000000002849         test       ebp, ebp
000000000000284b         jne        loc_2ea4

                     loc_2851:
0000000000002851         cmp        byte [dev_debug], 0x0                       ; dev_debug, CODE XREF=main+2998, main+3031
0000000000002858         je         loc_27d8

000000000000285e         lea        rbp, qword [rsp+0x148+var_58]
0000000000002866         mov        edi, r12d
0000000000002869         mov        rsi, rbp
000000000000286c         call       sig2str                                     ; sig2str
0000000000002871         cmp        byte [dev_debug], 0x0                       ; dev_debug
0000000000002878         je         loc_27d8

000000000000287e         lea        rcx, qword [aInvalidSequenc+31]             ; 0x6cb1
0000000000002885         lea        rax, qword [aFailureIgnored]                ; " (failure ignored)"
000000000000288c         test       r14d, r14d
000000000000288f         lea        r9, qword [aDefault]                        ; "DEFAULT"
0000000000002896         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
000000000000289d         lea        rdx, qword [aResetSignalSDT]                ; "Reset signal %s (%d) to %s%s\\n"
00000000000028a4         cmove      rax, rcx
00000000000028a8         cmp        ebx, 0x1
00000000000028ab         lea        rbx, qword [aIgnore]                        ; "IGNORE"
00000000000028b2         mov        r8d, r12d
00000000000028b5         mov        rcx, rbp
00000000000028b8         mov        esi, 0x1
00000000000028bd         cmova      r9, rbx
00000000000028c1         sub        rsp, 0x8
00000000000028c5         push       rax
00000000000028c6         xor        eax, eax
00000000000028c8         call       j___fprintf_chk                             ; __fprintf_chk
00000000000028cd         pop        rax
00000000000028ce         pop        rdx
00000000000028cf         jmp        loc_27d8

                     loc_28d4:
00000000000028d4         cmp        dl, 0x63                                    ; CODE XREF=main+2304, main+2553
00000000000028d7         je         loc_217e

00000000000028dd         cmp        dl, 0x72
00000000000028e0         je         loc_2e14

00000000000028e6         jg         loc_2a9e

00000000000028ec         cmp        dl, 0x66
00000000000028ef         je         loc_2adc

00000000000028f5         cmp        dl, 0x6e
00000000000028f8         jne        loc_300b

00000000000028fe         mov        eax, 0xa
0000000000002903         jmp        loc_2151

                     loc_2908:
0000000000002908         call       j___errno_location                          ; __errno_location, CODE XREF=main+2932
000000000000290d         cmp        byte [sig_mask_changed], 0x0                ; sig_mask_changed
0000000000002914         mov        r15, qword [rsp+0x148+var_138]
0000000000002919         mov        qword [rsp+0x148+var_138], rax
000000000000291e         jne        loc_2cfe

                     loc_2924:
0000000000002924         cmp        byte [report_signal_handling], 0x0          ; report_signal_handling, CODE XREF=main+4469
000000000000292b         je         loc_2932

000000000000292d         call       list_signal_handling                        ; list_signal_handling

                     loc_2932:
0000000000002932         cmp        qword [rsp+0x148+var_140], 0x0              ; CODE XREF=main+3259
0000000000002938         je         loc_2959

000000000000293a         cmp        byte [dev_debug], 0x0                       ; dev_debug
0000000000002941         jne        loc_2ae6

                     loc_2947:
0000000000002947         mov        rdi, qword [rsp+0x148+var_140]              ; argument "__path" for method j_chdir, CODE XREF=main+3746
000000000000294c         call       j_chdir                                     ; chdir
0000000000002951         test       eax, eax
0000000000002953         jne        loc_3093

                     loc_2959:
0000000000002959         cmp        byte [dev_debug], 0x0                       ; dev_debug, CODE XREF=main+3272
0000000000002960         jne        loc_2c85

                     loc_2966:
0000000000002966         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+4233
000000000000296d         lea        rax, qword [r15+rax*8]
0000000000002971         mov        rdi, qword [rax]                            ; argument "__file" for method j_execvp
0000000000002974         mov        rsi, rax                                    ; argument "__argv" for method j_execvp
0000000000002977         call       j_execvp                                    ; execvp
000000000000297c         mov        rax, qword [rsp+0x148+var_138]
0000000000002981         cmp        dword [rax], 0x2
0000000000002984         je         loc_2b85

000000000000298a         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5
0000000000002991         mov        rdi, qword [r15+rax*8]                      ; argument #1 for method quote
0000000000002995         call       quote                                       ; quote
000000000000299a         mov        rcx, rax
000000000000299d         mov        rax, qword [rsp+0x148+var_138]
00000000000029a2         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x7735
00000000000029a9         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000029ab         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000029ad         xor        eax, eax
00000000000029af         call       j_error                                     ; error
00000000000029b4         mov        eax, 0x7e
00000000000029b9         jmp        loc_2787

                     loc_29be:
00000000000029be         cmp        qword [usvars_used], 0x0                    ; usvars_used, CODE XREF=main+2340
00000000000029c6         je         loc_25d5

00000000000029cc         mov        r13, qword [usvars]                         ; usvars
00000000000029d3         xor        r12d, r12d
00000000000029d6         lea        rbp, qword [aUnsetSn]                       ; "unset:    %s\\n"
00000000000029dd         jmp        loc_2a07
00000000000029df         align      32

                     loc_29e0:
00000000000029e0         mov        r13, qword [usvars]                         ; usvars, CODE XREF=main+3494, main+3523
00000000000029e7         add        rbx, r13
00000000000029ea         mov        rdi, qword [rbx]                            ; argument "__name" for method j_unsetenv
00000000000029ed         call       j_unsetenv                                  ; unsetenv
00000000000029f2         test       eax, eax
00000000000029f4         jne        loc_2edd

00000000000029fa         add        r12, 0x1
00000000000029fe         cmp        r12, qword [usvars_used]                    ; usvars_used
0000000000002a05         jae        loc_2a60

                     loc_2a07:
0000000000002a07         cmp        byte [dev_debug], 0x0                       ; dev_debug, CODE XREF=main+3437
0000000000002a0e         lea        rbx, qword [r12*8]
0000000000002a16         je         loc_29e0

0000000000002a18         mov        rcx, qword [r13+r12*8]
0000000000002a1d         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000002a24         mov        rdx, rbp
0000000000002a27         mov        esi, 0x1
0000000000002a2c         xor        eax, eax
0000000000002a2e         call       j___fprintf_chk                             ; __fprintf_chk
0000000000002a33         jmp        loc_29e0

                     loc_2a35:
0000000000002a35         call       quote                                       ; quote, CODE XREF=main+1410
0000000000002a3a         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000002a41         lea        rdx, qword [aSn]                            ; "     &    %s\\n"
0000000000002a48         mov        rcx, rax
0000000000002a4b         mov        esi, 0x1
0000000000002a50         xor        eax, eax
0000000000002a52         add        r14, 0x8
0000000000002a56         call       j___fprintf_chk                             ; __fprintf_chk
0000000000002a5b         jmp        loc_21e3

                     loc_2a60:
0000000000002a60         mov        r13d, dword [optind@@GLIBC_2.2.5]           ; optind@@GLIBC_2.2.5, CODE XREF=main+3477
0000000000002a67         jmp        loc_25d5

                     loc_2a6c:
0000000000002a6c         test       rcx, rcx                                    ; CODE XREF=main+2676
0000000000002a6f         mov        eax, 0x10
0000000000002a74         mov        edx, 0x8
0000000000002a79         cmove      rcx, rax
0000000000002a7d         mov        rax, rdx
0000000000002a80         xor        esi, esi
0000000000002a82         mul        rcx
0000000000002a85         jo         loc_2ed3

                     loc_2a8b:
0000000000002a8b         test       rax, rax                                    ; CODE XREF=main+4712
0000000000002a8e         js         loc_2a99

0000000000002a90         test       rsi, rsi
0000000000002a93         je         loc_2708

                     loc_2a99:
0000000000002a99         call       xalloc_die                                  ; xalloc_die, CODE XREF=main+2695, main+3614
                        ; endp

                     loc_2a9e:
0000000000002a9e         cmp        dl, 0x74                                    ; CODE XREF=main+3190
0000000000002aa1         je         loc_2b17

0000000000002aa3         cmp        dl, 0x76
0000000000002aa6         jne        loc_300b

0000000000002aac         mov        eax, 0xb
0000000000002ab1         jmp        loc_2151

                     loc_2ab6:
0000000000002ab6         lea        rsi, qword [aCannotSpecifyN]                ; "cannot specify --null (-0) with command", CODE XREF=main+2892
0000000000002abd         mov        edx, 0x5

                     loc_2ac2:
0000000000002ac2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=main+4603, main+5014
0000000000002ac4         call       j_dcgettext                                 ; dcgettext
0000000000002ac9         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002acb         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002ace         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002ad0         xor        eax, eax
0000000000002ad2         call       j_error                                     ; error
0000000000002ad7         jmp        loc_1d85

                     loc_2adc:
0000000000002adc         mov        eax, 0xc                                    ; CODE XREF=main+3199
0000000000002ae1         jmp        loc_2151

                     loc_2ae6:
0000000000002ae6         mov        rsi, qword [rsp+0x148+var_140]              ; CODE XREF=main+3281
0000000000002aeb         mov        edi, 0x4
0000000000002af0         call       quotearg_style                              ; quotearg_style
0000000000002af5         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000002afc         lea        rdx, qword [aChdirSn]                       ; "chdir:    %s\\n"
0000000000002b03         mov        rcx, rax
0000000000002b06         mov        esi, 0x1
0000000000002b0b         xor        eax, eax
0000000000002b0d         call       j___fprintf_chk                             ; __fprintf_chk
0000000000002b12         jmp        loc_2947

                     loc_2b17:
0000000000002b17         mov        eax, 0x9                                    ; CODE XREF=main+3633
0000000000002b1c         jmp        loc_2151

                     loc_2b21:
0000000000002b21         mov        dword [rsp+0x148+var_100], 0x0              ; CODE XREF=main+1503
0000000000002b29         jmp        loc_2271

                     loc_2b2e:
0000000000002b2e         cmp        byte [dev_debug], 0x0                       ; dev_debug, CODE XREF=main+1975
0000000000002b35         je         loc_2485

0000000000002b3b         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000002b42         lea        rdx, qword [aReplacingSWith]                ; "replacing ${%s} with null string\\n"
0000000000002b49         mov        esi, 0x1
0000000000002b4e         xor        eax, eax
0000000000002b50         mov        byte [rsp+0x148+var_110], r11b
0000000000002b55         mov        qword [rsp+0x148+var_118], r10
0000000000002b5a         mov        byte [rsp+0x148+var_120], r9b
0000000000002b5f         mov        byte [rsp+0x148+var_128], r8b
0000000000002b64         call       j___fprintf_chk                             ; __fprintf_chk
0000000000002b69         movzx      r11d, byte [rsp+0x148+var_110]
0000000000002b6f         mov        r10, qword [rsp+0x148+var_118]
0000000000002b74         movzx      r9d, byte [rsp+0x148+var_120]
0000000000002b7a         movzx      r8d, byte [rsp+0x148+var_128]
0000000000002b80         jmp        loc_2485

                     loc_2b85:
0000000000002b85         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+3348
0000000000002b8c         mov        rdi, qword [r15+rax*8]                      ; argument #1 for method quote
0000000000002b90         call       quote                                       ; quote
0000000000002b95         mov        rcx, rax
0000000000002b98         mov        rax, qword [rsp+0x148+var_138]
0000000000002b9d         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x7735
0000000000002ba4         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002ba6         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002ba8         xor        eax, eax
0000000000002baa         call       j_error                                     ; error
0000000000002baf         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5
0000000000002bb6         mov        esi, 0x20                                   ; argument "__c" for method j_strchr
0000000000002bbb         mov        rdi, qword [r15+rax*8]                      ; argument "__s" for method j_strchr
0000000000002bbf         call       j_strchr                                    ; strchr
0000000000002bc4         test       rax, rax
0000000000002bc7         je         loc_2e1e

0000000000002bcd         lea        rsi, qword [aUseVsToPassOpt]                ; argument "msgid" for method j_dcgettext, "use -[v]S to pass options in shebang lines"
0000000000002bd4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002bd9         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002bdb         call       j_dcgettext                                 ; dcgettext
0000000000002be0         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002be2         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002be5         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002be7         xor        eax, eax
0000000000002be9         call       j_error                                     ; error
0000000000002bee         mov        eax, 0x7f
0000000000002bf3         jmp        loc_2787

                     loc_2bf8:
0000000000002bf8         mov        rdi, qword [rsp+0x148+var_128]              ; argument #1 for method quote, CODE XREF=main+2012
0000000000002bfd         mov        byte [rsp+0x148+var_108], r11b
0000000000002c02         mov        qword [rsp+0x148+var_110], r10
0000000000002c07         mov        byte [rsp+0x148+var_118], r9b
0000000000002c0c         mov        qword [rsp+0x148+var_120], rcx
0000000000002c11         call       quote                                       ; quote
0000000000002c16         mov        rcx, qword [rsp+0x148+var_120]
0000000000002c1b         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000002c22         lea        rdx, qword [aExpandingSInto]                ; "expanding ${%s} into %s\\n"
0000000000002c29         mov        r8, rax
0000000000002c2c         mov        esi, 0x1
0000000000002c31         xor        eax, eax
0000000000002c33         call       j___fprintf_chk                             ; __fprintf_chk
0000000000002c38         movzx      r11d, byte [rsp+0x148+var_108]
0000000000002c3e         mov        r10, qword [rsp+0x148+var_110]
0000000000002c43         movzx      r9d, byte [rsp+0x148+var_118]
0000000000002c49         jmp        loc_2452

                     loc_2c4e:
0000000000002c4e         mov        rdi, qword [r10+8]                          ; argument #1 for method quote, CODE XREF=main+1386
0000000000002c52         lea        r14, qword [r10+0x10]
0000000000002c56         call       quote                                       ; quote
0000000000002c5b         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000002c62         lea        rdx, qword [aIntoSn]                        ; " into:    %s\\n"
0000000000002c69         mov        rcx, rax
0000000000002c6c         mov        esi, 0x1
0000000000002c71         xor        eax, eax
0000000000002c73         call       j___fprintf_chk                             ; __fprintf_chk
0000000000002c78         mov        r10, qword [rsp+0x148+var_128]
0000000000002c7d         mov        rbx, r10
0000000000002c80         jmp        loc_21e3

                     loc_2c85:
0000000000002c85         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+3312
0000000000002c8c         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000002c93         lea        rdx, qword [aExecutingSn]                   ; "executing: %s\\n"
0000000000002c9a         mov        esi, 0x1
0000000000002c9f         lea        r12, qword [aArgdSn]                        ; "   arg[%d]= %s\\n"
0000000000002ca6         mov        rcx, qword [r15+rax*8]
0000000000002caa         xor        eax, eax
0000000000002cac         call       j___fprintf_chk                             ; __fprintf_chk
0000000000002cb1         movsxd     rbx, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5
0000000000002cb8         jmp        loc_2cf1

                     loc_2cba:
0000000000002cba         cmp        byte [dev_debug], 0x0                       ; dev_debug, CODE XREF=main+4231
0000000000002cc1         je         loc_2ced

0000000000002cc3         mov        rdi, qword [r15+rbx*8]                      ; argument #1 for method quote
0000000000002cc7         call       quote                                       ; quote
0000000000002ccc         mov        ecx, ebp
0000000000002cce         sub        ecx, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5
0000000000002cd4         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000002cdb         mov        r8, rax
0000000000002cde         mov        rdx, r12
0000000000002ce1         mov        esi, 0x1
0000000000002ce6         xor        eax, eax
0000000000002ce8         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_2ced:
0000000000002ced         add        rbx, 0x1                                    ; CODE XREF=main+4177

                     loc_2cf1:
0000000000002cf1         cmp        ebx, dword [rsp+0x148+var_100]              ; CODE XREF=main+4168
0000000000002cf5         mov        ebp, ebx
0000000000002cf7         jl         loc_2cba

0000000000002cf9         jmp        loc_2966

                     loc_2cfe:
0000000000002cfe         lea        r12, qword [rsp+0x148+var_F8]               ; CODE XREF=main+3246
0000000000002d03         mov        ebx, 0x1
0000000000002d08         mov        rdi, r12                                    ; argument "__set" for method j_sigemptyset
0000000000002d0b         call       j_sigemptyset                               ; sigemptyset
0000000000002d10         xor        esi, esi                                    ; argument "__set" for method j_sigprocmask
0000000000002d12         xor        edi, edi                                    ; argument "__how" for method j_sigprocmask
0000000000002d14         mov        rdx, r12                                    ; argument "__oset" for method j_sigprocmask
0000000000002d17         call       j_sigprocmask                               ; sigprocmask
0000000000002d1c         test       eax, eax
0000000000002d1e         jne        loc_2f9d

0000000000002d24         lea        rbp, qword [block_signals]                  ; block_signals
0000000000002d2b         lea        r14, qword [rsp+0x148+var_58]
0000000000002d33         lea        r13, qword [aBlock]                         ; "BLOCK"
0000000000002d3a         mov        qword [rsp+0x148+var_130], r15
0000000000002d3f         jmp        loc_2d64
0000000000002d41         align      8

                     loc_2d48:
0000000000002d48         mov        rdi, r12                                    ; argument "__set" for method j_sigaddset, CODE XREF=main+4354
0000000000002d4b         mov        r15, r13
0000000000002d4e         call       j_sigaddset                                 ; sigaddset

                     loc_2d53:
0000000000002d53         cmp        byte [dev_debug], 0x0                       ; dev_debug, CODE XREF=main+4389
0000000000002d5a         jne        loc_2d97

                     loc_2d5c:
0000000000002d5c         add        ebx, 0x1                                    ; CODE XREF=main+4370, main+4408, main+4445
0000000000002d5f         cmp        ebx, 0x41
0000000000002d62         je         loc_2dcf

                     loc_2d64:
0000000000002d64         mov        esi, ebx                                    ; argument "__signo" for method j_sigismember, CODE XREF=main+4303
0000000000002d66         mov        rdi, rbp                                    ; argument "__set" for method j_sigismember
0000000000002d69         call       j_sigismember                               ; sigismember
0000000000002d6e         test       eax, eax
0000000000002d70         mov        esi, ebx
0000000000002d72         jne        loc_2d48

0000000000002d74         lea        rdi, qword [unblock_signals]                ; argument "__set" for method j_sigismember, unblock_signals
0000000000002d7b         call       j_sigismember                               ; sigismember
0000000000002d80         test       eax, eax
0000000000002d82         je         loc_2d5c

0000000000002d84         mov        esi, ebx                                    ; argument "__signo" for method j_sigdelset
0000000000002d86         mov        rdi, r12                                    ; argument "__set" for method j_sigdelset
0000000000002d89         lea        r15, qword [aDefault+8]                     ; 0x6c66
0000000000002d90         call       j_sigdelset                                 ; sigdelset
0000000000002d95         jmp        loc_2d53

                     loc_2d97:
0000000000002d97         mov        rsi, r14                                    ; CODE XREF=main+4330
0000000000002d9a         mov        edi, ebx
0000000000002d9c         call       sig2str                                     ; sig2str
0000000000002da1         cmp        byte [dev_debug], 0x0                       ; dev_debug
0000000000002da8         je         loc_2d5c

0000000000002daa         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000002db1         lea        rdx, qword [aSignalSDMaskSe]                ; "signal %s (%d) mask set to %s\\n"
0000000000002db8         mov        r9, r15
0000000000002dbb         mov        r8d, ebx
0000000000002dbe         mov        rcx, r14
0000000000002dc1         mov        esi, 0x1
0000000000002dc6         xor        eax, eax
0000000000002dc8         call       j___fprintf_chk                             ; __fprintf_chk
0000000000002dcd         jmp        loc_2d5c

                     loc_2dcf:
0000000000002dcf         xor        edx, edx                                    ; argument "__oset" for method j_sigprocmask, CODE XREF=main+4338
0000000000002dd1         mov        rsi, r12                                    ; argument "__set" for method j_sigprocmask
0000000000002dd4         mov        edi, 0x2                                    ; argument "__how" for method j_sigprocmask
0000000000002dd9         mov        r15, qword [rsp+0x148+var_130]
0000000000002dde         call       j_sigprocmask                               ; sigprocmask
0000000000002de3         test       eax, eax
0000000000002de5         je         loc_2924

0000000000002deb         lea        rsi, qword [aFailedToSetSig]                ; argument "msgid" for method j_dcgettext, "failed to set signal process mask"
0000000000002df2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002df7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002df9         call       j_dcgettext                                 ; dcgettext
0000000000002dfe         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002e01         mov        rax, qword [rsp+0x148+var_138]
0000000000002e06         mov        edi, 0x7d                                   ; argument "__status" for method j_error
0000000000002e0b         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002e0d         xor        eax, eax
0000000000002e0f         call       j_error                                     ; error

                     loc_2e14:
0000000000002e14         mov        eax, 0xd                                    ; CODE XREF=main+3184
0000000000002e19         jmp        loc_2151

                     loc_2e1e:
0000000000002e1e         mov        eax, 0x7f                                   ; CODE XREF=main+3927
0000000000002e23         jmp        loc_2787

                     loc_2e28:
0000000000002e28         cmp        eax, 0xffffff7e                             ; CODE XREF=main+917
0000000000002e2d         jne        loc_1d85

0000000000002e33         xor        edi, edi                                    ; argument #1 for method usage
0000000000002e35         call       usage                                       ; usage

                     loc_2e3a:
0000000000002e3a         mov        ebx, eax                                    ; CODE XREF=main+307

                     loc_2e3c:
0000000000002e3c         lea        rsi, qword [aInvalidOptionC]                ; argument "msgid" for method j_dcgettext, "invalid option -- '%c'", CODE XREF=main+4658
0000000000002e43         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002e48         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002e4a         call       j_dcgettext                                 ; dcgettext
0000000000002e4f         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002e51         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002e54         mov        ecx, ebx
0000000000002e56         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002e58         xor        eax, eax
0000000000002e5a         call       j_error                                     ; error
0000000000002e5f         mov        edx, 0x5
0000000000002e64         lea        rsi, qword [aUseVsToPassOpt]                ; "use -[v]S to pass options in shebang lines"
0000000000002e6b         jmp        loc_2ac2

                     loc_2e70:
0000000000002e70         lea        rsi, qword [aOnlyVarnameExp]                ; argument "msgid" for method j_dcgettext, "only ${VARNAME} expansion is supported, error at: %s", CODE XREF=main+1723
0000000000002e77         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002e7c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002e7e         call       j_dcgettext                                 ; dcgettext
0000000000002e83         mov        rcx, r13
0000000000002e86         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002e89         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002e8b         mov        edi, 0x7d                                   ; argument "__status" for method j_error
0000000000002e90         xor        eax, eax
0000000000002e92         call       j_error                                     ; error

                     loc_2e97:
0000000000002e97         cmp        eax, 0x20                                   ; CODE XREF=main+331
0000000000002e9a         mov        ebx, eax
0000000000002e9c         jne        loc_1d85

0000000000002ea2         jmp        loc_2e3c

                     loc_2ea4:
0000000000002ea4         lea        rsi, qword [aFailedToSetSig_7648]           ; argument "msgid" for method j_dcgettext, "failed to set signal action for signal %d", CODE XREF=main+3035
0000000000002eab         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002eb0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002eb2         call       j_dcgettext                                 ; dcgettext
0000000000002eb7         mov        rbx, rax
0000000000002eba         call       j___errno_location                          ; __errno_location
0000000000002ebf         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002ec1         mov        ecx, r12d
0000000000002ec4         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000002ec7         mov        edi, 0x7d                                   ; argument "__status" for method j_error
0000000000002ecc         xor        eax, eax
0000000000002ece         call       j_error                                     ; error

                     loc_2ed3:
0000000000002ed3         mov        esi, 0x1                                    ; CODE XREF=main+3605
0000000000002ed8         jmp        loc_2a8b

                     loc_2edd:
0000000000002edd         mov        rdi, qword [rbx]                            ; argument #1 for method quote, CODE XREF=main+3460
0000000000002ee0         call       quote                                       ; quote
0000000000002ee5         lea        rsi, qword [aCannotUnsetS]                  ; argument "msgid" for method j_dcgettext, "cannot unset %s"
0000000000002eec         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002ef1         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002ef3         mov        rbp, rax
0000000000002ef6         call       j_dcgettext                                 ; dcgettext
0000000000002efb         mov        rbx, rax
0000000000002efe         call       j___errno_location                          ; __errno_location
0000000000002f03         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002f05         mov        rcx, rbp
0000000000002f08         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000002f0b         mov        edi, 0x7d                                   ; argument "__status" for method j_error
0000000000002f10         xor        eax, eax
0000000000002f12         call       j_error                                     ; error

                     loc_2f17:
0000000000002f17         lea        rsi, qword [aInvalidBacksla]                ; argument "msgid" for method j_dcgettext, "invalid backslash at end of string in -S", CODE XREF=main+628
0000000000002f1e         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002f23         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002f25         call       j_dcgettext                                 ; dcgettext
0000000000002f2a         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002f2c         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002f2f         mov        edi, 0x7d                                   ; argument "__status" for method j_error
0000000000002f34         xor        eax, eax
0000000000002f36         call       j_error                                     ; error

                     loc_2f3b:
0000000000002f3b         lea        rcx, qword [__PRETTY_FUNCTION__.7637]       ; argument "__function" for method j___assert_fail, "validate_split_str", CODE XREF=main+1075
0000000000002f42         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/env.c"
0000000000002f49         lea        rdi, qword [aSqDq]                          ; argument "__assertion" for method j___assert_fail, "!(sq && dq)"
0000000000002f50         mov        edx, 0x134                                  ; argument "__line" for method j___assert_fail
0000000000002f55         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_2f5a:
0000000000002f5a         lea        rcx, qword [__PRETTY_FUNCTION__.7637]       ; argument "__function" for method j___assert_fail, "validate_split_str", CODE XREF=main+1568
0000000000002f61         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/env.c"
0000000000002f68         lea        rdi, qword [aSqDq]                          ; argument "__assertion" for method j___assert_fail, "!(sq && dq)"
0000000000002f6f         mov        edx, 0x12f                                  ; argument "__line" for method j___assert_fail
0000000000002f74         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_2f79:
0000000000002f79         lea        rsi, qword [aNoTerminatingQ]                ; argument "msgid" for method j_dcgettext, "no terminating quote in -S string", CODE XREF=main+1113, main+1606
0000000000002f80         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002f85         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002f87         call       j_dcgettext                                 ; dcgettext
0000000000002f8c         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002f8e         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002f91         mov        edi, 0x7d                                   ; argument "__status" for method j_error
0000000000002f96         xor        eax, eax
0000000000002f98         call       j_error                                     ; error

                     loc_2f9d:
0000000000002f9d         lea        rsi, qword [aFailedToGetSig]                ; argument "msgid" for method j_dcgettext, "failed to get signal process mask", CODE XREF=main+4270
0000000000002fa4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002fa9         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002fab         call       j_dcgettext                                 ; dcgettext
0000000000002fb0         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002fb3         mov        rax, qword [rsp+0x148+var_138]
0000000000002fb8         mov        edi, 0x7d                                   ; argument "__status" for method j_error
0000000000002fbd         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002fbf         xor        eax, eax
0000000000002fc1         call       j_error                                     ; error

                     loc_2fc6:
0000000000002fc6         lea        rsi, qword [aFailedToGetSig_7618]           ; argument "msgid" for method j_dcgettext, "failed to get signal action for signal %d", CODE XREF=main+2989
0000000000002fcd         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002fd2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002fd4         call       j_dcgettext                                 ; dcgettext
0000000000002fd9         mov        rbx, rax
0000000000002fdc         call       j___errno_location                          ; __errno_location
0000000000002fe1         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002fe3         mov        ecx, r12d
0000000000002fe6         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000002fe9         mov        edi, 0x7d                                   ; argument "__status" for method j_error
0000000000002fee         xor        eax, eax
0000000000002ff0         call       j_error                                     ; error

                     loc_2ff5:
0000000000002ff5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=main+2856
                        ; endp

                     loc_2ffa:
0000000000002ffa         mov        edx, 0x5                                    ; CODE XREF=main+2764
0000000000002fff         lea        rsi, qword [aMustSpecifyCom]                ; "must specify command with --chdir (-C)"
0000000000003006         jmp        loc_2ac2

                     loc_300b:
000000000000300b         lea        rcx, qword [__PRETTY_FUNCTION__.7612]       ; argument "__function" for method j___assert_fail, "escape_char", CODE XREF=main+3208, main+3638
0000000000003012         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/env.c"
0000000000003019         lea        rdi, qword [aInvalidSequenc+32]             ; argument "__assertion" for method j___assert_fail, 0x6cb2
0000000000003020         mov        edx, 0xd2                                   ; argument "__line" for method j___assert_fail
0000000000003025         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_302a:
000000000000302a         mov        byte [rbx], 0x0                             ; CODE XREF=main+2450
000000000000302d         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5
0000000000003034         mov        rdi, qword [r15+rax*8]                      ; argument #1 for method quote
0000000000003038         call       quote                                       ; quote
000000000000303d         lea        rsi, qword [aCannotSetS]                    ; argument "msgid" for method j_dcgettext, "cannot set %s"
0000000000003044         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003049         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000304b         mov        rbp, rax
000000000000304e         call       j_dcgettext                                 ; dcgettext
0000000000003053         mov        rbx, rax
0000000000003056         call       j___errno_location                          ; __errno_location
000000000000305b         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000305d         mov        rcx, rbp
0000000000003060         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000003063         mov        edi, 0x7d                                   ; argument "__status" for method j_error
0000000000003068         xor        eax, eax
000000000000306a         call       j_error                                     ; error

                     loc_306f:
000000000000306f         lea        rsi, qword [aCMustNotAppear]                ; argument "msgid" for method j_dcgettext, "'\\c' must not appear in double-quoted -S string", CODE XREF=main+620
0000000000003076         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000307b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000307d         call       j_dcgettext                                 ; dcgettext
0000000000003082         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003084         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003087         mov        edi, 0x7d                                   ; argument "__status" for method j_error
000000000000308c         xor        eax, eax
000000000000308e         call       j_error                                     ; error

                     loc_3093:
0000000000003093         mov        rsi, qword [rsp+0x148+var_140]              ; CODE XREF=main+3299
0000000000003098         mov        edi, 0x4
000000000000309d         call       quotearg_style                              ; quotearg_style
00000000000030a2         lea        rsi, qword [aCannotChangeDi]                ; argument "msgid" for method j_dcgettext, "cannot change directory to %s"
00000000000030a9         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000030ae         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000030b0         mov        rbx, rax
00000000000030b3         call       j_dcgettext                                 ; dcgettext
00000000000030b8         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000030bb         mov        rax, qword [rsp+0x148+var_138]
00000000000030c0         mov        rcx, rbx
00000000000030c3         mov        edi, 0x7d                                   ; argument "__status" for method j_error
00000000000030c8         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000030ca         xor        eax, eax
00000000000030cc         call       j_error                                     ; error
00000000000030d1         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x846c)
00000000000030db         nop        dword [rax+rax]
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
00000000000030e0         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x8274)
00000000000030e2         mov        r9, rdx
00000000000030e5         pop        rsi
00000000000030e6         mov        rdx, rsp
00000000000030e9         and        rsp, 0xfffffffffffffff0
00000000000030ed         push       rax
00000000000030ee         push       rsp
00000000000030ef         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
00000000000030f6         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
00000000000030fd         lea        rdi, qword [main]                           ; main
0000000000003104         call       qword [qword_209fd0+8]                      ; 0x209fd8
000000000000310a         hlt
                        ; endp
000000000000310b         align      16                                          ; End of unwind block (FDE at 0x8274)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000003110         lea        rdi, qword [__TMC_END__]                    ; __TMC_END__, CODE XREF=__do_global_dtors_aux+35
0000000000003117         push       rbp
0000000000003118         lea        rax, qword [__TMC_END__]                    ; __TMC_END__
000000000000311f         cmp        rax, rdi
0000000000003122         mov        rbp, rsp
0000000000003125         je         loc_3140

0000000000003127         mov        rax, qword [qword_209fd0]                   ; qword_209fd0
000000000000312e         test       rax, rax
0000000000003131         je         loc_3140

0000000000003133         pop        rbp
0000000000003134         jmp        rax
                        ; endp
0000000000003136         align      64

                     loc_3140:
0000000000003140         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
0000000000003141         ret
                        ; endp
0000000000003142         align      16

                     register_tm_clones:
0000000000003150         lea        rdi, qword [__TMC_END__]                    ; __TMC_END__, CODE XREF=frame_dummy+5
0000000000003157         lea        rsi, qword [__TMC_END__]                    ; __TMC_END__
000000000000315e         push       rbp
000000000000315f         sub        rsi, rdi
0000000000003162         mov        rbp, rsp
0000000000003165         sar        rsi, 0x3
0000000000003169         mov        rax, rsi
000000000000316c         shr        rax, 0x3f
0000000000003170         add        rsi, rax
0000000000003173         sar        rsi, 0x1
0000000000003176         je         loc_3190

0000000000003178         mov        rax, qword [qword_209fe8]                   ; qword_209fe8
000000000000317f         test       rax, rax
0000000000003182         je         loc_3190

0000000000003184         pop        rbp
0000000000003185         jmp        rax
                        ; endp
0000000000003187         align      16

                     loc_3190:
0000000000003190         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000003191         ret
                        ; endp
0000000000003192         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
00000000000031a0         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
00000000000031a7         jne        loc_31d8

00000000000031a9         cmp        qword [qword_209ff0], 0x0                   ; qword_209ff0
00000000000031b1         push       rbp
00000000000031b2         mov        rbp, rsp
00000000000031b5         je         loc_31c3

00000000000031b7         mov        rdi, qword [__dso_handle]                   ; __dso_handle
00000000000031be         call       j_qword_209ff0                              ; qword_209ff0

                     loc_31c3:
00000000000031c3         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
00000000000031c8         mov        byte [completed.7697], 0x1                  ; completed.7697
00000000000031cf         pop        rbp
00000000000031d0         ret
                        ; endp
00000000000031d1         align      8

                     loc_31d8:
00000000000031d8         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
00000000000031da         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
00000000000031e0         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
00000000000031e1         mov        rbp, rsp
00000000000031e4         pop        rbp
00000000000031e5         jmp        register_tm_clones                          ; register_tm_clones
00000000000031ea         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32


                     extract_varname:
00000000000031f0         push       rbp                                         ; Begin of unwind block (FDE at 0x82e4), CODE XREF=main+1715, main+1921
00000000000031f1         push       rbx
00000000000031f2         sub        rsp, 0x18
00000000000031f6         test       rdi, rdi
00000000000031f9         je         loc_32f9

00000000000031ff         cmp        byte [rdi], 0x24
0000000000003202         mov        rbp, rdi
0000000000003205         jne        loc_32f9

000000000000320b         cmp        byte [rdi+1], 0x7b
000000000000320f         jne        loc_32bd

0000000000003215         movsx      eax, byte [rdi+2]
0000000000003219         mov        edx, eax
000000000000321b         sub        eax, 0x41
000000000000321e         cmp        eax, 0x39
0000000000003221         jbe        loc_32a0

0000000000003223         cmp        dl, 0x5f
0000000000003226         jne        loc_32bd

                     loc_322c:
000000000000322c         lea        rdx, qword [rbp+3]                          ; CODE XREF=extract_varname+190, extract_varname+199
0000000000003230         jmp        loc_324c
0000000000003232         align      8

                     loc_3238:
0000000000003238         cmp        al, 0x41                                    ; CODE XREF=extract_varname+97
000000000000323a         jge        loc_3248

000000000000323c         lea        ecx, dword [rax-0x30]
000000000000323f         cmp        cl, 0x9
0000000000003242         jbe        loc_3248

0000000000003244         cmp        al, 0x5f
0000000000003246         jne        loc_325f

                     loc_3248:
0000000000003248         add        rdx, 0x1                                    ; CODE XREF=extract_varname+74, extract_varname+82, extract_varname+105, extract_varname+109

                     loc_324c:
000000000000324c         movzx      eax, byte [rdx]                             ; CODE XREF=extract_varname+64
000000000000324f         cmp        al, 0x5a
0000000000003251         jle        loc_3238

0000000000003253         lea        ecx, dword [rax-0x61]
0000000000003256         cmp        cl, 0x19
0000000000003259         jbe        loc_3248

000000000000325b         cmp        al, 0x5f
000000000000325d         je         loc_3248

                     loc_325f:
000000000000325f         cmp        al, 0x7d                                    ; CODE XREF=extract_varname+86
0000000000003261         jne        loc_32bd

0000000000003263         mov        rbx, rdx
0000000000003266         mov        rcx, qword [varname]                        ; varname
000000000000326d         sub        rbx, rbp
0000000000003270         lea        rdx, qword [rbx-2]
0000000000003274         cmp        rdx, qword [vnlen]                          ; vnlen
000000000000327b         jae        loc_32d0

                     loc_327d:
000000000000327d         lea        rsi, qword [rbp+2]                          ; argument "__src" for method j_memcpy, CODE XREF=extract_varname+263
0000000000003281         mov        rdi, rcx                                    ; argument "__dest" for method j_memcpy
0000000000003284         call       j_memcpy                                    ; memcpy
0000000000003289         mov        byte [rax+rbx-2], 0x0
000000000000328e         mov        rcx, rax
0000000000003291         add        rsp, 0x18
0000000000003295         mov        rax, rcx
0000000000003298         pop        rbx
0000000000003299         pop        rbp
000000000000329a         ret
                        ; endp
000000000000329b         align      32

                     loc_32a0:
00000000000032a0         movabs     rcx, 0x3ffffff03ffffff                      ; CODE XREF=extract_varname+49
00000000000032aa         bt         rcx, rax
00000000000032ae         jb         loc_322c

00000000000032b4         cmp        dl, 0x5f
00000000000032b7         je         loc_322c

                     loc_32bd:
00000000000032bd         add        rsp, 0x18                                   ; CODE XREF=extract_varname+31, extract_varname+54, extract_varname+113
00000000000032c1         xor        ecx, ecx
00000000000032c3         mov        rax, rcx
00000000000032c6         pop        rbx
00000000000032c7         pop        rbp
00000000000032c8         ret
                        ; endp
00000000000032c9         align      16

                     loc_32d0:
00000000000032d0         lea        rsi, qword [rbx-1]                          ; CODE XREF=extract_varname+139
00000000000032d4         mov        rdi, rcx
00000000000032d7         mov        qword [rsp+0x28+var_20], rdx
00000000000032dc         mov        qword [vnlen], rsi                          ; vnlen
00000000000032e3         call       xrealloc                                    ; xrealloc
00000000000032e8         mov        rdx, qword [rsp+0x28+var_20]
00000000000032ed         mov        rcx, rax
00000000000032f0         mov        qword [varname], rax                        ; varname
00000000000032f7         jmp        loc_327d

                     loc_32f9:
00000000000032f9         lea        rcx, qword [__PRETTY_FUNCTION__.7616]       ; argument "__function" for method j___assert_fail, "scan_varname", CODE XREF=extract_varname+9, extract_varname+21
0000000000003300         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/env.c"
0000000000003307         lea        rdi, qword [aCoreutils831sr+28]             ; argument "__assertion" for method j___assert_fail, 0x6b60
000000000000330e         mov        edx, 0xdd                                   ; argument "__line" for method j___assert_fail
0000000000003313         call       j___assert_fail                             ; __assert_fail
                        ; endp
0000000000003318         align      32                                          ; End of unwind block (FDE at 0x82e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_58: int8_t, -88
        ;    var_F8: int64_t, -248
        ;    var_178: int8_t, -376
        ;    var_180: int64_t, -384


                     list_signal_handling:
0000000000003320         push       r15                                         ; Begin of unwind block (FDE at 0x831c), CODE XREF=main+3261
0000000000003322         push       r14
0000000000003324         push       r13
0000000000003326         push       r12
0000000000003328         push       rbp
0000000000003329         push       rbx
000000000000332a         sub        rsp, 0x158
0000000000003331         lea        rbx, qword [rsp+0x188+var_178]
0000000000003336         mov        rax, qword [fs:0x28]
000000000000333f         mov        qword [rsp+0x188+var_40], rax
0000000000003347         xor        eax, eax
0000000000003349         mov        rdi, rbx                                    ; argument "__set" for method j_sigemptyset
000000000000334c         mov        qword [rsp+0x188+var_180], rbx
0000000000003351         call       j_sigemptyset                               ; sigemptyset
0000000000003356         xor        esi, esi                                    ; argument "__set" for method j_sigprocmask
0000000000003358         xor        edi, edi                                    ; argument "__how" for method j_sigprocmask
000000000000335a         mov        rdx, rbx                                    ; argument "__oset" for method j_sigprocmask
000000000000335d         call       j_sigprocmask                               ; sigprocmask
0000000000003362         test       eax, eax
0000000000003364         jne        loc_3455

000000000000336a         mov        ebx, 0x1
000000000000336f         lea        rbp, qword [rsp+0x188+var_F8]
0000000000003377         jmp        loc_33dd
0000000000003379         align      128

                     loc_3380:
0000000000003380         call       j_sigismember                               ; sigismember, CODE XREF=list_signal_handling+221
0000000000003385         test       eax, eax
0000000000003387         je         loc_33d5

0000000000003389         lea        r13, qword [aInvalidSequenc+31]             ; 0x6cb1
0000000000003390         lea        r15, qword [aBlock]                         ; "BLOCK"
0000000000003397         mov        r12, r13

                     loc_339a:
000000000000339a         lea        r14, qword [rsp+0x188+var_58]               ; CODE XREF=list_signal_handling+251, list_signal_handling+267
00000000000033a2         mov        edi, ebx
00000000000033a4         mov        rsi, r14
00000000000033a7         call       sig2str                                     ; sig2str
00000000000033ac         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
00000000000033b3         push       r13
00000000000033b5         lea        rdx, qword [a10s2dSssn]                     ; "%-10s (%2d): %s%s%s\\n"
00000000000033bc         push       r12
00000000000033be         mov        r9, r15
00000000000033c1         mov        r8d, ebx
00000000000033c4         mov        rcx, r14
00000000000033c7         mov        esi, 0x1
00000000000033cc         xor        eax, eax
00000000000033ce         call       j___fprintf_chk                             ; __fprintf_chk
00000000000033d3         pop        rax
00000000000033d4         pop        rdx

                     loc_33d5:
00000000000033d5         add        ebx, 0x1                                    ; CODE XREF=list_signal_handling+103, list_signal_handling+203
00000000000033d8         cmp        ebx, 0x41
00000000000033db         je         loc_3430

                     loc_33dd:
00000000000033dd         xor        esi, esi                                    ; argument "__act" for method j_sigaction, CODE XREF=list_signal_handling+87
00000000000033df         mov        rdx, rbp                                    ; argument "__oact" for method j_sigaction
00000000000033e2         mov        edi, ebx                                    ; argument "__sig" for method j_sigaction
00000000000033e4         call       j_sigaction                                 ; sigaction
00000000000033e9         test       eax, eax
00000000000033eb         jne        loc_33d5

00000000000033ed         cmp        qword [rsp+0x188+var_F8], 0x1
00000000000033f6         mov        esi, ebx
00000000000033f8         mov        rdi, qword [rsp+0x188+var_180]
00000000000033fd         jne        loc_3380

00000000000033ff         call       j_sigismember                               ; sigismember
0000000000003404         test       eax, eax
0000000000003406         lea        r13, qword [aIgnore]                        ; "IGNORE"
000000000000340d         lea        r12, qword [aIgnore+7]                      ; 0x6b7a
0000000000003414         lea        r15, qword [aBlock]                         ; "BLOCK"
000000000000341b         jne        loc_339a

0000000000003421         lea        r12, qword [aInvalidSequenc+31]             ; 0x6cb1
0000000000003428         mov        r15, r12
000000000000342b         jmp        loc_339a

                     loc_3430:
0000000000003430         mov        rax, qword [rsp+0x188+var_40]               ; CODE XREF=list_signal_handling+187
0000000000003438         xor        rax, qword [fs:0x28]
0000000000003441         jne        loc_3481

0000000000003443         add        rsp, 0x158
000000000000344a         pop        rbx
000000000000344b         pop        rbp
000000000000344c         pop        r12
000000000000344e         pop        r13
0000000000003450         pop        r14
0000000000003452         pop        r15
0000000000003454         ret
                        ; endp

                     loc_3455:
0000000000003455         lea        rsi, qword [aFailedToGetSig]                ; argument "msgid" for method j_dcgettext, "failed to get signal process mask", CODE XREF=list_signal_handling+68
000000000000345c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003461         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003463         call       j_dcgettext                                 ; dcgettext
0000000000003468         mov        rbx, rax
000000000000346b         call       j___errno_location                          ; __errno_location
0000000000003470         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000003472         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000003475         mov        edi, 0x7d                                   ; argument "__status" for method j_error
000000000000347a         xor        eax, eax
000000000000347c         call       j_error                                     ; error

                     loc_3481:
0000000000003481         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=list_signal_handling+289
                        ; endp
0000000000003486         align      16                                          ; End of unwind block (FDE at 0x831c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
0000000000003490         push       r13                                         ; Begin of unwind block (FDE at 0x837c), CODE XREF=main+282, main+4549, parse_signal_action_params+205, parse_block_signal_params+285
0000000000003492         push       r12
0000000000003494         mov        edx, 0x5
0000000000003499         push       rbp
000000000000349a         push       rbx
000000000000349b         mov        ebp, edi
000000000000349d         sub        rsp, 0x88
00000000000034a4         mov        rbx, qword [program_name]                   ; program_name
00000000000034ab         mov        rax, qword [fs:0x28]
00000000000034b4         mov        qword [rsp+0xa8+var_30], rax
00000000000034b9         xor        eax, eax
00000000000034bb         test       edi, edi
00000000000034bd         je         loc_34ed

00000000000034bf         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
00000000000034c6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000034c8         call       j_dcgettext                                 ; dcgettext
00000000000034cd         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
00000000000034d4         mov        rdx, rax
00000000000034d7         mov        rcx, rbx
00000000000034da         mov        esi, 0x1
00000000000034df         xor        eax, eax
00000000000034e1         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_34e6:
00000000000034e6         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+1046
00000000000034e8         call       j_exit                                      ; exit
                        ; endp

                     loc_34ed:
00000000000034ed         lea        rsi, qword [aUsageSOptionNa]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... [-] [NAME=VALUE]... [COMMAND [ARG]...]\\n", CODE XREF=usage+45
00000000000034f4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000034f6         call       j_dcgettext                                 ; dcgettext
00000000000034fb         mov        rdx, rbx
00000000000034fe         mov        rsi, rax
0000000000003501         mov        edi, 0x1
0000000000003506         xor        eax, eax
0000000000003508         call       j___printf_chk                              ; __printf_chk
000000000000350d         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003514         lea        rsi, qword [aSetEachNameToV]                ; argument "msgid" for method j_dcgettext, "Set each NAME to VALUE in the environment and run COMMAND.\\n"
000000000000351b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003520         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003522         call       j_dcgettext                                 ; dcgettext
0000000000003527         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000352a         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000352d         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003532         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003539         lea        rsi, qword [aNmandatoryArgu]                ; argument "msgid" for method j_dcgettext, "\\nMandatory arguments to long options are mandatory for short options too.\\n"
0000000000003540         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003545         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003547         call       j_dcgettext                                 ; dcgettext
000000000000354c         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000354f         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003552         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003557         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000355e         lea        rsi, qword [aIIgnoreenviron]                ; argument "msgid" for method j_dcgettext, "  -i, --ignore-environment  start with an empty environment\\n  -0, --null           end each output line with NUL, not newline\\n  -u, --unset=NAME     remove variable from the environment\\n"
0000000000003565         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000356a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000356c         call       j_dcgettext                                 ; dcgettext
0000000000003571         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003574         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003577         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000357c         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003583         lea        rsi, qword [aCChdirdirChang]                ; argument "msgid" for method j_dcgettext, "  -C, --chdir=DIR      change working directory to DIR\\n"
000000000000358a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000358f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003591         call       j_dcgettext                                 ; dcgettext
0000000000003596         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003599         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000359c         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000035a1         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000035a8         lea        rsi, qword [aSSplitstringsP]                ; argument "msgid" for method j_dcgettext, "  -S, --split-string=S  process and split S into separate arguments;\\n                        used to pass multiple arguments on shebang lines\\n"
00000000000035af         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000035b4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000035b6         call       j_dcgettext                                 ; dcgettext
00000000000035bb         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000035be         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000035c1         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000035c6         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000035cd         lea        rsi, qword [aBlocksignalsig]                ; argument "msgid" for method j_dcgettext, "      --block-signal[=SIG]    block delivery of SIG signal(s) to COMMAND\\n"
00000000000035d4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000035d9         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000035db         call       j_dcgettext                                 ; dcgettext
00000000000035e0         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000035e3         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000035e6         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000035eb         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000035f2         lea        rsi, qword [aDefaultsignals]                ; argument "msgid" for method j_dcgettext, "      --default-signal[=SIG]  reset handling of SIG signal(s) to the default\\n"
00000000000035f9         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000035fe         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003600         call       j_dcgettext                                 ; dcgettext
0000000000003605         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003608         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000360b         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003610         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003617         lea        rsi, qword [aIgnoresignalsi]                ; argument "msgid" for method j_dcgettext, "      --ignore-signal[=SIG]   set handling of SIG signals(s) to do nothing\\n"
000000000000361e         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003623         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003625         call       j_dcgettext                                 ; dcgettext
000000000000362a         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000362d         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003630         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003635         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000363c         lea        rsi, qword [aListsignalhand]                ; argument "msgid" for method j_dcgettext, "      --list-signal-handling  list non default signal handling to stderr\\n"
0000000000003643         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003648         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000364a         call       j_dcgettext                                 ; dcgettext
000000000000364f         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003652         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003655         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000365a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003661         lea        rsi, qword [aVDebugPrintVer]                ; argument "msgid" for method j_dcgettext, "  -v, --debug          print verbose information for each processing step\\n"
0000000000003668         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000366d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000366f         call       j_dcgettext                                 ; dcgettext
0000000000003674         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003677         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000367a         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000367f         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003686         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
000000000000368d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003692         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003694         call       j_dcgettext                                 ; dcgettext
0000000000003699         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000369c         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000369f         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000036a4         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000036ab         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
00000000000036b2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000036b7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000036b9         call       j_dcgettext                                 ; dcgettext
00000000000036be         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000036c1         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000036c4         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000036c9         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000036d0         lea        rsi, qword [aNaMereImpliesI]                ; argument "msgid" for method j_dcgettext, "\\nA mere - implies -i.  If no COMMAND, print the resulting environment.\\n"
00000000000036d7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000036dc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000036de         call       j_dcgettext                                 ; dcgettext
00000000000036e3         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000036e6         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000036e9         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000036ee         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000036f5         lea        rsi, qword [aNsigMayBeASign]                ; argument "msgid" for method j_dcgettext, "\\nSIG may be a signal name like 'PIPE', or a signal number like '13'.\\nWithout SIG, all known signals are included.  Multiple signals can be\\ncomma-separated.\\n"
00000000000036fc         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003701         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003703         call       j_dcgettext                                 ; dcgettext
0000000000003708         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000370b         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000370e         lea        rbx, qword [a10s2dSssn+21]                  ; 0x6b91
0000000000003715         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000371a         lea        rax, qword [a10s2dSssn+25]                  ; 0x6b95
0000000000003721         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
0000000000003728         mov        qword [rsp+0xa8+var_48], 0x0
0000000000003731         mov        qword [rsp+0xa8+var_40], 0x0
000000000000373a         mov        rdx, rsp
000000000000373d         mov        qword [rsp+0xa8+var_A8], rax
0000000000003741         lea        rax, qword [aTestInvocation]                ; "test invocation"
0000000000003748         mov        qword [rsp+0xa8+var_78], rcx
000000000000374d         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
0000000000003754         mov        qword [rsp+0xa8+var_A0], rax
0000000000003759         lea        rax, qword [aCoreutils]                     ; "coreutils"
0000000000003760         mov        qword [rsp+0xa8+var_68], rcx
0000000000003765         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
000000000000376c         mov        qword [rsp+0xa8+var_98], rax
0000000000003771         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
0000000000003778         mov        qword [rsp+0xa8+var_58], rcx
000000000000377d         mov        qword [rsp+0xa8+var_90], rax
0000000000003782         lea        rax, qword [aSha224sum]                     ; "sha224sum"
0000000000003789         mov        qword [rsp+0xa8+var_88], rax
000000000000378e         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
0000000000003795         mov        qword [rsp+0xa8+var_80], rax
000000000000379a         mov        qword [rsp+0xa8+var_70], rax
000000000000379f         mov        qword [rsp+0xa8+var_60], rax
00000000000037a4         mov        qword [rsp+0xa8+var_50], rax
00000000000037a9         nop        dword [rax]

                     loc_37b0:
00000000000037b0         add        rdx, 0x10                                   ; CODE XREF=usage+829
00000000000037b4         mov        rdi, qword [rdx]
00000000000037b7         test       rdi, rdi
00000000000037ba         je         loc_37cf

00000000000037bc         mov        ecx, 0x4
00000000000037c1         mov        rsi, rbx
00000000000037c4         rep  cmpsb byte [rsi], byte [rdi]
00000000000037c6         seta       al
00000000000037c9         sbb        al, 0x0
00000000000037cb         test       al, al
00000000000037cd         jne        loc_37b0

                     loc_37cf:
00000000000037cf         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+810
00000000000037d3         xor        edi, edi
00000000000037d5         mov        edx, 0x5
00000000000037da         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
00000000000037e1         test       r12, r12
00000000000037e4         je         loc_38ab

00000000000037ea         call       j_dcgettext                                 ; dcgettext
00000000000037ef         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000037f6         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6c0b
00000000000037fd         mov        rsi, rax
0000000000003800         mov        edi, 0x1
0000000000003805         xor        eax, eax
0000000000003807         call       j___printf_chk                              ; __printf_chk
000000000000380c         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000380e         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000003813         call       j_setlocale                                 ; setlocale
0000000000003818         test       rax, rax
000000000000381b         je         loc_3839

000000000000381d         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x6c19
0000000000003824         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000003829         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
000000000000382c         call       j_strncmp                                   ; strncmp
0000000000003831         test       eax, eax
0000000000003833         jne        loc_3940

                     loc_3839:
0000000000003839         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+907, usage+1237
0000000000003840         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003842         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003847         call       j_dcgettext                                 ; dcgettext
000000000000384c         lea        rcx, qword [a10s2dSssn+21]                  ; 0x6b91
0000000000003853         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
000000000000385a         mov        rsi, rax
000000000000385d         mov        edi, 0x1
0000000000003862         xor        eax, eax
0000000000003864         call       j___printf_chk                              ; __printf_chk
0000000000003869         cmp        r12, rbx
000000000000386c         lea        rcx, qword [aMulticallInvoc+10]             ; 0x6bb1
0000000000003873         lea        rbx, qword [aInvalidSequenc+31]             ; 0x6cb1
000000000000387a         cmove      rbx, rcx

                     loc_387e:
000000000000387e         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+1188
0000000000003885         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003887         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000388c         call       j_dcgettext                                 ; dcgettext
0000000000003891         mov        rcx, rbx
0000000000003894         mov        rsi, rax
0000000000003897         mov        rdx, r12
000000000000389a         mov        edi, 0x1
000000000000389f         xor        eax, eax
00000000000038a1         call       j___printf_chk                              ; __printf_chk
00000000000038a6         jmp        loc_34e6

                     loc_38ab:
00000000000038ab         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+852
00000000000038b0         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000038b7         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6c0b
00000000000038be         mov        rsi, rax
00000000000038c1         mov        edi, 0x1
00000000000038c6         xor        eax, eax
00000000000038c8         call       j___printf_chk                              ; __printf_chk
00000000000038cd         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
00000000000038cf         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
00000000000038d4         call       j_setlocale                                 ; setlocale
00000000000038d9         test       rax, rax
00000000000038dc         je         loc_38f6

00000000000038de         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x6c19
00000000000038e5         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
00000000000038ea         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
00000000000038ed         call       j_strncmp                                   ; strncmp
00000000000038f2         test       eax, eax
00000000000038f4         jne        loc_3939

                     loc_38f6:
00000000000038f6         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+1100
00000000000038fd         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003902         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003904         lea        r12, qword [a10s2dSssn+21]                  ; 0x6b91
000000000000390b         lea        rbx, qword [aMulticallInvoc+10]             ; 0x6bb1
0000000000003912         call       j_dcgettext                                 ; dcgettext
0000000000003917         lea        rcx, qword [a10s2dSssn+21]                  ; 0x6b91
000000000000391e         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000003925         mov        rsi, rax
0000000000003928         mov        edi, 0x1
000000000000392d         xor        eax, eax
000000000000392f         call       j___printf_chk                              ; __printf_chk
0000000000003934         jmp        loc_387e

                     loc_3939:
0000000000003939         lea        r12, qword [a10s2dSssn+21]                  ; 0x6b91, CODE XREF=usage+1124

                     loc_3940:
0000000000003940         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+931
0000000000003947         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
000000000000394e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003950         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003955         call       j_dcgettext                                 ; dcgettext
000000000000395a         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
000000000000395d         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003960         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003965         jmp        loc_3839
000000000000396a         align      16                                          ; End of unwind block (FDE at 0x837c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48


                     parse_signal_action_params:
0000000000003970         push       r14                                         ; Begin of unwind block (FDE at 0x83a8), CODE XREF=main+732, main+769
0000000000003972         push       r13
0000000000003974         push       r12
0000000000003976         push       rbp
0000000000003977         push       rbx
0000000000003978         mov        ebx, esi
000000000000397a         sub        rsp, 0x20
000000000000397e         mov        rax, qword [fs:0x28]
0000000000003987         mov        qword [rsp+0x48+var_30], rax
000000000000398c         xor        eax, eax
000000000000398e         test       rdi, rdi
0000000000003991         je         loc_3a70

0000000000003997         call       xstrdup                                     ; xstrdup
000000000000399c         lea        rsi, qword [aIgnore+7]                      ; argument "__delim" for method j_strtok, 0x6b7a
00000000000039a3         mov        rdi, rax                                    ; argument "__s" for method j_strtok
00000000000039a6         mov        r13, rax
00000000000039a9         call       j_strtok                                    ; strtok
00000000000039ae         test       rax, rax
00000000000039b1         mov        r14, rax
00000000000039b4         je         loc_3a48

00000000000039ba         cmp        bl, 0x1
00000000000039bd         mov        r12, rsp
00000000000039c0         lea        rbp, qword [aIgnore+7]                      ; 0x6b7a
00000000000039c7         sbb        ebx, ebx
00000000000039c9         and        ebx, 0x2
00000000000039cc         add        ebx, 0x1
00000000000039cf         jmp        loc_39f8
00000000000039d1         align      8

                     loc_39d8:
00000000000039d8         jle        loc_3a37                                    ; CODE XREF=parse_signal_action_params+150

00000000000039da         mov        rdx, qword [signals]                        ; signals
00000000000039e1         cdqe
00000000000039e3         xor        edi, edi                                    ; argument "__s" for method j_strtok
00000000000039e5         mov        rsi, rbp                                    ; argument "__delim" for method j_strtok
00000000000039e8         mov        dword [rdx+rax*4], ebx
00000000000039eb         call       j_strtok                                    ; strtok
00000000000039f0         test       rax, rax
00000000000039f3         mov        r14, rax
00000000000039f6         je         loc_3a48

                     loc_39f8:
00000000000039f8         mov        rsi, r12                                    ; CODE XREF=parse_signal_action_params+95
00000000000039fb         mov        rdi, r14
00000000000039fe         call       operand2sig                                 ; operand2sig
0000000000003a03         cmp        eax, 0x0
0000000000003a06         jne        loc_39d8

0000000000003a08         mov        rdi, r14
0000000000003a0b         call       quote                                       ; quote
0000000000003a10         lea        rsi, qword [aSInvalidSignal]                ; argument "msgid" for method j_dcgettext, "%s: invalid signal"
0000000000003a17         mov        rbx, rax
0000000000003a1a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003a1f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003a21         call       j_dcgettext                                 ; dcgettext
0000000000003a26         mov        rcx, rbx
0000000000003a29         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003a2c         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003a2e         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003a30         xor        eax, eax
0000000000003a32         call       j_error                                     ; error

                     loc_3a37:
0000000000003a37         mov        edi, dword [exit_failure]                   ; argument #1 for method usage, exit_failure, CODE XREF=loc_39d8
0000000000003a3d         call       usage                                       ; usage
0000000000003a42         nop        word [rax+rax]

                     loc_3a48:
0000000000003a48         mov        rax, qword [rsp+0x48+var_30]                ; CODE XREF=parse_signal_action_params+68, parse_signal_action_params+134
0000000000003a4d         xor        rax, qword [fs:0x28]
0000000000003a56         jne        loc_3ad2

0000000000003a58         add        rsp, 0x20
0000000000003a5c         mov        rdi, r13                                    ; argument "__ptr" for method j_free
0000000000003a5f         pop        rbx
0000000000003a60         pop        rbp
0000000000003a61         pop        r12
0000000000003a63         pop        r13
0000000000003a65         pop        r14
0000000000003a67         jmp        j_free                                      ; free
                        ; endp
0000000000003a6c         align      16

                     loc_3a70:
0000000000003a70         cmp        sil, 0x1                                    ; CODE XREF=parse_signal_action_params+33
0000000000003a74         mov        ebp, 0x4
0000000000003a79         mov        ebx, 0x1
0000000000003a7e         sbb        r13d, r13d
0000000000003a81         mov        r12, rsp
0000000000003a84         and        r13d, 0x2
0000000000003a88         add        r13d, 0x2
0000000000003a8c         nop        dword [rax]

                     loc_3a90:
0000000000003a90         mov        rsi, r12                                    ; CODE XREF=parse_signal_action_params+323
0000000000003a93         mov        edi, ebx
0000000000003a95         call       sig2str                                     ; sig2str
0000000000003a9a         test       eax, eax
0000000000003a9c         jne        loc_3aa9

0000000000003a9e         mov        rax, qword [signals]                        ; signals
0000000000003aa5         mov        dword [rax+rbp], r13d

                     loc_3aa9:
0000000000003aa9         add        ebx, 0x1                                    ; CODE XREF=parse_signal_action_params+300
0000000000003aac         add        rbp, 0x4
0000000000003ab0         cmp        ebx, 0x41
0000000000003ab3         jne        loc_3a90

0000000000003ab5         mov        rax, qword [rsp+0x48+var_30]
0000000000003aba         xor        rax, qword [fs:0x28]
0000000000003ac3         jne        loc_3ad2

0000000000003ac5         add        rsp, 0x20
0000000000003ac9         pop        rbx
0000000000003aca         pop        rbp
0000000000003acb         pop        r12
0000000000003acd         pop        r13
0000000000003acf         pop        r14
0000000000003ad1         ret
                        ; endp

                     loc_3ad2:
0000000000003ad2         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=parse_signal_action_params+230, parse_signal_action_params+339
                        ; endp
0000000000003ad7         align      32                                          ; End of unwind block (FDE at 0x83a8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_58: int8_t, -88
        ;    var_60: int64_t, -96


                     parse_block_signal_params:
0000000000003ae0         push       r15                                         ; Begin of unwind block (FDE at 0x8404), CODE XREF=main+746, main+796
0000000000003ae2         push       r14
0000000000003ae4         push       r13
0000000000003ae6         push       r12
0000000000003ae8         push       rbp
0000000000003ae9         push       rbx
0000000000003aea         mov        ebx, esi
0000000000003aec         sub        rsp, 0x38
0000000000003af0         mov        rax, qword [fs:0x28]
0000000000003af9         mov        qword [rsp+0x68+var_40], rax
0000000000003afe         xor        eax, eax
0000000000003b00         test       rdi, rdi
0000000000003b03         je         loc_3c58

0000000000003b09         cmp        byte [sig_mask_changed], 0x0                ; sig_mask_changed
0000000000003b10         mov        rbp, rdi
0000000000003b13         mov        r12d, esi
0000000000003b16         je         loc_3c38

                     loc_3b1c:
0000000000003b1c         mov        rdi, rbp                                    ; CODE XREF=parse_block_signal_params+368
0000000000003b1f         mov        byte [sig_mask_changed], 0x1                ; sig_mask_changed
0000000000003b26         call       xstrdup                                     ; xstrdup
0000000000003b2b         lea        rsi, qword [aIgnore+7]                      ; argument "__delim" for method j_strtok, 0x6b7a
0000000000003b32         mov        rdi, rax                                    ; argument "__s" for method j_strtok
0000000000003b35         mov        qword [rsp+0x68+var_60], rax
0000000000003b3a         call       j_strtok                                    ; strtok
0000000000003b3f         test       rax, rax
0000000000003b42         mov        r15, rax
0000000000003b45         je         loc_3c08

0000000000003b4b         lea        r14, qword [block_signals]                  ; block_signals
0000000000003b52         lea        rbp, qword [unblock_signals]                ; unblock_signals
0000000000003b59         test       bl, bl
0000000000003b5b         lea        r13, qword [rsp+0x68+var_58]
0000000000003b60         cmove      rbp, r14
0000000000003b64         jmp        loc_3b9a
0000000000003b66         align      16

                     loc_3b70:
0000000000003b70         mov        esi, eax                                    ; argument "__signo" for method j_sigaddset, CODE XREF=parse_block_signal_params+209
0000000000003b72         mov        rdi, r14                                    ; argument "__set" for method j_sigaddset
0000000000003b75         call       j_sigaddset                                 ; sigaddset

                     loc_3b7a:
0000000000003b7a         mov        esi, ebx                                    ; argument "__signo" for method j_sigdelset, CODE XREF=parse_block_signal_params+225
0000000000003b7c         mov        rdi, rbp                                    ; argument "__set" for method j_sigdelset
0000000000003b7f         call       j_sigdelset                                 ; sigdelset
0000000000003b84         lea        rsi, qword [aIgnore+7]                      ; argument "__delim" for method j_strtok, 0x6b7a
0000000000003b8b         xor        edi, edi                                    ; argument "__s" for method j_strtok
0000000000003b8d         call       j_strtok                                    ; strtok
0000000000003b92         test       rax, rax
0000000000003b95         mov        r15, rax
0000000000003b98         je         loc_3c08

                     loc_3b9a:
0000000000003b9a         mov        rsi, r13                                    ; CODE XREF=parse_block_signal_params+132
0000000000003b9d         mov        rdi, r15
0000000000003ba0         call       operand2sig                                 ; operand2sig
0000000000003ba5         cmp        eax, 0x0
0000000000003ba8         mov        ebx, eax
0000000000003baa         je         loc_3bc8

0000000000003bac         jle        loc_3bf7

0000000000003bae         test       r12b, r12b
0000000000003bb1         jne        loc_3b70

0000000000003bb3         lea        rdi, qword [unblock_signals]                ; argument "__set" for method j_sigaddset, unblock_signals
0000000000003bba         mov        esi, eax                                    ; argument "__signo" for method j_sigaddset
0000000000003bbc         call       j_sigaddset                                 ; sigaddset
0000000000003bc1         jmp        loc_3b7a
0000000000003bc3         align      8

                     loc_3bc8:
0000000000003bc8         mov        rdi, r15                                    ; CODE XREF=parse_block_signal_params+202
0000000000003bcb         call       quote                                       ; quote
0000000000003bd0         lea        rsi, qword [aSInvalidSignal]                ; argument "msgid" for method j_dcgettext, "%s: invalid signal"
0000000000003bd7         mov        rbx, rax
0000000000003bda         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003bdf         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003be1         call       j_dcgettext                                 ; dcgettext
0000000000003be6         mov        rcx, rbx
0000000000003be9         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003bec         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003bee         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003bf0         xor        eax, eax
0000000000003bf2         call       j_error                                     ; error

                     loc_3bf7:
0000000000003bf7         mov        edi, dword [exit_failure]                   ; argument #1 for method usage, exit_failure, CODE XREF=parse_block_signal_params+204
0000000000003bfd         call       usage                                       ; usage
0000000000003c02         nop        word [rax+rax]

                     loc_3c08:
0000000000003c08         mov        rax, qword [rsp+0x68+var_40]                ; CODE XREF=parse_block_signal_params+101, parse_block_signal_params+184
0000000000003c0d         xor        rax, qword [fs:0x28]
0000000000003c16         jne        loc_3cb5

0000000000003c1c         mov        rdi, qword [rsp+0x68+var_60]                ; argument "__ptr" for method j_free
0000000000003c21         add        rsp, 0x38
0000000000003c25         pop        rbx
0000000000003c26         pop        rbp
0000000000003c27         pop        r12
0000000000003c29         pop        r13
0000000000003c2b         pop        r14
0000000000003c2d         pop        r15
0000000000003c2f         jmp        j_free                                      ; free
                        ; endp
0000000000003c34         align      8

                     loc_3c38:
0000000000003c38         lea        rdi, qword [block_signals]                  ; argument "__set" for method j_sigemptyset, block_signals, CODE XREF=parse_block_signal_params+54
0000000000003c3f         call       j_sigemptyset                               ; sigemptyset
0000000000003c44         lea        rdi, qword [unblock_signals]                ; argument "__set" for method j_sigemptyset, unblock_signals
0000000000003c4b         call       j_sigemptyset                               ; sigemptyset
0000000000003c50         jmp        loc_3b1c
0000000000003c55         align      8

                     loc_3c58:
0000000000003c58         test       sil, sil                                    ; CODE XREF=parse_block_signal_params+35
0000000000003c5b         je         loc_3ca0

0000000000003c5d         lea        rdi, qword [block_signals]                  ; argument "__set" for method j_sigfillset, block_signals
0000000000003c64         call       j_sigfillset                                ; sigfillset
0000000000003c69         lea        rdi, qword [unblock_signals]                ; unblock_signals

                     loc_3c70:
0000000000003c70         call       j_sigemptyset                               ; sigemptyset, CODE XREF=parse_block_signal_params+467
0000000000003c75         mov        rax, qword [rsp+0x68+var_40]
0000000000003c7a         xor        rax, qword [fs:0x28]
0000000000003c83         mov        byte [sig_mask_changed], 0x1                ; sig_mask_changed
0000000000003c8a         jne        loc_3cb5

0000000000003c8c         add        rsp, 0x38
0000000000003c90         pop        rbx
0000000000003c91         pop        rbp
0000000000003c92         pop        r12
0000000000003c94         pop        r13
0000000000003c96         pop        r14
0000000000003c98         pop        r15
0000000000003c9a         ret
                        ; endp
0000000000003c9b         align      32

                     loc_3ca0:
0000000000003ca0         lea        rdi, qword [unblock_signals]                ; argument "__set" for method j_sigfillset, unblock_signals, CODE XREF=parse_block_signal_params+379
0000000000003ca7         call       j_sigfillset                                ; sigfillset
0000000000003cac         lea        rdi, qword [block_signals]                  ; block_signals
0000000000003cb3         jmp        loc_3c70

                     loc_3cb5:
0000000000003cb5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=parse_block_signal_params+310, parse_block_signal_params+426
                        ; endp
0000000000003cba         align      64                                          ; End of unwind block (FDE at 0x8404)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76


                     operand2sig:
0000000000003cc0         push       r15                                         ; Begin of unwind block (FDE at 0x84dc), CODE XREF=parse_signal_action_params+142, parse_block_signal_params+192
0000000000003cc2         push       r14
0000000000003cc4         mov        r14, rsi
0000000000003cc7         push       r13
0000000000003cc9         push       r12
0000000000003ccb         push       rbp
0000000000003ccc         push       rbx
0000000000003ccd         mov        rbp, rdi
0000000000003cd0         sub        rsp, 0x28
0000000000003cd4         mov        rax, qword [fs:0x28]
0000000000003cdd         mov        qword [rsp+0x58+var_40], rax
0000000000003ce2         xor        eax, eax
0000000000003ce4         movsx      eax, byte [rdi]
0000000000003ce7         sub        eax, 0x30
0000000000003cea         cmp        eax, 0x9
0000000000003ced         ja         loc_3d80

0000000000003cf3         call       j___errno_location                          ; __errno_location
0000000000003cf8         lea        rsi, qword [rsp+0x58+var_48]                ; argument "__endptr" for method j_strtol
0000000000003cfd         mov        edx, 0xa                                    ; argument "__base" for method j_strtol
0000000000003d02         mov        dword [rax], 0x0
0000000000003d08         mov        rdi, rbp                                    ; argument "__nptr" for method j_strtol
0000000000003d0b         mov        rbx, rax
0000000000003d0e         call       j_strtol                                    ; strtol
0000000000003d13         mov        rdx, qword [rsp+0x58+var_48]
0000000000003d18         cmp        rdx, rbp
0000000000003d1b         je         loc_3d38

0000000000003d1d         cmp        byte [rdx], 0x0
0000000000003d20         jne        loc_3d38

0000000000003d22         mov        edx, dword [rbx]
0000000000003d24         test       edx, edx
0000000000003d26         jne        loc_3d38

0000000000003d28         movsxd     rdx, eax
0000000000003d2b         cmp        rdx, rax
0000000000003d2e         je         loc_3e70

0000000000003d34         nop        dword [rax]

                     loc_3d38:
0000000000003d38         mov        dword [rsp+0x58+var_4C], 0xffffffff         ; CODE XREF=operand2sig+91, operand2sig+96, operand2sig+102

                     loc_3d40:
0000000000003d40         mov        rdi, rbp                                    ; CODE XREF=operand2sig+292, operand2sig+310, operand2sig+383, operand2sig+471
0000000000003d43         call       quote                                       ; quote
0000000000003d48         lea        rsi, qword [aSInvalidSignal]                ; argument "msgid" for method j_dcgettext, "%s: invalid signal"
0000000000003d4f         mov        rbx, rax
0000000000003d52         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003d57         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003d59         call       j_dcgettext                                 ; dcgettext
0000000000003d5e         mov        rcx, rbx
0000000000003d61         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003d64         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003d66         xor        eax, eax
0000000000003d68         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003d6a         call       j_error                                     ; error
0000000000003d6f         mov        eax, 0xffffffff
0000000000003d74         jmp        loc_3e00
0000000000003d79         align      128

                     loc_3d80:
0000000000003d80         call       xstrdup                                     ; xstrdup, CODE XREF=operand2sig+45
0000000000003d85         movzx      ebx, byte [rax]
0000000000003d88         mov        r13, rax
0000000000003d8b         test       bl, bl
0000000000003d8d         je         loc_3dc2

0000000000003d8f         lea        r12, qword [aAbcdefghijklmn]                ; "abcdefghijklmnopqrstuvwxyz"
0000000000003d96         mov        r15, rax
0000000000003d99         nop        dword [rax]

                     loc_3da0:
0000000000003da0         movsx      esi, bl                                     ; argument "__c" for method j_strchr, CODE XREF=operand2sig+256
0000000000003da3         mov        rdi, r12                                    ; argument "__s" for method j_strchr
0000000000003da6         call       j_strchr                                    ; strchr
0000000000003dab         test       rax, rax
0000000000003dae         je         loc_3db6

0000000000003db0         sub        ebx, 0x20
0000000000003db3         mov        byte [r15], bl

                     loc_3db6:
0000000000003db6         add        r15, 0x1                                    ; CODE XREF=operand2sig+238
0000000000003dba         movzx      ebx, byte [r15]
0000000000003dbe         test       bl, bl
0000000000003dc0         jne        loc_3da0

                     loc_3dc2:
0000000000003dc2         lea        rbx, qword [rsp+0x58+var_4C]                ; CODE XREF=operand2sig+205
0000000000003dc7         mov        rdi, r13
0000000000003dca         mov        rsi, rbx
0000000000003dcd         call       str2sig                                     ; str2sig
0000000000003dd2         test       eax, eax
0000000000003dd4         jne        loc_3e28

                     loc_3dd6:
0000000000003dd6         mov        ebx, dword [rsp+0x58+var_4C]                ; CODE XREF=operand2sig+422
0000000000003dda         mov        rdi, r13                                    ; argument "__ptr" for method j_free
0000000000003ddd         call       j_free                                      ; free
0000000000003de2         test       ebx, ebx
0000000000003de4         js         loc_3d40

                     loc_3dea:
0000000000003dea         mov        rsi, r14                                    ; CODE XREF=operand2sig+462
0000000000003ded         mov        edi, ebx
0000000000003def         call       sig2str                                     ; sig2str
0000000000003df4         test       eax, eax
0000000000003df6         jne        loc_3d40

0000000000003dfc         mov        eax, dword [rsp+0x58+var_4C]

                     loc_3e00:
0000000000003e00         mov        rcx, qword [rsp+0x58+var_40]                ; CODE XREF=operand2sig+180
0000000000003e05         xor        rcx, qword [fs:0x28]
0000000000003e0e         jne        loc_3e9c

0000000000003e14         add        rsp, 0x28
0000000000003e18         pop        rbx
0000000000003e19         pop        rbp
0000000000003e1a         pop        r12
0000000000003e1c         pop        r13
0000000000003e1e         pop        r14
0000000000003e20         pop        r15
0000000000003e22         ret
                        ; endp
0000000000003e23         align      8

                     loc_3e28:
0000000000003e28         cmp        byte [r13], 0x53                            ; CODE XREF=operand2sig+276
0000000000003e2d         je         loc_3e48

                     loc_3e2f:
0000000000003e2f         mov        rdi, r13                                    ; argument "__ptr" for method j_free, CODE XREF=operand2sig+397, operand2sig+404, operand2sig+420
0000000000003e32         mov        dword [rsp+0x58+var_4C], 0xffffffff
0000000000003e3a         call       j_free                                      ; free
0000000000003e3f         jmp        loc_3d40
0000000000003e44         align      8

                     loc_3e48:
0000000000003e48         cmp        byte [r13+1], 0x49                          ; CODE XREF=operand2sig+365
0000000000003e4d         jne        loc_3e2f

0000000000003e4f         cmp        byte [r13+2], 0x47
0000000000003e54         jne        loc_3e2f

0000000000003e56         lea        rdi, qword [r13+3]
0000000000003e5a         mov        rsi, rbx
0000000000003e5d         call       str2sig                                     ; str2sig
0000000000003e62         test       eax, eax
0000000000003e64         jne        loc_3e2f

0000000000003e66         jmp        loc_3dd6
0000000000003e6b         align      16

                     loc_3e70:
0000000000003e70         cmp        edx, 0xffffffff                             ; CODE XREF=operand2sig+110
0000000000003e73         je         loc_3e93

0000000000003e75         cmp        edx, 0xff
0000000000003e7b         mov        eax, 0x7f
0000000000003e80         mov        ebx, 0xff
0000000000003e85         cmovl      ebx, eax
0000000000003e88         and        ebx, edx
0000000000003e8a         mov        dword [rsp+0x58+var_4C], ebx
0000000000003e8e         jmp        loc_3dea

                     loc_3e93:
0000000000003e93         mov        dword [rsp+0x58+var_4C], edx                ; CODE XREF=operand2sig+435
0000000000003e97         jmp        loc_3d40

                     loc_3e9c:
0000000000003e9c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=operand2sig+334
                        ; endp
0000000000003ea1         align      16                                          ; End of unwind block (FDE at 0x84dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
0000000000003eb0         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0x852c), file_name
0000000000003eb7         ret
                        ; endp
0000000000003eb8         align      64                                          ; End of unwind block (FDE at 0x852c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
0000000000003ec0         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x8540), ignore_EPIPE
0000000000003ec7         ret
                        ; endp
0000000000003ec8         align      16                                          ; End of unwind block (FDE at 0x8540)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
0000000000003ed0         push       rbp                                         ; Begin of unwind block (FDE at 0x8554), DATA XREF=main+99
0000000000003ed1         push       rbx
0000000000003ed2         sub        rsp, 0x8
0000000000003ed6         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003edd         call       close_stream                                ; close_stream
0000000000003ee2         test       eax, eax
0000000000003ee4         je         loc_3efc

0000000000003ee6         call       j___errno_location                          ; __errno_location
0000000000003eeb         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
0000000000003ef2         mov        rbx, rax
0000000000003ef5         je         loc_3f13

0000000000003ef7         cmp        dword [rax], 0x20
0000000000003efa         jne        loc_3f13

                     loc_3efc:
0000000000003efc         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
0000000000003f03         call       close_stream                                ; close_stream
0000000000003f08         test       eax, eax
0000000000003f0a         jne        loc_3f52

0000000000003f0c         add        rsp, 0x8
0000000000003f10         pop        rbx
0000000000003f11         pop        rbp
0000000000003f12         ret
                        ; endp

                     loc_3f13:
0000000000003f13         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
0000000000003f1a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003f1c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003f21         call       j_dcgettext                                 ; dcgettext
0000000000003f26         mov        rdi, qword [file_name]                      ; file_name
0000000000003f2d         mov        rbp, rax
0000000000003f30         test       rdi, rdi
0000000000003f33         je         loc_3f5d

0000000000003f35         call       quotearg_colon                              ; quotearg_colon
0000000000003f3a         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
0000000000003f3c         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000003f43         mov        rcx, rax
0000000000003f46         mov        r8, rbp
0000000000003f49         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003f4b         xor        eax, eax
0000000000003f4d         call       j_error                                     ; error

                     loc_3f52:
0000000000003f52         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
0000000000003f58         call       j__exit                                     ; _exit
                        ; endp

                     loc_3f5d:
0000000000003f5d         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
0000000000003f5f         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x7735
0000000000003f66         mov        rcx, rax
0000000000003f69         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003f6b         xor        eax, eax
0000000000003f6d         call       j_error                                     ; error
0000000000003f72         jmp        loc_3f52
0000000000003f74         align      128                                         ; End of unwind block (FDE at 0x8554)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000003f80         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x8584), CODE XREF=main+46
0000000000003f83         push       rbx
0000000000003f84         je         loc_3ffd

0000000000003f86         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
0000000000003f8b         mov        rbx, rdi
0000000000003f8e         call       j_strrchr                                   ; strrchr
0000000000003f93         test       rax, rax
0000000000003f96         je         loc_3fed

0000000000003f98         lea        r8, qword [rax+1]
0000000000003f9c         mov        rdx, r8
0000000000003f9f         sub        rdx, rbx
0000000000003fa2         cmp        rdx, 0x6
0000000000003fa6         jle        loc_3fed

0000000000003fa8         lea        rsi, qword [rax-6]
0000000000003fac         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000003fb3         mov        ecx, 0x7
0000000000003fb8         rep  cmpsb byte [rsi], byte [rdi]
0000000000003fba         seta       dl
0000000000003fbd         sbb        dl, 0x0
0000000000003fc0         test       dl, dl
0000000000003fc2         jne        loc_3fed

0000000000003fc4         lea        rdi, qword [aLibs+8]                        ; 0x7778
0000000000003fcb         mov        ecx, 0x3
0000000000003fd0         mov        rsi, r8
0000000000003fd3         mov        rbx, r8
0000000000003fd6         rep  cmpsb byte [rsi], byte [rdi]
0000000000003fd8         seta       dl
0000000000003fdb         sbb        dl, 0x0
0000000000003fde         test       dl, dl
0000000000003fe0         jne        loc_3fed

0000000000003fe2         lea        rbx, qword [rax+4]
0000000000003fe6         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_3fed:
0000000000003fed         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
0000000000003ff4         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
0000000000003ffb         pop        rbx
0000000000003ffc         ret
                        ; endp

                     loc_3ffd:
0000000000003ffd         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
0000000000004004         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
000000000000400b         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
0000000000004010         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
0000000000004015         call       j_fwrite                                    ; fwrite
000000000000401a         call       j_abort                                     ; abort
                        ; endp
000000000000401f         align      32                                          ; End of unwind block (FDE at 0x8584)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
0000000000004020         push       rbp                                         ; Begin of unwind block (FDE at 0x85a4), CODE XREF=sub_4850+2597, sub_4850+2619
0000000000004021         push       rbx
0000000000004022         mov        rbp, rdi
0000000000004025         mov        ebx, esi
0000000000004027         sub        rsp, 0x8
000000000000402b         call       locale_charset                              ; locale_charset
0000000000004030         movzx      edx, byte [rax]
0000000000004033         and        edx, 0xffffffdf
0000000000004036         cmp        dl, 0x55
0000000000004039         je         loc_40b0

000000000000403b         cmp        dl, 0x47
000000000000403e         je         loc_4060

                     loc_4040:
0000000000004040         lea        rax, qword [aLibs+27]                       ; 0x778b, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
0000000000004047         lea        rdx, qword [aCoreutils831sr+45]             ; 0x6b71
000000000000404e         cmp        ebx, 0x9
0000000000004051         cmovne     rax, rdx
0000000000004055         add        rsp, 0x8
0000000000004059         pop        rbx
000000000000405a         pop        rbp
000000000000405b         ret
                        ; endp
000000000000405c         align      32

                     loc_4060:
0000000000004060         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
0000000000004064         and        edx, 0xffffffdf
0000000000004067         cmp        dl, 0x42
000000000000406a         jne        loc_4040

000000000000406c         cmp        byte [rax+2], 0x31
0000000000004070         jne        loc_4040

0000000000004072         cmp        byte [rax+3], 0x38
0000000000004076         jne        loc_4040

0000000000004078         cmp        byte [rax+4], 0x30
000000000000407c         jne        loc_4040

000000000000407e         cmp        byte [rax+5], 0x33
0000000000004082         jne        loc_4040

0000000000004084         cmp        byte [rax+6], 0x30
0000000000004088         jne        loc_4040

000000000000408a         cmp        byte [rax+7], 0x0
000000000000408e         jne        loc_4040

0000000000004090         cmp        byte [rbp], 0x60
0000000000004094         lea        rax, qword [aLibs+20]                       ; 0x7784
000000000000409b         lea        rdx, qword [aLibs+24]                       ; 0x7788
00000000000040a2         cmovne     rax, rdx
00000000000040a6         add        rsp, 0x8
00000000000040aa         pop        rbx
00000000000040ab         pop        rbp
00000000000040ac         ret
                        ; endp
00000000000040ad         align      16

                     loc_40b0:
00000000000040b0         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
00000000000040b4         and        edx, 0xffffffdf
00000000000040b7         cmp        dl, 0x54
00000000000040ba         jne        loc_4040

00000000000040bc         movzx      edx, byte [rax+2]
00000000000040c0         and        edx, 0xffffffdf
00000000000040c3         cmp        dl, 0x46
00000000000040c6         jne        loc_4040

00000000000040cc         cmp        byte [rax+3], 0x2d
00000000000040d0         jne        loc_4040

00000000000040d6         cmp        byte [rax+4], 0x38
00000000000040da         jne        loc_4040

00000000000040e0         cmp        byte [rax+5], 0x0
00000000000040e4         jne        loc_4040

00000000000040ea         cmp        byte [rbp], 0x60
00000000000040ee         lea        rax, qword [aLibs+12]                       ; 0x777c
00000000000040f5         lea        rdx, qword [aLibs+16]                       ; 0x7780
00000000000040fc         cmovne     rax, rdx
0000000000004100         add        rsp, 0x8
0000000000004104         pop        rbx
0000000000004105         pop        rbp
0000000000004106         ret
                        ; endp
0000000000004107         align      16                                          ; End of unwind block (FDE at 0x85a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
0000000000004110         push       r15                                         ; Begin of unwind block (FDE at 0x85e8), CODE XREF=sub_4850+1165, sub_4850+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
0000000000004112         push       r14
0000000000004114         mov        r15d, r8d
0000000000004117         push       r13
0000000000004119         push       r12
000000000000411b         mov        r14, rdi
000000000000411e         push       rbp
000000000000411f         push       rbx
0000000000004120         mov        ebx, r9d
0000000000004123         mov        r13, rsi
0000000000004126         mov        rbp, rcx
0000000000004129         and        ebx, 0x2
000000000000412c         sub        rsp, 0xb8
0000000000004133         mov        rax, qword [rsp+0xe8+arg_0]
000000000000413b         mov        qword [rsp+0xe8+var_D8], rdx
0000000000004140         mov        dword [rsp+0xe8+var_E0], r8d
0000000000004145         mov        dword [rsp+0xe8+var_70], r9d
000000000000414a         mov        qword [rsp+0xe8+var_C8], rax
000000000000414f         mov        rax, qword [rsp+0xe8+arg_8]
0000000000004157         mov        qword [rsp+0xe8+var_80], rax
000000000000415c         mov        rax, qword [rsp+0xe8+arg_10]
0000000000004164         mov        qword [rsp+0xe8+var_88], rax
0000000000004169         mov        rax, qword [fs:0x28]
0000000000004172         mov        qword [rsp+0xe8+var_40], rax
000000000000417a         xor        eax, eax
000000000000417c         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000004181         cmp        r15d, 0xa
0000000000004185         mov        qword [rsp+0xe8+var_90], rax
000000000000418a         ja         loc_533f

0000000000004190         lea        rcx, qword [switch_table_77e0]              ; switch_table_77e0
0000000000004197         mov        edx, r15d
000000000000419a         movsxd     rax, dword [rcx+rdx*4]
000000000000419e         add        rax, rcx
00000000000041a1         jmp        rax                                         ; switch statement using table at 0x77e0, with 11 cases, 0x41a3,0x4d74,0x4dd0,0x4e25,0x4e6a,0x4ea4,0x4f4a,0x4f84,0x5178

                     loc_41a3:
00000000000041a3         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_4850+1318
00000000000041a8         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000041ad         xor        r12d, r12d
00000000000041b0         mov        qword [rsp+0xe8+var_98], 0x0
00000000000041b9         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000041be         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_41c3:
00000000000041c3         lea        rax, qword [aCoreutils831sr+45]             ; 0x6b71, CODE XREF=sub_4850+1876
00000000000041ca         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000041d3         xor        r15d, r15d
00000000000041d6         mov        dword [rsp+0xe8+var_E0], 0x2
00000000000041de         mov        qword [rsp+0xe8+var_A0], rax

                     loc_41e3:
00000000000041e3         xor        r11d, r11d                                  ; CODE XREF=sub_4850+180, sub_4850+1400, sub_4850+1488, sub_4850+1557, sub_4850+1615, sub_4850+1781, sub_4850+1839, sub_4850+2408, sub_4850+2485
00000000000041e6         mov        rax, rbp
00000000000041e9         mov        r8d, r12d
00000000000041ec         mov        rbp, r11
00000000000041ef         mov        r11, rax
00000000000041f2         nop        word [rax+rax]

                     loc_41f8:
00000000000041f8         cmp        r11, rbp                                    ; CODE XREF=sub_4300+194
00000000000041fb         setne      r12b
00000000000041ff         cmp        r11, 0xffffffffffffffff
0000000000004203         jne        loc_4212

0000000000004205         mov        rax, qword [rsp+0xe8+var_D8]
000000000000420a         cmp        byte [rax+rbp], 0x0
000000000000420e         setne      r12b

                     loc_4212:
0000000000004212         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
0000000000004215         je         loc_4870

000000000000421b         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000004220         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000004225         lea        r9, qword [rdi+rbp]
0000000000004229         setne      al
000000000000422c         and        al, byte [rsp+0xe8+var_DB]
0000000000004230         mov        r10d, eax
0000000000004233         je         loc_42e0

0000000000004239         mov        rax, qword [rsp+0xe8+var_D0]
000000000000423e         test       rax, rax
0000000000004241         je         loc_4670

0000000000004247         cmp        r11, 0xffffffffffffffff
000000000000424b         lea        rbx, qword [rbp+rax]
0000000000004250         jne        loc_4280

0000000000004252         cmp        rax, 0x1
0000000000004256         jbe        loc_4280

0000000000004258         mov        byte [rsp+0xe8+var_B0], r8b
000000000000425d         mov        byte [rsp+0xe8+var_B8], r10b
0000000000004262         mov        qword [rsp+0xe8+var_C0], r9
0000000000004267         call       j_strlen                                    ; strlen
000000000000426c         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000004272         movzx      r10d, byte [rsp+0xe8+var_B8]
0000000000004278         mov        r11, rax
000000000000427b         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_4280:
0000000000004280         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
0000000000004283         mov        byte [rsp+0xe8+var_C0], r10b
0000000000004288         ja         loc_4840

000000000000428e         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
0000000000004293         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
0000000000004298         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
000000000000429b         mov        qword [rsp+0xe8+var_A8], r11
00000000000042a0         mov        byte [rsp+0xe8+var_B0], r8b
00000000000042a5         mov        qword [rsp+0xe8+var_B8], r9
00000000000042aa         call       j_memcmp                                    ; memcmp
00000000000042af         test       eax, eax
00000000000042b1         mov        r9, qword [rsp+0xe8+var_B8]
00000000000042b6         movzx      r8d, byte [rsp+0xe8+var_B0]
00000000000042bc         mov        r11, qword [rsp+0xe8+var_A8]
00000000000042c1         jne        loc_4840

00000000000042c7         cmp        byte [rsp+0xe8+var_D9], 0x0
00000000000042cc         movzx      r10d, byte [rsp+0xe8+var_C0]
00000000000042d2         jne        loc_5255

00000000000042d8         nop        dword [rax+rax]

                     loc_42e0:
00000000000042e0         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_4830+19
00000000000042e4         cmp        bl, 0x7e
00000000000042e7         ja         loc_4608

00000000000042ed         lea        rcx, qword [switch_table_77e0+44]           ; 0x780c
00000000000042f4         movzx      edx, bl
00000000000042f7         movsxd     rax, dword [rcx+rdx*4]
00000000000042fb         add        rax, rcx
00000000000042fe         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_4300:
0000000000004300         xor        r10d, r10d
0000000000004303         cmp        r11, 0x1
0000000000004307         setne      al
000000000000430a         cmp        r11, 0xffffffffffffffff
000000000000430e         jne        loc_431c

0000000000004310         mov        rax, qword [rsp+arg_8]
0000000000004315         cmp        byte [rax+1], 0x0
0000000000004319         setne      al

                     loc_431c:
000000000000431c         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_4300+14
0000000000004321         sete       dl
0000000000004324         test       al, al
0000000000004326         je         loc_4578

                     loc_432c:
000000000000432c         xor        r12d, r12d                                  ; CODE XREF=sub_4570+11
000000000000432f         xor        eax, eax
0000000000004331         nop        dword [rax]
                        ; endp

                     loc_4338:
0000000000004338         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_4520+50, sub_45f0+119
000000000000433d         jne        loc_4452

0000000000004343         test       dl, dl
0000000000004345         jne        loc_4452

                     loc_434b:
000000000000434b         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_4400+87
0000000000004350         test       rsi, rsi
0000000000004353         je         loc_4369

0000000000004355         mov        edx, ebx
0000000000004357         shr        dl, 0x5
000000000000435a         movzx      edx, dl
000000000000435d         mov        edx, dword [rsi+rdx*4]
0000000000004360         bt         edx, ebx
0000000000004363         jb         loc_44b3

                     loc_4369:
0000000000004369         test       r10b, r10b                                  ; CODE XREF=sub_4300+83, sub_4400+93
000000000000436c         jne        loc_44b3

0000000000004372         xor        eax, 0x1
0000000000004375         add        rbp, 0x1
0000000000004379         and        eax, r8d

                     loc_437c:
000000000000437c         test       al, al                                      ; CODE XREF=sub_4850+936
000000000000437e         je         loc_43a0

0000000000004380         cmp        r13, r15
0000000000004383         jbe        loc_438a

0000000000004385         mov        byte [r14+r15], 0x27

                     loc_438a:
000000000000438a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4300+131
000000000000438e         cmp        r13, rax
0000000000004391         jbe        loc_4399

0000000000004393         mov        byte [r14+r15+1], 0x27

                     loc_4399:
0000000000004399         add        r15, 0x2                                    ; CODE XREF=sub_4300+145
000000000000439d         xor        r8d, r8d

                     loc_43a0:
00000000000043a0         cmp        r15, r13                                    ; CODE XREF=sub_4300+126, sub_4400+275, sub_4850+869
00000000000043a3         jae        loc_43a9

00000000000043a5         mov        byte [r14+r15], bl

                     loc_43a9:
00000000000043a9         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_4300+163
00000000000043ae         add        r15, 0x1
00000000000043b2         mov        eax, 0x0
00000000000043b7         test       r12b, r12b
00000000000043ba         cmove      edi, eax
00000000000043bd         mov        byte [rsp+0xe8+var_DA], dil
00000000000043c2         jmp        loc_41f8
00000000000043c7         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_43d0:
00000000000043d0         xor        r10d, r10d
00000000000043d3         mov        eax, dword [rsp+arg_0]
00000000000043d7         cmp        eax, 0x2
00000000000043da         je         loc_4998

00000000000043e0         cmp        eax, 0x5
00000000000043e3         je         loc_4958

00000000000043e9         cmp        eax, 0x2
00000000000043ec         mov        ebx, 0x3f
00000000000043f1         sete       dl
00000000000043f4         xor        r12d, r12d
00000000000043f7         xor        eax, eax
00000000000043f9         jmp        sub_4300+56
                        ; endp
00000000000043fe         align      1024


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_4400:
0000000000004400         xor        r10d, r10d
0000000000004403         cmp        dword [rsp+arg_0], 0x2
0000000000004408         je         loc_4910

000000000000440e         mov        byte [rsp+arg_74], r12b
0000000000004413         xor        edx, edx
0000000000004415         xor        eax, eax
0000000000004417         mov        ebx, 0x27
000000000000441c         jmp        sub_4300+56
                        ; endp
0000000000004421         nop        dword [rax]
0000000000004428         mov        edx, 0x9
000000000000442d         mov        ebx, 0x74

                     loc_4432:
0000000000004432         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_45c0+10, sub_46b0+37, sub_47f0+53
0000000000004437         sete       al
000000000000443a         and        al, byte [rsp+arg_7]
000000000000443e         jne        sub_4570+30

0000000000004444         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_4400+114
0000000000004449         jne        loc_44b0

                     loc_444b:
000000000000444b         mov        ebx, edx                                    ; CODE XREF=sub_4520+18
000000000000444d         xor        r12d, r12d
0000000000004450         xor        eax, eax
                        ; endp

                     loc_4452:
0000000000004452         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_4300+61, sub_4300+69
0000000000004457         jne        loc_434b

000000000000445d         jmp        loc_4369
0000000000004462         nop        word [rax+rax]
0000000000004468         mov        edx, 0x8
000000000000446d         mov        ebx, 0x62
0000000000004472         jmp        sub_4400+68
0000000000004474         nop        dword [rax]
0000000000004478         cmp        dword [rsp+8], 0x2
000000000000447d         je         sub_4850                                    ; sub_4850
0000000000004483         cmp        byte [rsp+0xd], 0x0
0000000000004488         je         sub_4690+16

                     loc_448e:
000000000000448e         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_4690+8
0000000000004493         je         loc_46a0

0000000000004499         cmp        qword [rsp+arg_10], 0x0
000000000000449f         jne        loc_485b

00000000000044a5         mov        ebx, 0x5c
00000000000044aa         nop        word [rax+rax]
                        ; endp

                     loc_44b0:
00000000000044b0         xor        r12d, r12d                                  ; CODE XREF=sub_4400+73, sub_47f0+29
                        ; endp

                     loc_44b3:
00000000000044b3         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_4300+99, sub_4300+108
00000000000044b8         sete       dl
00000000000044bb         cmp        byte [rsp+0xe8+var_D9], 0x0
00000000000044c0         mov        eax, edx
00000000000044c2         jne        loc_4d18

00000000000044c8         mov        eax, r8d
00000000000044cb         xor        eax, 0x1
00000000000044ce         and        al, dl
00000000000044d0         je         loc_4501

00000000000044d2         cmp        r13, r15
00000000000044d5         jbe        loc_44dc

00000000000044d7         mov        byte [r14+r15], 0x27

                     loc_44dc:
00000000000044dc         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_4400+213
00000000000044e0         cmp        r13, rdx
00000000000044e3         jbe        loc_44eb

00000000000044e5         mov        byte [r14+r15+1], 0x24

                     loc_44eb:
00000000000044eb         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_4400+227
00000000000044ef         cmp        r13, rdx
00000000000044f2         jbe        loc_44fa

00000000000044f4         mov        byte [r14+r15+2], 0x27

                     loc_44fa:
00000000000044fa         add        r15, 0x3                                    ; CODE XREF=sub_4400+242
00000000000044fe         mov        r8d, eax

                     loc_4501:
0000000000004501         cmp        r13, r15                                    ; CODE XREF=sub_4400+208
0000000000004504         jbe        loc_450b

0000000000004506         mov        byte [r14+r15], 0x5c

                     loc_450b:
000000000000450b         add        r15, 0x1                                    ; CODE XREF=sub_4400+260
000000000000450f         add        rbp, 0x1
0000000000004513         jmp        loc_43a0
0000000000004518         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_4520:
0000000000004520         cmp        byte [rsp+arg_5], 0x0
0000000000004525         jne        loc_46f3

000000000000452b         xor        edx, edx
000000000000452d         test       byte [rsp+arg_70], 0x1
0000000000004532         je         loc_444b

0000000000004538         add        rbp, 0x1
000000000000453c         jmp        quotearg_buffer_restyled+232
                        ; endp
0000000000004541         nop        dword [rax]
0000000000004548         cmp        dword [rsp+8], 0x2
000000000000454d         sete       dl
0000000000004550         xor        eax, eax
0000000000004552         jmp        sub_4300+56
0000000000004557         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4560:
0000000000004560         mov        edx, 0x7
0000000000004565         mov        ebx, 0x61
000000000000456a         jmp        sub_4400+68
                        ; endp
000000000000456f         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4570:
0000000000004570         cmp        dword [rsp+8], 0x2
0000000000004575         sete       dl
                        ; endp

                     loc_4578:
0000000000004578         test       rbp, rbp                                    ; CODE XREF=sub_4300+38, sub_4790+35
000000000000457b         jne        loc_432c

0000000000004581         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_47c0+43
0000000000004586         and        al, dl
0000000000004588         je         sub_4300+56

000000000000458e         mov        rbp, r11
0000000000004591         mov        dword [rsp+arg_0], 0x2
0000000000004599         jmp        sub_4850+1097
                        ; endp
000000000000459e         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_45a0:
00000000000045a0         cmp        dword [rsp+arg_0], 0x2
00000000000045a5         sete       dl
00000000000045a8         xor        r12d, r12d
00000000000045ab         jmp        sub_4570+17
                        ; endp
00000000000045ad         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_45b0:
00000000000045b0         cmp        dword [rsp+arg_0], 0x2
00000000000045b5         mov        ebx, 0x20
00000000000045ba         sete       dl
00000000000045bd         jmp        sub_4570+17
                        ; endp
00000000000045bf         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_45c0:
00000000000045c0         mov        edx, 0xd
00000000000045c5         mov        ebx, 0x72
00000000000045ca         jmp        loc_4432
00000000000045cf         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_45d0:
00000000000045d0         mov        edx, 0xc
00000000000045d5         mov        ebx, 0x66
00000000000045da         jmp        sub_4400+68
                        ; endp
00000000000045df         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_45e0:
00000000000045e0         mov        edx, 0xb
00000000000045e5         mov        ebx, 0x76
00000000000045ea         jmp        sub_4400+68
                        ; endp
00000000000045ef         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_45f0:
00000000000045f0         mov        edx, 0xa
00000000000045f5         mov        ebx, 0x6e
00000000000045fa         jmp        sub_4400+50
                        ; endp
00000000000045ff         align      512

                     loc_4600:
0000000000004600         xor        r10d, r10d                                  ; CODE XREF=sub_45f0+135
0000000000004603         nop        dword [rax+rax]

                     loc_4608:
0000000000004608         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
000000000000460e         jne        loc_49b8

0000000000004614         mov        qword [rsp+0xe8+var_B0], r11
0000000000004619         mov        byte [rsp+0xe8+var_B8], r8b
000000000000461e         mov        byte [rsp+0xe8+var_C0], r10b
0000000000004623         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000004628         mov        rcx, qword [rax]
000000000000462b         movzx      edx, bl
000000000000462e         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000004634         movzx      r8d, byte [rsp+0xe8+var_B8]
000000000000463a         mov        r11, qword [rsp+0xe8+var_B0]
000000000000463f         mov        edi, 0x1
0000000000004644         movzx      eax, word [rcx+rdx*2]
0000000000004648         and        ax, 0x4000
000000000000464c         setne      r12b
0000000000004650         sete       al
0000000000004653         and        al, byte [rsp+0xe8+var_DB]

                     loc_4657:
0000000000004657         test       al, al                                      ; CODE XREF=sub_4850+2221
0000000000004659         jne        loc_4ff1

000000000000465f         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000004664         sete       dl
0000000000004667         jmp        loc_4338
000000000000466c         align      16

                     loc_4670:
0000000000004670         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
0000000000004674         cmp        bl, 0x7e
0000000000004677         ja         loc_4600

0000000000004679         lea        rcx, qword [switch_table_77e0+552]          ; 0x7a08
0000000000004680         movzx      edx, bl
0000000000004683         movsxd     rax, dword [rcx+rdx*4]
0000000000004687         add        rax, rcx
000000000000468a         jmp        rax
                        ; endp
000000000000468c         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_4690:
0000000000004690         xor        r10d, r10d
0000000000004693         cmp        byte [rsp+arg_5], 0x0
0000000000004698         jne        loc_448e

000000000000469e         nop

                     loc_46a0:
00000000000046a0         mov        edx, 0x5c                                   ; CODE XREF=sub_4400+136, sub_4400+147
00000000000046a5         mov        ebx, 0x5c
00000000000046aa         jmp        sub_4400+68
                        ; endp
00000000000046af         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_46b0:
00000000000046b0         mov        edx, 0xc
00000000000046b5         xor        r10d, r10d
00000000000046b8         mov        ebx, 0x66
00000000000046bd         jmp        sub_4400+68
                        ; endp
00000000000046c2         nop        word [rax+rax]
00000000000046c8         mov        edx, 0xa
00000000000046cd         xor        r10d, r10d
00000000000046d0         mov        ebx, 0x6e
00000000000046d5         jmp        sub_4400+50
00000000000046da         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_46e0:
00000000000046e0         mov        ebx, 0x61
00000000000046e5         jmp        sub_4400+176
                        ; endp
00000000000046ea         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_46f0:
00000000000046f0         xor        r10d, r10d
                        ; endp

                     loc_46f3:
00000000000046f3         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_4520+5
00000000000046f8         sete       dl
00000000000046fb         cmp        byte [rsp+arg_7], 0x0
0000000000004700         jne        loc_529a

0000000000004706         mov        eax, r8d
0000000000004709         mov        rcx, r15
000000000000470c         xor        eax, 0x1
000000000000470f         and        al, dl
0000000000004711         je         loc_4740

0000000000004713         cmp        r13, r15
0000000000004716         jbe        loc_471d

0000000000004718         mov        byte [r14+r15], 0x27

                     loc_471d:
000000000000471d         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_46f0+38
0000000000004721         cmp        r13, rcx
0000000000004724         jbe        loc_472c

0000000000004726         mov        byte [r14+r15+1], 0x24

                     loc_472c:
000000000000472c         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_46f0+52
0000000000004730         cmp        r13, rcx
0000000000004733         ja         loc_4d69

                     loc_4739:
0000000000004739         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_4850+1311
000000000000473d         mov        r8d, eax

                     loc_4740:
0000000000004740         cmp        r13, rcx                                    ; CODE XREF=sub_46f0+33
0000000000004743         jbe        loc_474a

0000000000004745         mov        byte [r14+rcx], 0x5c

                     loc_474a:
000000000000474a         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_46f0+83
000000000000474f         lea        r15, qword [rcx+1]
0000000000004753         je         loc_4d59

0000000000004759         lea        rax, qword [rbp+1]
000000000000475d         cmp        rax, r11
0000000000004760         jae        loc_477b

0000000000004762         mov        rax, qword [rsp+arg_8]
0000000000004767         movzx      eax, byte [rax+rbp+1]
000000000000476c         mov        byte [rsp+arg_20], al
0000000000004770         sub        eax, 0x30
0000000000004773         cmp        al, 0x9
0000000000004775         jbe        loc_4fa9

                     loc_477b:
000000000000477b         mov        eax, r12d                                   ; CODE XREF=sub_46f0+112
000000000000477e         mov        ebx, 0x30
0000000000004783         xor        r12d, r12d
0000000000004786         jmp        sub_4300+56
                        ; endp
000000000000478b         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_4790:
0000000000004790         cmp        dword [rsp+arg_0], 0x2
0000000000004795         mov        r12d, r10d
0000000000004798         sete       dl
000000000000479b         xor        r10d, r10d
000000000000479e         xor        eax, eax
00000000000047a0         jmp        sub_4300+56
                        ; endp
00000000000047a5         nop        dword [rax]
00000000000047a8         cmp        dword [rsp+8], 0x2
00000000000047ad         sete       dl
00000000000047b0         xor        r10d, r10d
00000000000047b3         jmp        sub_4570+8
00000000000047b8         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_47c0:
00000000000047c0         cmp        dword [rsp+8], 0x2
00000000000047c5         sete       dl
00000000000047c8         xor        r10d, r10d
00000000000047cb         xor        r12d, r12d
00000000000047ce         jmp        sub_4570+17
                        ; endp
00000000000047d3         nop        dword [rax+rax]
00000000000047d8         cmp        dword [rsp+8], 0x2
00000000000047dd         mov        r12d, r10d
00000000000047e0         mov        ebx, 0x20
00000000000047e5         sete       dl
00000000000047e8         xor        r10d, r10d
00000000000047eb         jmp        sub_4570+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_47f0:
00000000000047f0         mov        edx, 0xd
00000000000047f5         xor        r10d, r10d
00000000000047f8         mov        ebx, 0x72
00000000000047fd         jmp        sub_4400+50
                        ; endp
0000000000004802         nop        word [rax+rax]
0000000000004808         mov        ebx, 0x76
000000000000480d         jmp        sub_4400+176
0000000000004812         nop        word [rax+rax]
0000000000004818         mov        edx, 0x9
000000000000481d         xor        r10d, r10d
0000000000004820         mov        ebx, 0x74
0000000000004825         jmp        sub_4400+50
000000000000482a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4830:
0000000000004830         mov        ebx, 0x62
0000000000004835         jmp        sub_4400+176
                        ; endp
000000000000483a         nop        word [rax+rax]

                     loc_4840:
0000000000004840         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
0000000000004843         jmp        loc_42e0
0000000000004848         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_4850:
0000000000004850         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_4400+125
0000000000004855         jne        sub_4850+2416
                        ; endp

                     loc_485b:
000000000000485b         add        rbp, 0x1                                    ; CODE XREF=sub_4400+159
000000000000485f         mov        eax, r8d
0000000000004862         xor        r12d, r12d
0000000000004865         mov        ebx, 0x5c
000000000000486a         jmp        sub_4300+124
                        ; endp
000000000000486f         align      16

                     loc_4870:
0000000000004870         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
0000000000004875         movzx      ebx, byte [rsp+0xe8+var_D9]
000000000000487a         mov        r12d, r8d
000000000000487d         mov        rbp, r11
0000000000004880         sete       dl
0000000000004883         mov        eax, ebx
0000000000004885         test       r15, r15
0000000000004888         sete       cl
000000000000488b         and        eax, edx
000000000000488d         and        al, cl
000000000000488f         jne        loc_52f6

0000000000004895         mov        eax, ebx
0000000000004897         xor        eax, 0x1
000000000000489a         and        dl, al
000000000000489c         je         loc_520c

00000000000048a2         cmp        byte [rsp+0xe8+var_6C], 0x0
00000000000048a7         je         loc_520a

00000000000048ad         cmp        byte [rsp+0xe8+var_DA], 0x0
00000000000048b2         jne        loc_52ad

00000000000048b8         test       r13, r13
00000000000048bb         sete       al
00000000000048be         cmp        qword [rsp+0xe8+var_98], 0x0
00000000000048c4         setne      dl
00000000000048c7         and        al, dl
00000000000048c9         je         loc_52ec

00000000000048cf         mov        r13, qword [rsp+0xe8+var_98]

                     loc_48d4:
00000000000048d4         lea        rbx, qword [aCoreutils831sr+45]             ; 0x6b71, CODE XREF=sub_4850+2781
00000000000048db         mov        byte [r14], 0x27
00000000000048df         mov        dword [rsp+0xe8+var_E0], 0x2
00000000000048e7         mov        r15d, 0x1
00000000000048ed         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000048f6         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000048fb         mov        qword [rsp+0xe8+var_A0], rbx
0000000000004900         mov        byte [rsp+0xe8+var_6C], al
0000000000004904         jmp        loc_41e3
0000000000004909         align      16

                     loc_4910:
0000000000004910         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_4400+8
0000000000004915         jne        sub_4850+2416

000000000000491b         test       r13, r13
000000000000491e         je         loc_4d20

0000000000004924         xor        edx, edx
0000000000004926         cmp        qword [rsp+arg_48], 0x0
000000000000492c         jne        loc_4d20

                     loc_4932:
0000000000004932         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_4850+1284, sub_4850+2794
0000000000004937         add        r15, 0x3
000000000000493b         xor        eax, eax
000000000000493d         mov        byte [rsp+arg_74], r12b
0000000000004942         xor        r8d, r8d
0000000000004945         mov        r13, rdx
0000000000004948         mov        ebx, 0x27
000000000000494d         jmp        sub_4300+105
                        ; endp
0000000000004952         align      8

                     loc_4958:
0000000000004958         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_43d0+19
000000000000495d         je         loc_4980

000000000000495f         lea        rcx, qword [rbp+2]
0000000000004963         cmp        rcx, r11
0000000000004966         jae        loc_4980

0000000000004968         mov        rax, qword [rsp+arg_8]
000000000000496d         cmp        byte [rax+rbp+1], 0x3f
0000000000004972         je         loc_5102

0000000000004978         nop        dword [rax+rax]

                     loc_4980:
0000000000004980         xor        edx, edx                                    ; CODE XREF=sub_4850+269, sub_4850+278, sub_4850+2233, sub_4850+2253
0000000000004982         xor        r12d, r12d
0000000000004985         xor        eax, eax
0000000000004987         mov        ebx, 0x3f
000000000000498c         jmp        sub_4300+56
                        ; endp
0000000000004991         align      8

                     loc_4998:
0000000000004998         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_43d0+10
000000000000499d         jne        loc_51c0

00000000000049a3         xor        r12d, r12d
00000000000049a6         xor        eax, eax
00000000000049a8         mov        ebx, 0x3f
00000000000049ad         jmp        sub_4300+105
                        ; endp
00000000000049b2         align      8

                     loc_49b8:
00000000000049b8         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_45f0+30
00000000000049c0         cmp        r11, 0xffffffffffffffff
00000000000049c4         mov        qword [rsp+0xe8+var_48], 0x0
00000000000049d0         mov        qword [rsp+0xe8+var_C0], rax
00000000000049d5         jne        loc_4a04

00000000000049d7         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
00000000000049dc         mov        byte [rsp+0xe8+var_A8], r8b
00000000000049e1         mov        byte [rsp+0xe8+var_B0], r10b
00000000000049e6         mov        qword [rsp+0xe8+var_B8], r9
00000000000049eb         call       j_strlen                                    ; strlen
00000000000049f0         movzx      r8d, byte [rsp+0xe8+var_A8]
00000000000049f6         movzx      r10d, byte [rsp+0xe8+var_B0]
00000000000049fc         mov        r11, rax
00000000000049ff         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_4a04:
0000000000004a04         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_4850+389
0000000000004a0c         xor        ecx, ecx
0000000000004a0e         mov        byte [rsp+0xe8+var_6A], bl
0000000000004a12         mov        byte [rsp+0xe8+var_6B], r8b
0000000000004a17         mov        rbx, rcx
0000000000004a1a         mov        qword [rsp+0xe8+var_60], r9
0000000000004a22         mov        qword [rsp+0xe8+var_B0], rax
0000000000004a27         mov        byte [rsp+0xe8+var_69], r10b
0000000000004a2c         mov        qword [rsp+0xe8+var_68], r15
0000000000004a34         mov        qword [rsp+0xe8+var_A8], r14
0000000000004a39         mov        qword [rsp+0xe8+var_78], r13
0000000000004a3e         mov        qword [rsp+0xe8+var_B8], r11

                     loc_4a43:
0000000000004a43         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_4850+623
0000000000004a48         lea        r14, qword [rbp+rbx]
0000000000004a4d         mov        rdx, qword [rsp+0xe8+var_B8]
0000000000004a52         mov        rcx, qword [rsp+0xe8+var_C0]
0000000000004a57         mov        rdi, qword [rsp+0xe8+var_B0]
0000000000004a5c         lea        r13, qword [rax+r14]
0000000000004a60         sub        rdx, r14
0000000000004a63         mov        rsi, r13
0000000000004a66         call       rpl_mbrtowc                                 ; rpl_mbrtowc
0000000000004a6b         test       rax, rax
0000000000004a6e         mov        r15, rax
0000000000004a71         je         loc_4ac1

0000000000004a73         cmp        rax, 0xffffffffffffffff
0000000000004a77         je         loc_5095

0000000000004a7d         cmp        rax, 0xfffffffffffffffe
0000000000004a81         je         loc_5021

0000000000004a87         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000004a8c         sete       al
0000000000004a8f         and        al, byte [rsp+0xe8+var_D9]
0000000000004a93         jne        loc_4c30

                     loc_4a99:
0000000000004a99         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_4850+996, sub_4850+1031
0000000000004aa0         call       j_iswprint                                  ; iswprint
0000000000004aa5         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
0000000000004aaa         test       eax, eax
0000000000004aac         mov        eax, 0x0
0000000000004ab1         cmove      r12d, eax
0000000000004ab5         add        rbx, r15
0000000000004ab8         call       j_mbsinit                                   ; mbsinit
0000000000004abd         test       eax, eax
0000000000004abf         je         loc_4a43

                     loc_4ac1:
0000000000004ac1         mov        edx, r12d                                   ; CODE XREF=sub_4850+545
0000000000004ac4         mov        rdi, rbx
0000000000004ac7         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000004acd         xor        edx, 0x1
0000000000004ad0         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000004ad5         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000004adb         and        dl, byte [rsp+0xe8+var_DB]
0000000000004adf         mov        r15, qword [rsp+0xe8+var_68]
0000000000004ae7         mov        r14, qword [rsp+0xe8+var_A8]
0000000000004aec         mov        r13, qword [rsp+0xe8+var_78]
0000000000004af1         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_4af6:
0000000000004af6         cmp        rdi, 0x1                                    ; CODE XREF=sub_4850+2112, sub_4850+2168
0000000000004afa         jbe        loc_50fb

                     loc_4b00:
0000000000004b00         mov        rcx, rdi                                    ; CODE XREF=sub_4850+1961
0000000000004b03         xor        esi, esi
0000000000004b05         movzx      r9d, byte [rsp+0xe8+var_D9]
0000000000004b0b         add        rcx, rbp
0000000000004b0e         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000004b13         jmp        loc_4bce
0000000000004b18         align      32

                     loc_4b20:
0000000000004b20         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_4850+896
0000000000004b25         sete       al
0000000000004b28         test       r9b, r9b
0000000000004b2b         jne        loc_4fe0

0000000000004b31         mov        esi, r8d
0000000000004b34         xor        esi, 0x1
0000000000004b37         and        al, sil
0000000000004b3a         je         loc_4b6b

0000000000004b3c         cmp        r13, r15
0000000000004b3f         jbe        loc_4b46

0000000000004b41         mov        byte [r14+r15], 0x27

                     loc_4b46:
0000000000004b46         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_4850+751
0000000000004b4a         cmp        r13, rsi
0000000000004b4d         jbe        loc_4b55

0000000000004b4f         mov        byte [r14+r15+1], 0x24

                     loc_4b55:
0000000000004b55         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_4850+765
0000000000004b59         cmp        r13, rsi
0000000000004b5c         jbe        loc_4b64

0000000000004b5e         mov        byte [r14+r15+2], 0x27

                     loc_4b64:
0000000000004b64         add        r15, 0x3                                    ; CODE XREF=sub_4850+780
0000000000004b68         mov        r8d, eax

                     loc_4b6b:
0000000000004b6b         cmp        r13, r15                                    ; CODE XREF=sub_4850+746
0000000000004b6e         jbe        loc_4b75

0000000000004b70         mov        byte [r14+r15], 0x5c

                     loc_4b75:
0000000000004b75         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4850+798
0000000000004b79         cmp        r13, rax
0000000000004b7c         jbe        loc_4b8b

0000000000004b7e         mov        eax, ebx
0000000000004b80         shr        al, 0x6
0000000000004b83         add        eax, 0x30
0000000000004b86         mov        byte [r14+r15+1], al

                     loc_4b8b:
0000000000004b8b         lea        rax, qword [r15+2]                          ; CODE XREF=sub_4850+812
0000000000004b8f         cmp        r13, rax
0000000000004b92         jbe        loc_4ba4

0000000000004b94         mov        eax, ebx
0000000000004b96         shr        al, 0x3
0000000000004b99         and        eax, 0x7
0000000000004b9c         add        eax, 0x30
0000000000004b9f         mov        byte [r14+r15+2], al

                     loc_4ba4:
0000000000004ba4         and        ebx, 0x7                                    ; CODE XREF=sub_4850+834
0000000000004ba7         add        rbp, 0x1
0000000000004bab         add        r15, 0x3
0000000000004baf         add        ebx, 0x30
0000000000004bb2         cmp        rbp, rcx
0000000000004bb5         jae        loc_43a0

0000000000004bbb         mov        esi, edx

                     loc_4bbd:
0000000000004bbd         cmp        r13, r15                                    ; CODE XREF=sub_4850+985, sub_4850+1969
0000000000004bc0         jbe        loc_4bc6

0000000000004bc2         mov        byte [r14+r15], bl

                     loc_4bc6:
0000000000004bc6         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_4850+880
0000000000004bca         add        r15, 0x1

                     loc_4bce:
0000000000004bce         test       dl, dl                                      ; CODE XREF=sub_4850+707
0000000000004bd0         jne        loc_4b20

0000000000004bd6         mov        eax, esi
0000000000004bd8         xor        eax, 0x1
0000000000004bdb         and        eax, r8d
0000000000004bde         test       r10b, r10b
0000000000004be1         je         loc_4bf1

0000000000004be3         cmp        r13, r15
0000000000004be6         jbe        loc_4bed

0000000000004be8         mov        byte [r14+r15], 0x5c

                     loc_4bed:
0000000000004bed         add        r15, 0x1                                    ; CODE XREF=sub_4850+918

                     loc_4bf1:
0000000000004bf1         add        rbp, 0x1                                    ; CODE XREF=sub_4850+913
0000000000004bf5         cmp        rbp, rcx
0000000000004bf8         jae        loc_437c

0000000000004bfe         test       al, al
0000000000004c00         je         loc_4ffe

0000000000004c06         cmp        r13, r15
0000000000004c09         jbe        loc_4c10

0000000000004c0b         mov        byte [r14+r15], 0x27

                     loc_4c10:
0000000000004c10         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4850+953
0000000000004c14         cmp        r13, rax
0000000000004c17         jbe        loc_4c1f

0000000000004c19         mov        byte [r14+r15+1], 0x27

                     loc_4c1f:
0000000000004c1f         add        r15, 0x2                                    ; CODE XREF=sub_4850+967
0000000000004c23         xor        r10d, r10d
0000000000004c26         xor        r8d, r8d
0000000000004c29         jmp        loc_4bbd
0000000000004c2b         align      16

                     loc_4c30:
0000000000004c30         cmp        r15, 0x1                                    ; CODE XREF=sub_4850+579
0000000000004c34         je         loc_4a99

0000000000004c3a         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000004c3f         lea        rcx, qword [rdi+r15]
0000000000004c43         lea        rdx, qword [rdi+r14+1]
0000000000004c48         lea        r8, qword [rcx+r14]
0000000000004c4c         jmp        loc_4c5d
0000000000004c4e         align      16

                     loc_4c50:
0000000000004c50         add        rdx, 0x1                                    ; CODE XREF=sub_4850+1046, sub_4850+1072
0000000000004c54         cmp        r8, rdx
0000000000004c57         je         loc_4a99

                     loc_4c5d:
0000000000004c5d         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_4850+1020
0000000000004c60         sub        ecx, 0x5b
0000000000004c63         cmp        cl, 0x21
0000000000004c66         ja         loc_4c50

0000000000004c68         mov        esi, 0x1
0000000000004c6d         shl        rsi, cl
0000000000004c70         mov        rcx, rsi
0000000000004c73         movabs     rsi, 0x20000002b
0000000000004c7d         test       rcx, rsi
0000000000004c80         je         loc_4c50

0000000000004c82         mov        r14, qword [rsp+0xe8+var_A8]
0000000000004c87         mov        r13, qword [rsp+0xe8+var_78]
0000000000004c8c         mov        rbp, qword [rsp+0xe8+var_B8]
0000000000004c91         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_4c99:
0000000000004c99         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_4850+1227, sub_4850+1948, sub_4850+2585, sub_4850+2734
0000000000004c9e         je         loc_4cb0

0000000000004ca0         test       al, al
0000000000004ca2         mov        eax, 0x4
0000000000004ca7         cmove      eax, dword [rsp+0xe8+var_E0]
0000000000004cac         mov        dword [rsp+0xe8+var_E0], eax

                     loc_4cb0:
0000000000004cb0         sub        rsp, 0x8                                    ; CODE XREF=sub_4850+1102
0000000000004cb4         mov        rcx, rbp
0000000000004cb7         mov        rsi, r13
0000000000004cba         push       qword [rsp+0xf0+var_88]
0000000000004cbe         push       qword [rsp+0xf8+var_80]
0000000000004cc2         mov        rdi, r14
0000000000004cc5         push       0x0
0000000000004cc7         mov        r9d, dword [rsp+0x108+var_70]
0000000000004ccf         mov        r8d, dword [rsp+0x108+var_E0]
0000000000004cd4         mov        rdx, qword [rsp+0x108+var_D8]
0000000000004cd9         and        r9d, 0xfffffffd
0000000000004cdd         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004ce2         add        rsp, 0x20
0000000000004ce6         mov        r15, rax

                     loc_4ce9:
0000000000004ce9         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_4850+2549, sub_4850+2560, sub_4850+2711
0000000000004cf1         xor        rbx, qword [fs:0x28]
0000000000004cfa         mov        rax, r15
0000000000004cfd         jne        loc_5303

0000000000004d03         add        rsp, 0xb8
0000000000004d0a         pop        rbx
0000000000004d0b         pop        rbp
0000000000004d0c         pop        r12
0000000000004d0e         pop        r13
0000000000004d10         pop        r14
0000000000004d12         pop        r15
0000000000004d14         ret
                        ; endp
0000000000004d15         align      8

                     loc_4d18:
0000000000004d18         mov        rbp, r11                                    ; CODE XREF=sub_4400+194
0000000000004d1b         jmp        loc_4c99

                     loc_4d20:
0000000000004d20         cmp        r13, r15                                    ; CODE XREF=sub_4850+206, sub_4850+220
0000000000004d23         jbe        loc_4d2a

0000000000004d25         mov        byte [r14+r15], 0x27

                     loc_4d2a:
0000000000004d2a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4850+1235
0000000000004d2e         cmp        r13, rax
0000000000004d31         jbe        loc_4d39

0000000000004d33         mov        byte [r14+r15+1], 0x5c

                     loc_4d39:
0000000000004d39         lea        rax, qword [r15+2]                          ; CODE XREF=sub_4850+1249
0000000000004d3d         cmp        r13, rax
0000000000004d40         jbe        loc_5332

0000000000004d46         mov        rdx, r13
0000000000004d49         mov        byte [r14+r15+2], 0x27
0000000000004d4f         mov        r13, qword [rsp+arg_48]
0000000000004d54         jmp        loc_4932

                     loc_4d59:
0000000000004d59         mov        eax, r12d                                   ; CODE XREF=sub_46f0+99
0000000000004d5c         mov        ebx, 0x30
0000000000004d61         xor        r12d, r12d
0000000000004d64         jmp        sub_4300+105
                        ; endp

                     loc_4d69:
0000000000004d69         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_46f0+67
0000000000004d6f         jmp        loc_4739

                     loc_4d74:
0000000000004d74         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
0000000000004d76         jne        loc_41a3

0000000000004d7c         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_4d81:
0000000000004d81         test       r13, r13                                    ; CODE XREF=sub_4850+2749
0000000000004d84         jne        loc_531a

0000000000004d8a         lea        rax, qword [aCoreutils831sr+45]             ; 0x6b71
0000000000004d91         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004d9a         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004d9f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004da4         xor        r12d, r12d
0000000000004da7         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000004dac         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004db5         mov        qword [rsp+0xe8+var_A0], rax
0000000000004dba         mov        r15d, 0x1
0000000000004dc0         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000004dc8         jmp        loc_41e3
0000000000004dcd         align      16

                     loc_4dd0:
0000000000004dd0         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
0000000000004dd2         jne        loc_51cd

0000000000004dd8         test       r13, r13
0000000000004ddb         je         loc_5006

0000000000004de1         mov        byte [r14], 0x22
0000000000004de5         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004dea         xor        r12d, r12d
0000000000004ded         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004df2         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_4dfb:
0000000000004dfb         lea        rax, qword [aLibs+27]                       ; 0x778b, CODE XREF=sub_4850+1996
0000000000004e02         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000004e07         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004e0c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004e15         mov        r15d, 0x1
0000000000004e1b         mov        qword [rsp+0xe8+var_A0], rax
0000000000004e20         jmp        loc_41e3

                     loc_4e25:
0000000000004e25         lea        rax, qword [aLibs+27]                       ; case 6, 0x778b, CODE XREF=quotearg_buffer_restyled+145
0000000000004e2c         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004e31         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004e36         xor        r12d, r12d
0000000000004e39         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004e42         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000004e47         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004e4c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004e55         xor        r15d, r15d
0000000000004e58         mov        qword [rsp+0xe8+var_A0], rax
0000000000004e5d         mov        dword [rsp+0xe8+var_E0], 0x5
0000000000004e65         jmp        loc_41e3

                     loc_4e6a:
0000000000004e6a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
0000000000004e6f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004e74         xor        r12d, r12d
0000000000004e77         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004e80         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000004e85         xor        r15d, r15d
0000000000004e88         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004e8d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000004e96         mov        qword [rsp+0xe8+var_A0], 0x0
0000000000004e9f         jmp        loc_41e3

                     loc_4ea4:
0000000000004ea4         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
0000000000004ea9         je         loc_4f01

0000000000004eab         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x778d
0000000000004eb2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004eb4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004eb9         call       j_dcgettext                                 ; dcgettext
0000000000004ebe         mov        rcx, rax
0000000000004ec1         mov        qword [rsp+0xe8+var_80], rax
0000000000004ec6         lea        rax, qword [aLibs+29]                       ; 0x778d
0000000000004ecd         cmp        rcx, rax
0000000000004ed0         je         loc_526e

                     loc_4ed6:
0000000000004ed6         lea        rsi, qword [aCoreutils831sr+45]             ; argument "msgid" for method j_dcgettext, 0x6b71, CODE XREF=sub_4850+2607
0000000000004edd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004edf         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004ee4         call       j_dcgettext                                 ; dcgettext
0000000000004ee9         mov        rcx, rax
0000000000004eec         mov        qword [rsp+0xe8+var_88], rax
0000000000004ef1         lea        rax, qword [aCoreutils831sr+45]             ; 0x6b71
0000000000004ef8         cmp        rcx, rax
0000000000004efb         je         loc_5284

                     loc_4f01:
0000000000004f01         xor        r15d, r15d                                  ; CODE XREF=sub_4850+1625, sub_4850+2629
0000000000004f04         test       ebx, ebx
0000000000004f06         je         loc_50cd

                     loc_4f0c:
0000000000004f0c         test       ebx, ebx                                    ; CODE XREF=sub_4850+2183, sub_4850+2214
0000000000004f0e         mov        rbx, qword [rsp+0xe8+var_88]
0000000000004f13         setne      byte [rsp+0xe8+var_D9]
0000000000004f18         xor        r12d, r12d
0000000000004f1b         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
0000000000004f1e         call       j_strlen                                    ; strlen
0000000000004f23         mov        qword [rsp+0xe8+var_A0], rbx
0000000000004f28         mov        qword [rsp+0xe8+var_D0], rax
0000000000004f2d         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004f32         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004f37         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004f40         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004f45         jmp        loc_41e3

                     loc_4f4a:
0000000000004f4a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
0000000000004f4f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004f54         xor        r12d, r12d
0000000000004f57         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004f60         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000004f65         xor        r15d, r15d
0000000000004f68         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000004f6d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000004f76         mov        qword [rsp+0xe8+var_A0], 0x0
0000000000004f7f         jmp        loc_41e3

                     loc_4f84:
0000000000004f84         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000004f89         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004f8e         xor        r12d, r12d
0000000000004f91         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004f9a         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000004f9f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004fa4         jmp        loc_41c3

                     loc_4fa9:
0000000000004fa9         cmp        r13, r15                                    ; CODE XREF=sub_46f0+133
0000000000004fac         jbe        loc_4fb3

0000000000004fae         mov        byte [r14+r15], 0x30

                     loc_4fb3:
0000000000004fb3         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_4850+1884
0000000000004fb7         cmp        r13, rax
0000000000004fba         jbe        loc_4fc2

0000000000004fbc         mov        byte [r14+rcx+2], 0x30

                     loc_4fc2:
0000000000004fc2         mov        eax, r12d                                   ; CODE XREF=sub_4850+1898
0000000000004fc5         lea        r15, qword [rcx+3]
0000000000004fc9         xor        r12d, r12d
0000000000004fcc         mov        ebx, 0x30
0000000000004fd1         jmp        sub_4300+56
                        ; endp
0000000000004fd6         align      32

                     loc_4fe0:
0000000000004fe0         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_4850+731
0000000000004fe5         mov        rbp, r11
0000000000004fe8         mov        byte [rsp+0xe8+var_DB], bl
0000000000004fec         jmp        loc_4c99

                     loc_4ff1:
0000000000004ff1         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_45f0+105
0000000000004ff6         xor        r12d, r12d
0000000000004ff9         jmp        loc_4b00

                     loc_4ffe:
0000000000004ffe         xor        r10d, r10d                                  ; CODE XREF=sub_4850+944
0000000000005001         jmp        loc_4bbd

                     loc_5006:
0000000000005006         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_4850+1419
000000000000500f         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000005014         xor        r12d, r12d
0000000000005017         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000501c         jmp        loc_4dfb

                     loc_5021:
0000000000005021         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_4850+561
0000000000005026         mov        rsi, r14
0000000000005029         mov        rcx, r13
000000000000502c         mov        rax, rbx
000000000000502f         mov        rdi, rbx
0000000000005032         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000005038         movzx      ebx, byte [rsp+0xe8+var_6A]
000000000000503d         mov        r9, qword [rsp+0xe8+var_60]
0000000000005045         cmp        rsi, r11
0000000000005048         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000504e         mov        r15, qword [rsp+0xe8+var_68]
0000000000005056         mov        r14, qword [rsp+0xe8+var_A8]
000000000000505b         mov        r13, qword [rsp+0xe8+var_78]
0000000000005060         jae        loc_5088

0000000000005062         cmp        byte [rcx], 0x0
0000000000005065         jne        loc_5077

0000000000005067         jmp        loc_5088
0000000000005069         align      16

                     loc_5070:
0000000000005070         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_4850+2099
0000000000005075         je         loc_5085

                     loc_5077:
0000000000005077         add        rax, 0x1                                    ; CODE XREF=sub_4850+2069
000000000000507b         lea        rdx, qword [rbp+rax]
0000000000005080         cmp        r11, rdx
0000000000005083         ja         loc_5070

                     loc_5085:
0000000000005085         mov        rdi, rax                                    ; CODE XREF=sub_4850+2085

                     loc_5088:
0000000000005088         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_4850+2064, sub_4850+2071
000000000000508d         xor        r12d, r12d
0000000000005090         jmp        loc_4af6

                     loc_5095:
0000000000005095         mov        rdi, rbx                                    ; CODE XREF=sub_4850+551
0000000000005098         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000509e         movzx      ebx, byte [rsp+0xe8+var_6A]
00000000000050a3         movzx      r10d, byte [rsp+0xe8+var_69]
00000000000050a9         mov        r15, qword [rsp+0xe8+var_68]
00000000000050b1         xor        r12d, r12d
00000000000050b4         mov        r14, qword [rsp+0xe8+var_A8]
00000000000050b9         mov        r13, qword [rsp+0xe8+var_78]
00000000000050be         mov        r11, qword [rsp+0xe8+var_B8]
00000000000050c3         movzx      edx, byte [rsp+0xe8+var_DB]
00000000000050c8         jmp        loc_4af6

                     loc_50cd:
00000000000050cd         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_4850+1718
00000000000050d2         movzx      eax, byte [rdx]
00000000000050d5         test       al, al
00000000000050d7         je         loc_4f0c

00000000000050dd         nop        dword [rax]

                     loc_50e0:
00000000000050e0         cmp        r13, r15                                    ; CODE XREF=sub_4850+2212
00000000000050e3         jbe        loc_50e9

00000000000050e5         mov        byte [r14+r15], al

                     loc_50e9:
00000000000050e9         add        r15, 0x1                                    ; CODE XREF=sub_4850+2195
00000000000050ed         movzx      eax, byte [rdx+r15]
00000000000050f2         test       al, al
00000000000050f4         jne        loc_50e0

00000000000050f6         jmp        loc_4f0c

                     loc_50fb:
00000000000050fb         mov        eax, edx                                    ; CODE XREF=sub_4850+682
00000000000050fd         jmp        loc_4657

                     loc_5102:
0000000000005102         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_4850+290
0000000000005106         cmp        bl, 0x3e
0000000000005109         ja         loc_4980

000000000000510f         movabs     rax, 0x7000a38200000000
0000000000005119         bt         rax, rbx
000000000000511d         jae        loc_4980

0000000000005123         cmp        byte [rsp+arg_7], 0x0
0000000000005128         jne        loc_5312

000000000000512e         cmp        r13, r15
0000000000005131         jbe        loc_5138

0000000000005133         mov        byte [r14+r15], 0x3f

                     loc_5138:
0000000000005138         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4850+2273
000000000000513c         cmp        r13, rax
000000000000513f         jbe        loc_5147

0000000000005141         mov        byte [r14+r15+1], 0x22

                     loc_5147:
0000000000005147         lea        rax, qword [r15+2]                          ; CODE XREF=sub_4850+2287
000000000000514b         cmp        r13, rax
000000000000514e         jbe        loc_5156

0000000000005150         mov        byte [r14+r15+2], 0x22

                     loc_5156:
0000000000005156         lea        rax, qword [r15+3]                          ; CODE XREF=sub_4850+2302
000000000000515a         cmp        r13, rax
000000000000515d         jbe        loc_5165

000000000000515f         mov        byte [r14+r15+3], 0x3f

                     loc_5165:
0000000000005165         add        r15, 0x4                                    ; CODE XREF=sub_4850+2317
0000000000005169         xor        edx, edx
000000000000516b         xor        r12d, r12d
000000000000516e         xor        eax, eax
0000000000005170         mov        rbp, rcx
0000000000005173         jmp        sub_4300+56
                        ; endp

                     loc_5178:
0000000000005178         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
000000000000517a         je         loc_5308

0000000000005180         lea        rax, qword [aCoreutils831sr+45]             ; 0x6b71
0000000000005187         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000518c         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000005191         xor        r12d, r12d
0000000000005194         mov        qword [rsp+0xe8+var_98], 0x0
000000000000519d         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000051a2         mov        byte [rsp+0xe8+var_DB], 0x0
00000000000051a7         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000051b0         xor        r15d, r15d
00000000000051b3         mov        qword [rsp+0xe8+var_A0], rax
00000000000051b8         jmp        loc_41e3
00000000000051bd         align      64

                     loc_51c0:
00000000000051c0         mov        rbp, r11                                    ; CODE XREF=sub_4850+333
00000000000051c3         movzx      eax, byte [rsp+arg_7]
00000000000051c8         jmp        sub_4850+1097
                        ; endp

                     loc_51cd:
00000000000051cd         lea        rax, qword [aLibs+27]                       ; 0x778b, CODE XREF=sub_4850+1410
00000000000051d4         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000051d9         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000051de         xor        r12d, r12d
00000000000051e1         mov        qword [rsp+0xe8+var_98], 0x0
00000000000051ea         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000051ef         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000051f4         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000051fd         xor        r15d, r15d
0000000000005200         mov        qword [rsp+0xe8+var_A0], rax
0000000000005205         jmp        loc_41e3

                     loc_520a:
000000000000520a         mov        eax, edx                                    ; CODE XREF=sub_4850+87

                     loc_520c:
000000000000520c         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_4850+76, sub_4850+2721
0000000000005211         test       rbx, rbx
0000000000005214         je         loc_5242

0000000000005216         test       al, al
0000000000005218         je         loc_5242

000000000000521a         movzx      ecx, byte [rbx]
000000000000521d         mov        rax, rbx
0000000000005220         test       cl, cl
0000000000005222         je         loc_5242

0000000000005224         mov        rdx, r15
0000000000005227         sub        rax, r15

                     loc_522a:
000000000000522a         cmp        r13, rdx                                    ; CODE XREF=sub_4850+2541
000000000000522d         jbe        loc_5233

000000000000522f         mov        byte [r14+rdx], cl

                     loc_5233:
0000000000005233         add        rdx, 0x1                                    ; CODE XREF=sub_4850+2525
0000000000005237         movzx      ecx, byte [rax+rdx]
000000000000523b         test       cl, cl
000000000000523d         jne        loc_522a

000000000000523f         mov        r15, rdx

                     loc_5242:
0000000000005242         cmp        r13, r15                                    ; CODE XREF=sub_4850+2500, sub_4850+2504, sub_4850+2514
0000000000005245         jbe        loc_4ce9

000000000000524b         mov        byte [r14+r15], 0x0
0000000000005250         jmp        loc_4ce9

                     loc_5255:
0000000000005255         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
000000000000525a         movzx      ebx, byte [rsp+0xe8+var_D9]
000000000000525f         mov        rbp, r11
0000000000005262         sete       al
0000000000005265         mov        byte [rsp+0xe8+var_DB], bl
0000000000005269         jmp        loc_4c99

                     loc_526e:
000000000000526e         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_4850+1664
0000000000005272         mov        rdi, rcx
0000000000005275         call       gettext_quote.part.1                        ; gettext_quote.part.1
000000000000527a         mov        qword [rsp+0xe8+var_80], rax
000000000000527f         jmp        loc_4ed6

                     loc_5284:
0000000000005284         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_4850+1707
0000000000005288         mov        rdi, rcx
000000000000528b         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000005290         mov        qword [rsp+0xe8+var_88], rax
0000000000005295         jmp        loc_4f01

                     loc_529a:
000000000000529a         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_46f0+16
000000000000529f         mov        rbp, r11
00000000000052a2         mov        eax, edx
00000000000052a4         mov        byte [rsp+arg_5], bl
00000000000052a8         jmp        sub_4850+1097
                        ; endp

                     loc_52ad:
00000000000052ad         sub        rsp, 0x8                                    ; CODE XREF=sub_4850+98
00000000000052b1         mov        r8d, 0x5
00000000000052b7         mov        rcx, r11
00000000000052ba         push       qword [rsp+0xf0+var_88]
00000000000052be         push       qword [rsp+0xf8+var_80]
00000000000052c2         mov        rdi, r14
00000000000052c5         push       qword [rsp+0x100+var_C8]
00000000000052c9         mov        r9d, dword [rsp+0x108+var_70]
00000000000052d1         mov        rdx, qword [rsp+0x108+var_D8]
00000000000052d6         mov        rsi, qword [rsp+0x108+var_98]
00000000000052db         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000052e0         add        rsp, 0x20
00000000000052e4         mov        r15, rax
00000000000052e7         jmp        loc_4ce9

                     loc_52ec:
00000000000052ec         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_4850+121
00000000000052f1         jmp        loc_520c

                     loc_52f6:
00000000000052f6         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_4850+63
00000000000052fe         jmp        loc_4c99

                     loc_5303:
0000000000005303         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_4850+1197
                        ; endp

                     loc_5308:
0000000000005308         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_4850+2346
000000000000530d         jmp        loc_4d81

                     loc_5312:
0000000000005312         mov        rbp, r11                                    ; CODE XREF=sub_4850+2264
0000000000005315         jmp        sub_4850+1120
                        ; endp

                     loc_531a:
000000000000531a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_4850+1332
000000000000531f         xor        eax, eax
0000000000005321         xor        r12d, r12d
0000000000005324         mov        qword [rsp+0xe8+var_98], 0x0
000000000000532d         jmp        loc_48d4

                     loc_5332:
0000000000005332         mov        rdx, r13                                    ; CODE XREF=sub_4850+1264
0000000000005335         mov        r13, qword [rsp+arg_48]
000000000000533a         jmp        loc_4932

                     loc_533f:
000000000000533f         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
0000000000005344         align      16                                          ; End of unwind block (FDE at 0x85e8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
0000000000005350         push       r15                                         ; Begin of unwind block (FDE at 0x8660), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
0000000000005352         push       r14
0000000000005354         movsxd     r15, edi
0000000000005357         push       r13
0000000000005359         push       r12
000000000000535b         mov        r14, rdx
000000000000535e         push       rbp
000000000000535f         push       rbx
0000000000005360         mov        rbp, rcx
0000000000005363         sub        rsp, 0x28
0000000000005367         mov        qword [rsp+0x58+var_50], rsi
000000000000536c         call       j___errno_location                          ; __errno_location
0000000000005371         mov        r13, rax
0000000000005374         mov        eax, dword [rax]
0000000000005376         test       r15d, r15d
0000000000005379         mov        rbx, qword [slotvec]                        ; slotvec
0000000000005380         mov        dword [rsp+0x58+var_40], eax
0000000000005384         js         loc_54f1

000000000000538a         cmp        dword [nslots], r15d                        ; nslots
0000000000005391         jg         loc_53f5

0000000000005393         cmp        r15d, 0x7fffffff
000000000000539a         je         loc_54f6

00000000000053a0         lea        r12d, dword [r15+1]
00000000000053a4         lea        rax, qword [slotvec0]                       ; slotvec0
00000000000053ab         movsxd     rsi, r12d
00000000000053ae         shl        rsi, 0x4
00000000000053b2         cmp        rbx, rax
00000000000053b5         je         loc_54d0

00000000000053bb         mov        rdi, rbx                                    ; argument #1 for method xrealloc
00000000000053be         call       xrealloc                                    ; xrealloc
00000000000053c3         mov        rbx, rax
00000000000053c6         mov        qword [slotvec], rax                        ; slotvec

                     loc_53cd:
00000000000053cd         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
00000000000053d4         mov        edx, r12d
00000000000053d7         xor        esi, esi                                    ; argument "__c" for method j_memset
00000000000053d9         sub        edx, edi
00000000000053db         shl        rdi, 0x4
00000000000053df         movsxd     rdx, edx
00000000000053e2         add        rdi, rbx                                    ; argument "__s" for method j_memset
00000000000053e5         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
00000000000053e9         call       j_memset                                    ; memset
00000000000053ee         mov        dword [nslots], r12d                        ; nslots

                     loc_53f5:
00000000000053f5         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
00000000000053f8         shl        r15, 0x4
00000000000053fc         sub        rsp, 0x8
0000000000005400         add        rbx, r15
0000000000005403         lea        r15, qword [rbp+8]
0000000000005407         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
000000000000540b         mov        r11, qword [rbx]
000000000000540e         mov        r12, qword [rbx+8]
0000000000005412         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000005415         or         eax, 0x1
0000000000005418         mov        dword [rsp+0x60+var_3C], eax
000000000000541c         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
000000000000541f         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
0000000000005422         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000005425         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000005427         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
000000000000542a         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
000000000000542f         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
0000000000005432         mov        qword [rsp+0x78+var_48], r11
0000000000005437         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000543c         add        rsp, 0x20
0000000000005440         mov        r11, qword [rsp+0x58+var_48]
0000000000005445         cmp        r11, rax
0000000000005448         ja         loc_54b1

000000000000544a         lea        rsi, qword [rax+1]
000000000000544e         lea        rax, qword [slot0]                          ; slot0
0000000000005455         cmp        r12, rax
0000000000005458         mov        qword [rbx], rsi
000000000000545b         je         loc_546f

000000000000545d         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000005460         mov        qword [rsp+0x58+var_48], rsi
0000000000005465         call       j_free                                      ; free
000000000000546a         mov        rsi, qword [rsp+0x58+var_48]

                     loc_546f:
000000000000546f         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
0000000000005472         mov        qword [rsp+0x58+var_48], rsi
0000000000005477         call       xmalloc                                     ; xmalloc
000000000000547c         sub        rsp, 0x8
0000000000005480         mov        qword [rbx+8], rax
0000000000005484         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000005488         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
000000000000548b         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
000000000000548e         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000005491         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000005493         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
0000000000005498         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
000000000000549b         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
00000000000054a0         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
00000000000054a5         mov        r12, rax
00000000000054a8         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000054ad         add        rsp, 0x20

                     loc_54b1:
00000000000054b1         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
00000000000054b5         mov        dword [r13], eax
00000000000054b9         add        rsp, 0x28
00000000000054bd         mov        rax, r12
00000000000054c0         pop        rbx
00000000000054c1         pop        rbp
00000000000054c2         pop        r12
00000000000054c4         pop        r13
00000000000054c6         pop        r14
00000000000054c8         pop        r15
00000000000054ca         ret
                        ; endp
00000000000054cb         align      16

                     loc_54d0:
00000000000054d0         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
00000000000054d2         call       xrealloc                                    ; xrealloc
00000000000054d7         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
00000000000054df         mov        rbx, rax
00000000000054e2         mov        qword [slotvec], rax                        ; slotvec
00000000000054e9         movups     xmmword [rax], xmm0
00000000000054ec         jmp        loc_53cd

                     loc_54f1:
00000000000054f1         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_54f6:
00000000000054f6         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_54fb:
00000000000054fb         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x8660)
                     clone_quoting_options:
0000000000005500         push       r12                                         ; Begin of unwind block (FDE at 0x86cc)
0000000000005502         push       rbp
0000000000005503         push       rbx
0000000000005504         mov        rbx, rdi
0000000000005507         call       j___errno_location                          ; __errno_location
000000000000550c         mov        r12d, dword [rax]
000000000000550f         mov        rbp, rax
0000000000005512         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000005519         test       rbx, rbx
000000000000551c         mov        esi, 0x38                                   ; argument #2 for method xmemdup
0000000000005521         cmove      rbx, rax
0000000000005525         mov        rdi, rbx                                    ; argument #1 for method xmemdup
0000000000005528         call       xmemdup                                     ; xmemdup
000000000000552d         mov        dword [rbp], r12d
0000000000005531         pop        rbx
0000000000005532         pop        rbp
0000000000005533         pop        r12
0000000000005535         ret
                        ; endp
0000000000005536         align      64                                          ; End of unwind block (FDE at 0x86cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
0000000000005540         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x86f8), default_quoting_options
0000000000005547         test       rdi, rdi
000000000000554a         cmove      rdi, rax
000000000000554e         mov        eax, dword [rdi]
0000000000005550         ret
                        ; endp
0000000000005551         align      32                                          ; End of unwind block (FDE at 0x86f8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
0000000000005560         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x870c), default_quoting_options
0000000000005567         test       rdi, rdi
000000000000556a         cmove      rdi, rax
000000000000556e         mov        dword [rdi], esi
0000000000005570         ret
                        ; endp
0000000000005571         align      128                                         ; End of unwind block (FDE at 0x870c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
0000000000005580         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8720), default_quoting_options
0000000000005587         test       rdi, rdi
000000000000558a         mov        ecx, esi
000000000000558c         cmove      rdi, rax
0000000000005590         mov        eax, esi
0000000000005592         and        ecx, 0x1f
0000000000005595         shr        al, 0x5
0000000000005598         movzx      eax, al
000000000000559b         lea        rdi, qword [rdi+rax*4+8]
00000000000055a0         mov        esi, dword [rdi]
00000000000055a2         mov        eax, esi
00000000000055a4         shr        eax, cl
00000000000055a6         xor        edx, eax
00000000000055a8         and        eax, 0x1
00000000000055ab         and        edx, 0x1
00000000000055ae         shl        edx, cl
00000000000055b0         xor        edx, esi
00000000000055b2         mov        dword [rdi], edx
00000000000055b4         ret
                        ; endp
00000000000055b5         align      64                                          ; End of unwind block (FDE at 0x8720)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
00000000000055c0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8734), default_quoting_options
00000000000055c7         test       rdi, rdi
00000000000055ca         cmove      rdi, rax
00000000000055ce         mov        eax, dword [rdi+4]
00000000000055d1         mov        dword [rdi+4], esi
00000000000055d4         ret
                        ; endp
00000000000055d5         align      32                                          ; End of unwind block (FDE at 0x8734)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
00000000000055e0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8748), default_quoting_options
00000000000055e7         test       rdi, rdi
00000000000055ea         cmove      rdi, rax
00000000000055ee         test       rsi, rsi
00000000000055f1         mov        dword [rdi], 0xa
00000000000055f7         je         loc_5607

00000000000055f9         test       rdx, rdx
00000000000055fc         je         loc_5607

00000000000055fe         mov        qword [rdi+0x28], rsi
0000000000005602         mov        qword [rdi+0x30], rdx
0000000000005606         ret
                        ; endp

                     loc_5607:
0000000000005607         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
000000000000560b         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
0000000000005610         push       r15                                         ; End of unwind block (FDE at 0x8748), Begin of unwind block (FDE at 0x875c)
0000000000005612         push       r14
0000000000005614         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000561b         push       r13
000000000000561d         push       r12
000000000000561f         mov        r13, rdi
0000000000005622         push       rbp
0000000000005623         push       rbx
0000000000005624         mov        rbx, r8
0000000000005627         mov        r14, rsi
000000000000562a         mov        r15, rdx
000000000000562d         sub        rsp, 0x18
0000000000005631         test       r8, r8
0000000000005634         cmove      rbx, rax
0000000000005638         mov        qword [rsp+0x48+var_40], rcx
000000000000563d         call       j___errno_location                          ; __errno_location
0000000000005642         mov        r12d, dword [rax]
0000000000005645         mov        rbp, rax
0000000000005648         lea        rax, qword [rbx+8]
000000000000564c         sub        rsp, 0x8
0000000000005650         mov        r9d, dword [rbx+4]
0000000000005654         push       qword [rbx+0x30]
0000000000005657         mov        r8d, dword [rbx]
000000000000565a         push       qword [rbx+0x28]
000000000000565d         mov        rdx, r15
0000000000005660         push       rax
0000000000005661         mov        rcx, qword [rsp+0x68+var_40]
0000000000005666         mov        rsi, r14
0000000000005669         mov        rdi, r13
000000000000566c         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000005671         mov        dword [rbp], r12d
0000000000005675         add        rsp, 0x38
0000000000005679         pop        rbx
000000000000567a         pop        rbp
000000000000567b         pop        r12
000000000000567d         pop        r13
000000000000567f         pop        r14
0000000000005681         pop        r15
0000000000005683         ret
                        ; endp
0000000000005684         align      16                                          ; End of unwind block (FDE at 0x875c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
0000000000005690         push       r15                                         ; Begin of unwind block (FDE at 0x87b0), CODE XREF=quotearg_alloc+5
0000000000005692         push       r14
0000000000005694         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000569b         push       r13
000000000000569d         push       r12
000000000000569f         mov        r12, rdx
00000000000056a2         push       rbp
00000000000056a3         push       rbx
00000000000056a4         mov        rbx, rcx
00000000000056a7         mov        r14, rdi
00000000000056aa         mov        r15, rsi
00000000000056ad         sub        rsp, 0x38
00000000000056b1         test       rcx, rcx
00000000000056b4         cmove      rbx, rax
00000000000056b8         xor        ebp, ebp
00000000000056ba         call       j___errno_location                          ; __errno_location
00000000000056bf         test       r12, r12
00000000000056c2         mov        r13, rax
00000000000056c5         mov        eax, dword [rax]
00000000000056c7         sete       bpl
00000000000056cb         or         ebp, dword [rbx+4]
00000000000056ce         lea        r10, qword [rbx+8]
00000000000056d2         sub        rsp, 0x8
00000000000056d6         mov        r8d, dword [rbx]
00000000000056d9         mov        rcx, r15
00000000000056dc         mov        dword [rsp+0x70+var_5C], eax
00000000000056e0         push       qword [rbx+0x30]
00000000000056e3         mov        rdx, r14
00000000000056e6         push       qword [rbx+0x28]
00000000000056e9         push       r10
00000000000056eb         xor        esi, esi
00000000000056ed         mov        r9d, ebp
00000000000056f0         xor        edi, edi
00000000000056f2         mov        qword [rsp+0x88+var_48], r10
00000000000056f7         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000056fc         lea        rsi, qword [rax+1]
0000000000005700         mov        qword [rsp+0x88+var_40], rax
0000000000005705         add        rsp, 0x20
0000000000005709         mov        rdi, rsi
000000000000570c         mov        qword [rsp+0x68+var_50], rsi
0000000000005711         call       xmalloc                                     ; xmalloc
0000000000005716         mov        qword [rsp+0x68+var_58], rax
000000000000571b         sub        rsp, 0x8
000000000000571f         push       qword [rbx+0x30]
0000000000005722         push       qword [rbx+0x28]
0000000000005725         mov        r10, qword [rsp+0x80+var_48]
000000000000572a         mov        r9d, ebp
000000000000572d         mov        r8d, dword [rbx]
0000000000005730         mov        rcx, r15
0000000000005733         mov        rdx, r14
0000000000005736         mov        rdi, rax
0000000000005739         push       r10
000000000000573b         mov        rsi, qword [rsp+0x88+var_50]
0000000000005740         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000005745         mov        eax, dword [rsp+0x88+var_5C]
0000000000005749         add        rsp, 0x20
000000000000574d         test       r12, r12
0000000000005750         mov        dword [r13], eax
0000000000005754         je         loc_575f

0000000000005756         mov        r11, qword [rsp+0x68+var_40]
000000000000575b         mov        qword [r12], r11

                     loc_575f:
000000000000575f         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
0000000000005764         add        rsp, 0x38
0000000000005768         pop        rbx
0000000000005769         pop        rbp
000000000000576a         pop        r12
000000000000576c         pop        r13
000000000000576e         pop        r14
0000000000005770         pop        r15
0000000000005772         ret
                        ; endp
0000000000005773         align      128                                         ; End of unwind block (FDE at 0x87b0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
0000000000005780         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x881c)
0000000000005783         xor        edx, edx
0000000000005785         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
000000000000578a         align      16                                          ; End of unwind block (FDE at 0x881c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
0000000000005790         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0x8830), nslots
0000000000005796         push       r12
0000000000005798         mov        r12, qword [slotvec]                        ; slotvec
000000000000579f         push       rbp
00000000000057a0         push       rbx
00000000000057a1         cmp        eax, 0x1
00000000000057a4         jle        loc_57d1

00000000000057a6         sub        eax, 0x2
00000000000057a9         lea        rbx, qword [r12+0x18]
00000000000057ae         shl        rax, 0x4
00000000000057b2         lea        rbp, qword [r12+rax+0x28]
00000000000057b7         nop        word [rax+rax]

                     loc_57c0:
00000000000057c0         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
00000000000057c3         add        rbx, 0x10
00000000000057c7         call       j_free                                      ; free
00000000000057cc         cmp        rbx, rbp
00000000000057cf         jne        loc_57c0

                     loc_57d1:
00000000000057d1         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
00000000000057d6         lea        rbx, qword [slot0]                          ; slot0
00000000000057dd         cmp        rdi, rbx
00000000000057e0         je         loc_57f9

00000000000057e2         call       j_free                                      ; free
00000000000057e7         mov        qword [slotvec0], 0x100                     ; slotvec0
00000000000057f2         mov        qword [slotvec0+8], rbx                     ; 0x20a078

                     loc_57f9:
00000000000057f9         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
0000000000005800         cmp        r12, rbx
0000000000005803         je         loc_5814

0000000000005805         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000005808         call       j_free                                      ; free
000000000000580d         mov        qword [slotvec], rbx                        ; slotvec

                     loc_5814:
0000000000005814         pop        rbx                                         ; CODE XREF=quotearg_free+115
0000000000005815         mov        dword [nslots], 0x1                         ; nslots
000000000000581f         pop        rbp
0000000000005820         pop        r12
0000000000005822         ret
                        ; endp
0000000000005823         align      16                                          ; End of unwind block (FDE at 0x8830)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
0000000000005830         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x885c), default_quoting_options
0000000000005837         mov        rdx, 0xffffffffffffffff
000000000000583e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005843         align      16                                          ; End of unwind block (FDE at 0x885c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
0000000000005850         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8870), default_quoting_options
0000000000005857         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000585c         align      32                                          ; End of unwind block (FDE at 0x8870)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
0000000000005860         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8884), default_quoting_options
0000000000005867         mov        rsi, rdi
000000000000586a         mov        rdx, 0xffffffffffffffff
0000000000005871         xor        edi, edi
0000000000005873         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005878         align      128                                         ; End of unwind block (FDE at 0x8884)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
0000000000005880         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8898), default_quoting_options
0000000000005887         mov        rdx, rsi
000000000000588a         mov        rsi, rdi
000000000000588d         xor        edi, edi
000000000000588f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005894         align      32                                          ; End of unwind block (FDE at 0x8898)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
00000000000058a0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x88ac)
00000000000058a4         mov        rax, rdx
00000000000058a7         mov        rdx, qword [fs:0x28]
00000000000058b0         mov        qword [rsp+0x48+var_10], rdx
00000000000058b5         xor        edx, edx
00000000000058b7         cmp        esi, 0xa
00000000000058ba         je         loc_5924

00000000000058bc         mov        dword [rsp+0x48+var_48], esi
00000000000058bf         mov        rcx, rsp
00000000000058c2         mov        rdx, 0xffffffffffffffff
00000000000058c9         mov        rsi, rax
00000000000058cc         mov        qword [rsp+0x48+var_44], 0x0
00000000000058d5         mov        qword [rsp+0x48+var_3C], 0x0
00000000000058de         mov        qword [rsp+0x48+var_34], 0x0
00000000000058e7         mov        qword [rsp+0x48+var_2C], 0x0
00000000000058f0         mov        qword [rsp+0x48+var_24], 0x0
00000000000058f9         mov        qword [rsp+0x48+var_1C], 0x0
0000000000005902         mov        dword [rsp+0x48+var_14], 0x0
000000000000590a         call       quotearg_n_options                          ; quotearg_n_options
000000000000590f         mov        rcx, qword [rsp+0x48+var_10]
0000000000005914         xor        rcx, qword [fs:0x28]
000000000000591d         jne        loc_5929

000000000000591f         add        rsp, 0x48
0000000000005923         ret
                        ; endp

                     loc_5924:
0000000000005924         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_5929:
0000000000005929         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
000000000000592e         align      16                                          ; End of unwind block (FDE at 0x88ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
0000000000005930         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x88c8), CODE XREF=quotearg_style_mem+10
0000000000005934         mov        rax, rdx
0000000000005937         mov        rdx, rcx
000000000000593a         mov        rcx, qword [fs:0x28]
0000000000005943         mov        qword [rsp+0x48+var_10], rcx
0000000000005948         xor        ecx, ecx
000000000000594a         cmp        esi, 0xa
000000000000594d         je         loc_59b0

000000000000594f         mov        dword [rsp+0x48+var_48], esi
0000000000005952         mov        rcx, rsp
0000000000005955         mov        rsi, rax
0000000000005958         mov        qword [rsp+0x48+var_44], 0x0
0000000000005961         mov        qword [rsp+0x48+var_3C], 0x0
000000000000596a         mov        qword [rsp+0x48+var_34], 0x0
0000000000005973         mov        qword [rsp+0x48+var_2C], 0x0
000000000000597c         mov        qword [rsp+0x48+var_24], 0x0
0000000000005985         mov        qword [rsp+0x48+var_1C], 0x0
000000000000598e         mov        dword [rsp+0x48+var_14], 0x0
0000000000005996         call       quotearg_n_options                          ; quotearg_n_options
000000000000599b         mov        rdx, qword [rsp+0x48+var_10]
00000000000059a0         xor        rdx, qword [fs:0x28]
00000000000059a9         jne        loc_59b5

00000000000059ab         add        rsp, 0x48
00000000000059af         ret
                        ; endp

                     loc_59b0:
00000000000059b0         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_59b5:
00000000000059b5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
00000000000059ba         align      64                                          ; End of unwind block (FDE at 0x88c8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
00000000000059c0         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x88e4), CODE XREF=main+3712, main+5165
00000000000059c3         mov        esi, edi
00000000000059c5         xor        edi, edi
00000000000059c7         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
00000000000059cc         align      16                                          ; End of unwind block (FDE at 0x88e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
00000000000059d0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x88f8)
00000000000059d3         mov        rdx, rsi
00000000000059d6         mov        esi, edi
00000000000059d8         xor        edi, edi
00000000000059da         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
00000000000059df         align      32                                          ; End of unwind block (FDE at 0x88f8)

                     quotearg_char_mem:
00000000000059e0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x890c), CODE XREF=quotearg_char+11
00000000000059e4         mov        ecx, edx
00000000000059e6         mov        rax, qword [fs:0x28]
00000000000059ef         mov        qword [rsp+0x48+var_10], rax
00000000000059f4         xor        eax, eax
00000000000059f6         mov        rax, qword [qword_20a550]                   ; qword_20a550
00000000000059fd         mov        r8, rsp
0000000000005a00         and        ecx, 0x1f
0000000000005a03         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000005a0b         mov        qword [rsp+0x48+var_18], rax
0000000000005a10         mov        eax, edx
0000000000005a12         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000005a16         shr        al, 0x5
0000000000005a19         movzx      eax, al
0000000000005a1c         lea        r9, qword [r8+rax*4+8]
0000000000005a21         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20a530
0000000000005a29         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000005a2e         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20a540
0000000000005a36         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000005a3b         mov        edx, dword [r9]
0000000000005a3e         mov        eax, edx
0000000000005a40         shr        eax, cl
0000000000005a42         not        eax
0000000000005a44         and        eax, 0x1
0000000000005a47         shl        eax, cl
0000000000005a49         mov        rcx, r8
0000000000005a4c         xor        eax, edx
0000000000005a4e         mov        rdx, rsi
0000000000005a51         mov        rsi, rdi
0000000000005a54         mov        dword [r9], eax
0000000000005a57         xor        edi, edi
0000000000005a59         call       quotearg_n_options                          ; quotearg_n_options
0000000000005a5e         mov        rsi, qword [rsp+0x48+var_10]
0000000000005a63         xor        rsi, qword [fs:0x28]
0000000000005a6c         jne        loc_5a73

0000000000005a6e         add        rsp, 0x48
0000000000005a72         ret
                        ; endp

                     loc_5a73:
0000000000005a73         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
0000000000005a78         align      128                                         ; End of unwind block (FDE at 0x890c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
0000000000005a80         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0x8928)
0000000000005a84         mov        rsi, 0xffffffffffffffff
0000000000005a8b         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
0000000000005a90         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0x8928), Begin of unwind block (FDE at 0x893c), CODE XREF=close_stdout+101
0000000000005a95         mov        rsi, 0xffffffffffffffff
0000000000005a9c         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000005aa1         align      16                                          ; End of unwind block (FDE at 0x893c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
0000000000005ab0         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0x8950)
0000000000005ab5         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000005aba         align      64                                          ; End of unwind block (FDE at 0x8950)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
0000000000005ac0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x8964)
0000000000005ac4         mov        rax, rdx
0000000000005ac7         mov        rdx, qword [fs:0x28]
0000000000005ad0         mov        qword [rsp+0x48+var_10], rdx
0000000000005ad5         xor        edx, edx
0000000000005ad7         cmp        esi, 0xa
0000000000005ada         je         loc_5b44

0000000000005adc         mov        dword [rsp+0x48+var_48], esi
0000000000005adf         mov        rcx, rsp
0000000000005ae2         mov        rdx, 0xffffffffffffffff
0000000000005ae9         mov        rsi, rax
0000000000005aec         mov        qword [rsp+0x48+var_44], 0x0
0000000000005af5         mov        qword [rsp+0x48+var_3C], 0x4000000
0000000000005afe         mov        qword [rsp+0x48+var_34], 0x0
0000000000005b07         mov        qword [rsp+0x48+var_2C], 0x0
0000000000005b10         mov        qword [rsp+0x48+var_24], 0x0
0000000000005b19         mov        qword [rsp+0x48+var_1C], 0x0
0000000000005b22         mov        dword [rsp+0x48+var_14], 0x0
0000000000005b2a         call       quotearg_n_options                          ; quotearg_n_options
0000000000005b2f         mov        rcx, qword [rsp+0x48+var_10]
0000000000005b34         xor        rcx, qword [fs:0x28]
0000000000005b3d         jne        loc_5b49

0000000000005b3f         add        rsp, 0x48
0000000000005b43         ret
                        ; endp

                     loc_5b44:
0000000000005b44         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_5b49:
0000000000005b49         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
0000000000005b4e         align      16                                          ; End of unwind block (FDE at 0x8964)

                     quotearg_n_custom_mem:
0000000000005b50         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x8980), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
0000000000005b54         mov        r9, rcx
0000000000005b57         mov        rcx, qword [qword_20a550]                   ; qword_20a550
0000000000005b5e         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000005b66         mov        rax, qword [fs:0x28]
0000000000005b6f         mov        qword [rsp+0x48+var_10], rax
0000000000005b74         xor        eax, eax
0000000000005b76         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000005b7a         test       rsi, rsi
0000000000005b7d         mov        qword [rsp+0x48+var_18], rcx
0000000000005b82         mov        dword [rsp+0x48+var_48], 0xa
0000000000005b89         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20a530
0000000000005b91         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000005b96         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20a540
0000000000005b9e         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000005ba3         je         loc_5bd7

0000000000005ba5         test       rdx, rdx
0000000000005ba8         je         loc_5bd7

0000000000005baa         mov        qword [rsp+0x48+var_20], rsi
0000000000005baf         mov        qword [rsp+0x48+var_18], rdx
0000000000005bb4         mov        rcx, rsp
0000000000005bb7         mov        rdx, r8
0000000000005bba         mov        rsi, r9
0000000000005bbd         call       quotearg_n_options                          ; quotearg_n_options
0000000000005bc2         mov        rdi, qword [rsp+0x48+var_10]
0000000000005bc7         xor        rdi, qword [fs:0x28]
0000000000005bd0         jne        loc_5bdc

0000000000005bd2         add        rsp, 0x48
0000000000005bd6         ret
                        ; endp

                     loc_5bd7:
0000000000005bd7         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_5bdc:
0000000000005bdc         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
0000000000005be1         align      16                                          ; End of unwind block (FDE at 0x8980)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom:
0000000000005bf0         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0x899c)
0000000000005bf7         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
0000000000005bfc         align      1024                                        ; End of unwind block (FDE at 0x899c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
0000000000005c00         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x89b0)
0000000000005c03         mov        r8, 0xffffffffffffffff
0000000000005c0a         mov        rdx, rsi
0000000000005c0d         mov        rsi, rdi
0000000000005c10         xor        edi, edi
0000000000005c12         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000005c17         align      32                                          ; End of unwind block (FDE at 0x89b0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
0000000000005c20         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0x89c4)
0000000000005c23         mov        rcx, rdx
0000000000005c26         mov        rdx, rsi
0000000000005c29         mov        rsi, rdi
0000000000005c2c         xor        edi, edi
0000000000005c2e         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000005c33         align      64                                          ; End of unwind block (FDE at 0x89c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
0000000000005c40         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x89d8), quote_quoting_options
0000000000005c47         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005c4c         align      16                                          ; End of unwind block (FDE at 0x89d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
0000000000005c50         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x89ec), quote_quoting_options
0000000000005c57         mov        rdx, rsi
0000000000005c5a         mov        rsi, rdi
0000000000005c5d         xor        edi, edi
0000000000005c5f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005c64         align      16                                          ; End of unwind block (FDE at 0x89ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
0000000000005c70         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x8a00), quote_quoting_options
0000000000005c77         mov        rdx, 0xffffffffffffffff
0000000000005c7e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005c83         align      16                                          ; End of unwind block (FDE at 0x8a00)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
0000000000005c90         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x8a14), quote_quoting_options, CODE XREF=main+1340, main+3365, main+3525, main+3872, main+4001, main+4070, main+4183, main+4720, main+5064, parse_signal_action_params+155, parse_block_signal_params+235
0000000000005c97         mov        rsi, rdi
0000000000005c9a         mov        rdx, 0xffffffffffffffff
0000000000005ca1         xor        edi, edi
0000000000005ca3         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005ca8         align      16                                          ; End of unwind block (FDE at 0x8a14)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
0000000000005cb0         push       r15                                         ; Begin of unwind block (FDE at 0x8a2c), CODE XREF=j_version_etc_arn, version_etc_va+75, version_etc+161
0000000000005cb2         push       r14
0000000000005cb4         push       r13
0000000000005cb6         push       r12
0000000000005cb8         mov        r12, r9
0000000000005cbb         push       rbp
0000000000005cbc         push       rbx
0000000000005cbd         mov        rbp, rdi
0000000000005cc0         mov        rbx, r8
0000000000005cc3         sub        rsp, 0x28
0000000000005cc7         test       rsi, rsi
0000000000005cca         je         loc_5de8

0000000000005cd0         mov        r8, rdx
0000000000005cd3         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
0000000000005cda         mov        r9, rcx
0000000000005cdd         xor        eax, eax
0000000000005cdf         mov        rcx, rsi
0000000000005ce2         mov        esi, 0x1
0000000000005ce7         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_5cec:
0000000000005cec         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0x7c5b, CODE XREF=version_etc_arn+337
0000000000005cf3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005cf5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005cfa         call       j_dcgettext                                 ; dcgettext
0000000000005cff         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000005d06         mov        rcx, rax
0000000000005d09         mov        r8d, 0x7e3
0000000000005d0f         mov        esi, 0x1
0000000000005d14         mov        rdi, rbp
0000000000005d17         xor        eax, eax
0000000000005d19         call       j___fprintf_chk                             ; __fprintf_chk
0000000000005d1e         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000005d25         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005d27         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005d2c         call       j_dcgettext                                 ; dcgettext
0000000000005d31         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
0000000000005d34         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000005d37         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000005d3c         cmp        r12, 0x9
0000000000005d40         ja         loc_6080

0000000000005d46         lea        rdx, qword [switch_table_7f48]              ; switch_table_7f48
0000000000005d4d         movsxd     rax, dword [rdx+r12*4]
0000000000005d51         add        rax, rdx
0000000000005d54         jmp        rax                                         ; switch statement using table at 0x7f48, with 10 cases, 0x5d60,0x5dd6,0x5e10,0x5e68,0x5ea8,0x5ef0,0x5f40,0x5f98,0x5fc8,0x6030
0000000000005d56         align      32

                     loc_5d60:
0000000000005d60         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
0000000000005d64         mov        rax, qword [rbx+0x10]
0000000000005d68         lea        rsi, qword [aWrittenBySSSns_7e58]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
0000000000005d6f         mov        r8, qword [rbx+8]
0000000000005d73         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005d78         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005d7a         mov        r13, qword [rbx+0x30]
0000000000005d7e         mov        r12, qword [rbx+0x28]
0000000000005d82         mov        qword [rsp+0x58+var_48], r9
0000000000005d87         mov        r15, qword [rbx+0x20]
0000000000005d8b         mov        r14, qword [rbx+0x18]
0000000000005d8f         mov        qword [rsp+0x58+var_58], rax
0000000000005d93         mov        qword [rsp+0x58+var_50], r8
0000000000005d98         mov        rbx, qword [rbx]
0000000000005d9b         call       j_dcgettext                                 ; dcgettext
0000000000005da0         sub        rsp, 0x8

                     loc_5da4:
0000000000005da4         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
0000000000005da9         mov        rdx, rax
0000000000005dac         mov        rcx, rbx
0000000000005daf         mov        esi, 0x1
0000000000005db4         mov        rdi, rbp
0000000000005db7         xor        eax, eax
0000000000005db9         push       r9
0000000000005dbb         push       r13
0000000000005dbd         push       r12
0000000000005dbf         push       r15
0000000000005dc1         push       r14
0000000000005dc3         mov        r9, qword [rsp+0x88+var_58]
0000000000005dc8         mov        r8, qword [rsp+0x88+var_50]
0000000000005dcd         call       j___fprintf_chk                             ; __fprintf_chk
0000000000005dd2         add        rsp, 0x30

                     loc_5dd6:
0000000000005dd6         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
0000000000005dda         pop        rbx
0000000000005ddb         pop        rbp
0000000000005ddc         pop        r12
0000000000005dde         pop        r13
0000000000005de0         pop        r14
0000000000005de2         pop        r15
0000000000005de4         ret
                        ; endp
0000000000005de5         align      8

                     loc_5de8:
0000000000005de8         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
0000000000005deb         mov        rcx, rdx
0000000000005dee         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
0000000000005df5         mov        esi, 0x1
0000000000005dfa         xor        eax, eax
0000000000005dfc         call       j___fprintf_chk                             ; __fprintf_chk
0000000000005e01         jmp        loc_5cec
0000000000005e06         align      16

                     loc_5e10:
0000000000005e10         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
0000000000005e14         mov        r9, qword [rbx+0x38]
0000000000005e18         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
0000000000005e1f         mov        rax, qword [rbx+0x10]
0000000000005e23         mov        r8, qword [rbx+8]
0000000000005e27         mov        edx, 0x5
0000000000005e2c         mov        r13, qword [rbx+0x30]
0000000000005e30         mov        r12, qword [rbx+0x28]
0000000000005e34         mov        r15, qword [rbx+0x20]
0000000000005e38         mov        r14, qword [rbx+0x18]
0000000000005e3c         mov        rbx, qword [rbx]
0000000000005e3f         mov        qword [rsp+0x58+var_40], r10
0000000000005e44         mov        qword [rsp+0x58+var_48], r9
0000000000005e49         mov        qword [rsp+0x58+var_58], rax
0000000000005e4d         mov        qword [rsp+0x58+var_50], r8

                     loc_5e52:
0000000000005e52         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
0000000000005e54         call       j_dcgettext                                 ; dcgettext
0000000000005e59         mov        r10, qword [rsp+0x58+var_40]
0000000000005e5e         push       r10
0000000000005e60         jmp        loc_5da4
0000000000005e65         align      8

                     loc_5e68:
0000000000005e68         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
0000000000005e6b         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
0000000000005e72         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005e77         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005e79         call       j_dcgettext                                 ; dcgettext
0000000000005e7e         add        rsp, 0x28
0000000000005e82         mov        rcx, rbx
0000000000005e85         mov        rdi, rbp
0000000000005e88         pop        rbx
0000000000005e89         pop        rbp
0000000000005e8a         pop        r12
0000000000005e8c         pop        r13
0000000000005e8e         pop        r14
0000000000005e90         pop        r15
0000000000005e92         mov        rdx, rax
0000000000005e95         mov        esi, 0x1
0000000000005e9a         xor        eax, eax
0000000000005e9c         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000005ea1         align      8

                     loc_5ea8:
0000000000005ea8         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
0000000000005eac         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
0000000000005eb3         mov        rbx, qword [rbx]
0000000000005eb6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005ebb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005ebd         call       j_dcgettext                                 ; dcgettext
0000000000005ec2         add        rsp, 0x28
0000000000005ec6         mov        r8, r12
0000000000005ec9         mov        rcx, rbx
0000000000005ecc         mov        rdi, rbp
0000000000005ecf         mov        rdx, rax
0000000000005ed2         mov        esi, 0x1
0000000000005ed7         pop        rbx
0000000000005ed8         pop        rbp
0000000000005ed9         pop        r12
0000000000005edb         pop        r13
0000000000005edd         pop        r14
0000000000005edf         pop        r15
0000000000005ee1         xor        eax, eax
0000000000005ee3         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000005ee8         align      16

                     loc_5ef0:
0000000000005ef0         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
0000000000005ef4         mov        r12, qword [rbx+8]
0000000000005ef8         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
0000000000005eff         mov        rbx, qword [rbx]
0000000000005f02         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005f07         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005f09         call       j_dcgettext                                 ; dcgettext
0000000000005f0e         add        rsp, 0x28
0000000000005f12         mov        r9, r13
0000000000005f15         mov        r8, r12
0000000000005f18         mov        rcx, rbx
0000000000005f1b         mov        rdi, rbp
0000000000005f1e         mov        rdx, rax
0000000000005f21         pop        rbx
0000000000005f22         pop        rbp
0000000000005f23         pop        r12
0000000000005f25         pop        r13
0000000000005f27         pop        r14
0000000000005f29         pop        r15
0000000000005f2b         mov        esi, 0x1
0000000000005f30         xor        eax, eax
0000000000005f32         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000005f37         align      64

                     loc_5f40:
0000000000005f40         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
0000000000005f47         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005f4c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005f4e         mov        r14, qword [rbx+0x18]
0000000000005f52         mov        r13, qword [rbx+0x10]
0000000000005f56         mov        r12, qword [rbx+8]
0000000000005f5a         mov        rbx, qword [rbx]
0000000000005f5d         call       j_dcgettext                                 ; dcgettext
0000000000005f62         sub        rsp, 0x8

                     loc_5f66:
0000000000005f66         push       r14                                         ; CODE XREF=version_etc_arn+784
0000000000005f68         mov        rdx, rax
0000000000005f6b         mov        r9, r13
0000000000005f6e         mov        r8, r12
0000000000005f71         mov        rcx, rbx
0000000000005f74         mov        rdi, rbp
0000000000005f77         mov        esi, 0x1
0000000000005f7c         xor        eax, eax
0000000000005f7e         call       j___fprintf_chk                             ; __fprintf_chk
0000000000005f83         pop        rax
0000000000005f84         pop        rdx
0000000000005f85         add        rsp, 0x28
0000000000005f89         pop        rbx
0000000000005f8a         pop        rbp
0000000000005f8b         pop        r12
0000000000005f8d         pop        r13
0000000000005f8f         pop        r14
0000000000005f91         pop        r15
0000000000005f93         ret
                        ; endp
0000000000005f94         align      8

                     loc_5f98:
0000000000005f98         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
0000000000005f9c         lea        rsi, qword [aWrittenBySSSns_7dd8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
0000000000005fa3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005fa8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005faa         mov        r14, qword [rbx+0x18]
0000000000005fae         mov        r13, qword [rbx+0x10]
0000000000005fb2         mov        r12, qword [rbx+8]
0000000000005fb6         mov        rbx, qword [rbx]
0000000000005fb9         call       j_dcgettext                                 ; dcgettext
0000000000005fbe         push       r15
0000000000005fc0         jmp        loc_5f66
0000000000005fc2         align      8

                     loc_5fc8:
0000000000005fc8         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
0000000000005fcc         mov        r12, qword [rbx+0x28]
0000000000005fd0         lea        rsi, qword [aWrittenBySSSns_7e00]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
0000000000005fd7         mov        r15, qword [rbx+0x20]
0000000000005fdb         mov        r14, qword [rbx+0x18]
0000000000005fdf         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005fe4         mov        r13, qword [rbx+0x10]
0000000000005fe8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005fea         mov        rbx, qword [rbx]
0000000000005fed         mov        qword [rsp+0x58+var_58], r8
0000000000005ff1         call       j_dcgettext                                 ; dcgettext
0000000000005ff6         sub        rsp, 0x8
0000000000005ffa         mov        r9, r13
0000000000005ffd         push       r12
0000000000005fff         push       r15
0000000000006001         push       r14

                     loc_6003:
0000000000006003         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
0000000000006008         mov        rcx, rbx
000000000000600b         mov        rdx, rax
000000000000600e         mov        rdi, rbp
0000000000006011         mov        esi, 0x1
0000000000006016         xor        eax, eax
0000000000006018         call       j___fprintf_chk                             ; __fprintf_chk
000000000000601d         add        rsp, 0x20
0000000000006021         add        rsp, 0x28
0000000000006025         pop        rbx
0000000000006026         pop        rbp
0000000000006027         pop        r12
0000000000006029         pop        r13
000000000000602b         pop        r14
000000000000602d         pop        r15
000000000000602f         ret
                        ; endp

                     loc_6030:
0000000000006030         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
0000000000006034         mov        r13, qword [rbx+0x30]
0000000000006038         lea        rsi, qword [aWrittenBySSSns_7e28]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
000000000000603f         mov        r12, qword [rbx+0x28]
0000000000006043         mov        r15, qword [rbx+0x20]
0000000000006047         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000604c         mov        r14, qword [rbx+0x18]
0000000000006050         mov        r8, qword [rbx+8]
0000000000006054         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006056         mov        qword [rsp+0x58+var_50], r9
000000000000605b         mov        rbx, qword [rbx]
000000000000605e         mov        qword [rsp+0x58+var_58], r8
0000000000006062         call       j_dcgettext                                 ; dcgettext
0000000000006067         push       r13
0000000000006069         push       r12
000000000000606b         push       r15
000000000000606d         push       r14
000000000000606f         mov        r9, qword [rsp+0x78+var_50]
0000000000006074         jmp        loc_6003
0000000000006076         align      128

                     loc_6080:
0000000000006080         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
0000000000006084         mov        r9, qword [rbx+0x38]
0000000000006088         mov        edx, 0x5
000000000000608d         mov        rax, qword [rbx+0x10]
0000000000006091         mov        r8, qword [rbx+8]
0000000000006095         lea        rsi, qword [aWrittenBySSSns_7ec0]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
000000000000609c         mov        r13, qword [rbx+0x30]
00000000000060a0         mov        r12, qword [rbx+0x28]
00000000000060a4         mov        r15, qword [rbx+0x20]
00000000000060a8         mov        r14, qword [rbx+0x18]
00000000000060ac         mov        qword [rsp+0x58+var_40], r10
00000000000060b1         mov        qword [rsp+0x58+var_48], r9
00000000000060b6         mov        qword [rsp+0x58+var_58], rax
00000000000060ba         mov        qword [rsp+0x58+var_50], r8
00000000000060bf         mov        rbx, qword [rbx]
00000000000060c2         jmp        loc_5e52
00000000000060c7         align      16                                          ; End of unwind block (FDE at 0x8a2c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
00000000000060d0         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0x8b40)
00000000000060d3         cmp        qword [r8], 0x0
00000000000060d7         je         j_version_etc_arn                           ; version_etc_arn

00000000000060d9         nop        dword [rax]

                     loc_60e0:
00000000000060e0         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
00000000000060e4         cmp        qword [r8+r9*8], 0x0
00000000000060e9         jne        loc_60e0

                     j_version_etc_arn:        // version_etc_arn
00000000000060eb         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
00000000000060f0         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0x8b40), Begin of unwind block (FDE at 0x8b54)
00000000000060f4         mov        r10, r8
00000000000060f7         xor        r9d, r9d
00000000000060fa         mov        rax, qword [fs:0x28]
0000000000006103         mov        qword [rsp+0x68+var_10], rax
0000000000006108         xor        eax, eax
000000000000610a         mov        r8, rsp
000000000000610d         nop        dword [rax]

                     loc_6110:
0000000000006110         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000006113         cmp        eax, 0x2f
0000000000006116         ja         loc_615a

0000000000006118         mov        r11d, eax
000000000000611b         add        r11, qword [r10+0x10]
000000000000611f         add        eax, 0x8
0000000000006122         mov        dword [r10], eax

                     loc_6125:
0000000000006125         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000006128         test       rax, rax
000000000000612b         mov        qword [r8+r9*8], rax
000000000000612f         je         loc_613b

0000000000006131         add        r9, 0x1
0000000000006135         cmp        r9, 0xa
0000000000006139         jne        loc_6110

                     loc_613b:
000000000000613b         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
0000000000006140         mov        rax, qword [rsp+0x68+var_10]
0000000000006145         xor        rax, qword [fs:0x28]
000000000000614e         jne        loc_6155

0000000000006150         add        rsp, 0x68
0000000000006154         ret
                        ; endp

                     loc_6155:
0000000000006155         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_615a:
000000000000615a         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
000000000000615e         lea        rax, qword [r11+8]
0000000000006162         mov        qword [r10+8], rax
0000000000006166         jmp        loc_6125
0000000000006168         align      16                                          ; End of unwind block (FDE at 0x8b54)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
0000000000006170         push       rbp                                         ; Begin of unwind block (FDE at 0x8b70), CODE XREF=main+977
0000000000006171         push       rbx
0000000000006172         mov        r10d, 0x20
0000000000006178         xor        r11d, r11d
000000000000617b         sub        rsp, 0xb8
0000000000006182         mov        rax, qword [fs:0x28]
000000000000618b         mov        qword [rsp+0xc8+var_50], rax
0000000000006190         xor        eax, eax
0000000000006192         lea        rax, qword [rsp+0xc8+arg_0]
000000000000619a         mov        qword [rsp+0xc8+var_28], r8
00000000000061a2         lea        rbx, qword [rsp+0xc8+arg_0]
00000000000061aa         lea        r8, qword [rsp+0xc8+var_A8]
00000000000061af         mov        qword [rsp+0xc8+var_20], r9
00000000000061b7         mov        dword [rsp+0xc8+var_C0], 0x20
00000000000061bf         mov        qword [rsp+0xc8+var_B8], rax
00000000000061c4         lea        rax, qword [rsp+0xc8+var_48]
00000000000061cc         xor        r9d, r9d
00000000000061cf         mov        qword [rsp+0xc8+var_B0], rax
00000000000061d4         mov        rbp, rax
00000000000061d7         nop        word [rax+rax]

                     loc_61e0:
00000000000061e0         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
00000000000061e4         ja         loc_623c

00000000000061e6         mov        eax, r10d
00000000000061e9         mov        r11d, 0x1
00000000000061ef         add        r10d, 0x8
00000000000061f3         add        rax, rbp

                     loc_61f6:
00000000000061f6         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
00000000000061f9         test       rax, rax
00000000000061fc         mov        qword [r8+r9*8], rax
0000000000006200         je         loc_620c

0000000000006202         add        r9, 0x1
0000000000006206         cmp        r9, 0xa
000000000000620a         jne        loc_61e0

                     loc_620c:
000000000000620c         test       r11b, r11b                                  ; CODE XREF=version_etc+144
000000000000620f         jne        loc_6235

                     loc_6211:
0000000000006211         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000006216         mov        rax, qword [rsp+0xc8+var_50]
000000000000621b         xor        rax, qword [fs:0x28]
0000000000006224         jne        loc_6230

0000000000006226         add        rsp, 0xb8
000000000000622d         pop        rbx
000000000000622e         pop        rbp
000000000000622f         ret
                        ; endp

                     loc_6230:
0000000000006230         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_6235:
0000000000006235         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
000000000000623a         jmp        loc_6211

                     loc_623c:
000000000000623c         mov        rax, rbx                                    ; CODE XREF=version_etc+116
000000000000623f         add        rbx, 0x8
0000000000006243         jmp        loc_61f6
0000000000006245         align      16                                          ; End of unwind block (FDE at 0x8b70)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
0000000000006250         push       rbx                                         ; Begin of unwind block (FDE at 0x8b9c)
0000000000006251         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
0000000000006258         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000625d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000625f         call       j_dcgettext                                 ; dcgettext
0000000000006264         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
000000000000626b         mov        rsi, rax
000000000000626e         mov        edi, 0x1
0000000000006273         xor        eax, eax
0000000000006275         call       j___printf_chk                              ; __printf_chk
000000000000627a         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
0000000000006281         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006286         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006288         call       j_dcgettext                                 ; dcgettext
000000000000628d         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000006294         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6c0b
000000000000629b         mov        rsi, rax
000000000000629e         mov        edi, 0x1
00000000000062a3         xor        eax, eax
00000000000062a5         call       j___printf_chk                              ; __printf_chk
00000000000062aa         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000062b1         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
00000000000062b8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000062ba         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000062bf         call       j_dcgettext                                 ; dcgettext
00000000000062c4         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000062c7         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000062ca         pop        rbx
00000000000062cb         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
00000000000062d0         push       rbx                                         ; End of unwind block (FDE at 0x8b9c), Begin of unwind block (FDE at 0x8bbc), CODE XREF=main+126, main+1128, main+1154, quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15
00000000000062d1         mov        rbx, rdi
00000000000062d4         call       j_malloc                                    ; malloc
00000000000062d9         test       rax, rax
00000000000062dc         jne        loc_62e3

00000000000062de         test       rbx, rbx
00000000000062e1         jne        loc_62e5

                     loc_62e3:
00000000000062e3         pop        rbx                                         ; CODE XREF=xmalloc+12
00000000000062e4         ret
                        ; endp

                     loc_62e5:
00000000000062e5         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_62ea:
00000000000062ea         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x8bbc)
                     xnmalloc:
00000000000062f0         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x8bd8)
00000000000062f3         mul        rsi
00000000000062f6         mov        rdi, rax
00000000000062f9         seto       al
00000000000062fc         test       rdi, rdi
00000000000062ff         js         loc_630b

0000000000006301         movzx      eax, al
0000000000006304         test       rax, rax
0000000000006307         jne        loc_630b

0000000000006309         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_630b:
000000000000630b         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
000000000000630f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6314:
0000000000006314         nop                                                    ; End of unwind block (FDE at 0x8bd8)
0000000000006316         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000006320         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0x8bec)
                        ; endp
0000000000006322         align      16                                          ; End of unwind block (FDE at 0x8bec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000006330         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x8c00), CODE XREF=main+2727, extract_varname+243, quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
0000000000006333         push       rbx
0000000000006334         mov        rbx, rsi
0000000000006337         jne        loc_633e

0000000000006339         test       rdi, rdi
000000000000633c         jne        loc_6358

                     loc_633e:
000000000000633e         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000006341         call       j_realloc                                   ; realloc
0000000000006346         test       rax, rax
0000000000006349         jne        loc_6350

000000000000634b         test       rbx, rbx
000000000000634e         jne        loc_6361

                     loc_6350:
0000000000006350         pop        rbx                                         ; CODE XREF=xrealloc+25
0000000000006351         ret
                        ; endp
0000000000006352         align      8

                     loc_6358:
0000000000006358         call       j_free                                      ; free, CODE XREF=xrealloc+12
000000000000635d         xor        eax, eax
000000000000635f         pop        rbx
0000000000006360         ret
                        ; endp

                     loc_6361:
0000000000006361         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6366:
0000000000006366         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x8c00)
                     xnrealloc:
0000000000006370         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x8c24)
0000000000006373         mul        rdx
0000000000006376         mov        rsi, rax
0000000000006379         seto       al
000000000000637c         test       rsi, rsi
000000000000637f         js         loc_638b

0000000000006381         movzx      eax, al
0000000000006384         test       rax, rax
0000000000006387         jne        loc_638b

0000000000006389         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_638b:
000000000000638b         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
000000000000638f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6394:
0000000000006394         nop                                                    ; End of unwind block (FDE at 0x8c24)
0000000000006396         nop        word [cs:rax+rax]
                     x2nrealloc:
00000000000063a0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x8c38)
00000000000063a3         mov        r9, rdx
00000000000063a6         mov        rcx, qword [rsi]
00000000000063a9         je         loc_63e0

00000000000063ab         xor        edx, edx
00000000000063ad         movabs     rax, 0x5555555555555554
00000000000063b7         div        r9
00000000000063ba         cmp        rax, rcx
00000000000063bd         jbe        loc_63fb

00000000000063bf         mov        rax, rcx
00000000000063c2         shr        rax, 0x1
00000000000063c5         lea        rcx, qword [rax+rcx+1]

                     loc_63ca:
00000000000063ca         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
00000000000063cd         imul       rcx, r9                                     ; argument #4 for method xrealloc
00000000000063d1         mov        rsi, rcx                                    ; argument #2 for method xrealloc
00000000000063d4         jmp        xrealloc                                    ; xrealloc
                        ; endp
00000000000063d9         align      32

                     loc_63e0:
00000000000063e0         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
00000000000063e3         je         loc_6408

                     loc_63e5:
00000000000063e5         mov        rax, rcx                                    ; CODE XREF=sub_6404+28
00000000000063e8         mul        r9
00000000000063eb         seto       dl
00000000000063ee         test       rax, rax
00000000000063f1         movzx      edx, dl
00000000000063f4         js         loc_63fb

00000000000063f6         test       rdx, rdx
00000000000063f9         je         loc_63ca

                     loc_63fb:
00000000000063fb         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
00000000000063ff         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6404:
0000000000006404         nop        dword [rax]
                        ; endp

                     loc_6408:
0000000000006408         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
000000000000640a         mov        eax, 0x80
000000000000640f         xor        r8d, r8d
0000000000006412         div        r9
0000000000006415         test       rax, rax
0000000000006418         sete       r8b
000000000000641c         lea        rcx, qword [r8+rax]
0000000000006420         jmp        loc_63e5
0000000000006422         align      16                                          ; End of unwind block (FDE at 0x8c38)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000006430         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x8c50)
0000000000006433         mov        rax, qword [rsi]
0000000000006436         je         loc_6460

0000000000006438         movabs     rdx, 0x5555555555555553
0000000000006442         cmp        rax, rdx
0000000000006445         ja         loc_6471

0000000000006447         mov        rdx, rax
000000000000644a         shr        rdx, 0x1
000000000000644d         lea        rax, qword [rdx+rax+1]

                     loc_6452:
0000000000006452         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
0000000000006455         mov        rsi, rax                                    ; argument #2 for method xrealloc
0000000000006458         jmp        xrealloc                                    ; xrealloc
                        ; endp
000000000000645d         align      32

                     loc_6460:
0000000000006460         test       rax, rax                                    ; CODE XREF=x2realloc+6
0000000000006463         mov        edx, 0x80
0000000000006468         cmove      rax, rdx
000000000000646c         test       rax, rax
000000000000646f         jns        loc_6452

                     loc_6471:
0000000000006471         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
0000000000006475         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_647a:
000000000000647a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x8c50)
                     xzalloc:
0000000000006480         push       rbx                                         ; Begin of unwind block (FDE at 0x8c68)
0000000000006481         mov        rbx, rdi
0000000000006484         call       xmalloc                                     ; xmalloc
0000000000006489         mov        rdx, rbx                                    ; argument "__n" for method j_memset
000000000000648c         xor        esi, esi                                    ; argument "__c" for method j_memset
000000000000648e         mov        rdi, rax                                    ; argument "__s" for method j_memset
0000000000006491         pop        rbx
0000000000006492         jmp        j_memset                                    ; memset
                        ; endp
0000000000006497         align      32                                          ; End of unwind block (FDE at 0x8c68)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
00000000000064a0         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x8c84)
00000000000064a3         sub        rsp, 0x8
00000000000064a7         mul        rsi
00000000000064aa         seto       dl
00000000000064ad         test       rax, rax
00000000000064b0         js         loc_64c9

00000000000064b2         movzx      edx, dl
00000000000064b5         test       rdx, rdx
00000000000064b8         jne        loc_64c9

00000000000064ba         call       j_calloc                                    ; calloc
00000000000064bf         test       rax, rax
00000000000064c2         je         loc_64c9

00000000000064c4         add        rsp, 0x8
00000000000064c8         ret
                        ; endp

                     loc_64c9:
00000000000064c9         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_64ce:
00000000000064ce         nop                                                    ; End of unwind block (FDE at 0x8c84)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmemdup:
00000000000064d0         push       rbp                                         ; Begin of unwind block (FDE at 0x8ca0), CODE XREF=clone_quoting_options+40
00000000000064d1         push       rbx
00000000000064d2         mov        rbp, rdi
00000000000064d5         mov        rdi, rsi
00000000000064d8         mov        rbx, rsi
00000000000064db         sub        rsp, 0x8
00000000000064df         call       xmalloc                                     ; xmalloc
00000000000064e4         add        rsp, 0x8
00000000000064e8         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
00000000000064eb         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
00000000000064ee         pop        rbx
00000000000064ef         pop        rbp
00000000000064f0         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
00000000000064f3         jmp        j_memcpy                                    ; memcpy
                        ; endp
00000000000064f8         align      256                                         ; End of unwind block (FDE at 0x8ca0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000006500         push       rbx                                         ; Begin of unwind block (FDE at 0x8cc8), CODE XREF=parse_signal_action_params+39, parse_block_signal_params+70, operand2sig+192
0000000000006501         mov        rbx, rdi
0000000000006504         call       j_strlen                                    ; strlen
0000000000006509         mov        rdi, rbx
000000000000650c         lea        rsi, qword [rax+1]
0000000000006510         pop        rbx
0000000000006511         jmp        xmemdup                                     ; xmemdup
                        ; endp
0000000000006513         align      32                                          ; End of unwind block (FDE at 0x8cc8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000006520         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x8ce4), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=main+3625, quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41
0000000000006527         sub        rsp, 0x8
000000000000652b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006530         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006532         call       j_dcgettext                                 ; dcgettext
0000000000006537         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
000000000000653d         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x7735
0000000000006544         mov        rcx, rax
0000000000006547         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000006549         xor        eax, eax
000000000000654b         call       j_error                                     ; error
0000000000006550         call       j_abort                                     ; abort
                        ; endp
0000000000006555         align      32                                          ; End of unwind block (FDE at 0x8ce4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
0000000000006560         push       r13                                         ; Begin of unwind block (FDE at 0x8cfc), CODE XREF=sub_4850+534
0000000000006562         push       r12
0000000000006564         mov        r13, rsi
0000000000006567         push       rbp
0000000000006568         push       rbx
0000000000006569         mov        rbx, rdi
000000000000656c         mov        r12, rdx
000000000000656f         sub        rsp, 0x18
0000000000006573         mov        rax, qword [fs:0x28]
000000000000657c         mov        qword [rsp+0x38+var_30], rax
0000000000006581         xor        eax, eax
0000000000006583         lea        rax, qword [rsp+0x38+var_34]
0000000000006588         test       rdi, rdi
000000000000658b         cmove      rbx, rax
000000000000658f         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
0000000000006592         call       j_mbrtowc                                   ; mbrtowc
0000000000006597         cmp        rax, 0xfffffffffffffffd
000000000000659b         mov        rbp, rax
000000000000659e         jbe        loc_65c0

00000000000065a0         test       r12, r12
00000000000065a3         je         loc_65c0

00000000000065a5         xor        edi, edi
00000000000065a7         call       hard_locale                                 ; hard_locale
00000000000065ac         test       al, al
00000000000065ae         jne        loc_65c0

00000000000065b0         movzx      eax, byte [r13]
00000000000065b5         mov        ebp, 0x1
00000000000065ba         mov        dword [rbx], eax
00000000000065bc         nop        dword [rax]

                     loc_65c0:
00000000000065c0         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
00000000000065c5         xor        rdx, qword [fs:0x28]
00000000000065ce         mov        rax, rbp
00000000000065d1         jne        loc_65de

00000000000065d3         add        rsp, 0x18
00000000000065d7         pop        rbx
00000000000065d8         pop        rbp
00000000000065d9         pop        r12
00000000000065db         pop        r13
00000000000065dd         ret
                        ; endp

                     loc_65de:
00000000000065de         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
00000000000065e3         align      16                                          ; End of unwind block (FDE at 0x8cfc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56


                     str2sig:
00000000000065f0         push       r13                                         ; Begin of unwind block (FDE at 0x8d3c), CODE XREF=operand2sig+269, operand2sig+413
00000000000065f2         push       r12
00000000000065f4         mov        r13, rsi
00000000000065f7         push       rbp
00000000000065f8         push       rbx
00000000000065f9         xor        ebx, ebx
00000000000065fb         mov        r12, rdi
00000000000065fe         lea        rbp, qword [numname_table+4]                ; 0x20a084
0000000000006605         sub        rsp, 0x18
0000000000006609         mov        rax, qword [fs:0x28]
0000000000006612         mov        qword [rsp+0x38+var_30], rax
0000000000006617         xor        eax, eax
0000000000006619         movsx      eax, byte [rdi]
000000000000661c         sub        eax, 0x30
000000000000661f         cmp        eax, 0x9
0000000000006622         ja         loc_663c

0000000000006624         jmp        loc_6680
0000000000006626         align      16

                     loc_6630:
0000000000006630         add        ebx, 0x1                                    ; CODE XREF=str2sig+89
0000000000006633         add        rbp, 0xc
0000000000006637         cmp        ebx, 0x23
000000000000663a         je         loc_66b0

                     loc_663c:
000000000000663c         mov        rsi, r12                                    ; argument "__s2" for method j_strcmp, CODE XREF=str2sig+50
000000000000663f         mov        rdi, rbp                                    ; argument "__s1" for method j_strcmp
0000000000006642         call       j_strcmp                                    ; strcmp
0000000000006647         test       eax, eax
0000000000006649         jne        loc_6630

000000000000664b         lea        rdx, qword [rbx+rbx*2]
000000000000664f         lea        rax, qword [numname_table]                  ; numname_table
0000000000006656         mov        eax, dword [rax+rdx*4]

                     loc_6659:
0000000000006659         mov        dword [r13], eax                            ; CODE XREF=str2sig+170, str2sig+318, str2sig+379
000000000000665d         sar        eax, 0x1f

                     loc_6660:
0000000000006660         mov        rcx, qword [rsp+0x38+var_30]                ; CODE XREF=str2sig+185
0000000000006665         xor        rcx, qword [fs:0x28]
000000000000666e         jne        loc_6770

0000000000006674         add        rsp, 0x18
0000000000006678         pop        rbx
0000000000006679         pop        rbp
000000000000667a         pop        r12
000000000000667c         pop        r13
000000000000667e         ret
                        ; endp
000000000000667f         align      128

                     loc_6680:
0000000000006680         mov        edx, 0xa                                    ; argument "__base" for method j_strtol, CODE XREF=str2sig+52
0000000000006685         mov        rsi, rsp                                    ; argument "__endptr" for method j_strtol
0000000000006688         call       j_strtol                                    ; strtol
000000000000668d         mov        rdx, qword [rsp+0x38+var_38]
0000000000006691         cmp        byte [rdx], 0x0
0000000000006694         jne        loc_669c

0000000000006696         cmp        rax, 0x40
000000000000669a         jle        loc_6659

                     loc_669c:
000000000000669c         mov        dword [r13], 0xffffffff                     ; CODE XREF=str2sig+164, str2sig+238, str2sig+264, str2sig+291, str2sig+301, str2sig+310, str2sig+348, str2sig+357, str2sig+371
00000000000066a4         mov        eax, 0xffffffff
00000000000066a9         jmp        loc_6660
00000000000066ab         align      16

                     loc_66b0:
00000000000066b0         call       j___libc_current_sigrtmin                   ; __libc_current_sigrtmin, CODE XREF=str2sig+74
00000000000066b5         mov        ebp, eax
00000000000066b7         call       j___libc_current_sigrtmax                   ; __libc_current_sigrtmax
00000000000066bc         test       ebp, ebp
00000000000066be         mov        ebx, eax
00000000000066c0         jle        loc_66dc

00000000000066c2         lea        rdi, qword [aRtmin]                         ; "RTMIN"
00000000000066c9         mov        ecx, 0x5
00000000000066ce         mov        rsi, r12
00000000000066d1         rep  cmpsb byte [rsi], byte [rdi]
00000000000066d3         seta       al
00000000000066d6         sbb        al, 0x0
00000000000066d8         test       al, al
00000000000066da         je         loc_6733

                     loc_66dc:
00000000000066dc         test       ebx, ebx                                    ; CODE XREF=str2sig+208
00000000000066de         jle        loc_669c

00000000000066e0         lea        rdi, qword [aRtmax]                         ; "RTMAX"
00000000000066e7         mov        ecx, 0x5
00000000000066ec         mov        rsi, r12
00000000000066ef         rep  cmpsb byte [rsi], byte [rdi]
00000000000066f1         seta       al
00000000000066f4         sbb        al, 0x0
00000000000066f6         test       al, al
00000000000066f8         jne        loc_669c

00000000000066fa         lea        rdi, qword [r12+5]                          ; argument "__nptr" for method j_strtol
00000000000066ff         mov        edx, 0xa                                    ; argument "__base" for method j_strtol
0000000000006704         mov        rsi, rsp                                    ; argument "__endptr" for method j_strtol
0000000000006707         call       j_strtol                                    ; strtol
000000000000670c         mov        rdx, qword [rsp+0x38+var_38]
0000000000006710         cmp        byte [rdx], 0x0
0000000000006713         jne        loc_669c

0000000000006715         sub        ebp, ebx
0000000000006717         movsxd     rbp, ebp
000000000000671a         cmp        rax, rbp
000000000000671d         jl         loc_669c

0000000000006723         test       rax, rax
0000000000006726         jg         loc_669c

000000000000672c         add        eax, ebx
000000000000672e         jmp        loc_6659

                     loc_6733:
0000000000006733         lea        rdi, qword [r12+5]                          ; argument "__nptr" for method j_strtol, CODE XREF=str2sig+234
0000000000006738         mov        edx, 0xa                                    ; argument "__base" for method j_strtol
000000000000673d         mov        rsi, rsp                                    ; argument "__endptr" for method j_strtol
0000000000006740         call       j_strtol                                    ; strtol
0000000000006745         mov        rdx, qword [rsp+0x38+var_38]
0000000000006749         cmp        byte [rdx], 0x0
000000000000674c         jne        loc_669c

0000000000006752         test       rax, rax
0000000000006755         js         loc_669c

000000000000675b         sub        ebx, ebp
000000000000675d         movsxd     rdx, ebx
0000000000006760         cmp        rax, rdx
0000000000006763         jg         loc_669c

0000000000006769         add        eax, ebp
000000000000676b         jmp        loc_6659

                     loc_6770:
0000000000006770         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=str2sig+126
                        ; endp
0000000000006775         align      128                                         ; End of unwind block (FDE at 0x8d3c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32


                     sig2str:
0000000000006780         push       rbp                                         ; Begin of unwind block (FDE at 0x8d78), CODE XREF=main+3068, main+4396, list_signal_handling+135, parse_signal_action_params+293, operand2sig+303
0000000000006781         lea        rax, qword [numname_table]                  ; numname_table
0000000000006788         push       rbx
0000000000006789         xor        edx, edx
000000000000678b         mov        ebx, edi
000000000000678d         mov        rdi, rsi
0000000000006790         sub        rsp, 0x18
0000000000006794         mov        rcx, rax
0000000000006797         jmp        loc_67ac
0000000000006799         align      32

                     loc_67a0:
00000000000067a0         add        edx, 0x1                                    ; CODE XREF=sig2str+46
00000000000067a3         add        rcx, 0xc
00000000000067a7         cmp        edx, 0x23
00000000000067aa         je         loc_67d0

                     loc_67ac:
00000000000067ac         cmp        dword [rcx], ebx                            ; CODE XREF=sig2str+23
00000000000067ae         jne        loc_67a0

00000000000067b0         lea        rdx, qword [rdx+rdx*2]
00000000000067b4         lea        rsi, qword [rax+rdx*4+4]                    ; argument "__src" for method j_strcpy
00000000000067b9         call       j_strcpy                                    ; strcpy
00000000000067be         xor        eax, eax

                     loc_67c0:
00000000000067c0         add        rsp, 0x18                                   ; CODE XREF=sig2str+143, sig2str+214
00000000000067c4         pop        rbx
00000000000067c5         pop        rbp
00000000000067c6         ret
                        ; endp
00000000000067c7         align      16

                     loc_67d0:
00000000000067d0         mov        qword [rsp+0x28+var_20], rdi                ; CODE XREF=sig2str+42
00000000000067d5         call       j___libc_current_sigrtmin                   ; __libc_current_sigrtmin
00000000000067da         mov        ebp, eax
00000000000067dc         call       j___libc_current_sigrtmax                   ; __libc_current_sigrtmax
00000000000067e1         cmp        ebp, ebx
00000000000067e3         jg         loc_6851

00000000000067e5         cmp        eax, ebx
00000000000067e7         jl         loc_6851

00000000000067e9         mov        edx, eax
00000000000067eb         mov        rdi, qword [rsp+0x28+var_20]
00000000000067f0         sub        edx, ebp
00000000000067f2         sar        edx, 0x1
00000000000067f4         add        edx, ebp
00000000000067f6         cmp        edx, ebx
00000000000067f8         jge        loc_6840

00000000000067fa         mov        edx, 0x58
00000000000067ff         mov        dword [rdi], 0x414d5452
0000000000006805         mov        ebp, eax
0000000000006807         mov        word [rdi+4], dx

                     loc_680b:
000000000000680b         mov        eax, ebx                                    ; CODE XREF=sig2str+207
000000000000680d         sub        eax, ebp
000000000000680f         je         loc_67c0

0000000000006811         lea        rcx, qword [aRtmax+6]                       ; 0x7fcc
0000000000006818         mov        r8d, eax
000000000000681b         add        rdi, 0x5
000000000000681f         mov        rdx, 0xffffffffffffffff
0000000000006826         mov        esi, 0x1
000000000000682b         xor        eax, eax
000000000000682d         call       j___sprintf_chk                             ; __sprintf_chk
0000000000006832         add        rsp, 0x18
0000000000006836         xor        eax, eax
0000000000006838         pop        rbx
0000000000006839         pop        rbp
000000000000683a         ret
                        ; endp
000000000000683b         align      64

                     loc_6840:
0000000000006840         mov        ecx, 0x4e                                   ; CODE XREF=sig2str+120
0000000000006845         mov        dword [rdi], 0x494d5452
000000000000684b         mov        word [rdi+4], cx
000000000000684f         jmp        loc_680b

                     loc_6851:
0000000000006851         mov        eax, 0xffffffff                             ; CODE XREF=sig2str+99, sig2str+103
0000000000006856         jmp        loc_67c0
000000000000685b         align      32                                          ; End of unwind block (FDE at 0x8d78)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
0000000000006860         push       r12                                         ; Begin of unwind block (FDE at 0x8db4), CODE XREF=close_stdout+13, close_stdout+51
0000000000006862         push       rbp
0000000000006863         mov        rbp, rdi
0000000000006866         push       rbx
0000000000006867         call       j___fpending                                ; __fpending
000000000000686c         mov        ebx, dword [rbp]
000000000000686f         mov        rdi, rbp
0000000000006872         mov        r12, rax
0000000000006875         call       rpl_fclose                                  ; rpl_fclose
000000000000687a         and        ebx, 0x20
000000000000687d         test       ebx, ebx
000000000000687f         jne        loc_6898

0000000000006881         test       eax, eax
0000000000006883         je         loc_688f

0000000000006885         test       r12, r12
0000000000006888         mov        eax, 0xffffffff
000000000000688d         je         loc_68c8

                     loc_688f:
000000000000688f         pop        rbx                                         ; CODE XREF=close_stream+35
0000000000006890         pop        rbp
0000000000006891         pop        r12
0000000000006893         ret
                        ; endp
0000000000006894         align      8

                     loc_6898:
0000000000006898         test       eax, eax                                    ; CODE XREF=close_stream+31
000000000000689a         jne        loc_68b8

000000000000689c         call       j___errno_location                          ; __errno_location
00000000000068a1         mov        dword [rax], 0x0
00000000000068a7         mov        eax, 0xffffffff
00000000000068ac         pop        rbx
00000000000068ad         pop        rbp
00000000000068ae         pop        r12
00000000000068b0         ret
                        ; endp
00000000000068b1         align      8

                     loc_68b8:
00000000000068b8         pop        rbx                                         ; CODE XREF=close_stream+58
00000000000068b9         mov        eax, 0xffffffff
00000000000068be         pop        rbp
00000000000068bf         pop        r12
00000000000068c1         ret
                        ; endp
00000000000068c2         align      8

                     loc_68c8:
00000000000068c8         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
00000000000068cd         cmp        dword [rax], 0x9
00000000000068d0         pop        rbx
00000000000068d1         pop        rbp
00000000000068d2         pop        r12
00000000000068d4         setne      al
00000000000068d7         movzx      eax, al
00000000000068da         neg        eax
00000000000068dc         ret
                        ; endp
00000000000068dd         align      32                                          ; End of unwind block (FDE at 0x8db4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
00000000000068e0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x8e04), CODE XREF=rpl_mbrtowc+71
00000000000068e4         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
00000000000068e6         call       j_setlocale                                 ; setlocale
00000000000068eb         mov        rdx, rax
00000000000068ee         mov        eax, 0x1
00000000000068f3         test       rdx, rdx
00000000000068f6         je         loc_6915

00000000000068f8         lea        rdi, qword [aRtmax+10]                      ; 0x7fd0
00000000000068ff         mov        ecx, 0x2
0000000000006904         mov        rsi, rdx
0000000000006907         rep  cmpsb byte [rsi], byte [rdi]
0000000000006909         seta       cl
000000000000690c         sbb        cl, 0x0
000000000000690f         xor        eax, eax
0000000000006911         test       cl, cl
0000000000006913         jne        loc_6920

                     loc_6915:
0000000000006915         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
0000000000006919         ret
                        ; endp
000000000000691a         align      32

                     loc_6920:
0000000000006920         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
0000000000006927         mov        ecx, 0x6
000000000000692c         mov        rsi, rdx
000000000000692f         rep  cmpsb byte [rsi], byte [rdi]
0000000000006931         seta       al
0000000000006934         sbb        al, 0x0
0000000000006936         test       al, al
0000000000006938         setne      al
000000000000693b         add        rsp, 0x8
000000000000693f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000006940         sub        rsp, 0x8                                    ; End of unwind block (FDE at 0x8e04), Begin of unwind block (FDE at 0x8e24), CODE XREF=gettext_quote.part.1+11
0000000000006944         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000006949         call       j_nl_langinfo                               ; nl_langinfo
000000000000694e         test       rax, rax
0000000000006951         je         loc_6970

0000000000006953         cmp        byte [rax], 0x0
0000000000006956         lea        rdx, qword [aAscii]                         ; "ASCII"
000000000000695d         cmove      rax, rdx
0000000000006961         add        rsp, 0x8
0000000000006965         ret
                        ; endp
0000000000006966         align      16

                     loc_6970:
0000000000006970         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
0000000000006977         add        rsp, 0x8
000000000000697b         ret
                        ; endp
000000000000697c         align      128                                         ; End of unwind block (FDE at 0x8e24)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
0000000000006980         push       r12                                         ; Begin of unwind block (FDE at 0x8e44), CODE XREF=close_stream+21
0000000000006982         push       rbp
0000000000006983         push       rbx
0000000000006984         mov        rbx, rdi
0000000000006987         call       j_fileno                                    ; fileno
000000000000698c         test       eax, eax
000000000000698e         mov        rdi, rbx
0000000000006991         js         loc_69e7

0000000000006993         call       j___freading                                ; __freading
0000000000006998         test       eax, eax
000000000000699a         jne        loc_69c8

                     loc_699c:
000000000000699c         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
000000000000699f         call       rpl_fflush                                  ; rpl_fflush
00000000000069a4         test       eax, eax
00000000000069a6         je         loc_69e4

00000000000069a8         call       j___errno_location                          ; __errno_location
00000000000069ad         mov        r12d, dword [rax]
00000000000069b0         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
00000000000069b3         mov        rbp, rax
00000000000069b6         call       j_fclose                                    ; fclose
00000000000069bb         test       r12d, r12d
00000000000069be         jne        loc_69f0

                     loc_69c0:
00000000000069c0         pop        rbx                                         ; CODE XREF=rpl_fclose+121
00000000000069c1         pop        rbp
00000000000069c2         pop        r12
00000000000069c4         ret
                        ; endp
00000000000069c5         align      8

                     loc_69c8:
00000000000069c8         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
00000000000069cb         call       j_fileno                                    ; fileno
00000000000069d0         xor        esi, esi                                    ; argument "__offset" for method j_lseek
00000000000069d2         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
00000000000069d7         mov        edi, eax                                    ; argument "__fd" for method j_lseek
00000000000069d9         call       j_lseek                                     ; lseek
00000000000069de         cmp        rax, 0xffffffffffffffff
00000000000069e2         jne        loc_699c

                     loc_69e4:
00000000000069e4         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_69e7:
00000000000069e7         pop        rbx                                         ; CODE XREF=rpl_fclose+17
00000000000069e8         pop        rbp
00000000000069e9         pop        r12
00000000000069eb         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_69f0:
00000000000069f0         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
00000000000069f4         mov        eax, 0xffffffff
00000000000069f9         jmp        loc_69c0
00000000000069fb         align      512                                         ; End of unwind block (FDE at 0x8e44)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
0000000000006a00         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x8e7c), CODE XREF=rpl_fclose+31
0000000000006a03         push       rbx
0000000000006a04         mov        rbx, rdi
0000000000006a07         je         loc_6a1a

0000000000006a09         call       j___freading                                ; __freading
0000000000006a0e         test       eax, eax
0000000000006a10         je         loc_6a1a

0000000000006a12         test       dword [rbx], 0x100
0000000000006a18         jne        loc_6a28

                     loc_6a1a:
0000000000006a1a         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
0000000000006a1d         pop        rbx
0000000000006a1e         jmp        j_fflush                                    ; fflush
                        ; endp
0000000000006a23         align      8

                     loc_6a28:
0000000000006a28         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
0000000000006a2b         mov        edx, 0x1
0000000000006a30         xor        esi, esi
0000000000006a32         call       rpl_fseeko                                  ; rpl_fseeko
0000000000006a37         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
0000000000006a3a         pop        rbx
0000000000006a3b         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
0000000000006a40         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0x8e7c), Begin of unwind block (FDE at 0x8e9c), CODE XREF=rpl_fflush+50
0000000000006a44         cmp        qword [rdi+0x10], rax
0000000000006a48         je         loc_6a50

                     j_j_fseeko:        // fseeko
0000000000006a4a         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
0000000000006a4f         align      16

                     loc_6a50:
0000000000006a50         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
0000000000006a54         cmp        qword [rdi+0x28], rax
0000000000006a58         jne        j_j_fseeko                                  ; fseeko

0000000000006a5a         cmp        qword [rdi+0x48], 0x0
0000000000006a5f         jne        j_j_fseeko                                  ; fseeko

0000000000006a61         push       r12
0000000000006a63         push       rbp
0000000000006a64         mov        r12d, edx
0000000000006a67         push       rbx
0000000000006a68         mov        rbp, rsi
0000000000006a6b         mov        rbx, rdi
0000000000006a6e         call       j_fileno                                    ; fileno
0000000000006a73         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000006a76         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000006a79         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000006a7b         call       j_lseek                                     ; lseek
0000000000006a80         cmp        rax, 0xffffffffffffffff
0000000000006a84         je         loc_6a92

0000000000006a86         and        dword [rbx], 0xffffffef
0000000000006a89         mov        qword [rbx+0x90], rax
0000000000006a90         xor        eax, eax

                     loc_6a92:
0000000000006a92         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
0000000000006a93         pop        rbp
0000000000006a94         pop        r12
0000000000006a96         ret
                        ; endp
0000000000006a97         align      32                                          ; End of unwind block (FDE at 0x8e9c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
0000000000006aa0         push       r15                                         ; Begin of unwind block (FDE at 0x8ecc), DATA XREF=_start+22
0000000000006aa2         push       r14
0000000000006aa4         mov        r15, rdx
0000000000006aa7         push       r13
0000000000006aa9         push       r12
0000000000006aab         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
0000000000006ab2         push       rbp
0000000000006ab3         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
0000000000006aba         push       rbx
0000000000006abb         mov        r13d, edi
0000000000006abe         mov        r14, rsi
0000000000006ac1         sub        rbp, r12
0000000000006ac4         sub        rsp, 0x8
0000000000006ac8         sar        rbp, 0x3
0000000000006acc         call       _init                                       ; _init
0000000000006ad1         test       rbp, rbp
0000000000006ad4         je         loc_6af6

0000000000006ad6         xor        ebx, ebx
0000000000006ad8         nop        dword [rax+rax]

                     loc_6ae0:
0000000000006ae0         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
0000000000006ae3         mov        rsi, r14
0000000000006ae6         mov        edi, r13d
0000000000006ae9         call       qword [r12+rbx*8]
0000000000006aed         add        rbx, 0x1
0000000000006af1         cmp        rbp, rbx
0000000000006af4         jne        loc_6ae0

                     loc_6af6:
0000000000006af6         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
0000000000006afa         pop        rbx
0000000000006afb         pop        rbp
0000000000006afc         pop        r12
0000000000006afe         pop        r13
0000000000006b00         pop        r14
0000000000006b02         pop        r15
0000000000006b04         ret
                        ; endp
0000000000006b05         align      16                                          ; End of unwind block (FDE at 0x8ecc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
0000000000006b10         ret                                                    ; Begin of unwind block (FDE at 0x8f14), DATA XREF=_start+15
                        ; endp
0000000000006b12         align      32                                          ; End of unwind block (FDE at 0x8f14)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
0000000000006b20         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0x8f2c), __dso_handle, CODE XREF=main+116
0000000000006b27         xor        esi, esi
0000000000006b29         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
0000000000006b2e         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x8f2c)
0000000000006b2f         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x6b30; 0x6b39[ (9 bytes)
        ; File offset : [27440; 27449[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
0000000000006b30         sub        rsp, 0x8
0000000000006b34         add        rsp, 0x8
0000000000006b38         ret
                        ; endp
0000000000006b39         db  0x00 ; '.'
0000000000006b3a         db  0x00 ; '.'
0000000000006b3b         db  0x00 ; '.'
0000000000006b3c         db  0x00 ; '.'
0000000000006b3d         db  0x00 ; '.'
0000000000006b3e         db  0x00 ; '.'
0000000000006b3f         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x6b40; 0x7fde[ (5278 bytes)
        ; File offset : [27456; 32734[ (5278 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
0000000000006b40         db  0x01 ; '.'
0000000000006b41         db  0x00 ; '.'
0000000000006b42         db  0x02 ; '.'
0000000000006b43         db  0x00 ; '.'
                     aCoreutils831sr:
0000000000006b44         db         "../coreutils-8.31/src/env.c", 0            ; DATA XREF=main+4818, main+4849, main+5026, extract_varname+272
0000000000006b60         db  0x73 ; 's'                                         ; DATA XREF=extract_varname+279
0000000000006b61         db  0x74 ; 't'
0000000000006b62         db  0x72 ; 'r'
0000000000006b63         db  0x20 ; ' '
0000000000006b64         db  0x26 ; '&'
0000000000006b65         db  0x26 ; '&'
0000000000006b66         db  0x20 ; ' '
0000000000006b67         db  0x2a ; '*'
0000000000006b68         db  0x73 ; 's'
0000000000006b69         db  0x74 ; 't'
0000000000006b6a         db  0x72 ; 'r'
0000000000006b6b         db  0x20 ; ' '
0000000000006b6c         db  0x3d ; '='
0000000000006b6d         db  0x3d ; '='
0000000000006b6e         db  0x20 ; ' '
0000000000006b6f         db  0x27 ; '''
0000000000006b70         db  0x24 ; '$'
0000000000006b71         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_4850+132, sub_4850+1338, sub_4850+1670, sub_4850+1697, sub_4850+2352
0000000000006b72         db  0x00 ; '.'
                     aIgnore:
0000000000006b73         db         "IGNORE", 0                                 ; DATA XREF=main+3131, list_signal_handling+230
0000000000006b7a         db  0x2c ; ','                                         ; DATA XREF=list_signal_handling+237, parse_signal_action_params+44, parse_signal_action_params+80, parse_block_signal_params+75, parse_block_signal_params+164
0000000000006b7b         db  0x00 ; '.'
                     a10s2dSssn:
0000000000006b7c         db         "%-10s (%2d): %s%s%s\n", 0                  ; DATA XREF=list_signal_handling+149
0000000000006b91         db  0x65 ; 'e'                                         ; DATA XREF=main+968, usage+638, usage+956, usage+1140, usage+1159, usage+1193
0000000000006b92         db  0x6e ; 'n'
0000000000006b93         db  0x76 ; 'v'
0000000000006b94         db  0x00 ; '.'
0000000000006b95         db  0x5b ; '['                                         ; DATA XREF=usage+650
0000000000006b96         db  0x00 ; '.'
                     aTestInvocation:
0000000000006b97         db         "test invocation", 0                        ; DATA XREF=usage+689
                     aMulticallInvoc:
0000000000006ba7         db         "Multi-call invocation", 0                  ; DATA XREF=usage+737
                     aSha224sum:
0000000000006bbd         db         "sha224sum", 0                              ; DATA XREF=usage+754
                     aSha2Utilities:
0000000000006bc7         db         "sha2 utilities", 0                         ; DATA XREF=usage+766
                     aSha256sum:
0000000000006bd6         db         "sha256sum", 0                              ; DATA XREF=usage+657
                     aSha384sum:
0000000000006be0         db         "sha384sum", 0                              ; DATA XREF=usage+701
                     aSha512sum:
0000000000006bea         db         "sha512sum", 0                              ; DATA XREF=usage+725
                     aNsOnlineHelpSn:
0000000000006bf4         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+842
0000000000006c0b         db  0x47 ; 'G'                                         ; DATA XREF=main+961, usage+870, usage+1063, emit_bug_reporting_address+68
0000000000006c0c         db  0x4e ; 'N'
0000000000006c0d         db  0x55 ; 'U'
0000000000006c0e         db  0x20 ; ' '
                     aCoreutils:
0000000000006c0f         db         "coreutils", 0                              ; DATA XREF=main+75, main+87, usage+713
0000000000006c19         db  0x65 ; 'e'                                         ; DATA XREF=usage+909, usage+1102
0000000000006c1a         db  0x6e ; 'n'
0000000000006c1b         db  0x5f ; '_'
0000000000006c1c         db  0x00 ; '.'
                     aFullDocumentat:
0000000000006c1d         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+937, usage+1126
                     aSInvalidSignal:
0000000000006c38         db         "%s: invalid signal", 0                     ; DATA XREF=parse_signal_action_params+160, parse_block_signal_params+240, operand2sig+136
                     aFailureIgnored:
0000000000006c4b         db         " (failure ignored)", 0                     ; DATA XREF=main+3093
                     aDefault:
0000000000006c5e         db         "DEFAULT", 0                                ; DATA XREF=main+3103
0000000000006c66         db  0x55 ; 'U'                                         ; DATA XREF=main+4377
0000000000006c67         db  0x4e ; 'N'
                     aBlock:
0000000000006c68         db         "BLOCK", 0                                  ; DATA XREF=main+4291, list_signal_handling+112, list_signal_handling+244
                     aUsrlocalsharel:
0000000000006c6e         db         "/usr/local/share/locale", 0                ; DATA XREF=main+68
                     aSqDq:
0000000000006c86         db         "!(sq && dq)", 0                            ; DATA XREF=main+4825, main+4856
                     aInvalidSequenc:
0000000000006c92         db         "invalid sequence '\%c' in -S", 0           ; DATA XREF=main+675
0000000000006caf         db  0x20 ; ' '                                         ; DATA XREF=main+1827
0000000000006cb0         db  0x09 ; '.'
0000000000006cb1         db  0x00 ; '.'                                         ; DATA XREF=main+51, main+3086, list_signal_handling+105, list_signal_handling+257, usage+995
0000000000006cb2         db  0x30 ; '0'                                         ; DATA XREF=main+5033
0000000000006cb3         db  0x00 ; '.'
                     aExpandingSInto:
0000000000006cb4         db         "expanding ${%s} into %s\n", 0              ; DATA XREF=main+4018
                     aSplitSSn:
0000000000006ccd         db         "split -S:  %s\n", 0                        ; DATA XREF=main+1352
                     aIntoSn:
0000000000006cdc         db         " into:    %s\n", 0                         ; DATA XREF=main+4082
                     aSn:
0000000000006cea         db         "     &    %s\n", 0                         ; DATA XREF=main+3537
                     aInvalidOptionC:
0000000000006cf8         db         "invalid option -- '%c'", 0                 ; DATA XREF=main+4556
                     aDavidMackenzie:
0000000000006d0f         db         "David MacKenzie", 0                        ; DATA XREF=main+946
                     aRichardMlynari:
0000000000006d1f         db         "Richard Mlynarik", 0                       ; DATA XREF=main+953
                     aAssafGordon:
0000000000006d30         db         "Assaf Gordon", 0                           ; DATA XREF=main+923
                     aCleaningEnviro:
0000000000006d3d         db         "cleaning environ\n", 0                     ; DATA XREF=main+2362
                     aUnsetSn:
0000000000006d4f         db         "unset:    %s\n", 0                         ; DATA XREF=main+3430
                     aCannotUnsetS:
0000000000006d5d         db         "cannot unset %s", 0                        ; DATA XREF=main+4725
                     aSetenvSn:
0000000000006d6d         db         "setenv:   %s\n", 0                         ; DATA XREF=main+2419
                     aCannotSetS:
0000000000006d7b         db         "cannot set %s", 0                          ; DATA XREF=main+5069
0000000000006d89         db  0x25 ; '%'                                         ; DATA XREF=main+2790
0000000000006d8a         db  0x73 ; 's'
0000000000006d8b         db  0x25 ; '%'
0000000000006d8c         db  0x63 ; 'c'
0000000000006d8d         db  0x00 ; '.'
                     aResetSignalSDT:
0000000000006d8e         db         "Reset signal %s (%d) to %s%s\n", 0         ; DATA XREF=main+3117
                     aChdirSn:
0000000000006dac         db         "chdir:    %s\n", 0                         ; DATA XREF=main+3724
                     aCannotChangeDi:
0000000000006dba         db         "cannot change directory to %s", 0          ; DATA XREF=main+5170
                     aExecutingSn:
0000000000006dd8         db         "executing: %s\n", 0                        ; DATA XREF=main+4131
                     aArgdSn:
0000000000006de7         db         "   arg[%d]= %s\n", 0                       ; DATA XREF=main+4143
                     aIgnoreenvironm:
0000000000006df7         db         "ignore-environment", 0
                     aNull:
0000000000006e0a         db         "null", 0
                     aUnset:
0000000000006e0f         db         "unset", 0
                     aChdir:
0000000000006e15         db         "chdir", 0
                     aDefaultsignal:
0000000000006e1b         db         "default-signal", 0
                     aIgnoresignal:
0000000000006e2a         db         "ignore-signal", 0
                     aBlocksignal:
0000000000006e38         db         "block-signal", 0
                     aListsignalhand_6e45:        // aListsignalhand
0000000000006e45         db         "list-signal-handling", 0
                     aDebug:
0000000000006e5a         db         "debug", 0
                     aSplitstring:
0000000000006e60         db         "split-string", 0
                     aHelp:
0000000000006e6d         db         "help", 0
                     aVersion:
0000000000006e72         db         "version", 0
0000000000006e7a         align      128
                     aFailedToGetSig:
0000000000006e80         db         "failed to get signal process mask", 0      ; DATA XREF=main+4909, list_signal_handling+309
0000000000006ea2         align      8
                     aTrySHelpForMor:
0000000000006ea8         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
0000000000006ecf         align      16
                     aUsageSOptionNa:
0000000000006ed0         db         "Usage: %s [OPTION]... [-] [NAME=VALUE]... [COMMAND [ARG]...]\n", 0 ; DATA XREF=usage+93
0000000000006f0e         align      16
                     aSetEachNameToV:
0000000000006f10         db         "Set each NAME to VALUE in the environment and run COMMAND.\n", 0 ; DATA XREF=usage+132
0000000000006f4c         align      16
                     aNmandatoryArgu:
0000000000006f50         db         "\nMandatory arguments to long options are mandatory for short options too.\n", 0 ; DATA XREF=usage+169
0000000000006f9b         align      32
                     aIIgnoreenviron:
0000000000006fa0         db         "  -i, --ignore-environment  start with an empty environment\n  -0, --null           end each output line with NUL, not newline\n  -u, --unset=NAME     remove variable from the environment\n", 0 ; DATA XREF=usage+206
000000000000705b         align      32
                     aCChdirdirChang:
0000000000007060         db         "  -C, --chdir=DIR      change working directory to DIR\n", 0 ; DATA XREF=usage+243
                     aSSplitstringsP:
0000000000007098         db         "  -S, --split-string=S  process and split S into separate arguments;\n                        used to pass multiple arguments on shebang lines\n", 0 ; DATA XREF=usage+280
0000000000007127         align      8
                     aBlocksignalsig:
0000000000007128         db         "      --block-signal[=SIG]    block delivery of SIG signal(s) to COMMAND\n", 0 ; DATA XREF=usage+317
0000000000007172         align      8
                     aDefaultsignals:
0000000000007178         db         "      --default-signal[=SIG]  reset handling of SIG signal(s) to the default\n", 0 ; DATA XREF=usage+354
00000000000071c6         align      8
                     aIgnoresignalsi:
00000000000071c8         db         "      --ignore-signal[=SIG]   set handling of SIG signals(s) to do nothing\n", 0 ; DATA XREF=usage+391
0000000000007214         align      8
                     aListsignalhand:
0000000000007218         db         "      --list-signal-handling  list non default signal handling to stderr\n", 0 ; DATA XREF=usage+428
0000000000007262         align      8
                     aVDebugPrintVer:
0000000000007268         db         "  -v, --debug          print verbose information for each processing step\n", 0 ; DATA XREF=usage+465
00000000000072b3         align      8
                     aHelpDisplayThi:
00000000000072b8         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+502
00000000000072e5         align      8
                     aVersionOutputV:
00000000000072e8         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+539
000000000000731e         align      32
                     aNaMereImpliesI:
0000000000007320         db         "\nA mere - implies -i.  If no COMMAND, print the resulting environment.\n", 0 ; DATA XREF=usage+576
                     aNsigMayBeASign:
0000000000007368         db         "\nSIG may be a signal name like 'PIPE', or a signal number like '13'.\nWithout SIG, all known signals are included.  Multiple signals can be\ncomma-separated.\n", 0 ; DATA XREF=usage+613
0000000000007405         align      8
                     aHttpswwwgnuorg:
0000000000007408         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+863, usage+963, usage+1056, usage+1166, emit_bug_reporting_address+61
                     aReportAnyTrans:
0000000000007430         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+1207
0000000000007477         align      8
                     aOrAvailableLoc:
0000000000007478         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+1006
00000000000074ab         align      16
                     aCMustNotAppear:
00000000000074b0         db         "'\c' must not appear in double-quoted -S string", 0 ; DATA XREF=main+5119
                     aInvalidBacksla:
00000000000074e0         db         "invalid backslash at end of string in -S", 0 ; DATA XREF=main+4775
0000000000007509         align      16
                     aOnlyVarnameExp:
0000000000007510         db         "only ${VARNAME} expansion is supported, error at: %s", 0 ; DATA XREF=main+4608
0000000000007545         align      8
                     aNoTerminatingQ:
0000000000007548         db         "no terminating quote in -S string", 0      ; DATA XREF=main+4873
000000000000756a         align      16
                     aReplacingSWith:
0000000000007570         db         "replacing ${%s} with null string\n", 0     ; DATA XREF=main+3794
0000000000007592         align      8
                     aUseVsToPassOpt:
0000000000007598         db         "use -[v]S to pass options in shebang lines", 0 ; DATA XREF=main+3933, main+4596
00000000000075c3         align      8
                     aCannotSpecifyN:
00000000000075c8         db         "cannot specify --null (-0) with command", 0 ; DATA XREF=main+3654
                     aMustSpecifyCom:
00000000000075f0         db         "must specify command with --chdir (-C)", 0 ; DATA XREF=main+5007
0000000000007617         align      8
                     aFailedToGetSig_7618:        // aFailedToGetSig
0000000000007618         db         "failed to get signal action for signal %d", 0 ; DATA XREF=main+4950
0000000000007642         align      8
                     aFailedToSetSig_7648:        // aFailedToSetSig
0000000000007648         db         "failed to set signal action for signal %d", 0 ; DATA XREF=main+4660
0000000000007672         align      8
                     aSignalSDMaskSe:
0000000000007678         db         "signal %s (%d) mask set to %s\n", 0        ; DATA XREF=main+4417
0000000000007697         align      8
                     aFailedToSetSig:
0000000000007698         db         "failed to set signal process mask", 0      ; DATA XREF=main+4475
00000000000076ba         align      64
                     __PRETTY_FUNCTION__.7616:
00000000000076c0         db         "scan_varname", 0                           ; DATA XREF=extract_varname+265
00000000000076cd         align      16
                     __PRETTY_FUNCTION__.7612:
00000000000076d0         db         "escape_char", 0                            ; DATA XREF=main+5019
00000000000076dc         align      32
                     __PRETTY_FUNCTION__.7637:
00000000000076e0         db         "validate_split_str", 0                     ; DATA XREF=main+4811, main+4842
00000000000076f3         align      8
                     shortopts:
00000000000076f8         db         "+C:iS:u:v0 \t", 0                          ; DATA XREF=main+203
                     aAbcdefghijklmn:
0000000000007705         db         "abcdefghijklmnopqrstuvwxyz", 0             ; DATA XREF=operand2sig+207
                     a831:
0000000000007720         db         "8.31", 0                                   ; DATA XREF=Version
                     aWriteError:
0000000000007725         db         "write error", 0                            ; DATA XREF=close_stdout+67
                     aSS:
0000000000007731         db         "%s: %s", 0                                 ; DATA XREF=close_stdout+108
                     aANullArgv0WasP:
0000000000007738         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
0000000000007770         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
0000000000007778         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
0000000000007779         db  0x74 ; 't'
000000000000777a         db  0x2d ; '-'                                         ; DATA XREF=main+2626
000000000000777b         db  0x00 ; '.'
000000000000777c         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
000000000000777d         db  0x80 ; '.'
000000000000777e         db  0x98 ; '.'
000000000000777f         db  0x00 ; '.'
0000000000007780         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
0000000000007781         db  0x80 ; '.'
0000000000007782         db  0x99 ; '.'
0000000000007783         db  0x00 ; '.'
0000000000007784         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
0000000000007785         db  0x07 ; '.'
0000000000007786         db  0x65 ; 'e'
0000000000007787         db  0x00 ; '.'
0000000000007788         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
0000000000007789         db  0xaf ; '.'
000000000000778a         db  0x00 ; '.'
000000000000778b         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_4850+1451, sub_4850+1493, sub_4850+2429
000000000000778c         db  0x00 ; '.'
000000000000778d         db  0x60 ; '`'                                         ; DATA XREF=sub_4850+1627, sub_4850+1654
000000000000778e         db  0x00 ; '.'
                     aLiteral:
000000000000778f         db         "literal", 0
                     aShell:
0000000000007797         db         "shell", 0
                     aShellalways:
000000000000779d         db         "shell-always", 0
00000000000077aa         db  0x73 ; 's'
00000000000077ab         db  0x68 ; 'h'
00000000000077ac         db  0x65 ; 'e'
00000000000077ad         db  0x6c ; 'l'
00000000000077ae         db  0x6c ; 'l'
00000000000077af         db  0x2d ; '-'
                     aEscape:
00000000000077b0         db         "escape", 0
                     aShellescapealw:
00000000000077b7         db         "shell-escape-always", 0
                     aCmaybe:
00000000000077cb         db         "c-maybe", 0
                     aClocale:
00000000000077d3         db         "clocale", 0
00000000000077db         align      32
                     switch_table_77e0:        // switch_table
00000000000077e0         dd         quotearg_buffer_restyled.loc_4f4a-switch_table_77e0, quotearg_buffer_restyled.loc_41a3-switch_table_77e0, quotearg_buffer_restyled.loc_5178-switch_table_77e0, quotearg_buffer_restyled.loc_4f84-switch_table_77e0 ; switch table used at 0x41a1 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
00000000000077f0         dd         quotearg_buffer_restyled.loc_4d74-switch_table_77e0, quotearg_buffer_restyled.loc_4dd0-switch_table_77e0, quotearg_buffer_restyled.loc_4e25-switch_table_77e0, quotearg_buffer_restyled.loc_4e6a-switch_table_77e0
0000000000007800         dd         3 dup (quotearg_buffer_restyled.loc_4ea4-switch_table_77e0)
000000000000780c         db  0x14 ; '.'                                         ; DATA XREF=quotearg_buffer_restyled+477
000000000000780d         db  0xcd ; '.'
000000000000780e         db  0xff ; '.'
000000000000780f         db  0xff ; '.'
0000000000007810         db  0xfc ; '.'
0000000000007811         db  0xcd ; '.'
0000000000007812         db  0xff ; '.'
0000000000007813         db  0xff ; '.'
0000000000007814         db  0xfc ; '.'
0000000000007815         db  0xcd ; '.'
0000000000007816         db  0xff ; '.'
0000000000007817         db  0xff ; '.'
0000000000007818         db  0xfc ; '.'
0000000000007819         db  0xcd ; '.'
000000000000781a         db  0xff ; '.'
000000000000781b         db  0xff ; '.'
000000000000781c         db  0xfc ; '.'
000000000000781d         db  0xcd ; '.'
000000000000781e         db  0xff ; '.'
000000000000781f         db  0xff ; '.'
0000000000007820         db  0xfc ; '.'
0000000000007821         db  0xcd ; '.'
0000000000007822         db  0xff ; '.'
0000000000007823         db  0xff ; '.'
0000000000007824         db  0xfc ; '.'
0000000000007825         db  0xcd ; '.'
0000000000007826         db  0xff ; '.'
0000000000007827         db  0xff ; '.'
0000000000007828         db  0x54 ; 'T'
0000000000007829         db  0xcd ; '.'
000000000000782a         db  0xff ; '.'
000000000000782b         db  0xff ; '.'
000000000000782c         db  0x5c ; '\'
000000000000782d         db  0xcc ; '.'
000000000000782e         db  0xff ; '.'
000000000000782f         db  0xff ; '.'
0000000000007830         db  0x1c ; '.'
0000000000007831         db  0xcc ; '.'
0000000000007832         db  0xff ; '.'
0000000000007833         db  0xff ; '.'
0000000000007834         db  0xe4 ; '.'
0000000000007835         db  0xcd ; '.'
0000000000007836         db  0xff ; '.'
0000000000007837         db  0xff ; '.'
0000000000007838         db  0xd4 ; '.'
0000000000007839         db  0xcd ; '.'
000000000000783a         db  0xff ; '.'
000000000000783b         db  0xff ; '.'
000000000000783c         db  0xc4 ; '.'
000000000000783d         db  0xcd ; '.'
000000000000783e         db  0xff ; '.'
000000000000783f         db  0xff ; '.'
0000000000007840         db  0xb4 ; '.'
0000000000007841         db  0xcd ; '.'
0000000000007842         db  0xff ; '.'
0000000000007843         db  0xff ; '.'
0000000000007844         db  0xfc ; '.'
0000000000007845         db  0xcd ; '.'
0000000000007846         db  0xff ; '.'
0000000000007847         db  0xff ; '.'
0000000000007848         db  0xfc ; '.'
0000000000007849         db  0xcd ; '.'
000000000000784a         db  0xff ; '.'
000000000000784b         db  0xff ; '.'
000000000000784c         db  0xfc ; '.'
000000000000784d         db  0xcd ; '.'
000000000000784e         db  0xff ; '.'
000000000000784f         db  0xff ; '.'
0000000000007850         db  0xfc ; '.'
0000000000007851         db  0xcd ; '.'
0000000000007852         db  0xff ; '.'
0000000000007853         db  0xff ; '.'
0000000000007854         db  0xfc ; '.'
0000000000007855         db  0xcd ; '.'
0000000000007856         db  0xff ; '.'
0000000000007857         db  0xff ; '.'
0000000000007858         db  0xfc ; '.'
0000000000007859         db  0xcd ; '.'
000000000000785a         db  0xff ; '.'
000000000000785b         db  0xff ; '.'
000000000000785c         db  0xfc ; '.'
000000000000785d         db  0xcd ; '.'
000000000000785e         db  0xff ; '.'
000000000000785f         db  0xff ; '.'
0000000000007860         db  0xfc ; '.'
0000000000007861         db  0xcd ; '.'
0000000000007862         db  0xff ; '.'
0000000000007863         db  0xff ; '.'
0000000000007864         db  0xfc ; '.'
0000000000007865         db  0xcd ; '.'
0000000000007866         db  0xff ; '.'
0000000000007867         db  0xff ; '.'
0000000000007868         db  0xfc ; '.'
0000000000007869         db  0xcd ; '.'
000000000000786a         db  0xff ; '.'
000000000000786b         db  0xff ; '.'
000000000000786c         db  0xfc ; '.'
000000000000786d         db  0xcd ; '.'
000000000000786e         db  0xff ; '.'
000000000000786f         db  0xff ; '.'
0000000000007870         db  0xfc ; '.'
0000000000007871         db  0xcd ; '.'
0000000000007872         db  0xff ; '.'
0000000000007873         db  0xff ; '.'
0000000000007874         db  0xfc ; '.'
0000000000007875         db  0xcd ; '.'
0000000000007876         db  0xff ; '.'
0000000000007877         db  0xff ; '.'
0000000000007878         db  0xfc ; '.'
0000000000007879         db  0xcd ; '.'
000000000000787a         db  0xff ; '.'
000000000000787b         db  0xff ; '.'
000000000000787c         db  0xfc ; '.'
000000000000787d         db  0xcd ; '.'
000000000000787e         db  0xff ; '.'
000000000000787f         db  0xff ; '.'
0000000000007880         db  0xfc ; '.'
0000000000007881         db  0xcd ; '.'
0000000000007882         db  0xff ; '.'
0000000000007883         db  0xff ; '.'
0000000000007884         db  0xfc ; '.'
0000000000007885         db  0xcd ; '.'
0000000000007886         db  0xff ; '.'
0000000000007887         db  0xff ; '.'
0000000000007888         db  0xfc ; '.'
0000000000007889         db  0xcd ; '.'
000000000000788a         db  0xff ; '.'
000000000000788b         db  0xff ; '.'
000000000000788c         db  0xa4 ; '.'
000000000000788d         db  0xcd ; '.'
000000000000788e         db  0xff ; '.'
000000000000788f         db  0xff ; '.'
0000000000007890         db  0x94 ; '.'
0000000000007891         db  0xcd ; '.'
0000000000007892         db  0xff ; '.'
0000000000007893         db  0xff ; '.'
0000000000007894         db  0x94 ; '.'
0000000000007895         db  0xcd ; '.'
0000000000007896         db  0xff ; '.'
0000000000007897         db  0xff ; '.'
0000000000007898         db  0x64 ; 'd'
0000000000007899         db  0xcd ; '.'
000000000000789a         db  0xff ; '.'
000000000000789b         db  0xff ; '.'
000000000000789c         db  0x94 ; '.'
000000000000789d         db  0xcd ; '.'
000000000000789e         db  0xff ; '.'
000000000000789f         db  0xff ; '.'
00000000000078a0         db  0x3c ; '<'
00000000000078a1         db  0xcd ; '.'
00000000000078a2         db  0xff ; '.'
00000000000078a3         db  0xff ; '.'
00000000000078a4         db  0x94 ; '.'
00000000000078a5         db  0xcd ; '.'
00000000000078a6         db  0xff ; '.'
00000000000078a7         db  0xff ; '.'
00000000000078a8         db  0xf7 ; '.'
00000000000078a9         db  0xcb ; '.'
00000000000078aa         db  0xff ; '.'
00000000000078ab         db  0xff ; '.'
00000000000078ac         db  0x94 ; '.'
00000000000078ad         db  0xcd ; '.'
00000000000078ae         db  0xff ; '.'
00000000000078af         db  0xff ; '.'
00000000000078b0         db  0x94 ; '.'
00000000000078b1         db  0xcd ; '.'
00000000000078b2         db  0xff ; '.'
00000000000078b3         db  0xff ; '.'
00000000000078b4         db  0x94 ; '.'
00000000000078b5         db  0xcd ; '.'
00000000000078b6         db  0xff ; '.'
00000000000078b7         db  0xff ; '.'
00000000000078b8         db  0x3c ; '<'
00000000000078b9         db  0xcd ; '.'
00000000000078ba         db  0xff ; '.'
00000000000078bb         db  0xff ; '.'
00000000000078bc         db  0x3c ; '<'
00000000000078bd         db  0xcd ; '.'
00000000000078be         db  0xff ; '.'
00000000000078bf         db  0xff ; '.'
00000000000078c0         db  0x3c ; '<'
00000000000078c1         db  0xcd ; '.'
00000000000078c2         db  0xff ; '.'
00000000000078c3         db  0xff ; '.'
00000000000078c4         db  0x3c ; '<'
00000000000078c5         db  0xcd ; '.'
00000000000078c6         db  0xff ; '.'
00000000000078c7         db  0xff ; '.'
00000000000078c8         db  0x3c ; '<'
00000000000078c9         db  0xcd ; '.'
00000000000078ca         db  0xff ; '.'
00000000000078cb         db  0xff ; '.'
00000000000078cc         db  0x3c ; '<'
00000000000078cd         db  0xcd ; '.'
00000000000078ce         db  0xff ; '.'
00000000000078cf         db  0xff ; '.'
00000000000078d0         db  0x3c ; '<'
00000000000078d1         db  0xcd ; '.'
00000000000078d2         db  0xff ; '.'
00000000000078d3         db  0xff ; '.'
00000000000078d4         db  0x3c ; '<'
00000000000078d5         db  0xcd ; '.'
00000000000078d6         db  0xff ; '.'
00000000000078d7         db  0xff ; '.'
00000000000078d8         db  0x3c ; '<'
00000000000078d9         db  0xcd ; '.'
00000000000078da         db  0xff ; '.'
00000000000078db         db  0xff ; '.'
00000000000078dc         db  0x3c ; '<'
00000000000078dd         db  0xcd ; '.'
00000000000078de         db  0xff ; '.'
00000000000078df         db  0xff ; '.'
00000000000078e0         db  0x3c ; '<'
00000000000078e1         db  0xcd ; '.'
00000000000078e2         db  0xff ; '.'
00000000000078e3         db  0xff ; '.'
00000000000078e4         db  0x3c ; '<'
00000000000078e5         db  0xcd ; '.'
00000000000078e6         db  0xff ; '.'
00000000000078e7         db  0xff ; '.'
00000000000078e8         db  0x3c ; '<'
00000000000078e9         db  0xcd ; '.'
00000000000078ea         db  0xff ; '.'
00000000000078eb         db  0xff ; '.'
00000000000078ec         db  0x3c ; '<'
00000000000078ed         db  0xcd ; '.'
00000000000078ee         db  0xff ; '.'
00000000000078ef         db  0xff ; '.'
00000000000078f0         db  0x3c ; '<'
00000000000078f1         db  0xcd ; '.'
00000000000078f2         db  0xff ; '.'
00000000000078f3         db  0xff ; '.'
00000000000078f4         db  0x3c ; '<'
00000000000078f5         db  0xcd ; '.'
00000000000078f6         db  0xff ; '.'
00000000000078f7         db  0xff ; '.'
00000000000078f8         db  0x94 ; '.'
00000000000078f9         db  0xcd ; '.'
00000000000078fa         db  0xff ; '.'
00000000000078fb         db  0xff ; '.'
00000000000078fc         db  0x94 ; '.'
00000000000078fd         db  0xcd ; '.'
00000000000078fe         db  0xff ; '.'
00000000000078ff         db  0xff ; '.'
0000000000007900         db  0x94 ; '.'
0000000000007901         db  0xcd ; '.'
0000000000007902         db  0xff ; '.'
0000000000007903         db  0xff ; '.'
0000000000007904         db  0x94 ; '.'
0000000000007905         db  0xcd ; '.'
0000000000007906         db  0xff ; '.'
0000000000007907         db  0xff ; '.'
0000000000007908         db  0xc7 ; '.'
0000000000007909         db  0xcb ; '.'
000000000000790a         db  0xff ; '.'
000000000000790b         db  0xff ; '.'
000000000000790c         db  0xfc ; '.'
000000000000790d         db  0xcd ; '.'
000000000000790e         db  0xff ; '.'
000000000000790f         db  0xff ; '.'
0000000000007910         db  0x3c ; '<'
0000000000007911         db  0xcd ; '.'
0000000000007912         db  0xff ; '.'
0000000000007913         db  0xff ; '.'
0000000000007914         db  0x3c ; '<'
0000000000007915         db  0xcd ; '.'
0000000000007916         db  0xff ; '.'
0000000000007917         db  0xff ; '.'
0000000000007918         db  0x3c ; '<'
0000000000007919         db  0xcd ; '.'
000000000000791a         db  0xff ; '.'
000000000000791b         db  0xff ; '.'
000000000000791c         db  0x3c ; '<'
000000000000791d         db  0xcd ; '.'
000000000000791e         db  0xff ; '.'
000000000000791f         db  0xff ; '.'
0000000000007920         db  0x3c ; '<'
0000000000007921         db  0xcd ; '.'
0000000000007922         db  0xff ; '.'
0000000000007923         db  0xff ; '.'
0000000000007924         db  0x3c ; '<'
0000000000007925         db  0xcd ; '.'
0000000000007926         db  0xff ; '.'
0000000000007927         db  0xff ; '.'
0000000000007928         db  0x3c ; '<'
0000000000007929         db  0xcd ; '.'
000000000000792a         db  0xff ; '.'
000000000000792b         db  0xff ; '.'
000000000000792c         db  0x3c ; '<'
000000000000792d         db  0xcd ; '.'
000000000000792e         db  0xff ; '.'
000000000000792f         db  0xff ; '.'
0000000000007930         db  0x3c ; '<'
0000000000007931         db  0xcd ; '.'
0000000000007932         db  0xff ; '.'
0000000000007933         db  0xff ; '.'
0000000000007934         db  0x3c ; '<'
0000000000007935         db  0xcd ; '.'
0000000000007936         db  0xff ; '.'
0000000000007937         db  0xff ; '.'
0000000000007938         db  0x3c ; '<'
0000000000007939         db  0xcd ; '.'
000000000000793a         db  0xff ; '.'
000000000000793b         db  0xff ; '.'
000000000000793c         db  0x3c ; '<'
000000000000793d         db  0xcd ; '.'
000000000000793e         db  0xff ; '.'
000000000000793f         db  0xff ; '.'
0000000000007940         db  0x3c ; '<'
0000000000007941         db  0xcd ; '.'
0000000000007942         db  0xff ; '.'
0000000000007943         db  0xff ; '.'
0000000000007944         db  0x3c ; '<'
0000000000007945         db  0xcd ; '.'
0000000000007946         db  0xff ; '.'
0000000000007947         db  0xff ; '.'
0000000000007948         db  0x3c ; '<'
0000000000007949         db  0xcd ; '.'
000000000000794a         db  0xff ; '.'
000000000000794b         db  0xff ; '.'
000000000000794c         db  0x3c ; '<'
000000000000794d         db  0xcd ; '.'
000000000000794e         db  0xff ; '.'
000000000000794f         db  0xff ; '.'
0000000000007950         db  0x3c ; '<'
0000000000007951         db  0xcd ; '.'
0000000000007952         db  0xff ; '.'
0000000000007953         db  0xff ; '.'
0000000000007954         db  0x3c ; '<'
0000000000007955         db  0xcd ; '.'
0000000000007956         db  0xff ; '.'
0000000000007957         db  0xff ; '.'
0000000000007958         db  0x3c ; '<'
0000000000007959         db  0xcd ; '.'
000000000000795a         db  0xff ; '.'
000000000000795b         db  0xff ; '.'
000000000000795c         db  0x3c ; '<'
000000000000795d         db  0xcd ; '.'
000000000000795e         db  0xff ; '.'
000000000000795f         db  0xff ; '.'
0000000000007960         db  0x3c ; '<'
0000000000007961         db  0xcd ; '.'
0000000000007962         db  0xff ; '.'
0000000000007963         db  0xff ; '.'
0000000000007964         db  0x3c ; '<'
0000000000007965         db  0xcd ; '.'
0000000000007966         db  0xff ; '.'
0000000000007967         db  0xff ; '.'
0000000000007968         db  0x3c ; '<'
0000000000007969         db  0xcd ; '.'
000000000000796a         db  0xff ; '.'
000000000000796b         db  0xff ; '.'
000000000000796c         db  0x3c ; '<'
000000000000796d         db  0xcd ; '.'
000000000000796e         db  0xff ; '.'
000000000000796f         db  0xff ; '.'
0000000000007970         db  0x3c ; '<'
0000000000007971         db  0xcd ; '.'
0000000000007972         db  0xff ; '.'
0000000000007973         db  0xff ; '.'
0000000000007974         db  0x3c ; '<'
0000000000007975         db  0xcd ; '.'
0000000000007976         db  0xff ; '.'
0000000000007977         db  0xff ; '.'
0000000000007978         db  0x94 ; '.'
0000000000007979         db  0xcd ; '.'
000000000000797a         db  0xff ; '.'
000000000000797b         db  0xff ; '.'
000000000000797c         db  0x6c ; 'l'
000000000000797d         db  0xcc ; '.'
000000000000797e         db  0xff ; '.'
000000000000797f         db  0xff ; '.'
0000000000007980         db  0x3c ; '<'
0000000000007981         db  0xcd ; '.'
0000000000007982         db  0xff ; '.'
0000000000007983         db  0xff ; '.'
0000000000007984         db  0x94 ; '.'
0000000000007985         db  0xcd ; '.'
0000000000007986         db  0xff ; '.'
0000000000007987         db  0xff ; '.'
0000000000007988         db  0x3c ; '<'
0000000000007989         db  0xcd ; '.'
000000000000798a         db  0xff ; '.'
000000000000798b         db  0xff ; '.'
000000000000798c         db  0x94 ; '.'
000000000000798d         db  0xcd ; '.'
000000000000798e         db  0xff ; '.'
000000000000798f         db  0xff ; '.'
0000000000007990         db  0x3c ; '<'
0000000000007991         db  0xcd ; '.'
0000000000007992         db  0xff ; '.'
0000000000007993         db  0xff ; '.'
0000000000007994         db  0x3c ; '<'
0000000000007995         db  0xcd ; '.'
0000000000007996         db  0xff ; '.'
0000000000007997         db  0xff ; '.'
0000000000007998         db  0x3c ; '<'
0000000000007999         db  0xcd ; '.'
000000000000799a         db  0xff ; '.'
000000000000799b         db  0xff ; '.'
000000000000799c         db  0x3c ; '<'
000000000000799d         db  0xcd ; '.'
000000000000799e         db  0xff ; '.'
000000000000799f         db  0xff ; '.'
00000000000079a0         db  0x3c ; '<'
00000000000079a1         db  0xcd ; '.'
00000000000079a2         db  0xff ; '.'
00000000000079a3         db  0xff ; '.'
00000000000079a4         db  0x3c ; '<'
00000000000079a5         db  0xcd ; '.'
00000000000079a6         db  0xff ; '.'
00000000000079a7         db  0xff ; '.'
00000000000079a8         db  0x3c ; '<'
00000000000079a9         db  0xcd ; '.'
00000000000079aa         db  0xff ; '.'
00000000000079ab         db  0xff ; '.'
00000000000079ac         db  0x3c ; '<'
00000000000079ad         db  0xcd ; '.'
00000000000079ae         db  0xff ; '.'
00000000000079af         db  0xff ; '.'
00000000000079b0         db  0x3c ; '<'
00000000000079b1         db  0xcd ; '.'
00000000000079b2         db  0xff ; '.'
00000000000079b3         db  0xff ; '.'
00000000000079b4         db  0x3c ; '<'
00000000000079b5         db  0xcd ; '.'
00000000000079b6         db  0xff ; '.'
00000000000079b7         db  0xff ; '.'
00000000000079b8         db  0x3c ; '<'
00000000000079b9         db  0xcd ; '.'
00000000000079ba         db  0xff ; '.'
00000000000079bb         db  0xff ; '.'
00000000000079bc         db  0x3c ; '<'
00000000000079bd         db  0xcd ; '.'
00000000000079be         db  0xff ; '.'
00000000000079bf         db  0xff ; '.'
00000000000079c0         db  0x3c ; '<'
00000000000079c1         db  0xcd ; '.'
00000000000079c2         db  0xff ; '.'
00000000000079c3         db  0xff ; '.'
00000000000079c4         db  0x3c ; '<'
00000000000079c5         db  0xcd ; '.'
00000000000079c6         db  0xff ; '.'
00000000000079c7         db  0xff ; '.'
00000000000079c8         db  0x3c ; '<'
00000000000079c9         db  0xcd ; '.'
00000000000079ca         db  0xff ; '.'
00000000000079cb         db  0xff ; '.'
00000000000079cc         db  0x3c ; '<'
00000000000079cd         db  0xcd ; '.'
00000000000079ce         db  0xff ; '.'
00000000000079cf         db  0xff ; '.'
00000000000079d0         db  0x3c ; '<'
00000000000079d1         db  0xcd ; '.'
00000000000079d2         db  0xff ; '.'
00000000000079d3         db  0xff ; '.'
00000000000079d4         db  0x3c ; '<'
00000000000079d5         db  0xcd ; '.'
00000000000079d6         db  0xff ; '.'
00000000000079d7         db  0xff ; '.'
00000000000079d8         db  0x3c ; '<'
00000000000079d9         db  0xcd ; '.'
00000000000079da         db  0xff ; '.'
00000000000079db         db  0xff ; '.'
00000000000079dc         db  0x3c ; '<'
00000000000079dd         db  0xcd ; '.'
00000000000079de         db  0xff ; '.'
00000000000079df         db  0xff ; '.'
00000000000079e0         db  0x3c ; '<'
00000000000079e1         db  0xcd ; '.'
00000000000079e2         db  0xff ; '.'
00000000000079e3         db  0xff ; '.'
00000000000079e4         db  0x3c ; '<'
00000000000079e5         db  0xcd ; '.'
00000000000079e6         db  0xff ; '.'
00000000000079e7         db  0xff ; '.'
00000000000079e8         db  0x3c ; '<'
00000000000079e9         db  0xcd ; '.'
00000000000079ea         db  0xff ; '.'
00000000000079eb         db  0xff ; '.'
00000000000079ec         db  0x3c ; '<'
00000000000079ed         db  0xcd ; '.'
00000000000079ee         db  0xff ; '.'
00000000000079ef         db  0xff ; '.'
00000000000079f0         db  0x3c ; '<'
00000000000079f1         db  0xcd ; '.'
00000000000079f2         db  0xff ; '.'
00000000000079f3         db  0xff ; '.'
00000000000079f4         db  0x3c ; '<'
00000000000079f5         db  0xcd ; '.'
00000000000079f6         db  0xff ; '.'
00000000000079f7         db  0xff ; '.'
00000000000079f8         db  0xf7 ; '.'
00000000000079f9         db  0xca ; '.'
00000000000079fa         db  0xff ; '.'
00000000000079fb         db  0xff ; '.'
00000000000079fc         db  0x94 ; '.'
00000000000079fd         db  0xcd ; '.'
00000000000079fe         db  0xff ; '.'
00000000000079ff         db  0xff ; '.'
0000000000007a00         db  0xf7 ; '.'
0000000000007a01         db  0xca ; '.'
0000000000007a02         db  0xff ; '.'
0000000000007a03         db  0xff ; '.'
0000000000007a04         db  0x64 ; 'd'
0000000000007a05         db  0xcd ; '.'
0000000000007a06         db  0xff ; '.'
0000000000007a07         db  0xff ; '.'
0000000000007a08         db  0xe8 ; '.'                                         ; DATA XREF=sub_45f0+137
0000000000007a09         db  0xcc ; '.'
0000000000007a0a         db  0xff ; '.'
0000000000007a0b         db  0xff ; '.'
0000000000007a0c         db  0xf8 ; '.'
0000000000007a0d         db  0xcb ; '.'
0000000000007a0e         db  0xff ; '.'
0000000000007a0f         db  0xff ; '.'
0000000000007a10         db  0xf8 ; '.'
0000000000007a11         db  0xcb ; '.'
0000000000007a12         db  0xff ; '.'
0000000000007a13         db  0xff ; '.'
0000000000007a14         db  0xf8 ; '.'
0000000000007a15         db  0xcb ; '.'
0000000000007a16         db  0xff ; '.'
0000000000007a17         db  0xff ; '.'
0000000000007a18         db  0xf8 ; '.'
0000000000007a19         db  0xcb ; '.'
0000000000007a1a         db  0xff ; '.'
0000000000007a1b         db  0xff ; '.'
0000000000007a1c         db  0xf8 ; '.'
0000000000007a1d         db  0xcb ; '.'
0000000000007a1e         db  0xff ; '.'
0000000000007a1f         db  0xff ; '.'
0000000000007a20         db  0xf8 ; '.'
0000000000007a21         db  0xcb ; '.'
0000000000007a22         db  0xff ; '.'
0000000000007a23         db  0xff ; '.'
0000000000007a24         db  0xd8 ; '.'
0000000000007a25         db  0xcc ; '.'
0000000000007a26         db  0xff ; '.'
0000000000007a27         db  0xff ; '.'
0000000000007a28         db  0x28 ; '('
0000000000007a29         db  0xce ; '.'
0000000000007a2a         db  0xff ; '.'
0000000000007a2b         db  0xff ; '.'
0000000000007a2c         db  0x10 ; '.'
0000000000007a2d         db  0xce ; '.'
0000000000007a2e         db  0xff ; '.'
0000000000007a2f         db  0xff ; '.'
0000000000007a30         db  0xc0 ; '.'
0000000000007a31         db  0xcc ; '.'
0000000000007a32         db  0xff ; '.'
0000000000007a33         db  0xff ; '.'
0000000000007a34         db  0x00 ; '.'
0000000000007a35         db  0xce ; '.'
0000000000007a36         db  0xff ; '.'
0000000000007a37         db  0xff ; '.'
0000000000007a38         db  0xa8 ; '.'
0000000000007a39         db  0xcc ; '.'
0000000000007a3a         db  0xff ; '.'
0000000000007a3b         db  0xff ; '.'
0000000000007a3c         db  0xe8 ; '.'
0000000000007a3d         db  0xcd ; '.'
0000000000007a3e         db  0xff ; '.'
0000000000007a3f         db  0xff ; '.'
0000000000007a40         db  0xf8 ; '.'
0000000000007a41         db  0xcb ; '.'
0000000000007a42         db  0xff ; '.'
0000000000007a43         db  0xff ; '.'
0000000000007a44         db  0xf8 ; '.'
0000000000007a45         db  0xcb ; '.'
0000000000007a46         db  0xff ; '.'
0000000000007a47         db  0xff ; '.'
0000000000007a48         db  0xf8 ; '.'
0000000000007a49         db  0xcb ; '.'
0000000000007a4a         db  0xff ; '.'
0000000000007a4b         db  0xff ; '.'
0000000000007a4c         db  0xf8 ; '.'
0000000000007a4d         db  0xcb ; '.'
0000000000007a4e         db  0xff ; '.'
0000000000007a4f         db  0xff ; '.'
0000000000007a50         db  0xf8 ; '.'
0000000000007a51         db  0xcb ; '.'
0000000000007a52         db  0xff ; '.'
0000000000007a53         db  0xff ; '.'
0000000000007a54         db  0xf8 ; '.'
0000000000007a55         db  0xcb ; '.'
0000000000007a56         db  0xff ; '.'
0000000000007a57         db  0xff ; '.'
0000000000007a58         db  0xf8 ; '.'
0000000000007a59         db  0xcb ; '.'
0000000000007a5a         db  0xff ; '.'
0000000000007a5b         db  0xff ; '.'
0000000000007a5c         db  0xf8 ; '.'
0000000000007a5d         db  0xcb ; '.'
0000000000007a5e         db  0xff ; '.'
0000000000007a5f         db  0xff ; '.'
0000000000007a60         db  0xf8 ; '.'
0000000000007a61         db  0xcb ; '.'
0000000000007a62         db  0xff ; '.'
0000000000007a63         db  0xff ; '.'
0000000000007a64         db  0xf8 ; '.'
0000000000007a65         db  0xcb ; '.'
0000000000007a66         db  0xff ; '.'
0000000000007a67         db  0xff ; '.'
0000000000007a68         db  0xf8 ; '.'
0000000000007a69         db  0xcb ; '.'
0000000000007a6a         db  0xff ; '.'
0000000000007a6b         db  0xff ; '.'
0000000000007a6c         db  0xf8 ; '.'
0000000000007a6d         db  0xcb ; '.'
0000000000007a6e         db  0xff ; '.'
0000000000007a6f         db  0xff ; '.'
0000000000007a70         db  0xf8 ; '.'
0000000000007a71         db  0xcb ; '.'
0000000000007a72         db  0xff ; '.'
0000000000007a73         db  0xff ; '.'
0000000000007a74         db  0xf8 ; '.'
0000000000007a75         db  0xcb ; '.'
0000000000007a76         db  0xff ; '.'
0000000000007a77         db  0xff ; '.'
0000000000007a78         db  0xf8 ; '.'
0000000000007a79         db  0xcb ; '.'
0000000000007a7a         db  0xff ; '.'
0000000000007a7b         db  0xff ; '.'
0000000000007a7c         db  0xf8 ; '.'
0000000000007a7d         db  0xcb ; '.'
0000000000007a7e         db  0xff ; '.'
0000000000007a7f         db  0xff ; '.'
0000000000007a80         db  0xf8 ; '.'
0000000000007a81         db  0xcb ; '.'
0000000000007a82         db  0xff ; '.'
0000000000007a83         db  0xff ; '.'
0000000000007a84         db  0xf8 ; '.'
0000000000007a85         db  0xcb ; '.'
0000000000007a86         db  0xff ; '.'
0000000000007a87         db  0xff ; '.'
0000000000007a88         db  0xd0 ; '.'
0000000000007a89         db  0xcd ; '.'
0000000000007a8a         db  0xff ; '.'
0000000000007a8b         db  0xff ; '.'
0000000000007a8c         db  0xb8 ; '.'
0000000000007a8d         db  0xcd ; '.'
0000000000007a8e         db  0xff ; '.'
0000000000007a8f         db  0xff ; '.'
0000000000007a90         db  0xb8 ; '.'
0000000000007a91         db  0xcd ; '.'
0000000000007a92         db  0xff ; '.'
0000000000007a93         db  0xff ; '.'
0000000000007a94         db  0xa0 ; '.'
0000000000007a95         db  0xcd ; '.'
0000000000007a96         db  0xff ; '.'
0000000000007a97         db  0xff ; '.'
0000000000007a98         db  0xb8 ; '.'
0000000000007a99         db  0xcd ; '.'
0000000000007a9a         db  0xff ; '.'
0000000000007a9b         db  0xff ; '.'
0000000000007a9c         db  0x88 ; '.'
0000000000007a9d         db  0xcd ; '.'
0000000000007a9e         db  0xff ; '.'
0000000000007a9f         db  0xff ; '.'
0000000000007aa0         db  0xb8 ; '.'
0000000000007aa1         db  0xcd ; '.'
0000000000007aa2         db  0xff ; '.'
0000000000007aa3         db  0xff ; '.'
0000000000007aa4         db  0xf8 ; '.'
0000000000007aa5         db  0xc9 ; '.'
0000000000007aa6         db  0xff ; '.'
0000000000007aa7         db  0xff ; '.'
0000000000007aa8         db  0xb8 ; '.'
0000000000007aa9         db  0xcd ; '.'
0000000000007aaa         db  0xff ; '.'
0000000000007aab         db  0xff ; '.'
0000000000007aac         db  0xb8 ; '.'
0000000000007aad         db  0xcd ; '.'
0000000000007aae         db  0xff ; '.'
0000000000007aaf         db  0xff ; '.'
0000000000007ab0         db  0xb8 ; '.'
0000000000007ab1         db  0xcd ; '.'
0000000000007ab2         db  0xff ; '.'
0000000000007ab3         db  0xff ; '.'
0000000000007ab4         db  0x88 ; '.'
0000000000007ab5         db  0xcd ; '.'
0000000000007ab6         db  0xff ; '.'
0000000000007ab7         db  0xff ; '.'
0000000000007ab8         db  0x88 ; '.'
0000000000007ab9         db  0xcd ; '.'
0000000000007aba         db  0xff ; '.'
0000000000007abb         db  0xff ; '.'
0000000000007abc         db  0x88 ; '.'
0000000000007abd         db  0xcd ; '.'
0000000000007abe         db  0xff ; '.'
0000000000007abf         db  0xff ; '.'
0000000000007ac0         db  0x88 ; '.'
0000000000007ac1         db  0xcd ; '.'
0000000000007ac2         db  0xff ; '.'
0000000000007ac3         db  0xff ; '.'
0000000000007ac4         db  0x88 ; '.'
0000000000007ac5         db  0xcd ; '.'
0000000000007ac6         db  0xff ; '.'
0000000000007ac7         db  0xff ; '.'
0000000000007ac8         db  0x88 ; '.'
0000000000007ac9         db  0xcd ; '.'
0000000000007aca         db  0xff ; '.'
0000000000007acb         db  0xff ; '.'
0000000000007acc         db  0x88 ; '.'
0000000000007acd         db  0xcd ; '.'
0000000000007ace         db  0xff ; '.'
0000000000007acf         db  0xff ; '.'
0000000000007ad0         db  0x88 ; '.'
0000000000007ad1         db  0xcd ; '.'
0000000000007ad2         db  0xff ; '.'
0000000000007ad3         db  0xff ; '.'
0000000000007ad4         db  0x88 ; '.'
0000000000007ad5         db  0xcd ; '.'
0000000000007ad6         db  0xff ; '.'
0000000000007ad7         db  0xff ; '.'
0000000000007ad8         db  0x88 ; '.'
0000000000007ad9         db  0xcd ; '.'
0000000000007ada         db  0xff ; '.'
0000000000007adb         db  0xff ; '.'
0000000000007adc         db  0x88 ; '.'
0000000000007add         db  0xcd ; '.'
0000000000007ade         db  0xff ; '.'
0000000000007adf         db  0xff ; '.'
0000000000007ae0         db  0x88 ; '.'
0000000000007ae1         db  0xcd ; '.'
0000000000007ae2         db  0xff ; '.'
0000000000007ae3         db  0xff ; '.'
0000000000007ae4         db  0x88 ; '.'
0000000000007ae5         db  0xcd ; '.'
0000000000007ae6         db  0xff ; '.'
0000000000007ae7         db  0xff ; '.'
0000000000007ae8         db  0x88 ; '.'
0000000000007ae9         db  0xcd ; '.'
0000000000007aea         db  0xff ; '.'
0000000000007aeb         db  0xff ; '.'
0000000000007aec         db  0x88 ; '.'
0000000000007aed         db  0xcd ; '.'
0000000000007aee         db  0xff ; '.'
0000000000007aef         db  0xff ; '.'
0000000000007af0         db  0x88 ; '.'
0000000000007af1         db  0xcd ; '.'
0000000000007af2         db  0xff ; '.'
0000000000007af3         db  0xff ; '.'
0000000000007af4         db  0xb8 ; '.'
0000000000007af5         db  0xcd ; '.'
0000000000007af6         db  0xff ; '.'
0000000000007af7         db  0xff ; '.'
0000000000007af8         db  0xb8 ; '.'
0000000000007af9         db  0xcd ; '.'
0000000000007afa         db  0xff ; '.'
0000000000007afb         db  0xff ; '.'
0000000000007afc         db  0xb8 ; '.'
0000000000007afd         db  0xcd ; '.'
0000000000007afe         db  0xff ; '.'
0000000000007aff         db  0xff ; '.'
0000000000007b00         db  0xb8 ; '.'
0000000000007b01         db  0xcd ; '.'
0000000000007b02         db  0xff ; '.'
0000000000007b03         db  0xff ; '.'
0000000000007b04         db  0xc8 ; '.'
0000000000007b05         db  0xc9 ; '.'
0000000000007b06         db  0xff ; '.'
0000000000007b07         db  0xff ; '.'
0000000000007b08         db  0xf8 ; '.'
0000000000007b09         db  0xcb ; '.'
0000000000007b0a         db  0xff ; '.'
0000000000007b0b         db  0xff ; '.'
0000000000007b0c         db  0x88 ; '.'
0000000000007b0d         db  0xcd ; '.'
0000000000007b0e         db  0xff ; '.'
0000000000007b0f         db  0xff ; '.'
0000000000007b10         db  0x88 ; '.'
0000000000007b11         db  0xcd ; '.'
0000000000007b12         db  0xff ; '.'
0000000000007b13         db  0xff ; '.'
0000000000007b14         db  0x88 ; '.'
0000000000007b15         db  0xcd ; '.'
0000000000007b16         db  0xff ; '.'
0000000000007b17         db  0xff ; '.'
0000000000007b18         db  0x88 ; '.'
0000000000007b19         db  0xcd ; '.'
0000000000007b1a         db  0xff ; '.'
0000000000007b1b         db  0xff ; '.'
0000000000007b1c         db  0x88 ; '.'
0000000000007b1d         db  0xcd ; '.'
0000000000007b1e         db  0xff ; '.'
0000000000007b1f         db  0xff ; '.'
0000000000007b20         db  0x88 ; '.'
0000000000007b21         db  0xcd ; '.'
0000000000007b22         db  0xff ; '.'
0000000000007b23         db  0xff ; '.'
0000000000007b24         db  0x88 ; '.'
0000000000007b25         db  0xcd ; '.'
0000000000007b26         db  0xff ; '.'
0000000000007b27         db  0xff ; '.'
0000000000007b28         db  0x88 ; '.'
0000000000007b29         db  0xcd ; '.'
0000000000007b2a         db  0xff ; '.'
0000000000007b2b         db  0xff ; '.'
0000000000007b2c         db  0x88 ; '.'
0000000000007b2d         db  0xcd ; '.'
0000000000007b2e         db  0xff ; '.'
0000000000007b2f         db  0xff ; '.'
0000000000007b30         db  0x88 ; '.'
0000000000007b31         db  0xcd ; '.'
0000000000007b32         db  0xff ; '.'
0000000000007b33         db  0xff ; '.'
0000000000007b34         db  0x88 ; '.'
0000000000007b35         db  0xcd ; '.'
0000000000007b36         db  0xff ; '.'
0000000000007b37         db  0xff ; '.'
0000000000007b38         db  0x88 ; '.'
0000000000007b39         db  0xcd ; '.'
0000000000007b3a         db  0xff ; '.'
0000000000007b3b         db  0xff ; '.'
0000000000007b3c         db  0x88 ; '.'
0000000000007b3d         db  0xcd ; '.'
0000000000007b3e         db  0xff ; '.'
0000000000007b3f         db  0xff ; '.'
0000000000007b40         db  0x88 ; '.'
0000000000007b41         db  0xcd ; '.'
0000000000007b42         db  0xff ; '.'
0000000000007b43         db  0xff ; '.'
0000000000007b44         db  0x88 ; '.'
0000000000007b45         db  0xcd ; '.'
0000000000007b46         db  0xff ; '.'
0000000000007b47         db  0xff ; '.'
0000000000007b48         db  0x88 ; '.'
0000000000007b49         db  0xcd ; '.'
0000000000007b4a         db  0xff ; '.'
0000000000007b4b         db  0xff ; '.'
0000000000007b4c         db  0x88 ; '.'
0000000000007b4d         db  0xcd ; '.'
0000000000007b4e         db  0xff ; '.'
0000000000007b4f         db  0xff ; '.'
0000000000007b50         db  0x88 ; '.'
0000000000007b51         db  0xcd ; '.'
0000000000007b52         db  0xff ; '.'
0000000000007b53         db  0xff ; '.'
0000000000007b54         db  0x88 ; '.'
0000000000007b55         db  0xcd ; '.'
0000000000007b56         db  0xff ; '.'
0000000000007b57         db  0xff ; '.'
0000000000007b58         db  0x88 ; '.'
0000000000007b59         db  0xcd ; '.'
0000000000007b5a         db  0xff ; '.'
0000000000007b5b         db  0xff ; '.'
0000000000007b5c         db  0x88 ; '.'
0000000000007b5d         db  0xcd ; '.'
0000000000007b5e         db  0xff ; '.'
0000000000007b5f         db  0xff ; '.'
0000000000007b60         db  0x88 ; '.'
0000000000007b61         db  0xcd ; '.'
0000000000007b62         db  0xff ; '.'
0000000000007b63         db  0xff ; '.'
0000000000007b64         db  0x88 ; '.'
0000000000007b65         db  0xcd ; '.'
0000000000007b66         db  0xff ; '.'
0000000000007b67         db  0xff ; '.'
0000000000007b68         db  0x88 ; '.'
0000000000007b69         db  0xcd ; '.'
0000000000007b6a         db  0xff ; '.'
0000000000007b6b         db  0xff ; '.'
0000000000007b6c         db  0x88 ; '.'
0000000000007b6d         db  0xcd ; '.'
0000000000007b6e         db  0xff ; '.'
0000000000007b6f         db  0xff ; '.'
0000000000007b70         db  0x88 ; '.'
0000000000007b71         db  0xcd ; '.'
0000000000007b72         db  0xff ; '.'
0000000000007b73         db  0xff ; '.'
0000000000007b74         db  0xb8 ; '.'
0000000000007b75         db  0xcd ; '.'
0000000000007b76         db  0xff ; '.'
0000000000007b77         db  0xff ; '.'
0000000000007b78         db  0x88 ; '.'
0000000000007b79         db  0xcc ; '.'
0000000000007b7a         db  0xff ; '.'
0000000000007b7b         db  0xff ; '.'
0000000000007b7c         db  0x88 ; '.'
0000000000007b7d         db  0xcd ; '.'
0000000000007b7e         db  0xff ; '.'
0000000000007b7f         db  0xff ; '.'
0000000000007b80         db  0xb8 ; '.'
0000000000007b81         db  0xcd ; '.'
0000000000007b82         db  0xff ; '.'
0000000000007b83         db  0xff ; '.'
0000000000007b84         db  0x88 ; '.'
0000000000007b85         db  0xcd ; '.'
0000000000007b86         db  0xff ; '.'
0000000000007b87         db  0xff ; '.'
0000000000007b88         db  0xb8 ; '.'
0000000000007b89         db  0xcd ; '.'
0000000000007b8a         db  0xff ; '.'
0000000000007b8b         db  0xff ; '.'
0000000000007b8c         db  0x88 ; '.'
0000000000007b8d         db  0xcd ; '.'
0000000000007b8e         db  0xff ; '.'
0000000000007b8f         db  0xff ; '.'
0000000000007b90         db  0x88 ; '.'
0000000000007b91         db  0xcd ; '.'
0000000000007b92         db  0xff ; '.'
0000000000007b93         db  0xff ; '.'
0000000000007b94         db  0x88 ; '.'
0000000000007b95         db  0xcd ; '.'
0000000000007b96         db  0xff ; '.'
0000000000007b97         db  0xff ; '.'
0000000000007b98         db  0x88 ; '.'
0000000000007b99         db  0xcd ; '.'
0000000000007b9a         db  0xff ; '.'
0000000000007b9b         db  0xff ; '.'
0000000000007b9c         db  0x88 ; '.'
0000000000007b9d         db  0xcd ; '.'
0000000000007b9e         db  0xff ; '.'
0000000000007b9f         db  0xff ; '.'
0000000000007ba0         db  0x88 ; '.'
0000000000007ba1         db  0xcd ; '.'
0000000000007ba2         db  0xff ; '.'
0000000000007ba3         db  0xff ; '.'
0000000000007ba4         db  0x88 ; '.'
0000000000007ba5         db  0xcd ; '.'
0000000000007ba6         db  0xff ; '.'
0000000000007ba7         db  0xff ; '.'
0000000000007ba8         db  0x88 ; '.'
0000000000007ba9         db  0xcd ; '.'
0000000000007baa         db  0xff ; '.'
0000000000007bab         db  0xff ; '.'
0000000000007bac         db  0x88 ; '.'
0000000000007bad         db  0xcd ; '.'
0000000000007bae         db  0xff ; '.'
0000000000007baf         db  0xff ; '.'
0000000000007bb0         db  0x88 ; '.'
0000000000007bb1         db  0xcd ; '.'
0000000000007bb2         db  0xff ; '.'
0000000000007bb3         db  0xff ; '.'
0000000000007bb4         db  0x88 ; '.'
0000000000007bb5         db  0xcd ; '.'
0000000000007bb6         db  0xff ; '.'
0000000000007bb7         db  0xff ; '.'
0000000000007bb8         db  0x88 ; '.'
0000000000007bb9         db  0xcd ; '.'
0000000000007bba         db  0xff ; '.'
0000000000007bbb         db  0xff ; '.'
0000000000007bbc         db  0x88 ; '.'
0000000000007bbd         db  0xcd ; '.'
0000000000007bbe         db  0xff ; '.'
0000000000007bbf         db  0xff ; '.'
0000000000007bc0         db  0x88 ; '.'
0000000000007bc1         db  0xcd ; '.'
0000000000007bc2         db  0xff ; '.'
0000000000007bc3         db  0xff ; '.'
0000000000007bc4         db  0x88 ; '.'
0000000000007bc5         db  0xcd ; '.'
0000000000007bc6         db  0xff ; '.'
0000000000007bc7         db  0xff ; '.'
0000000000007bc8         db  0x88 ; '.'
0000000000007bc9         db  0xcd ; '.'
0000000000007bca         db  0xff ; '.'
0000000000007bcb         db  0xff ; '.'
0000000000007bcc         db  0x88 ; '.'
0000000000007bcd         db  0xcd ; '.'
0000000000007bce         db  0xff ; '.'
0000000000007bcf         db  0xff ; '.'
0000000000007bd0         db  0x88 ; '.'
0000000000007bd1         db  0xcd ; '.'
0000000000007bd2         db  0xff ; '.'
0000000000007bd3         db  0xff ; '.'
0000000000007bd4         db  0x88 ; '.'
0000000000007bd5         db  0xcd ; '.'
0000000000007bd6         db  0xff ; '.'
0000000000007bd7         db  0xff ; '.'
0000000000007bd8         db  0x88 ; '.'
0000000000007bd9         db  0xcd ; '.'
0000000000007bda         db  0xff ; '.'
0000000000007bdb         db  0xff ; '.'
0000000000007bdc         db  0x88 ; '.'
0000000000007bdd         db  0xcd ; '.'
0000000000007bde         db  0xff ; '.'
0000000000007bdf         db  0xff ; '.'
0000000000007be0         db  0x88 ; '.'
0000000000007be1         db  0xcd ; '.'
0000000000007be2         db  0xff ; '.'
0000000000007be3         db  0xff ; '.'
0000000000007be4         db  0x88 ; '.'
0000000000007be5         db  0xcd ; '.'
0000000000007be6         db  0xff ; '.'
0000000000007be7         db  0xff ; '.'
0000000000007be8         db  0x88 ; '.'
0000000000007be9         db  0xcd ; '.'
0000000000007bea         db  0xff ; '.'
0000000000007beb         db  0xff ; '.'
0000000000007bec         db  0x88 ; '.'
0000000000007bed         db  0xcd ; '.'
0000000000007bee         db  0xff ; '.'
0000000000007bef         db  0xff ; '.'
0000000000007bf0         db  0x88 ; '.'
0000000000007bf1         db  0xcd ; '.'
0000000000007bf2         db  0xff ; '.'
0000000000007bf3         db  0xff ; '.'
0000000000007bf4         db  0xf8 ; '.'
0000000000007bf5         db  0xc8 ; '.'
0000000000007bf6         db  0xff ; '.'
0000000000007bf7         db  0xff ; '.'
0000000000007bf8         db  0xb8 ; '.'
0000000000007bf9         db  0xcd ; '.'
0000000000007bfa         db  0xff ; '.'
0000000000007bfb         db  0xff ; '.'
0000000000007bfc         db  0xf8 ; '.'
0000000000007bfd         db  0xc8 ; '.'
0000000000007bfe         db  0xff ; '.'
0000000000007bff         db  0xff ; '.'
0000000000007c00         db  0xa0 ; '.'
0000000000007c01         db  0xcd ; '.'
0000000000007c02         db  0xff ; '.'
0000000000007c03         db  0xff ; '.'
0000000000007c04         db  0x00 ; '.'
0000000000007c05         db  0x00 ; '.'
0000000000007c06         db  0x00 ; '.'
0000000000007c07         db  0x00 ; '.'
0000000000007c08         db  0x00 ; '.'
0000000000007c09         db  0x00 ; '.'
0000000000007c0a         db  0x00 ; '.'
0000000000007c0b         db  0x00 ; '.'
0000000000007c0c         db  0x00 ; '.'
0000000000007c0d         db  0x00 ; '.'
0000000000007c0e         db  0x00 ; '.'
0000000000007c0f         db  0x00 ; '.'
0000000000007c10         db  0x00 ; '.'
0000000000007c11         db  0x00 ; '.'
0000000000007c12         db  0x00 ; '.'
0000000000007c13         db  0x00 ; '.'
0000000000007c14         db  0x00 ; '.'
0000000000007c15         db  0x00 ; '.'
0000000000007c16         db  0x00 ; '.'
0000000000007c17         db  0x00 ; '.'
0000000000007c18         db  0x00 ; '.'
0000000000007c19         db  0x00 ; '.'
0000000000007c1a         db  0x00 ; '.'
0000000000007c1b         db  0x00 ; '.'
0000000000007c1c         db  0x00 ; '.'
0000000000007c1d         db  0x00 ; '.'
0000000000007c1e         db  0x00 ; '.'
0000000000007c1f         db  0x00 ; '.'
                     quoting_style_vals:
0000000000007c20         db  0x00 ; '.'
0000000000007c21         db  0x00 ; '.'
0000000000007c22         db  0x00 ; '.'
0000000000007c23         db  0x00 ; '.'
0000000000007c24         db  0x01 ; '.'
0000000000007c25         db  0x00 ; '.'
0000000000007c26         db  0x00 ; '.'
0000000000007c27         db  0x00 ; '.'
0000000000007c28         db  0x02 ; '.'
0000000000007c29         db  0x00 ; '.'
0000000000007c2a         db  0x00 ; '.'
0000000000007c2b         db  0x00 ; '.'
0000000000007c2c         db  0x03 ; '.'
0000000000007c2d         db  0x00 ; '.'
0000000000007c2e         db  0x00 ; '.'
0000000000007c2f         db  0x00 ; '.'
0000000000007c30         db  0x04 ; '.'
0000000000007c31         db  0x00 ; '.'
0000000000007c32         db  0x00 ; '.'
0000000000007c33         db  0x00 ; '.'
0000000000007c34         db  0x05 ; '.'
0000000000007c35         db  0x00 ; '.'
0000000000007c36         db  0x00 ; '.'
0000000000007c37         db  0x00 ; '.'
0000000000007c38         db  0x06 ; '.'
0000000000007c39         db  0x00 ; '.'
0000000000007c3a         db  0x00 ; '.'
0000000000007c3b         db  0x00 ; '.'
0000000000007c3c         db  0x07 ; '.'
0000000000007c3d         db  0x00 ; '.'
0000000000007c3e         db  0x00 ; '.'
0000000000007c3f         db  0x00 ; '.'
0000000000007c40         db  0x08 ; '.'
0000000000007c41         db  0x00 ; '.'
0000000000007c42         db  0x00 ; '.'
0000000000007c43         db  0x00 ; '.'
0000000000007c44         db  0x09 ; '.'
0000000000007c45         db  0x00 ; '.'
0000000000007c46         db  0x00 ; '.'
0000000000007c47         db  0x00 ; '.'
                     aSSSn:
0000000000007c48         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
0000000000007c54         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
0000000000007c5b         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
0000000000007c5c         db  0x43 ; 'C'
0000000000007c5d         db  0x29 ; ')'
0000000000007c5e         db  0x00 ; '.'
                     aWrittenBySn:
0000000000007c5f         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
0000000000007c6f         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
0000000000007c86         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
0000000000007ca2         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
0000000000007cb7         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
0000000000007ccd         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
0000000000007ce1         align      8
                     aNlicenseGplv3G:
0000000000007ce8         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
0000000000007db4         align      8
                     aWrittenBySSSna:
0000000000007db8         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_7dd8:        // aWrittenBySSSns
0000000000007dd8         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
0000000000007dfc         align      512
                     aWrittenBySSSns_7e00:        // aWrittenBySSSns
0000000000007e00         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_7e28:        // aWrittenBySSSns
0000000000007e28         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
0000000000007e54         align      8
                     aWrittenBySSSns_7e58:        // aWrittenBySSSns
0000000000007e58         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
0000000000007e88         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
0000000000007ebc         align      64
                     aWrittenBySSSns_7ec0:        // aWrittenBySSSns
0000000000007ec0         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
0000000000007efc         align      256
                     aGeneralHelpUsi:
0000000000007f00         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
0000000000007f41         align      8
                     switch_table_7f48:        // switch_table
0000000000007f48         dd         version_etc_arn.loc_5dd6-switch_table_7f48, version_etc_arn.loc_5e68-switch_table_7f48, version_etc_arn.loc_5ea8-switch_table_7f48, version_etc_arn.loc_5ef0-switch_table_7f48 ; switch table used at 0x5d54 containing 10 entries, DATA XREF=version_etc_arn+150
0000000000007f58         dd         version_etc_arn.loc_5f40-switch_table_7f48, version_etc_arn.loc_5f98-switch_table_7f48, version_etc_arn.loc_5fc8-switch_table_7f48, version_etc_arn.loc_6030-switch_table_7f48
0000000000007f68         dd         version_etc_arn.loc_5d60-switch_table_7f48, version_etc_arn.loc_5e10-switch_table_7f48
0000000000007f70         align      128
                     version_etc_copyright:
0000000000007f80         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
0000000000007faf         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
                     aRtmin:
0000000000007fc0         db         "RTMIN", 0                                  ; DATA XREF=str2sig+210
                     aRtmax:
0000000000007fc6         db         "RTMAX", 0                                  ; DATA XREF=str2sig+240
0000000000007fcc         db  0x25 ; '%'                                         ; DATA XREF=sig2str+145
0000000000007fcd         db  0x2b ; '+'
0000000000007fce         db  0x64 ; 'd'
0000000000007fcf         db  0x00 ; '.'
0000000000007fd0         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
0000000000007fd1         db  0x00 ; '.'
                     aPosix:
0000000000007fd2         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aAscii:
0000000000007fd8         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
0000000000007fde         db  0x00 ; '.'
0000000000007fdf         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0x7fe0; 0x8254[ (628 bytes)
        ; File offset : [32736; 33364[ (628 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000007fe0         db  0x01 ; '.'
0000000000007fe1         db  0x1b ; '.'
0000000000007fe2         db  0x03 ; '.'
0000000000007fe3         db  0x3b ; ';'
0000000000007fe4         db  0x74 ; 't'
0000000000007fe5         db  0x02 ; '.'
0000000000007fe6         db  0x00 ; '.'
0000000000007fe7         db  0x00 ; '.'
0000000000007fe8         db  0x4d ; 'M'
0000000000007fe9         db  0x00 ; '.'
0000000000007fea         db  0x00 ; '.'
0000000000007feb         db  0x00 ; '.'
0000000000007fec         db  0x90 ; '.'
0000000000007fed         db  0x98 ; '.'
0000000000007fee         db  0xff ; '.'
0000000000007fef         db  0xff ; '.'
0000000000007ff0         db  0xc0 ; '.'
0000000000007ff1         db  0x02 ; '.'
0000000000007ff2         db  0x00 ; '.'
0000000000007ff3         db  0x00 ; '.'
0000000000007ff4         db  0x80 ; '.'
0000000000007ff5         db  0x9c ; '.'
0000000000007ff6         db  0xff ; '.'
0000000000007ff7         db  0xff ; '.'
0000000000007ff8         db  0xe8 ; '.'
0000000000007ff9         db  0x02 ; '.'
0000000000007ffa         db  0x00 ; '.'
0000000000007ffb         db  0x00 ; '.'
0000000000007ffc         db  0x90 ; '.'
0000000000007ffd         db  0x9c ; '.'
0000000000007ffe         db  0xff ; '.'
0000000000007fff         db  0xff ; '.'
0000000000008000         db  0x88 ; '.'
0000000000008001         db  0x04 ; '.'
0000000000008002         db  0x00 ; '.'
0000000000008003         db  0x00 ; '.'
0000000000008004         db  0x00 ; '.'
0000000000008005         db  0xb1 ; '.'
0000000000008006         db  0xff ; '.'
0000000000008007         db  0xff ; '.'
0000000000008008         db  0x90 ; '.'
0000000000008009         db  0x02 ; '.'
000000000000800a         db  0x00 ; '.'
000000000000800b         db  0x00 ; '.'
000000000000800c         db  0x10 ; '.'
000000000000800d         db  0xb2 ; '.'
000000000000800e         db  0xff ; '.'
000000000000800f         db  0xff ; '.'
0000000000008010         db  0x00 ; '.'
0000000000008011         db  0x03 ; '.'
0000000000008012         db  0x00 ; '.'
0000000000008013         db  0x00 ; '.'
0000000000008014         db  0x40 ; '@'
0000000000008015         db  0xb3 ; '.'
0000000000008016         db  0xff ; '.'
0000000000008017         db  0xff ; '.'
0000000000008018         db  0x38 ; '8'
0000000000008019         db  0x03 ; '.'
000000000000801a         db  0x00 ; '.'
000000000000801b         db  0x00 ; '.'
000000000000801c         db  0xb0 ; '.'
000000000000801d         db  0xb4 ; '.'
000000000000801e         db  0xff ; '.'
000000000000801f         db  0xff ; '.'
0000000000008020         db  0x98 ; '.'
0000000000008021         db  0x03 ; '.'
0000000000008022         db  0x00 ; '.'
0000000000008023         db  0x00 ; '.'
0000000000008024         db  0x90 ; '.'
0000000000008025         db  0xb9 ; '.'
0000000000008026         db  0xff ; '.'
0000000000008027         db  0xff ; '.'
0000000000008028         db  0xc4 ; '.'
0000000000008029         db  0x03 ; '.'
000000000000802a         db  0x00 ; '.'
000000000000802b         db  0x00 ; '.'
000000000000802c         db  0x00 ; '.'
000000000000802d         db  0xbb ; '.'
000000000000802e         db  0xff ; '.'
000000000000802f         db  0xff ; '.'
0000000000008030         db  0x20 ; ' '
0000000000008031         db  0x04 ; '.'
0000000000008032         db  0x00 ; '.'
0000000000008033         db  0x00 ; '.'
0000000000008034         db  0xe0 ; '.'
0000000000008035         db  0xbc ; '.'
0000000000008036         db  0xff ; '.'
0000000000008037         db  0xff ; '.'
0000000000008038         db  0xf8 ; '.'
0000000000008039         db  0x04 ; '.'
000000000000803a         db  0x00 ; '.'
000000000000803b         db  0x00 ; '.'
000000000000803c         db  0xd0 ; '.'
000000000000803d         db  0xbe ; '.'
000000000000803e         db  0xff ; '.'
000000000000803f         db  0xff ; '.'
0000000000008040         db  0x48 ; 'H'
0000000000008041         db  0x05 ; '.'
0000000000008042         db  0x00 ; '.'
0000000000008043         db  0x00 ; '.'
0000000000008044         db  0xe0 ; '.'
0000000000008045         db  0xbe ; '.'
0000000000008046         db  0xff ; '.'
0000000000008047         db  0xff ; '.'
0000000000008048         db  0x5c ; '\'
0000000000008049         db  0x05 ; '.'
000000000000804a         db  0x00 ; '.'
000000000000804b         db  0x00 ; '.'
000000000000804c         db  0xf0 ; '.'
000000000000804d         db  0xbe ; '.'
000000000000804e         db  0xff ; '.'
000000000000804f         db  0xff ; '.'
0000000000008050         db  0x70 ; 'p'
0000000000008051         db  0x05 ; '.'
0000000000008052         db  0x00 ; '.'
0000000000008053         db  0x00 ; '.'
0000000000008054         db  0xa0 ; '.'
0000000000008055         db  0xbf ; '.'
0000000000008056         db  0xff ; '.'
0000000000008057         db  0xff ; '.'
0000000000008058         db  0xa0 ; '.'
0000000000008059         db  0x05 ; '.'
000000000000805a         db  0x00 ; '.'
000000000000805b         db  0x00 ; '.'
000000000000805c         db  0x40 ; '@'
000000000000805d         db  0xc0 ; '.'
000000000000805e         db  0xff ; '.'
000000000000805f         db  0xff ; '.'
0000000000008060         db  0xc0 ; '.'
0000000000008061         db  0x05 ; '.'
0000000000008062         db  0x00 ; '.'
0000000000008063         db  0x00 ; '.'
0000000000008064         db  0x30 ; '0'
0000000000008065         db  0xc1 ; '.'
0000000000008066         db  0xff ; '.'
0000000000008067         db  0xff ; '.'
0000000000008068         db  0x04 ; '.'
0000000000008069         db  0x06 ; '.'
000000000000806a         db  0x00 ; '.'
000000000000806b         db  0x00 ; '.'
000000000000806c         db  0x70 ; 'p'
000000000000806d         db  0xd3 ; '.'
000000000000806e         db  0xff ; '.'
000000000000806f         db  0xff ; '.'
0000000000008070         db  0x7c ; '|'
0000000000008071         db  0x06 ; '.'
0000000000008072         db  0x00 ; '.'
0000000000008073         db  0x00 ; '.'
0000000000008074         db  0x20 ; ' '
0000000000008075         db  0xd5 ; '.'
0000000000008076         db  0xff ; '.'
0000000000008077         db  0xff ; '.'
0000000000008078         db  0xe8 ; '.'
0000000000008079         db  0x06 ; '.'
000000000000807a         db  0x00 ; '.'
000000000000807b         db  0x00 ; '.'
000000000000807c         db  0x60 ; '`'
000000000000807d         db  0xd5 ; '.'
000000000000807e         db  0xff ; '.'
000000000000807f         db  0xff ; '.'
0000000000008080         db  0x14 ; '.'
0000000000008081         db  0x07 ; '.'
0000000000008082         db  0x00 ; '.'
0000000000008083         db  0x00 ; '.'
0000000000008084         db  0x80 ; '.'
0000000000008085         db  0xd5 ; '.'
0000000000008086         db  0xff ; '.'
0000000000008087         db  0xff ; '.'
0000000000008088         db  0x28 ; '('
0000000000008089         db  0x07 ; '.'
000000000000808a         db  0x00 ; '.'
000000000000808b         db  0x00 ; '.'
000000000000808c         db  0xa0 ; '.'
000000000000808d         db  0xd5 ; '.'
000000000000808e         db  0xff ; '.'
000000000000808f         db  0xff ; '.'
0000000000008090         db  0x3c ; '<'
0000000000008091         db  0x07 ; '.'
0000000000008092         db  0x00 ; '.'
0000000000008093         db  0x00 ; '.'
0000000000008094         db  0xe0 ; '.'
0000000000008095         db  0xd5 ; '.'
0000000000008096         db  0xff ; '.'
0000000000008097         db  0xff ; '.'
0000000000008098         db  0x50 ; 'P'
0000000000008099         db  0x07 ; '.'
000000000000809a         db  0x00 ; '.'
000000000000809b         db  0x00 ; '.'
000000000000809c         db  0x00 ; '.'
000000000000809d         db  0xd6 ; '.'
000000000000809e         db  0xff ; '.'
000000000000809f         db  0xff ; '.'
00000000000080a0         db  0x64 ; 'd'
00000000000080a1         db  0x07 ; '.'
00000000000080a2         db  0x00 ; '.'
00000000000080a3         db  0x00 ; '.'
00000000000080a4         db  0x30 ; '0'
00000000000080a5         db  0xd6 ; '.'
00000000000080a6         db  0xff ; '.'
00000000000080a7         db  0xff ; '.'
00000000000080a8         db  0x78 ; 'x'
00000000000080a9         db  0x07 ; '.'
00000000000080aa         db  0x00 ; '.'
00000000000080ab         db  0x00 ; '.'
00000000000080ac         db  0xb0 ; '.'
00000000000080ad         db  0xd6 ; '.'
00000000000080ae         db  0xff ; '.'
00000000000080af         db  0xff ; '.'
00000000000080b0         db  0xcc ; '.'
00000000000080b1         db  0x07 ; '.'
00000000000080b2         db  0x00 ; '.'
00000000000080b3         db  0x00 ; '.'
00000000000080b4         db  0xa0 ; '.'
00000000000080b5         db  0xd7 ; '.'
00000000000080b6         db  0xff ; '.'
00000000000080b7         db  0xff ; '.'
00000000000080b8         db  0x38 ; '8'
00000000000080b9         db  0x08 ; '.'
00000000000080ba         db  0x00 ; '.'
00000000000080bb         db  0x00 ; '.'
00000000000080bc         db  0xb0 ; '.'
00000000000080bd         db  0xd7 ; '.'
00000000000080be         db  0xff ; '.'
00000000000080bf         db  0xff ; '.'
00000000000080c0         db  0x4c ; 'L'
00000000000080c1         db  0x08 ; '.'
00000000000080c2         db  0x00 ; '.'
00000000000080c3         db  0x00 ; '.'
00000000000080c4         db  0x50 ; 'P'
00000000000080c5         db  0xd8 ; '.'
00000000000080c6         db  0xff ; '.'
00000000000080c7         db  0xff ; '.'
00000000000080c8         db  0x78 ; 'x'
00000000000080c9         db  0x08 ; '.'
00000000000080ca         db  0x00 ; '.'
00000000000080cb         db  0x00 ; '.'
00000000000080cc         db  0x70 ; 'p'
00000000000080cd         db  0xd8 ; '.'
00000000000080ce         db  0xff ; '.'
00000000000080cf         db  0xff ; '.'
00000000000080d0         db  0x8c ; '.'
00000000000080d1         db  0x08 ; '.'
00000000000080d2         db  0x00 ; '.'
00000000000080d3         db  0x00 ; '.'
00000000000080d4         db  0x80 ; '.'
00000000000080d5         db  0xd8 ; '.'
00000000000080d6         db  0xff ; '.'
00000000000080d7         db  0xff ; '.'
00000000000080d8         db  0xa0 ; '.'
00000000000080d9         db  0x08 ; '.'
00000000000080da         db  0x00 ; '.'
00000000000080db         db  0x00 ; '.'
00000000000080dc         db  0xa0 ; '.'
00000000000080dd         db  0xd8 ; '.'
00000000000080de         db  0xff ; '.'
00000000000080df         db  0xff ; '.'
00000000000080e0         db  0xb4 ; '.'
00000000000080e1         db  0x08 ; '.'
00000000000080e2         db  0x00 ; '.'
00000000000080e3         db  0x00 ; '.'
00000000000080e4         db  0xc0 ; '.'
00000000000080e5         db  0xd8 ; '.'
00000000000080e6         db  0xff ; '.'
00000000000080e7         db  0xff ; '.'
00000000000080e8         db  0xc8 ; '.'
00000000000080e9         db  0x08 ; '.'
00000000000080ea         db  0x00 ; '.'
00000000000080eb         db  0x00 ; '.'
00000000000080ec         db  0x50 ; 'P'
00000000000080ed         db  0xd9 ; '.'
00000000000080ee         db  0xff ; '.'
00000000000080ef         db  0xff ; '.'
00000000000080f0         db  0xe4 ; '.'
00000000000080f1         db  0x08 ; '.'
00000000000080f2         db  0x00 ; '.'
00000000000080f3         db  0x00 ; '.'
00000000000080f4         db  0xe0 ; '.'
00000000000080f5         db  0xd9 ; '.'
00000000000080f6         db  0xff ; '.'
00000000000080f7         db  0xff ; '.'
00000000000080f8         db  0x00 ; '.'
00000000000080f9         db  0x09 ; '.'
00000000000080fa         db  0x00 ; '.'
00000000000080fb         db  0x00 ; '.'
00000000000080fc         db  0xf0 ; '.'
00000000000080fd         db  0xd9 ; '.'
00000000000080fe         db  0xff ; '.'
00000000000080ff         db  0xff ; '.'
0000000000008100         db  0x14 ; '.'
0000000000008101         db  0x09 ; '.'
0000000000008102         db  0x00 ; '.'
0000000000008103         db  0x00 ; '.'
0000000000008104         db  0x00 ; '.'
0000000000008105         db  0xda ; '.'
0000000000008106         db  0xff ; '.'
0000000000008107         db  0xff ; '.'
0000000000008108         db  0x28 ; '('
0000000000008109         db  0x09 ; '.'
000000000000810a         db  0x00 ; '.'
000000000000810b         db  0x00 ; '.'
000000000000810c         db  0xa0 ; '.'
000000000000810d         db  0xda ; '.'
000000000000810e         db  0xff ; '.'
000000000000810f         db  0xff ; '.'
0000000000008110         db  0x44 ; 'D'
0000000000008111         db  0x09 ; '.'
0000000000008112         db  0x00 ; '.'
0000000000008113         db  0x00 ; '.'
0000000000008114         db  0xb0 ; '.'
0000000000008115         db  0xda ; '.'
0000000000008116         db  0xff ; '.'
0000000000008117         db  0xff ; '.'
0000000000008118         db  0x58 ; 'X'
0000000000008119         db  0x09 ; '.'
000000000000811a         db  0x00 ; '.'
000000000000811b         db  0x00 ; '.'
000000000000811c         db  0xd0 ; '.'
000000000000811d         db  0xda ; '.'
000000000000811e         db  0xff ; '.'
000000000000811f         db  0xff ; '.'
0000000000008120         db  0x6c ; 'l'
0000000000008121         db  0x09 ; '.'
0000000000008122         db  0x00 ; '.'
0000000000008123         db  0x00 ; '.'
0000000000008124         db  0xe0 ; '.'
0000000000008125         db  0xda ; '.'
0000000000008126         db  0xff ; '.'
0000000000008127         db  0xff ; '.'
0000000000008128         db  0x80 ; '.'
0000000000008129         db  0x09 ; '.'
000000000000812a         db  0x00 ; '.'
000000000000812b         db  0x00 ; '.'
000000000000812c         db  0x70 ; 'p'
000000000000812d         db  0xdb ; '.'
000000000000812e         db  0xff ; '.'
000000000000812f         db  0xff ; '.'
0000000000008130         db  0x9c ; '.'
0000000000008131         db  0x09 ; '.'
0000000000008132         db  0x00 ; '.'
0000000000008133         db  0x00 ; '.'
0000000000008134         db  0x10 ; '.'
0000000000008135         db  0xdc ; '.'
0000000000008136         db  0xff ; '.'
0000000000008137         db  0xff ; '.'
0000000000008138         db  0xb8 ; '.'
0000000000008139         db  0x09 ; '.'
000000000000813a         db  0x00 ; '.'
000000000000813b         db  0x00 ; '.'
000000000000813c         db  0x20 ; ' '
000000000000813d         db  0xdc ; '.'
000000000000813e         db  0xff ; '.'
000000000000813f         db  0xff ; '.'
0000000000008140         db  0xcc ; '.'
0000000000008141         db  0x09 ; '.'
0000000000008142         db  0x00 ; '.'
0000000000008143         db  0x00 ; '.'
0000000000008144         db  0x40 ; '@'
0000000000008145         db  0xdc ; '.'
0000000000008146         db  0xff ; '.'
0000000000008147         db  0xff ; '.'
0000000000008148         db  0xe0 ; '.'
0000000000008149         db  0x09 ; '.'
000000000000814a         db  0x00 ; '.'
000000000000814b         db  0x00 ; '.'
000000000000814c         db  0x60 ; '`'
000000000000814d         db  0xdc ; '.'
000000000000814e         db  0xff ; '.'
000000000000814f         db  0xff ; '.'
0000000000008150         db  0xf4 ; '.'
0000000000008151         db  0x09 ; '.'
0000000000008152         db  0x00 ; '.'
0000000000008153         db  0x00 ; '.'
0000000000008154         db  0x70 ; 'p'
0000000000008155         db  0xdc ; '.'
0000000000008156         db  0xff ; '.'
0000000000008157         db  0xff ; '.'
0000000000008158         db  0x08 ; '.'
0000000000008159         db  0x0a ; '.'
000000000000815a         db  0x00 ; '.'
000000000000815b         db  0x00 ; '.'
000000000000815c         db  0x90 ; '.'
000000000000815d         db  0xdc ; '.'
000000000000815e         db  0xff ; '.'
000000000000815f         db  0xff ; '.'
0000000000008160         db  0x1c ; '.'
0000000000008161         db  0x0a ; '.'
0000000000008162         db  0x00 ; '.'
0000000000008163         db  0x00 ; '.'
0000000000008164         db  0xb0 ; '.'
0000000000008165         db  0xdc ; '.'
0000000000008166         db  0xff ; '.'
0000000000008167         db  0xff ; '.'
0000000000008168         db  0x30 ; '0'
0000000000008169         db  0x0a ; '.'
000000000000816a         db  0x00 ; '.'
000000000000816b         db  0x00 ; '.'
000000000000816c         db  0xd0 ; '.'
000000000000816d         db  0xdc ; '.'
000000000000816e         db  0xff ; '.'
000000000000816f         db  0xff ; '.'
0000000000008170         db  0x48 ; 'H'
0000000000008171         db  0x0a ; '.'
0000000000008172         db  0x00 ; '.'
0000000000008173         db  0x00 ; '.'
0000000000008174         db  0xf0 ; '.'
0000000000008175         db  0xe0 ; '.'
0000000000008176         db  0xff ; '.'
0000000000008177         db  0xff ; '.'
0000000000008178         db  0x5c ; '\'
0000000000008179         db  0x0b ; '.'
000000000000817a         db  0x00 ; '.'
000000000000817b         db  0x00 ; '.'
000000000000817c         db  0x10 ; '.'
000000000000817d         db  0xe1 ; '.'
000000000000817e         db  0xff ; '.'
000000000000817f         db  0xff ; '.'
0000000000008180         db  0x70 ; 'p'
0000000000008181         db  0x0b ; '.'
0000000000008182         db  0x00 ; '.'
0000000000008183         db  0x00 ; '.'
0000000000008184         db  0x90 ; '.'
0000000000008185         db  0xe1 ; '.'
0000000000008186         db  0xff ; '.'
0000000000008187         db  0xff ; '.'
0000000000008188         db  0x8c ; '.'
0000000000008189         db  0x0b ; '.'
000000000000818a         db  0x00 ; '.'
000000000000818b         db  0x00 ; '.'
000000000000818c         db  0x70 ; 'p'
000000000000818d         db  0xe2 ; '.'
000000000000818e         db  0xff ; '.'
000000000000818f         db  0xff ; '.'
0000000000008190         db  0xb8 ; '.'
0000000000008191         db  0x0b ; '.'
0000000000008192         db  0x00 ; '.'
0000000000008193         db  0x00 ; '.'
0000000000008194         db  0xf0 ; '.'
0000000000008195         db  0xe2 ; '.'
0000000000008196         db  0xff ; '.'
0000000000008197         db  0xff ; '.'
0000000000008198         db  0xd8 ; '.'
0000000000008199         db  0x0b ; '.'
000000000000819a         db  0x00 ; '.'
000000000000819b         db  0x00 ; '.'
000000000000819c         db  0x10 ; '.'
000000000000819d         db  0xe3 ; '.'
000000000000819e         db  0xff ; '.'
000000000000819f         db  0xff ; '.'
00000000000081a0         db  0xf4 ; '.'
00000000000081a1         db  0x0b ; '.'
00000000000081a2         db  0x00 ; '.'
00000000000081a3         db  0x00 ; '.'
00000000000081a4         db  0x40 ; '@'
00000000000081a5         db  0xe3 ; '.'
00000000000081a6         db  0xff ; '.'
00000000000081a7         db  0xff ; '.'
00000000000081a8         db  0x08 ; '.'
00000000000081a9         db  0x0c ; '.'
00000000000081aa         db  0x00 ; '.'
00000000000081ab         db  0x00 ; '.'
00000000000081ac         db  0x50 ; 'P'
00000000000081ad         db  0xe3 ; '.'
00000000000081ae         db  0xff ; '.'
00000000000081af         db  0xff ; '.'
00000000000081b0         db  0x1c ; '.'
00000000000081b1         db  0x0c ; '.'
00000000000081b2         db  0x00 ; '.'
00000000000081b3         db  0x00 ; '.'
00000000000081b4         db  0x90 ; '.'
00000000000081b5         db  0xe3 ; '.'
00000000000081b6         db  0xff ; '.'
00000000000081b7         db  0xff ; '.'
00000000000081b8         db  0x40 ; '@'
00000000000081b9         db  0x0c ; '.'
00000000000081ba         db  0x00 ; '.'
00000000000081bb         db  0x00 ; '.'
00000000000081bc         db  0xc0 ; '.'
00000000000081bd         db  0xe3 ; '.'
00000000000081be         db  0xff ; '.'
00000000000081bf         db  0xff ; '.'
00000000000081c0         db  0x54 ; 'T'
00000000000081c1         db  0x0c ; '.'
00000000000081c2         db  0x00 ; '.'
00000000000081c3         db  0x00 ; '.'
00000000000081c4         db  0x50 ; 'P'
00000000000081c5         db  0xe4 ; '.'
00000000000081c6         db  0xff ; '.'
00000000000081c7         db  0xff ; '.'
00000000000081c8         db  0x6c ; 'l'
00000000000081c9         db  0x0c ; '.'
00000000000081ca         db  0x00 ; '.'
00000000000081cb         db  0x00 ; '.'
00000000000081cc         db  0xa0 ; '.'
00000000000081cd         db  0xe4 ; '.'
00000000000081ce         db  0xff ; '.'
00000000000081cf         db  0xff ; '.'
00000000000081d0         db  0x84 ; '.'
00000000000081d1         db  0x0c ; '.'
00000000000081d2         db  0x00 ; '.'
00000000000081d3         db  0x00 ; '.'
00000000000081d4         db  0xc0 ; '.'
00000000000081d5         db  0xe4 ; '.'
00000000000081d6         db  0xff ; '.'
00000000000081d7         db  0xff ; '.'
00000000000081d8         db  0xa0 ; '.'
00000000000081d9         db  0x0c ; '.'
00000000000081da         db  0x00 ; '.'
00000000000081db         db  0x00 ; '.'
00000000000081dc         db  0xf0 ; '.'
00000000000081dd         db  0xe4 ; '.'
00000000000081de         db  0xff ; '.'
00000000000081df         db  0xff ; '.'
00000000000081e0         db  0xbc ; '.'
00000000000081e1         db  0x0c ; '.'
00000000000081e2         db  0x00 ; '.'
00000000000081e3         db  0x00 ; '.'
00000000000081e4         db  0x20 ; ' '
00000000000081e5         db  0xe5 ; '.'
00000000000081e6         db  0xff ; '.'
00000000000081e7         db  0xff ; '.'
00000000000081e8         db  0xe4 ; '.'
00000000000081e9         db  0x0c ; '.'
00000000000081ea         db  0x00 ; '.'
00000000000081eb         db  0x00 ; '.'
00000000000081ec         db  0x40 ; '@'
00000000000081ed         db  0xe5 ; '.'
00000000000081ee         db  0xff ; '.'
00000000000081ef         db  0xff ; '.'
00000000000081f0         db  0x00 ; '.'
00000000000081f1         db  0x0d ; '.'
00000000000081f2         db  0x00 ; '.'
00000000000081f3         db  0x00 ; '.'
00000000000081f4         db  0x80 ; '.'
00000000000081f5         db  0xe5 ; '.'
00000000000081f6         db  0xff ; '.'
00000000000081f7         db  0xff ; '.'
00000000000081f8         db  0x18 ; '.'
00000000000081f9         db  0x0d ; '.'
00000000000081fa         db  0x00 ; '.'
00000000000081fb         db  0x00 ; '.'
00000000000081fc         db  0x10 ; '.'
00000000000081fd         db  0xe6 ; '.'
00000000000081fe         db  0xff ; '.'
00000000000081ff         db  0xff ; '.'
0000000000008200         db  0x58 ; 'X'
0000000000008201         db  0x0d ; '.'
0000000000008202         db  0x00 ; '.'
0000000000008203         db  0x00 ; '.'
0000000000008204         db  0xa0 ; '.'
0000000000008205         db  0xe7 ; '.'
0000000000008206         db  0xff ; '.'
0000000000008207         db  0xff ; '.'
0000000000008208         db  0x94 ; '.'
0000000000008209         db  0x0d ; '.'
000000000000820a         db  0x00 ; '.'
000000000000820b         db  0x00 ; '.'
000000000000820c         db  0x80 ; '.'
000000000000820d         db  0xe8 ; '.'
000000000000820e         db  0xff ; '.'
000000000000820f         db  0xff ; '.'
0000000000008210         db  0xd0 ; '.'
0000000000008211         db  0x0d ; '.'
0000000000008212         db  0x00 ; '.'
0000000000008213         db  0x00 ; '.'
0000000000008214         db  0x00 ; '.'
0000000000008215         db  0xe9 ; '.'
0000000000008216         db  0xff ; '.'
0000000000008217         db  0xff ; '.'
0000000000008218         db  0x20 ; ' '
0000000000008219         db  0x0e ; '.'
000000000000821a         db  0x00 ; '.'
000000000000821b         db  0x00 ; '.'
000000000000821c         db  0x60 ; '`'
000000000000821d         db  0xe9 ; '.'
000000000000821e         db  0xff ; '.'
000000000000821f         db  0xff ; '.'
0000000000008220         db  0x40 ; '@'
0000000000008221         db  0x0e ; '.'
0000000000008222         db  0x00 ; '.'
0000000000008223         db  0x00 ; '.'
0000000000008224         db  0xa0 ; '.'
0000000000008225         db  0xe9 ; '.'
0000000000008226         db  0xff ; '.'
0000000000008227         db  0xff ; '.'
0000000000008228         db  0x60 ; '`'
0000000000008229         db  0x0e ; '.'
000000000000822a         db  0x00 ; '.'
000000000000822b         db  0x00 ; '.'
000000000000822c         db  0x20 ; ' '
000000000000822d         db  0xea ; '.'
000000000000822e         db  0xff ; '.'
000000000000822f         db  0xff ; '.'
0000000000008230         db  0x98 ; '.'
0000000000008231         db  0x0e ; '.'
0000000000008232         db  0x00 ; '.'
0000000000008233         db  0x00 ; '.'
0000000000008234         db  0x60 ; '`'
0000000000008235         db  0xea ; '.'
0000000000008236         db  0xff ; '.'
0000000000008237         db  0xff ; '.'
0000000000008238         db  0xb8 ; '.'
0000000000008239         db  0x0e ; '.'
000000000000823a         db  0x00 ; '.'
000000000000823b         db  0x00 ; '.'
000000000000823c         db  0xc0 ; '.'
000000000000823d         db  0xea ; '.'
000000000000823e         db  0xff ; '.'
000000000000823f         db  0xff ; '.'
0000000000008240         db  0xe8 ; '.'
0000000000008241         db  0x0e ; '.'
0000000000008242         db  0x00 ; '.'
0000000000008243         db  0x00 ; '.'
0000000000008244         db  0x30 ; '0'
0000000000008245         db  0xeb ; '.'
0000000000008246         db  0xff ; '.'
0000000000008247         db  0xff ; '.'
0000000000008248         db  0x30 ; '0'
0000000000008249         db  0x0f ; '.'
000000000000824a         db  0x00 ; '.'
000000000000824b         db  0x00 ; '.'
000000000000824c         db  0x40 ; '@'
000000000000824d         db  0xeb ; '.'
000000000000824e         db  0xff ; '.'
000000000000824f         db  0xff ; '.'
0000000000008250         db  0x48 ; 'H'
0000000000008251         db  0x0f ; '.'
0000000000008252         db  0x00 ; '.'
0000000000008253         db  0x00 ; '.'
0000000000008254         db  0x00 ; '.'
0000000000008255         db  0x00 ; '.'
0000000000008256         db  0x00 ; '.'
0000000000008257         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x8258; 0x8f40[ (3304 bytes)
        ; File offset : [33368; 36672[ (3304 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000008258         dd         0x00000014                                  ; Length of the record
000000000000825c         dd         0x00000000                                  ; CIE ID
0000000000008260         db         0x01                                        ; Version
0000000000008261         db         "zR", 0                                     ; Augmentation String
0000000000008264         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000008265         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000008266         db         0x10                                        ; Return address register
0000000000008267         db         0x01                                        ; Augmentation data length
0000000000008268         db         0x1b                                        ; FDE encoding
0000000000008269         db  0x0c ; '.'
000000000000826a         db  0x07 ; '.'
000000000000826b         db  0x08 ; '.'
000000000000826c         db  0x90 ; '.'
000000000000826d         db  0x01 ; '.'
000000000000826e         db  0x07 ; '.'
000000000000826f         db  0x10 ; '.'
0000000000008270         dd         0x00000014                                  ; Length of the record
0000000000008274         dd         0x0000001c                                  ; FDE: parent CIE at 0x8258 (FDE encoding = 0x1B)
0000000000008278         db         0x68, 0xae, 2 dup (0xff)                    ; begin 0x30e0
000000000000827c         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x310b)
0000000000008280         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008281         align      8
0000000000008288         dd         0x00000014                                  ; Length of the record
000000000000828c         dd         0x00000000                                  ; CIE ID
0000000000008290         db         0x01                                        ; Version
0000000000008291         db         "zR", 0                                     ; Augmentation String
0000000000008294         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000008295         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000008296         db         0x10                                        ; Return address register
0000000000008297         db         0x01                                        ; Augmentation data length
0000000000008298         db         0x1b                                        ; FDE encoding
0000000000008299         db  0x0c ; '.'
000000000000829a         db  0x07 ; '.'
000000000000829b         db  0x08 ; '.'
000000000000829c         db  0x90 ; '.'
000000000000829d         db  0x01 ; '.'
000000000000829e         db  0x00 ; '.'
000000000000829f         db  0x00 ; '.'
00000000000082a0         dd         0x00000024                                  ; Length of the record
00000000000082a4         dd         0x0000001c                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
00000000000082a8         db         0xc8, 0x95, 2 dup (0xff)                    ; begin 0x1870
00000000000082ac         db         0xf0, 0x03, 2 dup (0x00)                    ; length 0x3f0 (end at 0x1c60)
00000000000082b0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000082b1         db  0x0e ; '.'
00000000000082b2         db  0x10 ; '.'
00000000000082b3         db  0x46 ; 'F'
00000000000082b4         db  0x0e ; '.'
00000000000082b5         db  0x18 ; '.'
00000000000082b6         db  0x4a ; 'J'
00000000000082b7         db  0x0f ; '.'
00000000000082b8         db  0x0b ; '.'
00000000000082b9         db  0x77 ; 'w'
00000000000082ba         db  0x08 ; '.'
00000000000082bb         db  0x80 ; '.'
00000000000082bc         db  0x00 ; '.'
00000000000082bd         db  0x3f ; '?'
00000000000082be         db  0x1a ; '.'
00000000000082bf         db  0x3b ; ';'
00000000000082c0         db  0x2a ; '*'
00000000000082c1         db  0x33 ; '3'
00000000000082c2         db  0x24 ; '$'
00000000000082c3         db  0x22 ; '"'
00000000000082c4         db  0x00 ; '.'
00000000000082c5         db  0x00 ; '.'
00000000000082c6         db  0x00 ; '.'
00000000000082c7         db  0x00 ; '.'
00000000000082c8         dd         0x00000014                                  ; Length of the record
00000000000082cc         dd         0x00000044                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
00000000000082d0         db         0x90, 0x99, 2 dup (0xff)                    ; begin 0x1c60
00000000000082d4         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x1c68)
00000000000082d8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000082d9         align      32
00000000000082e0         dd         0x00000034                                  ; Length of the record
00000000000082e4         dd         0x0000005c                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
00000000000082e8         db         0x08, 0xaf, 2 dup (0xff)                    ; begin 0x31f0
00000000000082ec         db         0x28, 0x01, 2 dup (0x00)                    ; length 0x128 (end at 0x3318)
00000000000082f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000082f1         db  0x41 ; 'A'
00000000000082f2         db  0x0e ; '.'
00000000000082f3         db  0x10 ; '.'
00000000000082f4         db  0x86 ; '.'
00000000000082f5         db  0x02 ; '.'
00000000000082f6         db  0x41 ; 'A'
00000000000082f7         db  0x0e ; '.'
00000000000082f8         db  0x18 ; '.'
00000000000082f9         db  0x83 ; '.'
00000000000082fa         db  0x03 ; '.'
00000000000082fb         db  0x44 ; 'D'
00000000000082fc         db  0x0e ; '.'
00000000000082fd         db  0x30 ; '0'
00000000000082fe         db  0x02 ; '.'
00000000000082ff         db  0x9f ; '.'
0000000000008300         db  0x0a ; '.'
0000000000008301         db  0x0e ; '.'
0000000000008302         db  0x18 ; '.'
0000000000008303         db  0x44 ; 'D'
0000000000008304         db  0x0e ; '.'
0000000000008305         db  0x10 ; '.'
0000000000008306         db  0x41 ; 'A'
0000000000008307         db  0x0e ; '.'
0000000000008308         db  0x08 ; '.'
0000000000008309         db  0x46 ; 'F'
000000000000830a         db  0x0b ; '.'
000000000000830b         db  0x61 ; 'a'
000000000000830c         db  0x0a ; '.'
000000000000830d         db  0x0e ; '.'
000000000000830e         db  0x18 ; '.'
000000000000830f         db  0x46 ; 'F'
0000000000008310         db  0x0e ; '.'
0000000000008311         db  0x10 ; '.'
0000000000008312         db  0x41 ; 'A'
0000000000008313         db  0x0e ; '.'
0000000000008314         db  0x08 ; '.'
0000000000008315         db  0x48 ; 'H'
0000000000008316         db  0x0b ; '.'
0000000000008317         db  0x00 ; '.'
0000000000008318         dd         0x0000005c                                  ; Length of the record
000000000000831c         dd         0x00000094                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008320         db         0x00, 0xb0, 2 dup (0xff)                    ; begin 0x3320
0000000000008324         db         0x66, 0x01, 2 dup (0x00)                    ; length 0x166 (end at 0x3486)
0000000000008328         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008329         db  0x42 ; 'B'
000000000000832a         db  0x0e ; '.'
000000000000832b         db  0x10 ; '.'
000000000000832c         db  0x8f ; '.'
000000000000832d         db  0x02 ; '.'
000000000000832e         db  0x42 ; 'B'
000000000000832f         db  0x0e ; '.'
0000000000008330         db  0x18 ; '.'
0000000000008331         db  0x8e ; '.'
0000000000008332         db  0x03 ; '.'
0000000000008333         db  0x42 ; 'B'
0000000000008334         db  0x0e ; '.'
0000000000008335         db  0x20 ; ' '
0000000000008336         db  0x8d ; '.'
0000000000008337         db  0x04 ; '.'
0000000000008338         db  0x42 ; 'B'
0000000000008339         db  0x0e ; '.'
000000000000833a         db  0x28 ; '('
000000000000833b         db  0x8c ; '.'
000000000000833c         db  0x05 ; '.'
000000000000833d         db  0x41 ; 'A'
000000000000833e         db  0x0e ; '.'
000000000000833f         db  0x30 ; '0'
0000000000008340         db  0x86 ; '.'
0000000000008341         db  0x06 ; '.'
0000000000008342         db  0x41 ; 'A'
0000000000008343         db  0x0e ; '.'
0000000000008344         db  0x38 ; '8'
0000000000008345         db  0x83 ; '.'
0000000000008346         db  0x07 ; '.'
0000000000008347         db  0x47 ; 'G'
0000000000008348         db  0x0e ; '.'
0000000000008349         db  0x90 ; '.'
000000000000834a         db  0x03 ; '.'
000000000000834b         db  0x02 ; '.'
000000000000834c         db  0x84 ; '.'
000000000000834d         db  0x0e ; '.'
000000000000834e         db  0x98 ; '.'
000000000000834f         db  0x03 ; '.'
0000000000008350         db  0x49 ; 'I'
0000000000008351         db  0x0e ; '.'
0000000000008352         db  0xa0 ; '.'
0000000000008353         db  0x03 ; '.'
0000000000008354         db  0x56 ; 'V'
0000000000008355         db  0x0e ; '.'
0000000000008356         db  0x98 ; '.'
0000000000008357         db  0x03 ; '.'
0000000000008358         db  0x41 ; 'A'
0000000000008359         db  0x0e ; '.'
000000000000835a         db  0x90 ; '.'
000000000000835b         db  0x03 ; '.'
000000000000835c         db  0x02 ; '.'
000000000000835d         db  0x75 ; 'u'
000000000000835e         db  0x0a ; '.'
000000000000835f         db  0x0e ; '.'
0000000000008360         db  0x38 ; '8'
0000000000008361         db  0x41 ; 'A'
0000000000008362         db  0x0e ; '.'
0000000000008363         db  0x30 ; '0'
0000000000008364         db  0x41 ; 'A'
0000000000008365         db  0x0e ; '.'
0000000000008366         db  0x28 ; '('
0000000000008367         db  0x42 ; 'B'
0000000000008368         db  0x0e ; '.'
0000000000008369         db  0x20 ; ' '
000000000000836a         db  0x42 ; 'B'
000000000000836b         db  0x0e ; '.'
000000000000836c         db  0x18 ; '.'
000000000000836d         db  0x42 ; 'B'
000000000000836e         db  0x0e ; '.'
000000000000836f         db  0x10 ; '.'
0000000000008370         db  0x42 ; 'B'
0000000000008371         db  0x0e ; '.'
0000000000008372         db  0x08 ; '.'
0000000000008373         db  0x41 ; 'A'
0000000000008374         db  0x0b ; '.'
0000000000008375         db  0x00 ; '.'
0000000000008376         db  0x00 ; '.'
0000000000008377         db  0x00 ; '.'
0000000000008378         dd         0x00000028                                  ; Length of the record
000000000000837c         dd         0x000000f4                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008380         db         0x10, 0xb1, 2 dup (0xff)                    ; begin 0x3490
0000000000008384         db         0xda, 0x04, 2 dup (0x00)                    ; length 0x4da (end at 0x396a)
0000000000008388         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008389         db  0x42 ; 'B'
000000000000838a         db  0x0e ; '.'
000000000000838b         db  0x10 ; '.'
000000000000838c         db  0x8d ; '.'
000000000000838d         db  0x02 ; '.'
000000000000838e         db  0x42 ; 'B'
000000000000838f         db  0x0e ; '.'
0000000000008390         db  0x18 ; '.'
0000000000008391         db  0x8c ; '.'
0000000000008392         db  0x03 ; '.'
0000000000008393         db  0x46 ; 'F'
0000000000008394         db  0x0e ; '.'
0000000000008395         db  0x20 ; ' '
0000000000008396         db  0x86 ; '.'
0000000000008397         db  0x04 ; '.'
0000000000008398         db  0x41 ; 'A'
0000000000008399         db  0x0e ; '.'
000000000000839a         db  0x28 ; '('
000000000000839b         db  0x83 ; '.'
000000000000839c         db  0x05 ; '.'
000000000000839d         db  0x49 ; 'I'
000000000000839e         db  0x0e ; '.'
000000000000839f         db  0xb0 ; '.'
00000000000083a0         db  0x01 ; '.'
00000000000083a1         db  0x00 ; '.'
00000000000083a2         db  0x00 ; '.'
00000000000083a3         db  0x00 ; '.'
00000000000083a4         dd         0x00000058                                  ; Length of the record
00000000000083a8         dd         0x00000120                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
00000000000083ac         db         0xc4, 0xb5, 2 dup (0xff)                    ; begin 0x3970
00000000000083b0         db         0x67, 0x01, 2 dup (0x00)                    ; length 0x167 (end at 0x3ad7)
00000000000083b4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000083b5         db  0x42 ; 'B'
00000000000083b6         db  0x0e ; '.'
00000000000083b7         db  0x10 ; '.'
00000000000083b8         db  0x8e ; '.'
00000000000083b9         db  0x02 ; '.'
00000000000083ba         db  0x42 ; 'B'
00000000000083bb         db  0x0e ; '.'
00000000000083bc         db  0x18 ; '.'
00000000000083bd         db  0x8d ; '.'
00000000000083be         db  0x03 ; '.'
00000000000083bf         db  0x42 ; 'B'
00000000000083c0         db  0x0e ; '.'
00000000000083c1         db  0x20 ; ' '
00000000000083c2         db  0x8c ; '.'
00000000000083c3         db  0x04 ; '.'
00000000000083c4         db  0x41 ; 'A'
00000000000083c5         db  0x0e ; '.'
00000000000083c6         db  0x28 ; '('
00000000000083c7         db  0x86 ; '.'
00000000000083c8         db  0x05 ; '.'
00000000000083c9         db  0x41 ; 'A'
00000000000083ca         db  0x0e ; '.'
00000000000083cb         db  0x30 ; '0'
00000000000083cc         db  0x83 ; '.'
00000000000083cd         db  0x06 ; '.'
00000000000083ce         db  0x46 ; 'F'
00000000000083cf         db  0x0e ; '.'
00000000000083d0         db  0x50 ; 'P'
00000000000083d1         db  0x02 ; '.'
00000000000083d2         db  0xde ; '.'
00000000000083d3         db  0x0a ; '.'
00000000000083d4         db  0x0e ; '.'
00000000000083d5         db  0x30 ; '0'
00000000000083d6         db  0x44 ; 'D'
00000000000083d7         db  0x0e ; '.'
00000000000083d8         db  0x28 ; '('
00000000000083d9         db  0x41 ; 'A'
00000000000083da         db  0x0e ; '.'
00000000000083db         db  0x20 ; ' '
00000000000083dc         db  0x42 ; 'B'
00000000000083dd         db  0x0e ; '.'
00000000000083de         db  0x18 ; '.'
00000000000083df         db  0x42 ; 'B'
00000000000083e0         db  0x0e ; '.'
00000000000083e1         db  0x10 ; '.'
00000000000083e2         db  0x42 ; 'B'
00000000000083e3         db  0x0e ; '.'
00000000000083e4         db  0x08 ; '.'
00000000000083e5         db  0x49 ; 'I'
00000000000083e6         db  0x0b ; '.'
00000000000083e7         db  0x02 ; '.'
00000000000083e8         db  0x59 ; 'Y'
00000000000083e9         db  0x0a ; '.'
00000000000083ea         db  0x0e ; '.'
00000000000083eb         db  0x30 ; '0'
00000000000083ec         db  0x41 ; 'A'
00000000000083ed         db  0x0e ; '.'
00000000000083ee         db  0x28 ; '('
00000000000083ef         db  0x41 ; 'A'
00000000000083f0         db  0x0e ; '.'
00000000000083f1         db  0x20 ; ' '
00000000000083f2         db  0x42 ; 'B'
00000000000083f3         db  0x0e ; '.'
00000000000083f4         db  0x18 ; '.'
00000000000083f5         db  0x42 ; 'B'
00000000000083f6         db  0x0e ; '.'
00000000000083f7         db  0x10 ; '.'
00000000000083f8         db  0x42 ; 'B'
00000000000083f9         db  0x0e ; '.'
00000000000083fa         db  0x08 ; '.'
00000000000083fb         db  0x41 ; 'A'
00000000000083fc         db  0x0b ; '.'
00000000000083fd         db  0x00 ; '.'
00000000000083fe         db  0x00 ; '.'
00000000000083ff         db  0x00 ; '.'
0000000000008400         dd         0x00000064                                  ; Length of the record
0000000000008404         dd         0x0000017c                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008408         db         0xd8, 0xb6, 2 dup (0xff)                    ; begin 0x3ae0
000000000000840c         db         0xda, 0x01, 2 dup (0x00)                    ; length 0x1da (end at 0x3cba)
0000000000008410         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008411         db  0x42 ; 'B'
0000000000008412         db  0x0e ; '.'
0000000000008413         db  0x10 ; '.'
0000000000008414         db  0x8f ; '.'
0000000000008415         db  0x02 ; '.'
0000000000008416         db  0x42 ; 'B'
0000000000008417         db  0x0e ; '.'
0000000000008418         db  0x18 ; '.'
0000000000008419         db  0x8e ; '.'
000000000000841a         db  0x03 ; '.'
000000000000841b         db  0x42 ; 'B'
000000000000841c         db  0x0e ; '.'
000000000000841d         db  0x20 ; ' '
000000000000841e         db  0x8d ; '.'
000000000000841f         db  0x04 ; '.'
0000000000008420         db  0x42 ; 'B'
0000000000008421         db  0x0e ; '.'
0000000000008422         db  0x28 ; '('
0000000000008423         db  0x8c ; '.'
0000000000008424         db  0x05 ; '.'
0000000000008425         db  0x41 ; 'A'
0000000000008426         db  0x0e ; '.'
0000000000008427         db  0x30 ; '0'
0000000000008428         db  0x86 ; '.'
0000000000008429         db  0x06 ; '.'
000000000000842a         db  0x41 ; 'A'
000000000000842b         db  0x0e ; '.'
000000000000842c         db  0x38 ; '8'
000000000000842d         db  0x83 ; '.'
000000000000842e         db  0x07 ; '.'
000000000000842f         db  0x46 ; 'F'
0000000000008430         db  0x0e ; '.'
0000000000008431         db  0x70 ; 'p'
0000000000008432         db  0x03 ; '.'
0000000000008433         db  0x35 ; '5'
0000000000008434         db  0x01 ; '.'
0000000000008435         db  0x0a ; '.'
0000000000008436         db  0x0e ; '.'
0000000000008437         db  0x38 ; '8'
0000000000008438         db  0x41 ; 'A'
0000000000008439         db  0x0e ; '.'
000000000000843a         db  0x30 ; '0'
000000000000843b         db  0x41 ; 'A'
000000000000843c         db  0x0e ; '.'
000000000000843d         db  0x28 ; '('
000000000000843e         db  0x42 ; 'B'
000000000000843f         db  0x0e ; '.'
0000000000008440         db  0x20 ; ' '
0000000000008441         db  0x42 ; 'B'
0000000000008442         db  0x0e ; '.'
0000000000008443         db  0x18 ; '.'
0000000000008444         db  0x42 ; 'B'
0000000000008445         db  0x0e ; '.'
0000000000008446         db  0x10 ; '.'
0000000000008447         db  0x42 ; 'B'
0000000000008448         db  0x0e ; '.'
0000000000008449         db  0x08 ; '.'
000000000000844a         db  0x49 ; 'I'
000000000000844b         db  0x0b ; '.'
000000000000844c         db  0x02 ; '.'
000000000000844d         db  0x58 ; 'X'
000000000000844e         db  0x0a ; '.'
000000000000844f         db  0x0e ; '.'
0000000000008450         db  0x38 ; '8'
0000000000008451         db  0x41 ; 'A'
0000000000008452         db  0x0e ; '.'
0000000000008453         db  0x30 ; '0'
0000000000008454         db  0x41 ; 'A'
0000000000008455         db  0x0e ; '.'
0000000000008456         db  0x28 ; '('
0000000000008457         db  0x42 ; 'B'
0000000000008458         db  0x0e ; '.'
0000000000008459         db  0x20 ; ' '
000000000000845a         db  0x42 ; 'B'
000000000000845b         db  0x0e ; '.'
000000000000845c         db  0x18 ; '.'
000000000000845d         db  0x42 ; 'B'
000000000000845e         db  0x0e ; '.'
000000000000845f         db  0x10 ; '.'
0000000000008460         db  0x42 ; 'B'
0000000000008461         db  0x0e ; '.'
0000000000008462         db  0x08 ; '.'
0000000000008463         db  0x46 ; 'F'
0000000000008464         db  0x0b ; '.'
0000000000008465         db  0x00 ; '.'
0000000000008466         db  0x00 ; '.'
0000000000008467         db  0x00 ; '.'
0000000000008468         dd         0x0000006c                                  ; Length of the record
000000000000846c         dd         0x000001e4                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008470         db         0x00, 0x98, 2 dup (0xff)                    ; begin 0x1c70
0000000000008474         db         0x61, 0x14, 2 dup (0x00)                    ; length 0x1461 (end at 0x30d1)
0000000000008478         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008479         db  0x42 ; 'B'
000000000000847a         db  0x0e ; '.'
000000000000847b         db  0x10 ; '.'
000000000000847c         db  0x8f ; '.'
000000000000847d         db  0x02 ; '.'
000000000000847e         db  0x42 ; 'B'
000000000000847f         db  0x0e ; '.'
0000000000008480         db  0x18 ; '.'
0000000000008481         db  0x8e ; '.'
0000000000008482         db  0x03 ; '.'
0000000000008483         db  0x45 ; 'E'
0000000000008484         db  0x0e ; '.'
0000000000008485         db  0x20 ; ' '
0000000000008486         db  0x8d ; '.'
0000000000008487         db  0x04 ; '.'
0000000000008488         db  0x42 ; 'B'
0000000000008489         db  0x0e ; '.'
000000000000848a         db  0x28 ; '('
000000000000848b         db  0x8c ; '.'
000000000000848c         db  0x05 ; '.'
000000000000848d         db  0x41 ; 'A'
000000000000848e         db  0x0e ; '.'
000000000000848f         db  0x30 ; '0'
0000000000008490         db  0x86 ; '.'
0000000000008491         db  0x06 ; '.'
0000000000008492         db  0x41 ; 'A'
0000000000008493         db  0x0e ; '.'
0000000000008494         db  0x38 ; '8'
0000000000008495         db  0x83 ; '.'
0000000000008496         db  0x07 ; '.'
0000000000008497         db  0x47 ; 'G'
0000000000008498         db  0x0e ; '.'
0000000000008499         db  0xd0 ; '.'
000000000000849a         db  0x02 ; '.'
000000000000849b         db  0x03 ; '.'
000000000000849c         db  0x9e ; '.'
000000000000849d         db  0x03 ; '.'
000000000000849e         db  0x0a ; '.'
000000000000849f         db  0x0e ; '.'
00000000000084a0         db  0xd8 ; '.'
00000000000084a1         db  0x02 ; '.'
00000000000084a2         db  0x4f ; 'O'
00000000000084a3         db  0x0e ; '.'
00000000000084a4         db  0xe0 ; '.'
00000000000084a5         db  0x02 ; '.'
00000000000084a6         db  0x5f ; '_'
00000000000084a7         db  0x0b ; '.'
00000000000084a8         db  0x03 ; '.'
00000000000084a9         db  0x55 ; 'U'
00000000000084aa         db  0x07 ; '.'
00000000000084ab         db  0x0a ; '.'
00000000000084ac         db  0x0e ; '.'
00000000000084ad         db  0x38 ; '8'
00000000000084ae         db  0x41 ; 'A'
00000000000084af         db  0x0e ; '.'
00000000000084b0         db  0x30 ; '0'
00000000000084b1         db  0x41 ; 'A'
00000000000084b2         db  0x0e ; '.'
00000000000084b3         db  0x28 ; '('
00000000000084b4         db  0x42 ; 'B'
00000000000084b5         db  0x0e ; '.'
00000000000084b6         db  0x20 ; ' '
00000000000084b7         db  0x42 ; 'B'
00000000000084b8         db  0x0e ; '.'
00000000000084b9         db  0x18 ; '.'
00000000000084ba         db  0x42 ; 'B'
00000000000084bb         db  0x0e ; '.'
00000000000084bc         db  0x10 ; '.'
00000000000084bd         db  0x42 ; 'B'
00000000000084be         db  0x0e ; '.'
00000000000084bf         db  0x08 ; '.'
00000000000084c0         db  0x41 ; 'A'
00000000000084c1         db  0x0b ; '.'
00000000000084c2         db  0x03 ; '.'
00000000000084c3         db  0x15 ; '.'
00000000000084c4         db  0x01 ; '.'
00000000000084c5         db  0x0e ; '.'
00000000000084c6         db  0xd8 ; '.'
00000000000084c7         db  0x02 ; '.'
00000000000084c8         db  0x41 ; 'A'
00000000000084c9         db  0x0e ; '.'
00000000000084ca         db  0xe0 ; '.'
00000000000084cb         db  0x02 ; '.'
00000000000084cc         db  0x48 ; 'H'
00000000000084cd         db  0x0e ; '.'
00000000000084ce         db  0xd8 ; '.'
00000000000084cf         db  0x02 ; '.'
00000000000084d0         db  0x41 ; 'A'
00000000000084d1         db  0x0e ; '.'
00000000000084d2         db  0xd0 ; '.'
00000000000084d3         db  0x02 ; '.'
00000000000084d4         db  0x00 ; '.'
00000000000084d5         db  0x00 ; '.'
00000000000084d6         db  0x00 ; '.'
00000000000084d7         db  0x00 ; '.'
00000000000084d8         dd         0x0000004c                                  ; Length of the record
00000000000084dc         dd         0x00000254                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
00000000000084e0         db         0xe0, 0xb7, 2 dup (0xff)                    ; begin 0x3cc0
00000000000084e4         db         0xe1, 0x01, 2 dup (0x00)                    ; length 0x1e1 (end at 0x3ea1)
00000000000084e8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000084e9         db  0x42 ; 'B'
00000000000084ea         db  0x0e ; '.'
00000000000084eb         db  0x10 ; '.'
00000000000084ec         db  0x8f ; '.'
00000000000084ed         db  0x02 ; '.'
00000000000084ee         db  0x42 ; 'B'
00000000000084ef         db  0x0e ; '.'
00000000000084f0         db  0x18 ; '.'
00000000000084f1         db  0x8e ; '.'
00000000000084f2         db  0x03 ; '.'
00000000000084f3         db  0x45 ; 'E'
00000000000084f4         db  0x0e ; '.'
00000000000084f5         db  0x20 ; ' '
00000000000084f6         db  0x8d ; '.'
00000000000084f7         db  0x04 ; '.'
00000000000084f8         db  0x42 ; 'B'
00000000000084f9         db  0x0e ; '.'
00000000000084fa         db  0x28 ; '('
00000000000084fb         db  0x8c ; '.'
00000000000084fc         db  0x05 ; '.'
00000000000084fd         db  0x41 ; 'A'
00000000000084fe         db  0x0e ; '.'
00000000000084ff         db  0x30 ; '0'
0000000000008500         db  0x86 ; '.'
0000000000008501         db  0x06 ; '.'
0000000000008502         db  0x41 ; 'A'
0000000000008503         db  0x0e ; '.'
0000000000008504         db  0x38 ; '8'
0000000000008505         db  0x83 ; '.'
0000000000008506         db  0x07 ; '.'
0000000000008507         db  0x47 ; 'G'
0000000000008508         db  0x0e ; '.'
0000000000008509         db  0x60 ; '`'
000000000000850a         db  0x03 ; '.'
000000000000850b         db  0x44 ; 'D'
000000000000850c         db  0x01 ; '.'
000000000000850d         db  0x0a ; '.'
000000000000850e         db  0x0e ; '.'
000000000000850f         db  0x38 ; '8'
0000000000008510         db  0x41 ; 'A'
0000000000008511         db  0x0e ; '.'
0000000000008512         db  0x30 ; '0'
0000000000008513         db  0x41 ; 'A'
0000000000008514         db  0x0e ; '.'
0000000000008515         db  0x28 ; '('
0000000000008516         db  0x42 ; 'B'
0000000000008517         db  0x0e ; '.'
0000000000008518         db  0x20 ; ' '
0000000000008519         db  0x42 ; 'B'
000000000000851a         db  0x0e ; '.'
000000000000851b         db  0x18 ; '.'
000000000000851c         db  0x42 ; 'B'
000000000000851d         db  0x0e ; '.'
000000000000851e         db  0x10 ; '.'
000000000000851f         db  0x42 ; 'B'
0000000000008520         db  0x0e ; '.'
0000000000008521         db  0x08 ; '.'
0000000000008522         db  0x46 ; 'F'
0000000000008523         db  0x0b ; '.'
0000000000008524         db  0x00 ; '.'
0000000000008525         db  0x00 ; '.'
0000000000008526         db  0x00 ; '.'
0000000000008527         db  0x00 ; '.'
0000000000008528         dd         0x00000010                                  ; Length of the record
000000000000852c         dd         0x000002a4                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008530         db         0x80, 0xb9, 2 dup (0xff)                    ; begin 0x3eb0
0000000000008534         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x3eb8)
0000000000008538         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008539         align      4
000000000000853c         dd         0x00000010                                  ; Length of the record
0000000000008540         dd         0x000002b8                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008544         db         0x7c, 0xb9, 2 dup (0xff)                    ; begin 0x3ec0
0000000000008548         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x3ec8)
000000000000854c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000854d         align      16
0000000000008550         dd         0x0000002c                                  ; Length of the record
0000000000008554         dd         0x000002cc                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008558         db         0x78, 0xb9, 2 dup (0xff)                    ; begin 0x3ed0
000000000000855c         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x3f74)
0000000000008560         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008561         db  0x41 ; 'A'
0000000000008562         db  0x0e ; '.'
0000000000008563         db  0x10 ; '.'
0000000000008564         db  0x86 ; '.'
0000000000008565         db  0x02 ; '.'
0000000000008566         db  0x41 ; 'A'
0000000000008567         db  0x0e ; '.'
0000000000008568         db  0x18 ; '.'
0000000000008569         db  0x83 ; '.'
000000000000856a         db  0x03 ; '.'
000000000000856b         db  0x44 ; 'D'
000000000000856c         db  0x0e ; '.'
000000000000856d         db  0x20 ; ' '
000000000000856e         db  0x7a ; 'z'
000000000000856f         db  0x0a ; '.'
0000000000008570         db  0x0e ; '.'
0000000000008571         db  0x18 ; '.'
0000000000008572         db  0x41 ; 'A'
0000000000008573         db  0x0e ; '.'
0000000000008574         db  0x10 ; '.'
0000000000008575         db  0x41 ; 'A'
0000000000008576         db  0x0e ; '.'
0000000000008577         db  0x08 ; '.'
0000000000008578         db  0x41 ; 'A'
0000000000008579         db  0x0b ; '.'
000000000000857a         db  0x00 ; '.'
000000000000857b         db  0x00 ; '.'
000000000000857c         db  0x00 ; '.'
000000000000857d         db  0x00 ; '.'
000000000000857e         db  0x00 ; '.'
000000000000857f         db  0x00 ; '.'
0000000000008580         dd         0x0000001c                                  ; Length of the record
0000000000008584         dd         0x000002fc                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008588         db         0xf8, 0xb9, 2 dup (0xff)                    ; begin 0x3f80
000000000000858c         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x401f)
0000000000008590         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008591         db  0x44 ; 'D'
0000000000008592         db  0x0e ; '.'
0000000000008593         db  0x10 ; '.'
0000000000008594         db  0x83 ; '.'
0000000000008595         db  0x02 ; '.'
0000000000008596         db  0x02 ; '.'
0000000000008597         db  0x78 ; 'x'
0000000000008598         db  0x0a ; '.'
0000000000008599         db  0x0e ; '.'
000000000000859a         db  0x08 ; '.'
000000000000859b         db  0x41 ; 'A'
000000000000859c         db  0x0b ; '.'
000000000000859d         db  0x00 ; '.'
000000000000859e         db  0x00 ; '.'
000000000000859f         db  0x00 ; '.'
00000000000085a0         dd         0x00000040                                  ; Length of the record
00000000000085a4         dd         0x0000031c                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
00000000000085a8         db         0x78, 0xba, 2 dup (0xff)                    ; begin 0x4020
00000000000085ac         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x4107)
00000000000085b0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000085b1         db  0x41 ; 'A'
00000000000085b2         db  0x0e ; '.'
00000000000085b3         db  0x10 ; '.'
00000000000085b4         db  0x86 ; '.'
00000000000085b5         db  0x02 ; '.'
00000000000085b6         db  0x41 ; 'A'
00000000000085b7         db  0x0e ; '.'
00000000000085b8         db  0x18 ; '.'
00000000000085b9         db  0x83 ; '.'
00000000000085ba         db  0x03 ; '.'
00000000000085bb         db  0x49 ; 'I'
00000000000085bc         db  0x0e ; '.'
00000000000085bd         db  0x20 ; ' '
00000000000085be         db  0x6e ; 'n'
00000000000085bf         db  0x0a ; '.'
00000000000085c0         db  0x0e ; '.'
00000000000085c1         db  0x18 ; '.'
00000000000085c2         db  0x41 ; 'A'
00000000000085c3         db  0x0e ; '.'
00000000000085c4         db  0x10 ; '.'
00000000000085c5         db  0x41 ; 'A'
00000000000085c6         db  0x0e ; '.'
00000000000085c7         db  0x08 ; '.'
00000000000085c8         db  0x45 ; 'E'
00000000000085c9         db  0x0b ; '.'
00000000000085ca         db  0x02 ; '.'
00000000000085cb         db  0x4a ; 'J'
00000000000085cc         db  0x0a ; '.'
00000000000085cd         db  0x0e ; '.'
00000000000085ce         db  0x18 ; '.'
00000000000085cf         db  0x41 ; 'A'
00000000000085d0         db  0x0e ; '.'
00000000000085d1         db  0x10 ; '.'
00000000000085d2         db  0x41 ; 'A'
00000000000085d3         db  0x0e ; '.'
00000000000085d4         db  0x08 ; '.'
00000000000085d5         db  0x44 ; 'D'
00000000000085d6         db  0x0b ; '.'
00000000000085d7         db  0x02 ; '.'
00000000000085d8         db  0x54 ; 'T'
00000000000085d9         db  0x0e ; '.'
00000000000085da         db  0x18 ; '.'
00000000000085db         db  0x41 ; 'A'
00000000000085dc         db  0x0e ; '.'
00000000000085dd         db  0x10 ; '.'
00000000000085de         db  0x41 ; 'A'
00000000000085df         db  0x0e ; '.'
00000000000085e0         db  0x08 ; '.'
00000000000085e1         db  0x00 ; '.'
00000000000085e2         db  0x00 ; '.'
00000000000085e3         db  0x00 ; '.'
00000000000085e4         dd         0x00000074                                  ; Length of the record
00000000000085e8         dd         0x00000360                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
00000000000085ec         db         0x24, 0xbb, 2 dup (0xff)                    ; begin 0x4110
00000000000085f0         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x5344)
00000000000085f4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000085f5         db  0x42 ; 'B'
00000000000085f6         db  0x0e ; '.'
00000000000085f7         db  0x10 ; '.'
00000000000085f8         db  0x8f ; '.'
00000000000085f9         db  0x02 ; '.'
00000000000085fa         db  0x42 ; 'B'
00000000000085fb         db  0x0e ; '.'
00000000000085fc         db  0x18 ; '.'
00000000000085fd         db  0x8e ; '.'
00000000000085fe         db  0x03 ; '.'
00000000000085ff         db  0x45 ; 'E'
0000000000008600         db  0x0e ; '.'
0000000000008601         db  0x20 ; ' '
0000000000008602         db  0x8d ; '.'
0000000000008603         db  0x04 ; '.'
0000000000008604         db  0x42 ; 'B'
0000000000008605         db  0x0e ; '.'
0000000000008606         db  0x28 ; '('
0000000000008607         db  0x8c ; '.'
0000000000008608         db  0x05 ; '.'
0000000000008609         db  0x44 ; 'D'
000000000000860a         db  0x0e ; '.'
000000000000860b         db  0x30 ; '0'
000000000000860c         db  0x86 ; '.'
000000000000860d         db  0x06 ; '.'
000000000000860e         db  0x41 ; 'A'
000000000000860f         db  0x0e ; '.'
0000000000008610         db  0x38 ; '8'
0000000000008611         db  0x83 ; '.'
0000000000008612         db  0x07 ; '.'
0000000000008613         db  0x53 ; 'S'
0000000000008614         db  0x0e ; '.'
0000000000008615         db  0xf0 ; '.'
0000000000008616         db  0x01 ; '.'
0000000000008617         db  0x03 ; '.'
0000000000008618         db  0x81 ; '.'
0000000000008619         db  0x0b ; '.'
000000000000861a         db  0x0e ; '.'
000000000000861b         db  0xf8 ; '.'
000000000000861c         db  0x01 ; '.'
000000000000861d         db  0x4a ; 'J'
000000000000861e         db  0x0e ; '.'
000000000000861f         db  0x80 ; '.'
0000000000008620         db  0x02 ; '.'
0000000000008621         db  0x44 ; 'D'
0000000000008622         db  0x0e ; '.'
0000000000008623         db  0x88 ; '.'
0000000000008624         db  0x02 ; '.'
0000000000008625         db  0x45 ; 'E'
0000000000008626         db  0x0e ; '.'
0000000000008627         db  0x90 ; '.'
0000000000008628         db  0x02 ; '.'
0000000000008629         db  0x5f ; '_'
000000000000862a         db  0x0e ; '.'
000000000000862b         db  0xf0 ; '.'
000000000000862c         db  0x01 ; '.'
000000000000862d         db  0x64 ; 'd'
000000000000862e         db  0x0a ; '.'
000000000000862f         db  0x0e ; '.'
0000000000008630         db  0x38 ; '8'
0000000000008631         db  0x41 ; 'A'
0000000000008632         db  0x0e ; '.'
0000000000008633         db  0x30 ; '0'
0000000000008634         db  0x41 ; 'A'
0000000000008635         db  0x0e ; '.'
0000000000008636         db  0x28 ; '('
0000000000008637         db  0x42 ; 'B'
0000000000008638         db  0x0e ; '.'
0000000000008639         db  0x20 ; ' '
000000000000863a         db  0x42 ; 'B'
000000000000863b         db  0x0e ; '.'
000000000000863c         db  0x18 ; '.'
000000000000863d         db  0x42 ; 'B'
000000000000863e         db  0x0e ; '.'
000000000000863f         db  0x10 ; '.'
0000000000008640         db  0x42 ; 'B'
0000000000008641         db  0x0e ; '.'
0000000000008642         db  0x08 ; '.'
0000000000008643         db  0x44 ; 'D'
0000000000008644         db  0x0b ; '.'
0000000000008645         db  0x03 ; '.'
0000000000008646         db  0x99 ; '.'
0000000000008647         db  0x05 ; '.'
0000000000008648         db  0x0e ; '.'
0000000000008649         db  0xf8 ; '.'
000000000000864a         db  0x01 ; '.'
000000000000864b         db  0x4d ; 'M'
000000000000864c         db  0x0e ; '.'
000000000000864d         db  0x80 ; '.'
000000000000864e         db  0x02 ; '.'
000000000000864f         db  0x44 ; 'D'
0000000000008650         db  0x0e ; '.'
0000000000008651         db  0x88 ; '.'
0000000000008652         db  0x02 ; '.'
0000000000008653         db  0x47 ; 'G'
0000000000008654         db  0x0e ; '.'
0000000000008655         db  0x90 ; '.'
0000000000008656         db  0x02 ; '.'
0000000000008657         db  0x5b ; '['
0000000000008658         db  0x0e ; '.'
0000000000008659         db  0xf0 ; '.'
000000000000865a         db  0x01 ; '.'
000000000000865b         db  0x00 ; '.'
000000000000865c         dd         0x00000068                                  ; Length of the record
0000000000008660         dd         0x000003d8                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008664         db         0xec, 0xcc, 2 dup (0xff)                    ; begin 0x5350
0000000000008668         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x54fb)
000000000000866c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000866d         db  0x42 ; 'B'
000000000000866e         db  0x0e ; '.'
000000000000866f         db  0x10 ; '.'
0000000000008670         db  0x8f ; '.'
0000000000008671         db  0x02 ; '.'
0000000000008672         db  0x42 ; 'B'
0000000000008673         db  0x0e ; '.'
0000000000008674         db  0x18 ; '.'
0000000000008675         db  0x8e ; '.'
0000000000008676         db  0x03 ; '.'
0000000000008677         db  0x45 ; 'E'
0000000000008678         db  0x0e ; '.'
0000000000008679         db  0x20 ; ' '
000000000000867a         db  0x8d ; '.'
000000000000867b         db  0x04 ; '.'
000000000000867c         db  0x42 ; 'B'
000000000000867d         db  0x0e ; '.'
000000000000867e         db  0x28 ; '('
000000000000867f         db  0x8c ; '.'
0000000000008680         db  0x05 ; '.'
0000000000008681         db  0x44 ; 'D'
0000000000008682         db  0x0e ; '.'
0000000000008683         db  0x30 ; '0'
0000000000008684         db  0x86 ; '.'
0000000000008685         db  0x06 ; '.'
0000000000008686         db  0x41 ; 'A'
0000000000008687         db  0x0e ; '.'
0000000000008688         db  0x38 ; '8'
0000000000008689         db  0x83 ; '.'
000000000000868a         db  0x07 ; '.'
000000000000868b         db  0x47 ; 'G'
000000000000868c         db  0x0e ; '.'
000000000000868d         db  0x60 ; '`'
000000000000868e         db  0x02 ; '.'
000000000000868f         db  0x99 ; '.'
0000000000008690         db  0x0e ; '.'
0000000000008691         db  0x68 ; 'h'
0000000000008692         db  0x5f ; '_'
0000000000008693         db  0x0e ; '.'
0000000000008694         db  0x70 ; 'p'
0000000000008695         db  0x46 ; 'F'
0000000000008696         db  0x0e ; '.'
0000000000008697         db  0x78 ; 'x'
0000000000008698         db  0x42 ; 'B'
0000000000008699         db  0x0e ; '.'
000000000000869a         db  0x80 ; '.'
000000000000869b         db  0x01 ; '.'
000000000000869c         db  0x59 ; 'Y'
000000000000869d         db  0x0e ; '.'
000000000000869e         db  0x60 ; '`'
000000000000869f         db  0x02 ; '.'
00000000000086a0         db  0x40 ; '@'
00000000000086a1         db  0x0e ; '.'
00000000000086a2         db  0x68 ; 'h'
00000000000086a3         db  0x4b ; 'K'
00000000000086a4         db  0x0e ; '.'
00000000000086a5         db  0x70 ; 'p'
00000000000086a6         db  0x43 ; 'C'
00000000000086a7         db  0x0e ; '.'
00000000000086a8         db  0x78 ; 'x'
00000000000086a9         db  0x45 ; 'E'
00000000000086aa         db  0x0e ; '.'
00000000000086ab         db  0x80 ; '.'
00000000000086ac         db  0x01 ; '.'
00000000000086ad         db  0x5e ; '^'
00000000000086ae         db  0x0e ; '.'
00000000000086af         db  0x60 ; '`'
00000000000086b0         db  0x4c ; 'L'
00000000000086b1         db  0x0a ; '.'
00000000000086b2         db  0x0e ; '.'
00000000000086b3         db  0x38 ; '8'
00000000000086b4         db  0x44 ; 'D'
00000000000086b5         db  0x0e ; '.'
00000000000086b6         db  0x30 ; '0'
00000000000086b7         db  0x41 ; 'A'
00000000000086b8         db  0x0e ; '.'
00000000000086b9         db  0x28 ; '('
00000000000086ba         db  0x42 ; 'B'
00000000000086bb         db  0x0e ; '.'
00000000000086bc         db  0x20 ; ' '
00000000000086bd         db  0x42 ; 'B'
00000000000086be         db  0x0e ; '.'
00000000000086bf         db  0x18 ; '.'
00000000000086c0         db  0x42 ; 'B'
00000000000086c1         db  0x0e ; '.'
00000000000086c2         db  0x10 ; '.'
00000000000086c3         db  0x42 ; 'B'
00000000000086c4         db  0x0e ; '.'
00000000000086c5         db  0x08 ; '.'
00000000000086c6         db  0x46 ; 'F'
00000000000086c7         db  0x0b ; '.'
00000000000086c8         dd         0x00000028                                  ; Length of the record
00000000000086cc         dd         0x00000444                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
00000000000086d0         db         0x30, 0xce, 2 dup (0xff)                    ; begin 0x5500
00000000000086d4         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x5536)
00000000000086d8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000086d9         db  0x42 ; 'B'
00000000000086da         db  0x0e ; '.'
00000000000086db         db  0x10 ; '.'
00000000000086dc         db  0x8c ; '.'
00000000000086dd         db  0x02 ; '.'
00000000000086de         db  0x41 ; 'A'
00000000000086df         db  0x0e ; '.'
00000000000086e0         db  0x18 ; '.'
00000000000086e1         db  0x86 ; '.'
00000000000086e2         db  0x03 ; '.'
00000000000086e3         db  0x41 ; 'A'
00000000000086e4         db  0x0e ; '.'
00000000000086e5         db  0x20 ; ' '
00000000000086e6         db  0x83 ; '.'
00000000000086e7         db  0x04 ; '.'
00000000000086e8         db  0x6e ; 'n'
00000000000086e9         db  0x0e ; '.'
00000000000086ea         db  0x18 ; '.'
00000000000086eb         db  0x41 ; 'A'
00000000000086ec         db  0x0e ; '.'
00000000000086ed         db  0x10 ; '.'
00000000000086ee         db  0x42 ; 'B'
00000000000086ef         db  0x0e ; '.'
00000000000086f0         db  0x08 ; '.'
00000000000086f1         db  0x00 ; '.'
00000000000086f2         db  0x00 ; '.'
00000000000086f3         db  0x00 ; '.'
00000000000086f4         dd         0x00000010                                  ; Length of the record
00000000000086f8         dd         0x00000470                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
00000000000086fc         db         0x44, 0xce, 2 dup (0xff)                    ; begin 0x5540
0000000000008700         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x5551)
0000000000008704         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008705         align      8
0000000000008708         dd         0x00000010                                  ; Length of the record
000000000000870c         dd         0x00000484                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008710         db         0x50, 0xce, 2 dup (0xff)                    ; begin 0x5560
0000000000008714         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x5571)
0000000000008718         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008719         align      4
000000000000871c         dd         0x00000010                                  ; Length of the record
0000000000008720         dd         0x00000498                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008724         db         0x5c, 0xce, 2 dup (0xff)                    ; begin 0x5580
0000000000008728         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x55b5)
000000000000872c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000872d         align      16
0000000000008730         dd         0x00000010                                  ; Length of the record
0000000000008734         dd         0x000004ac                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008738         db         0x88, 0xce, 2 dup (0xff)                    ; begin 0x55c0
000000000000873c         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x55d5)
0000000000008740         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008741         align      4
0000000000008744         dd         0x00000010                                  ; Length of the record
0000000000008748         dd         0x000004c0                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
000000000000874c         db         0x94, 0xce, 2 dup (0xff)                    ; begin 0x55e0
0000000000008750         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x5610)
0000000000008754         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008755         db  0x6b ; 'k'
0000000000008756         db  0x0e ; '.'
0000000000008757         db  0x10 ; '.'
0000000000008758         dd         0x00000050                                  ; Length of the record
000000000000875c         dd         0x000004d4                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008760         db         0xb0, 0xce, 2 dup (0xff)                    ; begin 0x5610
0000000000008764         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x5684)
0000000000008768         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008769         db  0x42 ; 'B'
000000000000876a         db  0x0e ; '.'
000000000000876b         db  0x10 ; '.'
000000000000876c         db  0x8f ; '.'
000000000000876d         db  0x02 ; '.'
000000000000876e         db  0x42 ; 'B'
000000000000876f         db  0x0e ; '.'
0000000000008770         db  0x18 ; '.'
0000000000008771         db  0x8e ; '.'
0000000000008772         db  0x03 ; '.'
0000000000008773         db  0x49 ; 'I'
0000000000008774         db  0x0e ; '.'
0000000000008775         db  0x20 ; ' '
0000000000008776         db  0x8d ; '.'
0000000000008777         db  0x04 ; '.'
0000000000008778         db  0x42 ; 'B'
0000000000008779         db  0x0e ; '.'
000000000000877a         db  0x28 ; '('
000000000000877b         db  0x8c ; '.'
000000000000877c         db  0x05 ; '.'
000000000000877d         db  0x44 ; 'D'
000000000000877e         db  0x0e ; '.'
000000000000877f         db  0x30 ; '0'
0000000000008780         db  0x86 ; '.'
0000000000008781         db  0x06 ; '.'
0000000000008782         db  0x41 ; 'A'
0000000000008783         db  0x0e ; '.'
0000000000008784         db  0x38 ; '8'
0000000000008785         db  0x83 ; '.'
0000000000008786         db  0x07 ; '.'
0000000000008787         db  0x4d ; 'M'
0000000000008788         db  0x0e ; '.'
0000000000008789         db  0x50 ; 'P'
000000000000878a         db  0x5f ; '_'
000000000000878b         db  0x0e ; '.'
000000000000878c         db  0x58 ; 'X'
000000000000878d         db  0x47 ; 'G'
000000000000878e         db  0x0e ; '.'
000000000000878f         db  0x60 ; '`'
0000000000008790         db  0x46 ; 'F'
0000000000008791         db  0x0e ; '.'
0000000000008792         db  0x68 ; 'h'
0000000000008793         db  0x44 ; 'D'
0000000000008794         db  0x0e ; '.'
0000000000008795         db  0x70 ; 'p'
0000000000008796         db  0x58 ; 'X'
0000000000008797         db  0x0e ; '.'
0000000000008798         db  0x38 ; '8'
0000000000008799         db  0x41 ; 'A'
000000000000879a         db  0x0e ; '.'
000000000000879b         db  0x30 ; '0'
000000000000879c         db  0x41 ; 'A'
000000000000879d         db  0x0e ; '.'
000000000000879e         db  0x28 ; '('
000000000000879f         db  0x42 ; 'B'
00000000000087a0         db  0x0e ; '.'
00000000000087a1         db  0x20 ; ' '
00000000000087a2         db  0x42 ; 'B'
00000000000087a3         db  0x0e ; '.'
00000000000087a4         db  0x18 ; '.'
00000000000087a5         db  0x42 ; 'B'
00000000000087a6         db  0x0e ; '.'
00000000000087a7         db  0x10 ; '.'
00000000000087a8         db  0x42 ; 'B'
00000000000087a9         db  0x0e ; '.'
00000000000087aa         db  0x08 ; '.'
00000000000087ab         db  0x00 ; '.'
00000000000087ac         dd         0x00000068                                  ; Length of the record
00000000000087b0         dd         0x00000528                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
00000000000087b4         db         0xdc, 0xce, 2 dup (0xff)                    ; begin 0x5690
00000000000087b8         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x5773)
00000000000087bc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000087bd         db  0x42 ; 'B'
00000000000087be         db  0x0e ; '.'
00000000000087bf         db  0x10 ; '.'
00000000000087c0         db  0x8f ; '.'
00000000000087c1         db  0x02 ; '.'
00000000000087c2         db  0x42 ; 'B'
00000000000087c3         db  0x0e ; '.'
00000000000087c4         db  0x18 ; '.'
00000000000087c5         db  0x8e ; '.'
00000000000087c6         db  0x03 ; '.'
00000000000087c7         db  0x49 ; 'I'
00000000000087c8         db  0x0e ; '.'
00000000000087c9         db  0x20 ; ' '
00000000000087ca         db  0x8d ; '.'
00000000000087cb         db  0x04 ; '.'
00000000000087cc         db  0x42 ; 'B'
00000000000087cd         db  0x0e ; '.'
00000000000087ce         db  0x28 ; '('
00000000000087cf         db  0x8c ; '.'
00000000000087d0         db  0x05 ; '.'
00000000000087d1         db  0x44 ; 'D'
00000000000087d2         db  0x0e ; '.'
00000000000087d3         db  0x30 ; '0'
00000000000087d4         db  0x86 ; '.'
00000000000087d5         db  0x06 ; '.'
00000000000087d6         db  0x41 ; 'A'
00000000000087d7         db  0x0e ; '.'
00000000000087d8         db  0x38 ; '8'
00000000000087d9         db  0x83 ; '.'
00000000000087da         db  0x07 ; '.'
00000000000087db         db  0x4d ; 'M'
00000000000087dc         db  0x0e ; '.'
00000000000087dd         db  0x70 ; 'p'
00000000000087de         db  0x65 ; 'e'
00000000000087df         db  0x0e ; '.'
00000000000087e0         db  0x78 ; 'x'
00000000000087e1         db  0x4d ; 'M'
00000000000087e2         db  0x0e ; '.'
00000000000087e3         db  0x80 ; '.'
00000000000087e4         db  0x01 ; '.'
00000000000087e5         db  0x46 ; 'F'
00000000000087e6         db  0x0e ; '.'
00000000000087e7         db  0x88 ; '.'
00000000000087e8         db  0x01 ; '.'
00000000000087e9         db  0x42 ; 'B'
00000000000087ea         db  0x0e ; '.'
00000000000087eb         db  0x90 ; '.'
00000000000087ec         db  0x01 ; '.'
00000000000087ed         db  0x5e ; '^'
00000000000087ee         db  0x0e ; '.'
00000000000087ef         db  0x70 ; 'p'
00000000000087f0         db  0x56 ; 'V'
00000000000087f1         db  0x0e ; '.'
00000000000087f2         db  0x78 ; 'x'
00000000000087f3         db  0x43 ; 'C'
00000000000087f4         db  0x0e ; '.'
00000000000087f5         db  0x80 ; '.'
00000000000087f6         db  0x01 ; '.'
00000000000087f7         db  0x43 ; 'C'
00000000000087f8         db  0x0e ; '.'
00000000000087f9         db  0x88 ; '.'
00000000000087fa         db  0x01 ; '.'
00000000000087fb         db  0x56 ; 'V'
00000000000087fc         db  0x0e ; '.'
00000000000087fd         db  0x90 ; '.'
00000000000087fe         db  0x01 ; '.'
00000000000087ff         db  0x52 ; 'R'
0000000000008800         db  0x0e ; '.'
0000000000008801         db  0x70 ; 'p'
0000000000008802         db  0x5b ; '['
0000000000008803         db  0x0e ; '.'
0000000000008804         db  0x38 ; '8'
0000000000008805         db  0x41 ; 'A'
0000000000008806         db  0x0e ; '.'
0000000000008807         db  0x30 ; '0'
0000000000008808         db  0x41 ; 'A'
0000000000008809         db  0x0e ; '.'
000000000000880a         db  0x28 ; '('
000000000000880b         db  0x42 ; 'B'
000000000000880c         db  0x0e ; '.'
000000000000880d         db  0x20 ; ' '
000000000000880e         db  0x42 ; 'B'
000000000000880f         db  0x0e ; '.'
0000000000008810         db  0x18 ; '.'
0000000000008811         db  0x42 ; 'B'
0000000000008812         db  0x0e ; '.'
0000000000008813         db  0x10 ; '.'
0000000000008814         db  0x42 ; 'B'
0000000000008815         db  0x0e ; '.'
0000000000008816         db  0x08 ; '.'
0000000000008817         db  0x00 ; '.'
0000000000008818         dd         0x00000010                                  ; Length of the record
000000000000881c         dd         0x00000594                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008820         db         0x60, 0xcf, 2 dup (0xff)                    ; begin 0x5780
0000000000008824         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x578a)
0000000000008828         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008829         align      4
000000000000882c         dd         0x00000028                                  ; Length of the record
0000000000008830         dd         0x000005a8                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008834         db         0x5c, 0xcf, 2 dup (0xff)                    ; begin 0x5790
0000000000008838         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x5823)
000000000000883c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000883d         db  0x48 ; 'H'
000000000000883e         db  0x0e ; '.'
000000000000883f         db  0x10 ; '.'
0000000000008840         db  0x8c ; '.'
0000000000008841         db  0x02 ; '.'
0000000000008842         db  0x48 ; 'H'
0000000000008843         db  0x0e ; '.'
0000000000008844         db  0x18 ; '.'
0000000000008845         db  0x86 ; '.'
0000000000008846         db  0x03 ; '.'
0000000000008847         db  0x41 ; 'A'
0000000000008848         db  0x0e ; '.'
0000000000008849         db  0x20 ; ' '
000000000000884a         db  0x83 ; '.'
000000000000884b         db  0x04 ; '.'
000000000000884c         db  0x02 ; '.'
000000000000884d         db  0x74 ; 't'
000000000000884e         db  0x0e ; '.'
000000000000884f         db  0x18 ; '.'
0000000000008850         db  0x4b ; 'K'
0000000000008851         db  0x0e ; '.'
0000000000008852         db  0x10 ; '.'
0000000000008853         db  0x42 ; 'B'
0000000000008854         db  0x0e ; '.'
0000000000008855         db  0x08 ; '.'
0000000000008856         db  0x00 ; '.'
0000000000008857         db  0x00 ; '.'
0000000000008858         dd         0x00000010                                  ; Length of the record
000000000000885c         dd         0x000005d4                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008860         db         0xd0, 0xcf, 2 dup (0xff)                    ; begin 0x5830
0000000000008864         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5843)
0000000000008868         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008869         align      4
000000000000886c         dd         0x00000010                                  ; Length of the record
0000000000008870         dd         0x000005e8                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008874         db         0xdc, 0xcf, 2 dup (0xff)                    ; begin 0x5850
0000000000008878         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x585c)
000000000000887c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000887d         align      128
0000000000008880         dd         0x00000010                                  ; Length of the record
0000000000008884         dd         0x000005fc                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008888         db         0xd8, 0xcf, 2 dup (0xff)                    ; begin 0x5860
000000000000888c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x5878)
0000000000008890         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008891         align      4
0000000000008894         dd         0x00000010                                  ; Length of the record
0000000000008898         dd         0x00000610                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
000000000000889c         db         0xe4, 0xcf, 2 dup (0xff)                    ; begin 0x5880
00000000000088a0         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x5894)
00000000000088a4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000088a5         align      8
00000000000088a8         dd         0x00000018                                  ; Length of the record
00000000000088ac         dd         0x00000624                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
00000000000088b0         db         0xf0, 0xcf, 2 dup (0xff)                    ; begin 0x58a0
00000000000088b4         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x592e)
00000000000088b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000088b9         db  0x44 ; 'D'
00000000000088ba         db  0x0e ; '.'
00000000000088bb         db  0x50 ; 'P'
00000000000088bc         db  0x02 ; '.'
00000000000088bd         db  0x7f ; '.'
00000000000088be         db  0x0a ; '.'
00000000000088bf         db  0x0e ; '.'
00000000000088c0         db  0x08 ; '.'
00000000000088c1         db  0x41 ; 'A'
00000000000088c2         db  0x0b ; '.'
00000000000088c3         db  0x00 ; '.'
00000000000088c4         dd         0x00000018                                  ; Length of the record
00000000000088c8         dd         0x00000640                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
00000000000088cc         db         0x64, 0xd0, 2 dup (0xff)                    ; begin 0x5930
00000000000088d0         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x59ba)
00000000000088d4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000088d5         db  0x44 ; 'D'
00000000000088d6         db  0x0e ; '.'
00000000000088d7         db  0x50 ; 'P'
00000000000088d8         db  0x02 ; '.'
00000000000088d9         db  0x7b ; '{'
00000000000088da         db  0x0a ; '.'
00000000000088db         db  0x0e ; '.'
00000000000088dc         db  0x08 ; '.'
00000000000088dd         db  0x41 ; 'A'
00000000000088de         db  0x0b ; '.'
00000000000088df         db  0x00 ; '.'
00000000000088e0         dd         0x00000010                                  ; Length of the record
00000000000088e4         dd         0x0000065c                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
00000000000088e8         db         0xd8, 0xd0, 2 dup (0xff)                    ; begin 0x59c0
00000000000088ec         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x59cc)
00000000000088f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000088f1         align      4
00000000000088f4         dd         0x00000010                                  ; Length of the record
00000000000088f8         dd         0x00000670                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
00000000000088fc         db         0xd4, 0xd0, 2 dup (0xff)                    ; begin 0x59d0
0000000000008900         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x59df)
0000000000008904         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008905         align      8
0000000000008908         dd         0x00000018                                  ; Length of the record
000000000000890c         dd         0x00000684                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008910         db         2 dup (0xd0), 2 dup (0xff)                  ; begin 0x59e0
0000000000008914         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x5a78)
0000000000008918         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008919         db  0x44 ; 'D'
000000000000891a         db  0x0e ; '.'
000000000000891b         db  0x50 ; 'P'
000000000000891c         db  0x02 ; '.'
000000000000891d         db  0x8e ; '.'
000000000000891e         db  0x0a ; '.'
000000000000891f         db  0x0e ; '.'
0000000000008920         db  0x08 ; '.'
0000000000008921         db  0x41 ; 'A'
0000000000008922         db  0x0b ; '.'
0000000000008923         db  0x00 ; '.'
0000000000008924         dd         0x00000010                                  ; Length of the record
0000000000008928         dd         0x000006a0                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
000000000000892c         db         0x54, 0xd1, 2 dup (0xff)                    ; begin 0x5a80
0000000000008930         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x5a90)
0000000000008934         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008935         align      8
0000000000008938         dd         0x00000010                                  ; Length of the record
000000000000893c         dd         0x000006b4                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008940         db         0x50, 0xd1, 2 dup (0xff)                    ; begin 0x5a90
0000000000008944         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x5aa1)
0000000000008948         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008949         align      4
000000000000894c         dd         0x00000010                                  ; Length of the record
0000000000008950         dd         0x000006c8                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008954         db         0x5c, 0xd1, 2 dup (0xff)                    ; begin 0x5ab0
0000000000008958         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x5aba)
000000000000895c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000895d         align      32
0000000000008960         dd         0x00000018                                  ; Length of the record
0000000000008964         dd         0x000006dc                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008968         db         0x58, 0xd1, 2 dup (0xff)                    ; begin 0x5ac0
000000000000896c         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x5b4e)
0000000000008970         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008971         db  0x44 ; 'D'
0000000000008972         db  0x0e ; '.'
0000000000008973         db  0x50 ; 'P'
0000000000008974         db  0x02 ; '.'
0000000000008975         db  0x7f ; '.'
0000000000008976         db  0x0a ; '.'
0000000000008977         db  0x0e ; '.'
0000000000008978         db  0x08 ; '.'
0000000000008979         db  0x41 ; 'A'
000000000000897a         db  0x0b ; '.'
000000000000897b         db  0x00 ; '.'
000000000000897c         dd         0x00000018                                  ; Length of the record
0000000000008980         dd         0x000006f8                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008984         db         0xcc, 0xd1, 2 dup (0xff)                    ; begin 0x5b50
0000000000008988         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x5be1)
000000000000898c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000898d         db  0x44 ; 'D'
000000000000898e         db  0x0e ; '.'
000000000000898f         db  0x50 ; 'P'
0000000000008990         db  0x02 ; '.'
0000000000008991         db  0x82 ; '.'
0000000000008992         db  0x0a ; '.'
0000000000008993         db  0x0e ; '.'
0000000000008994         db  0x08 ; '.'
0000000000008995         db  0x41 ; 'A'
0000000000008996         db  0x0b ; '.'
0000000000008997         db  0x00 ; '.'
0000000000008998         dd         0x00000010                                  ; Length of the record
000000000000899c         dd         0x00000714                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
00000000000089a0         db         0x50, 0xd2, 2 dup (0xff)                    ; begin 0x5bf0
00000000000089a4         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x5bfc)
00000000000089a8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000089a9         align      4
00000000000089ac         dd         0x00000010                                  ; Length of the record
00000000000089b0         dd         0x00000728                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
00000000000089b4         db         0x4c, 0xd2, 2 dup (0xff)                    ; begin 0x5c00
00000000000089b8         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x5c17)
00000000000089bc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000089bd         align      64
00000000000089c0         dd         0x00000010                                  ; Length of the record
00000000000089c4         dd         0x0000073c                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
00000000000089c8         db         0x58, 0xd2, 2 dup (0xff)                    ; begin 0x5c20
00000000000089cc         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5c33)
00000000000089d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000089d1         align      4
00000000000089d4         dd         0x00000010                                  ; Length of the record
00000000000089d8         dd         0x00000750                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
00000000000089dc         db         0x64, 0xd2, 2 dup (0xff)                    ; begin 0x5c40
00000000000089e0         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x5c4c)
00000000000089e4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000089e5         align      8
00000000000089e8         dd         0x00000010                                  ; Length of the record
00000000000089ec         dd         0x00000764                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
00000000000089f0         db         0x60, 0xd2, 2 dup (0xff)                    ; begin 0x5c50
00000000000089f4         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x5c64)
00000000000089f8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000089f9         align      4
00000000000089fc         dd         0x00000010                                  ; Length of the record
0000000000008a00         dd         0x00000778                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008a04         db         0x6c, 0xd2, 2 dup (0xff)                    ; begin 0x5c70
0000000000008a08         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5c83)
0000000000008a0c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008a0d         align      16
0000000000008a10         dd         0x00000014                                  ; Length of the record
0000000000008a14         dd         0x0000078c                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008a18         db         0x78, 0xd2, 2 dup (0xff)                    ; begin 0x5c90
0000000000008a1c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x5ca8)
0000000000008a20         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008a21         align      8
0000000000008a28         dd         0x00000110                                  ; Length of the record
0000000000008a2c         dd         0x000007a4                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008a30         db         0x80, 0xd2, 2 dup (0xff)                    ; begin 0x5cb0
0000000000008a34         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x60c7)
0000000000008a38         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008a39         db  0x42 ; 'B'
0000000000008a3a         db  0x0e ; '.'
0000000000008a3b         db  0x10 ; '.'
0000000000008a3c         db  0x8f ; '.'
0000000000008a3d         db  0x02 ; '.'
0000000000008a3e         db  0x42 ; 'B'
0000000000008a3f         db  0x0e ; '.'
0000000000008a40         db  0x18 ; '.'
0000000000008a41         db  0x8e ; '.'
0000000000008a42         db  0x03 ; '.'
0000000000008a43         db  0x42 ; 'B'
0000000000008a44         db  0x0e ; '.'
0000000000008a45         db  0x20 ; ' '
0000000000008a46         db  0x8d ; '.'
0000000000008a47         db  0x04 ; '.'
0000000000008a48         db  0x42 ; 'B'
0000000000008a49         db  0x0e ; '.'
0000000000008a4a         db  0x28 ; '('
0000000000008a4b         db  0x8c ; '.'
0000000000008a4c         db  0x05 ; '.'
0000000000008a4d         db  0x44 ; 'D'
0000000000008a4e         db  0x0e ; '.'
0000000000008a4f         db  0x30 ; '0'
0000000000008a50         db  0x86 ; '.'
0000000000008a51         db  0x06 ; '.'
0000000000008a52         db  0x41 ; 'A'
0000000000008a53         db  0x0e ; '.'
0000000000008a54         db  0x38 ; '8'
0000000000008a55         db  0x83 ; '.'
0000000000008a56         db  0x07 ; '.'
0000000000008a57         db  0x4a ; 'J'
0000000000008a58         db  0x0e ; '.'
0000000000008a59         db  0x60 ; '`'
0000000000008a5a         db  0x02 ; '.'
0000000000008a5b         db  0xdd ; '.'
0000000000008a5c         db  0x0e ; '.'
0000000000008a5d         db  0x68 ; 'h'
0000000000008a5e         db  0x57 ; 'W'
0000000000008a5f         db  0x0e ; '.'
0000000000008a60         db  0x70 ; 'p'
0000000000008a61         db  0x42 ; 'B'
0000000000008a62         db  0x0e ; '.'
0000000000008a63         db  0x78 ; 'x'
0000000000008a64         db  0x42 ; 'B'
0000000000008a65         db  0x0e ; '.'
0000000000008a66         db  0x80 ; '.'
0000000000008a67         db  0x01 ; '.'
0000000000008a68         db  0x42 ; 'B'
0000000000008a69         db  0x0e ; '.'
0000000000008a6a         db  0x88 ; '.'
0000000000008a6b         db  0x01 ; '.'
0000000000008a6c         db  0x42 ; 'B'
0000000000008a6d         db  0x0e ; '.'
0000000000008a6e         db  0x90 ; '.'
0000000000008a6f         db  0x01 ; '.'
0000000000008a70         db  0x53 ; 'S'
0000000000008a71         db  0x0e ; '.'
0000000000008a72         db  0x60 ; '`'
0000000000008a73         db  0x44 ; 'D'
0000000000008a74         db  0x0a ; '.'
0000000000008a75         db  0x0e ; '.'
0000000000008a76         db  0x38 ; '8'
0000000000008a77         db  0x41 ; 'A'
0000000000008a78         db  0x0e ; '.'
0000000000008a79         db  0x30 ; '0'
0000000000008a7a         db  0x41 ; 'A'
0000000000008a7b         db  0x0e ; '.'
0000000000008a7c         db  0x28 ; '('
0000000000008a7d         db  0x42 ; 'B'
0000000000008a7e         db  0x0e ; '.'
0000000000008a7f         db  0x20 ; ' '
0000000000008a80         db  0x42 ; 'B'
0000000000008a81         db  0x0e ; '.'
0000000000008a82         db  0x18 ; '.'
0000000000008a83         db  0x42 ; 'B'
0000000000008a84         db  0x0e ; '.'
0000000000008a85         db  0x10 ; '.'
0000000000008a86         db  0x42 ; 'B'
0000000000008a87         db  0x0e ; '.'
0000000000008a88         db  0x08 ; '.'
0000000000008a89         db  0x44 ; 'D'
0000000000008a8a         db  0x0b ; '.'
0000000000008a8b         db  0x02 ; '.'
0000000000008a8c         db  0x78 ; 'x'
0000000000008a8d         db  0x0a ; '.'
0000000000008a8e         db  0x0e ; '.'
0000000000008a8f         db  0x68 ; 'h'
0000000000008a90         db  0x48 ; 'H'
0000000000008a91         db  0x0b ; '.'
0000000000008a92         db  0x5a ; 'Z'
0000000000008a93         db  0x0a ; '.'
0000000000008a94         db  0x0e ; '.'
0000000000008a95         db  0x38 ; '8'
0000000000008a96         db  0x47 ; 'G'
0000000000008a97         db  0x0e ; '.'
0000000000008a98         db  0x30 ; '0'
0000000000008a99         db  0x41 ; 'A'
0000000000008a9a         db  0x0e ; '.'
0000000000008a9b         db  0x28 ; '('
0000000000008a9c         db  0x42 ; 'B'
0000000000008a9d         db  0x0e ; '.'
0000000000008a9e         db  0x20 ; ' '
0000000000008a9f         db  0x42 ; 'B'
0000000000008aa0         db  0x0e ; '.'
0000000000008aa1         db  0x18 ; '.'
0000000000008aa2         db  0x42 ; 'B'
0000000000008aa3         db  0x0e ; '.'
0000000000008aa4         db  0x10 ; '.'
0000000000008aa5         db  0x42 ; 'B'
0000000000008aa6         db  0x0e ; '.'
0000000000008aa7         db  0x08 ; '.'
0000000000008aa8         db  0x56 ; 'V'
0000000000008aa9         db  0x0b ; '.'
0000000000008aaa         db  0x5e ; '^'
0000000000008aab         db  0x0a ; '.'
0000000000008aac         db  0x0e ; '.'
0000000000008aad         db  0x38 ; '8'
0000000000008aae         db  0x52 ; 'R'
0000000000008aaf         db  0x0e ; '.'
0000000000008ab0         db  0x30 ; '0'
0000000000008ab1         db  0x41 ; 'A'
0000000000008ab2         db  0x0e ; '.'
0000000000008ab3         db  0x28 ; '('
0000000000008ab4         db  0x42 ; 'B'
0000000000008ab5         db  0x0e ; '.'
0000000000008ab6         db  0x20 ; ' '
0000000000008ab7         db  0x42 ; 'B'
0000000000008ab8         db  0x0e ; '.'
0000000000008ab9         db  0x18 ; '.'
0000000000008aba         db  0x42 ; 'B'
0000000000008abb         db  0x0e ; '.'
0000000000008abc         db  0x10 ; '.'
0000000000008abd         db  0x42 ; 'B'
0000000000008abe         db  0x0e ; '.'
0000000000008abf         db  0x08 ; '.'
0000000000008ac0         db  0x4f ; 'O'
0000000000008ac1         db  0x0b ; '.'
0000000000008ac2         db  0x62 ; 'b'
0000000000008ac3         db  0x0a ; '.'
0000000000008ac4         db  0x0e ; '.'
0000000000008ac5         db  0x38 ; '8'
0000000000008ac6         db  0x50 ; 'P'
0000000000008ac7         db  0x0e ; '.'
0000000000008ac8         db  0x30 ; '0'
0000000000008ac9         db  0x41 ; 'A'
0000000000008aca         db  0x0e ; '.'
0000000000008acb         db  0x28 ; '('
0000000000008acc         db  0x42 ; 'B'
0000000000008acd         db  0x0e ; '.'
0000000000008ace         db  0x20 ; ' '
0000000000008acf         db  0x42 ; 'B'
0000000000008ad0         db  0x0e ; '.'
0000000000008ad1         db  0x18 ; '.'
0000000000008ad2         db  0x42 ; 'B'
0000000000008ad3         db  0x0e ; '.'
0000000000008ad4         db  0x10 ; '.'
0000000000008ad5         db  0x42 ; 'B'
0000000000008ad6         db  0x0e ; '.'
0000000000008ad7         db  0x08 ; '.'
0000000000008ad8         db  0x55 ; 'U'
0000000000008ad9         db  0x0b ; '.'
0000000000008ada         db  0x66 ; 'f'
0000000000008adb         db  0x0e ; '.'
0000000000008adc         db  0x68 ; 'h'
0000000000008add         db  0x42 ; 'B'
0000000000008ade         db  0x0e ; '.'
0000000000008adf         db  0x70 ; 'p'
0000000000008ae0         db  0x5c ; '\'
0000000000008ae1         db  0x0e ; '.'
0000000000008ae2         db  0x68 ; 'h'
0000000000008ae3         db  0x41 ; 'A'
0000000000008ae4         db  0x0e ; '.'
0000000000008ae5         db  0x60 ; '`'
0000000000008ae6         db  0x44 ; 'D'
0000000000008ae7         db  0x0a ; '.'
0000000000008ae8         db  0x0e ; '.'
0000000000008ae9         db  0x38 ; '8'
0000000000008aea         db  0x41 ; 'A'
0000000000008aeb         db  0x0e ; '.'
0000000000008aec         db  0x30 ; '0'
0000000000008aed         db  0x41 ; 'A'
0000000000008aee         db  0x0e ; '.'
0000000000008aef         db  0x28 ; '('
0000000000008af0         db  0x42 ; 'B'
0000000000008af1         db  0x0e ; '.'
0000000000008af2         db  0x20 ; ' '
0000000000008af3         db  0x42 ; 'B'
0000000000008af4         db  0x0e ; '.'
0000000000008af5         db  0x18 ; '.'
0000000000008af6         db  0x42 ; 'B'
0000000000008af7         db  0x0e ; '.'
0000000000008af8         db  0x10 ; '.'
0000000000008af9         db  0x42 ; 'B'
0000000000008afa         db  0x0e ; '.'
0000000000008afb         db  0x08 ; '.'
0000000000008afc         db  0x45 ; 'E'
0000000000008afd         db  0x0b ; '.'
0000000000008afe         db  0x68 ; 'h'
0000000000008aff         db  0x0a ; '.'
0000000000008b00         db  0x0e ; '.'
0000000000008b01         db  0x68 ; 'h'
0000000000008b02         db  0x48 ; 'H'
0000000000008b03         db  0x0b ; '.'
0000000000008b04         db  0x72 ; 'r'
0000000000008b05         db  0x0e ; '.'
0000000000008b06         db  0x68 ; 'h'
0000000000008b07         db  0x45 ; 'E'
0000000000008b08         db  0x0e ; '.'
0000000000008b09         db  0x70 ; 'p'
0000000000008b0a         db  0x42 ; 'B'
0000000000008b0b         db  0x0e ; '.'
0000000000008b0c         db  0x78 ; 'x'
0000000000008b0d         db  0x42 ; 'B'
0000000000008b0e         db  0x0e ; '.'
0000000000008b0f         db  0x80 ; '.'
0000000000008b10         db  0x01 ; '.'
0000000000008b11         db  0x5e ; '^'
0000000000008b12         db  0x0e ; '.'
0000000000008b13         db  0x60 ; '`'
0000000000008b14         db  0x44 ; 'D'
0000000000008b15         db  0x0a ; '.'
0000000000008b16         db  0x0e ; '.'
0000000000008b17         db  0x38 ; '8'
0000000000008b18         db  0x41 ; 'A'
0000000000008b19         db  0x0e ; '.'
0000000000008b1a         db  0x30 ; '0'
0000000000008b1b         db  0x41 ; 'A'
0000000000008b1c         db  0x0e ; '.'
0000000000008b1d         db  0x28 ; '('
0000000000008b1e         db  0x42 ; 'B'
0000000000008b1f         db  0x0e ; '.'
0000000000008b20         db  0x20 ; ' '
0000000000008b21         db  0x42 ; 'B'
0000000000008b22         db  0x0e ; '.'
0000000000008b23         db  0x18 ; '.'
0000000000008b24         db  0x42 ; 'B'
0000000000008b25         db  0x0e ; '.'
0000000000008b26         db  0x10 ; '.'
0000000000008b27         db  0x42 ; 'B'
0000000000008b28         db  0x0e ; '.'
0000000000008b29         db  0x08 ; '.'
0000000000008b2a         db  0x41 ; 'A'
0000000000008b2b         db  0x0b ; '.'
0000000000008b2c         db  0x79 ; 'y'
0000000000008b2d         db  0x0a ; '.'
0000000000008b2e         db  0x0e ; '.'
0000000000008b2f         db  0x68 ; 'h'
0000000000008b30         db  0x42 ; 'B'
0000000000008b31         db  0x0e ; '.'
0000000000008b32         db  0x70 ; 'p'
0000000000008b33         db  0x42 ; 'B'
0000000000008b34         db  0x0e ; '.'
0000000000008b35         db  0x78 ; 'x'
0000000000008b36         db  0x42 ; 'B'
0000000000008b37         db  0x0e ; '.'
0000000000008b38         db  0x80 ; '.'
0000000000008b39         db  0x01 ; '.'
0000000000008b3a         db  0x51 ; 'Q'
0000000000008b3b         db  0x0b ; '.'
0000000000008b3c         dd         0x00000010                                  ; Length of the record
0000000000008b40         dd         0x000008b8                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008b44         db         0x8c, 0xd5, 2 dup (0xff)                    ; begin 0x60d0
0000000000008b48         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x60f0)
0000000000008b4c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b4d         align      16
0000000000008b50         dd         0x00000018                                  ; Length of the record
0000000000008b54         dd         0x000008cc                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008b58         db         0x98, 0xd5, 2 dup (0xff)                    ; begin 0x60f0
0000000000008b5c         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x6168)
0000000000008b60         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b61         db  0x44 ; 'D'
0000000000008b62         db  0x0e ; '.'
0000000000008b63         db  0x70 ; 'p'
0000000000008b64         db  0x02 ; '.'
0000000000008b65         db  0x60 ; '`'
0000000000008b66         db  0x0a ; '.'
0000000000008b67         db  0x0e ; '.'
0000000000008b68         db  0x08 ; '.'
0000000000008b69         db  0x41 ; 'A'
0000000000008b6a         db  0x0b ; '.'
0000000000008b6b         db  0x00 ; '.'
0000000000008b6c         dd         0x00000028                                  ; Length of the record
0000000000008b70         dd         0x000008e8                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008b74         db         0xfc, 0xd5, 2 dup (0xff)                    ; begin 0x6170
0000000000008b78         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x6245)
0000000000008b7c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b7d         db  0x41 ; 'A'
0000000000008b7e         db  0x0e ; '.'
0000000000008b7f         db  0x10 ; '.'
0000000000008b80         db  0x86 ; '.'
0000000000008b81         db  0x02 ; '.'
0000000000008b82         db  0x41 ; 'A'
0000000000008b83         db  0x0e ; '.'
0000000000008b84         db  0x18 ; '.'
0000000000008b85         db  0x83 ; '.'
0000000000008b86         db  0x03 ; '.'
0000000000008b87         db  0x50 ; 'P'
0000000000008b88         db  0x0e ; '.'
0000000000008b89         db  0xd0 ; '.'
0000000000008b8a         db  0x01 ; '.'
0000000000008b8b         db  0x02 ; '.'
0000000000008b8c         db  0xab ; '.'
0000000000008b8d         db  0x0a ; '.'
0000000000008b8e         db  0x0e ; '.'
0000000000008b8f         db  0x18 ; '.'
0000000000008b90         db  0x41 ; 'A'
0000000000008b91         db  0x0e ; '.'
0000000000008b92         db  0x10 ; '.'
0000000000008b93         db  0x41 ; 'A'
0000000000008b94         db  0x0e ; '.'
0000000000008b95         db  0x08 ; '.'
0000000000008b96         db  0x41 ; 'A'
0000000000008b97         db  0x0b ; '.'
0000000000008b98         dd         0x0000001c                                  ; Length of the record
0000000000008b9c         dd         0x00000914                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008ba0         db         0xb0, 0xd6, 2 dup (0xff)                    ; begin 0x6250
0000000000008ba4         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x62d0)
0000000000008ba8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ba9         db  0x41 ; 'A'
0000000000008baa         db  0x0e ; '.'
0000000000008bab         db  0x10 ; '.'
0000000000008bac         db  0x83 ; '.'
0000000000008bad         db  0x02 ; '.'
0000000000008bae         db  0x02 ; '.'
0000000000008baf         db  0x7a ; 'z'
0000000000008bb0         db  0x0e ; '.'
0000000000008bb1         db  0x08 ; '.'
0000000000008bb2         db  0x00 ; '.'
0000000000008bb3         db  0x00 ; '.'
0000000000008bb4         db  0x00 ; '.'
0000000000008bb5         db  0x00 ; '.'
0000000000008bb6         db  0x00 ; '.'
0000000000008bb7         db  0x00 ; '.'
0000000000008bb8         dd         0x00000018                                  ; Length of the record
0000000000008bbc         dd         0x00000934                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008bc0         db         0x10, 0xd7, 2 dup (0xff)                    ; begin 0x62d0
0000000000008bc4         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x62ea)
0000000000008bc8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008bc9         db  0x41 ; 'A'
0000000000008bca         db  0x0e ; '.'
0000000000008bcb         db  0x10 ; '.'
0000000000008bcc         db  0x83 ; '.'
0000000000008bcd         db  0x02 ; '.'
0000000000008bce         db  0x53 ; 'S'
0000000000008bcf         db  0x0a ; '.'
0000000000008bd0         db  0x0e ; '.'
0000000000008bd1         db  0x08 ; '.'
0000000000008bd2         db  0x41 ; 'A'
0000000000008bd3         db  0x0b ; '.'
0000000000008bd4         dd         0x00000010                                  ; Length of the record
0000000000008bd8         dd         0x00000950                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008bdc         db         0x14, 0xd7, 2 dup (0xff)                    ; begin 0x62f0
0000000000008be0         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x6314)
0000000000008be4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008be5         db  0x5f ; '_'
0000000000008be6         db  0x0e ; '.'
0000000000008be7         db  0x10 ; '.'
0000000000008be8         dd         0x00000010                                  ; Length of the record
0000000000008bec         dd         0x00000964                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008bf0         db         0x30, 0xd7, 2 dup (0xff)                    ; begin 0x6320
0000000000008bf4         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x6322)
0000000000008bf8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008bf9         align      4
0000000000008bfc         dd         0x00000020                                  ; Length of the record
0000000000008c00         dd         0x00000978                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008c04         db         0x2c, 0xd7, 2 dup (0xff)                    ; begin 0x6330
0000000000008c08         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x6366)
0000000000008c0c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c0d         db  0x44 ; 'D'
0000000000008c0e         db  0x0e ; '.'
0000000000008c0f         db  0x10 ; '.'
0000000000008c10         db  0x83 ; '.'
0000000000008c11         db  0x02 ; '.'
0000000000008c12         db  0x5d ; ']'
0000000000008c13         db  0x0a ; '.'
0000000000008c14         db  0x0e ; '.'
0000000000008c15         db  0x08 ; '.'
0000000000008c16         db  0x47 ; 'G'
0000000000008c17         db  0x0b ; '.'
0000000000008c18         db  0x48 ; 'H'
0000000000008c19         db  0x0a ; '.'
0000000000008c1a         db  0x0e ; '.'
0000000000008c1b         db  0x08 ; '.'
0000000000008c1c         db  0x41 ; 'A'
0000000000008c1d         db  0x0b ; '.'
0000000000008c1e         db  0x00 ; '.'
0000000000008c1f         db  0x00 ; '.'
0000000000008c20         dd         0x00000010                                  ; Length of the record
0000000000008c24         dd         0x0000099c                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008c28         db         0x48, 0xd7, 2 dup (0xff)                    ; begin 0x6370
0000000000008c2c         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x6394)
0000000000008c30         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c31         db  0x5f ; '_'
0000000000008c32         db  0x0e ; '.'
0000000000008c33         db  0x10 ; '.'
0000000000008c34         dd         0x00000014                                  ; Length of the record
0000000000008c38         dd         0x000009b0                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008c3c         db         0x64, 0xd7, 2 dup (0xff)                    ; begin 0x63a0
0000000000008c40         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x6422)
0000000000008c44         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c45         db  0x02 ; '.'
0000000000008c46         db  0x5f ; '_'
0000000000008c47         db  0x0e ; '.'
0000000000008c48         db  0x10 ; '.'
0000000000008c49         db  0x49 ; 'I'
0000000000008c4a         db  0x0e ; '.'
0000000000008c4b         db  0x08 ; '.'
0000000000008c4c         dd         0x00000014                                  ; Length of the record
0000000000008c50         dd         0x000009c8                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008c54         db         0xdc, 0xd7, 2 dup (0xff)                    ; begin 0x6430
0000000000008c58         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x647a)
0000000000008c5c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c5d         db  0x02 ; '.'
0000000000008c5e         db  0x45 ; 'E'
0000000000008c5f         db  0x0e ; '.'
0000000000008c60         db  0x10 ; '.'
0000000000008c61         db  0x00 ; '.'
0000000000008c62         db  0x00 ; '.'
0000000000008c63         db  0x00 ; '.'
0000000000008c64         dd         0x00000018                                  ; Length of the record
0000000000008c68         dd         0x000009e0                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008c6c         db         0x14, 0xd8, 2 dup (0xff)                    ; begin 0x6480
0000000000008c70         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x6497)
0000000000008c74         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c75         db  0x41 ; 'A'
0000000000008c76         db  0x0e ; '.'
0000000000008c77         db  0x10 ; '.'
0000000000008c78         db  0x83 ; '.'
0000000000008c79         db  0x02 ; '.'
0000000000008c7a         db  0x51 ; 'Q'
0000000000008c7b         db  0x0e ; '.'
0000000000008c7c         db  0x08 ; '.'
0000000000008c7d         db  0x00 ; '.'
0000000000008c7e         db  0x00 ; '.'
0000000000008c7f         db  0x00 ; '.'
0000000000008c80         dd         0x00000018                                  ; Length of the record
0000000000008c84         dd         0x000009fc                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008c88         db         0x18, 0xd8, 2 dup (0xff)                    ; begin 0x64a0
0000000000008c8c         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x64ce)
0000000000008c90         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c91         db  0x47 ; 'G'
0000000000008c92         db  0x0e ; '.'
0000000000008c93         db  0x10 ; '.'
0000000000008c94         db  0x61 ; 'a'
0000000000008c95         db  0x0a ; '.'
0000000000008c96         db  0x0e ; '.'
0000000000008c97         db  0x08 ; '.'
0000000000008c98         db  0x41 ; 'A'
0000000000008c99         db  0x0b ; '.'
0000000000008c9a         db  0x00 ; '.'
0000000000008c9b         db  0x00 ; '.'
0000000000008c9c         dd         0x00000024                                  ; Length of the record
0000000000008ca0         dd         0x00000a18                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008ca4         db         0x2c, 0xd8, 2 dup (0xff)                    ; begin 0x64d0
0000000000008ca8         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x64f8)
0000000000008cac         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008cad         db  0x41 ; 'A'
0000000000008cae         db  0x0e ; '.'
0000000000008caf         db  0x10 ; '.'
0000000000008cb0         db  0x86 ; '.'
0000000000008cb1         db  0x02 ; '.'
0000000000008cb2         db  0x41 ; 'A'
0000000000008cb3         db  0x0e ; '.'
0000000000008cb4         db  0x18 ; '.'
0000000000008cb5         db  0x83 ; '.'
0000000000008cb6         db  0x03 ; '.'
0000000000008cb7         db  0x4d ; 'M'
0000000000008cb8         db  0x0e ; '.'
0000000000008cb9         db  0x20 ; ' '
0000000000008cba         db  0x49 ; 'I'
0000000000008cbb         db  0x0e ; '.'
0000000000008cbc         db  0x18 ; '.'
0000000000008cbd         db  0x47 ; 'G'
0000000000008cbe         db  0x0e ; '.'
0000000000008cbf         db  0x10 ; '.'
0000000000008cc0         db  0x41 ; 'A'
0000000000008cc1         db  0x0e ; '.'
0000000000008cc2         db  0x08 ; '.'
0000000000008cc3         db  0x00 ; '.'
0000000000008cc4         dd         0x00000018                                  ; Length of the record
0000000000008cc8         dd         0x00000a40                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008ccc         db         0x34, 0xd8, 2 dup (0xff)                    ; begin 0x6500
0000000000008cd0         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x6513)
0000000000008cd4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008cd5         db  0x41 ; 'A'
0000000000008cd6         db  0x0e ; '.'
0000000000008cd7         db  0x10 ; '.'
0000000000008cd8         db  0x83 ; '.'
0000000000008cd9         db  0x02 ; '.'
0000000000008cda         db  0x50 ; 'P'
0000000000008cdb         db  0x0e ; '.'
0000000000008cdc         db  0x08 ; '.'
0000000000008cdd         db  0x00 ; '.'
0000000000008cde         db  0x00 ; '.'
0000000000008cdf         db  0x00 ; '.'
0000000000008ce0         dd         0x00000014                                  ; Length of the record
0000000000008ce4         dd         0x00000a5c                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008ce8         db         0x38, 0xd8, 2 dup (0xff)                    ; begin 0x6520
0000000000008cec         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x6555)
0000000000008cf0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008cf1         db  0x4b ; 'K'
0000000000008cf2         db  0x0e ; '.'
0000000000008cf3         db  0x10 ; '.'
0000000000008cf4         db  0x00 ; '.'
0000000000008cf5         db  0x00 ; '.'
0000000000008cf6         db  0x00 ; '.'
0000000000008cf7         db  0x00 ; '.'
0000000000008cf8         dd         0x0000003c                                  ; Length of the record
0000000000008cfc         dd         0x00000a74                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008d00         db         0x60, 0xd8, 2 dup (0xff)                    ; begin 0x6560
0000000000008d04         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x65e3)
0000000000008d08         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d09         db  0x42 ; 'B'
0000000000008d0a         db  0x0e ; '.'
0000000000008d0b         db  0x10 ; '.'
0000000000008d0c         db  0x8d ; '.'
0000000000008d0d         db  0x02 ; '.'
0000000000008d0e         db  0x42 ; 'B'
0000000000008d0f         db  0x0e ; '.'
0000000000008d10         db  0x18 ; '.'
0000000000008d11         db  0x8c ; '.'
0000000000008d12         db  0x03 ; '.'
0000000000008d13         db  0x44 ; 'D'
0000000000008d14         db  0x0e ; '.'
0000000000008d15         db  0x20 ; ' '
0000000000008d16         db  0x86 ; '.'
0000000000008d17         db  0x04 ; '.'
0000000000008d18         db  0x41 ; 'A'
0000000000008d19         db  0x0e ; '.'
0000000000008d1a         db  0x28 ; '('
0000000000008d1b         db  0x83 ; '.'
0000000000008d1c         db  0x05 ; '.'
0000000000008d1d         db  0x4a ; 'J'
0000000000008d1e         db  0x0e ; '.'
0000000000008d1f         db  0x40 ; '@'
0000000000008d20         db  0x02 ; '.'
0000000000008d21         db  0x64 ; 'd'
0000000000008d22         db  0x0a ; '.'
0000000000008d23         db  0x0e ; '.'
0000000000008d24         db  0x28 ; '('
0000000000008d25         db  0x41 ; 'A'
0000000000008d26         db  0x0e ; '.'
0000000000008d27         db  0x20 ; ' '
0000000000008d28         db  0x41 ; 'A'
0000000000008d29         db  0x0e ; '.'
0000000000008d2a         db  0x18 ; '.'
0000000000008d2b         db  0x42 ; 'B'
0000000000008d2c         db  0x0e ; '.'
0000000000008d2d         db  0x10 ; '.'
0000000000008d2e         db  0x42 ; 'B'
0000000000008d2f         db  0x0e ; '.'
0000000000008d30         db  0x08 ; '.'
0000000000008d31         db  0x41 ; 'A'
0000000000008d32         db  0x0b ; '.'
0000000000008d33         db  0x00 ; '.'
0000000000008d34         db  0x00 ; '.'
0000000000008d35         db  0x00 ; '.'
0000000000008d36         db  0x00 ; '.'
0000000000008d37         db  0x00 ; '.'
0000000000008d38         dd         0x00000038                                  ; Length of the record
0000000000008d3c         dd         0x00000ab4                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008d40         db         0xb0, 0xd8, 2 dup (0xff)                    ; begin 0x65f0
0000000000008d44         db         0x85, 0x01, 2 dup (0x00)                    ; length 0x185 (end at 0x6775)
0000000000008d48         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d49         db  0x42 ; 'B'
0000000000008d4a         db  0x0e ; '.'
0000000000008d4b         db  0x10 ; '.'
0000000000008d4c         db  0x8d ; '.'
0000000000008d4d         db  0x02 ; '.'
0000000000008d4e         db  0x42 ; 'B'
0000000000008d4f         db  0x0e ; '.'
0000000000008d50         db  0x18 ; '.'
0000000000008d51         db  0x8c ; '.'
0000000000008d52         db  0x03 ; '.'
0000000000008d53         db  0x44 ; 'D'
0000000000008d54         db  0x0e ; '.'
0000000000008d55         db  0x20 ; ' '
0000000000008d56         db  0x86 ; '.'
0000000000008d57         db  0x04 ; '.'
0000000000008d58         db  0x41 ; 'A'
0000000000008d59         db  0x0e ; '.'
0000000000008d5a         db  0x28 ; '('
0000000000008d5b         db  0x83 ; '.'
0000000000008d5c         db  0x05 ; '.'
0000000000008d5d         db  0x50 ; 'P'
0000000000008d5e         db  0x0e ; '.'
0000000000008d5f         db  0x40 ; '@'
0000000000008d60         db  0x02 ; '.'
0000000000008d61         db  0x6f ; 'o'
0000000000008d62         db  0x0a ; '.'
0000000000008d63         db  0x0e ; '.'
0000000000008d64         db  0x28 ; '('
0000000000008d65         db  0x41 ; 'A'
0000000000008d66         db  0x0e ; '.'
0000000000008d67         db  0x20 ; ' '
0000000000008d68         db  0x41 ; 'A'
0000000000008d69         db  0x0e ; '.'
0000000000008d6a         db  0x18 ; '.'
0000000000008d6b         db  0x42 ; 'B'
0000000000008d6c         db  0x0e ; '.'
0000000000008d6d         db  0x10 ; '.'
0000000000008d6e         db  0x42 ; 'B'
0000000000008d6f         db  0x0e ; '.'
0000000000008d70         db  0x08 ; '.'
0000000000008d71         db  0x42 ; 'B'
0000000000008d72         db  0x0b ; '.'
0000000000008d73         db  0x00 ; '.'
0000000000008d74         dd         0x00000038                                  ; Length of the record
0000000000008d78         dd         0x00000af0                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008d7c         db         0x04, 0xda, 2 dup (0xff)                    ; begin 0x6780
0000000000008d80         db         0xdb, 3 dup (0x00)                          ; length 0xdb (end at 0x685b)
0000000000008d84         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d85         db  0x41 ; 'A'
0000000000008d86         db  0x0e ; '.'
0000000000008d87         db  0x10 ; '.'
0000000000008d88         db  0x86 ; '.'
0000000000008d89         db  0x02 ; '.'
0000000000008d8a         db  0x48 ; 'H'
0000000000008d8b         db  0x0e ; '.'
0000000000008d8c         db  0x18 ; '.'
0000000000008d8d         db  0x83 ; '.'
0000000000008d8e         db  0x03 ; '.'
0000000000008d8f         db  0x4b ; 'K'
0000000000008d90         db  0x0e ; '.'
0000000000008d91         db  0x30 ; '0'
0000000000008d92         db  0x70 ; 'p'
0000000000008d93         db  0x0a ; '.'
0000000000008d94         db  0x0e ; '.'
0000000000008d95         db  0x18 ; '.'
0000000000008d96         db  0x41 ; 'A'
0000000000008d97         db  0x0e ; '.'
0000000000008d98         db  0x10 ; '.'
0000000000008d99         db  0x41 ; 'A'
0000000000008d9a         db  0x0e ; '.'
0000000000008d9b         db  0x08 ; '.'
0000000000008d9c         db  0x4a ; 'J'
0000000000008d9d         db  0x0b ; '.'
0000000000008d9e         db  0x02 ; '.'
0000000000008d9f         db  0x66 ; 'f'
0000000000008da0         db  0x0a ; '.'
0000000000008da1         db  0x0e ; '.'
0000000000008da2         db  0x18 ; '.'
0000000000008da3         db  0x43 ; 'C'
0000000000008da4         db  0x0e ; '.'
0000000000008da5         db  0x10 ; '.'
0000000000008da6         db  0x41 ; 'A'
0000000000008da7         db  0x0e ; '.'
0000000000008da8         db  0x08 ; '.'
0000000000008da9         db  0x46 ; 'F'
0000000000008daa         db  0x0b ; '.'
0000000000008dab         db  0x00 ; '.'
0000000000008dac         db  0x00 ; '.'
0000000000008dad         db  0x00 ; '.'
0000000000008dae         db  0x00 ; '.'
0000000000008daf         db  0x00 ; '.'
0000000000008db0         dd         0x0000004c                                  ; Length of the record
0000000000008db4         dd         0x00000b2c                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008db8         db         0xa8, 0xda, 2 dup (0xff)                    ; begin 0x6860
0000000000008dbc         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x68dd)
0000000000008dc0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008dc1         db  0x42 ; 'B'
0000000000008dc2         db  0x0e ; '.'
0000000000008dc3         db  0x10 ; '.'
0000000000008dc4         db  0x8c ; '.'
0000000000008dc5         db  0x02 ; '.'
0000000000008dc6         db  0x41 ; 'A'
0000000000008dc7         db  0x0e ; '.'
0000000000008dc8         db  0x18 ; '.'
0000000000008dc9         db  0x86 ; '.'
0000000000008dca         db  0x03 ; '.'
0000000000008dcb         db  0x44 ; 'D'
0000000000008dcc         db  0x0e ; '.'
0000000000008dcd         db  0x20 ; ' '
0000000000008dce         db  0x83 ; '.'
0000000000008dcf         db  0x04 ; '.'
0000000000008dd0         db  0x69 ; 'i'
0000000000008dd1         db  0x0a ; '.'
0000000000008dd2         db  0x0e ; '.'
0000000000008dd3         db  0x18 ; '.'
0000000000008dd4         db  0x41 ; 'A'
0000000000008dd5         db  0x0e ; '.'
0000000000008dd6         db  0x10 ; '.'
0000000000008dd7         db  0x42 ; 'B'
0000000000008dd8         db  0x0e ; '.'
0000000000008dd9         db  0x08 ; '.'
0000000000008dda         db  0x45 ; 'E'
0000000000008ddb         db  0x0b ; '.'
0000000000008ddc         db  0x55 ; 'U'
0000000000008ddd         db  0x0a ; '.'
0000000000008dde         db  0x0e ; '.'
0000000000008ddf         db  0x18 ; '.'
0000000000008de0         db  0x41 ; 'A'
0000000000008de1         db  0x0e ; '.'
0000000000008de2         db  0x10 ; '.'
0000000000008de3         db  0x42 ; 'B'
0000000000008de4         db  0x0e ; '.'
0000000000008de5         db  0x08 ; '.'
0000000000008de6         db  0x48 ; 'H'
0000000000008de7         db  0x0b ; '.'
0000000000008de8         db  0x41 ; 'A'
0000000000008de9         db  0x0a ; '.'
0000000000008dea         db  0x0e ; '.'
0000000000008deb         db  0x18 ; '.'
0000000000008dec         db  0x46 ; 'F'
0000000000008ded         db  0x0e ; '.'
0000000000008dee         db  0x10 ; '.'
0000000000008def         db  0x42 ; 'B'
0000000000008df0         db  0x0e ; '.'
0000000000008df1         db  0x08 ; '.'
0000000000008df2         db  0x47 ; 'G'
0000000000008df3         db  0x0b ; '.'
0000000000008df4         db  0x49 ; 'I'
0000000000008df5         db  0x0e ; '.'
0000000000008df6         db  0x18 ; '.'
0000000000008df7         db  0x41 ; 'A'
0000000000008df8         db  0x0e ; '.'
0000000000008df9         db  0x10 ; '.'
0000000000008dfa         db  0x42 ; 'B'
0000000000008dfb         db  0x0e ; '.'
0000000000008dfc         db  0x08 ; '.'
0000000000008dfd         db  0x00 ; '.'
0000000000008dfe         db  0x00 ; '.'
0000000000008dff         db  0x00 ; '.'
0000000000008e00         dd         0x0000001c                                  ; Length of the record
0000000000008e04         dd         0x00000b7c                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008e08         db         0xd8, 0xda, 2 dup (0xff)                    ; begin 0x68e0
0000000000008e0c         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x6940)
0000000000008e10         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e11         db  0x44 ; 'D'
0000000000008e12         db  0x0e ; '.'
0000000000008e13         db  0x10 ; '.'
0000000000008e14         db  0x75 ; 'u'
0000000000008e15         db  0x0a ; '.'
0000000000008e16         db  0x0e ; '.'
0000000000008e17         db  0x08 ; '.'
0000000000008e18         db  0x47 ; 'G'
0000000000008e19         db  0x0b ; '.'
0000000000008e1a         db  0x5f ; '_'
0000000000008e1b         db  0x0e ; '.'
0000000000008e1c         db  0x08 ; '.'
0000000000008e1d         db  0x00 ; '.'
0000000000008e1e         db  0x00 ; '.'
0000000000008e1f         db  0x00 ; '.'
0000000000008e20         dd         0x0000001c                                  ; Length of the record
0000000000008e24         dd         0x00000b9c                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008e28         db         0x18, 0xdb, 2 dup (0xff)                    ; begin 0x6940
0000000000008e2c         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x697c)
0000000000008e30         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e31         db  0x44 ; 'D'
0000000000008e32         db  0x0e ; '.'
0000000000008e33         db  0x10 ; '.'
0000000000008e34         db  0x61 ; 'a'
0000000000008e35         db  0x0a ; '.'
0000000000008e36         db  0x0e ; '.'
0000000000008e37         db  0x08 ; '.'
0000000000008e38         db  0x4b ; 'K'
0000000000008e39         db  0x0b ; '.'
0000000000008e3a         db  0x4b ; 'K'
0000000000008e3b         db  0x0e ; '.'
0000000000008e3c         db  0x08 ; '.'
0000000000008e3d         db  0x00 ; '.'
0000000000008e3e         db  0x00 ; '.'
0000000000008e3f         db  0x00 ; '.'
0000000000008e40         dd         0x00000034                                  ; Length of the record
0000000000008e44         dd         0x00000bbc                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008e48         db         0x38, 0xdb, 2 dup (0xff)                    ; begin 0x6980
0000000000008e4c         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x69fb)
0000000000008e50         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e51         db  0x42 ; 'B'
0000000000008e52         db  0x0e ; '.'
0000000000008e53         db  0x10 ; '.'
0000000000008e54         db  0x8c ; '.'
0000000000008e55         db  0x02 ; '.'
0000000000008e56         db  0x41 ; 'A'
0000000000008e57         db  0x0e ; '.'
0000000000008e58         db  0x18 ; '.'
0000000000008e59         db  0x86 ; '.'
0000000000008e5a         db  0x03 ; '.'
0000000000008e5b         db  0x41 ; 'A'
0000000000008e5c         db  0x0e ; '.'
0000000000008e5d         db  0x20 ; ' '
0000000000008e5e         db  0x83 ; '.'
0000000000008e5f         db  0x04 ; '.'
0000000000008e60         db  0x7d ; '}'
0000000000008e61         db  0x0a ; '.'
0000000000008e62         db  0x0e ; '.'
0000000000008e63         db  0x18 ; '.'
0000000000008e64         db  0x41 ; 'A'
0000000000008e65         db  0x0e ; '.'
0000000000008e66         db  0x10 ; '.'
0000000000008e67         db  0x42 ; 'B'
0000000000008e68         db  0x0e ; '.'
0000000000008e69         db  0x08 ; '.'
0000000000008e6a         db  0x44 ; 'D'
0000000000008e6b         db  0x0b ; '.'
0000000000008e6c         db  0x60 ; '`'
0000000000008e6d         db  0x0a ; '.'
0000000000008e6e         db  0x0e ; '.'
0000000000008e6f         db  0x18 ; '.'
0000000000008e70         db  0x41 ; 'A'
0000000000008e71         db  0x0e ; '.'
0000000000008e72         db  0x10 ; '.'
0000000000008e73         db  0x42 ; 'B'
0000000000008e74         db  0x0e ; '.'
0000000000008e75         db  0x08 ; '.'
0000000000008e76         db  0x45 ; 'E'
0000000000008e77         db  0x0b ; '.'
0000000000008e78         dd         0x0000001c                                  ; Length of the record
0000000000008e7c         dd         0x00000bf4                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008e80         db         0x80, 0xdb, 2 dup (0xff)                    ; begin 0x6a00
0000000000008e84         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x6a40)
0000000000008e88         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e89         db  0x44 ; 'D'
0000000000008e8a         db  0x0e ; '.'
0000000000008e8b         db  0x10 ; '.'
0000000000008e8c         db  0x83 ; '.'
0000000000008e8d         db  0x02 ; '.'
0000000000008e8e         db  0x5a ; 'Z'
0000000000008e8f         db  0x0a ; '.'
0000000000008e90         db  0x0e ; '.'
0000000000008e91         db  0x08 ; '.'
0000000000008e92         db  0x4a ; 'J'
0000000000008e93         db  0x0b ; '.'
0000000000008e94         db  0x53 ; 'S'
0000000000008e95         db  0x0e ; '.'
0000000000008e96         db  0x08 ; '.'
0000000000008e97         db  0x00 ; '.'
0000000000008e98         dd         0x0000002c                                  ; Length of the record
0000000000008e9c         dd         0x00000c14                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008ea0         db         0xa0, 0xdb, 2 dup (0xff)                    ; begin 0x6a40
0000000000008ea4         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x6a97)
0000000000008ea8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ea9         db  0x63 ; 'c'
0000000000008eaa         db  0x0e ; '.'
0000000000008eab         db  0x10 ; '.'
0000000000008eac         db  0x8c ; '.'
0000000000008ead         db  0x02 ; '.'
0000000000008eae         db  0x41 ; 'A'
0000000000008eaf         db  0x0e ; '.'
0000000000008eb0         db  0x18 ; '.'
0000000000008eb1         db  0x86 ; '.'
0000000000008eb2         db  0x03 ; '.'
0000000000008eb3         db  0x44 ; 'D'
0000000000008eb4         db  0x0e ; '.'
0000000000008eb5         db  0x20 ; ' '
0000000000008eb6         db  0x83 ; '.'
0000000000008eb7         db  0x04 ; '.'
0000000000008eb8         db  0x6b ; 'k'
0000000000008eb9         db  0x0e ; '.'
0000000000008eba         db  0x18 ; '.'
0000000000008ebb         db  0x41 ; 'A'
0000000000008ebc         db  0x0e ; '.'
0000000000008ebd         db  0x10 ; '.'
0000000000008ebe         db  0x42 ; 'B'
0000000000008ebf         db  0x0e ; '.'
0000000000008ec0         db  0x08 ; '.'
0000000000008ec1         db  0x00 ; '.'
0000000000008ec2         db  0x00 ; '.'
0000000000008ec3         db  0x00 ; '.'
0000000000008ec4         db  0x00 ; '.'
0000000000008ec5         db  0x00 ; '.'
0000000000008ec6         db  0x00 ; '.'
0000000000008ec7         db  0x00 ; '.'
0000000000008ec8         dd         0x00000044                                  ; Length of the record
0000000000008ecc         dd         0x00000c44                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008ed0         db         0xd0, 0xdb, 2 dup (0xff)                    ; begin 0x6aa0
0000000000008ed4         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x6b05)
0000000000008ed8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ed9         db  0x42 ; 'B'
0000000000008eda         db  0x0e ; '.'
0000000000008edb         db  0x10 ; '.'
0000000000008edc         db  0x8f ; '.'
0000000000008edd         db  0x02 ; '.'
0000000000008ede         db  0x42 ; 'B'
0000000000008edf         db  0x0e ; '.'
0000000000008ee0         db  0x18 ; '.'
0000000000008ee1         db  0x8e ; '.'
0000000000008ee2         db  0x03 ; '.'
0000000000008ee3         db  0x45 ; 'E'
0000000000008ee4         db  0x0e ; '.'
0000000000008ee5         db  0x20 ; ' '
0000000000008ee6         db  0x8d ; '.'
0000000000008ee7         db  0x04 ; '.'
0000000000008ee8         db  0x42 ; 'B'
0000000000008ee9         db  0x0e ; '.'
0000000000008eea         db  0x28 ; '('
0000000000008eeb         db  0x8c ; '.'
0000000000008eec         db  0x05 ; '.'
0000000000008eed         db  0x48 ; 'H'
0000000000008eee         db  0x0e ; '.'
0000000000008eef         db  0x30 ; '0'
0000000000008ef0         db  0x86 ; '.'
0000000000008ef1         db  0x06 ; '.'
0000000000008ef2         db  0x48 ; 'H'
0000000000008ef3         db  0x0e ; '.'
0000000000008ef4         db  0x38 ; '8'
0000000000008ef5         db  0x83 ; '.'
0000000000008ef6         db  0x07 ; '.'
0000000000008ef7         db  0x4d ; 'M'
0000000000008ef8         db  0x0e ; '.'
0000000000008ef9         db  0x40 ; '@'
0000000000008efa         db  0x72 ; 'r'
0000000000008efb         db  0x0e ; '.'
0000000000008efc         db  0x38 ; '8'
0000000000008efd         db  0x41 ; 'A'
0000000000008efe         db  0x0e ; '.'
0000000000008eff         db  0x30 ; '0'
0000000000008f00         db  0x41 ; 'A'
0000000000008f01         db  0x0e ; '.'
0000000000008f02         db  0x28 ; '('
0000000000008f03         db  0x42 ; 'B'
0000000000008f04         db  0x0e ; '.'
0000000000008f05         db  0x20 ; ' '
0000000000008f06         db  0x42 ; 'B'
0000000000008f07         db  0x0e ; '.'
0000000000008f08         db  0x18 ; '.'
0000000000008f09         db  0x42 ; 'B'
0000000000008f0a         db  0x0e ; '.'
0000000000008f0b         db  0x10 ; '.'
0000000000008f0c         db  0x42 ; 'B'
0000000000008f0d         db  0x0e ; '.'
0000000000008f0e         db  0x08 ; '.'
0000000000008f0f         db  0x00 ; '.'
0000000000008f10         dd         0x00000014                                  ; Length of the record
0000000000008f14         dd         0x00000c8c                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008f18         db         0xf8, 0xdb, 2 dup (0xff)                    ; begin 0x6b10
0000000000008f1c         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x6b12)
0000000000008f20         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008f21         align      8
0000000000008f28         dd         0x00000010                                  ; Length of the record
0000000000008f2c         dd         0x00000ca4                                  ; FDE: parent CIE at 0x8288 (FDE encoding = 0x1B)
0000000000008f30         db         0xf0, 0xdb, 2 dup (0xff)                    ; begin 0x6b20
0000000000008f34         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x6b2e)
0000000000008f38         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008f39         align      64


        ; Segment Segment 3
        ; Range: [0x2099d0; 0x20a558[ (2952 bytes)
        ; File offset : [39376; 41508[ (2132 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x2099d0; 0x2099d8[ (8 bytes)
        ; File offset : [39376; 39384[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
00000000002099d0         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x2099d8; 0x2099e0[ (8 bytes)
        ; File offset : [39384; 39392[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
00000000002099d8         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x2099e0; 0x209bd8[ (504 bytes)
        ; File offset : [39392; 39896[ (504 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     longopts:
00000000002099e0         db  0xf7 ; '.'                                         ; DATA XREF=main+196
00000000002099e1         db  0x6d ; 'm'
00000000002099e2         db  0x00 ; '.'
00000000002099e3         db  0x00 ; '.'
00000000002099e4         db  0x00 ; '.'
00000000002099e5         db  0x00 ; '.'
00000000002099e6         db  0x00 ; '.'
00000000002099e7         db  0x00 ; '.'
00000000002099e8         db  0x00 ; '.'
00000000002099e9         db  0x00 ; '.'
00000000002099ea         db  0x00 ; '.'
00000000002099eb         db  0x00 ; '.'
00000000002099ec         db  0x00 ; '.'
00000000002099ed         db  0x00 ; '.'
00000000002099ee         db  0x00 ; '.'
00000000002099ef         db  0x00 ; '.'
00000000002099f0         db  0x00 ; '.'
00000000002099f1         db  0x00 ; '.'
00000000002099f2         db  0x00 ; '.'
00000000002099f3         db  0x00 ; '.'
00000000002099f4         db  0x00 ; '.'
00000000002099f5         db  0x00 ; '.'
00000000002099f6         db  0x00 ; '.'
00000000002099f7         db  0x00 ; '.'
00000000002099f8         db  0x69 ; 'i'
00000000002099f9         db  0x00 ; '.'
00000000002099fa         db  0x00 ; '.'
00000000002099fb         db  0x00 ; '.'
00000000002099fc         db  0x00 ; '.'
00000000002099fd         db  0x00 ; '.'
00000000002099fe         db  0x00 ; '.'
00000000002099ff         db  0x00 ; '.'
0000000000209a00         db  0x0a ; '.'
0000000000209a01         db  0x6e ; 'n'
0000000000209a02         db  0x00 ; '.'
0000000000209a03         db  0x00 ; '.'
0000000000209a04         db  0x00 ; '.'
0000000000209a05         db  0x00 ; '.'
0000000000209a06         db  0x00 ; '.'
0000000000209a07         db  0x00 ; '.'
0000000000209a08         db  0x00 ; '.'
0000000000209a09         db  0x00 ; '.'
0000000000209a0a         db  0x00 ; '.'
0000000000209a0b         db  0x00 ; '.'
0000000000209a0c         db  0x00 ; '.'
0000000000209a0d         db  0x00 ; '.'
0000000000209a0e         db  0x00 ; '.'
0000000000209a0f         db  0x00 ; '.'
0000000000209a10         db  0x00 ; '.'
0000000000209a11         db  0x00 ; '.'
0000000000209a12         db  0x00 ; '.'
0000000000209a13         db  0x00 ; '.'
0000000000209a14         db  0x00 ; '.'
0000000000209a15         db  0x00 ; '.'
0000000000209a16         db  0x00 ; '.'
0000000000209a17         db  0x00 ; '.'
0000000000209a18         db  0x30 ; '0'
0000000000209a19         db  0x00 ; '.'
0000000000209a1a         db  0x00 ; '.'
0000000000209a1b         db  0x00 ; '.'
0000000000209a1c         db  0x00 ; '.'
0000000000209a1d         db  0x00 ; '.'
0000000000209a1e         db  0x00 ; '.'
0000000000209a1f         db  0x00 ; '.'
0000000000209a20         db  0x0f ; '.'
0000000000209a21         db  0x6e ; 'n'
0000000000209a22         db  0x00 ; '.'
0000000000209a23         db  0x00 ; '.'
0000000000209a24         db  0x00 ; '.'
0000000000209a25         db  0x00 ; '.'
0000000000209a26         db  0x00 ; '.'
0000000000209a27         db  0x00 ; '.'
0000000000209a28         db  0x01 ; '.'
0000000000209a29         db  0x00 ; '.'
0000000000209a2a         db  0x00 ; '.'
0000000000209a2b         db  0x00 ; '.'
0000000000209a2c         db  0x00 ; '.'
0000000000209a2d         db  0x00 ; '.'
0000000000209a2e         db  0x00 ; '.'
0000000000209a2f         db  0x00 ; '.'
0000000000209a30         db  0x00 ; '.'
0000000000209a31         db  0x00 ; '.'
0000000000209a32         db  0x00 ; '.'
0000000000209a33         db  0x00 ; '.'
0000000000209a34         db  0x00 ; '.'
0000000000209a35         db  0x00 ; '.'
0000000000209a36         db  0x00 ; '.'
0000000000209a37         db  0x00 ; '.'
0000000000209a38         db  0x75 ; 'u'
0000000000209a39         db  0x00 ; '.'
0000000000209a3a         db  0x00 ; '.'
0000000000209a3b         db  0x00 ; '.'
0000000000209a3c         db  0x00 ; '.'
0000000000209a3d         db  0x00 ; '.'
0000000000209a3e         db  0x00 ; '.'
0000000000209a3f         db  0x00 ; '.'
0000000000209a40         db  0x15 ; '.'
0000000000209a41         db  0x6e ; 'n'
0000000000209a42         db  0x00 ; '.'
0000000000209a43         db  0x00 ; '.'
0000000000209a44         db  0x00 ; '.'
0000000000209a45         db  0x00 ; '.'
0000000000209a46         db  0x00 ; '.'
0000000000209a47         db  0x00 ; '.'
0000000000209a48         db  0x01 ; '.'
0000000000209a49         db  0x00 ; '.'
0000000000209a4a         db  0x00 ; '.'
0000000000209a4b         db  0x00 ; '.'
0000000000209a4c         db  0x00 ; '.'
0000000000209a4d         db  0x00 ; '.'
0000000000209a4e         db  0x00 ; '.'
0000000000209a4f         db  0x00 ; '.'
0000000000209a50         db  0x00 ; '.'
0000000000209a51         db  0x00 ; '.'
0000000000209a52         db  0x00 ; '.'
0000000000209a53         db  0x00 ; '.'
0000000000209a54         db  0x00 ; '.'
0000000000209a55         db  0x00 ; '.'
0000000000209a56         db  0x00 ; '.'
0000000000209a57         db  0x00 ; '.'
0000000000209a58         db  0x43 ; 'C'
0000000000209a59         db  0x00 ; '.'
0000000000209a5a         db  0x00 ; '.'
0000000000209a5b         db  0x00 ; '.'
0000000000209a5c         db  0x00 ; '.'
0000000000209a5d         db  0x00 ; '.'
0000000000209a5e         db  0x00 ; '.'
0000000000209a5f         db  0x00 ; '.'
0000000000209a60         db  0x1b ; '.'
0000000000209a61         db  0x6e ; 'n'
0000000000209a62         db  0x00 ; '.'
0000000000209a63         db  0x00 ; '.'
0000000000209a64         db  0x00 ; '.'
0000000000209a65         db  0x00 ; '.'
0000000000209a66         db  0x00 ; '.'
0000000000209a67         db  0x00 ; '.'
0000000000209a68         db  0x02 ; '.'
0000000000209a69         db  0x00 ; '.'
0000000000209a6a         db  0x00 ; '.'
0000000000209a6b         db  0x00 ; '.'
0000000000209a6c         db  0x00 ; '.'
0000000000209a6d         db  0x00 ; '.'
0000000000209a6e         db  0x00 ; '.'
0000000000209a6f         db  0x00 ; '.'
0000000000209a70         db  0x00 ; '.'
0000000000209a71         db  0x00 ; '.'
0000000000209a72         db  0x00 ; '.'
0000000000209a73         db  0x00 ; '.'
0000000000209a74         db  0x00 ; '.'
0000000000209a75         db  0x00 ; '.'
0000000000209a76         db  0x00 ; '.'
0000000000209a77         db  0x00 ; '.'
0000000000209a78         db  0x80 ; '.'
0000000000209a79         db  0x00 ; '.'
0000000000209a7a         db  0x00 ; '.'
0000000000209a7b         db  0x00 ; '.'
0000000000209a7c         db  0x00 ; '.'
0000000000209a7d         db  0x00 ; '.'
0000000000209a7e         db  0x00 ; '.'
0000000000209a7f         db  0x00 ; '.'
0000000000209a80         db  0x2a ; '*'
0000000000209a81         db  0x6e ; 'n'
0000000000209a82         db  0x00 ; '.'
0000000000209a83         db  0x00 ; '.'
0000000000209a84         db  0x00 ; '.'
0000000000209a85         db  0x00 ; '.'
0000000000209a86         db  0x00 ; '.'
0000000000209a87         db  0x00 ; '.'
0000000000209a88         db  0x02 ; '.'
0000000000209a89         db  0x00 ; '.'
0000000000209a8a         db  0x00 ; '.'
0000000000209a8b         db  0x00 ; '.'
0000000000209a8c         db  0x00 ; '.'
0000000000209a8d         db  0x00 ; '.'
0000000000209a8e         db  0x00 ; '.'
0000000000209a8f         db  0x00 ; '.'
0000000000209a90         db  0x00 ; '.'
0000000000209a91         db  0x00 ; '.'
0000000000209a92         db  0x00 ; '.'
0000000000209a93         db  0x00 ; '.'
0000000000209a94         db  0x00 ; '.'
0000000000209a95         db  0x00 ; '.'
0000000000209a96         db  0x00 ; '.'
0000000000209a97         db  0x00 ; '.'
0000000000209a98         db  0x81 ; '.'
0000000000209a99         db  0x00 ; '.'
0000000000209a9a         db  0x00 ; '.'
0000000000209a9b         db  0x00 ; '.'
0000000000209a9c         db  0x00 ; '.'
0000000000209a9d         db  0x00 ; '.'
0000000000209a9e         db  0x00 ; '.'
0000000000209a9f         db  0x00 ; '.'
0000000000209aa0         db  0x38 ; '8'
0000000000209aa1         db  0x6e ; 'n'
0000000000209aa2         db  0x00 ; '.'
0000000000209aa3         db  0x00 ; '.'
0000000000209aa4         db  0x00 ; '.'
0000000000209aa5         db  0x00 ; '.'
0000000000209aa6         db  0x00 ; '.'
0000000000209aa7         db  0x00 ; '.'
0000000000209aa8         db  0x02 ; '.'
0000000000209aa9         db  0x00 ; '.'
0000000000209aaa         db  0x00 ; '.'
0000000000209aab         db  0x00 ; '.'
0000000000209aac         db  0x00 ; '.'
0000000000209aad         db  0x00 ; '.'
0000000000209aae         db  0x00 ; '.'
0000000000209aaf         db  0x00 ; '.'
0000000000209ab0         db  0x00 ; '.'
0000000000209ab1         db  0x00 ; '.'
0000000000209ab2         db  0x00 ; '.'
0000000000209ab3         db  0x00 ; '.'
0000000000209ab4         db  0x00 ; '.'
0000000000209ab5         db  0x00 ; '.'
0000000000209ab6         db  0x00 ; '.'
0000000000209ab7         db  0x00 ; '.'
0000000000209ab8         db  0x82 ; '.'
0000000000209ab9         db  0x00 ; '.'
0000000000209aba         db  0x00 ; '.'
0000000000209abb         db  0x00 ; '.'
0000000000209abc         db  0x00 ; '.'
0000000000209abd         db  0x00 ; '.'
0000000000209abe         db  0x00 ; '.'
0000000000209abf         db  0x00 ; '.'
0000000000209ac0         db  0x45 ; 'E'
0000000000209ac1         db  0x6e ; 'n'
0000000000209ac2         db  0x00 ; '.'
0000000000209ac3         db  0x00 ; '.'
0000000000209ac4         db  0x00 ; '.'
0000000000209ac5         db  0x00 ; '.'
0000000000209ac6         db  0x00 ; '.'
0000000000209ac7         db  0x00 ; '.'
0000000000209ac8         db  0x00 ; '.'
0000000000209ac9         db  0x00 ; '.'
0000000000209aca         db  0x00 ; '.'
0000000000209acb         db  0x00 ; '.'
0000000000209acc         db  0x00 ; '.'
0000000000209acd         db  0x00 ; '.'
0000000000209ace         db  0x00 ; '.'
0000000000209acf         db  0x00 ; '.'
0000000000209ad0         db  0x00 ; '.'
0000000000209ad1         db  0x00 ; '.'
0000000000209ad2         db  0x00 ; '.'
0000000000209ad3         db  0x00 ; '.'
0000000000209ad4         db  0x00 ; '.'
0000000000209ad5         db  0x00 ; '.'
0000000000209ad6         db  0x00 ; '.'
0000000000209ad7         db  0x00 ; '.'
0000000000209ad8         db  0x83 ; '.'
0000000000209ad9         db  0x00 ; '.'
0000000000209ada         db  0x00 ; '.'
0000000000209adb         db  0x00 ; '.'
0000000000209adc         db  0x00 ; '.'
0000000000209add         db  0x00 ; '.'
0000000000209ade         db  0x00 ; '.'
0000000000209adf         db  0x00 ; '.'
0000000000209ae0         db  0x5a ; 'Z'
0000000000209ae1         db  0x6e ; 'n'
0000000000209ae2         db  0x00 ; '.'
0000000000209ae3         db  0x00 ; '.'
0000000000209ae4         db  0x00 ; '.'
0000000000209ae5         db  0x00 ; '.'
0000000000209ae6         db  0x00 ; '.'
0000000000209ae7         db  0x00 ; '.'
0000000000209ae8         db  0x00 ; '.'
0000000000209ae9         db  0x00 ; '.'
0000000000209aea         db  0x00 ; '.'
0000000000209aeb         db  0x00 ; '.'
0000000000209aec         db  0x00 ; '.'
0000000000209aed         db  0x00 ; '.'
0000000000209aee         db  0x00 ; '.'
0000000000209aef         db  0x00 ; '.'
0000000000209af0         db  0x00 ; '.'
0000000000209af1         db  0x00 ; '.'
0000000000209af2         db  0x00 ; '.'
0000000000209af3         db  0x00 ; '.'
0000000000209af4         db  0x00 ; '.'
0000000000209af5         db  0x00 ; '.'
0000000000209af6         db  0x00 ; '.'
0000000000209af7         db  0x00 ; '.'
0000000000209af8         db  0x76 ; 'v'
0000000000209af9         db  0x00 ; '.'
0000000000209afa         db  0x00 ; '.'
0000000000209afb         db  0x00 ; '.'
0000000000209afc         db  0x00 ; '.'
0000000000209afd         db  0x00 ; '.'
0000000000209afe         db  0x00 ; '.'
0000000000209aff         db  0x00 ; '.'
0000000000209b00         db  0x60 ; '`'
0000000000209b01         db  0x6e ; 'n'
0000000000209b02         db  0x00 ; '.'
0000000000209b03         db  0x00 ; '.'
0000000000209b04         db  0x00 ; '.'
0000000000209b05         db  0x00 ; '.'
0000000000209b06         db  0x00 ; '.'
0000000000209b07         db  0x00 ; '.'
0000000000209b08         db  0x01 ; '.'
0000000000209b09         db  0x00 ; '.'
0000000000209b0a         db  0x00 ; '.'
0000000000209b0b         db  0x00 ; '.'
0000000000209b0c         db  0x00 ; '.'
0000000000209b0d         db  0x00 ; '.'
0000000000209b0e         db  0x00 ; '.'
0000000000209b0f         db  0x00 ; '.'
0000000000209b10         db  0x00 ; '.'
0000000000209b11         db  0x00 ; '.'
0000000000209b12         db  0x00 ; '.'
0000000000209b13         db  0x00 ; '.'
0000000000209b14         db  0x00 ; '.'
0000000000209b15         db  0x00 ; '.'
0000000000209b16         db  0x00 ; '.'
0000000000209b17         db  0x00 ; '.'
0000000000209b18         db  0x53 ; 'S'
0000000000209b19         db  0x00 ; '.'
0000000000209b1a         db  0x00 ; '.'
0000000000209b1b         db  0x00 ; '.'
0000000000209b1c         db  0x00 ; '.'
0000000000209b1d         db  0x00 ; '.'
0000000000209b1e         db  0x00 ; '.'
0000000000209b1f         db  0x00 ; '.'
0000000000209b20         db  0x6d ; 'm'
0000000000209b21         db  0x6e ; 'n'
0000000000209b22         db  0x00 ; '.'
0000000000209b23         db  0x00 ; '.'
0000000000209b24         db  0x00 ; '.'
0000000000209b25         db  0x00 ; '.'
0000000000209b26         db  0x00 ; '.'
0000000000209b27         db  0x00 ; '.'
0000000000209b28         db  0x00 ; '.'
0000000000209b29         db  0x00 ; '.'
0000000000209b2a         db  0x00 ; '.'
0000000000209b2b         db  0x00 ; '.'
0000000000209b2c         db  0x00 ; '.'
0000000000209b2d         db  0x00 ; '.'
0000000000209b2e         db  0x00 ; '.'
0000000000209b2f         db  0x00 ; '.'
0000000000209b30         db  0x00 ; '.'
0000000000209b31         db  0x00 ; '.'
0000000000209b32         db  0x00 ; '.'
0000000000209b33         db  0x00 ; '.'
0000000000209b34         db  0x00 ; '.'
0000000000209b35         db  0x00 ; '.'
0000000000209b36         db  0x00 ; '.'
0000000000209b37         db  0x00 ; '.'
0000000000209b38         db  0x7e ; '~'
0000000000209b39         db  0xff ; '.'
0000000000209b3a         db  0xff ; '.'
0000000000209b3b         db  0xff ; '.'
0000000000209b3c         db  0x00 ; '.'
0000000000209b3d         db  0x00 ; '.'
0000000000209b3e         db  0x00 ; '.'
0000000000209b3f         db  0x00 ; '.'
0000000000209b40         db  0x72 ; 'r'
0000000000209b41         db  0x6e ; 'n'
0000000000209b42         db  0x00 ; '.'
0000000000209b43         db  0x00 ; '.'
0000000000209b44         db  0x00 ; '.'
0000000000209b45         db  0x00 ; '.'
0000000000209b46         db  0x00 ; '.'
0000000000209b47         db  0x00 ; '.'
0000000000209b48         db  0x00 ; '.'
0000000000209b49         db  0x00 ; '.'
0000000000209b4a         db  0x00 ; '.'
0000000000209b4b         db  0x00 ; '.'
0000000000209b4c         db  0x00 ; '.'
0000000000209b4d         db  0x00 ; '.'
0000000000209b4e         db  0x00 ; '.'
0000000000209b4f         db  0x00 ; '.'
0000000000209b50         db  0x00 ; '.'
0000000000209b51         db  0x00 ; '.'
0000000000209b52         db  0x00 ; '.'
0000000000209b53         db  0x00 ; '.'
0000000000209b54         db  0x00 ; '.'
0000000000209b55         db  0x00 ; '.'
0000000000209b56         db  0x00 ; '.'
0000000000209b57         db  0x00 ; '.'
0000000000209b58         db  0x7d ; '}'
0000000000209b59         db  0xff ; '.'
0000000000209b5a         db  0xff ; '.'
0000000000209b5b         db  0xff ; '.'
0000000000209b5c         db  0x00 ; '.'
0000000000209b5d         db  0x00 ; '.'
0000000000209b5e         db  0x00 ; '.'
0000000000209b5f         db  0x00 ; '.'
0000000000209b60         db  0x00 ; '.'
0000000000209b61         db  0x00 ; '.'
0000000000209b62         db  0x00 ; '.'
0000000000209b63         db  0x00 ; '.'
0000000000209b64         db  0x00 ; '.'
0000000000209b65         db  0x00 ; '.'
0000000000209b66         db  0x00 ; '.'
0000000000209b67         db  0x00 ; '.'
0000000000209b68         db  0x00 ; '.'
0000000000209b69         db  0x00 ; '.'
0000000000209b6a         db  0x00 ; '.'
0000000000209b6b         db  0x00 ; '.'
0000000000209b6c         db  0x00 ; '.'
0000000000209b6d         db  0x00 ; '.'
0000000000209b6e         db  0x00 ; '.'
0000000000209b6f         db  0x00 ; '.'
0000000000209b70         db  0x00 ; '.'
0000000000209b71         db  0x00 ; '.'
0000000000209b72         db  0x00 ; '.'
0000000000209b73         db  0x00 ; '.'
0000000000209b74         db  0x00 ; '.'
0000000000209b75         db  0x00 ; '.'
0000000000209b76         db  0x00 ; '.'
0000000000209b77         db  0x00 ; '.'
0000000000209b78         db  0x00 ; '.'
0000000000209b79         db  0x00 ; '.'
0000000000209b7a         db  0x00 ; '.'
0000000000209b7b         db  0x00 ; '.'
0000000000209b7c         db  0x00 ; '.'
0000000000209b7d         db  0x00 ; '.'
0000000000209b7e         db  0x00 ; '.'
0000000000209b7f         db  0x00 ; '.'
                     quoting_style_args:
0000000000209b80         db  0x8f ; '.'
0000000000209b81         db  0x77 ; 'w'
0000000000209b82         db  0x00 ; '.'
0000000000209b83         db  0x00 ; '.'
0000000000209b84         db  0x00 ; '.'
0000000000209b85         db  0x00 ; '.'
0000000000209b86         db  0x00 ; '.'
0000000000209b87         db  0x00 ; '.'
0000000000209b88         db  0x97 ; '.'
0000000000209b89         db  0x77 ; 'w'
0000000000209b8a         db  0x00 ; '.'
0000000000209b8b         db  0x00 ; '.'
0000000000209b8c         db  0x00 ; '.'
0000000000209b8d         db  0x00 ; '.'
0000000000209b8e         db  0x00 ; '.'
0000000000209b8f         db  0x00 ; '.'
0000000000209b90         db  0x9d ; '.'
0000000000209b91         db  0x77 ; 'w'
0000000000209b92         db  0x00 ; '.'
0000000000209b93         db  0x00 ; '.'
0000000000209b94         db  0x00 ; '.'
0000000000209b95         db  0x00 ; '.'
0000000000209b96         db  0x00 ; '.'
0000000000209b97         db  0x00 ; '.'
0000000000209b98         db  0xaa ; '.'
0000000000209b99         db  0x77 ; 'w'
0000000000209b9a         db  0x00 ; '.'
0000000000209b9b         db  0x00 ; '.'
0000000000209b9c         db  0x00 ; '.'
0000000000209b9d         db  0x00 ; '.'
0000000000209b9e         db  0x00 ; '.'
0000000000209b9f         db  0x00 ; '.'
0000000000209ba0         db  0xb7 ; '.'
0000000000209ba1         db  0x77 ; 'w'
0000000000209ba2         db  0x00 ; '.'
0000000000209ba3         db  0x00 ; '.'
0000000000209ba4         db  0x00 ; '.'
0000000000209ba5         db  0x00 ; '.'
0000000000209ba6         db  0x00 ; '.'
0000000000209ba7         db  0x00 ; '.'
0000000000209ba8         db  0x8c ; '.'
0000000000209ba9         db  0x6d ; 'm'
0000000000209baa         db  0x00 ; '.'
0000000000209bab         db  0x00 ; '.'
0000000000209bac         db  0x00 ; '.'
0000000000209bad         db  0x00 ; '.'
0000000000209bae         db  0x00 ; '.'
0000000000209baf         db  0x00 ; '.'
0000000000209bb0         db  0xcb ; '.'
0000000000209bb1         db  0x77 ; 'w'
0000000000209bb2         db  0x00 ; '.'
0000000000209bb3         db  0x00 ; '.'
0000000000209bb4         db  0x00 ; '.'
0000000000209bb5         db  0x00 ; '.'
0000000000209bb6         db  0x00 ; '.'
0000000000209bb7         db  0x00 ; '.'
0000000000209bb8         db  0xb0 ; '.'
0000000000209bb9         db  0x77 ; 'w'
0000000000209bba         db  0x00 ; '.'
0000000000209bbb         db  0x00 ; '.'
0000000000209bbc         db  0x00 ; '.'
0000000000209bbd         db  0x00 ; '.'
0000000000209bbe         db  0x00 ; '.'
0000000000209bbf         db  0x00 ; '.'
0000000000209bc0         db  0x7f ; '.'
0000000000209bc1         db  0x6c ; 'l'
0000000000209bc2         db  0x00 ; '.'
0000000000209bc3         db  0x00 ; '.'
0000000000209bc4         db  0x00 ; '.'
0000000000209bc5         db  0x00 ; '.'
0000000000209bc6         db  0x00 ; '.'
0000000000209bc7         db  0x00 ; '.'
0000000000209bc8         db  0xd3 ; '.'
0000000000209bc9         db  0x77 ; 'w'
0000000000209bca         db  0x00 ; '.'
0000000000209bcb         db  0x00 ; '.'
0000000000209bcc         db  0x00 ; '.'
0000000000209bcd         db  0x00 ; '.'
0000000000209bce         db  0x00 ; '.'
0000000000209bcf         db  0x00 ; '.'
0000000000209bd0         db  0x00 ; '.'
0000000000209bd1         db  0x00 ; '.'
0000000000209bd2         db  0x00 ; '.'
0000000000209bd3         db  0x00 ; '.'
0000000000209bd4         db  0x00 ; '.'
0000000000209bd5         db  0x00 ; '.'
0000000000209bd6         db  0x00 ; '.'
0000000000209bd7         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x209bd8; 0x209dc8[ (496 bytes)
        ; File offset : [39896; 40392[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
0000000000209bd8         db  0x01 ; '.'
0000000000209bd9         db  0x00 ; '.'
0000000000209bda         db  0x00 ; '.'
0000000000209bdb         db  0x00 ; '.'
0000000000209bdc         db  0x00 ; '.'
0000000000209bdd         db  0x00 ; '.'
0000000000209bde         db  0x00 ; '.'
0000000000209bdf         db  0x00 ; '.'
0000000000209be0         db  0x01 ; '.'
0000000000209be1         db  0x00 ; '.'
0000000000209be2         db  0x00 ; '.'
0000000000209be3         db  0x00 ; '.'
0000000000209be4         db  0x00 ; '.'
0000000000209be5         db  0x00 ; '.'
0000000000209be6         db  0x00 ; '.'
0000000000209be7         db  0x00 ; '.'
0000000000209be8         db  0x0c ; '.'
0000000000209be9         db  0x00 ; '.'
0000000000209bea         db  0x00 ; '.'
0000000000209beb         db  0x00 ; '.'
0000000000209bec         db  0x00 ; '.'
0000000000209bed         db  0x00 ; '.'
0000000000209bee         db  0x00 ; '.'
0000000000209bef         db  0x00 ; '.'
0000000000209bf0         db  0x58 ; 'X'
0000000000209bf1         db  0x18 ; '.'
0000000000209bf2         db  0x00 ; '.'
0000000000209bf3         db  0x00 ; '.'
0000000000209bf4         db  0x00 ; '.'
0000000000209bf5         db  0x00 ; '.'
0000000000209bf6         db  0x00 ; '.'
0000000000209bf7         db  0x00 ; '.'
0000000000209bf8         db  0x0d ; '.'
0000000000209bf9         db  0x00 ; '.'
0000000000209bfa         db  0x00 ; '.'
0000000000209bfb         db  0x00 ; '.'
0000000000209bfc         db  0x00 ; '.'
0000000000209bfd         db  0x00 ; '.'
0000000000209bfe         db  0x00 ; '.'
0000000000209bff         db  0x00 ; '.'
0000000000209c00         db  0x30 ; '0'
0000000000209c01         db  0x6b ; 'k'
0000000000209c02         db  0x00 ; '.'
0000000000209c03         db  0x00 ; '.'
0000000000209c04         db  0x00 ; '.'
0000000000209c05         db  0x00 ; '.'
0000000000209c06         db  0x00 ; '.'
0000000000209c07         db  0x00 ; '.'
0000000000209c08         db  0x19 ; '.'
0000000000209c09         db  0x00 ; '.'
0000000000209c0a         db  0x00 ; '.'
0000000000209c0b         db  0x00 ; '.'
0000000000209c0c         db  0x00 ; '.'
0000000000209c0d         db  0x00 ; '.'
0000000000209c0e         db  0x00 ; '.'
0000000000209c0f         db  0x00 ; '.'
0000000000209c10         db  0xd0 ; '.'
0000000000209c11         db  0x99 ; '.'
0000000000209c12         db  0x20 ; ' '
0000000000209c13         db  0x00 ; '.'
0000000000209c14         db  0x00 ; '.'
0000000000209c15         db  0x00 ; '.'
0000000000209c16         db  0x00 ; '.'
0000000000209c17         db  0x00 ; '.'
0000000000209c18         db  0x1b ; '.'
0000000000209c19         db  0x00 ; '.'
0000000000209c1a         db  0x00 ; '.'
0000000000209c1b         db  0x00 ; '.'
0000000000209c1c         db  0x00 ; '.'
0000000000209c1d         db  0x00 ; '.'
0000000000209c1e         db  0x00 ; '.'
0000000000209c1f         db  0x00 ; '.'
0000000000209c20         db  0x08 ; '.'
0000000000209c21         db  0x00 ; '.'
0000000000209c22         db  0x00 ; '.'
0000000000209c23         db  0x00 ; '.'
0000000000209c24         db  0x00 ; '.'
0000000000209c25         db  0x00 ; '.'
0000000000209c26         db  0x00 ; '.'
0000000000209c27         db  0x00 ; '.'
0000000000209c28         db  0x1a ; '.'
0000000000209c29         db  0x00 ; '.'
0000000000209c2a         db  0x00 ; '.'
0000000000209c2b         db  0x00 ; '.'
0000000000209c2c         db  0x00 ; '.'
0000000000209c2d         db  0x00 ; '.'
0000000000209c2e         db  0x00 ; '.'
0000000000209c2f         db  0x00 ; '.'
0000000000209c30         db  0xd8 ; '.'
0000000000209c31         db  0x99 ; '.'
0000000000209c32         db  0x20 ; ' '
0000000000209c33         db  0x00 ; '.'
0000000000209c34         db  0x00 ; '.'
0000000000209c35         db  0x00 ; '.'
0000000000209c36         db  0x00 ; '.'
0000000000209c37         db  0x00 ; '.'
0000000000209c38         db  0x1c ; '.'
0000000000209c39         db  0x00 ; '.'
0000000000209c3a         db  0x00 ; '.'
0000000000209c3b         db  0x00 ; '.'
0000000000209c3c         db  0x00 ; '.'
0000000000209c3d         db  0x00 ; '.'
0000000000209c3e         db  0x00 ; '.'
0000000000209c3f         db  0x00 ; '.'
0000000000209c40         db  0x08 ; '.'
0000000000209c41         db  0x00 ; '.'
0000000000209c42         db  0x00 ; '.'
0000000000209c43         db  0x00 ; '.'
0000000000209c44         db  0x00 ; '.'
0000000000209c45         db  0x00 ; '.'
0000000000209c46         db  0x00 ; '.'
0000000000209c47         db  0x00 ; '.'
0000000000209c48         db  0xf5 ; '.'
0000000000209c49         db  0xfe ; '.'
0000000000209c4a         db  0xff ; '.'
0000000000209c4b         db  0x6f ; 'o'
0000000000209c4c         db  0x00 ; '.'
0000000000209c4d         db  0x00 ; '.'
0000000000209c4e         db  0x00 ; '.'
0000000000209c4f         db  0x00 ; '.'
0000000000209c50         db  0x98 ; '.'
0000000000209c51         db  0x02 ; '.'
0000000000209c52         db  0x00 ; '.'
0000000000209c53         db  0x00 ; '.'
0000000000209c54         db  0x00 ; '.'
0000000000209c55         db  0x00 ; '.'
0000000000209c56         db  0x00 ; '.'
0000000000209c57         db  0x00 ; '.'
0000000000209c58         db  0x05 ; '.'
0000000000209c59         db  0x00 ; '.'
0000000000209c5a         db  0x00 ; '.'
0000000000209c5b         db  0x00 ; '.'
0000000000209c5c         db  0x00 ; '.'
0000000000209c5d         db  0x00 ; '.'
0000000000209c5e         db  0x00 ; '.'
0000000000209c5f         db  0x00 ; '.'
0000000000209c60         db  0x50 ; 'P'
0000000000209c61         db  0x0a ; '.'
0000000000209c62         db  0x00 ; '.'
0000000000209c63         db  0x00 ; '.'
0000000000209c64         db  0x00 ; '.'
0000000000209c65         db  0x00 ; '.'
0000000000209c66         db  0x00 ; '.'
0000000000209c67         db  0x00 ; '.'
0000000000209c68         db  0x06 ; '.'
0000000000209c69         db  0x00 ; '.'
0000000000209c6a         db  0x00 ; '.'
0000000000209c6b         db  0x00 ; '.'
0000000000209c6c         db  0x00 ; '.'
0000000000209c6d         db  0x00 ; '.'
0000000000209c6e         db  0x00 ; '.'
0000000000209c6f         db  0x00 ; '.'
0000000000209c70         db  0xe8 ; '.'
0000000000209c71         db  0x02 ; '.'
0000000000209c72         db  0x00 ; '.'
0000000000209c73         db  0x00 ; '.'
0000000000209c74         db  0x00 ; '.'
0000000000209c75         db  0x00 ; '.'
0000000000209c76         db  0x00 ; '.'
0000000000209c77         db  0x00 ; '.'
0000000000209c78         db  0x0a ; '.'
0000000000209c79         db  0x00 ; '.'
0000000000209c7a         db  0x00 ; '.'
0000000000209c7b         db  0x00 ; '.'
0000000000209c7c         db  0x00 ; '.'
0000000000209c7d         db  0x00 ; '.'
0000000000209c7e         db  0x00 ; '.'
0000000000209c7f         db  0x00 ; '.'
0000000000209c80         db  0x77 ; 'w'
0000000000209c81         db  0x03 ; '.'
0000000000209c82         db  0x00 ; '.'
0000000000209c83         db  0x00 ; '.'
0000000000209c84         db  0x00 ; '.'
0000000000209c85         db  0x00 ; '.'
0000000000209c86         db  0x00 ; '.'
0000000000209c87         db  0x00 ; '.'
0000000000209c88         db  0x0b ; '.'
0000000000209c89         db  0x00 ; '.'
0000000000209c8a         db  0x00 ; '.'
0000000000209c8b         db  0x00 ; '.'
0000000000209c8c         db  0x00 ; '.'
0000000000209c8d         db  0x00 ; '.'
0000000000209c8e         db  0x00 ; '.'
0000000000209c8f         db  0x00 ; '.'
0000000000209c90         db  0x18 ; '.'
0000000000209c91         db  0x00 ; '.'
0000000000209c92         db  0x00 ; '.'
0000000000209c93         db  0x00 ; '.'
0000000000209c94         db  0x00 ; '.'
0000000000209c95         db  0x00 ; '.'
0000000000209c96         db  0x00 ; '.'
0000000000209c97         db  0x00 ; '.'
0000000000209c98         db  0x15 ; '.'
0000000000209c99         db  0x00 ; '.'
0000000000209c9a         db  0x00 ; '.'
0000000000209c9b         db  0x00 ; '.'
0000000000209c9c         db  0x00 ; '.'
0000000000209c9d         db  0x00 ; '.'
0000000000209c9e         db  0x00 ; '.'
0000000000209c9f         db  0x00 ; '.'
0000000000209ca0         db  0x00 ; '.'
0000000000209ca1         db  0x00 ; '.'
0000000000209ca2         db  0x00 ; '.'
0000000000209ca3         db  0x00 ; '.'
0000000000209ca4         db  0x00 ; '.'
0000000000209ca5         db  0x00 ; '.'
0000000000209ca6         db  0x00 ; '.'
0000000000209ca7         db  0x00 ; '.'
0000000000209ca8         db  0x03 ; '.'
0000000000209ca9         db  0x00 ; '.'
0000000000209caa         db  0x00 ; '.'
0000000000209cab         db  0x00 ; '.'
0000000000209cac         db  0x00 ; '.'
0000000000209cad         db  0x00 ; '.'
0000000000209cae         db  0x00 ; '.'
0000000000209caf         db  0x00 ; '.'
0000000000209cb0         db  0xc8 ; '.'
0000000000209cb1         db  0x9d ; '.'
0000000000209cb2         db  0x20 ; ' '
0000000000209cb3         db  0x00 ; '.'
0000000000209cb4         db  0x00 ; '.'
0000000000209cb5         db  0x00 ; '.'
0000000000209cb6         db  0x00 ; '.'
0000000000209cb7         db  0x00 ; '.'
0000000000209cb8         db  0x02 ; '.'
0000000000209cb9         db  0x00 ; '.'
0000000000209cba         db  0x00 ; '.'
0000000000209cbb         db  0x00 ; '.'
0000000000209cbc         db  0x00 ; '.'
0000000000209cbd         db  0x00 ; '.'
0000000000209cbe         db  0x00 ; '.'
0000000000209cbf         db  0x00 ; '.'
0000000000209cc0         db  0xd0 ; '.'
0000000000209cc1         db  0x05 ; '.'
0000000000209cc2         db  0x00 ; '.'
0000000000209cc3         db  0x00 ; '.'
0000000000209cc4         db  0x00 ; '.'
0000000000209cc5         db  0x00 ; '.'
0000000000209cc6         db  0x00 ; '.'
0000000000209cc7         db  0x00 ; '.'
0000000000209cc8         db  0x14 ; '.'
0000000000209cc9         db  0x00 ; '.'
0000000000209cca         db  0x00 ; '.'
0000000000209ccb         db  0x00 ; '.'
0000000000209ccc         db  0x00 ; '.'
0000000000209ccd         db  0x00 ; '.'
0000000000209cce         db  0x00 ; '.'
0000000000209ccf         db  0x00 ; '.'
0000000000209cd0         db  0x07 ; '.'
0000000000209cd1         db  0x00 ; '.'
0000000000209cd2         db  0x00 ; '.'
0000000000209cd3         db  0x00 ; '.'
0000000000209cd4         db  0x00 ; '.'
0000000000209cd5         db  0x00 ; '.'
0000000000209cd6         db  0x00 ; '.'
0000000000209cd7         db  0x00 ; '.'
0000000000209cd8         db  0x17 ; '.'
0000000000209cd9         db  0x00 ; '.'
0000000000209cda         db  0x00 ; '.'
0000000000209cdb         db  0x00 ; '.'
0000000000209cdc         db  0x00 ; '.'
0000000000209cdd         db  0x00 ; '.'
0000000000209cde         db  0x00 ; '.'
0000000000209cdf         db  0x00 ; '.'
0000000000209ce0         db  0x88 ; '.'
0000000000209ce1         db  0x12 ; '.'
0000000000209ce2         db  0x00 ; '.'
0000000000209ce3         db  0x00 ; '.'
0000000000209ce4         db  0x00 ; '.'
0000000000209ce5         db  0x00 ; '.'
0000000000209ce6         db  0x00 ; '.'
0000000000209ce7         db  0x00 ; '.'
0000000000209ce8         db  0x07 ; '.'
0000000000209ce9         db  0x00 ; '.'
0000000000209cea         db  0x00 ; '.'
0000000000209ceb         db  0x00 ; '.'
0000000000209cec         db  0x00 ; '.'
0000000000209ced         db  0x00 ; '.'
0000000000209cee         db  0x00 ; '.'
0000000000209cef         db  0x00 ; '.'
0000000000209cf0         db  0xc8 ; '.'
0000000000209cf1         db  0x0e ; '.'
0000000000209cf2         db  0x00 ; '.'
0000000000209cf3         db  0x00 ; '.'
0000000000209cf4         db  0x00 ; '.'
0000000000209cf5         db  0x00 ; '.'
0000000000209cf6         db  0x00 ; '.'
0000000000209cf7         db  0x00 ; '.'
0000000000209cf8         db  0x08 ; '.'
0000000000209cf9         db  0x00 ; '.'
0000000000209cfa         db  0x00 ; '.'
0000000000209cfb         db  0x00 ; '.'
0000000000209cfc         db  0x00 ; '.'
0000000000209cfd         db  0x00 ; '.'
0000000000209cfe         db  0x00 ; '.'
0000000000209cff         db  0x00 ; '.'
0000000000209d00         db  0xc0 ; '.'
0000000000209d01         db  0x03 ; '.'
0000000000209d02         db  0x00 ; '.'
0000000000209d03         db  0x00 ; '.'
0000000000209d04         db  0x00 ; '.'
0000000000209d05         db  0x00 ; '.'
0000000000209d06         db  0x00 ; '.'
0000000000209d07         db  0x00 ; '.'
0000000000209d08         db  0x09 ; '.'
0000000000209d09         db  0x00 ; '.'
0000000000209d0a         db  0x00 ; '.'
0000000000209d0b         db  0x00 ; '.'
0000000000209d0c         db  0x00 ; '.'
0000000000209d0d         db  0x00 ; '.'
0000000000209d0e         db  0x00 ; '.'
0000000000209d0f         db  0x00 ; '.'
0000000000209d10         db  0x18 ; '.'
0000000000209d11         db  0x00 ; '.'
0000000000209d12         db  0x00 ; '.'
0000000000209d13         db  0x00 ; '.'
0000000000209d14         db  0x00 ; '.'
0000000000209d15         db  0x00 ; '.'
0000000000209d16         db  0x00 ; '.'
0000000000209d17         db  0x00 ; '.'
0000000000209d18         db  0x1e ; '.'
0000000000209d19         db  0x00 ; '.'
0000000000209d1a         db  0x00 ; '.'
0000000000209d1b         db  0x00 ; '.'
0000000000209d1c         db  0x00 ; '.'
0000000000209d1d         db  0x00 ; '.'
0000000000209d1e         db  0x00 ; '.'
0000000000209d1f         db  0x00 ; '.'
0000000000209d20         db  0x08 ; '.'
0000000000209d21         db  0x00 ; '.'
0000000000209d22         db  0x00 ; '.'
0000000000209d23         db  0x00 ; '.'
0000000000209d24         db  0x00 ; '.'
0000000000209d25         db  0x00 ; '.'
0000000000209d26         db  0x00 ; '.'
0000000000209d27         db  0x00 ; '.'
0000000000209d28         db  0xfb ; '.'
0000000000209d29         db  0xff ; '.'
0000000000209d2a         db  0xff ; '.'
0000000000209d2b         db  0x6f ; 'o'
0000000000209d2c         db  0x00 ; '.'
0000000000209d2d         db  0x00 ; '.'
0000000000209d2e         db  0x00 ; '.'
0000000000209d2f         db  0x00 ; '.'
0000000000209d30         db  0x01 ; '.'
0000000000209d31         db  0x00 ; '.'
0000000000209d32         db  0x00 ; '.'
0000000000209d33         db  0x08 ; '.'
0000000000209d34         db  0x00 ; '.'
0000000000209d35         db  0x00 ; '.'
0000000000209d36         db  0x00 ; '.'
0000000000209d37         db  0x00 ; '.'
0000000000209d38         db  0xfe ; '.'
0000000000209d39         db  0xff ; '.'
0000000000209d3a         db  0xff ; '.'
0000000000209d3b         db  0x6f ; 'o'
0000000000209d3c         db  0x00 ; '.'
0000000000209d3d         db  0x00 ; '.'
0000000000209d3e         db  0x00 ; '.'
0000000000209d3f         db  0x00 ; '.'
0000000000209d40         db  0x68 ; 'h'
0000000000209d41         db  0x0e ; '.'
0000000000209d42         db  0x00 ; '.'
0000000000209d43         db  0x00 ; '.'
0000000000209d44         db  0x00 ; '.'
0000000000209d45         db  0x00 ; '.'
0000000000209d46         db  0x00 ; '.'
0000000000209d47         db  0x00 ; '.'
0000000000209d48         db  0xff ; '.'
0000000000209d49         db  0xff ; '.'
0000000000209d4a         db  0xff ; '.'
0000000000209d4b         db  0x6f ; 'o'
0000000000209d4c         db  0x00 ; '.'
0000000000209d4d         db  0x00 ; '.'
0000000000209d4e         db  0x00 ; '.'
0000000000209d4f         db  0x00 ; '.'
0000000000209d50         db  0x01 ; '.'
0000000000209d51         db  0x00 ; '.'
0000000000209d52         db  0x00 ; '.'
0000000000209d53         db  0x00 ; '.'
0000000000209d54         db  0x00 ; '.'
0000000000209d55         db  0x00 ; '.'
0000000000209d56         db  0x00 ; '.'
0000000000209d57         db  0x00 ; '.'
0000000000209d58         db  0xf0 ; '.'
0000000000209d59         db  0xff ; '.'
0000000000209d5a         db  0xff ; '.'
0000000000209d5b         db  0x6f ; 'o'
0000000000209d5c         db  0x00 ; '.'
0000000000209d5d         db  0x00 ; '.'
0000000000209d5e         db  0x00 ; '.'
0000000000209d5f         db  0x00 ; '.'
0000000000209d60         db  0xc8 ; '.'
0000000000209d61         db  0x0d ; '.'
0000000000209d62         db  0x00 ; '.'
0000000000209d63         db  0x00 ; '.'
0000000000209d64         db  0x00 ; '.'
0000000000209d65         db  0x00 ; '.'
0000000000209d66         db  0x00 ; '.'
0000000000209d67         db  0x00 ; '.'
0000000000209d68         db  0xf9 ; '.'
0000000000209d69         db  0xff ; '.'
0000000000209d6a         db  0xff ; '.'
0000000000209d6b         db  0x6f ; 'o'
0000000000209d6c         db  0x00 ; '.'
0000000000209d6d         db  0x00 ; '.'
0000000000209d6e         db  0x00 ; '.'
0000000000209d6f         db  0x00 ; '.'
0000000000209d70         db  0x1c ; '.'
0000000000209d71         db  0x00 ; '.'
0000000000209d72         db  0x00 ; '.'
0000000000209d73         db  0x00 ; '.'
0000000000209d74         db  0x00 ; '.'
0000000000209d75         db  0x00 ; '.'
0000000000209d76         db  0x00 ; '.'
0000000000209d77         db  0x00 ; '.'
0000000000209d78         db  0x00 ; '.'
0000000000209d79         db  0x00 ; '.'
0000000000209d7a         db  0x00 ; '.'
0000000000209d7b         db  0x00 ; '.'
0000000000209d7c         db  0x00 ; '.'
0000000000209d7d         db  0x00 ; '.'
0000000000209d7e         db  0x00 ; '.'
0000000000209d7f         db  0x00 ; '.'
0000000000209d80         db  0x00 ; '.'
0000000000209d81         db  0x00 ; '.'
0000000000209d82         db  0x00 ; '.'
0000000000209d83         db  0x00 ; '.'
0000000000209d84         db  0x00 ; '.'
0000000000209d85         db  0x00 ; '.'
0000000000209d86         db  0x00 ; '.'
0000000000209d87         db  0x00 ; '.'
0000000000209d88         db  0x00 ; '.'
0000000000209d89         db  0x00 ; '.'
0000000000209d8a         db  0x00 ; '.'
0000000000209d8b         db  0x00 ; '.'
0000000000209d8c         db  0x00 ; '.'
0000000000209d8d         db  0x00 ; '.'
0000000000209d8e         db  0x00 ; '.'
0000000000209d8f         db  0x00 ; '.'
0000000000209d90         db  0x00 ; '.'
0000000000209d91         db  0x00 ; '.'
0000000000209d92         db  0x00 ; '.'
0000000000209d93         db  0x00 ; '.'
0000000000209d94         db  0x00 ; '.'
0000000000209d95         db  0x00 ; '.'
0000000000209d96         db  0x00 ; '.'
0000000000209d97         db  0x00 ; '.'
0000000000209d98         db  0x00 ; '.'
0000000000209d99         db  0x00 ; '.'
0000000000209d9a         db  0x00 ; '.'
0000000000209d9b         db  0x00 ; '.'
0000000000209d9c         db  0x00 ; '.'
0000000000209d9d         db  0x00 ; '.'
0000000000209d9e         db  0x00 ; '.'
0000000000209d9f         db  0x00 ; '.'
0000000000209da0         db  0x00 ; '.'
0000000000209da1         db  0x00 ; '.'
0000000000209da2         db  0x00 ; '.'
0000000000209da3         db  0x00 ; '.'
0000000000209da4         db  0x00 ; '.'
0000000000209da5         db  0x00 ; '.'
0000000000209da6         db  0x00 ; '.'
0000000000209da7         db  0x00 ; '.'
0000000000209da8         db  0x00 ; '.'
0000000000209da9         db  0x00 ; '.'
0000000000209daa         db  0x00 ; '.'
0000000000209dab         db  0x00 ; '.'
0000000000209dac         db  0x00 ; '.'
0000000000209dad         db  0x00 ; '.'
0000000000209dae         db  0x00 ; '.'
0000000000209daf         db  0x00 ; '.'
0000000000209db0         db  0x00 ; '.'
0000000000209db1         db  0x00 ; '.'
0000000000209db2         db  0x00 ; '.'
0000000000209db3         db  0x00 ; '.'
0000000000209db4         db  0x00 ; '.'
0000000000209db5         db  0x00 ; '.'
0000000000209db6         db  0x00 ; '.'
0000000000209db7         db  0x00 ; '.'
0000000000209db8         db  0x00 ; '.'
0000000000209db9         db  0x00 ; '.'
0000000000209dba         db  0x00 ; '.'
0000000000209dbb         db  0x00 ; '.'
0000000000209dbc         db  0x00 ; '.'
0000000000209dbd         db  0x00 ; '.'
0000000000209dbe         db  0x00 ; '.'
0000000000209dbf         db  0x00 ; '.'
0000000000209dc0         db  0x00 ; '.'
0000000000209dc1         db  0x00 ; '.'
0000000000209dc2         db  0x00 ; '.'
0000000000209dc3         db  0x00 ; '.'
0000000000209dc4         db  0x00 ; '.'
0000000000209dc5         db  0x00 ; '.'
0000000000209dc6         db  0x00 ; '.'
0000000000209dc7         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x209dc8; 0x209ff8[ (560 bytes)
        ; File offset : [40392; 40952[ (560 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
0000000000209dc8         db  0xd8 ; '.'
0000000000209dc9         db  0x9b ; '.'
0000000000209dca         db  0x20 ; ' '
0000000000209dcb         db  0x00 ; '.'
0000000000209dcc         db  0x00 ; '.'
0000000000209dcd         db  0x00 ; '.'
0000000000209dce         db  0x00 ; '.'
0000000000209dcf         db  0x00 ; '.'
                     qword_209dd0:
0000000000209dd0         dq         0x0000000000000000                          ; DATA XREF=0x1870
0000000000209dd8         db  0x00 ; '.'                                         ; DATA XREF=0x1876
0000000000209dd9         db  0x00 ; '.'
0000000000209dda         db  0x00 ; '.'
0000000000209ddb         db  0x00 ; '.'
0000000000209ddc         db  0x00 ; '.'
0000000000209ddd         db  0x00 ; '.'
0000000000209dde         db  0x00 ; '.'
0000000000209ddf         db  0x00 ; '.'
                     getenv@GOT:        // getenv
0000000000209de0         dq         0x000000000020a560                          ; DATA XREF=j_getenv
                     sigprocmask@GOT:        // sigprocmask
0000000000209de8         dq         0x000000000020a568                          ; DATA XREF=j_sigprocmask
                     free@GOT:        // free
0000000000209df0         dq         0x000000000020a570                          ; DATA XREF=j_free
                     abort@GOT:        // abort
0000000000209df8         dq         0x000000000020a578                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
0000000000209e00         dq         0x000000000020a580                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
0000000000209e08         dq         0x000000000020a588                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
0000000000209e10         dq         0x000000000020a598                          ; DATA XREF=j__exit
                     strcpy@GOT:        // strcpy
0000000000209e18         dq         0x000000000020a5a0                          ; DATA XREF=j_strcpy
                     __fpending@GOT:        // __fpending
0000000000209e20         dq         0x000000000020a5a8                          ; DATA XREF=j___fpending
                     sigaction@GOT:        // sigaction
0000000000209e28         dq         0x000000000020a5b0                          ; DATA XREF=j_sigaction
                     textdomain@GOT:        // textdomain
0000000000209e30         dq         0x000000000020a5b8                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
0000000000209e38         dq         0x000000000020a5c0                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
0000000000209e40         dq         0x000000000020a5c8                          ; DATA XREF=j_bindtextdomain
                     stpcpy@GOT:        // stpcpy
0000000000209e48         dq         0x000000000020a5d0                          ; DATA XREF=j_stpcpy
                     dcgettext@GOT:        // dcgettext
0000000000209e50         dq         0x000000000020a5d8                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
0000000000209e58         dq         0x000000000020a5e0                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
0000000000209e60         dq         0x000000000020a5e8                          ; DATA XREF=j_strlen
                     chdir@GOT:        // chdir
0000000000209e68         dq         0x000000000020a5f0                          ; DATA XREF=j_chdir
                     __stack_chk_fail@GOT:        // __stack_chk_fail
0000000000209e70         dq         0x000000000020a5f8                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
0000000000209e78         dq         0x000000000020a600                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
0000000000209e80         dq         0x000000000020a608                          ; DATA XREF=j_mbrtowc
                     strchr@GOT:        // strchr
0000000000209e88         dq         0x000000000020a610                          ; DATA XREF=j_strchr
                     strrchr@GOT:        // strrchr
0000000000209e90         dq         0x000000000020a618                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
0000000000209e98         dq         0x000000000020a620                          ; DATA XREF=j_lseek
                     __assert_fail@GOT:        // __assert_fail
0000000000209ea0         dq         0x000000000020a628                          ; DATA XREF=j___assert_fail
                     memset@GOT:        // memset
0000000000209ea8         dq         0x000000000020a630                          ; DATA XREF=j_memset
                     strspn@GOT:        // strspn
0000000000209eb0         dq         0x000000000020a638                          ; DATA XREF=j_strspn
                     memcmp@GOT:        // memcmp
0000000000209eb8         dq         0x000000000020a648                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
0000000000209ec0         dq         0x000000000020a650                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
0000000000209ec8         dq         0x000000000020a658                          ; DATA XREF=j_calloc
                     putenv@GOT:        // putenv
0000000000209ed0         dq         0x000000000020a660                          ; DATA XREF=j_putenv
                     strcmp@GOT:        // strcmp
0000000000209ed8         dq         0x000000000020a668                          ; DATA XREF=j_strcmp
                     sigemptyset@GOT:        // sigemptyset
0000000000209ee0         dq         0x000000000020a670                          ; DATA XREF=j_sigemptyset
                     strtol@GOT:        // strtol
0000000000209ee8         dq         0x000000000020a680                          ; DATA XREF=j_strtol
                     sigfillset@GOT:        // sigfillset
0000000000209ef0         dq         0x000000000020a688                          ; DATA XREF=j_sigfillset
                     memcpy@GOT:        // memcpy
0000000000209ef8         dq         0x000000000020a690                          ; DATA XREF=j_memcpy
                     fileno@GOT:        // fileno
0000000000209f00         dq         0x000000000020a698                          ; DATA XREF=j_fileno
                     malloc@GOT:        // malloc
0000000000209f08         dq         0x000000000020a6a0                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
0000000000209f10         dq         0x000000000020a6a8                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
0000000000209f18         dq         0x000000000020a6b0                          ; DATA XREF=j_nl_langinfo
                     __freading@GOT:        // __freading
0000000000209f20         dq         0x000000000020a6b8                          ; DATA XREF=j___freading
                     realloc@GOT:        // realloc
0000000000209f28         dq         0x000000000020a6c0                          ; DATA XREF=j_realloc
                     setlocale@GOT:        // setlocale
0000000000209f30         dq         0x000000000020a6c8                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
0000000000209f38         dq         0x000000000020a6d0                          ; DATA XREF=j___printf_chk
                     error@GOT:        // error
0000000000209f40         dq         0x000000000020a6d8                          ; DATA XREF=j_error
                     fseeko@GOT:        // fseeko
0000000000209f48         dq         0x000000000020a6e0                          ; DATA XREF=j_fseeko
                     sigdelset@GOT:        // sigdelset
0000000000209f50         dq         0x000000000020a6e8                          ; DATA XREF=j_sigdelset
                     strtok@GOT:        // strtok
0000000000209f58         dq         0x000000000020a6f0                          ; DATA XREF=j_strtok
                     unsetenv@GOT:        // unsetenv
0000000000209f60         dq         0x000000000020a6f8                          ; DATA XREF=j_unsetenv
                     execvp@GOT:        // execvp
0000000000209f68         dq         0x000000000020a700                          ; DATA XREF=j_execvp
                     __cxa_atexit@GOT:        // __cxa_atexit
0000000000209f70         dq         0x000000000020a708                          ; DATA XREF=j___cxa_atexit
                     __libc_current_sigrtmin@GOT:        // __libc_current_sigrtmin
0000000000209f78         dq         0x000000000020a710                          ; DATA XREF=j___libc_current_sigrtmin
                     sigismember@GOT:        // sigismember
0000000000209f80         dq         0x000000000020a718                          ; DATA XREF=j_sigismember
                     exit@GOT:        // exit
0000000000209f88         dq         0x000000000020a720                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
0000000000209f90         dq         0x000000000020a728                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
0000000000209f98         dq         0x000000000020a730                          ; DATA XREF=j___fprintf_chk
                     __libc_current_sigrtmax@GOT:        // __libc_current_sigrtmax
0000000000209fa0         dq         0x000000000020a738                          ; DATA XREF=j___libc_current_sigrtmax
                     mbsinit@GOT:        // mbsinit
0000000000209fa8         dq         0x000000000020a748                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
0000000000209fb0         dq         0x000000000020a750                          ; DATA XREF=j_iswprint
                     sigaddset@GOT:        // sigaddset
0000000000209fb8         dq         0x000000000020a760                          ; DATA XREF=j_sigaddset
                     __ctype_b_loc@GOT:        // __ctype_b_loc
0000000000209fc0         dq         0x000000000020a768                          ; DATA XREF=j___ctype_b_loc
                     __sprintf_chk@GOT:        // __sprintf_chk
0000000000209fc8         dq         0x000000000020a770                          ; DATA XREF=j___sprintf_chk
                     qword_209fd0:
0000000000209fd0         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
0000000000209fd8         db  0x00 ; '.'                                         ; DATA XREF=_start+36
0000000000209fd9         db  0x00 ; '.'
0000000000209fda         db  0x00 ; '.'
0000000000209fdb         db  0x00 ; '.'
0000000000209fdc         db  0x00 ; '.'
0000000000209fdd         db  0x00 ; '.'
0000000000209fde         db  0x00 ; '.'
0000000000209fdf         db  0x00 ; '.'
                     qword_209fe0:
0000000000209fe0         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_209fe8:
0000000000209fe8         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_209ff0:
0000000000209ff0         dq         0x0000000000000000                          ; DATA XREF=j_qword_209ff0, __do_global_dtors_aux+9
0000000000209ff8         db  0x00 ; '.'
0000000000209ff9         db  0x00 ; '.'
0000000000209ffa         db  0x00 ; '.'
0000000000209ffb         db  0x00 ; '.'
0000000000209ffc         db  0x00 ; '.'
0000000000209ffd         db  0x00 ; '.'
0000000000209ffe         db  0x00 ; '.'
0000000000209fff         db  0x00 ; '.'


        ; Section .data
        ; Range: [0x20a000; 0x20a224[ (548 bytes)
        ; File offset : [40960; 41508[ (548 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

000000000020a000         db  0x00 ; '.'
000000000020a001         db  0x00 ; '.'
000000000020a002         db  0x00 ; '.'
000000000020a003         db  0x00 ; '.'
000000000020a004         db  0x00 ; '.'
000000000020a005         db  0x00 ; '.'
000000000020a006         db  0x00 ; '.'
000000000020a007         db  0x00 ; '.'
                     __dso_handle:
000000000020a008         dq         0x000000000020a008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     Version:
000000000020a010         dq         0x0000000000007720                          ; "8.31", DATA XREF=main+937
                     exit_failure:
000000000020a018         dd         0x00000001                                  ; DATA XREF=main+106, parse_signal_action_params+199, parse_block_signal_params+279, close_stdout+130, xalloc_die+23
000000000020a01c         db  0x00 ; '.'
000000000020a01d         db  0x00 ; '.'
000000000020a01e         db  0x00 ; '.'
000000000020a01f         db  0x00 ; '.'
                     quote_quoting_options:
000000000020a020         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
000000000020a021         db  0x00 ; '.'
000000000020a022         db  0x00 ; '.'
000000000020a023         db  0x00 ; '.'
000000000020a024         db  0x00 ; '.'
000000000020a025         db  0x00 ; '.'
000000000020a026         db  0x00 ; '.'
000000000020a027         db  0x00 ; '.'
000000000020a028         db  0x00 ; '.'
000000000020a029         db  0x00 ; '.'
000000000020a02a         db  0x00 ; '.'
000000000020a02b         db  0x00 ; '.'
000000000020a02c         db  0x00 ; '.'
000000000020a02d         db  0x00 ; '.'
000000000020a02e         db  0x00 ; '.'
000000000020a02f         db  0x00 ; '.'
000000000020a030         db  0x00 ; '.'
000000000020a031         db  0x00 ; '.'
000000000020a032         db  0x00 ; '.'
000000000020a033         db  0x00 ; '.'
000000000020a034         db  0x00 ; '.'
000000000020a035         db  0x00 ; '.'
000000000020a036         db  0x00 ; '.'
000000000020a037         db  0x00 ; '.'
000000000020a038         db  0x00 ; '.'
000000000020a039         db  0x00 ; '.'
000000000020a03a         db  0x00 ; '.'
000000000020a03b         db  0x00 ; '.'
000000000020a03c         db  0x00 ; '.'
000000000020a03d         db  0x00 ; '.'
000000000020a03e         db  0x00 ; '.'
000000000020a03f         db  0x00 ; '.'
000000000020a040         db  0x00 ; '.'
000000000020a041         db  0x00 ; '.'
000000000020a042         db  0x00 ; '.'
000000000020a043         db  0x00 ; '.'
000000000020a044         db  0x00 ; '.'
000000000020a045         db  0x00 ; '.'
000000000020a046         db  0x00 ; '.'
000000000020a047         db  0x00 ; '.'
000000000020a048         db  0x00 ; '.'
000000000020a049         db  0x00 ; '.'
000000000020a04a         db  0x00 ; '.'
000000000020a04b         db  0x00 ; '.'
000000000020a04c         db  0x00 ; '.'
000000000020a04d         db  0x00 ; '.'
000000000020a04e         db  0x00 ; '.'
000000000020a04f         db  0x00 ; '.'
000000000020a050         db  0x00 ; '.'
000000000020a051         db  0x00 ; '.'
000000000020a052         db  0x00 ; '.'
000000000020a053         db  0x00 ; '.'
000000000020a054         db  0x00 ; '.'
000000000020a055         db  0x00 ; '.'
000000000020a056         db  0x00 ; '.'
000000000020a057         db  0x00 ; '.'
                     nslots:
000000000020a058         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020a05c         align      32
                     slotvec:
000000000020a060         dq         0x000000000020a070                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
000000000020a068         db  0x00 ; '.'
000000000020a069         db  0x00 ; '.'
000000000020a06a         db  0x00 ; '.'
000000000020a06b         db  0x00 ; '.'
000000000020a06c         db  0x00 ; '.'
000000000020a06d         db  0x00 ; '.'
000000000020a06e         db  0x00 ; '.'
000000000020a06f         db  0x00 ; '.'
                     slotvec0:
000000000020a070         dq         1.26481e-321, 1.05689e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec
                     numname_table:
000000000020a080         db  0x01 ; '.'                                         ; DATA XREF=str2sig+95, sig2str+1
000000000020a081         db  0x00 ; '.'
000000000020a082         db  0x00 ; '.'
000000000020a083         db  0x00 ; '.'
000000000020a084         db  0x48 ; 'H'                                         ; DATA XREF=str2sig+14
000000000020a085         db  0x55 ; 'U'
000000000020a086         db  0x50 ; 'P'
000000000020a087         db  0x00 ; '.'
000000000020a088         db  0x00 ; '.'
000000000020a089         db  0x00 ; '.'
000000000020a08a         db  0x00 ; '.'
000000000020a08b         db  0x00 ; '.'
000000000020a08c         db  0x02 ; '.'
000000000020a08d         db  0x00 ; '.'
000000000020a08e         db  0x00 ; '.'
000000000020a08f         db  0x00 ; '.'
000000000020a090         db  0x49 ; 'I'
000000000020a091         db  0x4e ; 'N'
000000000020a092         db  0x54 ; 'T'
000000000020a093         db  0x00 ; '.'
000000000020a094         db  0x00 ; '.'
000000000020a095         db  0x00 ; '.'
000000000020a096         db  0x00 ; '.'
000000000020a097         db  0x00 ; '.'
000000000020a098         db  0x03 ; '.'
000000000020a099         db  0x00 ; '.'
000000000020a09a         db  0x00 ; '.'
000000000020a09b         db  0x00 ; '.'
000000000020a09c         db  0x51 ; 'Q'
000000000020a09d         db  0x55 ; 'U'
000000000020a09e         db  0x49 ; 'I'
000000000020a09f         db  0x54 ; 'T'
000000000020a0a0         db  0x00 ; '.'
000000000020a0a1         db  0x00 ; '.'
000000000020a0a2         db  0x00 ; '.'
000000000020a0a3         db  0x00 ; '.'
000000000020a0a4         db  0x04 ; '.'
000000000020a0a5         db  0x00 ; '.'
000000000020a0a6         db  0x00 ; '.'
000000000020a0a7         db  0x00 ; '.'
000000000020a0a8         db  0x49 ; 'I'
000000000020a0a9         db  0x4c ; 'L'
000000000020a0aa         db  0x4c ; 'L'
000000000020a0ab         db  0x00 ; '.'
000000000020a0ac         db  0x00 ; '.'
000000000020a0ad         db  0x00 ; '.'
000000000020a0ae         db  0x00 ; '.'
000000000020a0af         db  0x00 ; '.'
000000000020a0b0         db  0x05 ; '.'
000000000020a0b1         db  0x00 ; '.'
000000000020a0b2         db  0x00 ; '.'
000000000020a0b3         db  0x00 ; '.'
000000000020a0b4         db  0x54 ; 'T'
000000000020a0b5         db  0x52 ; 'R'
000000000020a0b6         db  0x41 ; 'A'
000000000020a0b7         db  0x50 ; 'P'
000000000020a0b8         db  0x00 ; '.'
000000000020a0b9         db  0x00 ; '.'
000000000020a0ba         db  0x00 ; '.'
000000000020a0bb         db  0x00 ; '.'
000000000020a0bc         db  0x06 ; '.'
000000000020a0bd         db  0x00 ; '.'
000000000020a0be         db  0x00 ; '.'
000000000020a0bf         db  0x00 ; '.'
000000000020a0c0         db  0x41 ; 'A'
000000000020a0c1         db  0x42 ; 'B'
000000000020a0c2         db  0x52 ; 'R'
000000000020a0c3         db  0x54 ; 'T'
000000000020a0c4         db  0x00 ; '.'
000000000020a0c5         db  0x00 ; '.'
000000000020a0c6         db  0x00 ; '.'
000000000020a0c7         db  0x00 ; '.'
000000000020a0c8         db  0x08 ; '.'
000000000020a0c9         db  0x00 ; '.'
000000000020a0ca         db  0x00 ; '.'
000000000020a0cb         db  0x00 ; '.'
000000000020a0cc         db  0x46 ; 'F'
000000000020a0cd         db  0x50 ; 'P'
000000000020a0ce         db  0x45 ; 'E'
000000000020a0cf         db  0x00 ; '.'
000000000020a0d0         db  0x00 ; '.'
000000000020a0d1         db  0x00 ; '.'
000000000020a0d2         db  0x00 ; '.'
000000000020a0d3         db  0x00 ; '.'
000000000020a0d4         db  0x09 ; '.'
000000000020a0d5         db  0x00 ; '.'
000000000020a0d6         db  0x00 ; '.'
000000000020a0d7         db  0x00 ; '.'
000000000020a0d8         db  0x4b ; 'K'
000000000020a0d9         db  0x49 ; 'I'
000000000020a0da         db  0x4c ; 'L'
000000000020a0db         db  0x4c ; 'L'
000000000020a0dc         db  0x00 ; '.'
000000000020a0dd         db  0x00 ; '.'
000000000020a0de         db  0x00 ; '.'
000000000020a0df         db  0x00 ; '.'
000000000020a0e0         db  0x0b ; '.'
000000000020a0e1         db  0x00 ; '.'
000000000020a0e2         db  0x00 ; '.'
000000000020a0e3         db  0x00 ; '.'
000000000020a0e4         db  0x53 ; 'S'
000000000020a0e5         db  0x45 ; 'E'
000000000020a0e6         db  0x47 ; 'G'
000000000020a0e7         db  0x56 ; 'V'
000000000020a0e8         db  0x00 ; '.'
000000000020a0e9         db  0x00 ; '.'
000000000020a0ea         db  0x00 ; '.'
000000000020a0eb         db  0x00 ; '.'
000000000020a0ec         db  0x07 ; '.'
000000000020a0ed         db  0x00 ; '.'
000000000020a0ee         db  0x00 ; '.'
000000000020a0ef         db  0x00 ; '.'
000000000020a0f0         db  0x42 ; 'B'
000000000020a0f1         db  0x55 ; 'U'
000000000020a0f2         db  0x53 ; 'S'
000000000020a0f3         db  0x00 ; '.'
000000000020a0f4         db  0x00 ; '.'
000000000020a0f5         db  0x00 ; '.'
000000000020a0f6         db  0x00 ; '.'
000000000020a0f7         db  0x00 ; '.'
000000000020a0f8         db  0x0d ; '.'
000000000020a0f9         db  0x00 ; '.'
000000000020a0fa         db  0x00 ; '.'
000000000020a0fb         db  0x00 ; '.'
000000000020a0fc         db  0x50 ; 'P'
000000000020a0fd         db  0x49 ; 'I'
000000000020a0fe         db  0x50 ; 'P'
000000000020a0ff         db  0x45 ; 'E'
000000000020a100         db  0x00 ; '.'
000000000020a101         db  0x00 ; '.'
000000000020a102         db  0x00 ; '.'
000000000020a103         db  0x00 ; '.'
000000000020a104         db  0x0e ; '.'
000000000020a105         db  0x00 ; '.'
000000000020a106         db  0x00 ; '.'
000000000020a107         db  0x00 ; '.'
000000000020a108         db  0x41 ; 'A'
000000000020a109         db  0x4c ; 'L'
000000000020a10a         db  0x52 ; 'R'
000000000020a10b         db  0x4d ; 'M'
000000000020a10c         db  0x00 ; '.'
000000000020a10d         db  0x00 ; '.'
000000000020a10e         db  0x00 ; '.'
000000000020a10f         db  0x00 ; '.'
000000000020a110         db  0x0f ; '.'
000000000020a111         db  0x00 ; '.'
000000000020a112         db  0x00 ; '.'
000000000020a113         db  0x00 ; '.'
000000000020a114         db  0x54 ; 'T'
000000000020a115         db  0x45 ; 'E'
000000000020a116         db  0x52 ; 'R'
000000000020a117         db  0x4d ; 'M'
000000000020a118         db  0x00 ; '.'
000000000020a119         db  0x00 ; '.'
000000000020a11a         db  0x00 ; '.'
000000000020a11b         db  0x00 ; '.'
000000000020a11c         db  0x0a ; '.'
000000000020a11d         db  0x00 ; '.'
000000000020a11e         db  0x00 ; '.'
000000000020a11f         db  0x00 ; '.'
000000000020a120         db  0x55 ; 'U'
000000000020a121         db  0x53 ; 'S'
000000000020a122         db  0x52 ; 'R'
000000000020a123         db  0x31 ; '1'
000000000020a124         db  0x00 ; '.'
000000000020a125         db  0x00 ; '.'
000000000020a126         db  0x00 ; '.'
000000000020a127         db  0x00 ; '.'
000000000020a128         db  0x0c ; '.'
000000000020a129         db  0x00 ; '.'
000000000020a12a         db  0x00 ; '.'
000000000020a12b         db  0x00 ; '.'
000000000020a12c         db  0x55 ; 'U'
000000000020a12d         db  0x53 ; 'S'
000000000020a12e         db  0x52 ; 'R'
000000000020a12f         db  0x32 ; '2'
000000000020a130         db  0x00 ; '.'
000000000020a131         db  0x00 ; '.'
000000000020a132         db  0x00 ; '.'
000000000020a133         db  0x00 ; '.'
000000000020a134         db  0x11 ; '.'
000000000020a135         db  0x00 ; '.'
000000000020a136         db  0x00 ; '.'
000000000020a137         db  0x00 ; '.'
000000000020a138         db  0x43 ; 'C'
000000000020a139         db  0x48 ; 'H'
000000000020a13a         db  0x4c ; 'L'
000000000020a13b         db  0x44 ; 'D'
000000000020a13c         db  0x00 ; '.'
000000000020a13d         db  0x00 ; '.'
000000000020a13e         db  0x00 ; '.'
000000000020a13f         db  0x00 ; '.'
000000000020a140         db  0x17 ; '.'
000000000020a141         db  0x00 ; '.'
000000000020a142         db  0x00 ; '.'
000000000020a143         db  0x00 ; '.'
000000000020a144         db  0x55 ; 'U'
000000000020a145         db  0x52 ; 'R'
000000000020a146         db  0x47 ; 'G'
000000000020a147         db  0x00 ; '.'
000000000020a148         db  0x00 ; '.'
000000000020a149         db  0x00 ; '.'
000000000020a14a         db  0x00 ; '.'
000000000020a14b         db  0x00 ; '.'
000000000020a14c         db  0x13 ; '.'
000000000020a14d         db  0x00 ; '.'
000000000020a14e         db  0x00 ; '.'
000000000020a14f         db  0x00 ; '.'
000000000020a150         db  0x53 ; 'S'
000000000020a151         db  0x54 ; 'T'
000000000020a152         db  0x4f ; 'O'
000000000020a153         db  0x50 ; 'P'
000000000020a154         db  0x00 ; '.'
000000000020a155         db  0x00 ; '.'
000000000020a156         db  0x00 ; '.'
000000000020a157         db  0x00 ; '.'
000000000020a158         db  0x14 ; '.'
000000000020a159         db  0x00 ; '.'
000000000020a15a         db  0x00 ; '.'
000000000020a15b         db  0x00 ; '.'
000000000020a15c         db  0x54 ; 'T'
000000000020a15d         db  0x53 ; 'S'
000000000020a15e         db  0x54 ; 'T'
000000000020a15f         db  0x50 ; 'P'
000000000020a160         db  0x00 ; '.'
000000000020a161         db  0x00 ; '.'
000000000020a162         db  0x00 ; '.'
000000000020a163         db  0x00 ; '.'
000000000020a164         db  0x12 ; '.'
000000000020a165         db  0x00 ; '.'
000000000020a166         db  0x00 ; '.'
000000000020a167         db  0x00 ; '.'
000000000020a168         db  0x43 ; 'C'
000000000020a169         db  0x4f ; 'O'
000000000020a16a         db  0x4e ; 'N'
000000000020a16b         db  0x54 ; 'T'
000000000020a16c         db  0x00 ; '.'
000000000020a16d         db  0x00 ; '.'
000000000020a16e         db  0x00 ; '.'
000000000020a16f         db  0x00 ; '.'
000000000020a170         db  0x15 ; '.'
000000000020a171         db  0x00 ; '.'
000000000020a172         db  0x00 ; '.'
000000000020a173         db  0x00 ; '.'
000000000020a174         db  0x54 ; 'T'
000000000020a175         db  0x54 ; 'T'
000000000020a176         db  0x49 ; 'I'
000000000020a177         db  0x4e ; 'N'
000000000020a178         db  0x00 ; '.'
000000000020a179         db  0x00 ; '.'
000000000020a17a         db  0x00 ; '.'
000000000020a17b         db  0x00 ; '.'
000000000020a17c         db  0x16 ; '.'
000000000020a17d         db  0x00 ; '.'
000000000020a17e         db  0x00 ; '.'
000000000020a17f         db  0x00 ; '.'
000000000020a180         db  0x54 ; 'T'
000000000020a181         db  0x54 ; 'T'
000000000020a182         db  0x4f ; 'O'
000000000020a183         db  0x55 ; 'U'
000000000020a184         db  0x00 ; '.'
000000000020a185         db  0x00 ; '.'
000000000020a186         db  0x00 ; '.'
000000000020a187         db  0x00 ; '.'
000000000020a188         db  0x1f ; '.'
000000000020a189         db  0x00 ; '.'
000000000020a18a         db  0x00 ; '.'
000000000020a18b         db  0x00 ; '.'
000000000020a18c         db  0x53 ; 'S'
000000000020a18d         db  0x59 ; 'Y'
000000000020a18e         db  0x53 ; 'S'
000000000020a18f         db  0x00 ; '.'
000000000020a190         db  0x00 ; '.'
000000000020a191         db  0x00 ; '.'
000000000020a192         db  0x00 ; '.'
000000000020a193         db  0x00 ; '.'
000000000020a194         db  0x1d ; '.'
000000000020a195         db  0x00 ; '.'
000000000020a196         db  0x00 ; '.'
000000000020a197         db  0x00 ; '.'
000000000020a198         db  0x50 ; 'P'
000000000020a199         db  0x4f ; 'O'
000000000020a19a         db  0x4c ; 'L'
000000000020a19b         db  0x4c ; 'L'
000000000020a19c         db  0x00 ; '.'
000000000020a19d         db  0x00 ; '.'
000000000020a19e         db  0x00 ; '.'
000000000020a19f         db  0x00 ; '.'
000000000020a1a0         db  0x1a ; '.'
000000000020a1a1         db  0x00 ; '.'
000000000020a1a2         db  0x00 ; '.'
000000000020a1a3         db  0x00 ; '.'
000000000020a1a4         db  0x56 ; 'V'
000000000020a1a5         db  0x54 ; 'T'
000000000020a1a6         db  0x41 ; 'A'
000000000020a1a7         db  0x4c ; 'L'
000000000020a1a8         db  0x52 ; 'R'
000000000020a1a9         db  0x4d ; 'M'
000000000020a1aa         db  0x00 ; '.'
000000000020a1ab         db  0x00 ; '.'
000000000020a1ac         db  0x1b ; '.'
000000000020a1ad         db  0x00 ; '.'
000000000020a1ae         db  0x00 ; '.'
000000000020a1af         db  0x00 ; '.'
000000000020a1b0         db  0x50 ; 'P'
000000000020a1b1         db  0x52 ; 'R'
000000000020a1b2         db  0x4f ; 'O'
000000000020a1b3         db  0x46 ; 'F'
000000000020a1b4         db  0x00 ; '.'
000000000020a1b5         db  0x00 ; '.'
000000000020a1b6         db  0x00 ; '.'
000000000020a1b7         db  0x00 ; '.'
000000000020a1b8         db  0x18 ; '.'
000000000020a1b9         db  0x00 ; '.'
000000000020a1ba         db  0x00 ; '.'
000000000020a1bb         db  0x00 ; '.'
000000000020a1bc         db  0x58 ; 'X'
000000000020a1bd         db  0x43 ; 'C'
000000000020a1be         db  0x50 ; 'P'
000000000020a1bf         db  0x55 ; 'U'
000000000020a1c0         db  0x00 ; '.'
000000000020a1c1         db  0x00 ; '.'
000000000020a1c2         db  0x00 ; '.'
000000000020a1c3         db  0x00 ; '.'
000000000020a1c4         db  0x19 ; '.'
000000000020a1c5         db  0x00 ; '.'
000000000020a1c6         db  0x00 ; '.'
000000000020a1c7         db  0x00 ; '.'
000000000020a1c8         db  0x58 ; 'X'
000000000020a1c9         db  0x46 ; 'F'
000000000020a1ca         db  0x53 ; 'S'
000000000020a1cb         db  0x5a ; 'Z'
000000000020a1cc         db  0x00 ; '.'
000000000020a1cd         db  0x00 ; '.'
000000000020a1ce         db  0x00 ; '.'
000000000020a1cf         db  0x00 ; '.'
000000000020a1d0         db  0x06 ; '.'
000000000020a1d1         db  0x00 ; '.'
000000000020a1d2         db  0x00 ; '.'
000000000020a1d3         db  0x00 ; '.'
000000000020a1d4         db  0x49 ; 'I'
000000000020a1d5         db  0x4f ; 'O'
000000000020a1d6         db  0x54 ; 'T'
000000000020a1d7         db  0x00 ; '.'
000000000020a1d8         db  0x00 ; '.'
000000000020a1d9         db  0x00 ; '.'
000000000020a1da         db  0x00 ; '.'
000000000020a1db         db  0x00 ; '.'
000000000020a1dc         db  0x11 ; '.'
000000000020a1dd         db  0x00 ; '.'
000000000020a1de         db  0x00 ; '.'
000000000020a1df         db  0x00 ; '.'
000000000020a1e0         db  0x43 ; 'C'
000000000020a1e1         db  0x4c ; 'L'
000000000020a1e2         db  0x44 ; 'D'
000000000020a1e3         db  0x00 ; '.'
000000000020a1e4         db  0x00 ; '.'
000000000020a1e5         db  0x00 ; '.'
000000000020a1e6         db  0x00 ; '.'
000000000020a1e7         db  0x00 ; '.'
000000000020a1e8         db  0x1e ; '.'
000000000020a1e9         db  0x00 ; '.'
000000000020a1ea         db  0x00 ; '.'
000000000020a1eb         db  0x00 ; '.'
000000000020a1ec         db  0x50 ; 'P'
000000000020a1ed         db  0x57 ; 'W'
000000000020a1ee         db  0x52 ; 'R'
000000000020a1ef         db  0x00 ; '.'
000000000020a1f0         db  0x00 ; '.'
000000000020a1f1         db  0x00 ; '.'
000000000020a1f2         db  0x00 ; '.'
000000000020a1f3         db  0x00 ; '.'
000000000020a1f4         db  0x1c ; '.'
000000000020a1f5         db  0x00 ; '.'
000000000020a1f6         db  0x00 ; '.'
000000000020a1f7         db  0x00 ; '.'
000000000020a1f8         db  0x57 ; 'W'
000000000020a1f9         db  0x49 ; 'I'
000000000020a1fa         db  0x4e ; 'N'
000000000020a1fb         db  0x43 ; 'C'
000000000020a1fc         db  0x48 ; 'H'
000000000020a1fd         db  0x00 ; '.'
000000000020a1fe         db  0x00 ; '.'
000000000020a1ff         db  0x00 ; '.'
000000000020a200         db  0x1d ; '.'
000000000020a201         db  0x00 ; '.'
000000000020a202         db  0x00 ; '.'
000000000020a203         db  0x00 ; '.'
000000000020a204         db  0x49 ; 'I'
000000000020a205         db  0x4f ; 'O'
000000000020a206         db  0x00 ; '.'
000000000020a207         db  0x00 ; '.'
000000000020a208         db  0x00 ; '.'
000000000020a209         db  0x00 ; '.'
000000000020a20a         db  0x00 ; '.'
000000000020a20b         db  0x00 ; '.'
000000000020a20c         db  0x10 ; '.'
000000000020a20d         db  0x00 ; '.'
000000000020a20e         db  0x00 ; '.'
000000000020a20f         db  0x00 ; '.'
000000000020a210         db  0x53 ; 'S'
000000000020a211         db  0x54 ; 'T'
000000000020a212         db  0x4b ; 'K'
000000000020a213         db  0x46 ; 'F'
000000000020a214         db  0x4c ; 'L'
000000000020a215         db  0x54 ; 'T'
000000000020a216         db  0x00 ; '.'
000000000020a217         db  0x00 ; '.'
000000000020a218         db  0x00 ; '.'
000000000020a219         db  0x00 ; '.'
000000000020a21a         db  0x00 ; '.'
000000000020a21b         db  0x00 ; '.'
000000000020a21c         db  0x45 ; 'E'
000000000020a21d         db  0x58 ; 'X'
000000000020a21e         db  0x49 ; 'I'
000000000020a21f         db  0x54 ; 'T'
000000000020a220         db  0x00 ; '.'
000000000020a221         db  0x00 ; '.'
000000000020a222         db  0x00 ; '.'
000000000020a223         db  0x00 ; '.'
000000000020a224         db  0x00 ; '.'
000000000020a225         db  0x00 ; '.'
000000000020a226         db  0x00 ; '.'
000000000020a227         db  0x00 ; '.'
                     __TMC_END__:
000000000020a228         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7
000000000020a229         db  0x00 ; '.'
000000000020a22a         db  0x00 ; '.'
000000000020a22b         db  0x00 ; '.'
000000000020a22c         db  0x00 ; '.'
000000000020a22d         db  0x00 ; '.'
000000000020a22e         db  0x00 ; '.'
000000000020a22f         db  0x00 ; '.'
000000000020a230         db  0x00 ; '.'
000000000020a231         db  0x00 ; '.'
000000000020a232         db  0x00 ; '.'
000000000020a233         db  0x00 ; '.'
000000000020a234         db  0x00 ; '.'
000000000020a235         db  0x00 ; '.'
000000000020a236         db  0x00 ; '.'
000000000020a237         db  0x00 ; '.'
000000000020a238         db  0x00 ; '.'
000000000020a239         db  0x00 ; '.'
000000000020a23a         db  0x00 ; '.'
000000000020a23b         db  0x00 ; '.'
000000000020a23c         db  0x00 ; '.'
000000000020a23d         db  0x00 ; '.'
000000000020a23e         db  0x00 ; '.'
000000000020a23f         db  0x00 ; '.'


        ; Section .bss
        ; Range: [0x20a240; 0x20a558[ (792 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
000000000020a240         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+102
000000000020a241         db  0x00 ; '.'
000000000020a242         db  0x00 ; '.'
000000000020a243         db  0x00 ; '.'
000000000020a244         db  0x00 ; '.'
000000000020a245         db  0x00 ; '.'
000000000020a246         db  0x00 ; '.'
000000000020a247         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
000000000020a248         db  0x00 ; '.'                                         ; DATA XREF=main+930, usage+125, usage+162, usage+199, usage+236, usage+273, usage+310, usage+347, usage+384, usage+421, usage+458
000000000020a249         db  0x00 ; '.'
000000000020a24a         db  0x00 ; '.'
000000000020a24b         db  0x00 ; '.'
000000000020a24c         db  0x00 ; '.'
000000000020a24d         db  0x00 ; '.'
000000000020a24e         db  0x00 ; '.'
000000000020a24f         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
000000000020a250         db  0x00 ; '.'                                         ; DATA XREF=main+457, main+1424, main+1537, main+2317, main+2391, main+2432, main+2456, main+2469, main+2654, main+3318, main+3354
000000000020a251         db  0x00 ; '.'
000000000020a252         db  0x00 ; '.'
000000000020a253         db  0x00 ; '.'
000000000020a254         db  0x00 ; '.'
000000000020a255         db  0x00 ; '.'
000000000020a256         db  0x00 ; '.'
000000000020a257         db  0x00 ; '.'
                     __environ@@GLIBC_2.2.5:
000000000020a258         db  0x00 ; '.'                                         ; DATA XREF=main+2398, main+2770
000000000020a259         db  0x00 ; '.'
000000000020a25a         db  0x00 ; '.'
000000000020a25b         db  0x00 ; '.'
000000000020a25c         db  0x00 ; '.'
000000000020a25d         db  0x00 ; '.'
000000000020a25e         db  0x00 ; '.'
000000000020a25f         db  0x00 ; '.'
                     optarg@@GLIBC_2.2.5:
000000000020a260         db  0x00 ; '.'                                         ; DATA XREF=main+337, main+405, main+720, main+737, main+760, main+784, main+846
000000000020a261         db  0x00 ; '.'
000000000020a262         db  0x00 ; '.'
000000000020a263         db  0x00 ; '.'
000000000020a264         db  0x00 ; '.'
000000000020a265         db  0x00 ; '.'
000000000020a266         db  0x00 ; '.'
000000000020a267         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
000000000020a268         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
000000000020a269         db  0x00 ; '.'
000000000020a26a         db  0x00 ; '.'
000000000020a26b         db  0x00 ; '.'
000000000020a26c         db  0x00 ; '.'
000000000020a26d         db  0x00 ; '.'
000000000020a26e         db  0x00 ; '.'
000000000020a26f         db  0x00 ; '.'
000000000020a270         db  0x00 ; '.'
000000000020a271         db  0x00 ; '.'
000000000020a272         db  0x00 ; '.'
000000000020a273         db  0x00 ; '.'
000000000020a274         db  0x00 ; '.'
000000000020a275         db  0x00 ; '.'
000000000020a276         db  0x00 ; '.'
000000000020a277         db  0x00 ; '.'
000000000020a278         db  0x00 ; '.'
000000000020a279         db  0x00 ; '.'
000000000020a27a         db  0x00 ; '.'
000000000020a27b         db  0x00 ; '.'
000000000020a27c         db  0x00 ; '.'
000000000020a27d         db  0x00 ; '.'
000000000020a27e         db  0x00 ; '.'
000000000020a27f         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
000000000020a280         db  0x00 ; '.'                                         ; DATA XREF=main+1345, main+2355, main+2523, main+3110, main+3501, main+3530, main+3717, main+3787, main+4011, main+4075, main+4124
000000000020a281         db  0x00 ; '.'
000000000020a282         db  0x00 ; '.'
000000000020a283         db  0x00 ; '.'
000000000020a284         db  0x00 ; '.'
000000000020a285         db  0x00 ; '.'
000000000020a286         db  0x00 ; '.'
000000000020a287         db  0x00 ; '.'
                     completed.7697:
000000000020a288         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
000000000020a289         db  0x00 ; '.'
000000000020a28a         db  0x00 ; '.'
000000000020a28b         db  0x00 ; '.'
000000000020a28c         db  0x00 ; '.'
000000000020a28d         db  0x00 ; '.'
000000000020a28e         db  0x00 ; '.'
000000000020a28f         db  0x00 ; '.'
000000000020a290         db  0x00 ; '.'
000000000020a291         db  0x00 ; '.'
000000000020a292         db  0x00 ; '.'
000000000020a293         db  0x00 ; '.'
000000000020a294         db  0x00 ; '.'
000000000020a295         db  0x00 ; '.'
000000000020a296         db  0x00 ; '.'
000000000020a297         db  0x00 ; '.'
000000000020a298         db  0x00 ; '.'
000000000020a299         db  0x00 ; '.'
000000000020a29a         db  0x00 ; '.'
000000000020a29b         db  0x00 ; '.'
000000000020a29c         db  0x00 ; '.'
000000000020a29d         db  0x00 ; '.'
000000000020a29e         db  0x00 ; '.'
000000000020a29f         db  0x00 ; '.'
                     dummy_environ.7817:
000000000020a2a0         db  0x00 ; '.'                                         ; DATA XREF=main+2384
000000000020a2a1         db  0x00 ; '.'
000000000020a2a2         db  0x00 ; '.'
000000000020a2a3         db  0x00 ; '.'
000000000020a2a4         db  0x00 ; '.'
000000000020a2a5         db  0x00 ; '.'
000000000020a2a6         db  0x00 ; '.'
000000000020a2a7         db  0x00 ; '.'
                     report_signal_handling:
000000000020a2a8         db  0x00 ; '.'                                         ; DATA XREF=main+384, main+3252
                     sig_mask_changed:
000000000020a2a9         db  0x00 ; '.'                                         ; DATA XREF=main+3229, parse_block_signal_params+41, parse_block_signal_params+63, parse_block_signal_params+419
000000000020a2aa         db  0x00 ; '.'
000000000020a2ab         db  0x00 ; '.'
000000000020a2ac         db  0x00 ; '.'
000000000020a2ad         db  0x00 ; '.'
000000000020a2ae         db  0x00 ; '.'
000000000020a2af         db  0x00 ; '.'
000000000020a2b0         db  0x00 ; '.'
000000000020a2b1         db  0x00 ; '.'
000000000020a2b2         db  0x00 ; '.'
000000000020a2b3         db  0x00 ; '.'
000000000020a2b4         db  0x00 ; '.'
000000000020a2b5         db  0x00 ; '.'
000000000020a2b6         db  0x00 ; '.'
000000000020a2b7         db  0x00 ; '.'
000000000020a2b8         db  0x00 ; '.'
000000000020a2b9         db  0x00 ; '.'
000000000020a2ba         db  0x00 ; '.'
000000000020a2bb         db  0x00 ; '.'
000000000020a2bc         db  0x00 ; '.'
000000000020a2bd         db  0x00 ; '.'
000000000020a2be         db  0x00 ; '.'
000000000020a2bf         db  0x00 ; '.'
                     unblock_signals:
000000000020a2c0         db  0x00 ; '.'                                         ; DATA XREF=main+4356, parse_block_signal_params+114, parse_block_signal_params+211, parse_block_signal_params+356, parse_block_signal_params+393, parse_block_signal_params+448
000000000020a2c1         db  0x00 ; '.'
000000000020a2c2         db  0x00 ; '.'
000000000020a2c3         db  0x00 ; '.'
000000000020a2c4         db  0x00 ; '.'
000000000020a2c5         db  0x00 ; '.'
000000000020a2c6         db  0x00 ; '.'
000000000020a2c7         db  0x00 ; '.'
000000000020a2c8         db  0x00 ; '.'
000000000020a2c9         db  0x00 ; '.'
000000000020a2ca         db  0x00 ; '.'
000000000020a2cb         db  0x00 ; '.'
000000000020a2cc         db  0x00 ; '.'
000000000020a2cd         db  0x00 ; '.'
000000000020a2ce         db  0x00 ; '.'
000000000020a2cf         db  0x00 ; '.'
000000000020a2d0         db  0x00 ; '.'
000000000020a2d1         db  0x00 ; '.'
000000000020a2d2         db  0x00 ; '.'
000000000020a2d3         db  0x00 ; '.'
000000000020a2d4         db  0x00 ; '.'
000000000020a2d5         db  0x00 ; '.'
000000000020a2d6         db  0x00 ; '.'
000000000020a2d7         db  0x00 ; '.'
000000000020a2d8         db  0x00 ; '.'
000000000020a2d9         db  0x00 ; '.'
000000000020a2da         db  0x00 ; '.'
000000000020a2db         db  0x00 ; '.'
000000000020a2dc         db  0x00 ; '.'
000000000020a2dd         db  0x00 ; '.'
000000000020a2de         db  0x00 ; '.'
000000000020a2df         db  0x00 ; '.'
000000000020a2e0         db  0x00 ; '.'
000000000020a2e1         db  0x00 ; '.'
000000000020a2e2         db  0x00 ; '.'
000000000020a2e3         db  0x00 ; '.'
000000000020a2e4         db  0x00 ; '.'
000000000020a2e5         db  0x00 ; '.'
000000000020a2e6         db  0x00 ; '.'
000000000020a2e7         db  0x00 ; '.'
000000000020a2e8         db  0x00 ; '.'
000000000020a2e9         db  0x00 ; '.'
000000000020a2ea         db  0x00 ; '.'
000000000020a2eb         db  0x00 ; '.'
000000000020a2ec         db  0x00 ; '.'
000000000020a2ed         db  0x00 ; '.'
000000000020a2ee         db  0x00 ; '.'
000000000020a2ef         db  0x00 ; '.'
000000000020a2f0         db  0x00 ; '.'
000000000020a2f1         db  0x00 ; '.'
000000000020a2f2         db  0x00 ; '.'
000000000020a2f3         db  0x00 ; '.'
000000000020a2f4         db  0x00 ; '.'
000000000020a2f5         db  0x00 ; '.'
000000000020a2f6         db  0x00 ; '.'
000000000020a2f7         db  0x00 ; '.'
000000000020a2f8         db  0x00 ; '.'
000000000020a2f9         db  0x00 ; '.'
000000000020a2fa         db  0x00 ; '.'
000000000020a2fb         db  0x00 ; '.'
000000000020a2fc         db  0x00 ; '.'
000000000020a2fd         db  0x00 ; '.'
000000000020a2fe         db  0x00 ; '.'
000000000020a2ff         db  0x00 ; '.'
000000000020a300         db  0x00 ; '.'
000000000020a301         db  0x00 ; '.'
000000000020a302         db  0x00 ; '.'
000000000020a303         db  0x00 ; '.'
000000000020a304         db  0x00 ; '.'
000000000020a305         db  0x00 ; '.'
000000000020a306         db  0x00 ; '.'
000000000020a307         db  0x00 ; '.'
000000000020a308         db  0x00 ; '.'
000000000020a309         db  0x00 ; '.'
000000000020a30a         db  0x00 ; '.'
000000000020a30b         db  0x00 ; '.'
000000000020a30c         db  0x00 ; '.'
000000000020a30d         db  0x00 ; '.'
000000000020a30e         db  0x00 ; '.'
000000000020a30f         db  0x00 ; '.'
000000000020a310         db  0x00 ; '.'
000000000020a311         db  0x00 ; '.'
000000000020a312         db  0x00 ; '.'
000000000020a313         db  0x00 ; '.'
000000000020a314         db  0x00 ; '.'
000000000020a315         db  0x00 ; '.'
000000000020a316         db  0x00 ; '.'
000000000020a317         db  0x00 ; '.'
000000000020a318         db  0x00 ; '.'
000000000020a319         db  0x00 ; '.'
000000000020a31a         db  0x00 ; '.'
000000000020a31b         db  0x00 ; '.'
000000000020a31c         db  0x00 ; '.'
000000000020a31d         db  0x00 ; '.'
000000000020a31e         db  0x00 ; '.'
000000000020a31f         db  0x00 ; '.'
000000000020a320         db  0x00 ; '.'
000000000020a321         db  0x00 ; '.'
000000000020a322         db  0x00 ; '.'
000000000020a323         db  0x00 ; '.'
000000000020a324         db  0x00 ; '.'
000000000020a325         db  0x00 ; '.'
000000000020a326         db  0x00 ; '.'
000000000020a327         db  0x00 ; '.'
000000000020a328         db  0x00 ; '.'
000000000020a329         db  0x00 ; '.'
000000000020a32a         db  0x00 ; '.'
000000000020a32b         db  0x00 ; '.'
000000000020a32c         db  0x00 ; '.'
000000000020a32d         db  0x00 ; '.'
000000000020a32e         db  0x00 ; '.'
000000000020a32f         db  0x00 ; '.'
000000000020a330         db  0x00 ; '.'
000000000020a331         db  0x00 ; '.'
000000000020a332         db  0x00 ; '.'
000000000020a333         db  0x00 ; '.'
000000000020a334         db  0x00 ; '.'
000000000020a335         db  0x00 ; '.'
000000000020a336         db  0x00 ; '.'
000000000020a337         db  0x00 ; '.'
000000000020a338         db  0x00 ; '.'
000000000020a339         db  0x00 ; '.'
000000000020a33a         db  0x00 ; '.'
000000000020a33b         db  0x00 ; '.'
000000000020a33c         db  0x00 ; '.'
000000000020a33d         db  0x00 ; '.'
000000000020a33e         db  0x00 ; '.'
000000000020a33f         db  0x00 ; '.'
                     block_signals:
000000000020a340         db  0x00 ; '.'                                         ; DATA XREF=main+4276, parse_block_signal_params+107, parse_block_signal_params+344, parse_block_signal_params+381, parse_block_signal_params+460
000000000020a341         db  0x00 ; '.'
000000000020a342         db  0x00 ; '.'
000000000020a343         db  0x00 ; '.'
000000000020a344         db  0x00 ; '.'
000000000020a345         db  0x00 ; '.'
000000000020a346         db  0x00 ; '.'
000000000020a347         db  0x00 ; '.'
000000000020a348         db  0x00 ; '.'
000000000020a349         db  0x00 ; '.'
000000000020a34a         db  0x00 ; '.'
000000000020a34b         db  0x00 ; '.'
000000000020a34c         db  0x00 ; '.'
000000000020a34d         db  0x00 ; '.'
000000000020a34e         db  0x00 ; '.'
000000000020a34f         db  0x00 ; '.'
000000000020a350         db  0x00 ; '.'
000000000020a351         db  0x00 ; '.'
000000000020a352         db  0x00 ; '.'
000000000020a353         db  0x00 ; '.'
000000000020a354         db  0x00 ; '.'
000000000020a355         db  0x00 ; '.'
000000000020a356         db  0x00 ; '.'
000000000020a357         db  0x00 ; '.'
000000000020a358         db  0x00 ; '.'
000000000020a359         db  0x00 ; '.'
000000000020a35a         db  0x00 ; '.'
000000000020a35b         db  0x00 ; '.'
000000000020a35c         db  0x00 ; '.'
000000000020a35d         db  0x00 ; '.'
000000000020a35e         db  0x00 ; '.'
000000000020a35f         db  0x00 ; '.'
000000000020a360         db  0x00 ; '.'
000000000020a361         db  0x00 ; '.'
000000000020a362         db  0x00 ; '.'
000000000020a363         db  0x00 ; '.'
000000000020a364         db  0x00 ; '.'
000000000020a365         db  0x00 ; '.'
000000000020a366         db  0x00 ; '.'
000000000020a367         db  0x00 ; '.'
000000000020a368         db  0x00 ; '.'
000000000020a369         db  0x00 ; '.'
000000000020a36a         db  0x00 ; '.'
000000000020a36b         db  0x00 ; '.'
000000000020a36c         db  0x00 ; '.'
000000000020a36d         db  0x00 ; '.'
000000000020a36e         db  0x00 ; '.'
000000000020a36f         db  0x00 ; '.'
000000000020a370         db  0x00 ; '.'
000000000020a371         db  0x00 ; '.'
000000000020a372         db  0x00 ; '.'
000000000020a373         db  0x00 ; '.'
000000000020a374         db  0x00 ; '.'
000000000020a375         db  0x00 ; '.'
000000000020a376         db  0x00 ; '.'
000000000020a377         db  0x00 ; '.'
000000000020a378         db  0x00 ; '.'
000000000020a379         db  0x00 ; '.'
000000000020a37a         db  0x00 ; '.'
000000000020a37b         db  0x00 ; '.'
000000000020a37c         db  0x00 ; '.'
000000000020a37d         db  0x00 ; '.'
000000000020a37e         db  0x00 ; '.'
000000000020a37f         db  0x00 ; '.'
000000000020a380         db  0x00 ; '.'
000000000020a381         db  0x00 ; '.'
000000000020a382         db  0x00 ; '.'
000000000020a383         db  0x00 ; '.'
000000000020a384         db  0x00 ; '.'
000000000020a385         db  0x00 ; '.'
000000000020a386         db  0x00 ; '.'
000000000020a387         db  0x00 ; '.'
000000000020a388         db  0x00 ; '.'
000000000020a389         db  0x00 ; '.'
000000000020a38a         db  0x00 ; '.'
000000000020a38b         db  0x00 ; '.'
000000000020a38c         db  0x00 ; '.'
000000000020a38d         db  0x00 ; '.'
000000000020a38e         db  0x00 ; '.'
000000000020a38f         db  0x00 ; '.'
000000000020a390         db  0x00 ; '.'
000000000020a391         db  0x00 ; '.'
000000000020a392         db  0x00 ; '.'
000000000020a393         db  0x00 ; '.'
000000000020a394         db  0x00 ; '.'
000000000020a395         db  0x00 ; '.'
000000000020a396         db  0x00 ; '.'
000000000020a397         db  0x00 ; '.'
000000000020a398         db  0x00 ; '.'
000000000020a399         db  0x00 ; '.'
000000000020a39a         db  0x00 ; '.'
000000000020a39b         db  0x00 ; '.'
000000000020a39c         db  0x00 ; '.'
000000000020a39d         db  0x00 ; '.'
000000000020a39e         db  0x00 ; '.'
000000000020a39f         db  0x00 ; '.'
000000000020a3a0         db  0x00 ; '.'
000000000020a3a1         db  0x00 ; '.'
000000000020a3a2         db  0x00 ; '.'
000000000020a3a3         db  0x00 ; '.'
000000000020a3a4         db  0x00 ; '.'
000000000020a3a5         db  0x00 ; '.'
000000000020a3a6         db  0x00 ; '.'
000000000020a3a7         db  0x00 ; '.'
000000000020a3a8         db  0x00 ; '.'
000000000020a3a9         db  0x00 ; '.'
000000000020a3aa         db  0x00 ; '.'
000000000020a3ab         db  0x00 ; '.'
000000000020a3ac         db  0x00 ; '.'
000000000020a3ad         db  0x00 ; '.'
000000000020a3ae         db  0x00 ; '.'
000000000020a3af         db  0x00 ; '.'
000000000020a3b0         db  0x00 ; '.'
000000000020a3b1         db  0x00 ; '.'
000000000020a3b2         db  0x00 ; '.'
000000000020a3b3         db  0x00 ; '.'
000000000020a3b4         db  0x00 ; '.'
000000000020a3b5         db  0x00 ; '.'
000000000020a3b6         db  0x00 ; '.'
000000000020a3b7         db  0x00 ; '.'
000000000020a3b8         db  0x00 ; '.'
000000000020a3b9         db  0x00 ; '.'
000000000020a3ba         db  0x00 ; '.'
000000000020a3bb         db  0x00 ; '.'
000000000020a3bc         db  0x00 ; '.'
000000000020a3bd         db  0x00 ; '.'
000000000020a3be         db  0x00 ; '.'
000000000020a3bf         db  0x00 ; '.'
                     signals:
000000000020a3c0         db  0x00 ; '.'                                         ; DATA XREF=main+138, main+2938, parse_signal_action_params+106, parse_signal_action_params+302
000000000020a3c1         db  0x00 ; '.'
000000000020a3c2         db  0x00 ; '.'
000000000020a3c3         db  0x00 ; '.'
000000000020a3c4         db  0x00 ; '.'
000000000020a3c5         db  0x00 ; '.'
000000000020a3c6         db  0x00 ; '.'
000000000020a3c7         db  0x00 ; '.'
                     vnlen:
000000000020a3c8         db  0x00 ; '.'                                         ; DATA XREF=extract_varname+132, extract_varname+236
000000000020a3c9         db  0x00 ; '.'
000000000020a3ca         db  0x00 ; '.'
000000000020a3cb         db  0x00 ; '.'
000000000020a3cc         db  0x00 ; '.'
000000000020a3cd         db  0x00 ; '.'
000000000020a3ce         db  0x00 ; '.'
000000000020a3cf         db  0x00 ; '.'
                     varname:
000000000020a3d0         db  0x00 ; '.'                                         ; DATA XREF=extract_varname+118, extract_varname+256
000000000020a3d1         db  0x00 ; '.'
000000000020a3d2         db  0x00 ; '.'
000000000020a3d3         db  0x00 ; '.'
000000000020a3d4         db  0x00 ; '.'
000000000020a3d5         db  0x00 ; '.'
000000000020a3d6         db  0x00 ; '.'
000000000020a3d7         db  0x00 ; '.'
                     dev_debug:
000000000020a3d8         db  0x00 ; '.'                                         ; DATA XREF=main+816, main+1294, main+1374, main+1398, main+2005, main+2346, main+2514, main+3041, main+3073, main+3274, main+3305
000000000020a3d9         db  0x00 ; '.'
000000000020a3da         db  0x00 ; '.'
000000000020a3db         db  0x00 ; '.'
000000000020a3dc         db  0x00 ; '.'
000000000020a3dd         db  0x00 ; '.'
000000000020a3de         db  0x00 ; '.'
000000000020a3df         db  0x00 ; '.'
                     usvars_used:
000000000020a3e0         db  0x00 ; '.'                                         ; DATA XREF=main+832, main+866, main+2739, main+3406, main+3470
000000000020a3e1         db  0x00 ; '.'
000000000020a3e2         db  0x00 ; '.'
000000000020a3e3         db  0x00 ; '.'
000000000020a3e4         db  0x00 ; '.'
000000000020a3e5         db  0x00 ; '.'
000000000020a3e6         db  0x00 ; '.'
000000000020a3e7         db  0x00 ; '.'
                     usvars_alloc:
000000000020a3e8         db  0x00 ; '.'                                         ; DATA XREF=main+839, main+2720
000000000020a3e9         db  0x00 ; '.'
000000000020a3ea         db  0x00 ; '.'
000000000020a3eb         db  0x00 ; '.'
000000000020a3ec         db  0x00 ; '.'
000000000020a3ed         db  0x00 ; '.'
000000000020a3ee         db  0x00 ; '.'
000000000020a3ef         db  0x00 ; '.'
                     usvars:
000000000020a3f0         db  0x00 ; '.'                                         ; DATA XREF=main+873, main+2666, main+2732, main+3420, main+3440
000000000020a3f1         db  0x00 ; '.'
000000000020a3f2         db  0x00 ; '.'
000000000020a3f3         db  0x00 ; '.'
000000000020a3f4         db  0x00 ; '.'
000000000020a3f5         db  0x00 ; '.'
000000000020a3f6         db  0x00 ; '.'
000000000020a3f7         db  0x00 ; '.'
                     ignore_EPIPE:
000000000020a3f8         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
000000000020a3f9         db  0x00 ; '.'
000000000020a3fa         db  0x00 ; '.'
000000000020a3fb         db  0x00 ; '.'
000000000020a3fc         db  0x00 ; '.'
000000000020a3fd         db  0x00 ; '.'
000000000020a3fe         db  0x00 ; '.'
000000000020a3ff         db  0x00 ; '.'
                     file_name:
000000000020a400         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
000000000020a401         db  0x00 ; '.'
000000000020a402         db  0x00 ; '.'
000000000020a403         db  0x00 ; '.'
000000000020a404         db  0x00 ; '.'
000000000020a405         db  0x00 ; '.'
000000000020a406         db  0x00 ; '.'
000000000020a407         db  0x00 ; '.'
                     program_name:
000000000020a408         db  0x00 ; '.'                                         ; DATA XREF=usage+20, set_program_name+109
000000000020a409         db  0x00 ; '.'
000000000020a40a         db  0x00 ; '.'
000000000020a40b         db  0x00 ; '.'
000000000020a40c         db  0x00 ; '.'
000000000020a40d         db  0x00 ; '.'
000000000020a40e         db  0x00 ; '.'
000000000020a40f         db  0x00 ; '.'
000000000020a410         db  0x00 ; '.'
000000000020a411         db  0x00 ; '.'
000000000020a412         db  0x00 ; '.'
000000000020a413         db  0x00 ; '.'
000000000020a414         db  0x00 ; '.'
000000000020a415         db  0x00 ; '.'
000000000020a416         db  0x00 ; '.'
000000000020a417         db  0x00 ; '.'
000000000020a418         db  0x00 ; '.'
000000000020a419         db  0x00 ; '.'
000000000020a41a         db  0x00 ; '.'
000000000020a41b         db  0x00 ; '.'
000000000020a41c         db  0x00 ; '.'
000000000020a41d         db  0x00 ; '.'
000000000020a41e         db  0x00 ; '.'
000000000020a41f         db  0x00 ; '.'
                     slot0:
000000000020a420         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
000000000020a421         db  0x00 ; '.'
000000000020a422         db  0x00 ; '.'
000000000020a423         db  0x00 ; '.'
000000000020a424         db  0x00 ; '.'
000000000020a425         db  0x00 ; '.'
000000000020a426         db  0x00 ; '.'
000000000020a427         db  0x00 ; '.'
000000000020a428         db  0x00 ; '.'
000000000020a429         db  0x00 ; '.'
000000000020a42a         db  0x00 ; '.'
000000000020a42b         db  0x00 ; '.'
000000000020a42c         db  0x00 ; '.'
000000000020a42d         db  0x00 ; '.'
000000000020a42e         db  0x00 ; '.'
000000000020a42f         db  0x00 ; '.'
000000000020a430         db  0x00 ; '.'
000000000020a431         db  0x00 ; '.'
000000000020a432         db  0x00 ; '.'
000000000020a433         db  0x00 ; '.'
000000000020a434         db  0x00 ; '.'
000000000020a435         db  0x00 ; '.'
000000000020a436         db  0x00 ; '.'
000000000020a437         db  0x00 ; '.'
000000000020a438         db  0x00 ; '.'
000000000020a439         db  0x00 ; '.'
000000000020a43a         db  0x00 ; '.'
000000000020a43b         db  0x00 ; '.'
000000000020a43c         db  0x00 ; '.'
000000000020a43d         db  0x00 ; '.'
000000000020a43e         db  0x00 ; '.'
000000000020a43f         db  0x00 ; '.'
000000000020a440         db  0x00 ; '.'
000000000020a441         db  0x00 ; '.'
000000000020a442         db  0x00 ; '.'
000000000020a443         db  0x00 ; '.'
000000000020a444         db  0x00 ; '.'
000000000020a445         db  0x00 ; '.'
000000000020a446         db  0x00 ; '.'
000000000020a447         db  0x00 ; '.'
000000000020a448         db  0x00 ; '.'
000000000020a449         db  0x00 ; '.'
000000000020a44a         db  0x00 ; '.'
000000000020a44b         db  0x00 ; '.'
000000000020a44c         db  0x00 ; '.'
000000000020a44d         db  0x00 ; '.'
000000000020a44e         db  0x00 ; '.'
000000000020a44f         db  0x00 ; '.'
000000000020a450         db  0x00 ; '.'
000000000020a451         db  0x00 ; '.'
000000000020a452         db  0x00 ; '.'
000000000020a453         db  0x00 ; '.'
000000000020a454         db  0x00 ; '.'
000000000020a455         db  0x00 ; '.'
000000000020a456         db  0x00 ; '.'
000000000020a457         db  0x00 ; '.'
000000000020a458         db  0x00 ; '.'
000000000020a459         db  0x00 ; '.'
000000000020a45a         db  0x00 ; '.'
000000000020a45b         db  0x00 ; '.'
000000000020a45c         db  0x00 ; '.'
000000000020a45d         db  0x00 ; '.'
000000000020a45e         db  0x00 ; '.'
000000000020a45f         db  0x00 ; '.'
000000000020a460         db  0x00 ; '.'
000000000020a461         db  0x00 ; '.'
000000000020a462         db  0x00 ; '.'
000000000020a463         db  0x00 ; '.'
000000000020a464         db  0x00 ; '.'
000000000020a465         db  0x00 ; '.'
000000000020a466         db  0x00 ; '.'
000000000020a467         db  0x00 ; '.'
000000000020a468         db  0x00 ; '.'
000000000020a469         db  0x00 ; '.'
000000000020a46a         db  0x00 ; '.'
000000000020a46b         db  0x00 ; '.'
000000000020a46c         db  0x00 ; '.'
000000000020a46d         db  0x00 ; '.'
000000000020a46e         db  0x00 ; '.'
000000000020a46f         db  0x00 ; '.'
000000000020a470         db  0x00 ; '.'
000000000020a471         db  0x00 ; '.'
000000000020a472         db  0x00 ; '.'
000000000020a473         db  0x00 ; '.'
000000000020a474         db  0x00 ; '.'
000000000020a475         db  0x00 ; '.'
000000000020a476         db  0x00 ; '.'
000000000020a477         db  0x00 ; '.'
000000000020a478         db  0x00 ; '.'
000000000020a479         db  0x00 ; '.'
000000000020a47a         db  0x00 ; '.'
000000000020a47b         db  0x00 ; '.'
000000000020a47c         db  0x00 ; '.'
000000000020a47d         db  0x00 ; '.'
000000000020a47e         db  0x00 ; '.'
000000000020a47f         db  0x00 ; '.'
000000000020a480         db  0x00 ; '.'
000000000020a481         db  0x00 ; '.'
000000000020a482         db  0x00 ; '.'
000000000020a483         db  0x00 ; '.'
000000000020a484         db  0x00 ; '.'
000000000020a485         db  0x00 ; '.'
000000000020a486         db  0x00 ; '.'
000000000020a487         db  0x00 ; '.'
000000000020a488         db  0x00 ; '.'
000000000020a489         db  0x00 ; '.'
000000000020a48a         db  0x00 ; '.'
000000000020a48b         db  0x00 ; '.'
000000000020a48c         db  0x00 ; '.'
000000000020a48d         db  0x00 ; '.'
000000000020a48e         db  0x00 ; '.'
000000000020a48f         db  0x00 ; '.'
000000000020a490         db  0x00 ; '.'
000000000020a491         db  0x00 ; '.'
000000000020a492         db  0x00 ; '.'
000000000020a493         db  0x00 ; '.'
000000000020a494         db  0x00 ; '.'
000000000020a495         db  0x00 ; '.'
000000000020a496         db  0x00 ; '.'
000000000020a497         db  0x00 ; '.'
000000000020a498         db  0x00 ; '.'
000000000020a499         db  0x00 ; '.'
000000000020a49a         db  0x00 ; '.'
000000000020a49b         db  0x00 ; '.'
000000000020a49c         db  0x00 ; '.'
000000000020a49d         db  0x00 ; '.'
000000000020a49e         db  0x00 ; '.'
000000000020a49f         db  0x00 ; '.'
000000000020a4a0         db  0x00 ; '.'
000000000020a4a1         db  0x00 ; '.'
000000000020a4a2         db  0x00 ; '.'
000000000020a4a3         db  0x00 ; '.'
000000000020a4a4         db  0x00 ; '.'
000000000020a4a5         db  0x00 ; '.'
000000000020a4a6         db  0x00 ; '.'
000000000020a4a7         db  0x00 ; '.'
000000000020a4a8         db  0x00 ; '.'
000000000020a4a9         db  0x00 ; '.'
000000000020a4aa         db  0x00 ; '.'
000000000020a4ab         db  0x00 ; '.'
000000000020a4ac         db  0x00 ; '.'
000000000020a4ad         db  0x00 ; '.'
000000000020a4ae         db  0x00 ; '.'
000000000020a4af         db  0x00 ; '.'
000000000020a4b0         db  0x00 ; '.'
000000000020a4b1         db  0x00 ; '.'
000000000020a4b2         db  0x00 ; '.'
000000000020a4b3         db  0x00 ; '.'
000000000020a4b4         db  0x00 ; '.'
000000000020a4b5         db  0x00 ; '.'
000000000020a4b6         db  0x00 ; '.'
000000000020a4b7         db  0x00 ; '.'
000000000020a4b8         db  0x00 ; '.'
000000000020a4b9         db  0x00 ; '.'
000000000020a4ba         db  0x00 ; '.'
000000000020a4bb         db  0x00 ; '.'
000000000020a4bc         db  0x00 ; '.'
000000000020a4bd         db  0x00 ; '.'
000000000020a4be         db  0x00 ; '.'
000000000020a4bf         db  0x00 ; '.'
000000000020a4c0         db  0x00 ; '.'
000000000020a4c1         db  0x00 ; '.'
000000000020a4c2         db  0x00 ; '.'
000000000020a4c3         db  0x00 ; '.'
000000000020a4c4         db  0x00 ; '.'
000000000020a4c5         db  0x00 ; '.'
000000000020a4c6         db  0x00 ; '.'
000000000020a4c7         db  0x00 ; '.'
000000000020a4c8         db  0x00 ; '.'
000000000020a4c9         db  0x00 ; '.'
000000000020a4ca         db  0x00 ; '.'
000000000020a4cb         db  0x00 ; '.'
000000000020a4cc         db  0x00 ; '.'
000000000020a4cd         db  0x00 ; '.'
000000000020a4ce         db  0x00 ; '.'
000000000020a4cf         db  0x00 ; '.'
000000000020a4d0         db  0x00 ; '.'
000000000020a4d1         db  0x00 ; '.'
000000000020a4d2         db  0x00 ; '.'
000000000020a4d3         db  0x00 ; '.'
000000000020a4d4         db  0x00 ; '.'
000000000020a4d5         db  0x00 ; '.'
000000000020a4d6         db  0x00 ; '.'
000000000020a4d7         db  0x00 ; '.'
000000000020a4d8         db  0x00 ; '.'
000000000020a4d9         db  0x00 ; '.'
000000000020a4da         db  0x00 ; '.'
000000000020a4db         db  0x00 ; '.'
000000000020a4dc         db  0x00 ; '.'
000000000020a4dd         db  0x00 ; '.'
000000000020a4de         db  0x00 ; '.'
000000000020a4df         db  0x00 ; '.'
000000000020a4e0         db  0x00 ; '.'
000000000020a4e1         db  0x00 ; '.'
000000000020a4e2         db  0x00 ; '.'
000000000020a4e3         db  0x00 ; '.'
000000000020a4e4         db  0x00 ; '.'
000000000020a4e5         db  0x00 ; '.'
000000000020a4e6         db  0x00 ; '.'
000000000020a4e7         db  0x00 ; '.'
000000000020a4e8         db  0x00 ; '.'
000000000020a4e9         db  0x00 ; '.'
000000000020a4ea         db  0x00 ; '.'
000000000020a4eb         db  0x00 ; '.'
000000000020a4ec         db  0x00 ; '.'
000000000020a4ed         db  0x00 ; '.'
000000000020a4ee         db  0x00 ; '.'
000000000020a4ef         db  0x00 ; '.'
000000000020a4f0         db  0x00 ; '.'
000000000020a4f1         db  0x00 ; '.'
000000000020a4f2         db  0x00 ; '.'
000000000020a4f3         db  0x00 ; '.'
000000000020a4f4         db  0x00 ; '.'
000000000020a4f5         db  0x00 ; '.'
000000000020a4f6         db  0x00 ; '.'
000000000020a4f7         db  0x00 ; '.'
000000000020a4f8         db  0x00 ; '.'
000000000020a4f9         db  0x00 ; '.'
000000000020a4fa         db  0x00 ; '.'
000000000020a4fb         db  0x00 ; '.'
000000000020a4fc         db  0x00 ; '.'
000000000020a4fd         db  0x00 ; '.'
000000000020a4fe         db  0x00 ; '.'
000000000020a4ff         db  0x00 ; '.'
000000000020a500         db  0x00 ; '.'
000000000020a501         db  0x00 ; '.'
000000000020a502         db  0x00 ; '.'
000000000020a503         db  0x00 ; '.'
000000000020a504         db  0x00 ; '.'
000000000020a505         db  0x00 ; '.'
000000000020a506         db  0x00 ; '.'
000000000020a507         db  0x00 ; '.'
000000000020a508         db  0x00 ; '.'
000000000020a509         db  0x00 ; '.'
000000000020a50a         db  0x00 ; '.'
000000000020a50b         db  0x00 ; '.'
000000000020a50c         db  0x00 ; '.'
000000000020a50d         db  0x00 ; '.'
000000000020a50e         db  0x00 ; '.'
000000000020a50f         db  0x00 ; '.'
000000000020a510         db  0x00 ; '.'
000000000020a511         db  0x00 ; '.'
000000000020a512         db  0x00 ; '.'
000000000020a513         db  0x00 ; '.'
000000000020a514         db  0x00 ; '.'
000000000020a515         db  0x00 ; '.'
000000000020a516         db  0x00 ; '.'
000000000020a517         db  0x00 ; '.'
000000000020a518         db  0x00 ; '.'
000000000020a519         db  0x00 ; '.'
000000000020a51a         db  0x00 ; '.'
000000000020a51b         db  0x00 ; '.'
000000000020a51c         db  0x00 ; '.'
000000000020a51d         db  0x00 ; '.'
000000000020a51e         db  0x00 ; '.'
000000000020a51f         db  0x00 ; '.'
                     default_quoting_options:
000000000020a520         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
000000000020a521         db  0x00 ; '.'
000000000020a522         db  0x00 ; '.'
000000000020a523         db  0x00 ; '.'
000000000020a524         db  0x00 ; '.'
000000000020a525         db  0x00 ; '.'
000000000020a526         db  0x00 ; '.'
000000000020a527         db  0x00 ; '.'
000000000020a528         db  0x00 ; '.'
000000000020a529         db  0x00 ; '.'
000000000020a52a         db  0x00 ; '.'
000000000020a52b         db  0x00 ; '.'
000000000020a52c         db  0x00 ; '.'
000000000020a52d         db  0x00 ; '.'
000000000020a52e         db  0x00 ; '.'
000000000020a52f         db  0x00 ; '.'
000000000020a530         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
000000000020a531         db  0x00 ; '.'
000000000020a532         db  0x00 ; '.'
000000000020a533         db  0x00 ; '.'
000000000020a534         db  0x00 ; '.'
000000000020a535         db  0x00 ; '.'
000000000020a536         db  0x00 ; '.'
000000000020a537         db  0x00 ; '.'
000000000020a538         db  0x00 ; '.'
000000000020a539         db  0x00 ; '.'
000000000020a53a         db  0x00 ; '.'
000000000020a53b         db  0x00 ; '.'
000000000020a53c         db  0x00 ; '.'
000000000020a53d         db  0x00 ; '.'
000000000020a53e         db  0x00 ; '.'
000000000020a53f         db  0x00 ; '.'
000000000020a540         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
000000000020a541         db  0x00 ; '.'
000000000020a542         db  0x00 ; '.'
000000000020a543         db  0x00 ; '.'
000000000020a544         db  0x00 ; '.'
000000000020a545         db  0x00 ; '.'
000000000020a546         db  0x00 ; '.'
000000000020a547         db  0x00 ; '.'
000000000020a548         db  0x00 ; '.'
000000000020a549         db  0x00 ; '.'
000000000020a54a         db  0x00 ; '.'
000000000020a54b         db  0x00 ; '.'
000000000020a54c         db  0x00 ; '.'
000000000020a54d         db  0x00 ; '.'
000000000020a54e         db  0x00 ; '.'
000000000020a54f         db  0x00 ; '.'
                     qword_20a550:
000000000020a550         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
000000000020a551         db  0x00 ; '.'
000000000020a552         db  0x00 ; '.'
000000000020a553         db  0x00 ; '.'
000000000020a554         db  0x00 ; '.'
000000000020a555         db  0x00 ; '.'
000000000020a556         db  0x00 ; '.'
000000000020a557         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x20a560; 0x20a990[ (1072 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x20a560; 0x414ef0[ (2140560 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     getenv:
000000000020a560         extern function code                                   ; DATA XREF=getenv@GOT
                     sigprocmask:
000000000020a568         extern function code                                   ; DATA XREF=sigprocmask@GOT
                     free:
000000000020a570         extern function code                                   ; DATA XREF=free@GOT
                     abort:
000000000020a578         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
000000000020a580         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
000000000020a588         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
000000000020a590         extern function code
                     _exit:
000000000020a598         extern function code                                   ; DATA XREF=_exit@GOT
                     strcpy:
000000000020a5a0         extern function code                                   ; DATA XREF=strcpy@GOT
                     __fpending:
000000000020a5a8         extern function code                                   ; DATA XREF=__fpending@GOT
                     sigaction:
000000000020a5b0         extern function code                                   ; DATA XREF=sigaction@GOT
                     textdomain:
000000000020a5b8         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
000000000020a5c0         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
000000000020a5c8         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     stpcpy:
000000000020a5d0         extern function code                                   ; DATA XREF=stpcpy@GOT
                     dcgettext:
000000000020a5d8         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
000000000020a5e0         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
000000000020a5e8         extern function code                                   ; DATA XREF=strlen@GOT
                     chdir:
000000000020a5f0         extern function code                                   ; DATA XREF=chdir@GOT
                     __stack_chk_fail:
000000000020a5f8         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
000000000020a600         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
000000000020a608         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     strchr:
000000000020a610         extern function code                                   ; DATA XREF=strchr@GOT
                     strrchr:
000000000020a618         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
000000000020a620         extern function code                                   ; DATA XREF=lseek@GOT
                     __assert_fail:
000000000020a628         extern function code                                   ; DATA XREF=__assert_fail@GOT
                     memset:
000000000020a630         extern function code                                   ; DATA XREF=memset@GOT
                     strspn:
000000000020a638         extern function code                                   ; DATA XREF=strspn@GOT
                     __libc_start_main:
000000000020a640         extern function code
                     memcmp:
000000000020a648         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
000000000020a650         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
000000000020a658         extern function code                                   ; DATA XREF=calloc@GOT
                     putenv:
000000000020a660         extern function code                                   ; DATA XREF=putenv@GOT
                     strcmp:
000000000020a668         extern function code                                   ; DATA XREF=strcmp@GOT
                     sigemptyset:
000000000020a670         extern function code                                   ; DATA XREF=sigemptyset@GOT
                     __gmon_start__:
000000000020a678         extern function code
                     strtol:
000000000020a680         extern function code                                   ; DATA XREF=strtol@GOT
                     sigfillset:
000000000020a688         extern function code                                   ; DATA XREF=sigfillset@GOT
                     memcpy:
000000000020a690         extern function code                                   ; DATA XREF=memcpy@GOT
                     fileno:
000000000020a698         extern function code                                   ; DATA XREF=fileno@GOT
                     malloc:
000000000020a6a0         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
000000000020a6a8         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
000000000020a6b0         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __freading:
000000000020a6b8         extern function code                                   ; DATA XREF=__freading@GOT
                     realloc:
000000000020a6c0         extern function code                                   ; DATA XREF=realloc@GOT
                     setlocale:
000000000020a6c8         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
000000000020a6d0         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     error:
000000000020a6d8         extern function code                                   ; DATA XREF=error@GOT
                     fseeko:
000000000020a6e0         extern function code                                   ; DATA XREF=fseeko@GOT
                     sigdelset:
000000000020a6e8         extern function code                                   ; DATA XREF=sigdelset@GOT
                     strtok:
000000000020a6f0         extern function code                                   ; DATA XREF=strtok@GOT
                     unsetenv:
000000000020a6f8         extern function code                                   ; DATA XREF=unsetenv@GOT
                     execvp:
000000000020a700         extern function code                                   ; DATA XREF=execvp@GOT
                     __cxa_atexit:
000000000020a708         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     __libc_current_sigrtmin:
000000000020a710         extern function code                                   ; DATA XREF=__libc_current_sigrtmin@GOT
                     sigismember:
000000000020a718         extern function code                                   ; DATA XREF=sigismember@GOT
                     exit:
000000000020a720         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
000000000020a728         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
000000000020a730         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     __libc_current_sigrtmax:
000000000020a738         extern function code                                   ; DATA XREF=__libc_current_sigrtmax@GOT
                     _ITM_registerTMCloneTable:
000000000020a740         extern function code
                     mbsinit:
000000000020a748         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
000000000020a750         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
000000000020a758         extern function code
                     sigaddset:
000000000020a760         extern function code                                   ; DATA XREF=sigaddset@GOT
                     __ctype_b_loc:
000000000020a768         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     __sprintf_chk:
000000000020a770         extern function code                                   ; DATA XREF=__sprintf_chk@GOT
                     getenv@@GLIBC_2.2.5:
000000000020a778         extern function code
                     sigprocmask@@GLIBC_2.2.5:
000000000020a780         extern function code
                     free@@GLIBC_2.2.5:
000000000020a788         extern function code
                     abort@@GLIBC_2.2.5:
000000000020a790         extern function code
                     __errno_location@@GLIBC_2.2.5:
000000000020a798         extern function code
                     strncmp@@GLIBC_2.2.5:
000000000020a7a0         extern function code
                     _ITM_deregisterTMCloneTable_20a7a8:        // _ITM_deregisterTMCloneTable
000000000020a7a8         extern function code
                     _exit@@GLIBC_2.2.5:
000000000020a7b0         extern function code
                     strcpy@@GLIBC_2.2.5:
000000000020a7b8         extern function code
                     __fpending@@GLIBC_2.2.5:
000000000020a7c0         extern function code
                     sigaction@@GLIBC_2.2.5:
000000000020a7c8         extern function code
                     textdomain@@GLIBC_2.2.5:
000000000020a7d0         extern function code
                     fclose@@GLIBC_2.2.5:
000000000020a7d8         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
000000000020a7e0         extern function code
                     stpcpy@@GLIBC_2.2.5:
000000000020a7e8         extern function code
                     dcgettext@@GLIBC_2.2.5:
000000000020a7f0         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
000000000020a7f8         extern function code
                     strlen@@GLIBC_2.2.5:
000000000020a800         extern function code
                     chdir@@GLIBC_2.2.5:
000000000020a808         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
000000000020a810         extern function code
                     getopt_long@@GLIBC_2.2.5:
000000000020a818         extern function code
                     mbrtowc@@GLIBC_2.2.5:
000000000020a820         extern function code
                     strchr@@GLIBC_2.2.5:
000000000020a828         extern function code
                     strrchr@@GLIBC_2.2.5:
000000000020a830         extern function code
                     lseek@@GLIBC_2.2.5:
000000000020a838         extern function code
                     __assert_fail@@GLIBC_2.2.5:
000000000020a840         extern function code
                     memset@@GLIBC_2.2.5:
000000000020a848         extern function code
                     strspn@@GLIBC_2.2.5:
000000000020a850         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
000000000020a858         extern function code
                     memcmp@@GLIBC_2.2.5:
000000000020a860         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
000000000020a868         extern function code
                     calloc@@GLIBC_2.2.5:
000000000020a870         extern function code
                     putenv@@GLIBC_2.2.5:
000000000020a878         extern function code
                     strcmp@@GLIBC_2.2.5:
000000000020a880         extern function code
                     sigemptyset@@GLIBC_2.2.5:
000000000020a888         extern function code
                     __gmon_start___20a890:        // __gmon_start__
000000000020a890         extern function code
                     strtol@@GLIBC_2.2.5:
000000000020a898         extern function code
                     sigfillset@@GLIBC_2.2.5:
000000000020a8a0         extern function code
                     memcpy@@GLIBC_2.14:
000000000020a8a8         extern function code
                     fileno@@GLIBC_2.2.5:
000000000020a8b0         extern function code
                     malloc@@GLIBC_2.2.5:
000000000020a8b8         extern function code
                     fflush@@GLIBC_2.2.5:
000000000020a8c0         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
000000000020a8c8         extern function code
                     __freading@@GLIBC_2.2.5:
000000000020a8d0         extern function code
                     realloc@@GLIBC_2.2.5:
000000000020a8d8         extern function code
                     setlocale@@GLIBC_2.2.5:
000000000020a8e0         extern function code
                     __printf_chk@@GLIBC_2.3.4:
000000000020a8e8         extern function code
                     error@@GLIBC_2.2.5:
000000000020a8f0         extern function code
                     fseeko@@GLIBC_2.2.5:
000000000020a8f8         extern function code
                     sigdelset@@GLIBC_2.2.5:
000000000020a900         extern function code
                     strtok@@GLIBC_2.2.5:
000000000020a908         extern function code
                     unsetenv@@GLIBC_2.2.5:
000000000020a910         extern function code
                     execvp@@GLIBC_2.2.5:
000000000020a918         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
000000000020a920         extern function code
                     __libc_current_sigrtmin@@GLIBC_2.2.5:
000000000020a928         extern function code
                     sigismember@@GLIBC_2.2.5:
000000000020a930         extern function code
                     exit@@GLIBC_2.2.5:
000000000020a938         extern function code
                     fwrite@@GLIBC_2.2.5:
000000000020a940         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
000000000020a948         extern function code
                     __libc_current_sigrtmax@@GLIBC_2.2.5:
000000000020a950         extern function code
                     _ITM_registerTMCloneTable_20a958:        // _ITM_registerTMCloneTable
000000000020a958         extern function code
                     mbsinit@@GLIBC_2.2.5:
000000000020a960         extern function code
                     iswprint@@GLIBC_2.2.5:
000000000020a968         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
000000000020a970         extern function code
                     sigaddset@@GLIBC_2.2.5:
000000000020a978         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
000000000020a980         extern function code
                     __sprintf_chk@@GLIBC_2.3.4:
000000000020a988         extern function code
