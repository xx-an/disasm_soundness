
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/basenc
        UUID: 87DA3DA1-1211-9F34-1170-94DBA4FA9483
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0x9f30[ (40752 bytes)
        ; File offset : [0; 40752[ (40752 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0xf0 ; '.'
0000000000000019         db  0x23 ; '#'
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0x00 ; '.'
0000000000000029         db  0x6c ; 'l'
000000000000002a         db  0x03 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0x30 ; '0'
00000000000000d1         db  0x9f ; '.'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0x30 ; '0'
00000000000000d9         db  0x9f ; '.'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0x10 ; '.'
00000000000000f1         db  0xaa ; '.'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0x10 ; '.'
00000000000000f9         db  0xaa ; '.'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0x10 ; '.'                                         ; DATA XREF=quotearg_free+87, rpl_fflush+18, slotvec0
0000000000000101         db  0xaa ; '.'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0x70 ; 'p'
0000000000000109         db  0x06 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0x48 ; 'H'
0000000000000111         db  0x08 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0x38 ; '8'
0000000000000129         db  0xac ; '.'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0x38 ; '8'
0000000000000131         db  0xac ; '.'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0x38 ; '8'
0000000000000139         db  0xac ; '.'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0x1c ; '.'
0000000000000199         db  0x8a ; '.'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0x1c ; '.'
00000000000001a1         db  0x8a ; '.'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0x1c ; '.'
00000000000001a9         db  0x8a ; '.'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0xcc ; '.'
00000000000001b1         db  0x03 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0xcc ; '.'
00000000000001b9         db  0x03 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'                                         ; DATA XREF=base32hex_encode+108
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'                                         ; DATA XREF=xstrtoumax+573
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0x10 ; '.'
0000000000000209         db  0xaa ; '.'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0x10 ; '.'
0000000000000211         db  0xaa ; '.'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0x10 ; '.'
0000000000000219         db  0xaa ; '.'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0xf0 ; '.'
0000000000000221         db  0x05 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0xf0 ; '.'
0000000000000229         db  0x05 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0x87 ; '.'
0000000000000285         db  0xda ; '.'
0000000000000286         db  0x3d ; '='
0000000000000287         db  0xa1 ; '.'
0000000000000288         db  0x12 ; '.'
0000000000000289         db  0x11 ; '.'
000000000000028a         db  0x9f ; '.'
000000000000028b         db  0x34 ; '4'
000000000000028c         db  0x11 ; '.'
000000000000028d         db  0x70 ; 'p'
000000000000028e         db  0x94 ; '.'
000000000000028f         db  0xdb ; '.'
0000000000000290         db  0xa4 ; '.'
0000000000000291         db  0xfa ; '.'
0000000000000292         db  0x94 ; '.'
0000000000000293         db  0x83 ; '.'
0000000000000294         db  0xb9 ; '.'
0000000000000295         db  0x8d ; '.'
0000000000000296         db  0x4a ; 'J'
0000000000000297         db  0xac ; '.'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2e0[ (72 bytes)
        ; File offset : [664; 736[ (72 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x38 ; '8'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'
00000000000002a9         db  0x4d ; 'M'
00000000000002aa         db  0x61 ; 'a'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0xa0 ; '.'
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x1c ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x38 ; '8'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x39 ; '9'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x3f ; '?'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x66 ; 'f'
00000000000002c5         db  0x55 ; 'U'
00000000000002c6         db  0x61 ; 'a'
00000000000002c7         db  0x10 ; '.'
00000000000002c8         db  0x96 ; '.'
00000000000002c9         db  0xa0 ; '.'
00000000000002ca         db  0x89 ; '.'
00000000000002cb         db  0x97 ; '.'
00000000000002cc         db  0xce ; '.'
00000000000002cd         db  0x2c ; ','
00000000000002ce         db  0x63 ; 'c'
00000000000002cf         db  0x72 ; 'r'
00000000000002d0         db  0xe4 ; '.'
00000000000002d1         db  0x62 ; 'b'
00000000000002d2         db  0x41 ; 'A'
00000000000002d3         db  0xf5 ; '.'
00000000000002d4         db  0x39 ; '9'
00000000000002d5         db  0xf2 ; '.'
00000000000002d6         db  0x8b ; '.'
00000000000002d7         db  0x1c ; '.'
00000000000002d8         db  0x32 ; '2'
00000000000002d9         db  0xc4 ; '.'
00000000000002da         db  0xf7 ; '.'
00000000000002db         db  0x12 ; '.'
00000000000002dc         db  0xb3 ; '.'
00000000000002dd         db  0xa2 ; '.'
00000000000002de         db  0xf7 ; '.'
00000000000002df         db  0x12 ; '.'


        ; Section .dynsym
        ; Range: [0x2e0; 0x8f8[ (1560 bytes)
        ; File offset : [736; 2296[ (1560 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0x58 ; 'X'
00000000000002f9         db  0x02 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x12 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x80 ; '.'
0000000000000311         db  0x00 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x12 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0x08 ; '.'
0000000000000329         db  0x01 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x12 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0x37 ; '7'
0000000000000341         db  0x00 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x12 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0xbc ; '.'
0000000000000359         db  0x02 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x20 ; ' '
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0x8c ; '.'
0000000000000371         db  0x00 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x12 ; '.'
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0xa5 ; '.'
0000000000000389         db  0x01 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x12 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0xf2 ; '.'
00000000000003a1         db  0x00 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x12 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0xf0 ; '.'
00000000000003b9         db  0x01 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x12 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0x42 ; 'B'
00000000000003d1         db  0x01 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x12 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0xec ; '.'                                         ; DATA XREF=xstrtoumax+420
00000000000003e9         db  0x01 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x12 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0x4e ; 'N'                                         ; DATA XREF=xstrtoumax+437, xstrtoumax+806, xstrtoumax+878
0000000000000401         db  0x00 ; '.'
0000000000000402         db  0x00 ; '.'
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x12 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'
0000000000000407         db  0x00 ; '.'
0000000000000408         db  0x00 ; '.'
0000000000000409         db  0x00 ; '.'
000000000000040a         db  0x00 ; '.'
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0xbf ; '.'
0000000000000419         db  0x00 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x12 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0xeb ; '.'
0000000000000431         db  0x00 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x12 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0x5e ; '^'
0000000000000449         db  0x00 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x12 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0x8b ; '.'
0000000000000461         db  0x01 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x12 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x29 ; ')'
0000000000000479         db  0x00 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x12 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0xb0 ; '.'
0000000000000491         db  0x01 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x12 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x2b ; '+'
00000000000004a9         db  0x02 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x12 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0x46 ; 'F'
00000000000004c1         db  0x00 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x12 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x35 ; '5'
00000000000004d9         db  0x01 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x12 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0xb1 ; '.'
00000000000004f1         db  0x00 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x12 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0x36 ; '6'
0000000000000509         db  0x02 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x12 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0x01 ; '.'
0000000000000521         db  0x01 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x12 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0xd6 ; '.'
0000000000000539         db  0x00 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x12 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0x92 ; '.'
0000000000000551         db  0x00 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x12 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0x12 ; '.'
0000000000000569         db  0x02 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x12 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0x19 ; '.'
0000000000000581         db  0x01 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x12 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0x49 ; 'I'
0000000000000599         db  0x02 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x12 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0xe4 ; '.'
00000000000005b1         db  0x00 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x12 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0x0b ; '.'
00000000000005c9         db  0x02 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x12 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0xd8 ; '.'
00000000000005e1         db  0x02 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x20 ; ' '
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x3b ; ';'
00000000000005f9         db  0x01 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x12 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x97 ; '.'
0000000000000611         db  0x01 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x12 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0x49 ; 'I'
0000000000000629         db  0x01 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x12 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x0b ; '.'
0000000000000641         db  0x00 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x12 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x58 ; 'X'
0000000000000659         db  0x01 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x12 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x79 ; 'y'
0000000000000671         db  0x01 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x12 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0xfb ; '.'
0000000000000689         db  0x01 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x12 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x78 ; 'x'
00000000000006a1         db  0x00 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x12 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x1f ; '.'
00000000000006b9         db  0x00 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x12 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x12 ; '.'
00000000000006d1         db  0x00 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x12 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0xe4 ; '.'
00000000000006e9         db  0x01 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x12 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x58 ; 'X'
0000000000000701         db  0x00 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x12 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x24 ; '$'
0000000000000719         db  0x02 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x12 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x31 ; '1'
0000000000000731         db  0x00 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x12 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0x78 ; 'x'
0000000000000749         db  0x02 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x12 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0x8d ; '.'
0000000000000761         db  0x00 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x12 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0x9e ; '.'
0000000000000779         db  0x01 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x12 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x20 ; ' '
0000000000000791         db  0x01 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x12 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0xe7 ; '.'
00000000000007a9         db  0x02 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x20 ; ' '
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x00 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0x50 ; 'P'
00000000000007c1         db  0x01 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x12 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x00 ; '.'
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x6f ; 'o'
00000000000007d9         db  0x00 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x12 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x00 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0xd5 ; '.'
00000000000007f1         db  0x01 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x22 ; '"'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x00 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x00 ; '.'
00000000000007f9         db  0x00 ; '.'
00000000000007fa         db  0x00 ; '.'
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x00 ; '.'
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x64 ; 'd'
0000000000000809         db  0x01 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x12 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x00 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0x00 ; '.'
0000000000000811         db  0x00 ; '.'
0000000000000812         db  0x00 ; '.'
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x00 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0x2e ; '.'
0000000000000821         db  0x01 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x11 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x19 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0x88 ; '.'
0000000000000829         db  0xb0 ; '.'
000000000000082a         db  0x20 ; ' '
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x08 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x5d ; ']'
0000000000000839         db  0x02 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x11 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x19 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0x80 ; '.'
0000000000000841         db  0xb0 ; '.'
0000000000000842         db  0x20 ; ' '
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x08 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0x86 ; '.'
0000000000000851         db  0x00 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x11 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x19 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0x90 ; '.'
0000000000000859         db  0xb0 ; '.'
000000000000085a         db  0x20 ; ' '
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x08 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0x99 ; '.'
0000000000000869         db  0x00 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x21 ; '!'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x19 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0xa8 ; '.'
0000000000000871         db  0xb0 ; '.'
0000000000000872         db  0x20 ; ' '
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x08 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0x68 ; 'h'
0000000000000881         db  0x02 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x11 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x19 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0xa8 ; '.'
0000000000000889         db  0xb0 ; '.'
000000000000088a         db  0x20 ; ' '
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x08 ; '.'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x00 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0xb7 ; '.'
0000000000000899         db  0x01 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x21 ; '!'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x19 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0x80 ; '.'
00000000000008a1         db  0xb0 ; '.'
00000000000008a2         db  0x20 ; ' '
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x00 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x08 ; '.'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x00 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x00 ; '.'
00000000000008b0         db  0x84 ; '.'
00000000000008b1         db  0x01 ; '.'
00000000000008b2         db  0x00 ; '.'
00000000000008b3         db  0x00 ; '.'
00000000000008b4         db  0x11 ; '.'
00000000000008b5         db  0x00 ; '.'
00000000000008b6         db  0x19 ; '.'
00000000000008b7         db  0x00 ; '.'
00000000000008b8         db  0xc0 ; '.'
00000000000008b9         db  0xb0 ; '.'
00000000000008ba         db  0x20 ; ' '
00000000000008bb         db  0x00 ; '.'
00000000000008bc         db  0x00 ; '.'
00000000000008bd         db  0x00 ; '.'
00000000000008be         db  0x00 ; '.'
00000000000008bf         db  0x00 ; '.'
00000000000008c0         db  0x08 ; '.'
00000000000008c1         db  0x00 ; '.'
00000000000008c2         db  0x00 ; '.'
00000000000008c3         db  0x00 ; '.'
00000000000008c4         db  0x00 ; '.'
00000000000008c5         db  0x00 ; '.'
00000000000008c6         db  0x00 ; '.'
00000000000008c7         db  0x00 ; '.'
00000000000008c8         db  0x3f ; '?'
00000000000008c9         db  0x00 ; '.'
00000000000008ca         db  0x00 ; '.'
00000000000008cb         db  0x00 ; '.'
00000000000008cc         db  0x11 ; '.'
00000000000008cd         db  0x00 ; '.'
00000000000008ce         db  0x19 ; '.'
00000000000008cf         db  0x00 ; '.'
00000000000008d0         db  0x98 ; '.'
00000000000008d1         db  0xb0 ; '.'
00000000000008d2         db  0x20 ; ' '
00000000000008d3         db  0x00 ; '.'
00000000000008d4         db  0x00 ; '.'
00000000000008d5         db  0x00 ; '.'
00000000000008d6         db  0x00 ; '.'
00000000000008d7         db  0x00 ; '.'
00000000000008d8         db  0x04 ; '.'
00000000000008d9         db  0x00 ; '.'
00000000000008da         db  0x00 ; '.'
00000000000008db         db  0x00 ; '.'
00000000000008dc         db  0x00 ; '.'
00000000000008dd         db  0x00 ; '.'
00000000000008de         db  0x00 ; '.'
00000000000008df         db  0x00 ; '.'
00000000000008e0         db  0x72 ; 'r'
00000000000008e1         db  0x01 ; '.'
00000000000008e2         db  0x00 ; '.'
00000000000008e3         db  0x00 ; '.'
00000000000008e4         db  0x11 ; '.'
00000000000008e5         db  0x00 ; '.'
00000000000008e6         db  0x19 ; '.'
00000000000008e7         db  0x00 ; '.'
00000000000008e8         db  0xa0 ; '.'
00000000000008e9         db  0xb0 ; '.'
00000000000008ea         db  0x20 ; ' '
00000000000008eb         db  0x00 ; '.'
00000000000008ec         db  0x00 ; '.'
00000000000008ed         db  0x00 ; '.'
00000000000008ee         db  0x00 ; '.'
00000000000008ef         db  0x00 ; '.'
00000000000008f0         db  0x08 ; '.'
00000000000008f1         db  0x00 ; '.'
00000000000008f2         db  0x00 ; '.'
00000000000008f3         db  0x00 ; '.'
00000000000008f4         db  0x00 ; '.'
00000000000008f5         db  0x00 ; '.'
00000000000008f6         db  0x00 ; '.'
00000000000008f7         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0x8f8; 0xbf9[ (769 bytes)
        ; File offset : [2296; 3065[ (769 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

00000000000008f8         db  0x00 ; '.'
00000000000008f9         db  0x6c ; 'l'
00000000000008fa         db  0x69 ; 'i'
00000000000008fb         db  0x62 ; 'b'
00000000000008fc         db  0x63 ; 'c'
00000000000008fd         db  0x2e ; '.'
00000000000008fe         db  0x73 ; 's'
00000000000008ff         db  0x6f ; 'o'
0000000000000900         db  0x2e ; '.'
0000000000000901         db  0x36 ; '6'
0000000000000902         db  0x00 ; '.'
0000000000000903         db  0x66 ; 'f'
0000000000000904         db  0x66 ; 'f'
0000000000000905         db  0x6c ; 'l'
0000000000000906         db  0x75 ; 'u'
0000000000000907         db  0x73 ; 's'
0000000000000908         db  0x68 ; 'h'
0000000000000909         db  0x00 ; '.'
000000000000090a         db  0x5f ; '_'
000000000000090b         db  0x5f ; '_'
000000000000090c         db  0x70 ; 'p'
000000000000090d         db  0x72 ; 'r'
000000000000090e         db  0x69 ; 'i'
000000000000090f         db  0x6e ; 'n'
0000000000000910         db  0x74 ; 't'
0000000000000911         db  0x66 ; 'f'
0000000000000912         db  0x5f ; '_'
0000000000000913         db  0x63 ; 'c'
0000000000000914         db  0x68 ; 'h'
0000000000000915         db  0x6b ; 'k'
0000000000000916         db  0x00 ; '.'
0000000000000917         db  0x73 ; 's'
0000000000000918         db  0x65 ; 'e'
0000000000000919         db  0x74 ; 't'
000000000000091a         db  0x6c ; 'l'
000000000000091b         db  0x6f ; 'o'
000000000000091c         db  0x63 ; 'c'
000000000000091d         db  0x61 ; 'a'
000000000000091e         db  0x6c ; 'l'
000000000000091f         db  0x65 ; 'e'
0000000000000920         db  0x00 ; '.'
0000000000000921         db  0x6d ; 'm'
0000000000000922         db  0x62 ; 'b'
0000000000000923         db  0x72 ; 'r'
0000000000000924         db  0x74 ; 't'
0000000000000925         db  0x6f ; 'o'
0000000000000926         db  0x77 ; 'w'
0000000000000927         db  0x63 ; 'c'
0000000000000928         db  0x00 ; '.'
0000000000000929         db  0x66 ; 'f'
000000000000092a         db  0x6f ; 'o'
000000000000092b         db  0x70 ; 'p'
000000000000092c         db  0x65 ; 'e'
000000000000092d         db  0x6e ; 'n'
000000000000092e         db  0x00 ; '.'
000000000000092f         db  0x73 ; 's'
0000000000000930         db  0x74 ; 't'
0000000000000931         db  0x72 ; 'r'
0000000000000932         db  0x6e ; 'n'
0000000000000933         db  0x63 ; 'c'
0000000000000934         db  0x6d ; 'm'
0000000000000935         db  0x70 ; 'p'
0000000000000936         db  0x00 ; '.'
0000000000000937         db  0x6f ; 'o'
0000000000000938         db  0x70 ; 'p'
0000000000000939         db  0x74 ; 't'
000000000000093a         db  0x69 ; 'i'
000000000000093b         db  0x6e ; 'n'
000000000000093c         db  0x64 ; 'd'
000000000000093d         db  0x00 ; '.'
000000000000093e         db  0x73 ; 's'
000000000000093f         db  0x74 ; 't'
0000000000000940         db  0x72 ; 'r'
0000000000000941         db  0x72 ; 'r'
0000000000000942         db  0x63 ; 'c'
0000000000000943         db  0x68 ; 'h'
0000000000000944         db  0x72 ; 'r'
0000000000000945         db  0x00 ; '.'
0000000000000946         db  0x64 ; 'd'
0000000000000947         db  0x63 ; 'c'
0000000000000948         db  0x67 ; 'g'
0000000000000949         db  0x65 ; 'e'
000000000000094a         db  0x74 ; 't'
000000000000094b         db  0x74 ; 't'
000000000000094c         db  0x65 ; 'e'
000000000000094d         db  0x78 ; 'x'
000000000000094e         db  0x74 ; 't'
000000000000094f         db  0x00 ; '.'
0000000000000950         db  0x65 ; 'e'
0000000000000951         db  0x72 ; 'r'
0000000000000952         db  0x72 ; 'r'
0000000000000953         db  0x6f ; 'o'
0000000000000954         db  0x72 ; 'r'
0000000000000955         db  0x00 ; '.'
0000000000000956         db  0x5f ; '_'
0000000000000957         db  0x5f ; '_'
0000000000000958         db  0x73 ; 's'
0000000000000959         db  0x74 ; 't'
000000000000095a         db  0x61 ; 'a'
000000000000095b         db  0x63 ; 'c'
000000000000095c         db  0x6b ; 'k'
000000000000095d         db  0x5f ; '_'
000000000000095e         db  0x63 ; 'c'
000000000000095f         db  0x68 ; 'h'
0000000000000960         db  0x6b ; 'k'
0000000000000961         db  0x5f ; '_'
0000000000000962         db  0x66 ; 'f'
0000000000000963         db  0x61 ; 'a'
0000000000000964         db  0x69 ; 'i'
0000000000000965         db  0x6c ; 'l'
0000000000000966         db  0x00 ; '.'
0000000000000967         db  0x69 ; 'i'
0000000000000968         db  0x73 ; 's'
0000000000000969         db  0x77 ; 'w'
000000000000096a         db  0x70 ; 'p'
000000000000096b         db  0x72 ; 'r'
000000000000096c         db  0x69 ; 'i'
000000000000096d         db  0x6e ; 'n'
000000000000096e         db  0x74 ; 't'
000000000000096f         db  0x00 ; '.'
0000000000000970         db  0x72 ; 'r'
0000000000000971         db  0x65 ; 'e'
0000000000000972         db  0x61 ; 'a'
0000000000000973         db  0x6c ; 'l'
0000000000000974         db  0x6c ; 'l'
0000000000000975         db  0x6f ; 'o'
0000000000000976         db  0x63 ; 'c'
0000000000000977         db  0x00 ; '.'
0000000000000978         db  0x61 ; 'a'
0000000000000979         db  0x62 ; 'b'
000000000000097a         db  0x6f ; 'o'
000000000000097b         db  0x72 ; 'r'
000000000000097c         db  0x74 ; 't'
000000000000097d         db  0x00 ; '.'
000000000000097e         db  0x73 ; 's'
000000000000097f         db  0x74 ; 't'
0000000000000980         db  0x64 ; 'd'
0000000000000981         db  0x69 ; 'i'
0000000000000982         db  0x6e ; 'n'
0000000000000983         db  0x00 ; '.'
0000000000000984         db  0x5f ; '_'
0000000000000985         db  0x65 ; 'e'
0000000000000986         db  0x78 ; 'x'
0000000000000987         db  0x69 ; 'i'
0000000000000988         db  0x74 ; 't'
0000000000000989         db  0x00 ; '.'
000000000000098a         db  0x6d ; 'm'
000000000000098b         db  0x65 ; 'e'
000000000000098c         db  0x6d ; 'm'
000000000000098d         db  0x63 ; 'c'
000000000000098e         db  0x68 ; 'h'
000000000000098f         db  0x72 ; 'r'
0000000000000990         db  0x00 ; '.'
0000000000000991         db  0x70 ; 'p'
0000000000000992         db  0x72 ; 'r'
0000000000000993         db  0x6f ; 'o'
0000000000000994         db  0x67 ; 'g'
0000000000000995         db  0x72 ; 'r'
0000000000000996         db  0x61 ; 'a'
0000000000000997         db  0x6d ; 'm'
0000000000000998         db  0x5f ; '_'
0000000000000999         db  0x69 ; 'i'
000000000000099a         db  0x6e ; 'n'
000000000000099b         db  0x76 ; 'v'
000000000000099c         db  0x6f ; 'o'
000000000000099d         db  0x63 ; 'c'
000000000000099e         db  0x61 ; 'a'
000000000000099f         db  0x74 ; 't'
00000000000009a0         db  0x69 ; 'i'
00000000000009a1         db  0x6f ; 'o'
00000000000009a2         db  0x6e ; 'n'
00000000000009a3         db  0x5f ; '_'
00000000000009a4         db  0x6e ; 'n'
00000000000009a5         db  0x61 ; 'a'
00000000000009a6         db  0x6d ; 'm'
00000000000009a7         db  0x65 ; 'e'
00000000000009a8         db  0x00 ; '.'
00000000000009a9         db  0x5f ; '_'
00000000000009aa         db  0x5f ; '_'
00000000000009ab         db  0x61 ; 'a'
00000000000009ac         db  0x73 ; 's'
00000000000009ad         db  0x73 ; 's'
00000000000009ae         db  0x65 ; 'e'
00000000000009af         db  0x72 ; 'r'
00000000000009b0         db  0x74 ; 't'
00000000000009b1         db  0x5f ; '_'
00000000000009b2         db  0x66 ; 'f'
00000000000009b3         db  0x61 ; 'a'
00000000000009b4         db  0x69 ; 'i'
00000000000009b5         db  0x6c ; 'l'
00000000000009b6         db  0x00 ; '.'
00000000000009b7         db  0x5f ; '_'
00000000000009b8         db  0x5f ; '_'
00000000000009b9         db  0x63 ; 'c'
00000000000009ba         db  0x74 ; 't'
00000000000009bb         db  0x79 ; 'y'
00000000000009bc         db  0x70 ; 'p'
00000000000009bd         db  0x65 ; 'e'
00000000000009be         db  0x5f ; '_'
00000000000009bf         db  0x67 ; 'g'
00000000000009c0         db  0x65 ; 'e'
00000000000009c1         db  0x74 ; 't'
00000000000009c2         db  0x5f ; '_'
00000000000009c3         db  0x6d ; 'm'
00000000000009c4         db  0x62 ; 'b'
00000000000009c5         db  0x5f ; '_'
00000000000009c6         db  0x63 ; 'c'
00000000000009c7         db  0x75 ; 'u'
00000000000009c8         db  0x72 ; 'r'
00000000000009c9         db  0x5f ; '_'
00000000000009ca         db  0x6d ; 'm'
00000000000009cb         db  0x61 ; 'a'
00000000000009cc         db  0x78 ; 'x'
00000000000009cd         db  0x00 ; '.'
00000000000009ce         db  0x70 ; 'p'
00000000000009cf         db  0x6f ; 'o'
00000000000009d0         db  0x73 ; 's'
00000000000009d1         db  0x69 ; 'i'
00000000000009d2         db  0x78 ; 'x'
00000000000009d3         db  0x5f ; '_'
00000000000009d4         db  0x66 ; 'f'
00000000000009d5         db  0x61 ; 'a'
00000000000009d6         db  0x64 ; 'd'
00000000000009d7         db  0x76 ; 'v'
00000000000009d8         db  0x69 ; 'i'
00000000000009d9         db  0x73 ; 's'
00000000000009da         db  0x65 ; 'e'
00000000000009db         db  0x00 ; '.'
00000000000009dc         db  0x63 ; 'c'
00000000000009dd         db  0x61 ; 'a'
00000000000009de         db  0x6c ; 'l'
00000000000009df         db  0x6c ; 'l'
00000000000009e0         db  0x6f ; 'o'
00000000000009e1         db  0x63 ; 'c'
00000000000009e2         db  0x00 ; '.'
00000000000009e3         db  0x73 ; 's'
00000000000009e4         db  0x74 ; 't'
00000000000009e5         db  0x72 ; 'r'
00000000000009e6         db  0x6c ; 'l'
00000000000009e7         db  0x65 ; 'e'
00000000000009e8         db  0x6e ; 'n'
00000000000009e9         db  0x00 ; '.'
00000000000009ea         db  0x66 ; 'f'
00000000000009eb         db  0x72 ; 'r'
00000000000009ec         db  0x65 ; 'e'
00000000000009ed         db  0x61 ; 'a'
00000000000009ee         db  0x64 ; 'd'
00000000000009ef         db  0x5f ; '_'
00000000000009f0         db  0x75 ; 'u'
00000000000009f1         db  0x6e ; 'n'
00000000000009f2         db  0x6c ; 'l'
00000000000009f3         db  0x6f ; 'o'
00000000000009f4         db  0x63 ; 'c'
00000000000009f5         db  0x6b ; 'k'
00000000000009f6         db  0x65 ; 'e'
00000000000009f7         db  0x64 ; 'd'
00000000000009f8         db  0x00 ; '.'
00000000000009f9         db  0x6d ; 'm'
00000000000009fa         db  0x65 ; 'e'
00000000000009fb         db  0x6d ; 'm'
00000000000009fc         db  0x73 ; 's'
00000000000009fd         db  0x65 ; 'e'
00000000000009fe         db  0x74 ; 't'
00000000000009ff         db  0x00 ; '.'
                     aErrnolocation:
0000000000000a00         db         "__errno_location", 0
0000000000000a11         db  0x6d ; 'm'
0000000000000a12         db  0x65 ; 'e'
0000000000000a13         db  0x6d ; 'm'
0000000000000a14         db  0x63 ; 'c'
0000000000000a15         db  0x6d ; 'm'
0000000000000a16         db  0x70 ; 'p'
0000000000000a17         db  0x00 ; '.'
0000000000000a18         db  0x5f ; '_'
0000000000000a19         db  0x5f ; '_'
0000000000000a1a         db  0x66 ; 'f'
0000000000000a1b         db  0x70 ; 'p'
0000000000000a1c         db  0x72 ; 'r'
0000000000000a1d         db  0x69 ; 'i'
0000000000000a1e         db  0x6e ; 'n'
0000000000000a1f         db  0x74 ; 't'
0000000000000a20         db  0x66 ; 'f'
0000000000000a21         db  0x5f ; '_'
0000000000000a22         db  0x63 ; 'c'
0000000000000a23         db  0x68 ; 'h'
0000000000000a24         db  0x6b ; 'k'
0000000000000a25         db  0x00 ; '.'
0000000000000a26         db  0x73 ; 's'
0000000000000a27         db  0x74 ; 't'
0000000000000a28         db  0x64 ; 'd'
0000000000000a29         db  0x6f ; 'o'
0000000000000a2a         db  0x75 ; 'u'
0000000000000a2b         db  0x74 ; 't'
0000000000000a2c         db  0x00 ; '.'
0000000000000a2d         db  0x6c ; 'l'
0000000000000a2e         db  0x73 ; 's'
0000000000000a2f         db  0x65 ; 'e'
0000000000000a30         db  0x65 ; 'e'
0000000000000a31         db  0x6b ; 'k'
0000000000000a32         db  0x00 ; '.'
0000000000000a33         db  0x6d ; 'm'
0000000000000a34         db  0x65 ; 'e'
0000000000000a35         db  0x6d ; 'm'
0000000000000a36         db  0x63 ; 'c'
0000000000000a37         db  0x70 ; 'p'
0000000000000a38         db  0x79 ; 'y'
0000000000000a39         db  0x00 ; '.'
0000000000000a3a         db  0x66 ; 'f'
0000000000000a3b         db  0x63 ; 'c'
0000000000000a3c         db  0x6c ; 'l'
0000000000000a3d         db  0x6f ; 'o'
0000000000000a3e         db  0x73 ; 's'
0000000000000a3f         db  0x65 ; 'e'
0000000000000a40         db  0x00 ; '.'
0000000000000a41         db  0x6d ; 'm'
0000000000000a42         db  0x61 ; 'a'
0000000000000a43         db  0x6c ; 'l'
0000000000000a44         db  0x6c ; 'l'
0000000000000a45         db  0x6f ; 'o'
0000000000000a46         db  0x63 ; 'c'
0000000000000a47         db  0x00 ; '.'
0000000000000a48         db  0x6d ; 'm'
0000000000000a49         db  0x62 ; 'b'
0000000000000a4a         db  0x73 ; 's'
0000000000000a4b         db  0x69 ; 'i'
0000000000000a4c         db  0x6e ; 'n'
0000000000000a4d         db  0x69 ; 'i'
0000000000000a4e         db  0x74 ; 't'
0000000000000a4f         db  0x00 ; '.'
0000000000000a50         db  0x6e ; 'n'
0000000000000a51         db  0x6c ; 'l'
0000000000000a52         db  0x5f ; '_'
0000000000000a53         db  0x6c ; 'l'
0000000000000a54         db  0x61 ; 'a'
0000000000000a55         db  0x6e ; 'n'
0000000000000a56         db  0x67 ; 'g'
0000000000000a57         db  0x69 ; 'i'
0000000000000a58         db  0x6e ; 'n'
0000000000000a59         db  0x66 ; 'f'
0000000000000a5a         db  0x6f ; 'o'
0000000000000a5b         db  0x00 ; '.'
0000000000000a5c         db  0x5f ; '_'
0000000000000a5d         db  0x5f ; '_'
0000000000000a5e         db  0x63 ; 'c'
0000000000000a5f         db  0x74 ; 't'
0000000000000a60         db  0x79 ; 'y'
0000000000000a61         db  0x70 ; 'p'
0000000000000a62         db  0x65 ; 'e'
0000000000000a63         db  0x5f ; '_'
0000000000000a64         db  0x62 ; 'b'
0000000000000a65         db  0x5f ; '_'
0000000000000a66         db  0x6c ; 'l'
0000000000000a67         db  0x6f ; 'o'
0000000000000a68         db  0x63 ; 'c'
0000000000000a69         db  0x00 ; '.'
0000000000000a6a         db  0x6f ; 'o'
0000000000000a6b         db  0x70 ; 'p'
0000000000000a6c         db  0x74 ; 't'
0000000000000a6d         db  0x61 ; 'a'
0000000000000a6e         db  0x72 ; 'r'
0000000000000a6f         db  0x67 ; 'g'
0000000000000a70         db  0x00 ; '.'
0000000000000a71         db  0x5f ; '_'
0000000000000a72         db  0x5f ; '_'
0000000000000a73         db  0x66 ; 'f'
0000000000000a74         db  0x72 ; 'r'
0000000000000a75         db  0x65 ; 'e'
0000000000000a76         db  0x61 ; 'a'
0000000000000a77         db  0x64 ; 'd'
0000000000000a78         db  0x69 ; 'i'
0000000000000a79         db  0x6e ; 'n'
0000000000000a7a         db  0x67 ; 'g'
0000000000000a7b         db  0x00 ; '.'
0000000000000a7c         db  0x73 ; 's'
0000000000000a7d         db  0x74 ; 't'
0000000000000a7e         db  0x64 ; 'd'
0000000000000a7f         db  0x65 ; 'e'
0000000000000a80         db  0x72 ; 'r'
0000000000000a81         db  0x72 ; 'r'
0000000000000a82         db  0x00 ; '.'
0000000000000a83         db  0x67 ; 'g'
0000000000000a84         db  0x65 ; 'e'
0000000000000a85         db  0x74 ; 't'
0000000000000a86         db  0x6f ; 'o'
0000000000000a87         db  0x70 ; 'p'
0000000000000a88         db  0x74 ; 't'
0000000000000a89         db  0x5f ; '_'
0000000000000a8a         db  0x6c ; 'l'
0000000000000a8b         db  0x6f ; 'o'
0000000000000a8c         db  0x6e ; 'n'
0000000000000a8d         db  0x67 ; 'g'
0000000000000a8e         db  0x00 ; '.'
0000000000000a8f         db  0x66 ; 'f'
0000000000000a90         db  0x69 ; 'i'
0000000000000a91         db  0x6c ; 'l'
0000000000000a92         db  0x65 ; 'e'
0000000000000a93         db  0x6e ; 'n'
0000000000000a94         db  0x6f ; 'o'
0000000000000a95         db  0x00 ; '.'
0000000000000a96         db  0x66 ; 'f'
0000000000000a97         db  0x77 ; 'w'
0000000000000a98         db  0x72 ; 'r'
0000000000000a99         db  0x69 ; 'i'
0000000000000a9a         db  0x74 ; 't'
0000000000000a9b         db  0x65 ; 'e'
0000000000000a9c         db  0x00 ; '.'
0000000000000a9d         db  0x5f ; '_'
0000000000000a9e         db  0x5f ; '_'
0000000000000a9f         db  0x66 ; 'f'
0000000000000aa0         db  0x70 ; 'p'
0000000000000aa1         db  0x65 ; 'e'
0000000000000aa2         db  0x6e ; 'n'
0000000000000aa3         db  0x64 ; 'd'
0000000000000aa4         db  0x69 ; 'i'
0000000000000aa5         db  0x6e ; 'n'
0000000000000aa6         db  0x67 ; 'g'
0000000000000aa7         db  0x00 ; '.'
0000000000000aa8         db  0x73 ; 's'
0000000000000aa9         db  0x74 ; 't'
0000000000000aaa         db  0x72 ; 'r'
0000000000000aab         db  0x63 ; 'c'
0000000000000aac         db  0x68 ; 'h'
0000000000000aad         db  0x72 ; 'r'
0000000000000aae         db  0x00 ; '.'
0000000000000aaf         db  0x70 ; 'p'
0000000000000ab0         db  0x72 ; 'r'
0000000000000ab1         db  0x6f ; 'o'
0000000000000ab2         db  0x67 ; 'g'
0000000000000ab3         db  0x72 ; 'r'
0000000000000ab4         db  0x61 ; 'a'
0000000000000ab5         db  0x6d ; 'm'
0000000000000ab6         db  0x5f ; '_'
0000000000000ab7         db  0x69 ; 'i'
0000000000000ab8         db  0x6e ; 'n'
0000000000000ab9         db  0x76 ; 'v'
0000000000000aba         db  0x6f ; 'o'
0000000000000abb         db  0x63 ; 'c'
0000000000000abc         db  0x61 ; 'a'
0000000000000abd         db  0x74 ; 't'
0000000000000abe         db  0x69 ; 'i'
0000000000000abf         db  0x6f ; 'o'
0000000000000ac0         db  0x6e ; 'n'
0000000000000ac1         db  0x5f ; '_'
0000000000000ac2         db  0x73 ; 's'
0000000000000ac3         db  0x68 ; 'h'
0000000000000ac4         db  0x6f ; 'o'
0000000000000ac5         db  0x72 ; 'r'
0000000000000ac6         db  0x74 ; 't'
0000000000000ac7         db  0x5f ; '_'
0000000000000ac8         db  0x6e ; 'n'
0000000000000ac9         db  0x61 ; 'a'
0000000000000aca         db  0x6d ; 'm'
0000000000000acb         db  0x65 ; 'e'
0000000000000acc         db  0x00 ; '.'
0000000000000acd         db  0x5f ; '_'
0000000000000ace         db  0x5f ; '_'
0000000000000acf         db  0x63 ; 'c'
0000000000000ad0         db  0x78 ; 'x'
0000000000000ad1         db  0x61 ; 'a'
0000000000000ad2         db  0x5f ; '_'
0000000000000ad3         db  0x66 ; 'f'
0000000000000ad4         db  0x69 ; 'i'
0000000000000ad5         db  0x6e ; 'n'
0000000000000ad6         db  0x61 ; 'a'
0000000000000ad7         db  0x6c ; 'l'
0000000000000ad8         db  0x69 ; 'i'
0000000000000ad9         db  0x7a ; 'z'
0000000000000ada         db  0x65 ; 'e'
0000000000000adb         db  0x00 ; '.'
0000000000000adc         db  0x6d ; 'm'
0000000000000add         db  0x65 ; 'e'
0000000000000ade         db  0x6d ; 'm'
0000000000000adf         db  0x6d ; 'm'
0000000000000ae0         db  0x6f ; 'o'
0000000000000ae1         db  0x76 ; 'v'
0000000000000ae2         db  0x65 ; 'e'
0000000000000ae3         db  0x00 ; '.'
0000000000000ae4         db  0x62 ; 'b'
0000000000000ae5         db  0x69 ; 'i'
0000000000000ae6         db  0x6e ; 'n'
0000000000000ae7         db  0x64 ; 'd'
0000000000000ae8         db  0x74 ; 't'
0000000000000ae9         db  0x65 ; 'e'
0000000000000aea         db  0x78 ; 'x'
0000000000000aeb         db  0x74 ; 't'
0000000000000aec         db  0x64 ; 'd'
0000000000000aed         db  0x6f ; 'o'
0000000000000aee         db  0x6d ; 'm'
0000000000000aef         db  0x61 ; 'a'
0000000000000af0         db  0x69 ; 'i'
0000000000000af1         db  0x6e ; 'n'
0000000000000af2         db  0x00 ; '.'
0000000000000af3         db  0x66 ; 'f'
0000000000000af4         db  0x77 ; 'w'
0000000000000af5         db  0x72 ; 'r'
0000000000000af6         db  0x69 ; 'i'
0000000000000af7         db  0x74 ; 't'
0000000000000af8         db  0x65 ; 'e'
0000000000000af9         db  0x5f ; '_'
0000000000000afa         db  0x75 ; 'u'
0000000000000afb         db  0x6e ; 'n'
0000000000000afc         db  0x6c ; 'l'
0000000000000afd         db  0x6f ; 'o'
0000000000000afe         db  0x63 ; 'c'
0000000000000aff         db  0x6b ; 'k'
0000000000000b00         db  0x65 ; 'e'
0000000000000b01         db  0x64 ; 'd'
0000000000000b02         db  0x00 ; '.'
0000000000000b03         db  0x73 ; 's'
0000000000000b04         db  0x74 ; 't'
0000000000000b05         db  0x72 ; 'r'
0000000000000b06         db  0x63 ; 'c'
0000000000000b07         db  0x6d ; 'm'
0000000000000b08         db  0x70 ; 'p'
0000000000000b09         db  0x00 ; '.'
0000000000000b0a         db  0x5f ; '_'
0000000000000b0b         db  0x5f ; '_'
0000000000000b0c         db  0x6c ; 'l'
0000000000000b0d         db  0x69 ; 'i'
0000000000000b0e         db  0x62 ; 'b'
0000000000000b0f         db  0x63 ; 'c'
0000000000000b10         db  0x5f ; '_'
0000000000000b11         db  0x73 ; 's'
0000000000000b12         db  0x74 ; 't'
0000000000000b13         db  0x61 ; 'a'
0000000000000b14         db  0x72 ; 'r'
0000000000000b15         db  0x74 ; 't'
0000000000000b16         db  0x5f ; '_'
0000000000000b17         db  0x6d ; 'm'
0000000000000b18         db  0x61 ; 'a'
0000000000000b19         db  0x69 ; 'i'
0000000000000b1a         db  0x6e ; 'n'
0000000000000b1b         db  0x00 ; '.'
0000000000000b1c         db  0x66 ; 'f'
0000000000000b1d         db  0x73 ; 's'
0000000000000b1e         db  0x65 ; 'e'
0000000000000b1f         db  0x65 ; 'e'
0000000000000b20         db  0x6b ; 'k'
0000000000000b21         db  0x6f ; 'o'
0000000000000b22         db  0x00 ; '.'
0000000000000b23         db  0x5f ; '_'
0000000000000b24         db  0x5f ; '_'
0000000000000b25         db  0x6f ; 'o'
0000000000000b26         db  0x76 ; 'v'
0000000000000b27         db  0x65 ; 'e'
0000000000000b28         db  0x72 ; 'r'
0000000000000b29         db  0x66 ; 'f'
0000000000000b2a         db  0x6c ; 'l'
0000000000000b2b         db  0x6f ; 'o'
0000000000000b2c         db  0x77 ; 'w'
0000000000000b2d         db  0x00 ; '.'
0000000000000b2e         db  0x5f ; '_'
0000000000000b2f         db  0x5f ; '_'
0000000000000b30         db  0x73 ; 's'
0000000000000b31         db  0x74 ; 't'
0000000000000b32         db  0x72 ; 'r'
0000000000000b33         db  0x74 ; 't'
0000000000000b34         db  0x6f ; 'o'
0000000000000b35         db  0x75 ; 'u'
0000000000000b36         db  0x6c ; 'l'
0000000000000b37         db  0x5f ; '_'
0000000000000b38         db  0x69 ; 'i'
0000000000000b39         db  0x6e ; 'n'
0000000000000b3a         db  0x74 ; 't'
0000000000000b3b         db  0x65 ; 'e'
0000000000000b3c         db  0x72 ; 'r'
0000000000000b3d         db  0x6e ; 'n'
0000000000000b3e         db  0x61 ; 'a'
0000000000000b3f         db  0x6c ; 'l'
0000000000000b40         db  0x00 ; '.'
                     aFputsunlocked:
0000000000000b41         db         "fputs_unlocked", 0
0000000000000b50         db  0x66 ; 'f'
0000000000000b51         db  0x72 ; 'r'
0000000000000b52         db  0x65 ; 'e'
0000000000000b53         db  0x65 ; 'e'
0000000000000b54         db  0x00 ; '.'
0000000000000b55         db  0x5f ; '_'
0000000000000b56         db  0x5f ; '_'
0000000000000b57         db  0x70 ; 'p'
0000000000000b58         db  0x72 ; 'r'
0000000000000b59         db  0x6f ; 'o'
0000000000000b5a         db  0x67 ; 'g'
0000000000000b5b         db  0x6e ; 'n'
0000000000000b5c         db  0x61 ; 'a'
0000000000000b5d         db  0x6d ; 'm'
0000000000000b5e         db  0x65 ; 'e'
0000000000000b5f         db  0x00 ; '.'
0000000000000b60         db  0x5f ; '_'
0000000000000b61         db  0x5f ; '_'
0000000000000b62         db  0x70 ; 'p'
0000000000000b63         db  0x72 ; 'r'
0000000000000b64         db  0x6f ; 'o'
0000000000000b65         db  0x67 ; 'g'
0000000000000b66         db  0x6e ; 'n'
0000000000000b67         db  0x61 ; 'a'
0000000000000b68         db  0x6d ; 'm'
0000000000000b69         db  0x65 ; 'e'
0000000000000b6a         db  0x5f ; '_'
0000000000000b6b         db  0x66 ; 'f'
0000000000000b6c         db  0x75 ; 'u'
0000000000000b6d         db  0x6c ; 'l'
0000000000000b6e         db  0x6c ; 'l'
0000000000000b6f         db  0x00 ; '.'
0000000000000b70         db  0x5f ; '_'
0000000000000b71         db  0x5f ; '_'
0000000000000b72         db  0x63 ; 'c'
0000000000000b73         db  0x78 ; 'x'
0000000000000b74         db  0x61 ; 'a'
0000000000000b75         db  0x5f ; '_'
0000000000000b76         db  0x61 ; 'a'
0000000000000b77         db  0x74 ; 't'
0000000000000b78         db  0x65 ; 'e'
0000000000000b79         db  0x78 ; 'x'
0000000000000b7a         db  0x69 ; 'i'
0000000000000b7b         db  0x74 ; 't'
0000000000000b7c         db  0x00 ; '.'
0000000000000b7d         db  0x47 ; 'G'
0000000000000b7e         db  0x4c ; 'L'
0000000000000b7f         db  0x49 ; 'I'
0000000000000b80         db  0x42 ; 'B'
0000000000000b81         db  0x43 ; 'C'
0000000000000b82         db  0x5f ; '_'
0000000000000b83         db  0x32 ; '2'
0000000000000b84         db  0x2e ; '.'
0000000000000b85         db  0x33 ; '3'
0000000000000b86         db  0x00 ; '.'
0000000000000b87         db  0x47 ; 'G'
0000000000000b88         db  0x4c ; 'L'
0000000000000b89         db  0x49 ; 'I'
0000000000000b8a         db  0x42 ; 'B'
0000000000000b8b         db  0x43 ; 'C'
0000000000000b8c         db  0x5f ; '_'
0000000000000b8d         db  0x32 ; '2'
0000000000000b8e         db  0x2e ; '.'
0000000000000b8f         db  0x33 ; '3'
0000000000000b90         db  0x2e ; '.'
0000000000000b91         db  0x34 ; '4'
0000000000000b92         db  0x00 ; '.'
0000000000000b93         db  0x47 ; 'G'
0000000000000b94         db  0x4c ; 'L'
0000000000000b95         db  0x49 ; 'I'
0000000000000b96         db  0x42 ; 'B'
0000000000000b97         db  0x43 ; 'C'
0000000000000b98         db  0x5f ; '_'
0000000000000b99         db  0x32 ; '2'
0000000000000b9a         db  0x2e ; '.'
0000000000000b9b         db  0x31 ; '1'
0000000000000b9c         db  0x34 ; '4'
0000000000000b9d         db  0x00 ; '.'
0000000000000b9e         db  0x47 ; 'G'
0000000000000b9f         db  0x4c ; 'L'
0000000000000ba0         db  0x49 ; 'I'
0000000000000ba1         db  0x42 ; 'B'
0000000000000ba2         db  0x43 ; 'C'
0000000000000ba3         db  0x5f ; '_'
0000000000000ba4         db  0x32 ; '2'
0000000000000ba5         db  0x2e ; '.'
0000000000000ba6         db  0x34 ; '4'
0000000000000ba7         db  0x00 ; '.'
0000000000000ba8         db  0x47 ; 'G'
0000000000000ba9         db  0x4c ; 'L'
0000000000000baa         db  0x49 ; 'I'
0000000000000bab         db  0x42 ; 'B'
0000000000000bac         db  0x43 ; 'C'
0000000000000bad         db  0x5f ; '_'
0000000000000bae         db  0x32 ; '2'
0000000000000baf         db  0x2e ; '.'
0000000000000bb0         db  0x32 ; '2'
0000000000000bb1         db  0x2e ; '.'
0000000000000bb2         db  0x35 ; '5'
0000000000000bb3         db  0x00 ; '.'
0000000000000bb4         db  0x5f ; '_'
0000000000000bb5         db  0x49 ; 'I'
0000000000000bb6         db  0x54 ; 'T'
0000000000000bb7         db  0x4d ; 'M'
0000000000000bb8         db  0x5f ; '_'
0000000000000bb9         db  0x64 ; 'd'
0000000000000bba         db  0x65 ; 'e'
0000000000000bbb         db  0x72 ; 'r'
0000000000000bbc         db  0x65 ; 'e'
0000000000000bbd         db  0x67 ; 'g'
0000000000000bbe         db  0x69 ; 'i'
0000000000000bbf         db  0x73 ; 's'
0000000000000bc0         db  0x74 ; 't'
0000000000000bc1         db  0x65 ; 'e'
0000000000000bc2         db  0x72 ; 'r'
0000000000000bc3         db  0x54 ; 'T'
0000000000000bc4         db  0x4d ; 'M'
0000000000000bc5         db  0x43 ; 'C'
0000000000000bc6         db  0x6c ; 'l'
0000000000000bc7         db  0x6f ; 'o'
0000000000000bc8         db  0x6e ; 'n'
0000000000000bc9         db  0x65 ; 'e'
0000000000000bca         db  0x54 ; 'T'
0000000000000bcb         db  0x61 ; 'a'
0000000000000bcc         db  0x62 ; 'b'
0000000000000bcd         db  0x6c ; 'l'
0000000000000bce         db  0x65 ; 'e'
0000000000000bcf         db  0x00 ; '.'
0000000000000bd0         db  0x5f ; '_'
0000000000000bd1         db  0x5f ; '_'
0000000000000bd2         db  0x67 ; 'g'
0000000000000bd3         db  0x6d ; 'm'
0000000000000bd4         db  0x6f ; 'o'
0000000000000bd5         db  0x6e ; 'n'
0000000000000bd6         db  0x5f ; '_'
0000000000000bd7         db  0x73 ; 's'
0000000000000bd8         db  0x74 ; 't'
0000000000000bd9         db  0x61 ; 'a'
0000000000000bda         db  0x72 ; 'r'
0000000000000bdb         db  0x74 ; 't'
0000000000000bdc         db  0x5f ; '_'
0000000000000bdd         db  0x5f ; '_'
0000000000000bde         db  0x00 ; '.'
0000000000000bdf         db  0x5f ; '_'
0000000000000be0         db  0x49 ; 'I'
0000000000000be1         db  0x54 ; 'T'
0000000000000be2         db  0x4d ; 'M'
0000000000000be3         db  0x5f ; '_'
0000000000000be4         db  0x72 ; 'r'
0000000000000be5         db  0x65 ; 'e'
0000000000000be6         db  0x67 ; 'g'
0000000000000be7         db  0x69 ; 'i'
0000000000000be8         db  0x73 ; 's'
0000000000000be9         db  0x74 ; 't'
0000000000000bea         db  0x65 ; 'e'
0000000000000beb         db  0x72 ; 'r'
0000000000000bec         db  0x54 ; 'T'
0000000000000bed         db  0x4d ; 'M'
0000000000000bee         db  0x43 ; 'C'
0000000000000bef         db  0x6c ; 'l'
0000000000000bf0         db  0x6f ; 'o'
0000000000000bf1         db  0x6e ; 'n'
0000000000000bf2         db  0x65 ; 'e'
0000000000000bf3         db  0x54 ; 'T'
0000000000000bf4         db  0x61 ; 'a'
0000000000000bf5         db  0x62 ; 'b'
0000000000000bf6         db  0x6c ; 'l'
0000000000000bf7         db  0x65 ; 'e'
0000000000000bf8         db  0x00 ; '.'
0000000000000bf9         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xbfa; 0xc7c[ (130 bytes)
        ; File offset : [3066; 3196[ (130 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000bfa         db  0x00 ; '.'
0000000000000bfb         db  0x00 ; '.'
0000000000000bfc         db  0x02 ; '.'
0000000000000bfd         db  0x00 ; '.'
0000000000000bfe         db  0x02 ; '.'
0000000000000bff         db  0x00 ; '.'
0000000000000c00         db  0x02 ; '.'
0000000000000c01         db  0x00 ; '.'
0000000000000c02         db  0x02 ; '.'
0000000000000c03         db  0x00 ; '.'
0000000000000c04         db  0x00 ; '.'
0000000000000c05         db  0x00 ; '.'
0000000000000c06         db  0x02 ; '.'
0000000000000c07         db  0x00 ; '.'
0000000000000c08         db  0x02 ; '.'
0000000000000c09         db  0x00 ; '.'
0000000000000c0a         db  0x02 ; '.'
0000000000000c0b         db  0x00 ; '.'
0000000000000c0c         db  0x02 ; '.'
0000000000000c0d         db  0x00 ; '.'
0000000000000c0e         db  0x02 ; '.'
0000000000000c0f         db  0x00 ; '.'
0000000000000c10         db  0x02 ; '.'
0000000000000c11         db  0x00 ; '.'
0000000000000c12         db  0x02 ; '.'
0000000000000c13         db  0x00 ; '.'
0000000000000c14         db  0x02 ; '.'
0000000000000c15         db  0x00 ; '.'
0000000000000c16         db  0x02 ; '.'
0000000000000c17         db  0x00 ; '.'
0000000000000c18         db  0x03 ; '.'
0000000000000c19         db  0x00 ; '.'
0000000000000c1a         db  0x02 ; '.'
0000000000000c1b         db  0x00 ; '.'
0000000000000c1c         db  0x02 ; '.'
0000000000000c1d         db  0x00 ; '.'
0000000000000c1e         db  0x02 ; '.'
0000000000000c1f         db  0x00 ; '.'
0000000000000c20         db  0x02 ; '.'
0000000000000c21         db  0x00 ; '.'
0000000000000c22         db  0x02 ; '.'
0000000000000c23         db  0x00 ; '.'
0000000000000c24         db  0x02 ; '.'
0000000000000c25         db  0x00 ; '.'
0000000000000c26         db  0x02 ; '.'
0000000000000c27         db  0x00 ; '.'
0000000000000c28         db  0x02 ; '.'
0000000000000c29         db  0x00 ; '.'
0000000000000c2a         db  0x02 ; '.'
0000000000000c2b         db  0x00 ; '.'
0000000000000c2c         db  0x02 ; '.'
0000000000000c2d         db  0x00 ; '.'
0000000000000c2e         db  0x02 ; '.'
0000000000000c2f         db  0x00 ; '.'
0000000000000c30         db  0x02 ; '.'
0000000000000c31         db  0x00 ; '.'
0000000000000c32         db  0x02 ; '.'
0000000000000c33         db  0x00 ; '.'
0000000000000c34         db  0x02 ; '.'
0000000000000c35         db  0x00 ; '.'
0000000000000c36         db  0x02 ; '.'
0000000000000c37         db  0x00 ; '.'
0000000000000c38         db  0x02 ; '.'
0000000000000c39         db  0x00 ; '.'
0000000000000c3a         db  0x00 ; '.'
0000000000000c3b         db  0x00 ; '.'
0000000000000c3c         db  0x04 ; '.'
0000000000000c3d         db  0x00 ; '.'
0000000000000c3e         db  0x02 ; '.'
0000000000000c3f         db  0x00 ; '.'
0000000000000c40         db  0x02 ; '.'
0000000000000c41         db  0x00 ; '.'
0000000000000c42         db  0x02 ; '.'
0000000000000c43         db  0x00 ; '.'
0000000000000c44         db  0x02 ; '.'
0000000000000c45         db  0x00 ; '.'
0000000000000c46         db  0x02 ; '.'
0000000000000c47         db  0x00 ; '.'
0000000000000c48         db  0x02 ; '.'
0000000000000c49         db  0x00 ; '.'
0000000000000c4a         db  0x02 ; '.'
0000000000000c4b         db  0x00 ; '.'
0000000000000c4c         db  0x02 ; '.'
0000000000000c4d         db  0x00 ; '.'
0000000000000c4e         db  0x05 ; '.'
0000000000000c4f         db  0x00 ; '.'
0000000000000c50         db  0x02 ; '.'
0000000000000c51         db  0x00 ; '.'
0000000000000c52         db  0x02 ; '.'
0000000000000c53         db  0x00 ; '.'
0000000000000c54         db  0x02 ; '.'
0000000000000c55         db  0x00 ; '.'
0000000000000c56         db  0x02 ; '.'
0000000000000c57         db  0x00 ; '.'
0000000000000c58         db  0x02 ; '.'
0000000000000c59         db  0x00 ; '.'
0000000000000c5a         db  0x02 ; '.'
0000000000000c5b         db  0x00 ; '.'
0000000000000c5c         db  0x02 ; '.'
0000000000000c5d         db  0x00 ; '.'
0000000000000c5e         db  0x05 ; '.'
0000000000000c5f         db  0x00 ; '.'
0000000000000c60         db  0x00 ; '.'
0000000000000c61         db  0x00 ; '.'
0000000000000c62         db  0x02 ; '.'
0000000000000c63         db  0x00 ; '.'
0000000000000c64         db  0x02 ; '.'
0000000000000c65         db  0x00 ; '.'
0000000000000c66         db  0x02 ; '.'
0000000000000c67         db  0x00 ; '.'
0000000000000c68         db  0x06 ; '.'
0000000000000c69         db  0x00 ; '.'
0000000000000c6a         db  0x02 ; '.'
0000000000000c6b         db  0x00 ; '.'
0000000000000c6c         db  0x02 ; '.'
0000000000000c6d         db  0x00 ; '.'
0000000000000c6e         db  0x02 ; '.'
0000000000000c6f         db  0x00 ; '.'
0000000000000c70         db  0x02 ; '.'
0000000000000c71         db  0x00 ; '.'
0000000000000c72         db  0x02 ; '.'
0000000000000c73         db  0x00 ; '.'
0000000000000c74         db  0x02 ; '.'
0000000000000c75         db  0x00 ; '.'
0000000000000c76         db  0x02 ; '.'
0000000000000c77         db  0x00 ; '.'
0000000000000c78         db  0x02 ; '.'
0000000000000c79         db  0x00 ; '.'
0000000000000c7a         db  0x02 ; '.'
0000000000000c7b         db  0x00 ; '.'
0000000000000c7c         db  0x00 ; '.'
0000000000000c7d         db  0x00 ; '.'
0000000000000c7e         db  0x00 ; '.'
0000000000000c7f         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xc80; 0xce0[ (96 bytes)
        ; File offset : [3200; 3296[ (96 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000c80         db  0x01 ; '.'
0000000000000c81         db  0x00 ; '.'
0000000000000c82         db  0x05 ; '.'
0000000000000c83         db  0x00 ; '.'
0000000000000c84         db  0x01 ; '.'
0000000000000c85         db  0x00 ; '.'
0000000000000c86         db  0x00 ; '.'
0000000000000c87         db  0x00 ; '.'
0000000000000c88         db  0x10 ; '.'
0000000000000c89         db  0x00 ; '.'
0000000000000c8a         db  0x00 ; '.'
0000000000000c8b         db  0x00 ; '.'
0000000000000c8c         db  0x00 ; '.'
0000000000000c8d         db  0x00 ; '.'
0000000000000c8e         db  0x00 ; '.'
0000000000000c8f         db  0x00 ; '.'
0000000000000c90         db  0x13 ; '.'
0000000000000c91         db  0x69 ; 'i'
0000000000000c92         db  0x69 ; 'i'
0000000000000c93         db  0x0d ; '.'
0000000000000c94         db  0x00 ; '.'
0000000000000c95         db  0x00 ; '.'
0000000000000c96         db  0x06 ; '.'
0000000000000c97         db  0x00 ; '.'
0000000000000c98         db  0x85 ; '.'
0000000000000c99         db  0x02 ; '.'
0000000000000c9a         db  0x00 ; '.'
0000000000000c9b         db  0x00 ; '.'
0000000000000c9c         db  0x10 ; '.'
0000000000000c9d         db  0x00 ; '.'
0000000000000c9e         db  0x00 ; '.'
0000000000000c9f         db  0x00 ; '.'
0000000000000ca0         db  0x74 ; 't'
0000000000000ca1         db  0x19 ; '.'
0000000000000ca2         db  0x69 ; 'i'
0000000000000ca3         db  0x09 ; '.'
0000000000000ca4         db  0x00 ; '.'
0000000000000ca5         db  0x00 ; '.'
0000000000000ca6         db  0x05 ; '.'
0000000000000ca7         db  0x00 ; '.'
0000000000000ca8         db  0x8f ; '.'
0000000000000ca9         db  0x02 ; '.'
0000000000000caa         db  0x00 ; '.'
0000000000000cab         db  0x00 ; '.'
0000000000000cac         db  0x10 ; '.'
0000000000000cad         db  0x00 ; '.'
0000000000000cae         db  0x00 ; '.'
0000000000000caf         db  0x00 ; '.'
0000000000000cb0         db  0x94 ; '.'
0000000000000cb1         db  0x91 ; '.'
0000000000000cb2         db  0x96 ; '.'
0000000000000cb3         db  0x06 ; '.'
0000000000000cb4         db  0x00 ; '.'
0000000000000cb5         db  0x00 ; '.'
0000000000000cb6         db  0x04 ; '.'
0000000000000cb7         db  0x00 ; '.'
0000000000000cb8         db  0x9b ; '.'
0000000000000cb9         db  0x02 ; '.'
0000000000000cba         db  0x00 ; '.'
0000000000000cbb         db  0x00 ; '.'
0000000000000cbc         db  0x10 ; '.'
0000000000000cbd         db  0x00 ; '.'
0000000000000cbe         db  0x00 ; '.'
0000000000000cbf         db  0x00 ; '.'
0000000000000cc0         db  0x14 ; '.'
0000000000000cc1         db  0x69 ; 'i'
0000000000000cc2         db  0x69 ; 'i'
0000000000000cc3         db  0x0d ; '.'
0000000000000cc4         db  0x00 ; '.'
0000000000000cc5         db  0x00 ; '.'
0000000000000cc6         db  0x03 ; '.'
0000000000000cc7         db  0x00 ; '.'
0000000000000cc8         db  0xa6 ; '.'
0000000000000cc9         db  0x02 ; '.'
0000000000000cca         db  0x00 ; '.'
0000000000000ccb         db  0x00 ; '.'
0000000000000ccc         db  0x10 ; '.'
0000000000000ccd         db  0x00 ; '.'
0000000000000cce         db  0x00 ; '.'
0000000000000ccf         db  0x00 ; '.'
0000000000000cd0         db  0x75 ; 'u'
0000000000000cd1         db  0x1a ; '.'
0000000000000cd2         db  0x69 ; 'i'
0000000000000cd3         db  0x09 ; '.'
0000000000000cd4         db  0x00 ; '.'
0000000000000cd5         db  0x00 ; '.'
0000000000000cd6         db  0x02 ; '.'
0000000000000cd7         db  0x00 ; '.'
0000000000000cd8         db  0xb0 ; '.'
0000000000000cd9         db  0x02 ; '.'
0000000000000cda         db  0x00 ; '.'
0000000000000cdb         db  0x00 ; '.'
0000000000000cdc         db  0x00 ; '.'
0000000000000cdd         db  0x00 ; '.'
0000000000000cde         db  0x00 ; '.'
0000000000000cdf         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xce0; 0x10b8[ (984 bytes)
        ; File offset : [3296; 4280[ (984 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000ce0         db  0x10 ; '.'
0000000000000ce1         db  0xaa ; '.'
0000000000000ce2         db  0x20 ; ' '
0000000000000ce3         db  0x00 ; '.'
0000000000000ce4         db  0x00 ; '.'
0000000000000ce5         db  0x00 ; '.'
0000000000000ce6         db  0x00 ; '.'
0000000000000ce7         db  0x00 ; '.'
0000000000000ce8         db  0x08 ; '.'
0000000000000ce9         db  0x00 ; '.'
0000000000000cea         db  0x00 ; '.'
0000000000000ceb         db  0x00 ; '.'
0000000000000cec         db  0x00 ; '.'
0000000000000ced         db  0x00 ; '.'
0000000000000cee         db  0x00 ; '.'
0000000000000cef         db  0x00 ; '.'
0000000000000cf0         db  0xf0 ; '.'
0000000000000cf1         db  0x24 ; '$'
0000000000000cf2         db  0x00 ; '.'
0000000000000cf3         db  0x00 ; '.'
0000000000000cf4         db  0x00 ; '.'
0000000000000cf5         db  0x00 ; '.'
0000000000000cf6         db  0x00 ; '.'
0000000000000cf7         db  0x00 ; '.'
0000000000000cf8         db  0x18 ; '.'
0000000000000cf9         db  0xaa ; '.'
0000000000000cfa         db  0x20 ; ' '
0000000000000cfb         db  0x00 ; '.'
0000000000000cfc         db  0x00 ; '.'
0000000000000cfd         db  0x00 ; '.'
0000000000000cfe         db  0x00 ; '.'
0000000000000cff         db  0x00 ; '.'
0000000000000d00         db  0x08 ; '.'
0000000000000d01         db  0x00 ; '.'
0000000000000d02         db  0x00 ; '.'
0000000000000d03         db  0x00 ; '.'
0000000000000d04         db  0x00 ; '.'
0000000000000d05         db  0x00 ; '.'
0000000000000d06         db  0x00 ; '.'
0000000000000d07         db  0x00 ; '.'
0000000000000d08         db  0xb0 ; '.'
0000000000000d09         db  0x24 ; '$'
0000000000000d0a         db  0x00 ; '.'
0000000000000d0b         db  0x00 ; '.'
0000000000000d0c         db  0x00 ; '.'
0000000000000d0d         db  0x00 ; '.'
0000000000000d0e         db  0x00 ; '.'
0000000000000d0f         db  0x00 ; '.'
0000000000000d10         db  0x20 ; ' '
0000000000000d11         db  0xaa ; '.'
0000000000000d12         db  0x20 ; ' '
0000000000000d13         db  0x00 ; '.'
0000000000000d14         db  0x00 ; '.'
0000000000000d15         db  0x00 ; '.'
0000000000000d16         db  0x00 ; '.'
0000000000000d17         db  0x00 ; '.'
0000000000000d18         db  0x08 ; '.'
0000000000000d19         db  0x00 ; '.'
0000000000000d1a         db  0x00 ; '.'
0000000000000d1b         db  0x00 ; '.'
0000000000000d1c         db  0x00 ; '.'
0000000000000d1d         db  0x00 ; '.'
0000000000000d1e         db  0x00 ; '.'
0000000000000d1f         db  0x00 ; '.'
0000000000000d20         db  0xcf ; '.'
0000000000000d21         db  0x74 ; 't'
0000000000000d22         db  0x00 ; '.'
0000000000000d23         db  0x00 ; '.'
0000000000000d24         db  0x00 ; '.'
0000000000000d25         db  0x00 ; '.'
0000000000000d26         db  0x00 ; '.'
0000000000000d27         db  0x00 ; '.'
0000000000000d28         db  0x40 ; '@'
0000000000000d29         db  0xaa ; '.'
0000000000000d2a         db  0x20 ; ' '
0000000000000d2b         db  0x00 ; '.'
0000000000000d2c         db  0x00 ; '.'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x00 ; '.'
0000000000000d2f         db  0x00 ; '.'
0000000000000d30         db  0x08 ; '.'
0000000000000d31         db  0x00 ; '.'
0000000000000d32         db  0x00 ; '.'
0000000000000d33         db  0x00 ; '.'
0000000000000d34         db  0x00 ; '.'
0000000000000d35         db  0x00 ; '.'
0000000000000d36         db  0x00 ; '.'
0000000000000d37         db  0x00 ; '.'
0000000000000d38         db  0xd6 ; '.'
0000000000000d39         db  0x74 ; 't'
0000000000000d3a         db  0x00 ; '.'
0000000000000d3b         db  0x00 ; '.'
0000000000000d3c         db  0x00 ; '.'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x00 ; '.'
0000000000000d3f         db  0x00 ; '.'
0000000000000d40         db  0x60 ; '`'
0000000000000d41         db  0xaa ; '.'
0000000000000d42         db  0x20 ; ' '
0000000000000d43         db  0x00 ; '.'
0000000000000d44         db  0x00 ; '.'
0000000000000d45         db  0x00 ; '.'
0000000000000d46         db  0x00 ; '.'
0000000000000d47         db  0x00 ; '.'
0000000000000d48         db  0x08 ; '.'
0000000000000d49         db  0x00 ; '.'
0000000000000d4a         db  0x00 ; '.'
0000000000000d4b         db  0x00 ; '.'
0000000000000d4c         db  0x00 ; '.'
0000000000000d4d         db  0x00 ; '.'
0000000000000d4e         db  0x00 ; '.'
0000000000000d4f         db  0x00 ; '.'
0000000000000d50         db  0xdb ; '.'
0000000000000d51         db  0x74 ; 't'
0000000000000d52         db  0x00 ; '.'
0000000000000d53         db  0x00 ; '.'
0000000000000d54         db  0x00 ; '.'
0000000000000d55         db  0x00 ; '.'
0000000000000d56         db  0x00 ; '.'
0000000000000d57         db  0x00 ; '.'
0000000000000d58         db  0x80 ; '.'
0000000000000d59         db  0xaa ; '.'
0000000000000d5a         db  0x20 ; ' '
0000000000000d5b         db  0x00 ; '.'
0000000000000d5c         db  0x00 ; '.'
0000000000000d5d         db  0x00 ; '.'
0000000000000d5e         db  0x00 ; '.'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0x08 ; '.'
0000000000000d61         db  0x00 ; '.'
0000000000000d62         db  0x00 ; '.'
0000000000000d63         db  0x00 ; '.'
0000000000000d64         db  0x00 ; '.'
0000000000000d65         db  0x00 ; '.'
0000000000000d66         db  0x00 ; '.'
0000000000000d67         db  0x00 ; '.'
0000000000000d68         db  0xea ; '.'
0000000000000d69         db  0x74 ; 't'
0000000000000d6a         db  0x00 ; '.'
0000000000000d6b         db  0x00 ; '.'
0000000000000d6c         db  0x00 ; '.'
0000000000000d6d         db  0x00 ; '.'
0000000000000d6e         db  0x00 ; '.'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0xa0 ; '.'
0000000000000d71         db  0xaa ; '.'
0000000000000d72         db  0x20 ; ' '
0000000000000d73         db  0x00 ; '.'
0000000000000d74         db  0x00 ; '.'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x00 ; '.'
0000000000000d77         db  0x00 ; '.'
0000000000000d78         db  0x08 ; '.'
0000000000000d79         db  0x00 ; '.'
0000000000000d7a         db  0x00 ; '.'
0000000000000d7b         db  0x00 ; '.'
0000000000000d7c         db  0x00 ; '.'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x00 ; '.'
0000000000000d7f         db  0x00 ; '.'
0000000000000d80         db  0xf1 ; '.'
0000000000000d81         db  0x74 ; 't'
0000000000000d82         db  0x00 ; '.'
0000000000000d83         db  0x00 ; '.'
0000000000000d84         db  0x00 ; '.'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x00 ; '.'
0000000000000d87         db  0x00 ; '.'
0000000000000d88         db  0xc0 ; '.'
0000000000000d89         db  0xaa ; '.'
0000000000000d8a         db  0x20 ; ' '
0000000000000d8b         db  0x00 ; '.'
0000000000000d8c         db  0x00 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x00 ; '.'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0x08 ; '.'
0000000000000d91         db  0x00 ; '.'
0000000000000d92         db  0x00 ; '.'
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x00 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x00 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0xfb ; '.'
0000000000000d99         db  0x74 ; 't'
0000000000000d9a         db  0x00 ; '.'
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x00 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x00 ; '.'
0000000000000d9f         db  0x00 ; '.'
0000000000000da0         db  0xe0 ; '.'
0000000000000da1         db  0xaa ; '.'
0000000000000da2         db  0x20 ; ' '
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x00 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x00 ; '.'
0000000000000da7         db  0x00 ; '.'
0000000000000da8         db  0x08 ; '.'
0000000000000da9         db  0x00 ; '.'
0000000000000daa         db  0x00 ; '.'
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x00 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x00 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0x02 ; '.'
0000000000000db1         db  0x75 ; 'u'
0000000000000db2         db  0x00 ; '.'
0000000000000db3         db  0x00 ; '.'
0000000000000db4         db  0x00 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x00 ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0x00 ; '.'
0000000000000db9         db  0xab ; '.'
0000000000000dba         db  0x20 ; ' '
0000000000000dbb         db  0x00 ; '.'
0000000000000dbc         db  0x00 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x00 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0x08 ; '.'
0000000000000dc1         db  0x00 ; '.'
0000000000000dc2         db  0x00 ; '.'
0000000000000dc3         db  0x00 ; '.'
0000000000000dc4         db  0x00 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x00 ; '.'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0x0c ; '.'
0000000000000dc9         db  0x75 ; 'u'
0000000000000dca         db  0x00 ; '.'
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x00 ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x00 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0x20 ; ' '
0000000000000dd1         db  0xab ; '.'
0000000000000dd2         db  0x20 ; ' '
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x00 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x00 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0x08 ; '.'
0000000000000dd9         db  0x00 ; '.'
0000000000000dda         db  0x00 ; '.'
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x00 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x00 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0x13 ; '.'
0000000000000de1         db  0x75 ; 'u'
0000000000000de2         db  0x00 ; '.'
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x00 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x00 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0x40 ; '@'
0000000000000de9         db  0xab ; '.'
0000000000000dea         db  0x20 ; ' '
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x00 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x00 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0x08 ; '.'
0000000000000df1         db  0x00 ; '.'
0000000000000df2         db  0x00 ; '.'
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x00 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x00 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0x1d ; '.'
0000000000000df9         db  0x75 ; 'u'
0000000000000dfa         db  0x00 ; '.'
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x00 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x00 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0x60 ; '`'
0000000000000e01         db  0xab ; '.'
0000000000000e02         db  0x20 ; ' '
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x00 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x00 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0x08 ; '.'
0000000000000e09         db  0x00 ; '.'
0000000000000e0a         db  0x00 ; '.'
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x00 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x00 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0x27 ; '''
0000000000000e11         db  0x75 ; 'u'
0000000000000e12         db  0x00 ; '.'
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x00 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x00 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0x80 ; '.'
0000000000000e19         db  0xab ; '.'
0000000000000e1a         db  0x20 ; ' '
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x00 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x00 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0x08 ; '.'
0000000000000e21         db  0x00 ; '.'
0000000000000e22         db  0x00 ; '.'
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x00 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x00 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0x2b ; '+'
0000000000000e29         db  0x75 ; 'u'
0000000000000e2a         db  0x00 ; '.'
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x00 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x00 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0xa0 ; '.'
0000000000000e31         db  0xab ; '.'
0000000000000e32         db  0x20 ; ' '
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0x08 ; '.'
0000000000000e39         db  0x00 ; '.'
0000000000000e3a         db  0x00 ; '.'
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x00 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x00 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0x30 ; '0'
0000000000000e41         db  0x75 ; 'u'
0000000000000e42         db  0x00 ; '.'
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x00 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0xe0 ; '.'
0000000000000e49         db  0xab ; '.'
0000000000000e4a         db  0x20 ; ' '
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x00 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0x08 ; '.'
0000000000000e51         db  0x00 ; '.'
0000000000000e52         db  0x00 ; '.'
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x00 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x00 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0xa1 ; '.'
0000000000000e59         db  0x80 ; '.'
0000000000000e5a         db  0x00 ; '.'
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x00 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x00 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0xe8 ; '.'
0000000000000e61         db  0xab ; '.'
0000000000000e62         db  0x20 ; ' '
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x00 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0x08 ; '.'
0000000000000e69         db  0x00 ; '.'
0000000000000e6a         db  0x00 ; '.'
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x00 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x00 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0xa9 ; '.'
0000000000000e71         db  0x80 ; '.'
0000000000000e72         db  0x00 ; '.'
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x00 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0xf0 ; '.'
0000000000000e79         db  0xab ; '.'
0000000000000e7a         db  0x20 ; ' '
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x00 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0x08 ; '.'
0000000000000e81         db  0x00 ; '.'
0000000000000e82         db  0x00 ; '.'
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x00 ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0xaf ; '.'
0000000000000e89         db  0x80 ; '.'
0000000000000e8a         db  0x00 ; '.'
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x00 ; '.'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0xf8 ; '.'
0000000000000e91         db  0xab ; '.'
0000000000000e92         db  0x20 ; ' '
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'
0000000000000e98         db  0x08 ; '.'
0000000000000e99         db  0x00 ; '.'
0000000000000e9a         db  0x00 ; '.'
0000000000000e9b         db  0x00 ; '.'
0000000000000e9c         db  0x00 ; '.'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x00 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0xbc ; '.'
0000000000000ea1         db  0x80 ; '.'
0000000000000ea2         db  0x00 ; '.'
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x00 ; '.'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0x00 ; '.'
0000000000000ea9         db  0xac ; '.'
0000000000000eaa         db  0x20 ; ' '
0000000000000eab         db  0x00 ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x00 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0x08 ; '.'
0000000000000eb1         db  0x00 ; '.'
0000000000000eb2         db  0x00 ; '.'
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x00 ; '.'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0xc9 ; '.'
0000000000000eb9         db  0x80 ; '.'
0000000000000eba         db  0x00 ; '.'
0000000000000ebb         db  0x00 ; '.'
0000000000000ebc         db  0x00 ; '.'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x00 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0x08 ; '.'
0000000000000ec1         db  0xac ; '.'
0000000000000ec2         db  0x20 ; ' '
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x00 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0x08 ; '.'
0000000000000ec9         db  0x00 ; '.'
0000000000000eca         db  0x00 ; '.'
0000000000000ecb         db  0x00 ; '.'
0000000000000ecc         db  0x00 ; '.'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0x5a ; 'Z'
0000000000000ed1         db  0x73 ; 's'
0000000000000ed2         db  0x00 ; '.'
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x00 ; '.'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0x10 ; '.'
0000000000000ed9         db  0xac ; '.'
0000000000000eda         db  0x20 ; ' '
0000000000000edb         db  0x00 ; '.'
0000000000000edc         db  0x00 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0x08 ; '.'
0000000000000ee1         db  0x00 ; '.'
0000000000000ee2         db  0x00 ; '.'
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x00 ; '.'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0xdd ; '.'
0000000000000ee9         db  0x80 ; '.'
0000000000000eea         db  0x00 ; '.'
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x00 ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x00 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0x18 ; '.'
0000000000000ef1         db  0xac ; '.'
0000000000000ef2         db  0x20 ; ' '
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0x08 ; '.'
0000000000000ef9         db  0x00 ; '.'
0000000000000efa         db  0x00 ; '.'
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x00 ; '.'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0xc2 ; '.'
0000000000000f01         db  0x80 ; '.'
0000000000000f02         db  0x00 ; '.'
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x00 ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0x20 ; ' '
0000000000000f09         db  0xac ; '.'
0000000000000f0a         db  0x20 ; ' '
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x00 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0x08 ; '.'
0000000000000f11         db  0x00 ; '.'
0000000000000f12         db  0x00 ; '.'
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x00 ; '.'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0x2e ; '.'
0000000000000f19         db  0x74 ; 't'
0000000000000f1a         db  0x00 ; '.'
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x00 ; '.'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0x28 ; '('
0000000000000f21         db  0xac ; '.'
0000000000000f22         db  0x20 ; ' '
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x00 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0x08 ; '.'
0000000000000f29         db  0x00 ; '.'
0000000000000f2a         db  0x00 ; '.'
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x00 ; '.'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0xe5 ; '.'
0000000000000f31         db  0x80 ; '.'
0000000000000f32         db  0x00 ; '.'
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x00 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0x08 ; '.'
0000000000000f39         db  0xb0 ; '.'
0000000000000f3a         db  0x20 ; ' '
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x00 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0x08 ; '.'
0000000000000f41         db  0x00 ; '.'
0000000000000f42         db  0x00 ; '.'
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x00 ; '.'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0x08 ; '.'
0000000000000f49         db  0xb0 ; '.'
0000000000000f4a         db  0x20 ; ' '
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x00 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0x10 ; '.'
0000000000000f51         db  0xb0 ; '.'
0000000000000f52         db  0x20 ; ' '
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0x08 ; '.'
0000000000000f59         db  0x00 ; '.'
0000000000000f5a         db  0x00 ; '.'
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x00 ; '.'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0xc9 ; '.'
0000000000000f61         db  0x7d ; '}'
0000000000000f62         db  0x00 ; '.'
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x00 ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0x60 ; '`'
0000000000000f69         db  0xb0 ; '.'
0000000000000f6a         db  0x20 ; ' '
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0x08 ; '.'
0000000000000f71         db  0x00 ; '.'
0000000000000f72         db  0x00 ; '.'
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x00 ; '.'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0x70 ; 'p'
0000000000000f79         db  0xb0 ; '.'
0000000000000f7a         db  0x20 ; ' '
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x00 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0x78 ; 'x'
0000000000000f81         db  0xb0 ; '.'
0000000000000f82         db  0x20 ; ' '
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x00 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0x08 ; '.'
0000000000000f89         db  0x00 ; '.'
0000000000000f8a         db  0x00 ; '.'
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x00 ; '.'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0x20 ; ' '
0000000000000f91         db  0xb1 ; '.'
0000000000000f92         db  0x20 ; ' '
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x00 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0xd0 ; '.'
0000000000000f99         db  0xaf ; '.'
0000000000000f9a         db  0x20 ; ' '
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'
0000000000000fa0         db  0x06 ; '.'
0000000000000fa1         db  0x00 ; '.'
0000000000000fa2         db  0x00 ; '.'
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x05 ; '.'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0x00 ; '.'
0000000000000fa9         db  0x00 ; '.'
0000000000000faa         db  0x00 ; '.'
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x00 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0xd8 ; '.'
0000000000000fb1         db  0xaf ; '.'
0000000000000fb2         db  0x20 ; ' '
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x00 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0x06 ; '.'
0000000000000fb9         db  0x00 ; '.'
0000000000000fba         db  0x00 ; '.'
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x1b ; '.'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0x00 ; '.'
0000000000000fc1         db  0x00 ; '.'
0000000000000fc2         db  0x00 ; '.'
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x00 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0xe0 ; '.'
0000000000000fc9         db  0xaf ; '.'
0000000000000fca         db  0x20 ; ' '
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0x06 ; '.'
0000000000000fd1         db  0x00 ; '.'
0000000000000fd2         db  0x00 ; '.'
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x20 ; ' '
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x00 ; '.'
0000000000000fd9         db  0x00 ; '.'
0000000000000fda         db  0x00 ; '.'
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x00 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0xe8 ; '.'
0000000000000fe1         db  0xaf ; '.'
0000000000000fe2         db  0x20 ; ' '
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x00 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0x06 ; '.'
0000000000000fe9         db  0x00 ; '.'
0000000000000fea         db  0x00 ; '.'
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x33 ; '3'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x00 ; '.'
0000000000000ff1         db  0x00 ; '.'
0000000000000ff2         db  0x00 ; '.'
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x00 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0xf0 ; '.'
0000000000000ff9         db  0xaf ; '.'
0000000000000ffa         db  0x20 ; ' '
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'
0000000000001000         db  0x06 ; '.'
0000000000001001         db  0x00 ; '.'
0000000000001002         db  0x00 ; '.'
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x36 ; '6'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x00 ; '.'
0000000000001009         db  0x00 ; '.'
000000000000100a         db  0x00 ; '.'
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x00 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0x80 ; '.'
0000000000001011         db  0xb0 ; '.'
0000000000001012         db  0x20 ; ' '
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0x05 ; '.'
0000000000001019         db  0x00 ; '.'
000000000000101a         db  0x00 ; '.'
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x39 ; '9'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x00 ; '.'
0000000000001021         db  0x00 ; '.'
0000000000001022         db  0x00 ; '.'
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x00 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x88 ; '.'
0000000000001029         db  0xb0 ; '.'
000000000000102a         db  0x20 ; ' '
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x00 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0x05 ; '.'
0000000000001031         db  0x00 ; '.'
0000000000001032         db  0x00 ; '.'
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x38 ; '8'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x00 ; '.'
0000000000001039         db  0x00 ; '.'
000000000000103a         db  0x00 ; '.'
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x00 ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0x90 ; '.'
0000000000001041         db  0xb0 ; '.'
0000000000001042         db  0x20 ; ' '
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x00 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0x05 ; '.'
0000000000001049         db  0x00 ; '.'
000000000000104a         db  0x00 ; '.'
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x3a ; ':'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x00 ; '.'
0000000000001051         db  0x00 ; '.'
0000000000001052         db  0x00 ; '.'
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x00 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0x98 ; '.'
0000000000001059         db  0xb0 ; '.'
000000000000105a         db  0x20 ; ' '
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0x05 ; '.'
0000000000001061         db  0x00 ; '.'
0000000000001062         db  0x00 ; '.'
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x3f ; '?'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x00 ; '.'
0000000000001069         db  0x00 ; '.'
000000000000106a         db  0x00 ; '.'
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x00 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0xa0 ; '.'
0000000000001071         db  0xb0 ; '.'
0000000000001072         db  0x20 ; ' '
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x00 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0x05 ; '.'
0000000000001079         db  0x00 ; '.'
000000000000107a         db  0x00 ; '.'
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x40 ; '@'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x00 ; '.'
0000000000001081         db  0x00 ; '.'
0000000000001082         db  0x00 ; '.'
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x00 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0xa8 ; '.'
0000000000001089         db  0xb0 ; '.'
000000000000108a         db  0x20 ; ' '
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x00 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0x05 ; '.'
0000000000001091         db  0x00 ; '.'
0000000000001092         db  0x00 ; '.'
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x3c ; '<'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x00 ; '.'
0000000000001099         db  0x00 ; '.'
000000000000109a         db  0x00 ; '.'
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x00 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0xc0 ; '.'
00000000000010a1         db  0xb0 ; '.'
00000000000010a2         db  0x20 ; ' '
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x00 ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0x05 ; '.'
00000000000010a9         db  0x00 ; '.'
00000000000010aa         db  0x00 ; '.'
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x3e ; '>'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x00 ; '.'
00000000000010b1         db  0x00 ; '.'
00000000000010b2         db  0x00 ; '.'
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x00 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0x10b8; 0x1568[ (1200 bytes)
        ; File offset : [4280; 5480[ (1200 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

00000000000010b8         db  0x40 ; '@'
00000000000010b9         db  0xae ; '.'
00000000000010ba         db  0x20 ; ' '
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x00 ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0x07 ; '.'
00000000000010c1         db  0x00 ; '.'
00000000000010c2         db  0x00 ; '.'
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x01 ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x00 ; '.'
00000000000010c9         db  0x00 ; '.'
00000000000010ca         db  0x00 ; '.'
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x00 ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0x48 ; 'H'
00000000000010d1         db  0xae ; '.'
00000000000010d2         db  0x20 ; ' '
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x00 ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0x07 ; '.'
00000000000010d9         db  0x00 ; '.'
00000000000010da         db  0x00 ; '.'
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x02 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x00 ; '.'
00000000000010e1         db  0x00 ; '.'
00000000000010e2         db  0x00 ; '.'
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x00 ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0x50 ; 'P'
00000000000010e9         db  0xae ; '.'
00000000000010ea         db  0x20 ; ' '
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x00 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0x07 ; '.'
00000000000010f1         db  0x00 ; '.'
00000000000010f2         db  0x00 ; '.'
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x03 ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0x00 ; '.'
00000000000010f9         db  0x00 ; '.'
00000000000010fa         db  0x00 ; '.'
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x00 ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0x58 ; 'X'
0000000000001101         db  0xae ; '.'
0000000000001102         db  0x20 ; ' '
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x00 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0x07 ; '.'
0000000000001109         db  0x00 ; '.'
000000000000110a         db  0x00 ; '.'
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x04 ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0x00 ; '.'
0000000000001111         db  0x00 ; '.'
0000000000001112         db  0x00 ; '.'
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x00 ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0x60 ; '`'
0000000000001119         db  0xae ; '.'
000000000000111a         db  0x20 ; ' '
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x00 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x07 ; '.'
0000000000001121         db  0x00 ; '.'
0000000000001122         db  0x00 ; '.'
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x06 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0x00 ; '.'
0000000000001129         db  0x00 ; '.'
000000000000112a         db  0x00 ; '.'
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x00 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0x68 ; 'h'
0000000000001131         db  0xae ; '.'
0000000000001132         db  0x20 ; ' '
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x00 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x07 ; '.'
0000000000001139         db  0x00 ; '.'
000000000000113a         db  0x00 ; '.'
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x07 ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0x00 ; '.'
0000000000001141         db  0x00 ; '.'
0000000000001142         db  0x00 ; '.'
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x00 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0x70 ; 'p'
0000000000001149         db  0xae ; '.'
000000000000114a         db  0x20 ; ' '
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x00 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x07 ; '.'
0000000000001151         db  0x00 ; '.'
0000000000001152         db  0x00 ; '.'
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x08 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0x00 ; '.'
0000000000001159         db  0x00 ; '.'
000000000000115a         db  0x00 ; '.'
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x00 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0x78 ; 'x'
0000000000001161         db  0xae ; '.'
0000000000001162         db  0x20 ; ' '
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x00 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x07 ; '.'
0000000000001169         db  0x00 ; '.'
000000000000116a         db  0x00 ; '.'
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x09 ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0x00 ; '.'
0000000000001171         db  0x00 ; '.'
0000000000001172         db  0x00 ; '.'
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x00 ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0x80 ; '.'
0000000000001179         db  0xae ; '.'
000000000000117a         db  0x20 ; ' '
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x00 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x07 ; '.'
0000000000001181         db  0x00 ; '.'
0000000000001182         db  0x00 ; '.'
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x0a ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x00 ; '.'
0000000000001189         db  0x00 ; '.'
000000000000118a         db  0x00 ; '.'
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x00 ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0x88 ; '.'
0000000000001191         db  0xae ; '.'
0000000000001192         db  0x20 ; ' '
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x00 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0x07 ; '.'
0000000000001199         db  0x00 ; '.'
000000000000119a         db  0x00 ; '.'
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x0b ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x00 ; '.'
00000000000011a1         db  0x00 ; '.'
00000000000011a2         db  0x00 ; '.'
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x00 ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0x90 ; '.'
00000000000011a9         db  0xae ; '.'
00000000000011aa         db  0x20 ; ' '
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x00 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0x07 ; '.'
00000000000011b1         db  0x00 ; '.'
00000000000011b2         db  0x00 ; '.'
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x0c ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x00 ; '.'
00000000000011b9         db  0x00 ; '.'
00000000000011ba         db  0x00 ; '.'
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x00 ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0x98 ; '.'
00000000000011c1         db  0xae ; '.'
00000000000011c2         db  0x20 ; ' '
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x00 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0x07 ; '.'
00000000000011c9         db  0x00 ; '.'
00000000000011ca         db  0x00 ; '.'
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x0d ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x00 ; '.'
00000000000011d1         db  0x00 ; '.'
00000000000011d2         db  0x00 ; '.'
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x00 ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0xa0 ; '.'
00000000000011d9         db  0xae ; '.'
00000000000011da         db  0x20 ; ' '
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x00 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0x07 ; '.'
00000000000011e1         db  0x00 ; '.'
00000000000011e2         db  0x00 ; '.'
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x0e ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x00 ; '.'
00000000000011e9         db  0x00 ; '.'
00000000000011ea         db  0x00 ; '.'
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x00 ; '.'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0xa8 ; '.'
00000000000011f1         db  0xae ; '.'
00000000000011f2         db  0x20 ; ' '
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x00 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0x07 ; '.'
00000000000011f9         db  0x00 ; '.'
00000000000011fa         db  0x00 ; '.'
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x0f ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x00 ; '.'
0000000000001201         db  0x00 ; '.'
0000000000001202         db  0x00 ; '.'
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x00 ; '.'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0xb0 ; '.'
0000000000001209         db  0xae ; '.'
000000000000120a         db  0x20 ; ' '
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x00 ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0x07 ; '.'
0000000000001211         db  0x00 ; '.'
0000000000001212         db  0x00 ; '.'
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x10 ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x00 ; '.'
0000000000001219         db  0x00 ; '.'
000000000000121a         db  0x00 ; '.'
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x00 ; '.'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0xb8 ; '.'
0000000000001221         db  0xae ; '.'
0000000000001222         db  0x20 ; ' '
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x00 ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0x07 ; '.'
0000000000001229         db  0x00 ; '.'
000000000000122a         db  0x00 ; '.'
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x11 ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x00 ; '.'
0000000000001231         db  0x00 ; '.'
0000000000001232         db  0x00 ; '.'
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x00 ; '.'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0xc0 ; '.'
0000000000001239         db  0xae ; '.'
000000000000123a         db  0x20 ; ' '
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x00 ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x07 ; '.'
0000000000001241         db  0x00 ; '.'
0000000000001242         db  0x00 ; '.'
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x12 ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x00 ; '.'
0000000000001249         db  0x00 ; '.'
000000000000124a         db  0x00 ; '.'
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x00 ; '.'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0xc8 ; '.'
0000000000001251         db  0xae ; '.'
0000000000001252         db  0x20 ; ' '
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x00 ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0x07 ; '.'
0000000000001259         db  0x00 ; '.'
000000000000125a         db  0x00 ; '.'
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x13 ; '.'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x00 ; '.'
0000000000001261         db  0x00 ; '.'
0000000000001262         db  0x00 ; '.'
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x00 ; '.'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0xd0 ; '.'
0000000000001269         db  0xae ; '.'
000000000000126a         db  0x20 ; ' '
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x00 ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x07 ; '.'
0000000000001271         db  0x00 ; '.'
0000000000001272         db  0x00 ; '.'
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x14 ; '.'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x00 ; '.'
0000000000001279         db  0x00 ; '.'
000000000000127a         db  0x00 ; '.'
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x00 ; '.'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0xd8 ; '.'
0000000000001281         db  0xae ; '.'
0000000000001282         db  0x20 ; ' '
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x00 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0x07 ; '.'
0000000000001289         db  0x00 ; '.'
000000000000128a         db  0x00 ; '.'
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x15 ; '.'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x00 ; '.'
0000000000001291         db  0x00 ; '.'
0000000000001292         db  0x00 ; '.'
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x00 ; '.'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0xe0 ; '.'
0000000000001299         db  0xae ; '.'
000000000000129a         db  0x20 ; ' '
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x00 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0x07 ; '.'
00000000000012a1         db  0x00 ; '.'
00000000000012a2         db  0x00 ; '.'
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x16 ; '.'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x00 ; '.'
00000000000012a9         db  0x00 ; '.'
00000000000012aa         db  0x00 ; '.'
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x00 ; '.'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0xe8 ; '.'
00000000000012b1         db  0xae ; '.'
00000000000012b2         db  0x20 ; ' '
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x00 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0x07 ; '.'
00000000000012b9         db  0x00 ; '.'
00000000000012ba         db  0x00 ; '.'
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x17 ; '.'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x00 ; '.'
00000000000012c1         db  0x00 ; '.'
00000000000012c2         db  0x00 ; '.'
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x00 ; '.'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0xf0 ; '.'
00000000000012c9         db  0xae ; '.'
00000000000012ca         db  0x20 ; ' '
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x00 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0x07 ; '.'
00000000000012d1         db  0x00 ; '.'
00000000000012d2         db  0x00 ; '.'
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x18 ; '.'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x00 ; '.'
00000000000012d9         db  0x00 ; '.'
00000000000012da         db  0x00 ; '.'
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x00 ; '.'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0xf8 ; '.'
00000000000012e1         db  0xae ; '.'
00000000000012e2         db  0x20 ; ' '
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x00 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0x07 ; '.'
00000000000012e9         db  0x00 ; '.'
00000000000012ea         db  0x00 ; '.'
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x19 ; '.'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x00 ; '.'
00000000000012f1         db  0x00 ; '.'
00000000000012f2         db  0x00 ; '.'
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x00 ; '.'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x00 ; '.'
00000000000012f9         db  0xaf ; '.'
00000000000012fa         db  0x20 ; ' '
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x00 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0x07 ; '.'
0000000000001301         db  0x00 ; '.'
0000000000001302         db  0x00 ; '.'
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x1a ; '.'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x00 ; '.'
0000000000001309         db  0x00 ; '.'
000000000000130a         db  0x00 ; '.'
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x00 ; '.'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0x08 ; '.'
0000000000001311         db  0xaf ; '.'
0000000000001312         db  0x20 ; ' '
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x00 ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0x07 ; '.'
0000000000001319         db  0x00 ; '.'
000000000000131a         db  0x00 ; '.'
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x1c ; '.'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x00 ; '.'
0000000000001321         db  0x00 ; '.'
0000000000001322         db  0x00 ; '.'
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x00 ; '.'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0x10 ; '.'
0000000000001329         db  0xaf ; '.'
000000000000132a         db  0x20 ; ' '
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x00 ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0x07 ; '.'
0000000000001331         db  0x00 ; '.'
0000000000001332         db  0x00 ; '.'
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x1d ; '.'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x00 ; '.'
0000000000001339         db  0x00 ; '.'
000000000000133a         db  0x00 ; '.'
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x00 ; '.'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0x18 ; '.'
0000000000001341         db  0xaf ; '.'
0000000000001342         db  0x20 ; ' '
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x00 ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0x07 ; '.'
0000000000001349         db  0x00 ; '.'
000000000000134a         db  0x00 ; '.'
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x1e ; '.'
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x00 ; '.'
0000000000001351         db  0x00 ; '.'
0000000000001352         db  0x00 ; '.'
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x00 ; '.'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0x20 ; ' '
0000000000001359         db  0xaf ; '.'
000000000000135a         db  0x20 ; ' '
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x00 ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0x07 ; '.'
0000000000001361         db  0x00 ; '.'
0000000000001362         db  0x00 ; '.'
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x1f ; '.'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0x00 ; '.'
0000000000001369         db  0x00 ; '.'
000000000000136a         db  0x00 ; '.'
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x00 ; '.'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0x28 ; '('
0000000000001371         db  0xaf ; '.'
0000000000001372         db  0x20 ; ' '
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x00 ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x07 ; '.'
0000000000001379         db  0x00 ; '.'
000000000000137a         db  0x00 ; '.'
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x21 ; '!'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0x00 ; '.'
0000000000001381         db  0x00 ; '.'
0000000000001382         db  0x00 ; '.'
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x00 ; '.'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0x30 ; '0'
0000000000001389         db  0xaf ; '.'
000000000000138a         db  0x20 ; ' '
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x00 ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x07 ; '.'
0000000000001391         db  0x00 ; '.'
0000000000001392         db  0x00 ; '.'
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x22 ; '"'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0x00 ; '.'
0000000000001399         db  0x00 ; '.'
000000000000139a         db  0x00 ; '.'
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x00 ; '.'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0x38 ; '8'
00000000000013a1         db  0xaf ; '.'
00000000000013a2         db  0x20 ; ' '
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x00 ; '.'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x07 ; '.'
00000000000013a9         db  0x00 ; '.'
00000000000013aa         db  0x00 ; '.'
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x23 ; '#'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x00 ; '.'
00000000000013b1         db  0x00 ; '.'
00000000000013b2         db  0x00 ; '.'
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x00 ; '.'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'
00000000000013b8         db  0x40 ; '@'
00000000000013b9         db  0xaf ; '.'
00000000000013ba         db  0x20 ; ' '
00000000000013bb         db  0x00 ; '.'
00000000000013bc         db  0x00 ; '.'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x00 ; '.'
00000000000013bf         db  0x00 ; '.'
00000000000013c0         db  0x07 ; '.'
00000000000013c1         db  0x00 ; '.'
00000000000013c2         db  0x00 ; '.'
00000000000013c3         db  0x00 ; '.'
00000000000013c4         db  0x24 ; '$'
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x00 ; '.'
00000000000013c7         db  0x00 ; '.'
00000000000013c8         db  0x00 ; '.'
00000000000013c9         db  0x00 ; '.'
00000000000013ca         db  0x00 ; '.'
00000000000013cb         db  0x00 ; '.'
00000000000013cc         db  0x00 ; '.'
00000000000013cd         db  0x00 ; '.'
00000000000013ce         db  0x00 ; '.'
00000000000013cf         db  0x00 ; '.'
00000000000013d0         db  0x48 ; 'H'
00000000000013d1         db  0xaf ; '.'
00000000000013d2         db  0x20 ; ' '
00000000000013d3         db  0x00 ; '.'
00000000000013d4         db  0x00 ; '.'
00000000000013d5         db  0x00 ; '.'
00000000000013d6         db  0x00 ; '.'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0x07 ; '.'
00000000000013d9         db  0x00 ; '.'
00000000000013da         db  0x00 ; '.'
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x25 ; '%'
00000000000013dd         db  0x00 ; '.'
00000000000013de         db  0x00 ; '.'
00000000000013df         db  0x00 ; '.'
00000000000013e0         db  0x00 ; '.'
00000000000013e1         db  0x00 ; '.'
00000000000013e2         db  0x00 ; '.'
00000000000013e3         db  0x00 ; '.'
00000000000013e4         db  0x00 ; '.'
00000000000013e5         db  0x00 ; '.'
00000000000013e6         db  0x00 ; '.'
00000000000013e7         db  0x00 ; '.'
00000000000013e8         db  0x50 ; 'P'
00000000000013e9         db  0xaf ; '.'
00000000000013ea         db  0x20 ; ' '
00000000000013eb         db  0x00 ; '.'
00000000000013ec         db  0x00 ; '.'
00000000000013ed         db  0x00 ; '.'
00000000000013ee         db  0x00 ; '.'
00000000000013ef         db  0x00 ; '.'
00000000000013f0         db  0x07 ; '.'
00000000000013f1         db  0x00 ; '.'
00000000000013f2         db  0x00 ; '.'
00000000000013f3         db  0x00 ; '.'
00000000000013f4         db  0x26 ; '&'
00000000000013f5         db  0x00 ; '.'
00000000000013f6         db  0x00 ; '.'
00000000000013f7         db  0x00 ; '.'
00000000000013f8         db  0x00 ; '.'
00000000000013f9         db  0x00 ; '.'
00000000000013fa         db  0x00 ; '.'
00000000000013fb         db  0x00 ; '.'
00000000000013fc         db  0x00 ; '.'
00000000000013fd         db  0x00 ; '.'
00000000000013fe         db  0x00 ; '.'
00000000000013ff         db  0x00 ; '.'
0000000000001400         db  0x58 ; 'X'                                         ; DATA XREF=main+615, main+639, main+737, main+774, main+1524, main+1620, z85_decode_ctx_init+4, z85_decode_ctx_init+12, base2_decode_ctx_init+4, base2_decode_ctx_init+12, base16_decode_ctx_init+4
0000000000001401         db  0xaf ; '.'
0000000000001402         db  0x20 ; ' '
0000000000001403         db  0x00 ; '.'
0000000000001404         db  0x00 ; '.'
0000000000001405         db  0x00 ; '.'
0000000000001406         db  0x00 ; '.'
0000000000001407         db  0x00 ; '.'
0000000000001408         db  0x07 ; '.'
0000000000001409         db  0x00 ; '.'
000000000000140a         db  0x00 ; '.'
000000000000140b         db  0x00 ; '.'
000000000000140c         db  0x27 ; '''
000000000000140d         db  0x00 ; '.'
000000000000140e         db  0x00 ; '.'
000000000000140f         db  0x00 ; '.'
0000000000001410         db  0x00 ; '.'
0000000000001411         db  0x00 ; '.'
0000000000001412         db  0x00 ; '.'
0000000000001413         db  0x00 ; '.'
0000000000001414         db  0x00 ; '.'
0000000000001415         db  0x00 ; '.'
0000000000001416         db  0x00 ; '.'
0000000000001417         db  0x00 ; '.'
0000000000001418         db  0x60 ; '`'
0000000000001419         db  0xaf ; '.'
000000000000141a         db  0x20 ; ' '
000000000000141b         db  0x00 ; '.'
000000000000141c         db  0x00 ; '.'
000000000000141d         db  0x00 ; '.'
000000000000141e         db  0x00 ; '.'
000000000000141f         db  0x00 ; '.'
0000000000001420         db  0x07 ; '.'
0000000000001421         db  0x00 ; '.'
0000000000001422         db  0x00 ; '.'
0000000000001423         db  0x00 ; '.'
0000000000001424         db  0x28 ; '('
0000000000001425         db  0x00 ; '.'
0000000000001426         db  0x00 ; '.'
0000000000001427         db  0x00 ; '.'
0000000000001428         db  0x00 ; '.'
0000000000001429         db  0x00 ; '.'
000000000000142a         db  0x00 ; '.'
000000000000142b         db  0x00 ; '.'
000000000000142c         db  0x00 ; '.'
000000000000142d         db  0x00 ; '.'
000000000000142e         db  0x00 ; '.'
000000000000142f         db  0x00 ; '.'
0000000000001430         db  0x68 ; 'h'
0000000000001431         db  0xaf ; '.'
0000000000001432         db  0x20 ; ' '
0000000000001433         db  0x00 ; '.'
0000000000001434         db  0x00 ; '.'
0000000000001435         db  0x00 ; '.'
0000000000001436         db  0x00 ; '.'
0000000000001437         db  0x00 ; '.'
0000000000001438         db  0x07 ; '.'
0000000000001439         db  0x00 ; '.'
000000000000143a         db  0x00 ; '.'
000000000000143b         db  0x00 ; '.'
000000000000143c         db  0x29 ; ')'
000000000000143d         db  0x00 ; '.'
000000000000143e         db  0x00 ; '.'
000000000000143f         db  0x00 ; '.'
0000000000001440         db  0x00 ; '.'
0000000000001441         db  0x00 ; '.'
0000000000001442         db  0x00 ; '.'
0000000000001443         db  0x00 ; '.'
0000000000001444         db  0x00 ; '.'
0000000000001445         db  0x00 ; '.'
0000000000001446         db  0x00 ; '.'
0000000000001447         db  0x00 ; '.'
0000000000001448         db  0x70 ; 'p'
0000000000001449         db  0xaf ; '.'
000000000000144a         db  0x20 ; ' '
000000000000144b         db  0x00 ; '.'
000000000000144c         db  0x00 ; '.'
000000000000144d         db  0x00 ; '.'
000000000000144e         db  0x00 ; '.'
000000000000144f         db  0x00 ; '.'
0000000000001450         db  0x07 ; '.'
0000000000001451         db  0x00 ; '.'
0000000000001452         db  0x00 ; '.'
0000000000001453         db  0x00 ; '.'
0000000000001454         db  0x2a ; '*'
0000000000001455         db  0x00 ; '.'
0000000000001456         db  0x00 ; '.'
0000000000001457         db  0x00 ; '.'
0000000000001458         db  0x00 ; '.'
0000000000001459         db  0x00 ; '.'
000000000000145a         db  0x00 ; '.'
000000000000145b         db  0x00 ; '.'
000000000000145c         db  0x00 ; '.'
000000000000145d         db  0x00 ; '.'
000000000000145e         db  0x00 ; '.'
000000000000145f         db  0x00 ; '.'
0000000000001460         db  0x78 ; 'x'
0000000000001461         db  0xaf ; '.'
0000000000001462         db  0x20 ; ' '
0000000000001463         db  0x00 ; '.'
0000000000001464         db  0x00 ; '.'
0000000000001465         db  0x00 ; '.'
0000000000001466         db  0x00 ; '.'
0000000000001467         db  0x00 ; '.'
0000000000001468         db  0x07 ; '.'
0000000000001469         db  0x00 ; '.'
000000000000146a         db  0x00 ; '.'
000000000000146b         db  0x00 ; '.'
000000000000146c         db  0x2b ; '+'
000000000000146d         db  0x00 ; '.'
000000000000146e         db  0x00 ; '.'
000000000000146f         db  0x00 ; '.'
0000000000001470         db  0x00 ; '.'
0000000000001471         db  0x00 ; '.'
0000000000001472         db  0x00 ; '.'
0000000000001473         db  0x00 ; '.'
0000000000001474         db  0x00 ; '.'
0000000000001475         db  0x00 ; '.'
0000000000001476         db  0x00 ; '.'
0000000000001477         db  0x00 ; '.'
0000000000001478         db  0x80 ; '.'
0000000000001479         db  0xaf ; '.'
000000000000147a         db  0x20 ; ' '
000000000000147b         db  0x00 ; '.'
000000000000147c         db  0x00 ; '.'
000000000000147d         db  0x00 ; '.'
000000000000147e         db  0x00 ; '.'
000000000000147f         db  0x00 ; '.'
0000000000001480         db  0x07 ; '.'
0000000000001481         db  0x00 ; '.'
0000000000001482         db  0x00 ; '.'
0000000000001483         db  0x00 ; '.'
0000000000001484         db  0x2c ; ','
0000000000001485         db  0x00 ; '.'
0000000000001486         db  0x00 ; '.'
0000000000001487         db  0x00 ; '.'
0000000000001488         db  0x00 ; '.'
0000000000001489         db  0x00 ; '.'
000000000000148a         db  0x00 ; '.'
000000000000148b         db  0x00 ; '.'
000000000000148c         db  0x00 ; '.'
000000000000148d         db  0x00 ; '.'
000000000000148e         db  0x00 ; '.'
000000000000148f         db  0x00 ; '.'
0000000000001490         db  0x88 ; '.'
0000000000001491         db  0xaf ; '.'
0000000000001492         db  0x20 ; ' '
0000000000001493         db  0x00 ; '.'
0000000000001494         db  0x00 ; '.'
0000000000001495         db  0x00 ; '.'
0000000000001496         db  0x00 ; '.'
0000000000001497         db  0x00 ; '.'
0000000000001498         db  0x07 ; '.'
0000000000001499         db  0x00 ; '.'
000000000000149a         db  0x00 ; '.'
000000000000149b         db  0x00 ; '.'
000000000000149c         db  0x2d ; '-'
000000000000149d         db  0x00 ; '.'
000000000000149e         db  0x00 ; '.'
000000000000149f         db  0x00 ; '.'
00000000000014a0         db  0x00 ; '.'
00000000000014a1         db  0x00 ; '.'
00000000000014a2         db  0x00 ; '.'
00000000000014a3         db  0x00 ; '.'
00000000000014a4         db  0x00 ; '.'
00000000000014a5         db  0x00 ; '.'
00000000000014a6         db  0x00 ; '.'
00000000000014a7         db  0x00 ; '.'
00000000000014a8         db  0x90 ; '.'
00000000000014a9         db  0xaf ; '.'
00000000000014aa         db  0x20 ; ' '
00000000000014ab         db  0x00 ; '.'
00000000000014ac         db  0x00 ; '.'
00000000000014ad         db  0x00 ; '.'
00000000000014ae         db  0x00 ; '.'
00000000000014af         db  0x00 ; '.'
00000000000014b0         db  0x07 ; '.'
00000000000014b1         db  0x00 ; '.'
00000000000014b2         db  0x00 ; '.'
00000000000014b3         db  0x00 ; '.'
00000000000014b4         db  0x2e ; '.'
00000000000014b5         db  0x00 ; '.'
00000000000014b6         db  0x00 ; '.'
00000000000014b7         db  0x00 ; '.'
00000000000014b8         db  0x00 ; '.'
00000000000014b9         db  0x00 ; '.'
00000000000014ba         db  0x00 ; '.'
00000000000014bb         db  0x00 ; '.'
00000000000014bc         db  0x00 ; '.'
00000000000014bd         db  0x00 ; '.'
00000000000014be         db  0x00 ; '.'
00000000000014bf         db  0x00 ; '.'
00000000000014c0         db  0x98 ; '.'
00000000000014c1         db  0xaf ; '.'
00000000000014c2         db  0x20 ; ' '
00000000000014c3         db  0x00 ; '.'
00000000000014c4         db  0x00 ; '.'
00000000000014c5         db  0x00 ; '.'
00000000000014c6         db  0x00 ; '.'
00000000000014c7         db  0x00 ; '.'
00000000000014c8         db  0x07 ; '.'
00000000000014c9         db  0x00 ; '.'
00000000000014ca         db  0x00 ; '.'
00000000000014cb         db  0x00 ; '.'
00000000000014cc         db  0x2f ; '/'
00000000000014cd         db  0x00 ; '.'
00000000000014ce         db  0x00 ; '.'
00000000000014cf         db  0x00 ; '.'
00000000000014d0         db  0x00 ; '.'
00000000000014d1         db  0x00 ; '.'
00000000000014d2         db  0x00 ; '.'
00000000000014d3         db  0x00 ; '.'
00000000000014d4         db  0x00 ; '.'
00000000000014d5         db  0x00 ; '.'
00000000000014d6         db  0x00 ; '.'
00000000000014d7         db  0x00 ; '.'
00000000000014d8         db  0xa0 ; '.'
00000000000014d9         db  0xaf ; '.'
00000000000014da         db  0x20 ; ' '
00000000000014db         db  0x00 ; '.'
00000000000014dc         db  0x00 ; '.'
00000000000014dd         db  0x00 ; '.'
00000000000014de         db  0x00 ; '.'
00000000000014df         db  0x00 ; '.'
00000000000014e0         db  0x07 ; '.'
00000000000014e1         db  0x00 ; '.'
00000000000014e2         db  0x00 ; '.'
00000000000014e3         db  0x00 ; '.'
00000000000014e4         db  0x30 ; '0'
00000000000014e5         db  0x00 ; '.'
00000000000014e6         db  0x00 ; '.'
00000000000014e7         db  0x00 ; '.'
00000000000014e8         db  0x00 ; '.'
00000000000014e9         db  0x00 ; '.'
00000000000014ea         db  0x00 ; '.'
00000000000014eb         db  0x00 ; '.'
00000000000014ec         db  0x00 ; '.'
00000000000014ed         db  0x00 ; '.'
00000000000014ee         db  0x00 ; '.'
00000000000014ef         db  0x00 ; '.'
00000000000014f0         db  0xa8 ; '.'
00000000000014f1         db  0xaf ; '.'
00000000000014f2         db  0x20 ; ' '
00000000000014f3         db  0x00 ; '.'
00000000000014f4         db  0x00 ; '.'
00000000000014f5         db  0x00 ; '.'
00000000000014f6         db  0x00 ; '.'
00000000000014f7         db  0x00 ; '.'
00000000000014f8         db  0x07 ; '.'
00000000000014f9         db  0x00 ; '.'
00000000000014fa         db  0x00 ; '.'
00000000000014fb         db  0x00 ; '.'
00000000000014fc         db  0x31 ; '1'
00000000000014fd         db  0x00 ; '.'
00000000000014fe         db  0x00 ; '.'
00000000000014ff         db  0x00 ; '.'
0000000000001500         db  0x00 ; '.'
0000000000001501         db  0x00 ; '.'
0000000000001502         db  0x00 ; '.'
0000000000001503         db  0x00 ; '.'
0000000000001504         db  0x00 ; '.'
0000000000001505         db  0x00 ; '.'
0000000000001506         db  0x00 ; '.'
0000000000001507         db  0x00 ; '.'
0000000000001508         db  0xb0 ; '.'
0000000000001509         db  0xaf ; '.'
000000000000150a         db  0x20 ; ' '
000000000000150b         db  0x00 ; '.'
000000000000150c         db  0x00 ; '.'
000000000000150d         db  0x00 ; '.'
000000000000150e         db  0x00 ; '.'
000000000000150f         db  0x00 ; '.'
0000000000001510         db  0x07 ; '.'
0000000000001511         db  0x00 ; '.'
0000000000001512         db  0x00 ; '.'
0000000000001513         db  0x00 ; '.'
0000000000001514         db  0x32 ; '2'
0000000000001515         db  0x00 ; '.'
0000000000001516         db  0x00 ; '.'
0000000000001517         db  0x00 ; '.'
0000000000001518         db  0x00 ; '.'
0000000000001519         db  0x00 ; '.'
000000000000151a         db  0x00 ; '.'
000000000000151b         db  0x00 ; '.'
000000000000151c         db  0x00 ; '.'
000000000000151d         db  0x00 ; '.'
000000000000151e         db  0x00 ; '.'
000000000000151f         db  0x00 ; '.'
0000000000001520         db  0xb8 ; '.'
0000000000001521         db  0xaf ; '.'
0000000000001522         db  0x20 ; ' '
0000000000001523         db  0x00 ; '.'
0000000000001524         db  0x00 ; '.'
0000000000001525         db  0x00 ; '.'
0000000000001526         db  0x00 ; '.'
0000000000001527         db  0x00 ; '.'
0000000000001528         db  0x07 ; '.'
0000000000001529         db  0x00 ; '.'
000000000000152a         db  0x00 ; '.'
000000000000152b         db  0x00 ; '.'
000000000000152c         db  0x34 ; '4'
000000000000152d         db  0x00 ; '.'
000000000000152e         db  0x00 ; '.'
000000000000152f         db  0x00 ; '.'
0000000000001530         db  0x00 ; '.'
0000000000001531         db  0x00 ; '.'
0000000000001532         db  0x00 ; '.'
0000000000001533         db  0x00 ; '.'
0000000000001534         db  0x00 ; '.'
0000000000001535         db  0x00 ; '.'
0000000000001536         db  0x00 ; '.'
0000000000001537         db  0x00 ; '.'
0000000000001538         db  0xc0 ; '.'
0000000000001539         db  0xaf ; '.'
000000000000153a         db  0x20 ; ' '
000000000000153b         db  0x00 ; '.'
000000000000153c         db  0x00 ; '.'
000000000000153d         db  0x00 ; '.'
000000000000153e         db  0x00 ; '.'
000000000000153f         db  0x00 ; '.'
0000000000001540         db  0x07 ; '.'
0000000000001541         db  0x00 ; '.'
0000000000001542         db  0x00 ; '.'
0000000000001543         db  0x00 ; '.'
0000000000001544         db  0x35 ; '5'
0000000000001545         db  0x00 ; '.'
0000000000001546         db  0x00 ; '.'
0000000000001547         db  0x00 ; '.'
0000000000001548         db  0x00 ; '.'
0000000000001549         db  0x00 ; '.'
000000000000154a         db  0x00 ; '.'
000000000000154b         db  0x00 ; '.'
000000000000154c         db  0x00 ; '.'
000000000000154d         db  0x00 ; '.'
000000000000154e         db  0x00 ; '.'
000000000000154f         db  0x00 ; '.'
0000000000001550         db  0xc8 ; '.'
0000000000001551         db  0xaf ; '.'
0000000000001552         db  0x20 ; ' '
0000000000001553         db  0x00 ; '.'
0000000000001554         db  0x00 ; '.'
0000000000001555         db  0x00 ; '.'
0000000000001556         db  0x00 ; '.'
0000000000001557         db  0x00 ; '.'
0000000000001558         db  0x07 ; '.'
0000000000001559         db  0x00 ; '.'
000000000000155a         db  0x00 ; '.'
000000000000155b         db  0x00 ; '.'
000000000000155c         db  0x37 ; '7'
000000000000155d         db  0x00 ; '.'
000000000000155e         db  0x00 ; '.'
000000000000155f         db  0x00 ; '.'
0000000000001560         db  0x00 ; '.'
0000000000001561         db  0x00 ; '.'
0000000000001562         db  0x00 ; '.'
0000000000001563         db  0x00 ; '.'
0000000000001564         db  0x00 ; '.'
0000000000001565         db  0x00 ; '.'
0000000000001566         db  0x00 ; '.'
0000000000001567         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x1568; 0x157f[ (23 bytes)
        ; File offset : [5480; 5503[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
0000000000001568         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
000000000000156c         mov        rax, qword [qword_20afe0]                   ; qword_20afe0
0000000000001573         test       rax, rax
0000000000001576         je         loc_157a

0000000000001578         call       rax

                     loc_157a:
000000000000157a         add        rsp, 0x8                                    ; CODE XREF=_init+14
000000000000157e         ret
                        ; endp
000000000000157f         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x1580; 0x18b0[ (816 bytes)
        ; File offset : [5504; 6320[ (816 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_1580:
0000000000001580         push       qword [qword_20ae30]                        ; Begin of unwind block (FDE at 0x8e34), qword_20ae30, CODE XREF=sub_1596+5
0000000000001586         jmp        qword [qword_20ae30+8]                      ; 0x20ae38
                        ; endp
000000000000158c         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
0000000000001590         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=base32_decode_alloc_ctx+167, base64_decode_alloc_ctx+167, quotearg_n_options+277, quotearg_free+55, quotearg_free+82, quotearg_free+120, xrealloc+40
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1596:
0000000000001596         push       0x0
000000000000159b         jmp        loc_1580


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
00000000000015a0         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=set_program_name+154, sub_4d40+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15a6:
00000000000015a6         push       0x1
00000000000015ab         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
00000000000015b0         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=main+2097, main+2233, main+2299, main+2340, main+2523, main+2567, main+2656, main+2698, main+2835, close_stdout+22, quotearg_n_options+28
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15b6:
00000000000015b6         push       0x2
00000000000015bb         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
00000000000015c0         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+956, usage+1149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15c6:
00000000000015c6         push       0x3
00000000000015cb         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
00000000000015d0         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15d6:
00000000000015d6         push       0x4
00000000000015db         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
00000000000015e0         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15e6:
00000000000015e6         push       0x5
00000000000015eb         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fread_unlocked:        // fread_unlocked
00000000000015f0         jmp        qword [fread_unlocked@GOT]                  ; fread_unlocked, fread_unlocked@GOT, CODE XREF=main+805, main+1838
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15f6:
00000000000015f6         push       0x6
00000000000015fb         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
0000000000001600         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+101
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1606:
0000000000001606         push       0x7
000000000000160b         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
0000000000001610         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1616:
0000000000001616         push       0x8
000000000000161b         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
0000000000001620         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+89
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1626:
0000000000001626         push       0x9
000000000000162b         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
0000000000001630         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+350, main+2089, main+2225, main+2291, main+2366, main+2479, main+2515, main+2559, main+2610, main+2648, main+2754
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1636:
0000000000001636         push       0xa
000000000000163b         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
0000000000001640         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1646:
0000000000001646         push       0xb
000000000000164b         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
0000000000001650         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=quotearg_buffer_restyled+343, sub_4d40+411, sub_4d40+1742, xstrdup+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1656:
0000000000001656         push       0xc
000000000000165b         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
0000000000001660         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=main+2786, z85_encode+307, base32_decode_ctx+681, base32_decode_alloc_ctx+186, base64_decode_ctx+680, base64_decode_alloc_ctx+186, sub_4d40+2739, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1666:
0000000000001666         push       0xd
000000000000166b         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
0000000000001670         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+145
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1676:
0000000000001676         push       0xe
000000000000167b         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
0000000000001680         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1686:
0000000000001686         push       0xf
000000000000168b         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strchr:        // strchr
0000000000001690         jmp        qword [strchr@GOT]                          ; strchr, strchr@GOT, CODE XREF=isz85+34, xstrtoumax+291, xstrtoumax+323, xstrtoumax+380
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1696:
0000000000001696         push       0x10
000000000000169b         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___overflow:        // __overflow
00000000000016a0         jmp        qword [__overflow@GOT]                      ; __overflow, __overflow@GOT, CODE XREF=main+2263, main+2799
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16a6:
00000000000016a6         push       0x11
00000000000016ab         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
00000000000016b0         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16b6:
00000000000016b6         push       0x12
00000000000016bb         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
00000000000016c0         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16c6:
00000000000016c6         push       0x13
00000000000016cb         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___assert_fail:        // __assert_fail
00000000000016d0         jmp        qword [__assert_fail@GOT]                   ; __assert_fail, __assert_fail@GOT, CODE XREF=base32hex_encode+113, xstrtoumax+927
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16d6:
00000000000016d6         push       0x14
00000000000016db         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___strtoul_internal:        // __strtoul_internal
00000000000016e0         jmp        qword [__strtoul_internal@GOT]              ; __strtoul_internal, __strtoul_internal@GOT, CODE XREF=xstrtoumax+142
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16e6:
00000000000016e6         push       0x15
00000000000016eb         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
00000000000016f0         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16f6:
00000000000016f6         push       0x16
00000000000016fb         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_posix_fadvise:        // posix_fadvise
0000000000001700         jmp        qword [posix_fadvise@GOT]                   ; posix_fadvise, posix_fadvise@GOT, CODE XREF=fdadvise, fadvise+22
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1706:
0000000000001706         push       0x17
000000000000170b         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memchr:        // memchr
0000000000001710         jmp        qword [memchr@GOT]                          ; memchr, memchr@GOT, CODE XREF=base32_decode_ctx+522, base64_decode_ctx+522
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1716:
0000000000001716         push       0x18
000000000000171b         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
0000000000001720         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=quotearg_buffer_restyled+410
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1726:
0000000000001726         push       0x19
000000000000172b         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
0000000000001730         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+157, usage+194, usage+231, usage+268, usage+305, usage+342, usage+379, usage+416, usage+453, usage+490, usage+527
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1736:
0000000000001736         push       0x1a
000000000000173b         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
0000000000001740         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1746:
0000000000001746         push       0x1b
000000000000174b         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcmp:        // strcmp
0000000000001750         jmp        qword [strcmp@GOT]                          ; strcmp, strcmp@GOT, CODE XREF=main+544, main+2333
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1756:
0000000000001756         push       0x1c
000000000000175b         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
0000000000001760         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=base64url_decode_ctx_wrapper+43, xmemdup+35
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1766:
0000000000001766         push       0x1d
000000000000176b         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
0000000000001770         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=fadvise+8, rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1776:
0000000000001776         push       0x1e
000000000000177b         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
0000000000001780         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=base32_encode_alloc+89, base32_decode_alloc_ctx+60, base64_encode_alloc+89, base64_decode_alloc_ctx+60, xmalloc+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1786:
0000000000001786         push       0x1f
000000000000178b         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
0000000000001790         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1796:
0000000000001796         push       0x20
000000000000179b         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
00000000000017a0         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17a6:
00000000000017a6         push       0x21
00000000000017ab         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
00000000000017b0         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17b6:
00000000000017b6         push       0x22
00000000000017bb         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite_unlocked:        // fwrite_unlocked
00000000000017c0         jmp        qword [fwrite_unlocked@GOT]                 ; fwrite_unlocked, fwrite_unlocked@GOT, CODE XREF=main+1570, main+2152, main+2197
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17c6:
00000000000017c6         push       0x23
00000000000017cb         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
00000000000017d0         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17d6:
00000000000017d6         push       0x24
00000000000017db         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
00000000000017e0         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+70, usage+931, usage+1124, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17e6:
00000000000017e6         push       0x25
00000000000017eb         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
00000000000017f0         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=usage+120, usage+919, usage+1012, usage+1073, usage+1112, usage+1215, emit_bug_reporting_address+37, emit_bug_reporting_address+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17f6:
00000000000017f6         push       0x26
00000000000017fb         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memmove:        // memmove
0000000000001800         jmp        qword [memmove@GOT]                         ; memmove, memmove@GOT, CODE XREF=main+906
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1806:
0000000000001806         push       0x27
000000000000180b         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
0000000000001810         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+2114, main+2250, main+2316, main+2383, main+2460, main+2496, main+2540, main+2584, main+2624, main+2673, main+2722
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1816:
0000000000001816         push       0x28
000000000000181b         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
0000000000001820         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1826:
0000000000001826         push       0x29
000000000000182b         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fopen:        // fopen
0000000000001830         jmp        qword [fopen@GOT]                           ; fopen, fopen@GOT, CODE XREF=main+569
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1836:
0000000000001836         push       0x2a
000000000000183b         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000001840         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1846:
0000000000001846         push       0x2b
000000000000184b         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000001850         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+265, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1856:
0000000000001856         push       0x2c
000000000000185b         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
0000000000001860         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1866:
0000000000001866         push       0x2d
000000000000186b         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
0000000000001870         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642, version_etc_arn+718, version_etc_arn+872
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1876:
0000000000001876         push       0x2e
000000000000187b         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
0000000000001880         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_4d40+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1886:
0000000000001886         push       0x2f
000000000000188b         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
0000000000001890         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_4d40+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1896:
0000000000001896         push       0x30
000000000000189b         jmp        0x1580
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
00000000000018a0         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=sub_4ae0+51, xstrtoumax+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18a6:
00000000000018a6         push       0x31
00000000000018ab         jmp        0x1580
                        ; endp


        ; Section .plt.got
        ; Range: [0x18b0; 0x18b8[ (8 bytes)
        ; File offset : [6320; 6328[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_20aff0:        // qword_20aff0
00000000000018b0         jmp        qword [qword_20aff0]                        ; qword, End of unwind block (FDE at 0x8e34), Begin of unwind block (FDE at 0x8e5c), qword_20aff0, CODE XREF=__do_global_dtors_aux+30
                        ; endp
00000000000018b6         align      8
00000000000018b8         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x8e5c)
00000000000018b9         db  0x00 ; '.'
00000000000018ba         db  0x00 ; '.'
00000000000018bb         db  0x00 ; '.'
00000000000018bc         db  0x00 ; '.'
00000000000018bd         db  0x00 ; '.'
00000000000018be         db  0x00 ; '.'
00000000000018bf         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x18c0; 0x72fe[ (23102 bytes)
        ; File offset : [6336; 29438[ (23102 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_58: int64_t, -88
        ;    var_68: int32_t, -104
        ;    var_70: int64_t, -112
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176


                     main:
00000000000018c0         push       r15                                         ; Begin of unwind block (FDE at 0x91f0), DATA XREF=_start+29
00000000000018c2         push       r14
00000000000018c4         xor        r14d, r14d
00000000000018c7         push       r13
00000000000018c9         push       r12
00000000000018cb         mov        r13d, 0x4c
00000000000018d1         push       rbp
00000000000018d2         push       rbx
00000000000018d3         mov        ebp, edi
00000000000018d5         mov        rbx, rsi
00000000000018d8         xor        r12d, r12d
00000000000018db         sub        rsp, 0x88
00000000000018e2         mov        rdi, qword [rsi]
00000000000018e5         mov        rax, qword [fs:0x28]
00000000000018ee         mov        qword [rsp+0xb8+var_40], rax
00000000000018f3         xor        eax, eax
00000000000018f5         call       set_program_name                            ; set_program_name
00000000000018fa         lea        rsi, qword [aWrittenBySSAnd+27]             ; argument "__locale" for method j_setlocale, 0x85c1
0000000000001901         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
0000000000001906         call       j_setlocale                                 ; setlocale
000000000000190b         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
0000000000001912         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
0000000000001919         call       j_bindtextdomain                            ; bindtextdomain
000000000000191e         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
0000000000001925         call       j_textdomain                                ; textdomain
000000000000192a         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
0000000000001931         call       atexit                                      ; atexit
0000000000001936         mov        byte [rsp+0xb8+var_98], 0x0

                     loc_193b:
000000000000193b         lea        rcx, qword [long_options]                   ; argument "__longopts" for method j_getopt_long, long_options, CODE XREF=main+290, main+310, main+325, main+392
0000000000001942         lea        rdx, qword [aSimonJosefsson+16]             ; argument "__shortopts" for method j_getopt_long, 0x7464
0000000000001949         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
000000000000194c         mov        rsi, rbx                                    ; argument "___argv" for method j_getopt_long
000000000000194f         mov        edi, ebp                                    ; argument "___argc" for method j_getopt_long
0000000000001951         call       j_getopt_long                               ; getopt_long
0000000000001956         cmp        eax, 0xffffffff
0000000000001959         je         loc_1a4d

000000000000195f         cmp        eax, 0x69
0000000000001962         je         loc_1a00

0000000000001968         jg         loc_19d0

000000000000196a         cmp        eax, 0xffffff7e
000000000000196f         je         loc_22dd

0000000000001975         cmp        eax, 0x64
0000000000001978         je         loc_19f0

000000000000197a         cmp        eax, 0xffffff7d
000000000000197f         je         loc_1990

                     loc_1981:
0000000000001981         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=main+277, main+285, main+2629
0000000000001986         call       usage                                       ; usage
000000000000198b         nop        dword [rax+rax]

                     loc_1990:
0000000000001990         sub        rsp, 0x8                                    ; CODE XREF=main+191
0000000000001994         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000199b         mov        rcx, qword [Version]                        ; Version
00000000000019a2         push       0x0
00000000000019a4         lea        r9, qword [aAssafGordon]                    ; "Assaf Gordon"
00000000000019ab         lea        r8, qword [aSimonJosefsson]                 ; "Simon Josefsson"
00000000000019b2         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x73f0
00000000000019b9         lea        rsi, qword [aBasenc]                        ; "basenc"
00000000000019c0         xor        eax, eax
00000000000019c2         call       version_etc                                 ; version_etc
00000000000019c7         xor        edi, edi                                    ; argument "__status" for method j_exit
00000000000019c9         call       j_exit                                      ; exit
                        ; endp
00000000000019ce         align      16

                     loc_19d0:
00000000000019d0         cmp        eax, 0x77                                   ; CODE XREF=main+168
00000000000019d3         je         loc_1a10

00000000000019d5         jl         loc_1981

00000000000019d7         lea        edx, dword [rax-0x80]
00000000000019da         cmp        edx, 0x7
00000000000019dd         ja         loc_1981

00000000000019df         mov        r14d, eax
00000000000019e2         jmp        loc_193b
00000000000019e7         align      16

                     loc_19f0:
00000000000019f0         mov        r12d, 0x1                                   ; CODE XREF=main+184
00000000000019f6         jmp        loc_193b
00000000000019fb         align      512

                     loc_1a00:
0000000000001a00         mov        byte [rsp+0xb8+var_98], 0x1                 ; CODE XREF=main+162
0000000000001a05         jmp        loc_193b
0000000000001a0a         align      16

                     loc_1a10:
0000000000001a10         lea        rsi, qword [aInvalidWrapSiz]                ; argument "msgid" for method j_dcgettext, "invalid wrap size", CODE XREF=main+275
0000000000001a17         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001a1c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001a1e         call       j_dcgettext                                 ; dcgettext
0000000000001a23         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000001a2a         lea        rcx, qword [aWrittenBySSAnd+27]             ; 0x85c1
0000000000001a31         mov        r8, rax
0000000000001a34         xor        r9d, r9d
0000000000001a37         mov        rdx, 0xffffffffffffffff
0000000000001a3e         xor        esi, esi
0000000000001a40         call       xdectoumax                                  ; xdectoumax
0000000000001a45         mov        r13, rax
0000000000001a48         jmp        loc_193b

                     loc_1a4d:
0000000000001a4d         add        r14d, 0xffffff80                            ; CODE XREF=main+153
0000000000001a51         cmp        r14d, 0x7
0000000000001a55         ja         loc_22e4

0000000000001a5b         lea        rdx, qword [switch_table_7c40]              ; switch_table_7c40
0000000000001a62         movsxd     rax, dword [rdx+r14*4]
0000000000001a66         add        rax, rdx
0000000000001a69         jmp        rax                                         ; switch statement using table at 0x7c40, with 8 cases, 0x1a6b,0x1c59,0x1ca4,0x1cef,0x1d3a,0x1d85,0x1dd0,0x1e1b

                     loc_1a6b:
0000000000001a6b         lea        rax, qword [base2_length]                   ; case 6, base2_length, CODE XREF=main+425
0000000000001a72         mov        qword [base_length], rax                    ; base_length
0000000000001a79         lea        rax, qword [isbase2]                        ; isbase2
0000000000001a80         mov        qword [isbase], rax                         ; isbase
0000000000001a87         lea        rax, qword [base2lsbf_encode]               ; base2lsbf_encode
0000000000001a8e         mov        qword [base_encode], rax                    ; base_encode
0000000000001a95         lea        rax, qword [base2_decode_ctx_init]          ; base2_decode_ctx_init
0000000000001a9c         mov        qword [base_decode_ctx_init], rax           ; base_decode_ctx_init
0000000000001aa3         lea        rax, qword [base2lsbf_decode_ctx]           ; base2lsbf_decode_ctx
0000000000001aaa         mov        qword [base_decode_ctx], rax                ; base_decode_ctx

                     loc_1ab1:
0000000000001ab1         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+991, main+1066, main+1141, main+1216, main+1291, main+1366, main+1441
0000000000001ab8         mov        edx, ebp
0000000000001aba         sub        edx, eax
0000000000001abc         sub        edx, 0x1
0000000000001abf         jg         loc_2367

0000000000001ac5         cmp        eax, ebp
0000000000001ac7         jge        loc_1f73

0000000000001acd         mov        rax, qword [rbx+rax*8]
0000000000001ad1         lea        rsi, qword [aLibs+10]                       ; argument "__s2" for method j_strcmp, 0x808a
0000000000001ad8         mov        rdi, rax                                    ; argument "__s1" for method j_strcmp
0000000000001adb         mov        qword [rsp+0xb8+var_80], rax
0000000000001ae0         call       j_strcmp                                    ; strcmp
0000000000001ae5         test       eax, eax
0000000000001ae7         je         loc_1f7f

0000000000001aed         mov        rdi, qword [rsp+0xb8+var_80]                ; argument "__filename" for method j_fopen
0000000000001af2         lea        rsi, qword [aExtraOperandS+17]              ; argument "__modes" for method j_fopen, 0x7490
0000000000001af9         call       j_fopen                                     ; fopen
0000000000001afe         test       rax, rax
0000000000001b01         mov        rbp, rax
0000000000001b04         je         loc_2336

                     loc_1b0a:
0000000000001b0a         mov        esi, 0x2                                    ; CODE XREF=main+1734
0000000000001b0f         mov        rdi, rbp
0000000000001b12         call       fadvise                                     ; fadvise
0000000000001b17         test       r12b, r12b
0000000000001b1a         je         loc_1f8b

0000000000001b20         mov        rax, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001b27         mov        edi, 0x1400
0000000000001b2c         mov        qword [rsp+0xb8+var_90], rax
0000000000001b31         call       qword [base_length]                         ; base_length, base_length
0000000000001b37         movsxd     rdi, eax
0000000000001b3a         call       xmalloc                                     ; xmalloc
0000000000001b3f         mov        edi, 0x1400
0000000000001b44         mov        r12, rax
0000000000001b47         call       xmalloc                                     ; xmalloc
0000000000001b4c         mov        qword [rsp+0xb8+var_88], rax
0000000000001b51         lea        rax, qword [rsp+0xb8+var_68]
0000000000001b56         mov        qword [rsp+0xb8+var_58], 0x0
0000000000001b5f         mov        qword [rsp+0xb8+var_A8], rax
0000000000001b64         mov        rdi, rax
0000000000001b67         call       qword [base_decode_ctx_init]                ; base_decode_ctx_init, base_decode_ctx_init
0000000000001b6d         lea        rax, qword [rsp+0xb8+var_70]
0000000000001b72         mov        qword [rsp+0xb8+var_A0], rax
0000000000001b77         nop        word [rax+rax]

                     loc_1b80:
0000000000001b80         xor        ebx, ebx                                    ; CODE XREF=main+1506
0000000000001b82         mov        qword [rsp+0xb8+var_B0], rbp
0000000000001b87         jmp        loc_1bc6
0000000000001b89         align      16

                     loc_1b90:
0000000000001b90         mov        rax, qword [rsp+0xb8+var_B0]                ; CODE XREF=main+823, main+835, main+840, main+916
0000000000001b95         add        rbx, r13
0000000000001b98         test       byte [rax], 0x20
0000000000001b9b         jne        loc_22b1

0000000000001ba1         mov        edi, 0x1400
0000000000001ba6         call       qword [base_length]                         ; base_length, base_length
0000000000001bac         cdqe
0000000000001bae         cmp        rbx, rax
0000000000001bb1         jae        loc_1e80

0000000000001bb7         mov        rax, qword [rsp+0xb8+var_B0]
0000000000001bbc         mov        eax, dword [rax]
0000000000001bbe         test       al, 0x10
0000000000001bc0         jne        loc_1f30

                     loc_1bc6:
0000000000001bc6         mov        edi, 0x1400                                 ; CODE XREF=main+711
0000000000001bcb         call       qword [base_length]                         ; base_length, base_length
0000000000001bd1         mov        rcx, qword [rsp+0xb8+var_B0]                ; argument "__stream" for method j_fread_unlocked
0000000000001bd6         movsxd     rdx, eax
0000000000001bd9         lea        rdi, qword [r12+rbx]                        ; argument "__ptr" for method j_fread_unlocked
0000000000001bdd         sub        rdx, rbx                                    ; argument "__n" for method j_fread_unlocked
0000000000001be0         mov        esi, 0x1                                    ; argument "__size" for method j_fread_unlocked
0000000000001be5         call       j_fread_unlocked                            ; fread_unlocked
0000000000001bea         cmp        byte [rsp+0xb8+var_98], 0x0
0000000000001bef         mov        r13, rax
0000000000001bf2         mov        qword [rsp+0xb8+var_70], rax
0000000000001bf7         je         loc_1b90

0000000000001bf9         xor        r14d, r14d
0000000000001bfc         nop        dword [rax]

                     loc_1c00:
0000000000001c00         test       r13, r13                                    ; CODE XREF=main+1460
0000000000001c03         je         loc_1b90

                     loc_1c05:
0000000000001c05         cmp        r14, r13                                    ; CODE XREF=main+914
0000000000001c08         jae        loc_1b90

0000000000001c0a         lea        rbp, qword [rbx+r14]
0000000000001c0e         lea        r15, qword [r12+rbp]
0000000000001c12         movsx      edi, byte [r15]
0000000000001c16         call       qword [isbase]                              ; isbase, isbase
0000000000001c1c         test       al, al
0000000000001c1e         mov        r13, qword [rsp+0xb8+var_70]
0000000000001c23         jne        loc_1e70

0000000000001c29         cmp        byte [r15], 0x3d
0000000000001c2d         je         loc_1e70

0000000000001c33         sub        r13, 0x1
0000000000001c37         lea        rsi, qword [r12+rbp+1]                      ; argument "__src" for method j_memmove
0000000000001c3c         mov        rdi, r15                                    ; argument "__dest" for method j_memmove
0000000000001c3f         mov        rdx, r13
0000000000001c42         mov        qword [rsp+0xb8+var_70], r13
0000000000001c47         sub        rdx, r14                                    ; argument "__n" for method j_memmove
0000000000001c4a         call       j_memmove                                   ; memmove
0000000000001c4f         test       r13, r13
0000000000001c52         jne        loc_1c05

0000000000001c54         jmp        loc_1b90

                     loc_1c59:
0000000000001c59         lea        rax, qword [base2_length]                   ; case 5, base2_length, CODE XREF=main+425
0000000000001c60         mov        qword [base_length], rax                    ; base_length
0000000000001c67         lea        rax, qword [isbase2]                        ; isbase2
0000000000001c6e         mov        qword [isbase], rax                         ; isbase
0000000000001c75         lea        rax, qword [base2msbf_encode]               ; base2msbf_encode
0000000000001c7c         mov        qword [base_encode], rax                    ; base_encode
0000000000001c83         lea        rax, qword [base2_decode_ctx_init]          ; base2_decode_ctx_init
0000000000001c8a         mov        qword [base_decode_ctx_init], rax           ; base_decode_ctx_init
0000000000001c91         lea        rax, qword [base2msbf_decode_ctx]           ; base2msbf_decode_ctx
0000000000001c98         mov        qword [base_decode_ctx], rax                ; base_decode_ctx
0000000000001c9f         jmp        loc_1ab1

                     loc_1ca4:
0000000000001ca4         lea        rax, qword [base64_length_wrapper]          ; case 1, base64_length_wrapper, CODE XREF=main+425
0000000000001cab         mov        qword [base_length], rax                    ; base_length
0000000000001cb2         lea        rax, qword [isbase64url]                    ; isbase64url
0000000000001cb9         mov        qword [isbase], rax                         ; isbase
0000000000001cc0         lea        rax, qword [base64url_encode]               ; base64url_encode
0000000000001cc7         mov        qword [base_encode], rax                    ; base_encode
0000000000001cce         lea        rax, qword [base64url_decode_ctx_init_wrapper] ; base64url_decode_ctx_init_wrapper
0000000000001cd5         mov        qword [base_decode_ctx_init], rax           ; base_decode_ctx_init
0000000000001cdc         lea        rax, qword [base64url_decode_ctx_wrapper]   ; base64url_decode_ctx_wrapper
0000000000001ce3         mov        qword [base_decode_ctx], rax                ; base_decode_ctx
0000000000001cea         jmp        loc_1ab1

                     loc_1cef:
0000000000001cef         lea        rax, qword [base64_length_wrapper]          ; case 0, base64_length_wrapper, CODE XREF=main+425
0000000000001cf6         mov        qword [base_length], rax                    ; base_length
0000000000001cfd         lea        rax, qword [isbase64]                       ; isbase64
0000000000001d04         mov        qword [isbase], rax                         ; isbase
0000000000001d0b         lea        rax, qword [base64_encode]                  ; base64_encode
0000000000001d12         mov        qword [base_encode], rax                    ; base_encode
0000000000001d19         lea        rax, qword [base64_decode_ctx_init_wrapper] ; base64_decode_ctx_init_wrapper
0000000000001d20         mov        qword [base_decode_ctx_init], rax           ; base_decode_ctx_init
0000000000001d27         lea        rax, qword [base64_decode_ctx_wrapper]      ; base64_decode_ctx_wrapper
0000000000001d2e         mov        qword [base_decode_ctx], rax                ; base_decode_ctx
0000000000001d35         jmp        loc_1ab1

                     loc_1d3a:
0000000000001d3a         lea        rax, qword [z85_length]                     ; case 7, z85_length, CODE XREF=main+425
0000000000001d41         mov        qword [base_length], rax                    ; base_length
0000000000001d48         lea        rax, qword [isz85]                          ; isz85
0000000000001d4f         mov        qword [isbase], rax                         ; isbase
0000000000001d56         lea        rax, qword [z85_encode]                     ; z85_encode
0000000000001d5d         mov        qword [base_encode], rax                    ; base_encode
0000000000001d64         lea        rax, qword [z85_decode_ctx_init]            ; z85_decode_ctx_init
0000000000001d6b         mov        qword [base_decode_ctx_init], rax           ; base_decode_ctx_init
0000000000001d72         lea        rax, qword [z85_decode_ctx]                 ; z85_decode_ctx
0000000000001d79         mov        qword [base_decode_ctx], rax                ; base_decode_ctx
0000000000001d80         jmp        loc_1ab1

                     loc_1d85:
0000000000001d85         lea        rax, qword [base32_length_wrapper]          ; case 3, base32_length_wrapper, CODE XREF=main+425
0000000000001d8c         mov        qword [base_length], rax                    ; base_length
0000000000001d93         lea        rax, qword [isbase32hex]                    ; isbase32hex
0000000000001d9a         mov        qword [isbase], rax                         ; isbase
0000000000001da1         lea        rax, qword [base32hex_encode]               ; base32hex_encode
0000000000001da8         mov        qword [base_encode], rax                    ; base_encode
0000000000001daf         lea        rax, qword [base32hex_decode_ctx_init_wrapper] ; base32hex_decode_ctx_init_wrapper
0000000000001db6         mov        qword [base_decode_ctx_init], rax           ; base_decode_ctx_init
0000000000001dbd         lea        rax, qword [base32hex_decode_ctx_wrapper]   ; base32hex_decode_ctx_wrapper
0000000000001dc4         mov        qword [base_decode_ctx], rax                ; base_decode_ctx
0000000000001dcb         jmp        loc_1ab1

                     loc_1dd0:
0000000000001dd0         lea        rax, qword [base32_length_wrapper]          ; case 2, base32_length_wrapper, CODE XREF=main+425
0000000000001dd7         mov        qword [base_length], rax                    ; base_length
0000000000001dde         lea        rax, qword [isbase32]                       ; isbase32
0000000000001de5         mov        qword [isbase], rax                         ; isbase
0000000000001dec         lea        rax, qword [base32_encode]                  ; base32_encode
0000000000001df3         mov        qword [base_encode], rax                    ; base_encode
0000000000001dfa         lea        rax, qword [base32_decode_ctx_init_wrapper] ; base32_decode_ctx_init_wrapper
0000000000001e01         mov        qword [base_decode_ctx_init], rax           ; base_decode_ctx_init
0000000000001e08         lea        rax, qword [base32_decode_ctx_wrapper]      ; base32_decode_ctx_wrapper
0000000000001e0f         mov        qword [base_decode_ctx], rax                ; base_decode_ctx
0000000000001e16         jmp        loc_1ab1

                     loc_1e1b:
0000000000001e1b         lea        rax, qword [base16_length]                  ; case 4, base16_length, CODE XREF=main+425
0000000000001e22         mov        qword [base_length], rax                    ; base_length
0000000000001e29         lea        rax, qword [isbase16]                       ; isbase16
0000000000001e30         mov        qword [isbase], rax                         ; isbase
0000000000001e37         lea        rax, qword [base16_encode]                  ; base16_encode
0000000000001e3e         mov        qword [base_encode], rax                    ; base_encode
0000000000001e45         lea        rax, qword [base16_decode_ctx_init]         ; base16_decode_ctx_init
0000000000001e4c         mov        qword [base_decode_ctx_init], rax           ; base_decode_ctx_init
0000000000001e53         lea        rax, qword [base16_decode_ctx]              ; base16_decode_ctx
0000000000001e5a         mov        qword [base_decode_ctx], rax                ; base_decode_ctx
0000000000001e61         jmp        loc_1ab1
0000000000001e66         align      16

                     loc_1e70:
0000000000001e70         add        r14, 0x1                                    ; CODE XREF=main+867, main+877
0000000000001e74         jmp        loc_1c00
0000000000001e79         align      128

                     loc_1e80:
0000000000001e80         mov        rbp, qword [rsp+0xb8+var_B0]                ; CODE XREF=main+753
0000000000001e85         mov        eax, dword [rbp]

                     loc_1e88:
0000000000001e88         xor        r15d, r15d                                  ; CODE XREF=main+1653
0000000000001e8b         mov        qword [rsp+0xb8+var_B0], rbx
0000000000001e90         mov        r13, qword [rsp+0xb8+var_88]
0000000000001e95         mov        ebx, r15d
0000000000001e98         mov        r15, qword [rsp+0xb8+var_90]
0000000000001e9d         jmp        loc_1f01
0000000000001e9f         align      32

                     loc_1ea0:
0000000000001ea0         test       ebx, ebx                                    ; CODE XREF=main+1603
0000000000001ea2         jne        loc_1b80

                     loc_1ea8:
0000000000001ea8         mov        rax, qword [base_decode_ctx]                ; base_decode_ctx, CODE XREF=main+1610
0000000000001eaf         mov        rdx, qword [rsp+0xb8+var_B0]
0000000000001eb4         mov        qword [rsp+0xb8+var_70], 0x1400

                     loc_1ebd:
0000000000001ebd         mov        r8, qword [rsp+0xb8+var_A0]                 ; CODE XREF=main+1638
0000000000001ec2         mov        rcx, r13
0000000000001ec5         mov        rsi, r12
0000000000001ec8         mov        rdi, qword [rsp+0xb8+var_A8]
0000000000001ecd         call       rax
0000000000001ecf         mov        rdx, qword [rsp+0xb8+var_70]                ; argument "__n" for method j_fwrite_unlocked
0000000000001ed4         mov        rcx, r15                                    ; argument "__stream" for method j_fwrite_unlocked
0000000000001ed7         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
0000000000001edc         mov        rdi, r13                                    ; argument "__ptr" for method j_fwrite_unlocked
0000000000001edf         mov        r14d, eax
0000000000001ee2         call       j_fwrite_unlocked                           ; fwrite_unlocked
0000000000001ee7         cmp        rax, qword [rsp+0xb8+var_70]
0000000000001eec         jb         loc_2285

0000000000001ef2         test       r14b, r14b
0000000000001ef5         je         loc_2261

0000000000001efb         mov        eax, dword [rbp]
0000000000001efe         add        ebx, 0x1

                     loc_1f01:
0000000000001f01         test       al, 0x10                                    ; CODE XREF=main+1501
0000000000001f03         je         loc_1ea0

0000000000001f05         cmp        ebx, 0x1
0000000000001f08         ja         loc_1f3a

0000000000001f0a         jne        loc_1ea8

0000000000001f0c         mov        eax, dword [rsp+0xb8+var_68]
0000000000001f10         test       eax, eax
0000000000001f12         je         loc_1f3a

0000000000001f14         mov        qword [rsp+0xb8+var_70], 0x1400
0000000000001f1d         mov        rax, qword [base_decode_ctx]                ; base_decode_ctx
0000000000001f24         xor        edx, edx
0000000000001f26         jmp        loc_1ebd
0000000000001f28         align      16

                     loc_1f30:
0000000000001f30         mov        rbp, qword [rsp+0xb8+var_B0]                ; CODE XREF=main+768
0000000000001f35         jmp        loc_1e88

                     loc_1f3a:
0000000000001f3a         mov        rdi, rbp                                    ; CODE XREF=main+1608, main+1618, main+2069
0000000000001f3d         call       rpl_fclose                                  ; rpl_fclose
0000000000001f42         add        eax, 0x1
0000000000001f45         je         loc_21d1

0000000000001f4b         xor        eax, eax
0000000000001f4d         mov        rcx, qword [rsp+0xb8+var_40]
0000000000001f52         xor        rcx, qword [fs:0x28]
0000000000001f5b         jne        loc_23a2

0000000000001f61         add        rsp, 0x88
0000000000001f68         pop        rbx
0000000000001f69         pop        rbp
0000000000001f6a         pop        r12
0000000000001f6c         pop        r13
0000000000001f6e         pop        r14
0000000000001f70         pop        r15
0000000000001f72         ret
                        ; endp

                     loc_1f73:
0000000000001f73         lea        rax, qword [aLibs+10]                       ; 0x808a, CODE XREF=main+519
0000000000001f7a         mov        qword [rsp+0xb8+var_80], rax

                     loc_1f7f:
0000000000001f7f         mov        rbp, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5, CODE XREF=main+551
0000000000001f86         jmp        loc_1b0a

                     loc_1f8b:
0000000000001f8b         mov        edi, 0x7800                                 ; CODE XREF=main+602
0000000000001f90         mov        r12, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001f97         xor        ebx, ebx
0000000000001f99         call       xmalloc                                     ; xmalloc
0000000000001f9e         mov        edi, 0x7800
0000000000001fa3         mov        qword [rsp+0xb8+var_A8], rax
0000000000001fa8         call       qword [base_length]                         ; base_length, base_length
0000000000001fae         movsxd     rdi, eax
0000000000001fb1         call       xmalloc                                     ; xmalloc
0000000000001fb6         mov        qword [rsp+0xb8+var_A0], r13
0000000000001fbb         mov        qword [rsp+0xb8+var_B0], rax

                     loc_1fc0:
0000000000001fc0         xor        r15d, r15d                                  ; CODE XREF=main+2042
0000000000001fc3         mov        r13, qword [rsp+0xb8+var_A8]
0000000000001fc8         jmp        loc_1fd9
0000000000001fca         align      16

                     loc_1fd0:
0000000000001fd0         cmp        r15, 0x77ff                                 ; CODE XREF=main+1851
0000000000001fd7         ja         loc_2006

                     loc_1fd9:
0000000000001fd9         lea        rdi, qword [r13+r15]                        ; argument "__ptr" for method j_fread_unlocked, CODE XREF=main+1800
0000000000001fde         mov        edx, 0x7800
0000000000001fe3         mov        rcx, rbp                                    ; argument "__stream" for method j_fread_unlocked
0000000000001fe6         sub        rdx, r15                                    ; argument "__n" for method j_fread_unlocked
0000000000001fe9         mov        esi, 0x1                                    ; argument "__size" for method j_fread_unlocked
0000000000001fee         call       j_fread_unlocked                            ; fread_unlocked
0000000000001ff3         add        r15, rax
0000000000001ff6         mov        eax, dword [rbp]
0000000000001ff9         test       al, 0x30
0000000000001ffb         je         loc_1fd0

0000000000001ffd         test       r15, r15
0000000000002000         je         loc_20c0

                     loc_2006:
0000000000002006         mov        r13, qword [base_encode]                    ; base_encode, CODE XREF=main+1815
000000000000200d         mov        edi, r15d
0000000000002010         call       qword [base_length]                         ; base_length, base_length
0000000000002016         mov        rdx, qword [rsp+0xb8+var_B0]
000000000000201b         movsxd     rcx, eax
000000000000201e         mov        rsi, r15
0000000000002021         mov        rdi, qword [rsp+0xb8+var_A8]
0000000000002026         call       r13
0000000000002029         mov        edi, r15d
000000000000202c         call       qword [base_length]                         ; base_length, base_length
0000000000002032         cmp        qword [rsp+0xb8+var_A0], 0x0
0000000000002038         movsxd     r13, eax
000000000000203b         je         loc_2141

0000000000002041         xor        r14d, r14d
0000000000002044         test       r13, r13
0000000000002047         je         loc_20ac

0000000000002049         mov        qword [rsp+0xb8+var_98], rbp
000000000000204e         mov        rbp, rbx
0000000000002051         mov        rbx, qword [rsp+0xb8+var_A0]
0000000000002056         mov        qword [rsp+0xb8+var_90], r15
000000000000205b         mov        r15, r13
000000000000205e         nop

                     loc_2060:
0000000000002060         mov        r13, rbx                                    ; CODE XREF=main+2013
0000000000002063         mov        rax, r15
0000000000002066         sub        r13, rbp
0000000000002069         sub        rax, r14
000000000000206c         cmp        r13, rax
000000000000206f         cmova      r13, rax
0000000000002073         test       r13, r13
0000000000002076         jne        loc_2110

000000000000207c         mov        rax, qword [r12+0x28]
0000000000002081         cmp        rax, qword [r12+0x30]
0000000000002086         jae        loc_218f

000000000000208c         lea        rdx, qword [rax+1]
0000000000002090         mov        qword [r12+0x28], rdx
0000000000002095         mov        byte [rax], 0xa

                     loc_2098:
0000000000002098         xor        ebp, ebp                                    ; CODE XREF=main+2271

                     loc_209a:
000000000000209a         cmp        r15, r14                                    ; CODE XREF=main+2172
000000000000209d         ja         loc_2060

000000000000209f         mov        rbx, rbp
00000000000020a2         mov        r15, qword [rsp+0xb8+var_90]
00000000000020a7         mov        rbp, qword [rsp+0xb8+var_98]

                     loc_20ac:
00000000000020ac         mov        eax, dword [rbp]                            ; CODE XREF=main+1927, main+2205
00000000000020af         test       al, 0x30
00000000000020b1         jne        loc_20c0

00000000000020b3         cmp        r15, 0x7800
00000000000020ba         je         loc_1fc0

                     loc_20c0:
00000000000020c0         mov        r13, qword [rsp+0xb8+var_A0]                ; CODE XREF=main+1856, main+2033
00000000000020c5         test       r13, r13
00000000000020c8         je         loc_20d3

00000000000020ca         test       rbx, rbx
00000000000020cd         jne        loc_2214

                     loc_20d3:
00000000000020d3         test       al, 0x20                                    ; CODE XREF=main+2056, main+2419
00000000000020d5         je         loc_1f3a

00000000000020db         lea        rsi, qword [aReadError]                     ; argument "msgid" for method j_dcgettext, "read error"
00000000000020e2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000020e7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000020e9         call       j_dcgettext                                 ; dcgettext
00000000000020ee         mov        rbx, rax
00000000000020f1         call       j___errno_location                          ; __errno_location
00000000000020f6         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000020f8         mov        rdx, rbx                                    ; argument "__format" for method j_error
00000000000020fb         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002100         xor        eax, eax
0000000000002102         call       j_error                                     ; error
0000000000002107         nop        word [rax+rax]

                     loc_2110:
0000000000002110         mov        rax, qword [rsp+0xb8+var_B0]                ; CODE XREF=main+1974
0000000000002115         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5
000000000000211c         mov        rdx, r13                                    ; argument "__n" for method j_fwrite_unlocked
000000000000211f         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
0000000000002124         lea        rdi, qword [rax+r14]                        ; argument "__ptr" for method j_fwrite_unlocked
0000000000002128         call       j_fwrite_unlocked                           ; fwrite_unlocked
000000000000212d         cmp        r13, rax
0000000000002130         ja         loc_230a

0000000000002136         add        rbp, r13
0000000000002139         add        r14, r13
000000000000213c         jmp        loc_209a

                     loc_2141:
0000000000002141         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5, CODE XREF=main+1915
0000000000002148         mov        rdi, qword [rsp+0xb8+var_B0]                ; argument "__ptr" for method j_fwrite_unlocked
000000000000214d         mov        rdx, r13                                    ; argument "__n" for method j_fwrite_unlocked
0000000000002150         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
0000000000002155         call       j_fwrite_unlocked                           ; fwrite_unlocked
000000000000215a         cmp        r13, rax
000000000000215d         jbe        loc_20ac

0000000000002163         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error"
000000000000216a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000216f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002171         call       j_dcgettext                                 ; dcgettext
0000000000002176         mov        rbx, rax
0000000000002179         call       j___errno_location                          ; __errno_location
000000000000217e         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002180         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000002183         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002188         xor        eax, eax
000000000000218a         call       j_error                                     ; error

                     loc_218f:
000000000000218f         mov        esi, 0xa                                    ; argument #2 for method j___overflow, CODE XREF=main+1990
0000000000002194         mov        rdi, r12                                    ; argument #1 for method j___overflow
0000000000002197         call       j___overflow                                ; __overflow
000000000000219c         add        eax, 0x1
000000000000219f         jne        loc_2098

00000000000021a5         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error"
00000000000021ac         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000021b1         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000021b3         call       j_dcgettext                                 ; dcgettext
00000000000021b8         mov        rbx, rax
00000000000021bb         call       j___errno_location                          ; __errno_location
00000000000021c0         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000021c2         mov        rdx, rbx                                    ; argument "__format" for method j_error
00000000000021c5         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000021ca         xor        eax, eax
00000000000021cc         call       j_error                                     ; error

                     loc_21d1:
00000000000021d1         mov        rdi, qword [rsp+0xb8+var_80]                ; argument "__s1" for method j_strcmp, CODE XREF=main+1669
00000000000021d6         lea        rsi, qword [aLibs+10]                       ; argument "__s2" for method j_strcmp, 0x808a
00000000000021dd         call       j_strcmp                                    ; strcmp
00000000000021e2         mov        ebp, eax
00000000000021e4         call       j___errno_location                          ; __errno_location
00000000000021e9         test       ebp, ebp
00000000000021eb         mov        rbx, rax
00000000000021ee         jne        loc_2238

00000000000021f0         lea        rsi, qword [aClosingStandar]                ; argument "msgid" for method j_dcgettext, "closing standard input"
00000000000021f7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000021fc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000021fe         call       j_dcgettext                                 ; dcgettext
0000000000002203         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
0000000000002205         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002208         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000220d         xor        eax, eax
000000000000220f         call       j_error                                     ; error

                     loc_2214:
0000000000002214         mov        rax, qword [r12+0x28]                       ; CODE XREF=main+2061
0000000000002219         cmp        rax, qword [r12+0x30]
000000000000221e         jae        loc_23a7

0000000000002224         lea        rdx, qword [rax+1]
0000000000002228         mov        qword [r12+0x28], rdx
000000000000222d         mov        byte [rax], 0xa

                     loc_2230:
0000000000002230         mov        eax, dword [rbp]                            ; CODE XREF=main+2807
0000000000002233         jmp        loc_20d3

                     loc_2238:
0000000000002238         mov        rdx, qword [rsp+0xb8+var_80]                ; CODE XREF=main+2350
000000000000223d         mov        esi, 0x3
0000000000002242         xor        edi, edi
0000000000002244         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000002249         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
000000000000224b         lea        rdx, qword [b64c+68]                        ; argument "__format" for method j_error, 0x8044
0000000000002252         mov        rcx, rax
0000000000002255         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000225a         xor        eax, eax
000000000000225c         call       j_error                                     ; error

                     loc_2261:
0000000000002261         lea        rsi, qword [aInvalidInput]                  ; argument "msgid" for method j_dcgettext, "invalid input", CODE XREF=main+1589
0000000000002268         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000226d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000226f         call       j_dcgettext                                 ; dcgettext
0000000000002274         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002276         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002279         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000227e         xor        eax, eax
0000000000002280         call       j_error                                     ; error

                     loc_2285:
0000000000002285         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=main+1580
000000000000228c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002291         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002293         call       j_dcgettext                                 ; dcgettext
0000000000002298         mov        rbx, rax
000000000000229b         call       j___errno_location                          ; __errno_location
00000000000022a0         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000022a2         mov        rdx, rbx                                    ; argument "__format" for method j_error
00000000000022a5         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000022aa         xor        eax, eax
00000000000022ac         call       j_error                                     ; error

                     loc_22b1:
00000000000022b1         lea        rsi, qword [aReadError]                     ; argument "msgid" for method j_dcgettext, "read error", CODE XREF=main+731
00000000000022b8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000022bd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000022bf         call       j_dcgettext                                 ; dcgettext
00000000000022c4         mov        rbx, rax
00000000000022c7         call       j___errno_location                          ; __errno_location
00000000000022cc         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000022ce         mov        rdx, rbx                                    ; argument "__format" for method j_error
00000000000022d1         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000022d6         xor        eax, eax
00000000000022d8         call       j_error                                     ; error

                     loc_22dd:
00000000000022dd         xor        edi, edi                                    ; argument #1 for method usage, CODE XREF=main+175
00000000000022df         call       usage                                       ; usage

                     loc_22e4:
00000000000022e4         lea        rsi, qword [aMissingEncodin]                ; argument "msgid" for method j_dcgettext, "missing encoding type", CODE XREF=main+405
00000000000022eb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000022ed         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000022f2         call       j_dcgettext                                 ; dcgettext
00000000000022f7         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000022f9         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000022fc         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000022fe         xor        eax, eax
0000000000002300         call       j_error                                     ; error
0000000000002305         jmp        loc_1981

                     loc_230a:
000000000000230a         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=main+2160
0000000000002311         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002316         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002318         call       j_dcgettext                                 ; dcgettext
000000000000231d         mov        rbx, rax
0000000000002320         call       j___errno_location                          ; __errno_location
0000000000002325         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002327         mov        rdx, rbx                                    ; argument "__format" for method j_error
000000000000232a         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000232f         xor        eax, eax
0000000000002331         call       j_error                                     ; error

                     loc_2336:
0000000000002336         mov        rdx, qword [rsp+0xb8+var_80]                ; CODE XREF=main+580
000000000000233b         mov        esi, 0x3
0000000000002340         xor        edi, edi
0000000000002342         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000002347         mov        rbx, rax
000000000000234a         call       j___errno_location                          ; __errno_location
000000000000234f         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002351         lea        rdx, qword [b64c+68]                        ; argument "__format" for method j_error, 0x8044
0000000000002358         mov        rcx, rbx
000000000000235b         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002360         xor        eax, eax
0000000000002362         call       j_error                                     ; error

                     loc_2367:
0000000000002367         mov        rdi, qword [rbx+rax*8+8]                    ; CODE XREF=main+511
000000000000236c         call       quote                                       ; quote
0000000000002371         lea        rsi, qword [aExtraOperandS]                 ; argument "msgid" for method j_dcgettext, "extra operand %s"
0000000000002378         mov        rbx, rax
000000000000237b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002380         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002382         call       j_dcgettext                                 ; dcgettext
0000000000002387         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002389         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000238c         mov        rcx, rbx
000000000000238f         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002391         xor        eax, eax
0000000000002393         call       j_error                                     ; error
0000000000002398         mov        edi, 0x1                                    ; argument #1 for method usage
000000000000239d         call       usage                                       ; usage

                     loc_23a2:
00000000000023a2         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=main+1691
                        ; endp

                     loc_23a7:
00000000000023a7         mov        esi, 0xa                                    ; argument #2 for method j___overflow, CODE XREF=main+2398
00000000000023ac         mov        rdi, r12                                    ; argument #1 for method j___overflow
00000000000023af         call       j___overflow                                ; __overflow
00000000000023b4         add        eax, 0x1
00000000000023b7         jne        loc_2230

00000000000023bd         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error"
00000000000023c4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000023c9         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000023cb         call       j_dcgettext                                 ; dcgettext
00000000000023d0         mov        rbx, rax
00000000000023d3         call       j___errno_location                          ; __errno_location
00000000000023d8         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000023da         mov        rdx, rbx                                    ; argument "__format" for method j_error
00000000000023dd         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000023e2         xor        eax, eax
00000000000023e4         call       j_error                                     ; error
00000000000023e9         nop        dword [rax]                                 ; End of unwind block (FDE at 0x91f0)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
00000000000023f0         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x8e04)
00000000000023f2         mov        r9, rdx
00000000000023f5         pop        rsi
00000000000023f6         mov        rdx, rsp
00000000000023f9         and        rsp, 0xfffffffffffffff0
00000000000023fd         push       rax
00000000000023fe         push       rsp
00000000000023ff         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
0000000000002406         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
000000000000240d         lea        rdi, qword [main]                           ; main
0000000000002414         call       qword [qword_20afd0+8]                      ; 0x20afd8
000000000000241a         hlt
                        ; endp
000000000000241b         align      32                                          ; End of unwind block (FDE at 0x8e04)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000002420         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
0000000000002427         push       rbp
0000000000002428         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
000000000000242f         cmp        rax, rdi
0000000000002432         mov        rbp, rsp
0000000000002435         je         loc_2450

0000000000002437         mov        rax, qword [qword_20afd0]                   ; qword_20afd0
000000000000243e         test       rax, rax
0000000000002441         je         loc_2450

0000000000002443         pop        rbp
0000000000002444         jmp        rax
                        ; endp
0000000000002446         align      16

                     loc_2450:
0000000000002450         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
0000000000002451         ret
                        ; endp
0000000000002452         align      32

                     register_tm_clones:
0000000000002460         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
0000000000002467         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
000000000000246e         push       rbp
000000000000246f         sub        rsi, rdi
0000000000002472         mov        rbp, rsp
0000000000002475         sar        rsi, 0x3
0000000000002479         mov        rax, rsi
000000000000247c         shr        rax, 0x3f
0000000000002480         add        rsi, rax
0000000000002483         sar        rsi, 0x1
0000000000002486         je         loc_24a0

0000000000002488         mov        rax, qword [qword_20afe8]                   ; qword_20afe8
000000000000248f         test       rax, rax
0000000000002492         je         loc_24a0

0000000000002494         pop        rbp
0000000000002495         jmp        rax
                        ; endp
0000000000002497         align      32

                     loc_24a0:
00000000000024a0         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
00000000000024a1         ret
                        ; endp
00000000000024a2         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
00000000000024b0         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
00000000000024b7         jne        loc_24e8

00000000000024b9         cmp        qword [qword_20aff0], 0x0                   ; qword_20aff0
00000000000024c1         push       rbp
00000000000024c2         mov        rbp, rsp
00000000000024c5         je         loc_24d3

00000000000024c7         mov        rdi, qword [__dso_handle]                   ; __dso_handle
00000000000024ce         call       j_qword_20aff0                              ; qword_20aff0

                     loc_24d3:
00000000000024d3         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
00000000000024d8         mov        byte [completed.7697], 0x1                  ; completed.7697
00000000000024df         pop        rbp
00000000000024e0         ret
                        ; endp
00000000000024e1         align      8

                     loc_24e8:
00000000000024e8         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
00000000000024ea         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
00000000000024f0         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
00000000000024f1         mov        rbp, rsp
00000000000024f4         pop        rbp
00000000000024f5         jmp        register_tm_clones                          ; register_tm_clones
00000000000024fa         align      256


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base64_length_wrapper:
0000000000002500         add        edi, 0x2                                    ; Begin of unwind block (FDE at 0x8e74), DATA XREF=main+996, main+1071
0000000000002503         mov        edx, 0x55555556
0000000000002508         mov        eax, edi
000000000000250a         sar        edi, 0x1f
000000000000250d         imul       edx
000000000000250f         sub        edx, edi
0000000000002511         lea        eax, dword [rdx*4]
0000000000002518         ret
                        ; endp
0000000000002519         align      32                                          ; End of unwind block (FDE at 0x8e74)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base32_length_wrapper:
0000000000002520         add        edi, 0x4                                    ; Begin of unwind block (FDE at 0x8e88), DATA XREF=main+1221, main+1296
0000000000002523         mov        edx, 0x66666667
0000000000002528         mov        eax, edi
000000000000252a         sar        edi, 0x1f
000000000000252d         imul       edx
000000000000252f         sar        edx, 0x1
0000000000002531         sub        edx, edi
0000000000002533         lea        eax, dword [rdx*8]
000000000000253a         ret
                        ; endp
000000000000253b         align      64                                          ; End of unwind block (FDE at 0x8e88)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     isbase32hex:
0000000000002540         lea        eax, dword [rdi-0x30]                       ; Begin of unwind block (FDE at 0x8e9c), DATA XREF=main+1235
0000000000002543         cmp        al, 0x9
0000000000002545         setbe      al
0000000000002548         sub        edi, 0x41
000000000000254b         cmp        dil, 0x15
000000000000254f         setbe      dl
0000000000002552         or         eax, edx
0000000000002554         ret
                        ; endp
0000000000002555         align      32                                          ; End of unwind block (FDE at 0x8e9c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     isbase16:
0000000000002560         lea        eax, dword [rdi-0x30]                       ; Begin of unwind block (FDE at 0x8eb0), DATA XREF=main+1385
0000000000002563         cmp        al, 0x9
0000000000002565         setbe      al
0000000000002568         sub        edi, 0x41
000000000000256b         cmp        dil, 0x5
000000000000256f         setbe      dl
0000000000002572         or         eax, edx
0000000000002574         ret
                        ; endp
0000000000002575         align      128                                         ; End of unwind block (FDE at 0x8eb0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base16_length:
0000000000002580         lea        eax, dword [rdi+rdi]                        ; Begin of unwind block (FDE at 0x8ec4), DATA XREF=main+1371
0000000000002583         ret
                        ; endp
0000000000002584         align      16                                          ; End of unwind block (FDE at 0x8ec4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base16_encode:
0000000000002590         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x8ed8), DATA XREF=main+1399
0000000000002593         je         loc_25cb

0000000000002595         lea        r8, qword [base16]                          ; "0123456789ABCDEF"
000000000000259c         add        rsi, rdi
000000000000259f         nop

                     loc_25a0:
00000000000025a0         movzx      eax, byte [rdi]                             ; CODE XREF=base16_encode+57
00000000000025a3         add        rdi, 0x1
00000000000025a7         add        rdx, 0x2
00000000000025ab         mov        ecx, eax
00000000000025ad         and        eax, 0xf
00000000000025b0         shr        cl, 0x4
00000000000025b3         movzx      eax, byte [r8+rax]
00000000000025b8         and        ecx, 0xf
00000000000025bb         movzx      ecx, byte [r8+rcx]
00000000000025c0         mov        byte [rdx-2], cl
00000000000025c3         cmp        rdi, rsi
00000000000025c6         mov        byte [rdx-1], al
00000000000025c9         jne        loc_25a0

                     loc_25cb:
00000000000025cb         ret                                                    ; CODE XREF=base16_encode+3
                        ; endp
00000000000025cd         align      16                                          ; End of unwind block (FDE at 0x8ed8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     z85_length:
00000000000025d0         lea        edx, dword [rdi+rdi*4]                      ; Begin of unwind block (FDE at 0x8eec), DATA XREF=main+1146
00000000000025d3         lea        eax, dword [rdx+3]
00000000000025d6         test       edx, edx
00000000000025d8         cmovns     eax, edx
00000000000025db         sar        eax, 0x2
00000000000025de         ret
                        ; endp
00000000000025df         align      32                                          ; End of unwind block (FDE at 0x8eec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     isbase2:
00000000000025e0         sub        edi, 0x30                                   ; Begin of unwind block (FDE at 0x8f00), DATA XREF=main+441, main+935
00000000000025e3         cmp        dil, 0x1
00000000000025e7         setbe      al
00000000000025ea         ret
                        ; endp
00000000000025eb         align      16                                          ; End of unwind block (FDE at 0x8f00)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base2_length:
00000000000025f0         lea        eax, dword [rdi*8]                          ; Begin of unwind block (FDE at 0x8f14), DATA XREF=main+427, main+921
00000000000025f7         ret
                        ; endp
00000000000025f8         align      512                                         ; End of unwind block (FDE at 0x8f14)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base2msbf_encode:
0000000000002600         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x8f28), DATA XREF=main+949
0000000000002603         je         loc_2642

0000000000002605         lea        r8, qword [rdi+rsi]
0000000000002609         nop        dword [rax]

                     loc_2610:
0000000000002610         movzx      ecx, byte [rdi]                             ; CODE XREF=base2msbf_encode+64
0000000000002613         lea        rsi, qword [rdx+8]
0000000000002617         nop        word [rax+rax]

                     loc_2620:
0000000000002620         mov        eax, ecx                                    ; CODE XREF=base2msbf_encode+52
0000000000002622         add        rdx, 0x1
0000000000002626         add        ecx, ecx
0000000000002628         shr        al, 0x7
000000000000262b         add        eax, 0x30
000000000000262e         cmp        rsi, rdx
0000000000002631         mov        byte [rdx-1], al
0000000000002634         jne        loc_2620

0000000000002636         add        rdi, 0x1
000000000000263a         mov        rdx, rsi
000000000000263d         cmp        r8, rdi
0000000000002640         jne        loc_2610

                     loc_2642:
0000000000002642         ret                                                    ; CODE XREF=base2msbf_encode+3
                        ; endp
0000000000002644         align      16                                          ; End of unwind block (FDE at 0x8f28)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base2lsbf_encode:
0000000000002650         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x8f3c), DATA XREF=main+455
0000000000002653         je         loc_2692

0000000000002655         lea        r8, qword [rdi+rsi]
0000000000002659         nop        dword [rax]

                     loc_2660:
0000000000002660         movzx      ecx, byte [rdi]                             ; CODE XREF=base2lsbf_encode+64
0000000000002663         lea        rsi, qword [rdx+8]
0000000000002667         nop        word [rax+rax]

                     loc_2670:
0000000000002670         mov        eax, ecx                                    ; CODE XREF=base2lsbf_encode+52
0000000000002672         add        rdx, 0x1
0000000000002676         shr        cl, 0x1
0000000000002678         and        eax, 0x1
000000000000267b         add        eax, 0x30
000000000000267e         cmp        rsi, rdx
0000000000002681         mov        byte [rdx-1], al
0000000000002684         jne        loc_2670

0000000000002686         add        rdi, 0x1
000000000000268a         mov        rdx, rsi
000000000000268d         cmp        r8, rdi
0000000000002690         jne        loc_2660

                     loc_2692:
0000000000002692         ret                                                    ; CODE XREF=base2lsbf_encode+3
                        ; endp
0000000000002694         align      32                                          ; End of unwind block (FDE at 0x8f3c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     isbase64url:
00000000000026a0         cmp        dil, 0x2d                                   ; Begin of unwind block (FDE at 0x8f50), DATA XREF=main+1010
00000000000026a4         sete       al
00000000000026a7         cmp        dil, 0x5f
00000000000026ab         sete       dl
00000000000026ae         or         al, dl
00000000000026b0         jne        loc_26c8

00000000000026b2         mov        edx, edi
00000000000026b4         and        edx, 0xfffffffb
00000000000026b7         cmp        dl, 0x2b
00000000000026ba         je         loc_26c8

00000000000026bc         movsx      edi, dil
00000000000026c0         jmp        isbase64                                    ; isbase64
00000000000026c5         align      8

                     loc_26c8:
00000000000026c8         ret                                                    ; CODE XREF=isbase64url+16, isbase64url+26
                        ; endp
00000000000026ca         align      16                                          ; End of unwind block (FDE at 0x8f50)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base64url_encode:
00000000000026d0         push       rbp                                         ; Begin of unwind block (FDE at 0x8f64), DATA XREF=main+1024
00000000000026d1         push       rbx
00000000000026d2         mov        rbp, rcx
00000000000026d5         mov        rbx, rdx
00000000000026d8         sub        rsp, 0x8
00000000000026dc         call       base64_encode                               ; base64_encode
00000000000026e1         test       rbp, rbp
00000000000026e4         je         loc_2713

00000000000026e6         lea        rcx, qword [rbx+rbp]
00000000000026ea         jmp        loc_2700
00000000000026ec         align      16

                     loc_26f0:
00000000000026f0         cmp        al, 0x2f                                    ; CODE XREF=base64url_encode+53
00000000000026f2         jne        loc_26f7

00000000000026f4         mov        byte [rbx], 0x5f

                     loc_26f7:
00000000000026f7         add        rbx, 0x1                                    ; CODE XREF=base64url_encode+34
00000000000026fb         cmp        rbx, rcx
00000000000026fe         je         loc_2713

                     loc_2700:
0000000000002700         movzx      eax, byte [rbx]                             ; CODE XREF=base64url_encode+26, base64url_encode+65
0000000000002703         cmp        al, 0x2b
0000000000002705         jne        loc_26f0

0000000000002707         mov        byte [rbx], 0x2d
000000000000270a         add        rbx, 0x1
000000000000270e         cmp        rbx, rcx
0000000000002711         jne        loc_2700

                     loc_2713:
0000000000002713         add        rsp, 0x8                                    ; CODE XREF=base64url_encode+20, base64url_encode+46
0000000000002717         pop        rbx
0000000000002718         pop        rbp
0000000000002719         ret
                        ; endp
000000000000271a         align      32                                          ; End of unwind block (FDE at 0x8f64)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     z85_decode_ctx_init:
0000000000002720         push       rbx                                         ; Begin of unwind block (FDE at 0x8f8c), DATA XREF=main+1188
0000000000002721         mov        rbx, rdi
0000000000002724         mov        qword [rdi+0x18], 0x1400
000000000000272c         mov        edi, 0x1400
0000000000002731         call       xmalloc                                     ; xmalloc
0000000000002736         mov        qword [rbx], 0x1
000000000000273d         mov        qword [rbx+0x10], rax
0000000000002741         pop        rbx
0000000000002742         ret
                        ; endp
0000000000002743         align      16                                          ; End of unwind block (FDE at 0x8f8c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base2_decode_ctx_init:
0000000000002750         push       rbx                                         ; Begin of unwind block (FDE at 0x8fa8), DATA XREF=main+469, main+963
0000000000002751         mov        rbx, rdi
0000000000002754         mov        qword [rdi+0x18], 0x1400
000000000000275c         mov        edi, 0x1400
0000000000002761         call       xmalloc                                     ; xmalloc
0000000000002766         mov        qword [rbx], 0x0
000000000000276d         mov        qword [rbx+0x10], rax
0000000000002771         pop        rbx
0000000000002772         ret
                        ; endp
0000000000002773         align      128                                         ; End of unwind block (FDE at 0x8fa8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base16_decode_ctx_init:
0000000000002780         push       rbx                                         ; Begin of unwind block (FDE at 0x8fc4), DATA XREF=main+1413
0000000000002781         mov        rbx, rdi
0000000000002784         mov        qword [rdi+0x18], 0x1400
000000000000278c         mov        edi, 0x1400
0000000000002791         call       xmalloc                                     ; xmalloc
0000000000002796         mov        byte [rbx+5], 0x0
000000000000279a         mov        qword [rbx+0x10], rax
000000000000279e         mov        dword [rbx], 0x1
00000000000027a4         pop        rbx
00000000000027a5         ret
                        ; endp
00000000000027a6         align      16                                          ; End of unwind block (FDE at 0x8fc4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     isz85:
00000000000027b0         cmp        dil, 0x5a                                   ; Begin of unwind block (FDE at 0x8fe0), DATA XREF=main+1160
00000000000027b4         jg         loc_27e8

00000000000027b6         cmp        dil, 0x41
00000000000027ba         jge        loc_27ef

00000000000027bc         lea        eax, dword [rdi-0x30]
00000000000027bf         cmp        al, 0x9
00000000000027c1         jbe        loc_27ef

                     loc_27c3:
00000000000027c3         movsx      esi, dil                                    ; argument "__c" for method j_strchr, CODE XREF=isz85+61
00000000000027c7         lea        rdi, qword [_IO_stdin_used+4]               ; argument "__s" for method j_strchr, 0x7324
00000000000027ce         sub        rsp, 0x8
00000000000027d2         call       j_strchr                                    ; strchr
00000000000027d7         test       rax, rax
00000000000027da         setne      al
00000000000027dd         add        rsp, 0x8
00000000000027e1         ret
                        ; endp
00000000000027e2         align      8

                     loc_27e8:
00000000000027e8         lea        eax, dword [rdi-0x61]                       ; CODE XREF=isz85+4
00000000000027eb         cmp        al, 0x19
00000000000027ed         ja         loc_27c3

                     loc_27ef:
00000000000027ef         mov        eax, 0x1                                    ; CODE XREF=isz85+10, isz85+17
00000000000027f4         ret
                        ; endp
00000000000027f5         align      2048                                        ; End of unwind block (FDE at 0x8fe0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base32_decode_ctx_wrapper:
0000000000002800         push       rbx                                         ; Begin of unwind block (FDE at 0x8ff8), DATA XREF=main+1352
0000000000002801         mov        rbx, rdi
0000000000002804         lea        rdi, qword [rdi+4]
0000000000002808         call       base32_decode_ctx                           ; base32_decode_ctx
000000000000280d         mov        edx, dword [rbx+4]
0000000000002810         mov        dword [rbx], edx
0000000000002812         pop        rbx
0000000000002813         ret
                        ; endp
0000000000002814         align      32                                          ; End of unwind block (FDE at 0x8ff8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base32hex_decode_ctx_init_wrapper:
0000000000002820         push       rbx                                         ; Begin of unwind block (FDE at 0x9014), DATA XREF=main+1263
0000000000002821         mov        rbx, rdi
0000000000002824         lea        rdi, qword [rdi+4]
0000000000002828         call       base32_decode_ctx_init                      ; base32_decode_ctx_init
000000000000282d         mov        qword [rbx+0x18], 0x1400
0000000000002835         mov        edi, 0x1400
000000000000283a         call       xmalloc                                     ; xmalloc
000000000000283f         mov        qword [rbx+0x10], rax
0000000000002843         pop        rbx
0000000000002844         ret
                        ; endp
0000000000002845         align      16                                          ; End of unwind block (FDE at 0x9014)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base32_decode_ctx_init_wrapper:
0000000000002850         add        rdi, 0x4                                    ; Begin of unwind block (FDE at 0x9030), DATA XREF=main+1338
0000000000002854         jmp        base32_decode_ctx_init                      ; base32_decode_ctx_init
0000000000002859         align      32                                          ; End of unwind block (FDE at 0x9030)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base64_decode_ctx_wrapper:
0000000000002860         push       rbx                                         ; Begin of unwind block (FDE at 0x9044), DATA XREF=main+1127
0000000000002861         mov        rbx, rdi
0000000000002864         lea        rdi, qword [rdi+4]
0000000000002868         call       base64_decode_ctx                           ; base64_decode_ctx
000000000000286d         mov        edx, dword [rbx+4]
0000000000002870         mov        dword [rbx], edx
0000000000002872         pop        rbx
0000000000002873         ret
                        ; endp
0000000000002874         align      128                                         ; End of unwind block (FDE at 0x9044)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base64url_decode_ctx_init_wrapper:
0000000000002880         push       rbx                                         ; Begin of unwind block (FDE at 0x9060), DATA XREF=main+1038
0000000000002881         mov        rbx, rdi
0000000000002884         lea        rdi, qword [rdi+4]
0000000000002888         call       base64_decode_ctx_init                      ; base64_decode_ctx_init
000000000000288d         mov        qword [rbx+0x18], 0x1400
0000000000002895         mov        edi, 0x1400
000000000000289a         call       xmalloc                                     ; xmalloc
000000000000289f         mov        qword [rbx+0x10], rax
00000000000028a3         pop        rbx
00000000000028a4         ret
                        ; endp
00000000000028a5         align      16                                          ; End of unwind block (FDE at 0x9060)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base64_decode_ctx_init_wrapper:
00000000000028b0         add        rdi, 0x4                                    ; Begin of unwind block (FDE at 0x907c), DATA XREF=main+1113
00000000000028b4         jmp        base64_decode_ctx_init                      ; base64_decode_ctx_init
                        ; endp
00000000000028b9         align      64                                          ; End of unwind block (FDE at 0x907c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base16_decode_ctx:
00000000000028c0         test       rdx, rdx                                    ; Begin of unwind block (FDE at 0x9090), DATA XREF=main+1427
00000000000028c3         mov        qword [r8], 0x0
00000000000028ca         je         loc_2940

00000000000028cc         lea        r9, qword [rsi+1]
00000000000028d0         lea        r10, qword [rsi+rdx+1]
00000000000028d5         jmp        loc_290e
00000000000028d7         align      32

                     loc_28e0:
00000000000028e0         movzx      edx, byte [rdi+5]                           ; CODE XREF=base16_decode_ctx+93
00000000000028e4         sub        eax, 0x37
00000000000028e7         test       dl, dl
00000000000028e9         je         loc_2932

                     loc_28eb:
00000000000028eb         movzx      esi, byte [rdi+4]                           ; CODE XREF=base16_decode_ctx+112
00000000000028ef         add        qword [r8], 0x1
00000000000028f3         add        rcx, 0x1
00000000000028f7         shl        esi, 0x4
00000000000028fa         add        eax, esi
00000000000028fc         mov        byte [rcx-1], al

                     loc_28ff:
00000000000028ff         xor        edx, 0x1                                    ; CODE XREF=base16_decode_ctx+117
0000000000002902         mov        byte [rdi+5], dl

                     loc_2905:
0000000000002905         add        r9, 0x1                                     ; CODE XREF=base16_decode_ctx+85
0000000000002909         cmp        r10, r9
000000000000290c         je         loc_2950

                     loc_290e:
000000000000290e         movsx      eax, byte [r9-1]                            ; CODE XREF=base16_decode_ctx+21
0000000000002913         cmp        al, 0xa
0000000000002915         je         loc_2905

0000000000002917         lea        edx, dword [rax-0x41]
000000000000291a         cmp        dl, 0x5
000000000000291d         jbe        loc_28e0

000000000000291f         lea        edx, dword [rax-0x30]
0000000000002922         cmp        dl, 0x9
0000000000002925         ja         loc_2960

0000000000002927         movzx      edx, byte [rdi+5]
000000000000292b         sub        eax, 0x30
000000000000292e         test       dl, dl
0000000000002930         jne        loc_28eb

                     loc_2932:
0000000000002932         mov        byte [rdi+4], al                            ; CODE XREF=base16_decode_ctx+41
0000000000002935         jmp        loc_28ff
0000000000002937         align      64

                     loc_2940:
0000000000002940         movzx      eax, byte [rdi+5]                           ; CODE XREF=base16_decode_ctx+10
0000000000002944         xor        eax, 0x1
0000000000002947         ret
                        ; endp
0000000000002948         align      16

                     loc_2950:
0000000000002950         mov        eax, 0x1                                    ; CODE XREF=base16_decode_ctx+76
0000000000002955         ret
                        ; endp
0000000000002956         align      32

                     loc_2960:
0000000000002960         xor        eax, eax                                    ; CODE XREF=base16_decode_ctx+101
0000000000002962         ret
                        ; endp
0000000000002963         align      16                                          ; End of unwind block (FDE at 0x9090)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     z85_decode_ctx:
0000000000002970         test       rdx, rdx                                    ; Begin of unwind block (FDE at 0x90a4), DATA XREF=main+1202
0000000000002973         mov        qword [r8], 0x0
000000000000297a         jne        loc_2988

000000000000297c         mov        eax, dword [rdi+4]
000000000000297f         test       eax, eax
0000000000002981         setle      al
0000000000002984         ret
                        ; endp
0000000000002985         align      8

                     loc_2988:
0000000000002988         lea        r9, qword [rsi+1]                           ; CODE XREF=z85_decode_ctx+10
000000000000298c         lea        r10, qword [z85_decoding]                   ; z85_decoding
0000000000002993         lea        rsi, qword [rsi+rdx+1]
0000000000002998         jmp        loc_29ad
000000000000299a         align      32

                     loc_29a0:
00000000000029a0         add        r9, 0x1                                     ; CODE XREF=z85_decode_ctx+68, z85_decode_ctx+121
00000000000029a4         cmp        r9, rsi
00000000000029a7         je         loc_2a6f

                     loc_29ad:
00000000000029ad         movzx      eax, byte [r9-1]                            ; CODE XREF=z85_decode_ctx+40, z85_decode_ctx+249
00000000000029b2         cmp        al, 0xa
00000000000029b4         je         loc_29a0

00000000000029b6         lea        edx, dword [rax-0x21]
00000000000029b9         cmp        dl, 0x5c
00000000000029bc         ja         loc_2a80

00000000000029c2         sub        eax, 0x21
00000000000029c5         cdqe
00000000000029c7         movzx      edx, byte [r10+rax]
00000000000029cc         cmp        dl, 0xff
00000000000029cf         je         loc_2a80

00000000000029d5         movsxd     rax, dword [rdi+4]
00000000000029d9         lea        r11d, dword [rax+1]
00000000000029dd         cmp        r11d, 0x5
00000000000029e1         mov        dword [rdi+4], r11d
00000000000029e5         mov        byte [rdi+rax+8], dl
00000000000029e9         jne        loc_29a0

00000000000029eb         movzx      eax, byte [rdi+9]
00000000000029ef         movzx      r11d, byte [rdi+0xa]
00000000000029f4         movzx      edx, byte [rdi+8]
00000000000029f8         imul       r11d, r11d, 0x1c39
00000000000029ff         imul       eax, eax, 0x95eed
0000000000002a05         add        eax, r11d
0000000000002a08         movzx      r11d, byte [rdi+0xb]
0000000000002a0d         imul       r11d, r11d, 0x55
0000000000002a11         add        eax, r11d
0000000000002a14         movzx      r11d, byte [rdi+0xc]
0000000000002a19         add        r11d, eax
0000000000002a1c         lea        eax, dword [rdx-0x53]
0000000000002a1f         cmp        al, 0x1
0000000000002a21         jbe        loc_2a80

0000000000002a23         cmp        dl, 0x52
0000000000002a26         jne        loc_2a31

0000000000002a28         cmp        r11d, 0xdd7f4d
0000000000002a2f         jg         loc_2a80

                     loc_2a31:
0000000000002a31         movzx      eax, dl                                     ; CODE XREF=z85_decode_ctx+182
0000000000002a34         add        r9, 0x1
0000000000002a38         add        qword [r8], 0x4
0000000000002a3c         imul       eax, eax, 0x31c84b1
0000000000002a42         add        rcx, 0x4
0000000000002a46         mov        dword [rdi+4], 0x0
0000000000002a4d         add        eax, r11d
0000000000002a50         mov        edx, eax
0000000000002a52         mov        byte [rcx-2], ah
0000000000002a55         mov        byte [rcx-1], al
0000000000002a58         shr        edx, 0x18
0000000000002a5b         mov        byte [rcx-4], dl
0000000000002a5e         mov        edx, eax
0000000000002a60         shr        edx, 0x10
0000000000002a63         mov        byte [rcx-3], dl
0000000000002a66         cmp        r9, rsi
0000000000002a69         jne        loc_29ad

                     loc_2a6f:
0000000000002a6f         mov        eax, dword [rdi+4]                          ; CODE XREF=z85_decode_ctx+55
0000000000002a72         mov        dword [rdi], eax
0000000000002a74         mov        eax, 0x1
0000000000002a79         ret
                        ; endp
0000000000002a7a         align      128

                     loc_2a80:
0000000000002a80         xor        eax, eax                                    ; CODE XREF=z85_decode_ctx+76, z85_decode_ctx+95, z85_decode_ctx+177, z85_decode_ctx+191
0000000000002a82         ret
                        ; endp
0000000000002a83         align      16                                          ; End of unwind block (FDE at 0x90a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base2lsbf_decode_ctx:
0000000000002a90         test       rdx, rdx                                    ; Begin of unwind block (FDE at 0x90b8), DATA XREF=main+483
0000000000002a93         mov        r10, rcx
0000000000002a96         mov        qword [r8], 0x0
0000000000002a9d         je         loc_2b08

0000000000002a9f         lea        r9, qword [rsi+1]
0000000000002aa3         lea        rsi, qword [rsi+rdx+1]
0000000000002aa8         nop        dword [rax+rax]

                     loc_2ab0:
0000000000002ab0         movzx      eax, byte [r9-1]                            ; CODE XREF=base2lsbf_decode_ctx+108
0000000000002ab5         cmp        al, 0xa
0000000000002ab7         je         loc_2af5

0000000000002ab9         lea        edx, dword [rax-0x30]
0000000000002abc         cmp        dl, 0x1
0000000000002abf         ja         loc_2b10

0000000000002ac1         cmp        al, 0x31
0000000000002ac3         mov        ecx, dword [rdi]
0000000000002ac5         sete       al
0000000000002ac8         movzx      eax, al
0000000000002acb         shl        eax, cl
0000000000002acd         or         eax, dword [rdi+4]
0000000000002ad0         add        ecx, 0x1
0000000000002ad3         cmp        ecx, 0x8
0000000000002ad6         mov        dword [rdi], ecx
0000000000002ad8         mov        dword [rdi+4], eax
0000000000002adb         jne        loc_2af5

0000000000002add         mov        byte [r10], al
0000000000002ae0         mov        dword [rdi+4], 0x0
0000000000002ae7         add        r10, 0x1
0000000000002aeb         add        qword [r8], 0x1
0000000000002aef         mov        dword [rdi], 0x0

                     loc_2af5:
0000000000002af5         add        r9, 0x1                                     ; CODE XREF=base2lsbf_decode_ctx+39, base2lsbf_decode_ctx+75
0000000000002af9         cmp        rsi, r9
0000000000002afc         jne        loc_2ab0

0000000000002afe         mov        eax, 0x1
0000000000002b03         ret
                        ; endp
0000000000002b04         align      8

                     loc_2b08:
0000000000002b08         mov        eax, dword [rdi]                            ; CODE XREF=base2lsbf_decode_ctx+13
0000000000002b0a         test       eax, eax
0000000000002b0c         sete       al
0000000000002b0f         ret
                        ; endp

                     loc_2b10:
0000000000002b10         xor        eax, eax                                    ; CODE XREF=base2lsbf_decode_ctx+47
0000000000002b12         ret
                        ; endp
0000000000002b13         align      32                                          ; End of unwind block (FDE at 0x90b8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base2msbf_decode_ctx:
0000000000002b20         test       rdx, rdx                                    ; Begin of unwind block (FDE at 0x90cc), DATA XREF=main+977
0000000000002b23         mov        r10, rcx
0000000000002b26         mov        qword [r8], 0x0
0000000000002b2d         je         loc_2bb8

0000000000002b33         lea        r9, qword [rsi+1]
0000000000002b37         lea        rsi, qword [rsi+rdx+1]
0000000000002b3c         jmp        loc_2b58
0000000000002b3e         align      64

                     loc_2b40:
0000000000002b40         shl        eax, 0x7                                    ; CODE XREF=base2msbf_decode_ctx+89
0000000000002b43         mov        dword [rdi], 0x7
0000000000002b49         or         eax, r11d
0000000000002b4c         mov        dword [rdi+4], eax

                     loc_2b4f:
0000000000002b4f         add        r9, 0x1                                     ; CODE XREF=base2msbf_decode_ctx+64, base2msbf_decode_ctx+106
0000000000002b53         cmp        r9, rsi
0000000000002b56         je         loc_2bad

                     loc_2b58:
0000000000002b58         movzx      edx, byte [r9-1]                            ; CODE XREF=base2msbf_decode_ctx+28, base2msbf_decode_ctx+139
0000000000002b5d         cmp        dl, 0xa
0000000000002b60         je         loc_2b4f

0000000000002b62         lea        eax, dword [rdx-0x30]
0000000000002b65         cmp        al, 0x1
0000000000002b67         ja         loc_2bc0

0000000000002b69         mov        ecx, dword [rdi]
0000000000002b6b         xor        eax, eax
0000000000002b6d         cmp        dl, 0x31
0000000000002b70         sete       al
0000000000002b73         mov        r11d, dword [rdi+4]
0000000000002b77         test       ecx, ecx
0000000000002b79         je         loc_2b40

0000000000002b7b         sub        ecx, 0x1
0000000000002b7e         shl        eax, cl
0000000000002b80         mov        dword [rdi], ecx
0000000000002b82         or         eax, r11d
0000000000002b85         test       ecx, ecx
0000000000002b87         mov        dword [rdi+4], eax
0000000000002b8a         jne        loc_2b4f

0000000000002b8c         add        r9, 0x1
0000000000002b90         mov        byte [r10], al
0000000000002b93         mov        dword [rdi+4], 0x0
0000000000002b9a         add        r10, 0x1
0000000000002b9e         add        qword [r8], 0x1
0000000000002ba2         cmp        r9, rsi
0000000000002ba5         mov        dword [rdi], 0x0
0000000000002bab         jne        loc_2b58

                     loc_2bad:
0000000000002bad         mov        eax, 0x1                                    ; CODE XREF=base2msbf_decode_ctx+54
0000000000002bb2         ret
                        ; endp
0000000000002bb3         align      8

                     loc_2bb8:
0000000000002bb8         mov        eax, dword [rdi]                            ; CODE XREF=base2msbf_decode_ctx+13
0000000000002bba         test       eax, eax
0000000000002bbc         sete       al
0000000000002bbf         ret
                        ; endp

                     loc_2bc0:
0000000000002bc0         xor        eax, eax                                    ; CODE XREF=base2msbf_decode_ctx+71
0000000000002bc2         ret
                        ; endp
0000000000002bc3         align      16                                          ; End of unwind block (FDE at 0x90cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_31: int8_t, -49
        ;    var_32: int8_t, -50
        ;    var_33: int8_t, -51
        ;    var_34: int8_t, -52


                     z85_encode:
0000000000002bd0         push       r13                                         ; Begin of unwind block (FDE at 0x90e0), DATA XREF=main+1174
0000000000002bd2         push       r12
0000000000002bd4         push       rbp
0000000000002bd5         push       rbx
0000000000002bd6         sub        rsp, 0x18
0000000000002bda         mov        rax, qword [fs:0x28]
0000000000002be3         mov        qword [rsp+0x38+var_30], rax
0000000000002be8         xor        eax, eax
0000000000002bea         test       rsi, rsi
0000000000002bed         je         loc_2cc4

0000000000002bf3         movzx      eax, byte [rdi]
0000000000002bf6         lea        r9, qword [rdi+1]
0000000000002bfa         add        rsi, rdi
0000000000002bfd         mov        r11, rdx
0000000000002c00         xor        r10d, r10d
0000000000002c03         mov        edi, 0xc0c0c0c1
0000000000002c08         lea        rbx, qword [z85_encoding]                   ; "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.-:+=^!/*?&<>()[]{}@%$#"
0000000000002c0f         mov        byte [rsp+0x38+var_34], al
0000000000002c13         mov        eax, 0x1
0000000000002c18         jmp        loc_2c23
0000000000002c1a         align      32

                     loc_2c20:
0000000000002c20         movsxd     rax, edx                                    ; CODE XREF=z85_encode+112, z85_encode+225

                     loc_2c23:
0000000000002c23         cmp        rsi, r9                                     ; CODE XREF=z85_encode+72
0000000000002c26         je         loc_2cc0

0000000000002c2c         add        r9, 0x1
0000000000002c30         movzx      r8d, byte [r9-1]
0000000000002c35         lea        edx, dword [rax+1]
0000000000002c38         cmp        edx, 0x4
0000000000002c3b         mov        byte [rsp+rax+0x38+var_34], r8b
0000000000002c40         jne        loc_2c20

0000000000002c42         movzx      eax, byte [rsp+0x38+var_34]
0000000000002c47         movzx      r8d, byte [rsp+0x38+var_33]
0000000000002c4d         mov        r13, r11
0000000000002c50         lea        rbp, qword [r10+4]
0000000000002c54         lea        r12, qword [r10-1]
0000000000002c58         sub        r13, r10
0000000000002c5b         shl        r8d, 0x10
0000000000002c5f         shl        eax, 0x18
0000000000002c62         lea        eax, dword [rax+r8]
0000000000002c66         movzx      r8d, byte [rsp+0x38+var_32]
0000000000002c6c         shl        r8d, 0x8
0000000000002c70         add        r8d, eax
0000000000002c73         movzx      eax, byte [rsp+0x38+var_31]
0000000000002c78         add        r8d, eax

                     loc_2c7b:
0000000000002c7b         mov        eax, r8d                                    ; CODE XREF=z85_encode+213
0000000000002c7e         mul        edi
0000000000002c80         shr        edx, 0x6
0000000000002c83         cmp        rbp, rcx
0000000000002c86         jae        loc_2c9b

0000000000002c88         imul       eax, edx, 0x55
0000000000002c8b         sub        r8d, eax
0000000000002c8e         movsxd     r8, r8d
0000000000002c91         movzx      eax, byte [rbx+r8]
0000000000002c96         mov        byte [r13+rbp], al

                     loc_2c9b:
0000000000002c9b         sub        rbp, 0x1                                    ; CODE XREF=z85_encode+182
0000000000002c9f         mov        r8d, edx
0000000000002ca2         cmp        rbp, r12
0000000000002ca5         jne        loc_2c7b

0000000000002ca7         add        r11, 0x5
0000000000002cab         add        r10, 0x5
0000000000002caf         xor        edx, edx
0000000000002cb1         jmp        loc_2c20
0000000000002cb6         align      64

                     loc_2cc0:
0000000000002cc0         test       eax, eax                                    ; CODE XREF=z85_encode+86
0000000000002cc2         jne        loc_2cdf

                     loc_2cc4:
0000000000002cc4         mov        rax, qword [rsp+0x38+var_30]                ; CODE XREF=z85_encode+29
0000000000002cc9         xor        rax, qword [fs:0x28]
0000000000002cd2         jne        loc_2d03

0000000000002cd4         add        rsp, 0x18
0000000000002cd8         pop        rbx
0000000000002cd9         pop        rbp
0000000000002cda         pop        r12
0000000000002cdc         pop        r13
0000000000002cde         ret
                        ; endp

                     loc_2cdf:
0000000000002cdf         lea        rsi, qword [aInvalidInputLe]                ; argument "msgid" for method j_dcgettext, "invalid input (length must be multiple of 4 characters)", CODE XREF=z85_encode+242
0000000000002ce6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002ceb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002ced         call       j_dcgettext                                 ; dcgettext
0000000000002cf2         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002cf4         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002cf7         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002cfc         xor        eax, eax
0000000000002cfe         call       j_error                                     ; error

                     loc_2d03:
0000000000002d03         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=z85_encode+258
                        ; endp
0000000000002d08         align      16                                          ; End of unwind block (FDE at 0x90e0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base32hex_encode:
0000000000002d10         push       rbp                                         ; Begin of unwind block (FDE at 0x911c), DATA XREF=main+1249
0000000000002d11         push       rbx
0000000000002d12         mov        rbp, rcx
0000000000002d15         mov        rbx, rdx
0000000000002d18         sub        rsp, 0x8
0000000000002d1c         call       base32_encode                               ; base32_encode
0000000000002d21         test       rbp, rbp
0000000000002d24         je         loc_2d60

0000000000002d26         movsx      eax, byte [rbx]
0000000000002d29         lea        edx, dword [rax-0x32]
0000000000002d2c         cmp        dl, 0x28
0000000000002d2f         ja         loc_2d67

0000000000002d31         lea        rcx, qword [rbx+rbp]
0000000000002d35         lea        rsi, qword [base32_norm_to_hex]             ; "QRSTUV89:;<=>?@0123456789ABCDEFGHIJKLMNOP8.31"
0000000000002d3c         jmp        loc_2d4b
0000000000002d3e         align      64

                     loc_2d40:
0000000000002d40         movsx      eax, byte [rbx]                             ; CODE XREF=base32hex_encode+78
0000000000002d43         lea        edx, dword [rax-0x32]
0000000000002d46         cmp        dl, 0x28
0000000000002d49         ja         loc_2d67

                     loc_2d4b:
0000000000002d4b         sub        eax, 0x32                                   ; CODE XREF=base32hex_encode+44
0000000000002d4e         add        rbx, 0x1
0000000000002d52         cdqe
0000000000002d54         movzx      eax, byte [rsi+rax]
0000000000002d58         mov        byte [rbx-1], al
0000000000002d5b         cmp        rbx, rcx
0000000000002d5e         jne        loc_2d40

                     loc_2d60:
0000000000002d60         add        rsp, 0x8                                    ; CODE XREF=base32hex_encode+20
0000000000002d64         pop        rbx
0000000000002d65         pop        rbp
0000000000002d66         ret
                        ; endp

                     loc_2d67:
0000000000002d67         lea        rcx, qword [__PRETTY_FUNCTION__.7847]       ; argument "__function" for method j___assert_fail, "base32hex_encode", CODE XREF=base32hex_encode+31, base32hex_encode+57
0000000000002d6e         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/basenc.c"
0000000000002d75         lea        rdi, qword [aP0x32P0x5a]                    ; argument "__assertion" for method j___assert_fail, "*p >= 0x32 && *p <= 0x5a"
0000000000002d7c         mov        edx, 0x1c2                                  ; argument "__line" for method j___assert_fail
0000000000002d81         call       j___assert_fail                             ; __assert_fail
                        ; endp
0000000000002d86         align      16                                          ; End of unwind block (FDE at 0x911c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_90: int64_t, -144
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_E0: int64_t, -224
        ;    var_E8: int64_t, -232
        ;    var_F0: int64_t, -240
        ;    var_F8: int64_t, -248
        ;    var_100: int64_t, -256
        ;    var_108: int64_t, -264


                     base64url_decode_ctx_wrapper:
0000000000002d90         push       r14                                         ; Begin of unwind block (FDE at 0x9148), DATA XREF=main+1052
0000000000002d92         push       r13
0000000000002d94         mov        r14, rsi
0000000000002d97         push       r12
0000000000002d99         push       rbp
0000000000002d9a         mov        r13, rdx
0000000000002d9d         push       rbx
0000000000002d9e         mov        rbx, rdi
0000000000002da1         mov        rbp, rcx
0000000000002da4         cmp        rdx, qword [rbx+0x18]
0000000000002da8         mov        r12, r8
0000000000002dab         mov        rdi, qword [rdi+0x10]
0000000000002daf         ja         loc_2e50

                     loc_2db5:
0000000000002db5         mov        rsi, r14                                    ; argument "__src" for method j_memcpy, CODE XREF=base64url_decode_ctx_wrapper+217
0000000000002db8         mov        rdx, r13                                    ; argument "__n" for method j_memcpy
0000000000002dbb         call       j_memcpy                                    ; memcpy
0000000000002dc0         test       r13, r13
0000000000002dc3         mov        rsi, qword [rbx+0x10]
0000000000002dc7         je         loc_2e11

0000000000002dc9         movzx      eax, byte [rsi]
0000000000002dcc         lea        rcx, qword [rsi+r13]
0000000000002dd0         mov        edx, eax
0000000000002dd2         and        edx, 0xfffffffb
0000000000002dd5         cmp        dl, 0x2b
0000000000002dd8         jne        loc_2dfd

0000000000002dda         jmp        loc_2e38
0000000000002ddc         align      32

                     loc_2de0:
0000000000002de0         cmp        al, 0x5f                                    ; CODE XREF=base64url_decode_ctx_wrapper+111
0000000000002de2         jne        loc_2de7

0000000000002de4         mov        byte [rsi], 0x2f

                     loc_2de7:
0000000000002de7         add        rsi, 0x1                                    ; CODE XREF=base64url_decode_ctx_wrapper+82
0000000000002deb         cmp        rsi, rcx
0000000000002dee         je         loc_2e0d

                     loc_2df0:
0000000000002df0         movzx      eax, byte [rsi]                             ; CODE XREF=base64url_decode_ctx_wrapper+123
0000000000002df3         mov        edx, eax
0000000000002df5         and        edx, 0xfffffffb
0000000000002df8         cmp        dl, 0x2b
0000000000002dfb         je         loc_2e38

                     loc_2dfd:
0000000000002dfd         cmp        al, 0x2d                                    ; CODE XREF=base64url_decode_ctx_wrapper+72
0000000000002dff         jne        loc_2de0

0000000000002e01         mov        byte [rsi], 0x2b
0000000000002e04         add        rsi, 0x1
0000000000002e08         cmp        rsi, rcx
0000000000002e0b         jne        loc_2df0

                     loc_2e0d:
0000000000002e0d         mov        rsi, qword [rbx+0x10]                       ; CODE XREF=base64url_decode_ctx_wrapper+94

                     loc_2e11:
0000000000002e11         lea        rdi, qword [rbx+4]                          ; argument #1 for method base64_decode_ctx, CODE XREF=base64url_decode_ctx_wrapper+55
0000000000002e15         mov        rdx, r13                                    ; argument #3 for method base64_decode_ctx
0000000000002e18         mov        r8, r12                                     ; argument #5 for method base64_decode_ctx
0000000000002e1b         mov        rcx, rbp                                    ; argument #4 for method base64_decode_ctx
0000000000002e1e         call       base64_decode_ctx                           ; base64_decode_ctx
0000000000002e23         mov        edx, dword [rbx+4]
0000000000002e26         mov        dword [rbx], edx
0000000000002e28         pop        rbx
0000000000002e29         pop        rbp
0000000000002e2a         pop        r12
0000000000002e2c         pop        r13
0000000000002e2e         pop        r14
0000000000002e30         ret
                        ; endp
0000000000002e31         align      8

                     loc_2e38:
0000000000002e38         pop        rbx                                         ; CODE XREF=base64url_decode_ctx_wrapper+74, base64url_decode_ctx_wrapper+107
0000000000002e39         mov        qword [r12], 0x0
0000000000002e41         xor        eax, eax
0000000000002e43         pop        rbp
0000000000002e44         pop        r12
0000000000002e46         pop        r13
0000000000002e48         pop        r14
0000000000002e4a         ret
                        ; endp
0000000000002e4b         align      16

                     loc_2e50:
0000000000002e50         lea        rsi, qword [rdx+rdx]                        ; CODE XREF=base64url_decode_ctx_wrapper+31
0000000000002e54         test       rsi, rsi
0000000000002e57         mov        qword [rbx+0x18], rsi
0000000000002e5b         js         loc_2e6e

0000000000002e5d         call       xrealloc                                    ; xrealloc
0000000000002e62         mov        rdi, rax
0000000000002e65         mov        qword [rbx+0x10], rax
0000000000002e69         jmp        loc_2db5

                     loc_2e6e:
0000000000002e6e         call       xalloc_die                                  ; xalloc_die, CODE XREF=base64url_decode_ctx_wrapper+203
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_30: int64_t, -48


                     sub_2e73:
0000000000002e73         nop        dword [rax]                                 ; End of unwind block (FDE at 0x9148)
0000000000002e76         nop        word [cs:rax+rax]
                     base32hex_decode_ctx_wrapper:
0000000000002e80         push       rbp                                         ; Begin of unwind block (FDE at 0x9198), DATA XREF=main+1277
0000000000002e81         push       rbx
0000000000002e82         mov        rbp, rsi
0000000000002e85         mov        rbx, rdi
0000000000002e88         sub        rsp, 0x28
0000000000002e8c         cmp        rdx, qword [rdi+0x18]
0000000000002e90         mov        rax, qword [rdi+0x10]
0000000000002e94         ja         loc_2f10

                     loc_2e96:
0000000000002e96         test       rdx, rdx                                    ; CODE XREF=base32hex_decode_ctx_wrapper+199
0000000000002e99         je         loc_2ef2

0000000000002e9b         xor        r9d, r9d
0000000000002e9e         lea        r11, qword [base32_hex_to_norm]             ; "ABCDEFGHIJ:;<=>?@KLMNOPQRSTUVWXYZ234567"
0000000000002ea5         jmp        loc_2ec6
0000000000002ea7         align      16

                     loc_2eb0:
0000000000002eb0         lea        edi, dword [rsi-0x41]                       ; CODE XREF=base32hex_decode_ctx_wrapper+84
0000000000002eb3         cmp        dil, 0x15
0000000000002eb7         jbe        loc_2ed6

0000000000002eb9         mov        byte [rax+r9], sil
0000000000002ebd         add        r9, 0x1
0000000000002ec1         cmp        rdx, r9
0000000000002ec4         je         loc_2eee

                     loc_2ec6:
0000000000002ec6         movsx      esi, byte [rbp+r9]                          ; CODE XREF=base32hex_decode_ctx_wrapper+37, base32hex_decode_ctx_wrapper+108
0000000000002ecc         lea        r10d, dword [rsi-0x30]
0000000000002ed0         cmp        r10b, 0x9
0000000000002ed4         ja         loc_2eb0

                     loc_2ed6:
0000000000002ed6         sub        esi, 0x30                                   ; CODE XREF=base32hex_decode_ctx_wrapper+55
0000000000002ed9         movsxd     rsi, esi
0000000000002edc         movzx      esi, byte [r11+rsi]
0000000000002ee1         mov        byte [rax+r9], sil
0000000000002ee5         add        r9, 0x1
0000000000002ee9         cmp        rdx, r9
0000000000002eec         jne        loc_2ec6

                     loc_2eee:
0000000000002eee         mov        rax, qword [rbx+0x10]                       ; CODE XREF=base32hex_decode_ctx_wrapper+68

                     loc_2ef2:
0000000000002ef2         lea        rdi, qword [rbx+4]                          ; argument #1 for method base32_decode_ctx, CODE XREF=base32hex_decode_ctx_wrapper+25
0000000000002ef6         mov        rsi, rax                                    ; argument #2 for method base32_decode_ctx
0000000000002ef9         call       base32_decode_ctx                           ; base32_decode_ctx
0000000000002efe         mov        edx, dword [rbx+4]
0000000000002f01         mov        dword [rbx], edx
0000000000002f03         add        rsp, 0x28
0000000000002f07         pop        rbx
0000000000002f08         pop        rbp
0000000000002f09         ret
                        ; endp
0000000000002f0a         align      16

                     loc_2f10:
0000000000002f10         lea        rsi, qword [rdx+rdx]                        ; CODE XREF=base32hex_decode_ctx_wrapper+20
0000000000002f14         mov        qword [rsp+0x38+var_20], r8
0000000000002f19         mov        qword [rsp+0x38+var_28], rcx
0000000000002f1e         mov        qword [rsp+0x38+var_30], rdx
0000000000002f23         test       rsi, rsi
0000000000002f26         mov        qword [rdi+0x18], rsi
0000000000002f2a         js         loc_2f4c

0000000000002f2c         mov        rdi, rax                                    ; argument #1 for method xrealloc
0000000000002f2f         call       xrealloc                                    ; xrealloc
0000000000002f34         mov        rdx, qword [rsp+0x38+var_30]
0000000000002f39         mov        qword [rbx+0x10], rax
0000000000002f3d         mov        rcx, qword [rsp+0x38+var_28]
0000000000002f42         mov        r8, qword [rsp+0x38+var_20]
0000000000002f47         jmp        loc_2e96

                     loc_2f4c:
0000000000002f4c         call       xalloc_die                                  ; xalloc_die, CODE XREF=base32hex_decode_ctx_wrapper+170
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     sub_2f51:
0000000000002f51         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x9198)
0000000000002f56         nop        word [cs:rax+rax]
                     usage:
0000000000002f60         push       r13                                         ; Begin of unwind block (FDE at 0x91c4), CODE XREF=main+198, main+2591, main+2781
0000000000002f62         push       r12
0000000000002f64         mov        edx, 0x5
0000000000002f69         push       rbp
0000000000002f6a         push       rbx
0000000000002f6b         mov        ebp, edi
0000000000002f6d         sub        rsp, 0x88
0000000000002f74         mov        rbx, qword [program_name]                   ; program_name
0000000000002f7b         mov        rax, qword [fs:0x28]
0000000000002f84         mov        qword [rsp+0xa8+var_30], rax
0000000000002f89         xor        eax, eax
0000000000002f8b         test       edi, edi
0000000000002f8d         je         loc_2fbd

0000000000002f8f         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
0000000000002f96         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002f98         call       j_dcgettext                                 ; dcgettext
0000000000002f9d         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000002fa4         mov        rdx, rax
0000000000002fa7         mov        rcx, rbx
0000000000002faa         mov        esi, 0x1
0000000000002faf         xor        eax, eax
0000000000002fb1         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_2fb6:
0000000000002fb6         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+1078
0000000000002fb8         call       j_exit                                      ; exit
                        ; endp

                     loc_2fbd:
0000000000002fbd         lea        rsi, qword [aUsageSOptionFi]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... [FILE]\\n", CODE XREF=usage+45
0000000000002fc4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002fc6         call       j_dcgettext                                 ; dcgettext
0000000000002fcb         mov        rdx, rbx
0000000000002fce         mov        rsi, rax
0000000000002fd1         mov        edi, 0x1
0000000000002fd6         xor        eax, eax
0000000000002fd8         call       j___printf_chk                              ; __printf_chk
0000000000002fdd         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002fe4         lea        rsi, qword [aBasencEncodeOr]                ; argument "msgid" for method j_dcgettext, "basenc encode or decode FILE, or standard input, to standard output.\\n"
0000000000002feb         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002ff0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002ff2         call       j_dcgettext                                 ; dcgettext
0000000000002ff7         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002ffa         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002ffd         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003002         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003009         lea        rsi, qword [aNwithNoFileOrW]                ; argument "msgid" for method j_dcgettext, "\\nWith no FILE, or when FILE is -, read standard input.\\n"
0000000000003010         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003015         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003017         call       j_dcgettext                                 ; dcgettext
000000000000301c         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000301f         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003022         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003027         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000302e         lea        rsi, qword [aNmandatoryArgu]                ; argument "msgid" for method j_dcgettext, "\\nMandatory arguments to long options are mandatory for short options too.\\n"
0000000000003035         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000303a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000303c         call       j_dcgettext                                 ; dcgettext
0000000000003041         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003044         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003047         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000304c         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003053         lea        rsi, qword [aBase64SameAsBa]                ; argument "msgid" for method j_dcgettext, "      --base64          same as 'base64' program (RFC4648 section 4)\\n"
000000000000305a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000305f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003061         call       j_dcgettext                                 ; dcgettext
0000000000003066         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003069         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000306c         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003071         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003078         lea        rsi, qword [aBase64urlFileA]                ; argument "msgid" for method j_dcgettext, "      --base64url       file- and url-safe base64 (RFC4648 section 5)\\n"
000000000000307f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003084         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003086         call       j_dcgettext                                 ; dcgettext
000000000000308b         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000308e         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003091         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003096         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000309d         lea        rsi, qword [aBase32SameAsBa]                ; argument "msgid" for method j_dcgettext, "      --base32          same as 'base32' program (RFC4648 section 6)\\n"
00000000000030a4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000030a9         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000030ab         call       j_dcgettext                                 ; dcgettext
00000000000030b0         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000030b3         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000030b6         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000030bb         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000030c2         lea        rsi, qword [aBase32hexExten]                ; argument "msgid" for method j_dcgettext, "      --base32hex       extended hex alphabet base32 (RFC4648 section 7)\\n"
00000000000030c9         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000030ce         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000030d0         call       j_dcgettext                                 ; dcgettext
00000000000030d5         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000030d8         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000030db         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000030e0         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000030e7         lea        rsi, qword [aBase16HexEncod]                ; argument "msgid" for method j_dcgettext, "      --base16          hex encoding (RFC4648 section 8)\\n"
00000000000030ee         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000030f3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000030f5         call       j_dcgettext                                 ; dcgettext
00000000000030fa         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000030fd         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003100         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003105         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000310c         lea        rsi, qword [aBase2msbfBitSt]                ; argument "msgid" for method j_dcgettext, "      --base2msbf       bit string with most significant bit (msb) first\\n"
0000000000003113         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003118         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000311a         call       j_dcgettext                                 ; dcgettext
000000000000311f         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003122         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003125         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000312a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003131         lea        rsi, qword [aBase2lsbfBitSt]                ; argument "msgid" for method j_dcgettext, "      --base2lsbf       bit string with least significant bit (lsb) first\\n"
0000000000003138         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000313d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000313f         call       j_dcgettext                                 ; dcgettext
0000000000003144         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003147         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000314a         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000314f         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003156         lea        rsi, qword [aDDecodeDecodeD]                ; argument "msgid" for method j_dcgettext, "  -d, --decode          decode data\\n  -i, --ignore-garbage  when decoding, ignore non-alphabet characters\\n  -w, --wrap=COLS       wrap encoded lines after COLS character (default 76).\\n                          Use 0 to disable line wrapping\\n\\n"
000000000000315d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003162         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003164         call       j_dcgettext                                 ; dcgettext
0000000000003169         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000316c         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000316f         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003174         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000317b         lea        rsi, qword [aZ85Ascii85like]                ; argument "msgid" for method j_dcgettext, "      --z85             ascii85-like encoding (ZeroMQ spec:32/Z85);\\n                        when encoding, input length must be a multiple of 4;\\n                        when decoding, input length must be a multiple of 5\\n"
0000000000003182         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003187         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003189         call       j_dcgettext                                 ; dcgettext
000000000000318e         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003191         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003194         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003199         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000031a0         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
00000000000031a7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000031ac         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000031ae         call       j_dcgettext                                 ; dcgettext
00000000000031b3         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000031b6         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000031b9         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000031be         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000031c5         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
00000000000031cc         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000031d1         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000031d3         call       j_dcgettext                                 ; dcgettext
00000000000031d8         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000031db         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000031de         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000031e3         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000031ea         lea        rsi, qword [aNwhenDecodingT]                ; argument "msgid" for method j_dcgettext, "\\nWhen decoding, the input may contain newlines in addition to the bytes of\\nthe formal alphabet.  Use --ignore-garbage to attempt to recover\\nfrom any other non-alphabet bytes in the encoded stream.\\n"
00000000000031f1         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000031f6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000031f8         call       j_dcgettext                                 ; dcgettext
00000000000031fd         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003200         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003203         lea        rbx, qword [aBasenc]                        ; "basenc"
000000000000320a         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000320f         lea        rax, qword [aUsageSOptionFi+30]             ; 0x737a
0000000000003216         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
000000000000321d         mov        qword [rsp+0xa8+var_48], 0x0
0000000000003226         mov        qword [rsp+0xa8+var_40], 0x0
000000000000322f         mov        rdx, rsp
0000000000003232         mov        qword [rsp+0xa8+var_A8], rax
0000000000003236         lea        rax, qword [aTestInvocation]                ; "test invocation"
000000000000323d         mov        qword [rsp+0xa8+var_78], rcx
0000000000003242         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
0000000000003249         mov        qword [rsp+0xa8+var_A0], rax
000000000000324e         lea        rax, qword [aCoreutils]                     ; "coreutils"
0000000000003255         mov        qword [rsp+0xa8+var_68], rcx
000000000000325a         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
0000000000003261         mov        qword [rsp+0xa8+var_98], rax
0000000000003266         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
000000000000326d         mov        qword [rsp+0xa8+var_58], rcx
0000000000003272         mov        qword [rsp+0xa8+var_90], rax
0000000000003277         lea        rax, qword [aSha224sum]                     ; "sha224sum"
000000000000327e         mov        qword [rsp+0xa8+var_88], rax
0000000000003283         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
000000000000328a         mov        qword [rsp+0xa8+var_80], rax
000000000000328f         mov        qword [rsp+0xa8+var_70], rax
0000000000003294         mov        qword [rsp+0xa8+var_60], rax
0000000000003299         mov        qword [rsp+0xa8+var_50], rax
000000000000329e         nop

                     loc_32a0:
00000000000032a0         add        rdx, 0x10                                   ; CODE XREF=usage+861
00000000000032a4         mov        rdi, qword [rdx]
00000000000032a7         test       rdi, rdi
00000000000032aa         je         loc_32bf

00000000000032ac         mov        ecx, 0x7
00000000000032b1         mov        rsi, rbx
00000000000032b4         rep  cmpsb byte [rsi], byte [rdi]
00000000000032b6         seta       al
00000000000032b9         sbb        al, 0x0
00000000000032bb         test       al, al
00000000000032bd         jne        loc_32a0

                     loc_32bf:
00000000000032bf         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+842
00000000000032c3         xor        edi, edi
00000000000032c5         mov        edx, 0x5
00000000000032ca         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
00000000000032d1         test       r12, r12
00000000000032d4         je         loc_339b

00000000000032da         call       j_dcgettext                                 ; dcgettext
00000000000032df         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000032e6         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x73f0
00000000000032ed         mov        rsi, rax
00000000000032f0         mov        edi, 0x1
00000000000032f5         xor        eax, eax
00000000000032f7         call       j___printf_chk                              ; __printf_chk
00000000000032fc         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
00000000000032fe         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000003303         call       j_setlocale                                 ; setlocale
0000000000003308         test       rax, rax
000000000000330b         je         loc_3329

000000000000330d         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x73fe
0000000000003314         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000003319         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
000000000000331c         call       j_strncmp                                   ; strncmp
0000000000003321         test       eax, eax
0000000000003323         jne        loc_3430

                     loc_3329:
0000000000003329         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+939, usage+1269
0000000000003330         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003332         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003337         call       j_dcgettext                                 ; dcgettext
000000000000333c         lea        rcx, qword [aBasenc]                        ; "basenc"
0000000000003343         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
000000000000334a         mov        rsi, rax
000000000000334d         mov        edi, 0x1
0000000000003352         xor        eax, eax
0000000000003354         call       j___printf_chk                              ; __printf_chk
0000000000003359         cmp        r12, rbx
000000000000335c         lea        rcx, qword [aMulticallInvoc+10]             ; 0x7396
0000000000003363         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0x85c1
000000000000336a         cmove      rbx, rcx

                     loc_336e:
000000000000336e         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+1220
0000000000003375         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003377         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000337c         call       j_dcgettext                                 ; dcgettext
0000000000003381         mov        rcx, rbx
0000000000003384         mov        rsi, rax
0000000000003387         mov        rdx, r12
000000000000338a         mov        edi, 0x1
000000000000338f         xor        eax, eax
0000000000003391         call       j___printf_chk                              ; __printf_chk
0000000000003396         jmp        loc_2fb6

                     loc_339b:
000000000000339b         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+884
00000000000033a0         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000033a7         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x73f0
00000000000033ae         mov        rsi, rax
00000000000033b1         mov        edi, 0x1
00000000000033b6         xor        eax, eax
00000000000033b8         call       j___printf_chk                              ; __printf_chk
00000000000033bd         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
00000000000033bf         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
00000000000033c4         call       j_setlocale                                 ; setlocale
00000000000033c9         test       rax, rax
00000000000033cc         je         loc_33e6

00000000000033ce         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x73fe
00000000000033d5         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
00000000000033da         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
00000000000033dd         call       j_strncmp                                   ; strncmp
00000000000033e2         test       eax, eax
00000000000033e4         jne        loc_3429

                     loc_33e6:
00000000000033e6         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+1132
00000000000033ed         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000033f2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000033f4         lea        r12, qword [aBasenc]                        ; "basenc"
00000000000033fb         lea        rbx, qword [aMulticallInvoc+10]             ; 0x7396
0000000000003402         call       j_dcgettext                                 ; dcgettext
0000000000003407         lea        rcx, qword [aBasenc]                        ; "basenc"
000000000000340e         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000003415         mov        rsi, rax
0000000000003418         mov        edi, 0x1
000000000000341d         xor        eax, eax
000000000000341f         call       j___printf_chk                              ; __printf_chk
0000000000003424         jmp        loc_336e

                     loc_3429:
0000000000003429         lea        r12, qword [aBasenc]                        ; "basenc", CODE XREF=usage+1156

                     loc_3430:
0000000000003430         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+963
0000000000003437         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
000000000000343e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003440         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003445         call       j_dcgettext                                 ; dcgettext
000000000000344a         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
000000000000344d         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003450         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003455         jmp        loc_3329
000000000000345a         align      32                                          ; End of unwind block (FDE at 0x91c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     decode_8:
0000000000003460         xor        eax, eax                                    ; Begin of unwind block (FDE at 0x924c), CODE XREF=base32_decode_ctx+224, base32_decode_ctx+345
0000000000003462         cmp        rsi, 0x7
0000000000003466         jbe        loc_35d8

000000000000346c         movzx      r8d, byte [rdi]
0000000000003470         lea        rsi, qword [b32]                            ; b32
0000000000003477         movzx      r8d, byte [rsi+r8]
000000000000347c         test       r8b, r8b
000000000000347f         js         loc_35d8

0000000000003485         movzx      r9d, byte [rdi+1]
000000000000348a         movzx      r9d, byte [rsi+r9]
000000000000348f         test       r9b, r9b
0000000000003492         js         loc_35d8

0000000000003498         cmp        qword [rcx], 0x0
000000000000349c         mov        rax, qword [rdx]
000000000000349f         je         loc_34bb

00000000000034a1         mov        r10d, r9d
00000000000034a4         shl        r8d, 0x3
00000000000034a8         add        rax, 0x1
00000000000034ac         sar        r10b, 0x2
00000000000034b0         or         r8d, r10d
00000000000034b3         mov        byte [rax-1], r8b
00000000000034b7         sub        qword [rcx], 0x1

                     loc_34bb:
00000000000034bb         movzx      r8d, byte [rdi+2]                           ; CODE XREF=decode_8+63
00000000000034c0         cmp        r8b, 0x3d
00000000000034c4         je         loc_35e0

00000000000034ca         movzx      r8d, byte [rsi+r8]
00000000000034cf         test       r8b, r8b
00000000000034d2         js         loc_35e6

00000000000034d8         movzx      r10d, byte [rdi+3]
00000000000034dd         movzx      r10d, byte [rsi+r10]
00000000000034e2         test       r10b, r10b
00000000000034e5         js         loc_35e6

00000000000034eb         cmp        qword [rcx], 0x0
00000000000034ef         je         loc_3511

00000000000034f1         add        r8d, r8d
00000000000034f4         shl        r9d, 0x6
00000000000034f8         add        rax, 0x1
00000000000034fc         or         r9d, r8d
00000000000034ff         mov        r8d, r10d
0000000000003502         sar        r8b, 0x4
0000000000003506         or         r9d, r8d
0000000000003509         mov        byte [rax-1], r9b
000000000000350d         sub        qword [rcx], 0x1

                     loc_3511:
0000000000003511         movzx      r8d, byte [rdi+4]                           ; CODE XREF=decode_8+143
0000000000003516         cmp        r8b, 0x3d
000000000000351a         je         loc_35f6

0000000000003520         movzx      r8d, byte [rsi+r8]
0000000000003525         test       r8b, r8b
0000000000003528         js         loc_35e6

000000000000352e         cmp        qword [rcx], 0x0
0000000000003532         je         loc_354d

0000000000003534         mov        r9d, r8d
0000000000003537         shl        r10d, 0x4
000000000000353b         add        rax, 0x1
000000000000353f         sar        r9b, 0x1
0000000000003542         or         r10d, r9d
0000000000003545         mov        byte [rax-1], r10b
0000000000003549         sub        qword [rcx], 0x1

                     loc_354d:
000000000000354d         movzx      r9d, byte [rdi+5]                           ; CODE XREF=decode_8+210
0000000000003552         cmp        r9b, 0x3d
0000000000003556         je         loc_35fc

000000000000355c         movzx      r9d, byte [rsi+r9]
0000000000003561         test       r9b, r9b
0000000000003564         js         loc_35e6

000000000000356a         movzx      r10d, byte [rdi+6]
000000000000356f         movzx      r10d, byte [rsi+r10]
0000000000003574         test       r10b, r10b
0000000000003577         js         loc_35e6

0000000000003579         cmp        qword [rcx], 0x0
000000000000357d         je         loc_35a0

000000000000357f         shl        r9d, 0x2
0000000000003583         shl        r8d, 0x7
0000000000003587         add        rax, 0x1
000000000000358b         or         r8d, r9d
000000000000358e         mov        r9d, r10d
0000000000003591         sar        r9b, 0x3
0000000000003595         or         r8d, r9d
0000000000003598         mov        byte [rax-1], r8b
000000000000359c         sub        qword [rcx], 0x1

                     loc_35a0:
00000000000035a0         movzx      edi, byte [rdi+7]                           ; CODE XREF=decode_8+285
00000000000035a4         cmp        dil, 0x3d
00000000000035a8         je         loc_35d0

00000000000035aa         movzx      esi, byte [rsi+rdi]
00000000000035ae         test       sil, sil
00000000000035b1         js         loc_35e6

00000000000035b3         cmp        qword [rcx], 0x0
00000000000035b7         je         loc_35d0

00000000000035b9         shl        r10d, 0x5
00000000000035bd         add        rax, 0x1
00000000000035c1         or         r10d, esi
00000000000035c4         mov        byte [rax-1], r10b
00000000000035c8         sub        qword [rcx], 0x1
00000000000035cc         nop        dword [rax]

                     loc_35d0:
00000000000035d0         mov        qword [rdx], rax                            ; CODE XREF=decode_8+328, decode_8+343, decode_8+424
00000000000035d3         mov        eax, 0x1

                     loc_35d8:
00000000000035d8         ret                                                    ; CODE XREF=decode_8+6, decode_8+31, decode_8+50
                        ; endp
00000000000035da         align      32

                     loc_35e0:
00000000000035e0         cmp        byte [rdi+3], 0x3d                          ; CODE XREF=decode_8+100
00000000000035e4         je         loc_35f0

                     loc_35e6:
00000000000035e6         mov        qword [rdx], rax                            ; CODE XREF=decode_8+114, decode_8+133, decode_8+200, decode_8+260, decode_8+279, decode_8+337, decode_8+404, decode_8+410, decode_8+416, decode_8+422
00000000000035e9         xor        eax, eax
00000000000035eb         ret
                        ; endp
00000000000035ec         align      16

                     loc_35f0:
00000000000035f0         cmp        byte [rdi+4], 0x3d                          ; CODE XREF=decode_8+388
00000000000035f4         jne        loc_35e6

                     loc_35f6:
00000000000035f6         cmp        byte [rdi+5], 0x3d                          ; CODE XREF=decode_8+186
00000000000035fa         jne        loc_35e6

                     loc_35fc:
00000000000035fc         cmp        byte [rdi+6], 0x3d                          ; CODE XREF=decode_8+246
0000000000003600         jne        loc_35e6

0000000000003602         cmp        byte [rdi+7], 0x3d
0000000000003606         jne        loc_35e6

0000000000003608         jmp        loc_35d0
000000000000360a         align      16                                          ; End of unwind block (FDE at 0x924c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base32_encode:
0000000000003610         lea        r8, qword [b32str.3066]                     ; Begin of unwind block (FDE at 0x9260), b32str.3066, CODE XREF=base32hex_encode+12, base32_encode_alloc+118, DATA XREF=main+1324
0000000000003617         jmp        loc_373b
000000000000361c         align      32

                     loc_3620:
0000000000003620         movzx      r9d, byte [rdi+1]                           ; CODE XREF=base32_encode+352
0000000000003625         mov        r10d, r9d
0000000000003628         shr        r10b, 0x6
000000000000362c         add        eax, r10d
000000000000362f         and        eax, 0x1f
0000000000003632         cmp        rcx, 0x2
0000000000003636         movzx      eax, byte [r8+rax]
000000000000363b         mov        byte [rdx+1], al
000000000000363e         je         loc_37e5

0000000000003644         mov        eax, r9d
0000000000003647         shr        al, 0x1
0000000000003649         and        eax, 0x1f
000000000000364c         cmp        rcx, 0x3
0000000000003650         movzx      eax, byte [r8+rax]
0000000000003655         mov        byte [rdx+2], al
0000000000003658         je         loc_37e5

000000000000365e         shl        r9d, 0x4
0000000000003662         cmp        rsi, 0x2
0000000000003666         je         loc_37d0

000000000000366c         movzx      eax, byte [rdi+2]
0000000000003670         mov        r10d, eax
0000000000003673         shr        r10b, 0x4
0000000000003677         add        r9d, r10d
000000000000367a         and        r9d, 0x1f
000000000000367e         cmp        rcx, 0x4
0000000000003682         movzx      r9d, byte [r8+r9]
0000000000003687         mov        byte [rdx+3], r9b
000000000000368b         je         loc_37e5

0000000000003691         cmp        rsi, 0x3
0000000000003695         lea        r9d, dword [rax+rax]
0000000000003699         je         loc_37f0

000000000000369f         movzx      eax, byte [rdi+3]
00000000000036a3         mov        r10d, eax
00000000000036a6         shr        r10b, 0x7
00000000000036aa         add        r9d, r10d
00000000000036ad         and        r9d, 0x1f
00000000000036b1         cmp        rcx, 0x5
00000000000036b5         movzx      r9d, byte [r8+r9]
00000000000036ba         mov        byte [rdx+4], r9b
00000000000036be         je         loc_37e5

00000000000036c4         mov        r9d, eax
00000000000036c7         shr        r9b, 0x2
00000000000036cb         and        r9d, 0x1f
00000000000036cf         cmp        rcx, 0x6
00000000000036d3         movzx      r9d, byte [r8+r9]
00000000000036d8         mov        byte [rdx+5], r9b
00000000000036dc         je         loc_37e5

00000000000036e2         shl        eax, 0x3
00000000000036e5         cmp        rsi, 0x4
00000000000036e9         je         loc_3808

00000000000036ef         movzx      r9d, byte [rdi+4]
00000000000036f4         mov        r10d, r9d
00000000000036f7         shr        r10b, 0x5
00000000000036fb         add        eax, r10d
00000000000036fe         and        eax, 0x1f
0000000000003701         cmp        rcx, 0x7
0000000000003705         movzx      eax, byte [r8+rax]
000000000000370a         mov        byte [rdx+6], al
000000000000370d         je         loc_37e5

0000000000003713         and        r9d, 0x1f
0000000000003717         cmp        rcx, 0x8
000000000000371b         movzx      eax, byte [r8+r9]
0000000000003720         mov        byte [rdx+7], al
0000000000003723         je         loc_37e5

0000000000003729         sub        rsi, 0x5
000000000000372d         je         loc_3733

000000000000372f         add        rdi, 0x5

                     loc_3733:
0000000000003733         add        rdx, 0x8                                    ; CODE XREF=base32_encode+285, base32_encode+437
0000000000003737         sub        rcx, 0x8

                     loc_373b:
000000000000373b         test       rsi, rsi                                    ; CODE XREF=base32_encode+7
000000000000373e         je         loc_3820

0000000000003744         test       rcx, rcx
0000000000003747         je         loc_3820

000000000000374d         movzx      eax, byte [rdi]
0000000000003750         mov        r9d, eax
0000000000003753         shr        r9b, 0x3
0000000000003757         and        r9d, 0x1f
000000000000375b         cmp        rcx, 0x1
000000000000375f         movzx      r9d, byte [r8+r9]
0000000000003764         mov        byte [rdx], r9b
0000000000003767         je         loc_37e5

0000000000003769         shl        eax, 0x2
000000000000376c         cmp        rsi, 0x1
0000000000003770         jne        loc_3620

0000000000003776         and        eax, 0x1c
0000000000003779         cmp        rcx, 0x2
000000000000377d         movzx      eax, byte [r8+rax]
0000000000003782         mov        byte [rdx+1], al
0000000000003785         je         loc_37e5

0000000000003787         cmp        rcx, 0x3
000000000000378b         mov        byte [rdx+2], 0x3d
000000000000378f         je         loc_37e5

0000000000003791         cmp        rcx, 0x4
0000000000003795         mov        byte [rdx+3], 0x3d
0000000000003799         je         loc_37e5

                     loc_379b:
000000000000379b         cmp        rcx, 0x5                                    ; CODE XREF=base32_encode+467
000000000000379f         mov        byte [rdx+4], 0x3d
00000000000037a3         je         loc_37e5

                     loc_37a5:
00000000000037a5         cmp        rcx, 0x6                                    ; CODE XREF=base32_encode+496
00000000000037a9         mov        byte [rdx+5], 0x3d
00000000000037ad         je         loc_37e5

00000000000037af         cmp        rcx, 0x7
00000000000037b3         mov        byte [rdx+6], 0x3d
00000000000037b7         je         loc_37e5

                     loc_37b9:
00000000000037b9         cmp        rcx, 0x8                                    ; CODE XREF=base32_encode+521
00000000000037bd         mov        byte [rdx+7], 0x3d
00000000000037c1         je         loc_37e5

00000000000037c3         xor        esi, esi
00000000000037c5         jmp        loc_3733
00000000000037ca         align      16

                     loc_37d0:
00000000000037d0         and        r9d, 0x1f                                   ; CODE XREF=base32_encode+86
00000000000037d4         cmp        rcx, 0x4
00000000000037d8         movsxd     r9, r9d
00000000000037db         movzx      eax, byte [r8+r9]
00000000000037e0         mov        byte [rdx+3], al
00000000000037e3         jne        loc_379b

                     loc_37e5:
00000000000037e5         ret                                                    ; CODE XREF=base32_encode+46, base32_encode+72, base32_encode+123, base32_encode+174, base32_encode+204, base32_encode+253, base32_encode+275, base32_encode+343, base32_encode+373, base32_encode+383, base32_encode+393
                        ; endp
00000000000037e6         align      16

                     loc_37f0:
00000000000037f0         and        r9d, 0x1e                                   ; CODE XREF=base32_encode+137
00000000000037f4         cmp        rcx, 0x5
00000000000037f8         movzx      eax, byte [r8+r9]
00000000000037fd         mov        byte [rdx+4], al
0000000000003800         jne        loc_37a5

0000000000003802         ret
                        ; endp
0000000000003804         align      8

                     loc_3808:
0000000000003808         and        eax, 0x18                                   ; CODE XREF=base32_encode+217
000000000000380b         cmp        rcx, 0x7
000000000000380f         movzx      eax, byte [r8+rax]
0000000000003814         mov        byte [rdx+6], al
0000000000003817         je         loc_37e5

0000000000003819         jmp        loc_37b9
000000000000381b         align      32

                     loc_3820:
0000000000003820         test       rcx, rcx                                    ; CODE XREF=base32_encode+302, base32_encode+311
0000000000003823         je         loc_37e5

0000000000003825         mov        byte [rdx], 0x0
0000000000003828         ret
                        ; endp
0000000000003829         align      16                                          ; End of unwind block (FDE at 0x9260)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base32_encode_alloc:
0000000000003830         push       r14                                         ; Begin of unwind block (FDE at 0x9274)
0000000000003832         push       r13
0000000000003834         mov        r13, rdx
0000000000003837         lea        rdx, qword [rsi+4]
000000000000383b         push       r12
000000000000383d         push       rbp
000000000000383e         push       rbx
000000000000383f         movabs     rbx, 0xcccccccccccccccd
0000000000003849         mov        rax, rdx
000000000000384c         mul        rbx
000000000000384f         shr        rdx, 0x2
0000000000003853         lea        rbx, qword [rdx*8]
000000000000385b         lea        rbp, qword [rbx+1]
000000000000385f         cmp        rsi, rbp
0000000000003862         jbe        loc_3880

0000000000003864         mov        qword [r13], 0x0
000000000000386c         xor        ebp, ebp

                     loc_386e:
000000000000386e         pop        rbx                                         ; CODE XREF=base32_encode_alloc+101
000000000000386f         mov        rax, rbp
0000000000003872         pop        rbp
0000000000003873         pop        r12
0000000000003875         pop        r13
0000000000003877         pop        r14
0000000000003879         ret
                        ; endp
000000000000387a         align      128

                     loc_3880:
0000000000003880         mov        r14, rdi                                    ; CODE XREF=base32_encode_alloc+50
0000000000003883         mov        rdi, rbp                                    ; argument "__size" for method j_malloc
0000000000003886         mov        r12, rsi
0000000000003889         call       j_malloc                                    ; malloc
000000000000388e         test       rax, rax
0000000000003891         mov        qword [r13], rax
0000000000003895         je         loc_386e

0000000000003897         mov        rcx, rbp
000000000000389a         mov        rdx, rax
000000000000389d         mov        rbp, rbx
00000000000038a0         mov        rsi, r12
00000000000038a3         mov        rdi, r14
00000000000038a6         call       base32_encode                               ; base32_encode
00000000000038ab         pop        rbx
00000000000038ac         mov        rax, rbp
00000000000038af         pop        rbp
00000000000038b0         pop        r12
00000000000038b2         pop        r13
00000000000038b4         pop        r14
00000000000038b6         ret
                        ; endp
00000000000038b7         align      64                                          ; End of unwind block (FDE at 0x9274)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     isbase32:
00000000000038c0         lea        rax, qword [b32]                            ; Begin of unwind block (FDE at 0x92c0), b32, DATA XREF=main+1310
00000000000038c7         movzx      edi, dil
00000000000038cb         movzx      eax, byte [rax+rdi]
00000000000038cf         not        eax
00000000000038d1         shr        al, 0x7
00000000000038d4         ret
                        ; endp
00000000000038d5         align      32                                          ; End of unwind block (FDE at 0x92c0)

                     base32_decode_ctx_init:
00000000000038e0         mov        dword [rdi], 0x0                            ; Begin of unwind block (FDE at 0x92d4), CODE XREF=base32hex_decode_ctx_init_wrapper+8, base32_decode_ctx_init_wrapper+4
00000000000038e6         ret
                        ; endp
00000000000038e7         align      16                                          ; End of unwind block (FDE at 0x92d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_61: int8_t, -97
        ;    var_62: int8_t, -98


                     base32_decode_ctx:
00000000000038f0         push       r15                                         ; Begin of unwind block (FDE at 0x92e8), CODE XREF=base32_decode_ctx_wrapper+8, base32hex_decode_ctx_wrapper+121, base32_decode_alloc_ctx+90
00000000000038f2         push       r14
00000000000038f4         mov        r11, rdx
00000000000038f7         push       r13
00000000000038f9         push       r12
00000000000038fb         mov        r14, rdi
00000000000038fe         push       rbp
00000000000038ff         push       rbx
0000000000003900         mov        r12, rsi
0000000000003903         sub        rsp, 0x38
0000000000003907         mov        r15, qword [r8]
000000000000390a         mov        rbx, qword [fs:0x28]
0000000000003913         mov        qword [rsp+0x68+var_40], rbx
0000000000003918         xor        ebx, ebx
000000000000391a         test       rdi, rdi
000000000000391d         mov        qword [rsp+0x68+var_50], rcx
0000000000003922         mov        qword [rsp+0x68+var_58], r8
0000000000003927         mov        qword [rsp+0x68+var_48], r15
000000000000392c         setne      byte [rsp+0x68+var_61]
0000000000003931         je         loc_3b60

0000000000003937         test       rdx, rdx
000000000000393a         mov        edx, dword [rdi]
000000000000393c         setne      byte [rsp+0x68+var_62]
0000000000003941         movzx      eax, byte [rsp+0x68+var_62]
0000000000003946         test       edx, edx
0000000000003948         sete       r13b
000000000000394c         and        r13d, eax

                     loc_394f:
000000000000394f         lea        rax, qword [r14+4]                          ; CODE XREF=base32_decode_ctx+635
0000000000003953         lea        rbp, qword [rsp+0x68+var_48]
0000000000003958         lea        rbx, qword [rsp+0x68+var_50]
000000000000395d         mov        qword [rsp+0x68+var_60], rax

                     loc_3962:
0000000000003962         test       r13b, r13b                                  ; CODE XREF=base32_decode_ctx+592
0000000000003965         mov        rdx, r15
0000000000003968         jne        loc_3a3d

                     loc_396e:
000000000000396e         test       r11, r11                                    ; CODE XREF=base32_decode_ctx+359
0000000000003971         sete       al
0000000000003974         and        al, byte [rsp+0x68+var_62]
0000000000003978         jne        loc_3a00

                     loc_397e:
000000000000397e         test       r11, r11                                    ; CODE XREF=base32_decode_ctx+266
0000000000003981         je         loc_3a60

0000000000003987         cmp        byte [r12], 0xa
000000000000398c         je         loc_3b30

0000000000003992         sub        rdx, r15
0000000000003995         add        qword [rsp+0x68+var_50], rdx
000000000000399a         test       r14, r14
000000000000399d         mov        qword [rsp+0x68+var_48], r15
00000000000039a2         lea        r15, qword [r12+r11]
00000000000039a6         jne        loc_3a79

                     loc_39ac:
00000000000039ac         mov        rdi, r12                                    ; CODE XREF=base32_decode_ctx+617

                     loc_39af:
00000000000039af         cmp        r11, 0x7                                    ; CODE XREF=base32_decode_ctx+465, base32_decode_ctx+560
00000000000039b3         ja         loc_39c7

00000000000039b5         cmp        byte [rsp+0x68+var_61], 0x0
00000000000039ba         je         loc_39c7

00000000000039bc         cmp        byte [rsp+0x68+var_62], 0x0
00000000000039c1         jne        loc_3ac7

                     loc_39c7:
00000000000039c7         mov        rcx, rbp                                    ; CODE XREF=base32_decode_ctx+195, base32_decode_ctx+202, base32_decode_ctx+666
00000000000039ca         mov        rdx, rbx
00000000000039cd         mov        rsi, r11
00000000000039d0         call       decode_8                                    ; decode_8
00000000000039d5         test       al, al
00000000000039d7         je         loc_3b8f

00000000000039dd         mov        r11, r15
00000000000039e0         mov        r15, qword [rsp+0x68+var_48]
00000000000039e5         sub        r11, r12
00000000000039e8         test       r13b, r13b
00000000000039eb         mov        rdx, r15
00000000000039ee         jne        loc_3a3d

00000000000039f0         test       r11, r11
00000000000039f3         sete       al
00000000000039f6         and        al, byte [rsp+0x68+var_62]
00000000000039fa         je         loc_397e

00000000000039fc         nop        dword [rax]

                     loc_3a00:
0000000000003a00         mov        rbx, qword [rsp+0x68+var_58]                ; CODE XREF=base32_decode_ctx+136, base32_decode_ctx+481, base32_decode_ctx+648, base32_decode_ctx+676
0000000000003a05         sub        qword [rbx], rdx
0000000000003a08         mov        rbx, qword [rsp+0x68+var_40]
0000000000003a0d         xor        rbx, qword [fs:0x28]
0000000000003a16         jne        loc_3b99

0000000000003a1c         add        rsp, 0x38
0000000000003a20         pop        rbx
0000000000003a21         pop        rbp
0000000000003a22         pop        r12
0000000000003a24         pop        r13
0000000000003a26         pop        r14
0000000000003a28         pop        r15
0000000000003a2a         ret
                        ; endp
0000000000003a2b         align      16

                     loc_3a30:
0000000000003a30         mov        r15, qword [rsp+0x68+var_48]                ; CODE XREF=base32_decode_ctx+352
0000000000003a35         add        r12, 0x8
0000000000003a39         sub        r11, 0x8

                     loc_3a3d:
0000000000003a3d         mov        rcx, rbp                                    ; CODE XREF=base32_decode_ctx+120, base32_decode_ctx+254
0000000000003a40         mov        rdx, rbx
0000000000003a43         mov        rsi, r11
0000000000003a46         mov        rdi, r12
0000000000003a49         call       decode_8                                    ; decode_8
0000000000003a4e         test       al, al
0000000000003a50         jne        loc_3a30

0000000000003a52         mov        rdx, qword [rsp+0x68+var_48]
0000000000003a57         jmp        loc_396e
0000000000003a5c         align      32

                     loc_3a60:
0000000000003a60         sub        rdx, r15                                    ; CODE XREF=base32_decode_ctx+145
0000000000003a63         add        qword [rsp+0x68+var_50], rdx
0000000000003a68         test       r14, r14
0000000000003a6b         mov        qword [rsp+0x68+var_48], r15
0000000000003a70         je         loc_3b70

0000000000003a76         mov        r15, r12

                     loc_3a79:
0000000000003a79         mov        eax, dword [r14]                            ; CODE XREF=base32_decode_ctx+182
0000000000003a7c         cmp        eax, 0x8
0000000000003a7f         je         loc_3ae0

0000000000003a81         test       eax, eax
0000000000003a83         je         loc_3ae7

                     loc_3a85:
0000000000003a85         cmp        r12, r15                                    ; CODE XREF=base32_decode_ctx+535
0000000000003a88         jae        loc_3ab6

0000000000003a8a         nop        word [rax+rax]

                     loc_3a90:
0000000000003a90         add        r12, 0x1                                    ; CODE XREF=base32_decode_ctx+452
0000000000003a94         movzx      edx, byte [r12-1]
0000000000003a9a         cmp        dl, 0xa
0000000000003a9d         je         loc_3ab1

0000000000003a9f         lea        ecx, dword [rax+1]
0000000000003aa2         cmp        ecx, 0x8
0000000000003aa5         mov        dword [r14], ecx
0000000000003aa8         mov        byte [r14+rax+4], dl
0000000000003aad         je         loc_3b10

0000000000003aaf         mov        eax, ecx

                     loc_3ab1:
0000000000003ab1         cmp        r12, r15                                    ; CODE XREF=base32_decode_ctx+429
0000000000003ab4         jne        loc_3a90

                     loc_3ab6:
0000000000003ab6         mov        r11d, eax                                   ; CODE XREF=base32_decode_ctx+408
0000000000003ab9         mov        rdi, qword [rsp+0x68+var_60]
0000000000003abe         test       r11, r11
0000000000003ac1         jne        loc_39af

                     loc_3ac7:
0000000000003ac7         mov        rdx, qword [rsp+0x68+var_48]                ; CODE XREF=base32_decode_ctx+209, base32_decode_ctx+566
0000000000003acc         mov        eax, 0x1
0000000000003ad1         jmp        loc_3a00
0000000000003ad6         align      32

                     loc_3ae0:
0000000000003ae0         mov        dword [r14], 0x0                            ; CODE XREF=base32_decode_ctx+399

                     loc_3ae7:
0000000000003ae7         cmp        r11, 0x7                                    ; CODE XREF=base32_decode_ctx+403
0000000000003aeb         jle        loc_3b04

0000000000003aed         mov        edx, 0x8                                    ; argument "__n" for method j_memchr
0000000000003af2         mov        esi, 0xa                                    ; argument "__c" for method j_memchr
0000000000003af7         mov        rdi, r12                                    ; argument "__s" for method j_memchr
0000000000003afa         call       j_memchr                                    ; memchr
0000000000003aff         test       rax, rax
0000000000003b02         je         loc_3b7d

                     loc_3b04:
0000000000003b04         mov        eax, dword [r14]                            ; CODE XREF=base32_decode_ctx+507
0000000000003b07         jmp        loc_3a85
0000000000003b0c         align      16

                     loc_3b10:
0000000000003b10         mov        eax, 0x8                                    ; CODE XREF=base32_decode_ctx+445
0000000000003b15         mov        rdi, qword [rsp+0x68+var_60]
0000000000003b1a         mov        r11d, eax
0000000000003b1d         test       r11, r11
0000000000003b20         jne        loc_39af

0000000000003b26         jmp        loc_3ac7
0000000000003b28         align      16

                     loc_3b30:
0000000000003b30         test       r14, r14                                    ; CODE XREF=base32_decode_ctx+156
0000000000003b33         je         loc_3b48

0000000000003b35         add        r12, 0x1
0000000000003b39         sub        r11, 0x1
0000000000003b3d         mov        r15, rdx
0000000000003b40         jmp        loc_3962
0000000000003b45         align      8

                     loc_3b48:
0000000000003b48         sub        rdx, r15                                    ; CODE XREF=base32_decode_ctx+579
0000000000003b4b         mov        qword [rsp+0x68+var_48], r15
0000000000003b50         add        qword [rsp+0x68+var_50], rdx
0000000000003b55         lea        r15, qword [r12+r11]
0000000000003b59         jmp        loc_39ac
0000000000003b5e         align      32

                     loc_3b60:
0000000000003b60         mov        r13d, 0x1                                   ; CODE XREF=base32_decode_ctx+65
0000000000003b66         mov        byte [rsp+0x68+var_62], 0x1
0000000000003b6b         jmp        loc_394f

                     loc_3b70:
0000000000003b70         mov        rdx, r15                                    ; CODE XREF=base32_decode_ctx+384
0000000000003b73         mov        eax, 0x1
0000000000003b78         jmp        loc_3a00

                     loc_3b7d:
0000000000003b7d         mov        rdi, r12                                    ; CODE XREF=base32_decode_ctx+530
0000000000003b80         mov        r11d, 0x8
0000000000003b86         add        r12, 0x8
0000000000003b8a         jmp        loc_39c7

                     loc_3b8f:
0000000000003b8f         mov        rdx, qword [rsp+0x68+var_48]                ; CODE XREF=base32_decode_ctx+231
0000000000003b94         jmp        loc_3a00

                     loc_3b99:
0000000000003b99         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=base32_decode_ctx+294
                        ; endp
0000000000003b9e         align      32                                          ; End of unwind block (FDE at 0x92e8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56
        ;    var_39: int8_t, -57


                     base32_decode_alloc_ctx:
0000000000003ba0         push       r14                                         ; Begin of unwind block (FDE at 0x9334)
0000000000003ba2         push       r13
0000000000003ba4         mov        r14, rdx
0000000000003ba7         push       r12
0000000000003ba9         push       rbp
0000000000003baa         mov        r12, rdi
0000000000003bad         push       rbx
0000000000003bae         mov        r13, rsi
0000000000003bb1         mov        rbx, rcx
0000000000003bb4         mov        rbp, r8
0000000000003bb7         sub        rsp, 0x20
0000000000003bbb         mov        rax, qword [fs:0x28]
0000000000003bc4         mov        qword [rsp+0x48+var_30], rax
0000000000003bc9         xor        eax, eax
0000000000003bcb         mov        rax, rdx
0000000000003bce         shr        rax, 0x3
0000000000003bd2         lea        rdi, qword [rax+rax*4+5]                    ; argument "__size" for method j_malloc
0000000000003bd7         mov        qword [rsp+0x48+var_38], rdi
0000000000003bdc         call       j_malloc                                    ; malloc
0000000000003be1         test       rax, rax
0000000000003be4         mov        qword [rbx], rax
0000000000003be7         je         loc_3c18

0000000000003be9         lea        r8, qword [rsp+0x48+var_38]
0000000000003bee         mov        rcx, rax
0000000000003bf1         mov        rdx, r14
0000000000003bf4         mov        rsi, r13
0000000000003bf7         mov        rdi, r12
0000000000003bfa         call       base32_decode_ctx                           ; base32_decode_ctx
0000000000003bff         test       al, al
0000000000003c01         je         loc_3c40

0000000000003c03         test       rbp, rbp
0000000000003c06         je         loc_3c18

0000000000003c08         mov        rdx, qword [rsp+0x48+var_38]
0000000000003c0d         mov        qword [rbp], rdx
0000000000003c11         jmp        loc_3c1d
0000000000003c13         align      8

                     loc_3c18:
0000000000003c18         mov        eax, 0x1                                    ; CODE XREF=base32_decode_alloc_ctx+71, base32_decode_alloc_ctx+102

                     loc_3c1d:
0000000000003c1d         mov        rcx, qword [rsp+0x48+var_30]                ; CODE XREF=base32_decode_alloc_ctx+113, base32_decode_alloc_ctx+184
0000000000003c22         xor        rcx, qword [fs:0x28]
0000000000003c2b         jne        loc_3c5a

0000000000003c2d         add        rsp, 0x20
0000000000003c31         pop        rbx
0000000000003c32         pop        rbp
0000000000003c33         pop        r12
0000000000003c35         pop        r13
0000000000003c37         pop        r14
0000000000003c39         ret
                        ; endp
0000000000003c3a         align      64

                     loc_3c40:
0000000000003c40         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=base32_decode_alloc_ctx+97
0000000000003c43         mov        byte [rsp+0x48+var_39], al
0000000000003c47         call       j_free                                      ; free
0000000000003c4c         mov        qword [rbx], 0x0
0000000000003c53         movzx      eax, byte [rsp+0x48+var_39]
0000000000003c58         jmp        loc_3c1d

                     loc_3c5a:
0000000000003c5a         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=base32_decode_alloc_ctx+139
                        ; endp
0000000000003c5f         align      32                                          ; End of unwind block (FDE at 0x9334)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     decode_4:
0000000000003c60         xor        eax, eax                                    ; Begin of unwind block (FDE at 0x937c), CODE XREF=base64_decode_ctx+228, base64_decode_ctx+353
0000000000003c62         cmp        rsi, 0x1
0000000000003c66         jbe        loc_3cf9

0000000000003c6c         movzx      r8d, byte [rdi]
0000000000003c70         lea        r9, qword [b64]                             ; b64
0000000000003c77         movzx      r8d, byte [r9+r8]
0000000000003c7c         test       r8b, r8b
0000000000003c7f         js         loc_3cf9

0000000000003c81         movzx      r10d, byte [rdi+1]
0000000000003c86         movzx      r10d, byte [r9+r10]
0000000000003c8b         test       r10b, r10b
0000000000003c8e         js         loc_3cf9

0000000000003c90         cmp        qword [rcx], 0x0
0000000000003c94         mov        rax, qword [rdx]
0000000000003c97         jne        loc_3d10

                     loc_3c99:
0000000000003c99         cmp        rsi, 0x2                                    ; CODE XREF=decode_4+202
0000000000003c9d         je         loc_3d06

0000000000003c9f         movzx      r8d, byte [rdi+2]
0000000000003ca4         cmp        r8b, 0x3d
0000000000003ca8         je         loc_3d00

0000000000003caa         movzx      r8d, byte [r9+r8]
0000000000003caf         test       r8b, r8b
0000000000003cb2         js         loc_3d06

0000000000003cb4         cmp        qword [rcx], 0x0
0000000000003cb8         jne        loc_3d30

                     loc_3cba:
0000000000003cba         cmp        rsi, 0x3                                    ; CODE XREF=decode_4+234
0000000000003cbe         je         loc_3d06

0000000000003cc0         movzx      edi, byte [rdi+3]
0000000000003cc4         cmp        dil, 0x3d
0000000000003cc8         je         loc_3d60

0000000000003cce         movzx      esi, byte [r9+rdi]
0000000000003cd3         test       sil, sil
0000000000003cd6         js         loc_3d06

0000000000003cd8         cmp        qword [rcx], 0x0
0000000000003cdc         je         loc_3cf1

0000000000003cde         shl        r8d, 0x6
0000000000003ce2         add        rax, 0x1
0000000000003ce6         or         r8d, esi
0000000000003ce9         mov        byte [rax-1], r8b
0000000000003ced         sub        qword [rcx], 0x1

                     loc_3cf1:
0000000000003cf1         mov        qword [rdx], rax                            ; CODE XREF=decode_4+124, decode_4+246, decode_4+262
0000000000003cf4         mov        eax, 0x1

                     loc_3cf9:
0000000000003cf9         ret                                                    ; CODE XREF=decode_4+6, decode_4+31, decode_4+46
                        ; endp
0000000000003cfb         align      256

                     loc_3d00:
0000000000003d00         cmp        rsi, 0x4                                    ; CODE XREF=decode_4+72
0000000000003d04         je         loc_3d50

                     loc_3d06:
0000000000003d06         mov        qword [rdx], rax                            ; CODE XREF=decode_4+61, decode_4+82, decode_4+94, decode_4+118, decode_4+244, decode_4+260
0000000000003d09         xor        eax, eax
0000000000003d0b         ret
                        ; endp
0000000000003d0c         align      16

                     loc_3d10:
0000000000003d10         mov        r11d, r10d                                  ; CODE XREF=decode_4+55
0000000000003d13         shl        r8d, 0x2
0000000000003d17         add        rax, 0x1
0000000000003d1b         sar        r11b, 0x4
0000000000003d1f         or         r8d, r11d
0000000000003d22         mov        byte [rax-1], r8b
0000000000003d26         sub        qword [rcx], 0x1
0000000000003d2a         jmp        loc_3c99
0000000000003d2f         align      16

                     loc_3d30:
0000000000003d30         mov        r11d, r8d                                   ; CODE XREF=decode_4+88
0000000000003d33         shl        r10d, 0x4
0000000000003d37         add        rax, 0x1
0000000000003d3b         sar        r11b, 0x2
0000000000003d3f         or         r10d, r11d
0000000000003d42         mov        byte [rax-1], r10b
0000000000003d46         sub        qword [rcx], 0x1
0000000000003d4a         jmp        loc_3cba
0000000000003d4f         align      16

                     loc_3d50:
0000000000003d50         cmp        byte [rdi+3], 0x3d                          ; CODE XREF=decode_4+164
0000000000003d54         jne        loc_3d06

0000000000003d56         jmp        loc_3cf1
0000000000003d58         align      32

                     loc_3d60:
0000000000003d60         cmp        rsi, 0x4                                    ; CODE XREF=decode_4+104
0000000000003d64         jne        loc_3d06

0000000000003d66         jmp        loc_3cf1
0000000000003d68         align      16                                          ; End of unwind block (FDE at 0x937c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base64_encode:
0000000000003d70         test       cl, 0x3                                     ; Begin of unwind block (FDE at 0x9390), CODE XREF=base64url_encode+12, base64_encode_alloc+118, DATA XREF=main+1099
0000000000003d73         jne        loc_3d89

0000000000003d75         mov        rax, rcx
0000000000003d78         shr        rax, 0x2
0000000000003d7c         lea        rax, qword [rax+rax*2]
0000000000003d80         cmp        rax, rsi
0000000000003d83         je         loc_3e98

                     loc_3d89:
0000000000003d89         lea        r9, qword [b64c]                            ; "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/%s: %s", CODE XREF=base64_encode+3
0000000000003d90         jmp        loc_3e16
0000000000003d95         align      8

                     loc_3d98:
0000000000003d98         movzx      r8d, byte [rdi+1]                           ; CODE XREF=base64_encode+219
0000000000003d9d         mov        r10d, r8d
0000000000003da0         shr        r10b, 0x4
0000000000003da4         add        eax, r10d
0000000000003da7         and        eax, 0x3f
0000000000003daa         cmp        rcx, 0x2
0000000000003dae         movzx      eax, byte [r9+rax]
0000000000003db3         mov        byte [rdx+1], al
0000000000003db6         je         loc_3e92

0000000000003dbc         shl        r8d, 0x2
0000000000003dc0         cmp        rsi, 0x2
0000000000003dc4         je         loc_3e80

0000000000003dca         movzx      eax, byte [rdi+2]
0000000000003dce         mov        r10d, eax
0000000000003dd1         shr        r10b, 0x6
0000000000003dd5         add        r8d, r10d
0000000000003dd8         and        r8d, 0x3f
0000000000003ddc         cmp        rcx, 0x3
0000000000003de0         movzx      r8d, byte [r9+r8]
0000000000003de5         mov        byte [rdx+2], r8b
0000000000003de9         je         loc_3e92

0000000000003def         and        eax, 0x3f
0000000000003df2         cmp        rcx, 0x4
0000000000003df6         movzx      eax, byte [r9+rax]
0000000000003dfb         mov        byte [rdx+3], al
0000000000003dfe         je         loc_3e92

0000000000003e04         sub        rsi, 0x3
0000000000003e08         je         loc_3e0e

0000000000003e0a         add        rdi, 0x3

                     loc_3e0e:
0000000000003e0e         add        rdx, 0x4                                    ; CODE XREF=base64_encode+152, base64_encode+264
0000000000003e12         sub        rcx, 0x4

                     loc_3e16:
0000000000003e16         test       rsi, rsi                                    ; CODE XREF=base64_encode+32
0000000000003e19         je         loc_3f18

0000000000003e1f         test       rcx, rcx
0000000000003e22         je         loc_3f18

0000000000003e28         movzx      eax, byte [rdi]
0000000000003e2b         mov        r8d, eax
0000000000003e2e         shr        r8b, 0x2
0000000000003e32         and        r8d, 0x3f
0000000000003e36         cmp        rcx, 0x1
0000000000003e3a         movzx      r8d, byte [r9+r8]
0000000000003e3f         mov        byte [rdx], r8b
0000000000003e42         je         loc_3e92

0000000000003e44         shl        eax, 0x4
0000000000003e47         cmp        rsi, 0x1
0000000000003e4b         jne        loc_3d98

0000000000003e51         and        eax, 0x30
0000000000003e54         cmp        rcx, 0x2
0000000000003e58         movzx      eax, byte [r9+rax]
0000000000003e5d         mov        byte [rdx+1], al
0000000000003e60         je         loc_3e92

0000000000003e62         cmp        rcx, 0x3
0000000000003e66         mov        byte [rdx+2], 0x3d
0000000000003e6a         je         loc_3e92

                     loc_3e6c:
0000000000003e6c         cmp        rcx, 0x4                                    ; CODE XREF=base64_encode+288
0000000000003e70         mov        byte [rdx+3], 0x3d
0000000000003e74         je         loc_3e92

0000000000003e76         xor        esi, esi
0000000000003e78         jmp        loc_3e0e
0000000000003e7a         align      128

                     loc_3e80:
0000000000003e80         and        r8d, 0x3c                                   ; CODE XREF=base64_encode+84
0000000000003e84         cmp        rcx, 0x3
0000000000003e88         movzx      eax, byte [r9+r8]
0000000000003e8d         mov        byte [rdx+2], al
0000000000003e90         jne        loc_3e6c

                     loc_3e92:
0000000000003e92         ret                                                    ; CODE XREF=base64_encode+70, base64_encode+121, base64_encode+142, base64_encode+210, base64_encode+240, base64_encode+250, base64_encode+260, base64_encode+310, base64_encode+427
                        ; endp
0000000000003e94         align      8

                     loc_3e98:
0000000000003e98         test       rax, rax                                    ; CODE XREF=base64_encode+19
0000000000003e9b         lea        r8, qword [rdi+rax]
0000000000003e9f         lea        rcx, qword [b64c]                           ; "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/%s: %s"
0000000000003ea6         je         loc_3e92

0000000000003ea8         nop        dword [rax+rax]

                     loc_3eb0:
0000000000003eb0         movzx      eax, byte [rdi]                             ; CODE XREF=base64_encode+414
0000000000003eb3         add        rdi, 0x3
0000000000003eb7         add        rdx, 0x4
0000000000003ebb         mov        esi, eax
0000000000003ebd         shl        eax, 0x4
0000000000003ec0         shr        sil, 0x2
0000000000003ec4         and        esi, 0x3f
0000000000003ec7         movzx      esi, byte [rcx+rsi]
0000000000003ecb         mov        byte [rdx-4], sil
0000000000003ecf         movzx      esi, byte [rdi-2]
0000000000003ed3         mov        r9d, esi
0000000000003ed6         shr        r9b, 0x4
0000000000003eda         add        eax, r9d
0000000000003edd         and        eax, 0x3f
0000000000003ee0         movzx      eax, byte [rcx+rax]
0000000000003ee4         mov        byte [rdx-3], al
0000000000003ee7         movzx      eax, byte [rdi-1]
0000000000003eeb         mov        r9d, eax
0000000000003eee         and        eax, 0x3f
0000000000003ef1         shr        r9b, 0x6
0000000000003ef5         movzx      eax, byte [rcx+rax]
0000000000003ef9         lea        esi, dword [r9+rsi*4]
0000000000003efd         and        esi, 0x3f
0000000000003f00         movzx      esi, byte [rcx+rsi]
0000000000003f04         mov        byte [rdx-2], sil
0000000000003f08         cmp        r8, rdi
0000000000003f0b         mov        byte [rdx-1], al
0000000000003f0e         jne        loc_3eb0

0000000000003f10         ret
                        ; endp
0000000000003f12         align      8

                     loc_3f18:
0000000000003f18         test       rcx, rcx                                    ; CODE XREF=base64_encode+169, base64_encode+178
0000000000003f1b         je         loc_3e92

0000000000003f21         mov        byte [rdx], 0x0
0000000000003f24         ret
                        ; endp
0000000000003f25         align      16                                          ; End of unwind block (FDE at 0x9390)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base64_encode_alloc:
0000000000003f30         push       r14                                         ; Begin of unwind block (FDE at 0x93a4)
0000000000003f32         push       r13
0000000000003f34         mov        r13, rdx
0000000000003f37         lea        rdx, qword [rsi+2]
0000000000003f3b         push       r12
0000000000003f3d         push       rbp
0000000000003f3e         push       rbx
0000000000003f3f         movabs     rbx, 0xaaaaaaaaaaaaaaab
0000000000003f49         mov        rax, rdx
0000000000003f4c         mul        rbx
0000000000003f4f         shr        rdx, 0x1
0000000000003f52         lea        rbx, qword [rdx*4]
0000000000003f5a         lea        rbp, qword [rbx+1]
0000000000003f5e         cmp        rsi, rbp
0000000000003f61         jbe        loc_3f80

0000000000003f63         mov        qword [r13], 0x0
0000000000003f6b         xor        ebp, ebp

                     loc_3f6d:
0000000000003f6d         pop        rbx                                         ; CODE XREF=base64_encode_alloc+101
0000000000003f6e         mov        rax, rbp
0000000000003f71         pop        rbp
0000000000003f72         pop        r12
0000000000003f74         pop        r13
0000000000003f76         pop        r14
0000000000003f78         ret
                        ; endp
0000000000003f79         align      128

                     loc_3f80:
0000000000003f80         mov        r14, rdi                                    ; CODE XREF=base64_encode_alloc+49
0000000000003f83         mov        rdi, rbp                                    ; argument "__size" for method j_malloc
0000000000003f86         mov        r12, rsi
0000000000003f89         call       j_malloc                                    ; malloc
0000000000003f8e         test       rax, rax
0000000000003f91         mov        qword [r13], rax
0000000000003f95         je         loc_3f6d

0000000000003f97         mov        rcx, rbp
0000000000003f9a         mov        rdx, rax
0000000000003f9d         mov        rbp, rbx
0000000000003fa0         mov        rsi, r12
0000000000003fa3         mov        rdi, r14
0000000000003fa6         call       base64_encode                               ; base64_encode
0000000000003fab         pop        rbx
0000000000003fac         mov        rax, rbp
0000000000003faf         pop        rbp
0000000000003fb0         pop        r12
0000000000003fb2         pop        r13
0000000000003fb4         pop        r14
0000000000003fb6         ret
                        ; endp
0000000000003fb7         align      64                                          ; End of unwind block (FDE at 0x93a4)

                     isbase64:
0000000000003fc0         lea        rax, qword [b64]                            ; Begin of unwind block (FDE at 0x93f0), b64, CODE XREF=isbase64url+32, DATA XREF=main+1085
0000000000003fc7         movzx      edi, dil
0000000000003fcb         movzx      eax, byte [rax+rdi]
0000000000003fcf         not        eax
0000000000003fd1         shr        al, 0x7
0000000000003fd4         ret
                        ; endp
0000000000003fd5         align      32                                          ; End of unwind block (FDE at 0x93f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base64_decode_ctx_init:
0000000000003fe0         mov        dword [rdi], 0x0                            ; Begin of unwind block (FDE at 0x9404), CODE XREF=base64url_decode_ctx_init_wrapper+8, base64_decode_ctx_init_wrapper+4
0000000000003fe6         ret
                        ; endp
0000000000003fe7         align      16                                          ; End of unwind block (FDE at 0x9404)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_61: int8_t, -97
        ;    var_62: int8_t, -98
        ;    var_63: int8_t, -99


                     base64_decode_ctx:
0000000000003ff0         push       r15                                         ; Begin of unwind block (FDE at 0x9418), CODE XREF=base64_decode_ctx_wrapper+8, base64url_decode_ctx_wrapper+142, base64_decode_alloc_ctx+90
0000000000003ff2         push       r14
0000000000003ff4         mov        r14, rdi
0000000000003ff7         push       r13
0000000000003ff9         push       r12
0000000000003ffb         mov        r13, rdx
0000000000003ffe         push       rbp
0000000000003fff         push       rbx
0000000000004000         mov        r12, rsi                                    ; DATA XREF=sub_4ae0+88
0000000000004003         sub        rsp, 0x38
0000000000004007         mov        r15, qword [r8]
000000000000400a         mov        rbx, qword [fs:0x28]
0000000000004013         mov        qword [rsp+0x68+var_40], rbx
0000000000004018         xor        ebx, ebx
000000000000401a         test       rdi, rdi
000000000000401d         mov        qword [rsp+0x68+var_50], rcx
0000000000004022         mov        qword [rsp+0x68+var_58], r8
0000000000004027         mov        qword [rsp+0x68+var_48], r15
000000000000402c         setne      byte [rsp+0x68+var_61]
0000000000004031         je         loc_4260

0000000000004037         test       rdx, rdx
000000000000403a         mov        eax, dword [rdi]
000000000000403c         setne      byte [rsp+0x68+var_63]
0000000000004041         movzx      ebx, byte [rsp+0x68+var_63]
0000000000004046         test       eax, eax
0000000000004048         sete       al
000000000000404b         and        eax, ebx
000000000000404d         mov        byte [rsp+0x68+var_62], al

                     loc_4051:
0000000000004051         lea        rax, qword [r14+4]                          ; CODE XREF=base64_decode_ctx+634
0000000000004055         lea        rbp, qword [rsp+0x68+var_48]
000000000000405a         lea        rbx, qword [rsp+0x68+var_50]
000000000000405f         mov        qword [rsp+0x68+var_60], rax

                     loc_4064:
0000000000004064         cmp        byte [rsp+0x68+var_62], 0x0                 ; CODE XREF=base64_decode_ctx+592
0000000000004069         mov        rdx, r15
000000000000406c         jne        loc_4145

                     loc_4072:
0000000000004072         test       r13, r13                                    ; CODE XREF=base64_decode_ctx+367
0000000000004075         sete       al
0000000000004078         and        al, byte [rsp+0x68+var_63]
000000000000407c         jne        loc_4108

                     loc_4082:
0000000000004082         test       r13, r13                                    ; CODE XREF=base64_decode_ctx+272
0000000000004085         je         loc_4168

000000000000408b         cmp        byte [r12], 0xa
0000000000004090         je         loc_4230

0000000000004096         sub        rdx, r15
0000000000004099         add        qword [rsp+0x68+var_50], rdx
000000000000409e         test       r14, r14
00000000000040a1         mov        qword [rsp+0x68+var_48], r15
00000000000040a6         lea        r15, qword [r12+r13]
00000000000040aa         jne        loc_4181

                     loc_40b0:
00000000000040b0         mov        rdi, r12                                    ; CODE XREF=base64_decode_ctx+617

                     loc_40b3:
00000000000040b3         cmp        r13, 0x3                                    ; CODE XREF=base64_decode_ctx+473, base64_decode_ctx+560
00000000000040b7         ja         loc_40cb

00000000000040b9         cmp        byte [rsp+0x68+var_61], 0x0
00000000000040be         je         loc_40cb

00000000000040c0         cmp        byte [rsp+0x68+var_63], 0x0
00000000000040c5         jne        loc_41cf

                     loc_40cb:
00000000000040cb         mov        rcx, rbp                                    ; CODE XREF=base64_decode_ctx+199, base64_decode_ctx+206, base64_decode_ctx+665
00000000000040ce         mov        rdx, rbx
00000000000040d1         mov        rsi, r13
00000000000040d4         call       decode_4                                    ; decode_4
00000000000040d9         test       al, al
00000000000040db         je         loc_428e

00000000000040e1         sub        r15, r12
00000000000040e4         cmp        byte [rsp+0x68+var_62], 0x0
00000000000040e9         mov        r13, r15
00000000000040ec         mov        r15, qword [rsp+0x68+var_48]
00000000000040f1         mov        rdx, r15
00000000000040f4         jne        loc_4145

00000000000040f6         test       r13, r13
00000000000040f9         sete       al
00000000000040fc         and        al, byte [rsp+0x68+var_63]
0000000000004100         je         loc_4082

0000000000004102         nop        word [rax+rax]

                     loc_4108:
0000000000004108         mov        rbx, qword [rsp+0x68+var_58]                ; CODE XREF=base64_decode_ctx+140, base64_decode_ctx+489, base64_decode_ctx+647, base64_decode_ctx+675
000000000000410d         sub        qword [rbx], rdx
0000000000004110         mov        rbx, qword [rsp+0x68+var_40]
0000000000004115         xor        rbx, qword [fs:0x28]
000000000000411e         jne        loc_4298

0000000000004124         add        rsp, 0x38
0000000000004128         pop        rbx
0000000000004129         pop        rbp
000000000000412a         pop        r12
000000000000412c         pop        r13
000000000000412e         pop        r14
0000000000004130         pop        r15
0000000000004132         ret
                        ; endp
0000000000004133         align      8

                     loc_4138:
0000000000004138         mov        r15, qword [rsp+0x68+var_48]                ; CODE XREF=base64_decode_ctx+360
000000000000413d         add        r12, 0x4
0000000000004141         sub        r13, 0x4

                     loc_4145:
0000000000004145         mov        rcx, rbp                                    ; CODE XREF=base64_decode_ctx+124, base64_decode_ctx+260
0000000000004148         mov        rdx, rbx
000000000000414b         mov        rsi, r13
000000000000414e         mov        rdi, r12
0000000000004151         call       decode_4                                    ; decode_4
0000000000004156         test       al, al
0000000000004158         jne        loc_4138

000000000000415a         mov        rdx, qword [rsp+0x68+var_48]
000000000000415f         jmp        loc_4072
0000000000004164         align      8

                     loc_4168:
0000000000004168         sub        rdx, r15                                    ; CODE XREF=base64_decode_ctx+149
000000000000416b         add        qword [rsp+0x68+var_50], rdx
0000000000004170         test       r14, r14
0000000000004173         mov        qword [rsp+0x68+var_48], r15
0000000000004178         je         loc_426f

000000000000417e         mov        r15, r12

                     loc_4181:
0000000000004181         mov        eax, dword [r14]                            ; CODE XREF=base64_decode_ctx+186
0000000000004184         cmp        eax, 0x4
0000000000004187         je         loc_41e0

0000000000004189         test       eax, eax
000000000000418b         je         loc_41e7

                     loc_418d:
000000000000418d         cmp        r12, r15                                    ; CODE XREF=base64_decode_ctx+535
0000000000004190         jae        loc_41be

0000000000004192         nop        word [rax+rax]

                     loc_4198:
0000000000004198         add        r12, 0x1                                    ; CODE XREF=base64_decode_ctx+460
000000000000419c         movzx      edx, byte [r12-1]
00000000000041a2         cmp        dl, 0xa
00000000000041a5         je         loc_41b9

00000000000041a7         lea        ecx, dword [rax+1]
00000000000041aa         cmp        ecx, 0x4
00000000000041ad         mov        dword [r14], ecx
00000000000041b0         mov        byte [r14+rax+4], dl
00000000000041b5         je         loc_4210

00000000000041b7         mov        eax, ecx

                     loc_41b9:
00000000000041b9         cmp        r12, r15                                    ; CODE XREF=base64_decode_ctx+437
00000000000041bc         jne        loc_4198

                     loc_41be:
00000000000041be         mov        r13d, eax                                   ; CODE XREF=base64_decode_ctx+416
00000000000041c1         mov        rdi, qword [rsp+0x68+var_60]
00000000000041c6         test       r13, r13
00000000000041c9         jne        loc_40b3

                     loc_41cf:
00000000000041cf         mov        rdx, qword [rsp+0x68+var_48]                ; CODE XREF=base64_decode_ctx+213, base64_decode_ctx+566
00000000000041d4         mov        eax, 0x1
00000000000041d9         jmp        loc_4108
00000000000041de         align      32

                     loc_41e0:
00000000000041e0         mov        dword [r14], 0x0                            ; CODE XREF=base64_decode_ctx+407

                     loc_41e7:
00000000000041e7         cmp        r13, 0x3                                    ; CODE XREF=base64_decode_ctx+411
00000000000041eb         jle        loc_4204

00000000000041ed         mov        edx, 0x4                                    ; argument "__n" for method j_memchr
00000000000041f2         mov        esi, 0xa                                    ; argument "__c" for method j_memchr
00000000000041f7         mov        rdi, r12                                    ; argument "__s" for method j_memchr
00000000000041fa         call       j_memchr                                    ; memchr
00000000000041ff         test       rax, rax
0000000000004202         je         loc_427c

                     loc_4204:
0000000000004204         mov        eax, dword [r14]                            ; CODE XREF=base64_decode_ctx+507
0000000000004207         jmp        loc_418d
000000000000420c         align      16

                     loc_4210:
0000000000004210         mov        eax, 0x4                                    ; CODE XREF=base64_decode_ctx+453
0000000000004215         mov        rdi, qword [rsp+0x68+var_60]
000000000000421a         mov        r13d, eax
000000000000421d         test       r13, r13
0000000000004220         jne        loc_40b3

0000000000004226         jmp        loc_41cf
0000000000004228         align      16

                     loc_4230:
0000000000004230         test       r14, r14                                    ; CODE XREF=base64_decode_ctx+160
0000000000004233         je         loc_4248

0000000000004235         add        r12, 0x1
0000000000004239         sub        r13, 0x1
000000000000423d         mov        r15, rdx
0000000000004240         jmp        loc_4064
0000000000004245         align      8

                     loc_4248:
0000000000004248         sub        rdx, r15                                    ; CODE XREF=base64_decode_ctx+579
000000000000424b         mov        qword [rsp+0x68+var_48], r15
0000000000004250         add        qword [rsp+0x68+var_50], rdx
0000000000004255         lea        r15, qword [r12+r13]
0000000000004259         jmp        loc_40b0
000000000000425e         align      32

                     loc_4260:
0000000000004260         mov        byte [rsp+0x68+var_62], 0x1                 ; CODE XREF=base64_decode_ctx+65
0000000000004265         mov        byte [rsp+0x68+var_63], 0x1
000000000000426a         jmp        loc_4051

                     loc_426f:
000000000000426f         mov        rdx, r15                                    ; CODE XREF=base64_decode_ctx+392
0000000000004272         mov        eax, 0x1
0000000000004277         jmp        loc_4108

                     loc_427c:
000000000000427c         mov        rdi, r12                                    ; CODE XREF=base64_decode_ctx+530
000000000000427f         mov        r13d, 0x4
0000000000004285         add        r12, 0x4
0000000000004289         jmp        loc_40cb

                     loc_428e:
000000000000428e         mov        rdx, qword [rsp+0x68+var_48]                ; CODE XREF=base64_decode_ctx+235
0000000000004293         jmp        loc_4108

                     loc_4298:
0000000000004298         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=base64_decode_ctx+302
                        ; endp
000000000000429d         align      32                                          ; End of unwind block (FDE at 0x9418)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56
        ;    var_39: int8_t, -57


                     base64_decode_alloc_ctx:
00000000000042a0         push       r14                                         ; Begin of unwind block (FDE at 0x9464)
00000000000042a2         push       r13
00000000000042a4         mov        r14, rdx
00000000000042a7         push       r12
00000000000042a9         push       rbp
00000000000042aa         mov        r12, rdi
00000000000042ad         push       rbx
00000000000042ae         mov        r13, rsi
00000000000042b1         mov        rbx, rcx
00000000000042b4         mov        rbp, r8
00000000000042b7         sub        rsp, 0x20
00000000000042bb         mov        rax, qword [fs:0x28]
00000000000042c4         mov        qword [rsp+0x48+var_30], rax
00000000000042c9         xor        eax, eax
00000000000042cb         mov        rax, rdx
00000000000042ce         shr        rax, 0x2
00000000000042d2         lea        rdi, qword [rax+rax*2+3]                    ; argument "__size" for method j_malloc
00000000000042d7         mov        qword [rsp+0x48+var_38], rdi
00000000000042dc         call       j_malloc                                    ; malloc
00000000000042e1         test       rax, rax
00000000000042e4         mov        qword [rbx], rax
00000000000042e7         je         loc_4318

00000000000042e9         lea        r8, qword [rsp+0x48+var_38]
00000000000042ee         mov        rcx, rax
00000000000042f1         mov        rdx, r14
00000000000042f4         mov        rsi, r13
00000000000042f7         mov        rdi, r12
00000000000042fa         call       base64_decode_ctx                           ; base64_decode_ctx
00000000000042ff         test       al, al
0000000000004301         je         loc_4340

0000000000004303         test       rbp, rbp
0000000000004306         je         loc_4318

0000000000004308         mov        rdx, qword [rsp+0x48+var_38]
000000000000430d         mov        qword [rbp], rdx
0000000000004311         jmp        loc_431d
0000000000004313         align      8

                     loc_4318:
0000000000004318         mov        eax, 0x1                                    ; CODE XREF=base64_decode_alloc_ctx+71, base64_decode_alloc_ctx+102

                     loc_431d:
000000000000431d         mov        rcx, qword [rsp+0x48+var_30]                ; CODE XREF=base64_decode_alloc_ctx+113, base64_decode_alloc_ctx+184
0000000000004322         xor        rcx, qword [fs:0x28]
000000000000432b         jne        loc_435a

000000000000432d         add        rsp, 0x20
0000000000004331         pop        rbx
0000000000004332         pop        rbp
0000000000004333         pop        r12
0000000000004335         pop        r13
0000000000004337         pop        r14
0000000000004339         ret
                        ; endp
000000000000433a         align      64

                     loc_4340:
0000000000004340         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=base64_decode_alloc_ctx+97
0000000000004343         mov        byte [rsp+0x48+var_39], al
0000000000004347         call       j_free                                      ; free
000000000000434c         mov        qword [rbx], 0x0
0000000000004353         movzx      eax, byte [rsp+0x48+var_39]
0000000000004358         jmp        loc_431d

                     loc_435a:
000000000000435a         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=base64_decode_alloc_ctx+139
                        ; endp
000000000000435f         align      32                                          ; End of unwind block (FDE at 0x9464)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
0000000000004360         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0x94ac), file_name
0000000000004367         ret
                        ; endp
0000000000004368         align      16                                          ; End of unwind block (FDE at 0x94ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
0000000000004370         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x94c0), ignore_EPIPE
0000000000004377         ret
                        ; endp
0000000000004378         align      128                                         ; End of unwind block (FDE at 0x94c0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
0000000000004380         push       rbp                                         ; Begin of unwind block (FDE at 0x94d4), DATA XREF=main+106
0000000000004381         push       rbx
0000000000004382         sub        rsp, 0x8
0000000000004386         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000438d         call       close_stream                                ; close_stream
0000000000004392         test       eax, eax
0000000000004394         je         loc_43ac

0000000000004396         call       j___errno_location                          ; __errno_location
000000000000439b         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
00000000000043a2         mov        rbx, rax
00000000000043a5         je         loc_43c3

00000000000043a7         cmp        dword [rax], 0x20
00000000000043aa         jne        loc_43c3

                     loc_43ac:
00000000000043ac         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
00000000000043b3         call       close_stream                                ; close_stream
00000000000043b8         test       eax, eax
00000000000043ba         jne        loc_4402

00000000000043bc         add        rsp, 0x8
00000000000043c0         pop        rbx
00000000000043c1         pop        rbp
00000000000043c2         ret
                        ; endp

                     loc_43c3:
00000000000043c3         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
00000000000043ca         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000043cc         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000043d1         call       j_dcgettext                                 ; dcgettext
00000000000043d6         mov        rdi, qword [file_name]                      ; file_name
00000000000043dd         mov        rbp, rax
00000000000043e0         test       rdi, rdi
00000000000043e3         je         loc_440d

00000000000043e5         call       quotearg_colon                              ; quotearg_colon
00000000000043ea         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
00000000000043ec         lea        rdx, qword [b64c+64]                        ; argument "__format" for method j_error, 0x8040
00000000000043f3         mov        rcx, rax
00000000000043f6         mov        r8, rbp
00000000000043f9         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000043fb         xor        eax, eax
00000000000043fd         call       j_error                                     ; error

                     loc_4402:
0000000000004402         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
0000000000004408         call       j__exit                                     ; _exit
                        ; endp

                     loc_440d:
000000000000440d         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
000000000000440f         lea        rdx, qword [b64c+68]                        ; argument "__format" for method j_error, 0x8044
0000000000004416         mov        rcx, rax
0000000000004419         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000441b         xor        eax, eax
000000000000441d         call       j_error                                     ; error
0000000000004422         jmp        loc_4402
0000000000004424         align      16                                          ; End of unwind block (FDE at 0x94d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fdadvise:
0000000000004430         jmp        j_posix_fadvise                             ; posix_fadvise, Begin of unwind block (FDE at 0x9504)
                        ; endp
0000000000004435         align      64                                          ; End of unwind block (FDE at 0x9504)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fadvise:
0000000000004440         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x9518), CODE XREF=main+594
0000000000004443         je         loc_4460

0000000000004445         push       rbx
0000000000004446         mov        ebx, esi
0000000000004448         call       j_fileno                                    ; fileno
000000000000444d         mov        ecx, ebx                                    ; argument "__advise" for method j_posix_fadvise
000000000000444f         xor        edx, edx                                    ; argument "__len" for method j_posix_fadvise
0000000000004451         xor        esi, esi                                    ; argument "__offset" for method j_posix_fadvise
0000000000004453         pop        rbx
0000000000004454         mov        edi, eax                                    ; argument "__fd" for method j_posix_fadvise
0000000000004456         jmp        j_posix_fadvise                             ; posix_fadvise
                        ; endp
000000000000445b         align      32

                     loc_4460:
0000000000004460         ret                                                    ; CODE XREF=fadvise+3
                        ; endp
0000000000004462         align      16                                          ; End of unwind block (FDE at 0x9518)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000004470         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x9534), CODE XREF=main+53
0000000000004473         push       rbx
0000000000004474         je         loc_44ed

0000000000004476         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
000000000000447b         mov        rbx, rdi
000000000000447e         call       j_strrchr                                   ; strrchr
0000000000004483         test       rax, rax
0000000000004486         je         loc_44dd

0000000000004488         lea        r8, qword [rax+1]
000000000000448c         mov        rdx, r8
000000000000448f         sub        rdx, rbx
0000000000004492         cmp        rdx, 0x6
0000000000004496         jle        loc_44dd

0000000000004498         lea        rsi, qword [rax-6]
000000000000449c         lea        rdi, qword [aLibs]                          ; "/.libs/"
00000000000044a3         mov        ecx, 0x7
00000000000044a8         rep  cmpsb byte [rsi], byte [rdi]
00000000000044aa         seta       dl
00000000000044ad         sbb        dl, 0x0
00000000000044b0         test       dl, dl
00000000000044b2         jne        loc_44dd

00000000000044b4         lea        rdi, qword [aLibs+8]                        ; 0x8088
00000000000044bb         mov        ecx, 0x3
00000000000044c0         mov        rsi, r8
00000000000044c3         mov        rbx, r8
00000000000044c6         rep  cmpsb byte [rsi], byte [rdi]
00000000000044c8         seta       dl
00000000000044cb         sbb        dl, 0x0
00000000000044ce         test       dl, dl
00000000000044d0         jne        loc_44dd

00000000000044d2         lea        rbx, qword [rax+4]
00000000000044d6         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_44dd:
00000000000044dd         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
00000000000044e4         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
00000000000044eb         pop        rbx
00000000000044ec         ret
                        ; endp

                     loc_44ed:
00000000000044ed         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
00000000000044f4         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
00000000000044fb         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
0000000000004500         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
0000000000004505         call       j_fwrite                                    ; fwrite
000000000000450a         call       j_abort                                     ; abort
                        ; endp
000000000000450f         align      16                                          ; End of unwind block (FDE at 0x9534)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
0000000000004510         push       rbp                                         ; Begin of unwind block (FDE at 0x9554), CODE XREF=sub_4d40+2597, sub_4d40+2619
0000000000004511         push       rbx
0000000000004512         mov        rbp, rdi
0000000000004515         mov        ebx, esi
0000000000004517         sub        rsp, 0x8
000000000000451b         call       locale_charset                              ; locale_charset
0000000000004520         movzx      edx, byte [rax]
0000000000004523         and        edx, 0xffffffdf
0000000000004526         cmp        dl, 0x55
0000000000004529         je         loc_45a0

000000000000452b         cmp        dl, 0x47
000000000000452e         je         loc_4550

                     loc_4530:
0000000000004530         lea        rax, qword [aLibs+27]                       ; 0x809b, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
0000000000004537         lea        rdx, qword [aLibs+29]                       ; 0x809d
000000000000453e         cmp        ebx, 0x9
0000000000004541         cmovne     rax, rdx
0000000000004545         add        rsp, 0x8
0000000000004549         pop        rbx
000000000000454a         pop        rbp
000000000000454b         ret
                        ; endp
000000000000454c         align      16

                     loc_4550:
0000000000004550         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
0000000000004554         and        edx, 0xffffffdf
0000000000004557         cmp        dl, 0x42
000000000000455a         jne        loc_4530

000000000000455c         cmp        byte [rax+2], 0x31
0000000000004560         jne        loc_4530

0000000000004562         cmp        byte [rax+3], 0x38
0000000000004566         jne        loc_4530

0000000000004568         cmp        byte [rax+4], 0x30
000000000000456c         jne        loc_4530

000000000000456e         cmp        byte [rax+5], 0x33
0000000000004572         jne        loc_4530

0000000000004574         cmp        byte [rax+6], 0x30
0000000000004578         jne        loc_4530

000000000000457a         cmp        byte [rax+7], 0x0
000000000000457e         jne        loc_4530

0000000000004580         cmp        byte [rbp], 0x60
0000000000004584         lea        rax, qword [aLibs+20]                       ; 0x8094
000000000000458b         lea        rdx, qword [aLibs+24]                       ; 0x8098
0000000000004592         cmovne     rax, rdx
0000000000004596         add        rsp, 0x8
000000000000459a         pop        rbx
000000000000459b         pop        rbp
000000000000459c         ret
                        ; endp
000000000000459d         align      32

                     loc_45a0:
00000000000045a0         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
00000000000045a4         and        edx, 0xffffffdf
00000000000045a7         cmp        dl, 0x54
00000000000045aa         jne        loc_4530

00000000000045ac         movzx      edx, byte [rax+2]
00000000000045b0         and        edx, 0xffffffdf
00000000000045b3         cmp        dl, 0x46
00000000000045b6         jne        loc_4530

00000000000045bc         cmp        byte [rax+3], 0x2d
00000000000045c0         jne        loc_4530

00000000000045c6         cmp        byte [rax+4], 0x38
00000000000045ca         jne        loc_4530

00000000000045d0         cmp        byte [rax+5], 0x0
00000000000045d4         jne        loc_4530

00000000000045da         cmp        byte [rbp], 0x60
00000000000045de         lea        rax, qword [aLibs+12]                       ; 0x808c
00000000000045e5         lea        rdx, qword [aLibs+16]                       ; 0x8090
00000000000045ec         cmovne     rax, rdx
00000000000045f0         add        rsp, 0x8
00000000000045f4         pop        rbx
00000000000045f5         pop        rbp
00000000000045f6         ret
                        ; endp
00000000000045f7         align      512                                         ; End of unwind block (FDE at 0x9554)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
0000000000004600         push       r15                                         ; Begin of unwind block (FDE at 0x9598), CODE XREF=sub_4d40+1165, sub_4d40+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
0000000000004602         push       r14
0000000000004604         mov        r15d, r8d
0000000000004607         push       r13
0000000000004609         push       r12
000000000000460b         mov        r14, rdi
000000000000460e         push       rbp
000000000000460f         push       rbx
0000000000004610         mov        ebx, r9d
0000000000004613         mov        r13, rsi
0000000000004616         mov        rbp, rcx
0000000000004619         and        ebx, 0x2
000000000000461c         sub        rsp, 0xb8
0000000000004623         mov        rax, qword [rsp+0xe8+arg_0]
000000000000462b         mov        qword [rsp+0xe8+var_D8], rdx
0000000000004630         mov        dword [rsp+0xe8+var_E0], r8d
0000000000004635         mov        dword [rsp+0xe8+var_70], r9d
000000000000463a         mov        qword [rsp+0xe8+var_C8], rax
000000000000463f         mov        rax, qword [rsp+0xe8+arg_8]
0000000000004647         mov        qword [rsp+0xe8+var_80], rax
000000000000464c         mov        rax, qword [rsp+0xe8+arg_10]
0000000000004654         mov        qword [rsp+0xe8+var_88], rax
0000000000004659         mov        rax, qword [fs:0x28]
0000000000004662         mov        qword [rsp+0xe8+var_40], rax
000000000000466a         xor        eax, eax
000000000000466c         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000004671         cmp        r15d, 0xa
0000000000004675         mov        qword [rsp+0xe8+var_90], rax
000000000000467a         ja         loc_582f

0000000000004680         lea        rcx, qword [switch_table_8100]              ; switch_table_8100
0000000000004687         mov        edx, r15d
000000000000468a         movsxd     rax, dword [rcx+rdx*4]
000000000000468e         add        rax, rcx
0000000000004691         jmp        rax                                         ; switch statement using table at 0x8100, with 11 cases, 0x4693,0x5264,0x52c0,0x5315,0x535a,0x5394,0x543a,0x5474,0x5668

                     loc_4693:
0000000000004693         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_4d40+1318
0000000000004698         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000469d         xor        r12d, r12d
00000000000046a0         mov        qword [rsp+0xe8+var_98], 0x0
00000000000046a9         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000046ae         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_46b3:
00000000000046b3         lea        rax, qword [aLibs+29]                       ; 0x809d, CODE XREF=sub_4d40+1876
00000000000046ba         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000046c3         xor        r15d, r15d
00000000000046c6         mov        dword [rsp+0xe8+var_E0], 0x2
00000000000046ce         mov        qword [rsp+0xe8+var_A0], rax

                     loc_46d3:
00000000000046d3         xor        r11d, r11d                                  ; CODE XREF=sub_4d40+180, sub_4d40+1400, sub_4d40+1488, sub_4d40+1557, sub_4d40+1615, sub_4d40+1781, sub_4d40+1839, sub_4d40+2408, sub_4d40+2485
00000000000046d6         mov        rax, rbp
00000000000046d9         mov        r8d, r12d
00000000000046dc         mov        rbp, r11
00000000000046df         mov        r11, rax
00000000000046e2         nop        word [rax+rax]

                     loc_46e8:
00000000000046e8         cmp        r11, rbp                                    ; CODE XREF=sub_47f0+194
00000000000046eb         setne      r12b
00000000000046ef         cmp        r11, 0xffffffffffffffff
00000000000046f3         jne        loc_4702

00000000000046f5         mov        rax, qword [rsp+0xe8+var_D8]
00000000000046fa         cmp        byte [rax+rbp], 0x0
00000000000046fe         setne      r12b

                     loc_4702:
0000000000004702         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
0000000000004705         je         loc_4d60

000000000000470b         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000004710         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000004715         lea        r9, qword [rdi+rbp]
0000000000004719         setne      al
000000000000471c         and        al, byte [rsp+0xe8+var_DB]
0000000000004720         mov        r10d, eax
0000000000004723         je         loc_47d0

0000000000004729         mov        rax, qword [rsp+0xe8+var_D0]
000000000000472e         test       rax, rax
0000000000004731         je         loc_4b60

0000000000004737         cmp        r11, 0xffffffffffffffff
000000000000473b         lea        rbx, qword [rbp+rax]
0000000000004740         jne        loc_4770

0000000000004742         cmp        rax, 0x1
0000000000004746         jbe        loc_4770

0000000000004748         mov        byte [rsp+0xe8+var_B0], r8b
000000000000474d         mov        byte [rsp+0xe8+var_B8], r10b
0000000000004752         mov        qword [rsp+0xe8+var_C0], r9
0000000000004757         call       j_strlen                                    ; strlen
000000000000475c         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000004762         movzx      r10d, byte [rsp+0xe8+var_B8]
0000000000004768         mov        r11, rax
000000000000476b         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_4770:
0000000000004770         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
0000000000004773         mov        byte [rsp+0xe8+var_C0], r10b
0000000000004778         ja         loc_4d30

000000000000477e         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
0000000000004783         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
0000000000004788         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
000000000000478b         mov        qword [rsp+0xe8+var_A8], r11
0000000000004790         mov        byte [rsp+0xe8+var_B0], r8b
0000000000004795         mov        qword [rsp+0xe8+var_B8], r9
000000000000479a         call       j_memcmp                                    ; memcmp
000000000000479f         test       eax, eax
00000000000047a1         mov        r9, qword [rsp+0xe8+var_B8]
00000000000047a6         movzx      r8d, byte [rsp+0xe8+var_B0]
00000000000047ac         mov        r11, qword [rsp+0xe8+var_A8]
00000000000047b1         jne        loc_4d30

00000000000047b7         cmp        byte [rsp+0xe8+var_D9], 0x0
00000000000047bc         movzx      r10d, byte [rsp+0xe8+var_C0]
00000000000047c2         jne        loc_5745

00000000000047c8         nop        dword [rax+rax]

                     loc_47d0:
00000000000047d0         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_4d20+19
00000000000047d4         cmp        bl, 0x7e
00000000000047d7         ja         loc_4af8

00000000000047dd         lea        rcx, qword [switch_table_8100+44]           ; 0x812c
00000000000047e4         movzx      edx, bl
00000000000047e7         movsxd     rax, dword [rcx+rdx*4]
00000000000047eb         add        rax, rcx
00000000000047ee         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_47f0:
00000000000047f0         xor        r10d, r10d
00000000000047f3         cmp        r11, 0x1
00000000000047f7         setne      al
00000000000047fa         cmp        r11, 0xffffffffffffffff
00000000000047fe         jne        loc_480c

0000000000004800         mov        rax, qword [rsp+arg_8]
0000000000004805         cmp        byte [rax+1], 0x0
0000000000004809         setne      al

                     loc_480c:
000000000000480c         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_47f0+14
0000000000004811         sete       dl
0000000000004814         test       al, al
0000000000004816         je         loc_4a68

                     loc_481c:
000000000000481c         xor        r12d, r12d                                  ; CODE XREF=sub_4a60+11
000000000000481f         xor        eax, eax
0000000000004821         nop        dword [rax]
                        ; endp

                     loc_4828:
0000000000004828         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_4a10+50, sub_4ae0+119
000000000000482d         jne        loc_4942

0000000000004833         test       dl, dl
0000000000004835         jne        loc_4942

                     loc_483b:
000000000000483b         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_48f0+87
0000000000004840         test       rsi, rsi
0000000000004843         je         loc_4859

0000000000004845         mov        edx, ebx
0000000000004847         shr        dl, 0x5
000000000000484a         movzx      edx, dl
000000000000484d         mov        edx, dword [rsi+rdx*4]
0000000000004850         bt         edx, ebx
0000000000004853         jb         loc_49a3

                     loc_4859:
0000000000004859         test       r10b, r10b                                  ; CODE XREF=sub_47f0+83, sub_48f0+93
000000000000485c         jne        loc_49a3

0000000000004862         xor        eax, 0x1
0000000000004865         add        rbp, 0x1
0000000000004869         and        eax, r8d

                     loc_486c:
000000000000486c         test       al, al                                      ; CODE XREF=sub_4d40+936
000000000000486e         je         loc_4890

0000000000004870         cmp        r13, r15
0000000000004873         jbe        loc_487a

0000000000004875         mov        byte [r14+r15], 0x27

                     loc_487a:
000000000000487a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_47f0+131
000000000000487e         cmp        r13, rax
0000000000004881         jbe        loc_4889

0000000000004883         mov        byte [r14+r15+1], 0x27

                     loc_4889:
0000000000004889         add        r15, 0x2                                    ; CODE XREF=sub_47f0+145
000000000000488d         xor        r8d, r8d

                     loc_4890:
0000000000004890         cmp        r15, r13                                    ; CODE XREF=sub_47f0+126, sub_48f0+275, sub_4d40+869
0000000000004893         jae        loc_4899

0000000000004895         mov        byte [r14+r15], bl

                     loc_4899:
0000000000004899         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_47f0+163
000000000000489e         add        r15, 0x1
00000000000048a2         mov        eax, 0x0
00000000000048a7         test       r12b, r12b
00000000000048aa         cmove      edi, eax
00000000000048ad         mov        byte [rsp+0xe8+var_DA], dil
00000000000048b2         jmp        loc_46e8
00000000000048b7         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_48c0:
00000000000048c0         xor        r10d, r10d
00000000000048c3         mov        eax, dword [rsp+arg_0]
00000000000048c7         cmp        eax, 0x2
00000000000048ca         je         loc_4e88

00000000000048d0         cmp        eax, 0x5
00000000000048d3         je         loc_4e48

00000000000048d9         cmp        eax, 0x2
00000000000048dc         mov        ebx, 0x3f
00000000000048e1         sete       dl
00000000000048e4         xor        r12d, r12d
00000000000048e7         xor        eax, eax
00000000000048e9         jmp        sub_47f0+56
                        ; endp
00000000000048ee         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_48f0:
00000000000048f0         xor        r10d, r10d
00000000000048f3         cmp        dword [rsp+arg_0], 0x2
00000000000048f8         je         loc_4e00

00000000000048fe         mov        byte [rsp+arg_74], r12b
0000000000004903         xor        edx, edx
0000000000004905         xor        eax, eax
0000000000004907         mov        ebx, 0x27
000000000000490c         jmp        sub_47f0+56
                        ; endp
0000000000004911         nop        dword [rax]
0000000000004918         mov        edx, 0x9
000000000000491d         mov        ebx, 0x74

                     loc_4922:
0000000000004922         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_4ab0+10, sub_4ba0+37, sub_4ce0+53
0000000000004927         sete       al
000000000000492a         and        al, byte [rsp+arg_7]
000000000000492e         jne        sub_4a60+30

0000000000004934         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_48f0+114
0000000000004939         jne        loc_49a0

                     loc_493b:
000000000000493b         mov        ebx, edx                                    ; CODE XREF=sub_4a10+18
000000000000493d         xor        r12d, r12d
0000000000004940         xor        eax, eax
                        ; endp

                     loc_4942:
0000000000004942         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_47f0+61, sub_47f0+69
0000000000004947         jne        loc_483b

000000000000494d         jmp        loc_4859
0000000000004952         nop        word [rax+rax]
0000000000004958         mov        edx, 0x8
000000000000495d         mov        ebx, 0x62
0000000000004962         jmp        sub_48f0+68
0000000000004964         nop        dword [rax]
0000000000004968         cmp        dword [rsp+8], 0x2
000000000000496d         je         sub_4d40                                    ; sub_4d40
0000000000004973         cmp        byte [rsp+0xd], 0x0
0000000000004978         je         sub_4b80+16

                     loc_497e:
000000000000497e         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_4b80+8
0000000000004983         je         loc_4b90

0000000000004989         cmp        qword [rsp+arg_10], 0x0
000000000000498f         jne        loc_4d4b

0000000000004995         mov        ebx, 0x5c
000000000000499a         nop        word [rax+rax]
                        ; endp

                     loc_49a0:
00000000000049a0         xor        r12d, r12d                                  ; CODE XREF=sub_48f0+73, sub_4ce0+29
                        ; endp

                     loc_49a3:
00000000000049a3         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_47f0+99, sub_47f0+108
00000000000049a8         sete       dl
00000000000049ab         cmp        byte [rsp+0xe8+var_D9], 0x0
00000000000049b0         mov        eax, edx
00000000000049b2         jne        loc_5208

00000000000049b8         mov        eax, r8d
00000000000049bb         xor        eax, 0x1
00000000000049be         and        al, dl
00000000000049c0         je         loc_49f1

00000000000049c2         cmp        r13, r15
00000000000049c5         jbe        loc_49cc

00000000000049c7         mov        byte [r14+r15], 0x27

                     loc_49cc:
00000000000049cc         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_48f0+213
00000000000049d0         cmp        r13, rdx
00000000000049d3         jbe        loc_49db

00000000000049d5         mov        byte [r14+r15+1], 0x24

                     loc_49db:
00000000000049db         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_48f0+227
00000000000049df         cmp        r13, rdx
00000000000049e2         jbe        loc_49ea

00000000000049e4         mov        byte [r14+r15+2], 0x27

                     loc_49ea:
00000000000049ea         add        r15, 0x3                                    ; CODE XREF=sub_48f0+242
00000000000049ee         mov        r8d, eax

                     loc_49f1:
00000000000049f1         cmp        r13, r15                                    ; CODE XREF=sub_48f0+208
00000000000049f4         jbe        loc_49fb

00000000000049f6         mov        byte [r14+r15], 0x5c

                     loc_49fb:
00000000000049fb         add        r15, 0x1                                    ; CODE XREF=sub_48f0+260
00000000000049ff         add        rbp, 0x1
0000000000004a03         jmp        loc_4890
0000000000004a08         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_4a10:
0000000000004a10         cmp        byte [rsp+arg_5], 0x0
0000000000004a15         jne        loc_4be3

0000000000004a1b         xor        edx, edx
0000000000004a1d         test       byte [rsp+arg_70], 0x1
0000000000004a22         je         loc_493b

0000000000004a28         add        rbp, 0x1
0000000000004a2c         jmp        quotearg_buffer_restyled+232
                        ; endp
0000000000004a31         nop        dword [rax]
0000000000004a38         cmp        dword [rsp+8], 0x2
0000000000004a3d         sete       dl
0000000000004a40         xor        eax, eax
0000000000004a42         jmp        sub_47f0+56
0000000000004a47         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4a50:
0000000000004a50         mov        edx, 0x7
0000000000004a55         mov        ebx, 0x61
0000000000004a5a         jmp        sub_48f0+68
                        ; endp
0000000000004a5f         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4a60:
0000000000004a60         cmp        dword [rsp+8], 0x2
0000000000004a65         sete       dl
                        ; endp

                     loc_4a68:
0000000000004a68         test       rbp, rbp                                    ; CODE XREF=sub_47f0+38, sub_4c80+35
0000000000004a6b         jne        loc_481c

0000000000004a71         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_4cb0+43
0000000000004a76         and        al, dl
0000000000004a78         je         sub_47f0+56

0000000000004a7e         mov        rbp, r11
0000000000004a81         mov        dword [rsp+arg_0], 0x2
0000000000004a89         jmp        sub_4d40+1097
                        ; endp
0000000000004a8e         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_4a90:
0000000000004a90         cmp        dword [rsp+arg_0], 0x2
0000000000004a95         sete       dl
0000000000004a98         xor        r12d, r12d
0000000000004a9b         jmp        sub_4a60+17
                        ; endp
0000000000004a9d         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_4aa0:
0000000000004aa0         cmp        dword [rsp+arg_0], 0x2
0000000000004aa5         mov        ebx, 0x20
0000000000004aaa         sete       dl
0000000000004aad         jmp        sub_4a60+17
                        ; endp
0000000000004aaf         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_4ab0:
0000000000004ab0         mov        edx, 0xd
0000000000004ab5         mov        ebx, 0x72
0000000000004aba         jmp        loc_4922
0000000000004abf         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4ac0:
0000000000004ac0         mov        edx, 0xc
0000000000004ac5         mov        ebx, 0x66
0000000000004aca         jmp        sub_48f0+68
                        ; endp
0000000000004acf         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4ad0:
0000000000004ad0         mov        edx, 0xb
0000000000004ad5         mov        ebx, 0x76
0000000000004ada         jmp        sub_48f0+68
                        ; endp
0000000000004adf         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4ae0:
0000000000004ae0         mov        edx, 0xa
0000000000004ae5         mov        ebx, 0x6e
0000000000004aea         jmp        sub_48f0+50
                        ; endp
0000000000004aef         align      16

                     loc_4af0:
0000000000004af0         xor        r10d, r10d                                  ; CODE XREF=sub_4ae0+135
0000000000004af3         nop        dword [rax+rax]

                     loc_4af8:
0000000000004af8         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
0000000000004afe         jne        loc_4ea8

0000000000004b04         mov        qword [rsp+0xe8+var_B0], r11
0000000000004b09         mov        byte [rsp+0xe8+var_B8], r8b
0000000000004b0e         mov        byte [rsp+0xe8+var_C0], r10b
0000000000004b13         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000004b18         mov        rcx, qword [rax]
0000000000004b1b         movzx      edx, bl
0000000000004b1e         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000004b24         movzx      r8d, byte [rsp+0xe8+var_B8]
0000000000004b2a         mov        r11, qword [rsp+0xe8+var_B0]
0000000000004b2f         mov        edi, 0x1
0000000000004b34         movzx      eax, word [rcx+rdx*2]
0000000000004b38         and        ax, 0x4000
0000000000004b3c         setne      r12b
0000000000004b40         sete       al
0000000000004b43         and        al, byte [rsp+0xe8+var_DB]

                     loc_4b47:
0000000000004b47         test       al, al                                      ; CODE XREF=sub_4d40+2221
0000000000004b49         jne        loc_54e1

0000000000004b4f         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000004b54         sete       dl
0000000000004b57         jmp        loc_4828
0000000000004b5c         align      32

                     loc_4b60:
0000000000004b60         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
0000000000004b64         cmp        bl, 0x7e
0000000000004b67         ja         loc_4af0

0000000000004b69         lea        rcx, qword [switch_table_8100+552]          ; 0x8328
0000000000004b70         movzx      edx, bl
0000000000004b73         movsxd     rax, dword [rcx+rdx*4]
0000000000004b77         add        rax, rcx
0000000000004b7a         jmp        rax
                        ; endp
0000000000004b7c         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_4b80:
0000000000004b80         xor        r10d, r10d
0000000000004b83         cmp        byte [rsp+arg_5], 0x0
0000000000004b88         jne        loc_497e

0000000000004b8e         nop

                     loc_4b90:
0000000000004b90         mov        edx, 0x5c                                   ; CODE XREF=sub_48f0+136, sub_48f0+147
0000000000004b95         mov        ebx, 0x5c
0000000000004b9a         jmp        sub_48f0+68
                        ; endp
0000000000004b9f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4ba0:
0000000000004ba0         mov        edx, 0xc
0000000000004ba5         xor        r10d, r10d
0000000000004ba8         mov        ebx, 0x66
0000000000004bad         jmp        sub_48f0+68
                        ; endp
0000000000004bb2         nop        word [rax+rax]
0000000000004bb8         mov        edx, 0xa
0000000000004bbd         xor        r10d, r10d
0000000000004bc0         mov        ebx, 0x6e
0000000000004bc5         jmp        sub_48f0+50
0000000000004bca         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4bd0:
0000000000004bd0         mov        ebx, 0x61
0000000000004bd5         jmp        sub_48f0+176
                        ; endp
0000000000004bda         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4be0:
0000000000004be0         xor        r10d, r10d
                        ; endp

                     loc_4be3:
0000000000004be3         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_4a10+5
0000000000004be8         sete       dl
0000000000004beb         cmp        byte [rsp+arg_7], 0x0
0000000000004bf0         jne        loc_578a

0000000000004bf6         mov        eax, r8d
0000000000004bf9         mov        rcx, r15
0000000000004bfc         xor        eax, 0x1
0000000000004bff         and        al, dl
0000000000004c01         je         loc_4c30

0000000000004c03         cmp        r13, r15
0000000000004c06         jbe        loc_4c0d

0000000000004c08         mov        byte [r14+r15], 0x27

                     loc_4c0d:
0000000000004c0d         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_4be0+38
0000000000004c11         cmp        r13, rcx
0000000000004c14         jbe        loc_4c1c

0000000000004c16         mov        byte [r14+r15+1], 0x24

                     loc_4c1c:
0000000000004c1c         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_4be0+52
0000000000004c20         cmp        r13, rcx
0000000000004c23         ja         loc_5259

                     loc_4c29:
0000000000004c29         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_4d40+1311
0000000000004c2d         mov        r8d, eax

                     loc_4c30:
0000000000004c30         cmp        r13, rcx                                    ; CODE XREF=sub_4be0+33
0000000000004c33         jbe        loc_4c3a

0000000000004c35         mov        byte [r14+rcx], 0x5c

                     loc_4c3a:
0000000000004c3a         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_4be0+83
0000000000004c3f         lea        r15, qword [rcx+1]
0000000000004c43         je         loc_5249

0000000000004c49         lea        rax, qword [rbp+1]
0000000000004c4d         cmp        rax, r11
0000000000004c50         jae        loc_4c6b

0000000000004c52         mov        rax, qword [rsp+arg_8]
0000000000004c57         movzx      eax, byte [rax+rbp+1]
0000000000004c5c         mov        byte [rsp+arg_20], al
0000000000004c60         sub        eax, 0x30
0000000000004c63         cmp        al, 0x9
0000000000004c65         jbe        loc_5499

                     loc_4c6b:
0000000000004c6b         mov        eax, r12d                                   ; CODE XREF=sub_4be0+112
0000000000004c6e         mov        ebx, 0x30
0000000000004c73         xor        r12d, r12d
0000000000004c76         jmp        sub_47f0+56
                        ; endp
0000000000004c7b         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_4c80:
0000000000004c80         cmp        dword [rsp+arg_0], 0x2
0000000000004c85         mov        r12d, r10d
0000000000004c88         sete       dl
0000000000004c8b         xor        r10d, r10d
0000000000004c8e         xor        eax, eax
0000000000004c90         jmp        sub_47f0+56
                        ; endp
0000000000004c95         nop        dword [rax]
0000000000004c98         cmp        dword [rsp+8], 0x2
0000000000004c9d         sete       dl
0000000000004ca0         xor        r10d, r10d
0000000000004ca3         jmp        sub_4a60+8
0000000000004ca8         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4cb0:
0000000000004cb0         cmp        dword [rsp+8], 0x2
0000000000004cb5         sete       dl
0000000000004cb8         xor        r10d, r10d
0000000000004cbb         xor        r12d, r12d
0000000000004cbe         jmp        sub_4a60+17
                        ; endp
0000000000004cc3         nop        dword [rax+rax]
0000000000004cc8         cmp        dword [rsp+8], 0x2
0000000000004ccd         mov        r12d, r10d
0000000000004cd0         mov        ebx, 0x20
0000000000004cd5         sete       dl
0000000000004cd8         xor        r10d, r10d
0000000000004cdb         jmp        sub_4a60+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4ce0:
0000000000004ce0         mov        edx, 0xd
0000000000004ce5         xor        r10d, r10d
0000000000004ce8         mov        ebx, 0x72
0000000000004ced         jmp        sub_48f0+50
                        ; endp
0000000000004cf2         nop        word [rax+rax]
0000000000004cf8         mov        ebx, 0x76
0000000000004cfd         jmp        sub_48f0+176
0000000000004d02         nop        word [rax+rax]
0000000000004d08         mov        edx, 0x9
0000000000004d0d         xor        r10d, r10d
0000000000004d10         mov        ebx, 0x74
0000000000004d15         jmp        sub_48f0+50
0000000000004d1a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4d20:
0000000000004d20         mov        ebx, 0x62
0000000000004d25         jmp        sub_48f0+176
                        ; endp
0000000000004d2a         nop        word [rax+rax]

                     loc_4d30:
0000000000004d30         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
0000000000004d33         jmp        loc_47d0
0000000000004d38         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_4d40:
0000000000004d40         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_48f0+125
0000000000004d45         jne        sub_4d40+2416
                        ; endp

                     loc_4d4b:
0000000000004d4b         add        rbp, 0x1                                    ; CODE XREF=sub_48f0+159
0000000000004d4f         mov        eax, r8d
0000000000004d52         xor        r12d, r12d
0000000000004d55         mov        ebx, 0x5c
0000000000004d5a         jmp        sub_47f0+124
                        ; endp
0000000000004d5f         align      32

                     loc_4d60:
0000000000004d60         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
0000000000004d65         movzx      ebx, byte [rsp+0xe8+var_D9]
0000000000004d6a         mov        r12d, r8d
0000000000004d6d         mov        rbp, r11
0000000000004d70         sete       dl
0000000000004d73         mov        eax, ebx
0000000000004d75         test       r15, r15
0000000000004d78         sete       cl
0000000000004d7b         and        eax, edx
0000000000004d7d         and        al, cl
0000000000004d7f         jne        loc_57e6

0000000000004d85         mov        eax, ebx
0000000000004d87         xor        eax, 0x1
0000000000004d8a         and        dl, al
0000000000004d8c         je         loc_56fc

0000000000004d92         cmp        byte [rsp+0xe8+var_6C], 0x0
0000000000004d97         je         loc_56fa

0000000000004d9d         cmp        byte [rsp+0xe8+var_DA], 0x0
0000000000004da2         jne        loc_579d

0000000000004da8         test       r13, r13
0000000000004dab         sete       al
0000000000004dae         cmp        qword [rsp+0xe8+var_98], 0x0
0000000000004db4         setne      dl
0000000000004db7         and        al, dl
0000000000004db9         je         loc_57dc

0000000000004dbf         mov        r13, qword [rsp+0xe8+var_98]

                     loc_4dc4:
0000000000004dc4         lea        rbx, qword [aLibs+29]                       ; 0x809d, CODE XREF=sub_4d40+2781
0000000000004dcb         mov        byte [r14], 0x27
0000000000004dcf         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000004dd7         mov        r15d, 0x1
0000000000004ddd         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004de6         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000004deb         mov        qword [rsp+0xe8+var_A0], rbx
0000000000004df0         mov        byte [rsp+0xe8+var_6C], al
0000000000004df4         jmp        loc_46d3
0000000000004df9         align      512

                     loc_4e00:
0000000000004e00         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_48f0+8
0000000000004e05         jne        sub_4d40+2416

0000000000004e0b         test       r13, r13
0000000000004e0e         je         loc_5210

0000000000004e14         xor        edx, edx
0000000000004e16         cmp        qword [rsp+arg_48], 0x0
0000000000004e1c         jne        loc_5210

                     loc_4e22:
0000000000004e22         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_4d40+1284, sub_4d40+2794
0000000000004e27         add        r15, 0x3
0000000000004e2b         xor        eax, eax
0000000000004e2d         mov        byte [rsp+arg_74], r12b
0000000000004e32         xor        r8d, r8d
0000000000004e35         mov        r13, rdx
0000000000004e38         mov        ebx, 0x27
0000000000004e3d         jmp        sub_47f0+105
                        ; endp
0000000000004e42         align      8

                     loc_4e48:
0000000000004e48         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_48c0+19
0000000000004e4d         je         loc_4e70

0000000000004e4f         lea        rcx, qword [rbp+2]
0000000000004e53         cmp        rcx, r11
0000000000004e56         jae        loc_4e70

0000000000004e58         mov        rax, qword [rsp+arg_8]
0000000000004e5d         cmp        byte [rax+rbp+1], 0x3f
0000000000004e62         je         loc_55f2

0000000000004e68         nop        dword [rax+rax]

                     loc_4e70:
0000000000004e70         xor        edx, edx                                    ; CODE XREF=sub_4d40+269, sub_4d40+278, sub_4d40+2233, sub_4d40+2253
0000000000004e72         xor        r12d, r12d
0000000000004e75         xor        eax, eax
0000000000004e77         mov        ebx, 0x3f
0000000000004e7c         jmp        sub_47f0+56
                        ; endp
0000000000004e81         align      8

                     loc_4e88:
0000000000004e88         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_48c0+10
0000000000004e8d         jne        loc_56b0

0000000000004e93         xor        r12d, r12d
0000000000004e96         xor        eax, eax
0000000000004e98         mov        ebx, 0x3f
0000000000004e9d         jmp        sub_47f0+105
                        ; endp
0000000000004ea2         align      8

                     loc_4ea8:
0000000000004ea8         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_4ae0+30
0000000000004eb0         cmp        r11, 0xffffffffffffffff
0000000000004eb4         mov        qword [rsp+0xe8+var_48], 0x0
0000000000004ec0         mov        qword [rsp+0xe8+var_C0], rax
0000000000004ec5         jne        loc_4ef4

0000000000004ec7         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
0000000000004ecc         mov        byte [rsp+0xe8+var_A8], r8b
0000000000004ed1         mov        byte [rsp+0xe8+var_B0], r10b
0000000000004ed6         mov        qword [rsp+0xe8+var_B8], r9
0000000000004edb         call       j_strlen                                    ; strlen
0000000000004ee0         movzx      r8d, byte [rsp+0xe8+var_A8]
0000000000004ee6         movzx      r10d, byte [rsp+0xe8+var_B0]
0000000000004eec         mov        r11, rax
0000000000004eef         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_4ef4:
0000000000004ef4         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_4d40+389
0000000000004efc         xor        ecx, ecx
0000000000004efe         mov        byte [rsp+0xe8+var_6A], bl
0000000000004f02         mov        byte [rsp+0xe8+var_6B], r8b
0000000000004f07         mov        rbx, rcx
0000000000004f0a         mov        qword [rsp+0xe8+var_60], r9
0000000000004f12         mov        qword [rsp+0xe8+var_B0], rax
0000000000004f17         mov        byte [rsp+0xe8+var_69], r10b
0000000000004f1c         mov        qword [rsp+0xe8+var_68], r15
0000000000004f24         mov        qword [rsp+0xe8+var_A8], r14
0000000000004f29         mov        qword [rsp+0xe8+var_78], r13
0000000000004f2e         mov        qword [rsp+0xe8+var_B8], r11

                     loc_4f33:
0000000000004f33         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_4d40+623
0000000000004f38         lea        r14, qword [rbp+rbx]
0000000000004f3d         mov        rdx, qword [rsp+0xe8+var_B8]
0000000000004f42         mov        rcx, qword [rsp+0xe8+var_C0]
0000000000004f47         mov        rdi, qword [rsp+0xe8+var_B0]
0000000000004f4c         lea        r13, qword [rax+r14]
0000000000004f50         sub        rdx, r14
0000000000004f53         mov        rsi, r13
0000000000004f56         call       rpl_mbrtowc                                 ; rpl_mbrtowc
0000000000004f5b         test       rax, rax
0000000000004f5e         mov        r15, rax
0000000000004f61         je         loc_4fb1

0000000000004f63         cmp        rax, 0xffffffffffffffff
0000000000004f67         je         loc_5585

0000000000004f6d         cmp        rax, 0xfffffffffffffffe
0000000000004f71         je         loc_5511

0000000000004f77         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000004f7c         sete       al
0000000000004f7f         and        al, byte [rsp+0xe8+var_D9]
0000000000004f83         jne        loc_5120

                     loc_4f89:
0000000000004f89         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_4d40+996, sub_4d40+1031
0000000000004f90         call       j_iswprint                                  ; iswprint
0000000000004f95         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
0000000000004f9a         test       eax, eax
0000000000004f9c         mov        eax, 0x0
0000000000004fa1         cmove      r12d, eax
0000000000004fa5         add        rbx, r15
0000000000004fa8         call       j_mbsinit                                   ; mbsinit
0000000000004fad         test       eax, eax
0000000000004faf         je         loc_4f33

                     loc_4fb1:
0000000000004fb1         mov        edx, r12d                                   ; CODE XREF=sub_4d40+545
0000000000004fb4         mov        rdi, rbx
0000000000004fb7         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000004fbd         xor        edx, 0x1
0000000000004fc0         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000004fc5         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000004fcb         and        dl, byte [rsp+0xe8+var_DB]
0000000000004fcf         mov        r15, qword [rsp+0xe8+var_68]
0000000000004fd7         mov        r14, qword [rsp+0xe8+var_A8]
0000000000004fdc         mov        r13, qword [rsp+0xe8+var_78]
0000000000004fe1         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_4fe6:
0000000000004fe6         cmp        rdi, 0x1                                    ; CODE XREF=sub_4d40+2112, sub_4d40+2168
0000000000004fea         jbe        loc_55eb

                     loc_4ff0:
0000000000004ff0         mov        rcx, rdi                                    ; CODE XREF=sub_4d40+1961
0000000000004ff3         xor        esi, esi
0000000000004ff5         movzx      r9d, byte [rsp+0xe8+var_D9]
0000000000004ffb         add        rcx, rbp
0000000000004ffe         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000005003         jmp        loc_50be
0000000000005008         align      16

                     loc_5010:
0000000000005010         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_4d40+896
0000000000005015         sete       al
0000000000005018         test       r9b, r9b
000000000000501b         jne        loc_54d0

0000000000005021         mov        esi, r8d
0000000000005024         xor        esi, 0x1
0000000000005027         and        al, sil
000000000000502a         je         loc_505b

000000000000502c         cmp        r13, r15
000000000000502f         jbe        loc_5036

0000000000005031         mov        byte [r14+r15], 0x27

                     loc_5036:
0000000000005036         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_4d40+751
000000000000503a         cmp        r13, rsi
000000000000503d         jbe        loc_5045

000000000000503f         mov        byte [r14+r15+1], 0x24

                     loc_5045:
0000000000005045         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_4d40+765
0000000000005049         cmp        r13, rsi
000000000000504c         jbe        loc_5054

000000000000504e         mov        byte [r14+r15+2], 0x27

                     loc_5054:
0000000000005054         add        r15, 0x3                                    ; CODE XREF=sub_4d40+780
0000000000005058         mov        r8d, eax

                     loc_505b:
000000000000505b         cmp        r13, r15                                    ; CODE XREF=sub_4d40+746
000000000000505e         jbe        loc_5065

0000000000005060         mov        byte [r14+r15], 0x5c

                     loc_5065:
0000000000005065         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4d40+798
0000000000005069         cmp        r13, rax
000000000000506c         jbe        loc_507b

000000000000506e         mov        eax, ebx
0000000000005070         shr        al, 0x6
0000000000005073         add        eax, 0x30
0000000000005076         mov        byte [r14+r15+1], al

                     loc_507b:
000000000000507b         lea        rax, qword [r15+2]                          ; CODE XREF=sub_4d40+812
000000000000507f         cmp        r13, rax
0000000000005082         jbe        loc_5094

0000000000005084         mov        eax, ebx
0000000000005086         shr        al, 0x3
0000000000005089         and        eax, 0x7
000000000000508c         add        eax, 0x30
000000000000508f         mov        byte [r14+r15+2], al

                     loc_5094:
0000000000005094         and        ebx, 0x7                                    ; CODE XREF=sub_4d40+834
0000000000005097         add        rbp, 0x1
000000000000509b         add        r15, 0x3
000000000000509f         add        ebx, 0x30
00000000000050a2         cmp        rbp, rcx
00000000000050a5         jae        loc_4890

00000000000050ab         mov        esi, edx

                     loc_50ad:
00000000000050ad         cmp        r13, r15                                    ; CODE XREF=sub_4d40+985, sub_4d40+1969
00000000000050b0         jbe        loc_50b6

00000000000050b2         mov        byte [r14+r15], bl

                     loc_50b6:
00000000000050b6         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_4d40+880
00000000000050ba         add        r15, 0x1

                     loc_50be:
00000000000050be         test       dl, dl                                      ; CODE XREF=sub_4d40+707
00000000000050c0         jne        loc_5010

00000000000050c6         mov        eax, esi
00000000000050c8         xor        eax, 0x1
00000000000050cb         and        eax, r8d
00000000000050ce         test       r10b, r10b
00000000000050d1         je         loc_50e1

00000000000050d3         cmp        r13, r15
00000000000050d6         jbe        loc_50dd

00000000000050d8         mov        byte [r14+r15], 0x5c

                     loc_50dd:
00000000000050dd         add        r15, 0x1                                    ; CODE XREF=sub_4d40+918

                     loc_50e1:
00000000000050e1         add        rbp, 0x1                                    ; CODE XREF=sub_4d40+913
00000000000050e5         cmp        rbp, rcx
00000000000050e8         jae        loc_486c

00000000000050ee         test       al, al
00000000000050f0         je         loc_54ee

00000000000050f6         cmp        r13, r15
00000000000050f9         jbe        loc_5100

00000000000050fb         mov        byte [r14+r15], 0x27

                     loc_5100:
0000000000005100         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4d40+953
0000000000005104         cmp        r13, rax
0000000000005107         jbe        loc_510f

0000000000005109         mov        byte [r14+r15+1], 0x27

                     loc_510f:
000000000000510f         add        r15, 0x2                                    ; CODE XREF=sub_4d40+967
0000000000005113         xor        r10d, r10d
0000000000005116         xor        r8d, r8d
0000000000005119         jmp        loc_50ad
000000000000511b         align      32

                     loc_5120:
0000000000005120         cmp        r15, 0x1                                    ; CODE XREF=sub_4d40+579
0000000000005124         je         loc_4f89

000000000000512a         mov        rdi, qword [rsp+0xe8+var_D8]
000000000000512f         lea        rcx, qword [rdi+r15]
0000000000005133         lea        rdx, qword [rdi+r14+1]
0000000000005138         lea        r8, qword [rcx+r14]
000000000000513c         jmp        loc_514d
000000000000513e         align      64

                     loc_5140:
0000000000005140         add        rdx, 0x1                                    ; CODE XREF=sub_4d40+1046, sub_4d40+1072
0000000000005144         cmp        r8, rdx
0000000000005147         je         loc_4f89

                     loc_514d:
000000000000514d         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_4d40+1020
0000000000005150         sub        ecx, 0x5b
0000000000005153         cmp        cl, 0x21
0000000000005156         ja         loc_5140

0000000000005158         mov        esi, 0x1
000000000000515d         shl        rsi, cl
0000000000005160         mov        rcx, rsi
0000000000005163         movabs     rsi, 0x20000002b
000000000000516d         test       rcx, rsi
0000000000005170         je         loc_5140

0000000000005172         mov        r14, qword [rsp+0xe8+var_A8]
0000000000005177         mov        r13, qword [rsp+0xe8+var_78]
000000000000517c         mov        rbp, qword [rsp+0xe8+var_B8]
0000000000005181         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_5189:
0000000000005189         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_4d40+1227, sub_4d40+1948, sub_4d40+2585, sub_4d40+2734
000000000000518e         je         loc_51a0

0000000000005190         test       al, al
0000000000005192         mov        eax, 0x4
0000000000005197         cmove      eax, dword [rsp+0xe8+var_E0]
000000000000519c         mov        dword [rsp+0xe8+var_E0], eax

                     loc_51a0:
00000000000051a0         sub        rsp, 0x8                                    ; CODE XREF=sub_4d40+1102
00000000000051a4         mov        rcx, rbp
00000000000051a7         mov        rsi, r13
00000000000051aa         push       qword [rsp+0xf0+var_88]
00000000000051ae         push       qword [rsp+0xf8+var_80]
00000000000051b2         mov        rdi, r14
00000000000051b5         push       0x0
00000000000051b7         mov        r9d, dword [rsp+0x108+var_70]
00000000000051bf         mov        r8d, dword [rsp+0x108+var_E0]
00000000000051c4         mov        rdx, qword [rsp+0x108+var_D8]
00000000000051c9         and        r9d, 0xfffffffd
00000000000051cd         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000051d2         add        rsp, 0x20
00000000000051d6         mov        r15, rax

                     loc_51d9:
00000000000051d9         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_4d40+2549, sub_4d40+2560, sub_4d40+2711
00000000000051e1         xor        rbx, qword [fs:0x28]
00000000000051ea         mov        rax, r15
00000000000051ed         jne        loc_57f3

00000000000051f3         add        rsp, 0xb8
00000000000051fa         pop        rbx
00000000000051fb         pop        rbp
00000000000051fc         pop        r12
00000000000051fe         pop        r13
0000000000005200         pop        r14
0000000000005202         pop        r15
0000000000005204         ret
                        ; endp
0000000000005205         align      8

                     loc_5208:
0000000000005208         mov        rbp, r11                                    ; CODE XREF=sub_48f0+194
000000000000520b         jmp        loc_5189

                     loc_5210:
0000000000005210         cmp        r13, r15                                    ; CODE XREF=sub_4d40+206, sub_4d40+220
0000000000005213         jbe        loc_521a

0000000000005215         mov        byte [r14+r15], 0x27

                     loc_521a:
000000000000521a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4d40+1235
000000000000521e         cmp        r13, rax
0000000000005221         jbe        loc_5229

0000000000005223         mov        byte [r14+r15+1], 0x5c

                     loc_5229:
0000000000005229         lea        rax, qword [r15+2]                          ; CODE XREF=sub_4d40+1249
000000000000522d         cmp        r13, rax
0000000000005230         jbe        loc_5822

0000000000005236         mov        rdx, r13
0000000000005239         mov        byte [r14+r15+2], 0x27
000000000000523f         mov        r13, qword [rsp+arg_48]
0000000000005244         jmp        loc_4e22

                     loc_5249:
0000000000005249         mov        eax, r12d                                   ; CODE XREF=sub_4be0+99
000000000000524c         mov        ebx, 0x30
0000000000005251         xor        r12d, r12d
0000000000005254         jmp        sub_47f0+105
                        ; endp

                     loc_5259:
0000000000005259         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_4be0+67
000000000000525f         jmp        loc_4c29

                     loc_5264:
0000000000005264         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
0000000000005266         jne        loc_4693

000000000000526c         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_5271:
0000000000005271         test       r13, r13                                    ; CODE XREF=sub_4d40+2749
0000000000005274         jne        loc_580a

000000000000527a         lea        rax, qword [aLibs+29]                       ; 0x809d
0000000000005281         mov        qword [rsp+0xe8+var_98], 0x0
000000000000528a         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000528f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000005294         xor        r12d, r12d
0000000000005297         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000529c         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000052a5         mov        qword [rsp+0xe8+var_A0], rax
00000000000052aa         mov        r15d, 0x1
00000000000052b0         mov        dword [rsp+0xe8+var_E0], 0x2
00000000000052b8         jmp        loc_46d3
00000000000052bd         align      64

                     loc_52c0:
00000000000052c0         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
00000000000052c2         jne        loc_56bd

00000000000052c8         test       r13, r13
00000000000052cb         je         loc_54f6

00000000000052d1         mov        byte [r14], 0x22
00000000000052d5         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000052da         xor        r12d, r12d
00000000000052dd         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000052e2         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_52eb:
00000000000052eb         lea        rax, qword [aLibs+27]                       ; 0x809b, CODE XREF=sub_4d40+1996
00000000000052f2         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000052f7         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000052fc         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000005305         mov        r15d, 0x1
000000000000530b         mov        qword [rsp+0xe8+var_A0], rax
0000000000005310         jmp        loc_46d3

                     loc_5315:
0000000000005315         lea        rax, qword [aLibs+27]                       ; case 6, 0x809b, CODE XREF=quotearg_buffer_restyled+145
000000000000531c         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000005321         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000005326         xor        r12d, r12d
0000000000005329         mov        qword [rsp+0xe8+var_98], 0x0
0000000000005332         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000005337         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000533c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000005345         xor        r15d, r15d
0000000000005348         mov        qword [rsp+0xe8+var_A0], rax
000000000000534d         mov        dword [rsp+0xe8+var_E0], 0x5
0000000000005355         jmp        loc_46d3

                     loc_535a:
000000000000535a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
000000000000535f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000005364         xor        r12d, r12d
0000000000005367         mov        qword [rsp+0xe8+var_98], 0x0
0000000000005370         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000005375         xor        r15d, r15d
0000000000005378         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000537d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000005386         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000538f         jmp        loc_46d3

                     loc_5394:
0000000000005394         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
0000000000005399         je         loc_53f1

000000000000539b         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0x809f
00000000000053a2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000053a4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000053a9         call       j_dcgettext                                 ; dcgettext
00000000000053ae         mov        rcx, rax
00000000000053b1         mov        qword [rsp+0xe8+var_80], rax
00000000000053b6         lea        rax, qword [aLibs+31]                       ; 0x809f
00000000000053bd         cmp        rcx, rax
00000000000053c0         je         loc_575e

                     loc_53c6:
00000000000053c6         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x809d, CODE XREF=sub_4d40+2607
00000000000053cd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000053cf         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000053d4         call       j_dcgettext                                 ; dcgettext
00000000000053d9         mov        rcx, rax
00000000000053dc         mov        qword [rsp+0xe8+var_88], rax
00000000000053e1         lea        rax, qword [aLibs+29]                       ; 0x809d
00000000000053e8         cmp        rcx, rax
00000000000053eb         je         loc_5774

                     loc_53f1:
00000000000053f1         xor        r15d, r15d                                  ; CODE XREF=sub_4d40+1625, sub_4d40+2629
00000000000053f4         test       ebx, ebx
00000000000053f6         je         loc_55bd

                     loc_53fc:
00000000000053fc         test       ebx, ebx                                    ; CODE XREF=sub_4d40+2183, sub_4d40+2214
00000000000053fe         mov        rbx, qword [rsp+0xe8+var_88]
0000000000005403         setne      byte [rsp+0xe8+var_D9]
0000000000005408         xor        r12d, r12d
000000000000540b         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
000000000000540e         call       j_strlen                                    ; strlen
0000000000005413         mov        qword [rsp+0xe8+var_A0], rbx
0000000000005418         mov        qword [rsp+0xe8+var_D0], rax
000000000000541d         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000005422         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000005427         mov        qword [rsp+0xe8+var_98], 0x0
0000000000005430         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000005435         jmp        loc_46d3

                     loc_543a:
000000000000543a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
000000000000543f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000005444         xor        r12d, r12d
0000000000005447         mov        qword [rsp+0xe8+var_98], 0x0
0000000000005450         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000005455         xor        r15d, r15d
0000000000005458         mov        byte [rsp+0xe8+var_DB], 0x0
000000000000545d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000005466         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000546f         jmp        loc_46d3

                     loc_5474:
0000000000005474         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000005479         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000547e         xor        r12d, r12d
0000000000005481         mov        qword [rsp+0xe8+var_98], 0x0
000000000000548a         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000548f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000005494         jmp        loc_46b3

                     loc_5499:
0000000000005499         cmp        r13, r15                                    ; CODE XREF=sub_4be0+133
000000000000549c         jbe        loc_54a3

000000000000549e         mov        byte [r14+r15], 0x30

                     loc_54a3:
00000000000054a3         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_4d40+1884
00000000000054a7         cmp        r13, rax
00000000000054aa         jbe        loc_54b2

00000000000054ac         mov        byte [r14+rcx+2], 0x30

                     loc_54b2:
00000000000054b2         mov        eax, r12d                                   ; CODE XREF=sub_4d40+1898
00000000000054b5         lea        r15, qword [rcx+3]
00000000000054b9         xor        r12d, r12d
00000000000054bc         mov        ebx, 0x30
00000000000054c1         jmp        sub_47f0+56
                        ; endp
00000000000054c6         align      16

                     loc_54d0:
00000000000054d0         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_4d40+731
00000000000054d5         mov        rbp, r11
00000000000054d8         mov        byte [rsp+0xe8+var_DB], bl
00000000000054dc         jmp        loc_5189

                     loc_54e1:
00000000000054e1         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_4ae0+105
00000000000054e6         xor        r12d, r12d
00000000000054e9         jmp        loc_4ff0

                     loc_54ee:
00000000000054ee         xor        r10d, r10d                                  ; CODE XREF=sub_4d40+944
00000000000054f1         jmp        loc_50ad

                     loc_54f6:
00000000000054f6         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_4d40+1419
00000000000054ff         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000005504         xor        r12d, r12d
0000000000005507         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000550c         jmp        loc_52eb

                     loc_5511:
0000000000005511         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_4d40+561
0000000000005516         mov        rsi, r14
0000000000005519         mov        rcx, r13
000000000000551c         mov        rax, rbx
000000000000551f         mov        rdi, rbx
0000000000005522         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000005528         movzx      ebx, byte [rsp+0xe8+var_6A]
000000000000552d         mov        r9, qword [rsp+0xe8+var_60]
0000000000005535         cmp        rsi, r11
0000000000005538         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000553e         mov        r15, qword [rsp+0xe8+var_68]
0000000000005546         mov        r14, qword [rsp+0xe8+var_A8]
000000000000554b         mov        r13, qword [rsp+0xe8+var_78]
0000000000005550         jae        loc_5578

0000000000005552         cmp        byte [rcx], 0x0
0000000000005555         jne        loc_5567

0000000000005557         jmp        loc_5578
0000000000005559         align      32

                     loc_5560:
0000000000005560         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_4d40+2099
0000000000005565         je         loc_5575

                     loc_5567:
0000000000005567         add        rax, 0x1                                    ; CODE XREF=sub_4d40+2069
000000000000556b         lea        rdx, qword [rbp+rax]
0000000000005570         cmp        r11, rdx
0000000000005573         ja         loc_5560

                     loc_5575:
0000000000005575         mov        rdi, rax                                    ; CODE XREF=sub_4d40+2085

                     loc_5578:
0000000000005578         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_4d40+2064, sub_4d40+2071
000000000000557d         xor        r12d, r12d
0000000000005580         jmp        loc_4fe6

                     loc_5585:
0000000000005585         mov        rdi, rbx                                    ; CODE XREF=sub_4d40+551
0000000000005588         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000558e         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000005593         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000005599         mov        r15, qword [rsp+0xe8+var_68]
00000000000055a1         xor        r12d, r12d
00000000000055a4         mov        r14, qword [rsp+0xe8+var_A8]
00000000000055a9         mov        r13, qword [rsp+0xe8+var_78]
00000000000055ae         mov        r11, qword [rsp+0xe8+var_B8]
00000000000055b3         movzx      edx, byte [rsp+0xe8+var_DB]
00000000000055b8         jmp        loc_4fe6

                     loc_55bd:
00000000000055bd         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_4d40+1718
00000000000055c2         movzx      eax, byte [rdx]
00000000000055c5         test       al, al
00000000000055c7         je         loc_53fc

00000000000055cd         nop        dword [rax]

                     loc_55d0:
00000000000055d0         cmp        r13, r15                                    ; CODE XREF=sub_4d40+2212
00000000000055d3         jbe        loc_55d9

00000000000055d5         mov        byte [r14+r15], al

                     loc_55d9:
00000000000055d9         add        r15, 0x1                                    ; CODE XREF=sub_4d40+2195
00000000000055dd         movzx      eax, byte [rdx+r15]
00000000000055e2         test       al, al
00000000000055e4         jne        loc_55d0

00000000000055e6         jmp        loc_53fc

                     loc_55eb:
00000000000055eb         mov        eax, edx                                    ; CODE XREF=sub_4d40+682
00000000000055ed         jmp        loc_4b47

                     loc_55f2:
00000000000055f2         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_4d40+290
00000000000055f6         cmp        bl, 0x3e
00000000000055f9         ja         loc_4e70

00000000000055ff         movabs     rax, 0x7000a38200000000
0000000000005609         bt         rax, rbx
000000000000560d         jae        loc_4e70

0000000000005613         cmp        byte [rsp+arg_7], 0x0
0000000000005618         jne        loc_5802

000000000000561e         cmp        r13, r15
0000000000005621         jbe        loc_5628

0000000000005623         mov        byte [r14+r15], 0x3f

                     loc_5628:
0000000000005628         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4d40+2273
000000000000562c         cmp        r13, rax
000000000000562f         jbe        loc_5637

0000000000005631         mov        byte [r14+r15+1], 0x22

                     loc_5637:
0000000000005637         lea        rax, qword [r15+2]                          ; CODE XREF=sub_4d40+2287
000000000000563b         cmp        r13, rax
000000000000563e         jbe        loc_5646

0000000000005640         mov        byte [r14+r15+2], 0x22

                     loc_5646:
0000000000005646         lea        rax, qword [r15+3]                          ; CODE XREF=sub_4d40+2302
000000000000564a         cmp        r13, rax
000000000000564d         jbe        loc_5655

000000000000564f         mov        byte [r14+r15+3], 0x3f

                     loc_5655:
0000000000005655         add        r15, 0x4                                    ; CODE XREF=sub_4d40+2317
0000000000005659         xor        edx, edx
000000000000565b         xor        r12d, r12d
000000000000565e         xor        eax, eax
0000000000005660         mov        rbp, rcx
0000000000005663         jmp        sub_47f0+56
                        ; endp

                     loc_5668:
0000000000005668         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
000000000000566a         je         loc_57f8

0000000000005670         lea        rax, qword [aLibs+29]                       ; 0x809d
0000000000005677         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000567c         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000005681         xor        r12d, r12d
0000000000005684         mov        qword [rsp+0xe8+var_98], 0x0
000000000000568d         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000005692         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000005697         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000056a0         xor        r15d, r15d
00000000000056a3         mov        qword [rsp+0xe8+var_A0], rax
00000000000056a8         jmp        loc_46d3
00000000000056ad         align      16

                     loc_56b0:
00000000000056b0         mov        rbp, r11                                    ; CODE XREF=sub_4d40+333
00000000000056b3         movzx      eax, byte [rsp+arg_7]
00000000000056b8         jmp        sub_4d40+1097
                        ; endp

                     loc_56bd:
00000000000056bd         lea        rax, qword [aLibs+27]                       ; 0x809b, CODE XREF=sub_4d40+1410
00000000000056c4         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000056c9         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000056ce         xor        r12d, r12d
00000000000056d1         mov        qword [rsp+0xe8+var_98], 0x0
00000000000056da         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000056df         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000056e4         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000056ed         xor        r15d, r15d
00000000000056f0         mov        qword [rsp+0xe8+var_A0], rax
00000000000056f5         jmp        loc_46d3

                     loc_56fa:
00000000000056fa         mov        eax, edx                                    ; CODE XREF=sub_4d40+87

                     loc_56fc:
00000000000056fc         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_4d40+76, sub_4d40+2721
0000000000005701         test       rbx, rbx
0000000000005704         je         loc_5732

0000000000005706         test       al, al
0000000000005708         je         loc_5732

000000000000570a         movzx      ecx, byte [rbx]
000000000000570d         mov        rax, rbx
0000000000005710         test       cl, cl
0000000000005712         je         loc_5732

0000000000005714         mov        rdx, r15
0000000000005717         sub        rax, r15

                     loc_571a:
000000000000571a         cmp        r13, rdx                                    ; CODE XREF=sub_4d40+2541
000000000000571d         jbe        loc_5723

000000000000571f         mov        byte [r14+rdx], cl

                     loc_5723:
0000000000005723         add        rdx, 0x1                                    ; CODE XREF=sub_4d40+2525
0000000000005727         movzx      ecx, byte [rax+rdx]
000000000000572b         test       cl, cl
000000000000572d         jne        loc_571a

000000000000572f         mov        r15, rdx

                     loc_5732:
0000000000005732         cmp        r13, r15                                    ; CODE XREF=sub_4d40+2500, sub_4d40+2504, sub_4d40+2514
0000000000005735         jbe        loc_51d9

000000000000573b         mov        byte [r14+r15], 0x0
0000000000005740         jmp        loc_51d9

                     loc_5745:
0000000000005745         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
000000000000574a         movzx      ebx, byte [rsp+0xe8+var_D9]
000000000000574f         mov        rbp, r11
0000000000005752         sete       al
0000000000005755         mov        byte [rsp+0xe8+var_DB], bl
0000000000005759         jmp        loc_5189

                     loc_575e:
000000000000575e         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_4d40+1664
0000000000005762         mov        rdi, rcx
0000000000005765         call       gettext_quote.part.1                        ; gettext_quote.part.1
000000000000576a         mov        qword [rsp+0xe8+var_80], rax
000000000000576f         jmp        loc_53c6

                     loc_5774:
0000000000005774         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_4d40+1707
0000000000005778         mov        rdi, rcx
000000000000577b         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000005780         mov        qword [rsp+0xe8+var_88], rax
0000000000005785         jmp        loc_53f1

                     loc_578a:
000000000000578a         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_4be0+16
000000000000578f         mov        rbp, r11
0000000000005792         mov        eax, edx
0000000000005794         mov        byte [rsp+arg_5], bl
0000000000005798         jmp        sub_4d40+1097
                        ; endp

                     loc_579d:
000000000000579d         sub        rsp, 0x8                                    ; CODE XREF=sub_4d40+98
00000000000057a1         mov        r8d, 0x5
00000000000057a7         mov        rcx, r11
00000000000057aa         push       qword [rsp+0xf0+var_88]
00000000000057ae         push       qword [rsp+0xf8+var_80]
00000000000057b2         mov        rdi, r14
00000000000057b5         push       qword [rsp+0x100+var_C8]
00000000000057b9         mov        r9d, dword [rsp+0x108+var_70]
00000000000057c1         mov        rdx, qword [rsp+0x108+var_D8]
00000000000057c6         mov        rsi, qword [rsp+0x108+var_98]
00000000000057cb         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000057d0         add        rsp, 0x20
00000000000057d4         mov        r15, rax
00000000000057d7         jmp        loc_51d9

                     loc_57dc:
00000000000057dc         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_4d40+121
00000000000057e1         jmp        loc_56fc

                     loc_57e6:
00000000000057e6         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_4d40+63
00000000000057ee         jmp        loc_5189

                     loc_57f3:
00000000000057f3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_4d40+1197
                        ; endp

                     loc_57f8:
00000000000057f8         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_4d40+2346
00000000000057fd         jmp        loc_5271

                     loc_5802:
0000000000005802         mov        rbp, r11                                    ; CODE XREF=sub_4d40+2264
0000000000005805         jmp        sub_4d40+1120
                        ; endp

                     loc_580a:
000000000000580a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_4d40+1332
000000000000580f         xor        eax, eax
0000000000005811         xor        r12d, r12d
0000000000005814         mov        qword [rsp+0xe8+var_98], 0x0
000000000000581d         jmp        loc_4dc4

                     loc_5822:
0000000000005822         mov        rdx, r13                                    ; CODE XREF=sub_4d40+1264
0000000000005825         mov        r13, qword [rsp+arg_48]
000000000000582a         jmp        loc_4e22

                     loc_582f:
000000000000582f         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
0000000000005834         align      64                                          ; End of unwind block (FDE at 0x9598)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
0000000000005840         push       r15                                         ; Begin of unwind block (FDE at 0x9610), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
0000000000005842         push       r14
0000000000005844         movsxd     r15, edi
0000000000005847         push       r13
0000000000005849         push       r12
000000000000584b         mov        r14, rdx
000000000000584e         push       rbp
000000000000584f         push       rbx
0000000000005850         mov        rbp, rcx
0000000000005853         sub        rsp, 0x28
0000000000005857         mov        qword [rsp+0x58+var_50], rsi
000000000000585c         call       j___errno_location                          ; __errno_location
0000000000005861         mov        r13, rax
0000000000005864         mov        eax, dword [rax]
0000000000005866         test       r15d, r15d
0000000000005869         mov        rbx, qword [slotvec]                        ; slotvec
0000000000005870         mov        dword [rsp+0x58+var_40], eax
0000000000005874         js         loc_59e1

000000000000587a         cmp        dword [nslots], r15d                        ; nslots
0000000000005881         jg         loc_58e5

0000000000005883         cmp        r15d, 0x7fffffff
000000000000588a         je         loc_59e6

0000000000005890         lea        r12d, dword [r15+1]
0000000000005894         lea        rax, qword [slotvec0]                       ; slotvec0
000000000000589b         movsxd     rsi, r12d
000000000000589e         shl        rsi, 0x4
00000000000058a2         cmp        rbx, rax
00000000000058a5         je         loc_59c0

00000000000058ab         mov        rdi, rbx                                    ; argument #1 for method xrealloc
00000000000058ae         call       xrealloc                                    ; xrealloc
00000000000058b3         mov        rbx, rax
00000000000058b6         mov        qword [slotvec], rax                        ; slotvec

                     loc_58bd:
00000000000058bd         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
00000000000058c4         mov        edx, r12d
00000000000058c7         xor        esi, esi                                    ; argument "__c" for method j_memset
00000000000058c9         sub        edx, edi
00000000000058cb         shl        rdi, 0x4
00000000000058cf         movsxd     rdx, edx
00000000000058d2         add        rdi, rbx                                    ; argument "__s" for method j_memset
00000000000058d5         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
00000000000058d9         call       j_memset                                    ; memset
00000000000058de         mov        dword [nslots], r12d                        ; nslots

                     loc_58e5:
00000000000058e5         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
00000000000058e8         shl        r15, 0x4
00000000000058ec         sub        rsp, 0x8
00000000000058f0         add        rbx, r15
00000000000058f3         lea        r15, qword [rbp+8]
00000000000058f7         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
00000000000058fb         mov        r11, qword [rbx]
00000000000058fe         mov        r12, qword [rbx+8]
0000000000005902         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000005905         or         eax, 0x1
0000000000005908         mov        dword [rsp+0x60+var_3C], eax
000000000000590c         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
000000000000590f         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
0000000000005912         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000005915         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000005917         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
000000000000591a         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
000000000000591f         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
0000000000005922         mov        qword [rsp+0x78+var_48], r11
0000000000005927         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000592c         add        rsp, 0x20
0000000000005930         mov        r11, qword [rsp+0x58+var_48]
0000000000005935         cmp        r11, rax
0000000000005938         ja         loc_59a1

000000000000593a         lea        rsi, qword [rax+1]
000000000000593e         lea        rax, qword [slot0]                          ; slot0
0000000000005945         cmp        r12, rax
0000000000005948         mov        qword [rbx], rsi
000000000000594b         je         loc_595f

000000000000594d         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000005950         mov        qword [rsp+0x58+var_48], rsi
0000000000005955         call       j_free                                      ; free
000000000000595a         mov        rsi, qword [rsp+0x58+var_48]

                     loc_595f:
000000000000595f         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
0000000000005962         mov        qword [rsp+0x58+var_48], rsi
0000000000005967         call       xmalloc                                     ; xmalloc
000000000000596c         sub        rsp, 0x8
0000000000005970         mov        qword [rbx+8], rax
0000000000005974         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000005978         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
000000000000597b         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
000000000000597e         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000005981         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000005983         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
0000000000005988         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
000000000000598b         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000005990         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
0000000000005995         mov        r12, rax
0000000000005998         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000599d         add        rsp, 0x20

                     loc_59a1:
00000000000059a1         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
00000000000059a5         mov        dword [r13], eax
00000000000059a9         add        rsp, 0x28
00000000000059ad         mov        rax, r12
00000000000059b0         pop        rbx
00000000000059b1         pop        rbp
00000000000059b2         pop        r12
00000000000059b4         pop        r13
00000000000059b6         pop        r14
00000000000059b8         pop        r15
00000000000059ba         ret
                        ; endp
00000000000059bb         align      64

                     loc_59c0:
00000000000059c0         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
00000000000059c2         call       xrealloc                                    ; xrealloc
00000000000059c7         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
00000000000059cf         mov        rbx, rax
00000000000059d2         mov        qword [slotvec], rax                        ; slotvec
00000000000059d9         movups     xmmword [rax], xmm0
00000000000059dc         jmp        loc_58bd

                     loc_59e1:
00000000000059e1         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_59e6:
00000000000059e6         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_59eb:
00000000000059eb         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x9610)
                     clone_quoting_options:
00000000000059f0         push       r12                                         ; Begin of unwind block (FDE at 0x967c)
00000000000059f2         push       rbp
00000000000059f3         push       rbx
00000000000059f4         mov        rbx, rdi
00000000000059f7         call       j___errno_location                          ; __errno_location
00000000000059fc         mov        r12d, dword [rax]
00000000000059ff         mov        rbp, rax
0000000000005a02         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000005a09         test       rbx, rbx
0000000000005a0c         mov        esi, 0x38                                   ; argument #2 for method xmemdup
0000000000005a11         cmove      rbx, rax
0000000000005a15         mov        rdi, rbx                                    ; argument #1 for method xmemdup
0000000000005a18         call       xmemdup                                     ; xmemdup
0000000000005a1d         mov        dword [rbp], r12d
0000000000005a21         pop        rbx
0000000000005a22         pop        rbp
0000000000005a23         pop        r12
0000000000005a25         ret
                        ; endp
0000000000005a26         align      16                                          ; End of unwind block (FDE at 0x967c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
0000000000005a30         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x96a8), default_quoting_options
0000000000005a37         test       rdi, rdi
0000000000005a3a         cmove      rdi, rax
0000000000005a3e         mov        eax, dword [rdi]
0000000000005a40         ret
                        ; endp
0000000000005a41         align      16                                          ; End of unwind block (FDE at 0x96a8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
0000000000005a50         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x96bc), default_quoting_options
0000000000005a57         test       rdi, rdi
0000000000005a5a         cmove      rdi, rax
0000000000005a5e         mov        dword [rdi], esi
0000000000005a60         ret
                        ; endp
0000000000005a61         align      16                                          ; End of unwind block (FDE at 0x96bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
0000000000005a70         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x96d0), default_quoting_options
0000000000005a77         test       rdi, rdi
0000000000005a7a         mov        ecx, esi
0000000000005a7c         cmove      rdi, rax
0000000000005a80         mov        eax, esi
0000000000005a82         and        ecx, 0x1f
0000000000005a85         shr        al, 0x5
0000000000005a88         movzx      eax, al
0000000000005a8b         lea        rdi, qword [rdi+rax*4+8]
0000000000005a90         mov        esi, dword [rdi]
0000000000005a92         mov        eax, esi
0000000000005a94         shr        eax, cl
0000000000005a96         xor        edx, eax
0000000000005a98         and        eax, 0x1
0000000000005a9b         and        edx, 0x1
0000000000005a9e         shl        edx, cl
0000000000005aa0         xor        edx, esi
0000000000005aa2         mov        dword [rdi], edx
0000000000005aa4         ret
                        ; endp
0000000000005aa5         align      16                                          ; End of unwind block (FDE at 0x96d0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
0000000000005ab0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x96e4), default_quoting_options
0000000000005ab7         test       rdi, rdi
0000000000005aba         cmove      rdi, rax
0000000000005abe         mov        eax, dword [rdi+4]
0000000000005ac1         mov        dword [rdi+4], esi
0000000000005ac4         ret
                        ; endp
0000000000005ac5         align      16                                          ; End of unwind block (FDE at 0x96e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
0000000000005ad0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x96f8), default_quoting_options
0000000000005ad7         test       rdi, rdi
0000000000005ada         cmove      rdi, rax
0000000000005ade         test       rsi, rsi
0000000000005ae1         mov        dword [rdi], 0xa
0000000000005ae7         je         loc_5af7

0000000000005ae9         test       rdx, rdx
0000000000005aec         je         loc_5af7

0000000000005aee         mov        qword [rdi+0x28], rsi
0000000000005af2         mov        qword [rdi+0x30], rdx
0000000000005af6         ret
                        ; endp

                     loc_5af7:
0000000000005af7         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
0000000000005afb         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
0000000000005b00         push       r15                                         ; End of unwind block (FDE at 0x96f8), Begin of unwind block (FDE at 0x970c)
0000000000005b02         push       r14
0000000000005b04         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000005b0b         push       r13
0000000000005b0d         push       r12
0000000000005b0f         mov        r13, rdi
0000000000005b12         push       rbp
0000000000005b13         push       rbx
0000000000005b14         mov        rbx, r8
0000000000005b17         mov        r14, rsi
0000000000005b1a         mov        r15, rdx
0000000000005b1d         sub        rsp, 0x18
0000000000005b21         test       r8, r8
0000000000005b24         cmove      rbx, rax
0000000000005b28         mov        qword [rsp+0x48+var_40], rcx
0000000000005b2d         call       j___errno_location                          ; __errno_location
0000000000005b32         mov        r12d, dword [rax]
0000000000005b35         mov        rbp, rax
0000000000005b38         lea        rax, qword [rbx+8]
0000000000005b3c         sub        rsp, 0x8
0000000000005b40         mov        r9d, dword [rbx+4]
0000000000005b44         push       qword [rbx+0x30]
0000000000005b47         mov        r8d, dword [rbx]
0000000000005b4a         push       qword [rbx+0x28]
0000000000005b4d         mov        rdx, r15
0000000000005b50         push       rax
0000000000005b51         mov        rcx, qword [rsp+0x68+var_40]
0000000000005b56         mov        rsi, r14
0000000000005b59         mov        rdi, r13
0000000000005b5c         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000005b61         mov        dword [rbp], r12d
0000000000005b65         add        rsp, 0x38
0000000000005b69         pop        rbx
0000000000005b6a         pop        rbp
0000000000005b6b         pop        r12
0000000000005b6d         pop        r13
0000000000005b6f         pop        r14
0000000000005b71         pop        r15
0000000000005b73         ret
                        ; endp
0000000000005b74         align      128                                         ; End of unwind block (FDE at 0x970c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
0000000000005b80         push       r15                                         ; Begin of unwind block (FDE at 0x9760), CODE XREF=quotearg_alloc+5
0000000000005b82         push       r14
0000000000005b84         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000005b8b         push       r13
0000000000005b8d         push       r12
0000000000005b8f         mov        r12, rdx
0000000000005b92         push       rbp
0000000000005b93         push       rbx
0000000000005b94         mov        rbx, rcx
0000000000005b97         mov        r14, rdi
0000000000005b9a         mov        r15, rsi
0000000000005b9d         sub        rsp, 0x38
0000000000005ba1         test       rcx, rcx
0000000000005ba4         cmove      rbx, rax
0000000000005ba8         xor        ebp, ebp
0000000000005baa         call       j___errno_location                          ; __errno_location
0000000000005baf         test       r12, r12
0000000000005bb2         mov        r13, rax
0000000000005bb5         mov        eax, dword [rax]
0000000000005bb7         sete       bpl
0000000000005bbb         or         ebp, dword [rbx+4]
0000000000005bbe         lea        r10, qword [rbx+8]
0000000000005bc2         sub        rsp, 0x8
0000000000005bc6         mov        r8d, dword [rbx]
0000000000005bc9         mov        rcx, r15
0000000000005bcc         mov        dword [rsp+0x70+var_5C], eax
0000000000005bd0         push       qword [rbx+0x30]
0000000000005bd3         mov        rdx, r14
0000000000005bd6         push       qword [rbx+0x28]
0000000000005bd9         push       r10
0000000000005bdb         xor        esi, esi
0000000000005bdd         mov        r9d, ebp
0000000000005be0         xor        edi, edi
0000000000005be2         mov        qword [rsp+0x88+var_48], r10
0000000000005be7         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000005bec         lea        rsi, qword [rax+1]
0000000000005bf0         mov        qword [rsp+0x88+var_40], rax
0000000000005bf5         add        rsp, 0x20
0000000000005bf9         mov        rdi, rsi
0000000000005bfc         mov        qword [rsp+0x68+var_50], rsi
0000000000005c01         call       xmalloc                                     ; xmalloc
0000000000005c06         mov        qword [rsp+0x68+var_58], rax
0000000000005c0b         sub        rsp, 0x8
0000000000005c0f         push       qword [rbx+0x30]
0000000000005c12         push       qword [rbx+0x28]
0000000000005c15         mov        r10, qword [rsp+0x80+var_48]
0000000000005c1a         mov        r9d, ebp
0000000000005c1d         mov        r8d, dword [rbx]
0000000000005c20         mov        rcx, r15
0000000000005c23         mov        rdx, r14
0000000000005c26         mov        rdi, rax
0000000000005c29         push       r10
0000000000005c2b         mov        rsi, qword [rsp+0x88+var_50]
0000000000005c30         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000005c35         mov        eax, dword [rsp+0x88+var_5C]
0000000000005c39         add        rsp, 0x20
0000000000005c3d         test       r12, r12
0000000000005c40         mov        dword [r13], eax
0000000000005c44         je         loc_5c4f

0000000000005c46         mov        r11, qword [rsp+0x68+var_40]
0000000000005c4b         mov        qword [r12], r11

                     loc_5c4f:
0000000000005c4f         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
0000000000005c54         add        rsp, 0x38
0000000000005c58         pop        rbx
0000000000005c59         pop        rbp
0000000000005c5a         pop        r12
0000000000005c5c         pop        r13
0000000000005c5e         pop        r14
0000000000005c60         pop        r15
0000000000005c62         ret
                        ; endp
0000000000005c63         align      16                                          ; End of unwind block (FDE at 0x9760)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
0000000000005c70         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x97cc)
0000000000005c73         xor        edx, edx
0000000000005c75         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
0000000000005c7a         align      128                                         ; End of unwind block (FDE at 0x97cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
0000000000005c80         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0x97e0), nslots
0000000000005c86         push       r12
0000000000005c88         mov        r12, qword [slotvec]                        ; slotvec
0000000000005c8f         push       rbp
0000000000005c90         push       rbx
0000000000005c91         cmp        eax, 0x1
0000000000005c94         jle        loc_5cc1

0000000000005c96         sub        eax, 0x2
0000000000005c99         lea        rbx, qword [r12+0x18]
0000000000005c9e         shl        rax, 0x4
0000000000005ca2         lea        rbp, qword [r12+rax+0x28]
0000000000005ca7         nop        word [rax+rax]

                     loc_5cb0:
0000000000005cb0         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
0000000000005cb3         add        rbx, 0x10
0000000000005cb7         call       j_free                                      ; free
0000000000005cbc         cmp        rbx, rbp
0000000000005cbf         jne        loc_5cb0

                     loc_5cc1:
0000000000005cc1         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
0000000000005cc6         lea        rbx, qword [slot0]                          ; slot0
0000000000005ccd         cmp        rdi, rbx
0000000000005cd0         je         loc_5ce9

0000000000005cd2         call       j_free                                      ; free
0000000000005cd7         mov        qword [slotvec0], 0x100                     ; slotvec0
0000000000005ce2         mov        qword [slotvec0+8], rbx                     ; 0x20b078

                     loc_5ce9:
0000000000005ce9         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
0000000000005cf0         cmp        r12, rbx
0000000000005cf3         je         loc_5d04

0000000000005cf5         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000005cf8         call       j_free                                      ; free
0000000000005cfd         mov        qword [slotvec], rbx                        ; slotvec

                     loc_5d04:
0000000000005d04         pop        rbx                                         ; CODE XREF=quotearg_free+115
0000000000005d05         mov        dword [nslots], 0x1                         ; nslots
0000000000005d0f         pop        rbp
0000000000005d10         pop        r12
0000000000005d12         ret
                        ; endp
0000000000005d13         align      32                                          ; End of unwind block (FDE at 0x97e0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
0000000000005d20         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x980c), default_quoting_options
0000000000005d27         mov        rdx, 0xffffffffffffffff
0000000000005d2e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005d33         align      64                                          ; End of unwind block (FDE at 0x980c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
0000000000005d40         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x9820), default_quoting_options
0000000000005d47         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005d4c         align      16                                          ; End of unwind block (FDE at 0x9820)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
0000000000005d50         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x9834), default_quoting_options
0000000000005d57         mov        rsi, rdi
0000000000005d5a         mov        rdx, 0xffffffffffffffff
0000000000005d61         xor        edi, edi
0000000000005d63         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005d68         align      16                                          ; End of unwind block (FDE at 0x9834)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
0000000000005d70         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x9848), default_quoting_options
0000000000005d77         mov        rdx, rsi
0000000000005d7a         mov        rsi, rdi
0000000000005d7d         xor        edi, edi
0000000000005d7f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005d84         align      16                                          ; End of unwind block (FDE at 0x9848)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
0000000000005d90         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x985c)
0000000000005d94         mov        rax, rdx
0000000000005d97         mov        rdx, qword [fs:0x28]
0000000000005da0         mov        qword [rsp+0x48+var_10], rdx
0000000000005da5         xor        edx, edx
0000000000005da7         cmp        esi, 0xa
0000000000005daa         je         loc_5e14

0000000000005dac         mov        dword [rsp+0x48+var_48], esi
0000000000005daf         mov        rcx, rsp
0000000000005db2         mov        rdx, 0xffffffffffffffff
0000000000005db9         mov        rsi, rax
0000000000005dbc         mov        qword [rsp+0x48+var_44], 0x0
0000000000005dc5         mov        qword [rsp+0x48+var_3C], 0x0
0000000000005dce         mov        qword [rsp+0x48+var_34], 0x0
0000000000005dd7         mov        qword [rsp+0x48+var_2C], 0x0
0000000000005de0         mov        qword [rsp+0x48+var_24], 0x0
0000000000005de9         mov        qword [rsp+0x48+var_1C], 0x0
0000000000005df2         mov        dword [rsp+0x48+var_14], 0x0
0000000000005dfa         call       quotearg_n_options                          ; quotearg_n_options
0000000000005dff         mov        rcx, qword [rsp+0x48+var_10]
0000000000005e04         xor        rcx, qword [fs:0x28]
0000000000005e0d         jne        loc_5e19

0000000000005e0f         add        rsp, 0x48
0000000000005e13         ret
                        ; endp

                     loc_5e14:
0000000000005e14         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_5e19:
0000000000005e19         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
0000000000005e1e         align      32                                          ; End of unwind block (FDE at 0x985c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
0000000000005e20         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x9878), CODE XREF=quotearg_style_mem+10
0000000000005e24         mov        rax, rdx
0000000000005e27         mov        rdx, rcx
0000000000005e2a         mov        rcx, qword [fs:0x28]
0000000000005e33         mov        qword [rsp+0x48+var_10], rcx
0000000000005e38         xor        ecx, ecx
0000000000005e3a         cmp        esi, 0xa
0000000000005e3d         je         loc_5ea0

0000000000005e3f         mov        dword [rsp+0x48+var_48], esi
0000000000005e42         mov        rcx, rsp
0000000000005e45         mov        rsi, rax
0000000000005e48         mov        qword [rsp+0x48+var_44], 0x0
0000000000005e51         mov        qword [rsp+0x48+var_3C], 0x0
0000000000005e5a         mov        qword [rsp+0x48+var_34], 0x0
0000000000005e63         mov        qword [rsp+0x48+var_2C], 0x0
0000000000005e6c         mov        qword [rsp+0x48+var_24], 0x0
0000000000005e75         mov        qword [rsp+0x48+var_1C], 0x0
0000000000005e7e         mov        dword [rsp+0x48+var_14], 0x0
0000000000005e86         call       quotearg_n_options                          ; quotearg_n_options
0000000000005e8b         mov        rdx, qword [rsp+0x48+var_10]
0000000000005e90         xor        rdx, qword [fs:0x28]
0000000000005e99         jne        loc_5ea5

0000000000005e9b         add        rsp, 0x48
0000000000005e9f         ret
                        ; endp

                     loc_5ea0:
0000000000005ea0         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_5ea5:
0000000000005ea5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
0000000000005eaa         align      16                                          ; End of unwind block (FDE at 0x9878)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
0000000000005eb0         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x9894)
0000000000005eb3         mov        esi, edi
0000000000005eb5         xor        edi, edi
0000000000005eb7         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
0000000000005ebc         align      64                                          ; End of unwind block (FDE at 0x9894)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
0000000000005ec0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x98a8)
0000000000005ec3         mov        rdx, rsi
0000000000005ec6         mov        esi, edi
0000000000005ec8         xor        edi, edi
0000000000005eca         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
0000000000005ecf         align      16                                          ; End of unwind block (FDE at 0x98a8)

                     quotearg_char_mem:
0000000000005ed0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x98bc), CODE XREF=quotearg_char+11
0000000000005ed4         mov        ecx, edx
0000000000005ed6         mov        rax, qword [fs:0x28]
0000000000005edf         mov        qword [rsp+0x48+var_10], rax
0000000000005ee4         xor        eax, eax
0000000000005ee6         mov        rax, qword [qword_20b250]                   ; qword_20b250
0000000000005eed         mov        r8, rsp
0000000000005ef0         and        ecx, 0x1f
0000000000005ef3         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000005efb         mov        qword [rsp+0x48+var_18], rax
0000000000005f00         mov        eax, edx
0000000000005f02         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000005f06         shr        al, 0x5
0000000000005f09         movzx      eax, al
0000000000005f0c         lea        r9, qword [r8+rax*4+8]
0000000000005f11         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20b230
0000000000005f19         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000005f1e         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20b240
0000000000005f26         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000005f2b         mov        edx, dword [r9]
0000000000005f2e         mov        eax, edx
0000000000005f30         shr        eax, cl
0000000000005f32         not        eax
0000000000005f34         and        eax, 0x1
0000000000005f37         shl        eax, cl
0000000000005f39         mov        rcx, r8
0000000000005f3c         xor        eax, edx
0000000000005f3e         mov        rdx, rsi
0000000000005f41         mov        rsi, rdi
0000000000005f44         mov        dword [r9], eax
0000000000005f47         xor        edi, edi
0000000000005f49         call       quotearg_n_options                          ; quotearg_n_options
0000000000005f4e         mov        rsi, qword [rsp+0x48+var_10]
0000000000005f53         xor        rsi, qword [fs:0x28]
0000000000005f5c         jne        loc_5f63

0000000000005f5e         add        rsp, 0x48
0000000000005f62         ret
                        ; endp

                     loc_5f63:
0000000000005f63         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
0000000000005f68         align      16                                          ; End of unwind block (FDE at 0x98bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
0000000000005f70         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0x98d8)
0000000000005f74         mov        rsi, 0xffffffffffffffff
0000000000005f7b         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
0000000000005f80         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0x98d8), Begin of unwind block (FDE at 0x98ec), CODE XREF=close_stdout+101
0000000000005f85         mov        rsi, 0xffffffffffffffff
0000000000005f8c         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000005f91         align      32                                          ; End of unwind block (FDE at 0x98ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
0000000000005fa0         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0x9900)
0000000000005fa5         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000005faa         align      16                                          ; End of unwind block (FDE at 0x9900)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
0000000000005fb0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x9914), CODE XREF=main+2436, main+2690
0000000000005fb4         mov        rax, rdx
0000000000005fb7         mov        rdx, qword [fs:0x28]
0000000000005fc0         mov        qword [rsp+0x48+var_10], rdx
0000000000005fc5         xor        edx, edx
0000000000005fc7         cmp        esi, 0xa
0000000000005fca         je         loc_6034

0000000000005fcc         mov        dword [rsp+0x48+var_48], esi
0000000000005fcf         mov        rcx, rsp
0000000000005fd2         mov        rdx, 0xffffffffffffffff
0000000000005fd9         mov        rsi, rax
0000000000005fdc         mov        qword [rsp+0x48+var_44], 0x0
0000000000005fe5         mov        qword [rsp+0x48+var_3C], 0x4000000
0000000000005fee         mov        qword [rsp+0x48+var_34], 0x0
0000000000005ff7         mov        qword [rsp+0x48+var_2C], 0x0
0000000000006000         mov        qword [rsp+0x48+var_24], 0x0
0000000000006009         mov        qword [rsp+0x48+var_1C], 0x0
0000000000006012         mov        dword [rsp+0x48+var_14], 0x0
000000000000601a         call       quotearg_n_options                          ; quotearg_n_options
000000000000601f         mov        rcx, qword [rsp+0x48+var_10]
0000000000006024         xor        rcx, qword [fs:0x28]
000000000000602d         jne        loc_6039

000000000000602f         add        rsp, 0x48
0000000000006033         ret
                        ; endp

                     loc_6034:
0000000000006034         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_6039:
0000000000006039         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
000000000000603e         align      64                                          ; End of unwind block (FDE at 0x9914)

                     quotearg_n_custom_mem:
0000000000006040         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x9930), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
0000000000006044         mov        r9, rcx
0000000000006047         mov        rcx, qword [qword_20b250]                   ; qword_20b250
000000000000604e         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000006056         mov        rax, qword [fs:0x28]
000000000000605f         mov        qword [rsp+0x48+var_10], rax
0000000000006064         xor        eax, eax
0000000000006066         movaps     xmmword [rsp+0x48+var_48], xmm0
000000000000606a         test       rsi, rsi
000000000000606d         mov        qword [rsp+0x48+var_18], rcx
0000000000006072         mov        dword [rsp+0x48+var_48], 0xa
0000000000006079         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20b230
0000000000006081         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000006086         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20b240
000000000000608e         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000006093         je         loc_60c7

0000000000006095         test       rdx, rdx
0000000000006098         je         loc_60c7

000000000000609a         mov        qword [rsp+0x48+var_20], rsi
000000000000609f         mov        qword [rsp+0x48+var_18], rdx
00000000000060a4         mov        rcx, rsp
00000000000060a7         mov        rdx, r8
00000000000060aa         mov        rsi, r9
00000000000060ad         call       quotearg_n_options                          ; quotearg_n_options
00000000000060b2         mov        rdi, qword [rsp+0x48+var_10]
00000000000060b7         xor        rdi, qword [fs:0x28]
00000000000060c0         jne        loc_60cc

00000000000060c2         add        rsp, 0x48
00000000000060c6         ret
                        ; endp

                     loc_60c7:
00000000000060c7         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_60cc:
00000000000060cc         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
00000000000060d1         align      32                                          ; End of unwind block (FDE at 0x9930)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom:
00000000000060e0         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0x994c)
00000000000060e7         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
00000000000060ec         align      16                                          ; End of unwind block (FDE at 0x994c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
00000000000060f0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x9960)
00000000000060f3         mov        r8, 0xffffffffffffffff
00000000000060fa         mov        rdx, rsi
00000000000060fd         mov        rsi, rdi
0000000000006100         xor        edi, edi
0000000000006102         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000006107         align      16                                          ; End of unwind block (FDE at 0x9960)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
0000000000006110         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0x9974)
0000000000006113         mov        rcx, rdx
0000000000006116         mov        rdx, rsi
0000000000006119         mov        rsi, rdi
000000000000611c         xor        edi, edi
000000000000611e         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000006123         align      16                                          ; End of unwind block (FDE at 0x9974)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
0000000000006130         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x9988), quote_quoting_options
0000000000006137         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000613c         align      64                                          ; End of unwind block (FDE at 0x9988)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
0000000000006140         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x999c), quote_quoting_options
0000000000006147         mov        rdx, rsi
000000000000614a         mov        rsi, rdi
000000000000614d         xor        edi, edi
000000000000614f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000006154         align      32                                          ; End of unwind block (FDE at 0x999c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
0000000000006160         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x99b0), quote_quoting_options
0000000000006167         mov        rdx, 0xffffffffffffffff
000000000000616e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000006173         align      128                                         ; End of unwind block (FDE at 0x99b0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
0000000000006180         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x99c4), quote_quoting_options, CODE XREF=main+2732, xnumtoumax+109
0000000000006187         mov        rsi, rdi
000000000000618a         mov        rdx, 0xffffffffffffffff
0000000000006191         xor        edi, edi
0000000000006193         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000006198         align      32                                          ; End of unwind block (FDE at 0x99c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
00000000000061a0         push       r15                                         ; Begin of unwind block (FDE at 0x99dc), CODE XREF=version_etc_va+75, version_etc+161
00000000000061a2         push       r14
00000000000061a4         push       r13
00000000000061a6         push       r12
00000000000061a8         mov        r12, r9
00000000000061ab         push       rbp
00000000000061ac         push       rbx
00000000000061ad         mov        rbp, rdi
00000000000061b0         mov        rbx, r8
00000000000061b3         sub        rsp, 0x28
00000000000061b7         test       rsi, rsi
00000000000061ba         je         loc_62d8

00000000000061c0         mov        r8, rdx
00000000000061c3         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
00000000000061ca         mov        r9, rcx
00000000000061cd         xor        eax, eax
00000000000061cf         mov        rcx, rsi
00000000000061d2         mov        esi, 0x1
00000000000061d7         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_61dc:
00000000000061dc         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0x857b, CODE XREF=version_etc_arn+337
00000000000061e3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000061e5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000061ea         call       j_dcgettext                                 ; dcgettext
00000000000061ef         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
00000000000061f6         mov        rcx, rax
00000000000061f9         mov        r8d, 0x7e3
00000000000061ff         mov        esi, 0x1
0000000000006204         mov        rdi, rbp
0000000000006207         xor        eax, eax
0000000000006209         call       j___fprintf_chk                             ; __fprintf_chk
000000000000620e         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000006215         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006217         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000621c         call       j_dcgettext                                 ; dcgettext
0000000000006221         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
0000000000006224         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000006227         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000622c         cmp        r12, 0x9
0000000000006230         ja         loc_6570

0000000000006236         lea        rdx, qword [switch_table_8864]              ; switch_table_8864
000000000000623d         movsxd     rax, dword [rdx+r12*4]
0000000000006241         add        rax, rdx
0000000000006244         jmp        rax                                         ; switch statement using table at 0x8864, with 10 cases, 0x6250,0x62c6,0x6300,0x6358,0x6398,0x63e0,0x6430,0x6488,0x64b8,0x6520
0000000000006246         align      16

                     loc_6250:
0000000000006250         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
0000000000006254         mov        rax, qword [rbx+0x10]
0000000000006258         lea        rsi, qword [aWrittenBySSSns_8778]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
000000000000625f         mov        r8, qword [rbx+8]
0000000000006263         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006268         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000626a         mov        r13, qword [rbx+0x30]
000000000000626e         mov        r12, qword [rbx+0x28]
0000000000006272         mov        qword [rsp+0x58+var_48], r9
0000000000006277         mov        r15, qword [rbx+0x20]
000000000000627b         mov        r14, qword [rbx+0x18]
000000000000627f         mov        qword [rsp+0x58+var_58], rax
0000000000006283         mov        qword [rsp+0x58+var_50], r8
0000000000006288         mov        rbx, qword [rbx]
000000000000628b         call       j_dcgettext                                 ; dcgettext
0000000000006290         sub        rsp, 0x8

                     loc_6294:
0000000000006294         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
0000000000006299         mov        rdx, rax
000000000000629c         mov        rcx, rbx
000000000000629f         mov        esi, 0x1
00000000000062a4         mov        rdi, rbp
00000000000062a7         xor        eax, eax
00000000000062a9         push       r9
00000000000062ab         push       r13
00000000000062ad         push       r12
00000000000062af         push       r15
00000000000062b1         push       r14
00000000000062b3         mov        r9, qword [rsp+0x88+var_58]
00000000000062b8         mov        r8, qword [rsp+0x88+var_50]
00000000000062bd         call       j___fprintf_chk                             ; __fprintf_chk
00000000000062c2         add        rsp, 0x30

                     loc_62c6:
00000000000062c6         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
00000000000062ca         pop        rbx
00000000000062cb         pop        rbp
00000000000062cc         pop        r12
00000000000062ce         pop        r13
00000000000062d0         pop        r14
00000000000062d2         pop        r15
00000000000062d4         ret
                        ; endp
00000000000062d5         align      8

                     loc_62d8:
00000000000062d8         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
00000000000062db         mov        rcx, rdx
00000000000062de         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
00000000000062e5         mov        esi, 0x1
00000000000062ea         xor        eax, eax
00000000000062ec         call       j___fprintf_chk                             ; __fprintf_chk
00000000000062f1         jmp        loc_61dc
00000000000062f6         align      256

                     loc_6300:
0000000000006300         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
0000000000006304         mov        r9, qword [rbx+0x38]
0000000000006308         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
000000000000630f         mov        rax, qword [rbx+0x10]
0000000000006313         mov        r8, qword [rbx+8]
0000000000006317         mov        edx, 0x5
000000000000631c         mov        r13, qword [rbx+0x30]
0000000000006320         mov        r12, qword [rbx+0x28]
0000000000006324         mov        r15, qword [rbx+0x20]
0000000000006328         mov        r14, qword [rbx+0x18]
000000000000632c         mov        rbx, qword [rbx]
000000000000632f         mov        qword [rsp+0x58+var_40], r10
0000000000006334         mov        qword [rsp+0x58+var_48], r9
0000000000006339         mov        qword [rsp+0x58+var_58], rax
000000000000633d         mov        qword [rsp+0x58+var_50], r8

                     loc_6342:
0000000000006342         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
0000000000006344         call       j_dcgettext                                 ; dcgettext
0000000000006349         mov        r10, qword [rsp+0x58+var_40]
000000000000634e         push       r10
0000000000006350         jmp        loc_6294
0000000000006355         align      8

                     loc_6358:
0000000000006358         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
000000000000635b         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
0000000000006362         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006367         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006369         call       j_dcgettext                                 ; dcgettext
000000000000636e         add        rsp, 0x28
0000000000006372         mov        rcx, rbx
0000000000006375         mov        rdi, rbp
0000000000006378         pop        rbx
0000000000006379         pop        rbp
000000000000637a         pop        r12
000000000000637c         pop        r13
000000000000637e         pop        r14
0000000000006380         pop        r15
0000000000006382         mov        rdx, rax
0000000000006385         mov        esi, 0x1
000000000000638a         xor        eax, eax
000000000000638c         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000006391         align      8

                     loc_6398:
0000000000006398         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
000000000000639c         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
00000000000063a3         mov        rbx, qword [rbx]
00000000000063a6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000063ab         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000063ad         call       j_dcgettext                                 ; dcgettext
00000000000063b2         add        rsp, 0x28
00000000000063b6         mov        r8, r12
00000000000063b9         mov        rcx, rbx
00000000000063bc         mov        rdi, rbp
00000000000063bf         mov        rdx, rax
00000000000063c2         mov        esi, 0x1
00000000000063c7         pop        rbx
00000000000063c8         pop        rbp
00000000000063c9         pop        r12
00000000000063cb         pop        r13
00000000000063cd         pop        r14
00000000000063cf         pop        r15
00000000000063d1         xor        eax, eax
00000000000063d3         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
00000000000063d8         align      32

                     loc_63e0:
00000000000063e0         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
00000000000063e4         mov        r12, qword [rbx+8]
00000000000063e8         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
00000000000063ef         mov        rbx, qword [rbx]
00000000000063f2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000063f7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000063f9         call       j_dcgettext                                 ; dcgettext
00000000000063fe         add        rsp, 0x28
0000000000006402         mov        r9, r13
0000000000006405         mov        r8, r12
0000000000006408         mov        rcx, rbx
000000000000640b         mov        rdi, rbp
000000000000640e         mov        rdx, rax
0000000000006411         pop        rbx
0000000000006412         pop        rbp
0000000000006413         pop        r12
0000000000006415         pop        r13
0000000000006417         pop        r14
0000000000006419         pop        r15
000000000000641b         mov        esi, 0x1
0000000000006420         xor        eax, eax
0000000000006422         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000006427         align      16

                     loc_6430:
0000000000006430         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
0000000000006437         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000643c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000643e         mov        r14, qword [rbx+0x18]
0000000000006442         mov        r13, qword [rbx+0x10]
0000000000006446         mov        r12, qword [rbx+8]
000000000000644a         mov        rbx, qword [rbx]
000000000000644d         call       j_dcgettext                                 ; dcgettext
0000000000006452         sub        rsp, 0x8

                     loc_6456:
0000000000006456         push       r14                                         ; CODE XREF=version_etc_arn+784
0000000000006458         mov        rdx, rax
000000000000645b         mov        r9, r13
000000000000645e         mov        r8, r12
0000000000006461         mov        rcx, rbx
0000000000006464         mov        rdi, rbp
0000000000006467         mov        esi, 0x1
000000000000646c         xor        eax, eax
000000000000646e         call       j___fprintf_chk                             ; __fprintf_chk
0000000000006473         pop        rax
0000000000006474         pop        rdx
0000000000006475         add        rsp, 0x28
0000000000006479         pop        rbx
000000000000647a         pop        rbp
000000000000647b         pop        r12
000000000000647d         pop        r13
000000000000647f         pop        r14
0000000000006481         pop        r15
0000000000006483         ret
                        ; endp
0000000000006484         align      8

                     loc_6488:
0000000000006488         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
000000000000648c         lea        rsi, qword [aWrittenBySSSns_86f8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
0000000000006493         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006498         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000649a         mov        r14, qword [rbx+0x18]
000000000000649e         mov        r13, qword [rbx+0x10]
00000000000064a2         mov        r12, qword [rbx+8]
00000000000064a6         mov        rbx, qword [rbx]
00000000000064a9         call       j_dcgettext                                 ; dcgettext
00000000000064ae         push       r15
00000000000064b0         jmp        loc_6456
00000000000064b2         align      8

                     loc_64b8:
00000000000064b8         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
00000000000064bc         mov        r12, qword [rbx+0x28]
00000000000064c0         lea        rsi, qword [aWrittenBySSSns_8720]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
00000000000064c7         mov        r15, qword [rbx+0x20]
00000000000064cb         mov        r14, qword [rbx+0x18]
00000000000064cf         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000064d4         mov        r13, qword [rbx+0x10]
00000000000064d8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000064da         mov        rbx, qword [rbx]
00000000000064dd         mov        qword [rsp+0x58+var_58], r8
00000000000064e1         call       j_dcgettext                                 ; dcgettext
00000000000064e6         sub        rsp, 0x8
00000000000064ea         mov        r9, r13
00000000000064ed         push       r12
00000000000064ef         push       r15
00000000000064f1         push       r14

                     loc_64f3:
00000000000064f3         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
00000000000064f8         mov        rcx, rbx
00000000000064fb         mov        rdx, rax
00000000000064fe         mov        rdi, rbp
0000000000006501         mov        esi, 0x1
0000000000006506         xor        eax, eax
0000000000006508         call       j___fprintf_chk                             ; __fprintf_chk
000000000000650d         add        rsp, 0x20
0000000000006511         add        rsp, 0x28
0000000000006515         pop        rbx
0000000000006516         pop        rbp
0000000000006517         pop        r12
0000000000006519         pop        r13
000000000000651b         pop        r14
000000000000651d         pop        r15
000000000000651f         ret
                        ; endp

                     loc_6520:
0000000000006520         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
0000000000006524         mov        r13, qword [rbx+0x30]
0000000000006528         lea        rsi, qword [aWrittenBySSSns_8748]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
000000000000652f         mov        r12, qword [rbx+0x28]
0000000000006533         mov        r15, qword [rbx+0x20]
0000000000006537         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000653c         mov        r14, qword [rbx+0x18]
0000000000006540         mov        r8, qword [rbx+8]
0000000000006544         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006546         mov        qword [rsp+0x58+var_50], r9
000000000000654b         mov        rbx, qword [rbx]
000000000000654e         mov        qword [rsp+0x58+var_58], r8
0000000000006552         call       j_dcgettext                                 ; dcgettext
0000000000006557         push       r13
0000000000006559         push       r12
000000000000655b         push       r15
000000000000655d         push       r14
000000000000655f         mov        r9, qword [rsp+0x78+var_50]
0000000000006564         jmp        loc_64f3
0000000000006566         align      16

                     loc_6570:
0000000000006570         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
0000000000006574         mov        r9, qword [rbx+0x38]
0000000000006578         mov        edx, 0x5
000000000000657d         mov        rax, qword [rbx+0x10]
0000000000006581         mov        r8, qword [rbx+8]
0000000000006585         lea        rsi, qword [aWrittenBySSSns_87e0]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
000000000000658c         mov        r13, qword [rbx+0x30]
0000000000006590         mov        r12, qword [rbx+0x28]
0000000000006594         mov        r15, qword [rbx+0x20]
0000000000006598         mov        r14, qword [rbx+0x18]
000000000000659c         mov        qword [rsp+0x58+var_40], r10
00000000000065a1         mov        qword [rsp+0x58+var_48], r9
00000000000065a6         mov        qword [rsp+0x58+var_58], rax
00000000000065aa         mov        qword [rsp+0x58+var_50], r8
00000000000065af         mov        rbx, qword [rbx]
00000000000065b2         jmp        loc_6342
00000000000065b7         align      64                                          ; End of unwind block (FDE at 0x99dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
00000000000065c0         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0x9af0)
00000000000065c3         cmp        qword [r8], 0x0
00000000000065c7         je         j_version_etc_arn                           ; version_etc_arn

00000000000065c9         nop        dword [rax]

                     loc_65d0:
00000000000065d0         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
00000000000065d4         cmp        qword [r8+r9*8], 0x0
00000000000065d9         jne        loc_65d0

                     j_version_etc_arn:        // version_etc_arn
00000000000065db         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
00000000000065e0         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0x9af0), Begin of unwind block (FDE at 0x9b04)
00000000000065e4         mov        r10, r8
00000000000065e7         xor        r9d, r9d
00000000000065ea         mov        rax, qword [fs:0x28]
00000000000065f3         mov        qword [rsp+0x68+var_10], rax
00000000000065f8         xor        eax, eax
00000000000065fa         mov        r8, rsp
00000000000065fd         nop        dword [rax]

                     loc_6600:
0000000000006600         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000006603         cmp        eax, 0x2f
0000000000006606         ja         loc_664a

0000000000006608         mov        r11d, eax
000000000000660b         add        r11, qword [r10+0x10]
000000000000660f         add        eax, 0x8
0000000000006612         mov        dword [r10], eax

                     loc_6615:
0000000000006615         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000006618         test       rax, rax
000000000000661b         mov        qword [r8+r9*8], rax
000000000000661f         je         loc_662b

0000000000006621         add        r9, 0x1
0000000000006625         cmp        r9, 0xa
0000000000006629         jne        loc_6600

                     loc_662b:
000000000000662b         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
0000000000006630         mov        rax, qword [rsp+0x68+var_10]
0000000000006635         xor        rax, qword [fs:0x28]
000000000000663e         jne        loc_6645

0000000000006640         add        rsp, 0x68
0000000000006644         ret
                        ; endp

                     loc_6645:
0000000000006645         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_664a:
000000000000664a         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
000000000000664e         lea        rax, qword [r11+8]
0000000000006652         mov        qword [r10+8], rax
0000000000006656         jmp        loc_6615
0000000000006658         align      32                                          ; End of unwind block (FDE at 0x9b04)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
0000000000006660         push       rbp                                         ; Begin of unwind block (FDE at 0x9b20), CODE XREF=main+258
0000000000006661         push       rbx
0000000000006662         mov        r10d, 0x20
0000000000006668         xor        r11d, r11d
000000000000666b         sub        rsp, 0xb8
0000000000006672         mov        rax, qword [fs:0x28]
000000000000667b         mov        qword [rsp+0xc8+var_50], rax
0000000000006680         xor        eax, eax
0000000000006682         lea        rax, qword [rsp+0xc8+arg_0]
000000000000668a         mov        qword [rsp+0xc8+var_28], r8
0000000000006692         lea        rbx, qword [rsp+0xc8+arg_0]
000000000000669a         lea        r8, qword [rsp+0xc8+var_A8]
000000000000669f         mov        qword [rsp+0xc8+var_20], r9
00000000000066a7         mov        dword [rsp+0xc8+var_C0], 0x20
00000000000066af         mov        qword [rsp+0xc8+var_B8], rax
00000000000066b4         lea        rax, qword [rsp+0xc8+var_48]
00000000000066bc         xor        r9d, r9d
00000000000066bf         mov        qword [rsp+0xc8+var_B0], rax
00000000000066c4         mov        rbp, rax
00000000000066c7         nop        word [rax+rax]

                     loc_66d0:
00000000000066d0         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
00000000000066d4         ja         loc_672c

00000000000066d6         mov        eax, r10d
00000000000066d9         mov        r11d, 0x1
00000000000066df         add        r10d, 0x8
00000000000066e3         add        rax, rbp

                     loc_66e6:
00000000000066e6         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
00000000000066e9         test       rax, rax
00000000000066ec         mov        qword [r8+r9*8], rax
00000000000066f0         je         loc_66fc

00000000000066f2         add        r9, 0x1
00000000000066f6         cmp        r9, 0xa
00000000000066fa         jne        loc_66d0

                     loc_66fc:
00000000000066fc         test       r11b, r11b                                  ; CODE XREF=version_etc+144
00000000000066ff         jne        loc_6725

                     loc_6701:
0000000000006701         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000006706         mov        rax, qword [rsp+0xc8+var_50]
000000000000670b         xor        rax, qword [fs:0x28]
0000000000006714         jne        loc_6720

0000000000006716         add        rsp, 0xb8
000000000000671d         pop        rbx
000000000000671e         pop        rbp
000000000000671f         ret
                        ; endp

                     loc_6720:
0000000000006720         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_6725:
0000000000006725         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
000000000000672a         jmp        loc_6701

                     loc_672c:
000000000000672c         mov        rax, rbx                                    ; CODE XREF=version_etc+116
000000000000672f         add        rbx, 0x8
0000000000006733         jmp        loc_66e6
0000000000006735         align      64                                          ; End of unwind block (FDE at 0x9b20)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
0000000000006740         push       rbx                                         ; Begin of unwind block (FDE at 0x9b4c)
0000000000006741         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
0000000000006748         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000674d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000674f         call       j_dcgettext                                 ; dcgettext
0000000000006754         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
000000000000675b         mov        rsi, rax
000000000000675e         mov        edi, 0x1
0000000000006763         xor        eax, eax
0000000000006765         call       j___printf_chk                              ; __printf_chk
000000000000676a         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
0000000000006771         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006776         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006778         call       j_dcgettext                                 ; dcgettext
000000000000677d         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000006784         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x73f0
000000000000678b         mov        rsi, rax
000000000000678e         mov        edi, 0x1
0000000000006793         xor        eax, eax
0000000000006795         call       j___printf_chk                              ; __printf_chk
000000000000679a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000067a1         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
00000000000067a8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000067aa         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000067af         call       j_dcgettext                                 ; dcgettext
00000000000067b4         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000067b7         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000067ba         pop        rbx
00000000000067bb         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
00000000000067c0         push       rbx                                         ; End of unwind block (FDE at 0x9b4c), Begin of unwind block (FDE at 0x9b6c), CODE XREF=main+634, main+647, main+1753, main+1777, z85_decode_ctx_init+17, base2_decode_ctx_init+17, base16_decode_ctx_init+17, base32hex_decode_ctx_init_wrapper+26, base64url_decode_ctx_init_wrapper+26, quotearg_n_options+295, quotearg_alloc_mem+129
00000000000067c1         mov        rbx, rdi
00000000000067c4         call       j_malloc                                    ; malloc
00000000000067c9         test       rax, rax
00000000000067cc         jne        loc_67d3

00000000000067ce         test       rbx, rbx
00000000000067d1         jne        loc_67d5

                     loc_67d3:
00000000000067d3         pop        rbx                                         ; CODE XREF=xmalloc+12
00000000000067d4         ret
                        ; endp

                     loc_67d5:
00000000000067d5         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_67da:
00000000000067da         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x9b6c)
                     xnmalloc:
00000000000067e0         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x9b88)
00000000000067e3         mul        rsi
00000000000067e6         mov        rdi, rax
00000000000067e9         seto       al
00000000000067ec         test       rdi, rdi
00000000000067ef         js         loc_67fb

00000000000067f1         movzx      eax, al
00000000000067f4         test       rax, rax
00000000000067f7         jne        loc_67fb

00000000000067f9         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_67fb:
00000000000067fb         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
00000000000067ff         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6804:
0000000000006804         nop                                                    ; End of unwind block (FDE at 0x9b88)
0000000000006806         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000006810         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0x9b9c)
                        ; endp
0000000000006812         align      32                                          ; End of unwind block (FDE at 0x9b9c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000006820         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x9bb0), CODE XREF=base64url_decode_ctx_wrapper+205, base32hex_decode_ctx_wrapper+175, quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
0000000000006823         push       rbx
0000000000006824         mov        rbx, rsi
0000000000006827         jne        loc_682e

0000000000006829         test       rdi, rdi
000000000000682c         jne        loc_6848

                     loc_682e:
000000000000682e         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000006831         call       j_realloc                                   ; realloc
0000000000006836         test       rax, rax
0000000000006839         jne        loc_6840

000000000000683b         test       rbx, rbx
000000000000683e         jne        loc_6851

                     loc_6840:
0000000000006840         pop        rbx                                         ; CODE XREF=xrealloc+25
0000000000006841         ret
                        ; endp
0000000000006842         align      8

                     loc_6848:
0000000000006848         call       j_free                                      ; free, CODE XREF=xrealloc+12
000000000000684d         xor        eax, eax
000000000000684f         pop        rbx
0000000000006850         ret
                        ; endp

                     loc_6851:
0000000000006851         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6856:
0000000000006856         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x9bb0)
                     xnrealloc:
0000000000006860         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x9bd4)
0000000000006863         mul        rdx
0000000000006866         mov        rsi, rax
0000000000006869         seto       al
000000000000686c         test       rsi, rsi
000000000000686f         js         loc_687b

0000000000006871         movzx      eax, al
0000000000006874         test       rax, rax
0000000000006877         jne        loc_687b

0000000000006879         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_687b:
000000000000687b         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
000000000000687f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6884:
0000000000006884         nop                                                    ; End of unwind block (FDE at 0x9bd4)
0000000000006886         nop        word [cs:rax+rax]
                     x2nrealloc:
0000000000006890         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x9be8)
0000000000006893         mov        r9, rdx
0000000000006896         mov        rcx, qword [rsi]
0000000000006899         je         loc_68d0

000000000000689b         xor        edx, edx
000000000000689d         movabs     rax, 0x5555555555555554
00000000000068a7         div        r9
00000000000068aa         cmp        rax, rcx
00000000000068ad         jbe        loc_68eb

00000000000068af         mov        rax, rcx
00000000000068b2         shr        rax, 0x1
00000000000068b5         lea        rcx, qword [rax+rcx+1]

                     loc_68ba:
00000000000068ba         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
00000000000068bd         imul       rcx, r9                                     ; argument #4 for method xrealloc
00000000000068c1         mov        rsi, rcx                                    ; argument #2 for method xrealloc
00000000000068c4         jmp        xrealloc                                    ; xrealloc
                        ; endp
00000000000068c9         align      16

                     loc_68d0:
00000000000068d0         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
00000000000068d3         je         loc_68f8

                     loc_68d5:
00000000000068d5         mov        rax, rcx                                    ; CODE XREF=sub_68f4+28
00000000000068d8         mul        r9
00000000000068db         seto       dl
00000000000068de         test       rax, rax
00000000000068e1         movzx      edx, dl
00000000000068e4         js         loc_68eb

00000000000068e6         test       rdx, rdx
00000000000068e9         je         loc_68ba

                     loc_68eb:
00000000000068eb         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
00000000000068ef         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_68f4:
00000000000068f4         nop        dword [rax]
                        ; endp

                     loc_68f8:
00000000000068f8         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
00000000000068fa         mov        eax, 0x80
00000000000068ff         xor        r8d, r8d
0000000000006902         div        r9
0000000000006905         test       rax, rax
0000000000006908         sete       r8b
000000000000690c         lea        rcx, qword [r8+rax]
0000000000006910         jmp        loc_68d5
0000000000006912         align      32                                          ; End of unwind block (FDE at 0x9be8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000006920         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x9c00)
0000000000006923         mov        rax, qword [rsi]
0000000000006926         je         loc_6950

0000000000006928         movabs     rdx, 0x5555555555555553
0000000000006932         cmp        rax, rdx
0000000000006935         ja         loc_6961

0000000000006937         mov        rdx, rax
000000000000693a         shr        rdx, 0x1
000000000000693d         lea        rax, qword [rdx+rax+1]

                     loc_6942:
0000000000006942         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
0000000000006945         mov        rsi, rax                                    ; argument #2 for method xrealloc
0000000000006948         jmp        xrealloc                                    ; xrealloc
                        ; endp
000000000000694d         align      16

                     loc_6950:
0000000000006950         test       rax, rax                                    ; CODE XREF=x2realloc+6
0000000000006953         mov        edx, 0x80
0000000000006958         cmove      rax, rdx
000000000000695c         test       rax, rax
000000000000695f         jns        loc_6942

                     loc_6961:
0000000000006961         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
0000000000006965         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_696a:
000000000000696a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x9c00)
                     xzalloc:
0000000000006970         push       rbx                                         ; Begin of unwind block (FDE at 0x9c18)
0000000000006971         mov        rbx, rdi
0000000000006974         call       xmalloc                                     ; xmalloc
0000000000006979         mov        rdx, rbx                                    ; argument "__n" for method j_memset
000000000000697c         xor        esi, esi                                    ; argument "__c" for method j_memset
000000000000697e         mov        rdi, rax                                    ; argument "__s" for method j_memset
0000000000006981         pop        rbx
0000000000006982         jmp        j_memset                                    ; memset
                        ; endp
0000000000006987         align      16                                          ; End of unwind block (FDE at 0x9c18)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
0000000000006990         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x9c34)
0000000000006993         sub        rsp, 0x8
0000000000006997         mul        rsi
000000000000699a         seto       dl
000000000000699d         test       rax, rax
00000000000069a0         js         loc_69b9

00000000000069a2         movzx      edx, dl
00000000000069a5         test       rdx, rdx
00000000000069a8         jne        loc_69b9

00000000000069aa         call       j_calloc                                    ; calloc
00000000000069af         test       rax, rax
00000000000069b2         je         loc_69b9

00000000000069b4         add        rsp, 0x8
00000000000069b8         ret
                        ; endp

                     loc_69b9:
00000000000069b9         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_69be:
00000000000069be         nop                                                    ; End of unwind block (FDE at 0x9c34)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmemdup:
00000000000069c0         push       rbp                                         ; Begin of unwind block (FDE at 0x9c50), CODE XREF=clone_quoting_options+40
00000000000069c1         push       rbx
00000000000069c2         mov        rbp, rdi
00000000000069c5         mov        rdi, rsi
00000000000069c8         mov        rbx, rsi
00000000000069cb         sub        rsp, 0x8
00000000000069cf         call       xmalloc                                     ; xmalloc
00000000000069d4         add        rsp, 0x8
00000000000069d8         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
00000000000069db         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
00000000000069de         pop        rbx
00000000000069df         pop        rbp
00000000000069e0         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
00000000000069e3         jmp        j_memcpy                                    ; memcpy
                        ; endp
00000000000069e8         align      16                                          ; End of unwind block (FDE at 0x9c50)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
00000000000069f0         push       rbx                                         ; Begin of unwind block (FDE at 0x9c78)
00000000000069f1         mov        rbx, rdi
00000000000069f4         call       j_strlen                                    ; strlen
00000000000069f9         mov        rdi, rbx
00000000000069fc         lea        rsi, qword [rax+1]
0000000000006a00         pop        rbx
0000000000006a01         jmp        xmemdup                                     ; xmemdup
                        ; endp
0000000000006a03         align      16                                          ; End of unwind block (FDE at 0x9c78)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000006a10         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x9c94), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=base64url_decode_ctx_wrapper+222, base32hex_decode_ctx_wrapper+204, quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41
0000000000006a17         sub        rsp, 0x8
0000000000006a1b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006a20         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006a22         call       j_dcgettext                                 ; dcgettext
0000000000006a27         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
0000000000006a2d         lea        rdx, qword [b64c+68]                        ; argument "__format" for method j_error, 0x8044
0000000000006a34         mov        rcx, rax
0000000000006a37         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000006a39         xor        eax, eax
0000000000006a3b         call       j_error                                     ; error
0000000000006a40         call       j_abort                                     ; abort
                        ; endp
0000000000006a45         align      16                                          ; End of unwind block (FDE at 0x9c94)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72


                     xnumtoumax:
0000000000006a50         push       r15                                         ; Begin of unwind block (FDE at 0x9cac), CODE XREF=xdectoumax+23
0000000000006a52         push       r14
0000000000006a54         mov        r15, rcx
0000000000006a57         push       r13
0000000000006a59         push       r12
0000000000006a5b         mov        r14, rdx
0000000000006a5e         push       rbp
0000000000006a5f         push       rbx
0000000000006a60         mov        edx, esi
0000000000006a62         xor        esi, esi
0000000000006a64         mov        r12, rdi
0000000000006a67         mov        r13, r9
0000000000006a6a         sub        rsp, 0x18
0000000000006a6e         mov        rcx, rsp
0000000000006a71         mov        ebx, dword [rsp+0x48+arg_0]
0000000000006a75         mov        rax, qword [fs:0x28]
0000000000006a7e         mov        qword [rsp+0x48+var_40], rax
0000000000006a83         xor        eax, eax
0000000000006a85         call       xstrtoumax                                  ; xstrtoumax
0000000000006a8a         test       eax, eax
0000000000006a8c         jne        loc_6b20

0000000000006a92         mov        rbp, qword [rsp+0x48+var_48]
0000000000006a96         cmp        rbp, r14
0000000000006a99         jb         loc_6aa0

0000000000006a9b         cmp        rbp, r15
0000000000006a9e         jbe        loc_6af4

                     loc_6aa0:
0000000000006aa0         call       j___errno_location                          ; __errno_location, CODE XREF=xnumtoumax+73
0000000000006aa5         cmp        rbp, 0x40000000
0000000000006aac         mov        r14, rax
0000000000006aaf         sbb        eax, eax
0000000000006ab1         and        eax, 0xffffffd7
0000000000006ab4         add        eax, 0x4b
0000000000006ab7         mov        dword [r14], eax

                     loc_6aba:
0000000000006aba         mov        rdi, r12                                    ; CODE XREF=xnumtoumax+226, xnumtoumax+234, xnumtoumax+246
0000000000006abd         call       quote                                       ; quote
0000000000006ac2         mov        esi, dword [r14]
0000000000006ac5         mov        r8, rax
0000000000006ac8         mov        eax, 0x0
0000000000006acd         lea        rdx, qword [b64c+64]                        ; argument "__format" for method j_error, 0x8040
0000000000006ad4         mov        rcx, r13
0000000000006ad7         cmp        esi, 0x16
0000000000006ada         cmove      esi, eax                                    ; argument "__errnum" for method j_error
0000000000006add         test       ebx, ebx
0000000000006adf         mov        eax, 0x1
0000000000006ae4         cmove      ebx, eax
0000000000006ae7         xor        eax, eax
0000000000006ae9         mov        edi, ebx                                    ; argument "__status" for method j_error
0000000000006aeb         call       j_error                                     ; error
0000000000006af0         mov        rbp, qword [rsp+0x48+var_48]

                     loc_6af4:
0000000000006af4         mov        rdx, qword [rsp+0x48+var_40]                ; CODE XREF=xnumtoumax+78
0000000000006af9         xor        rdx, qword [fs:0x28]
0000000000006b02         mov        rax, rbp
0000000000006b05         jne        loc_6b4b

0000000000006b07         add        rsp, 0x18
0000000000006b0b         pop        rbx
0000000000006b0c         pop        rbp
0000000000006b0d         pop        r12
0000000000006b0f         pop        r13
0000000000006b11         pop        r14
0000000000006b13         pop        r15
0000000000006b15         ret
                        ; endp
0000000000006b16         align      32

                     loc_6b20:
0000000000006b20         mov        ebp, eax                                    ; CODE XREF=xnumtoumax+60
0000000000006b22         call       j___errno_location                          ; __errno_location
0000000000006b27         cmp        ebp, 0x1
0000000000006b2a         mov        r14, rax
0000000000006b2d         je         loc_6b40

0000000000006b2f         cmp        ebp, 0x3
0000000000006b32         jne        loc_6aba

0000000000006b34         mov        dword [rax], 0x0
0000000000006b3a         jmp        loc_6aba
0000000000006b3f         align      64

                     loc_6b40:
0000000000006b40         mov        dword [rax], 0x4b                           ; CODE XREF=xnumtoumax+221
0000000000006b46         jmp        loc_6aba

                     loc_6b4b:
0000000000006b4b         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=xnumtoumax+181
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xdectoumax:
0000000000006b50         sub        rsp, 0x10                                   ; End of unwind block (FDE at 0x9cac), Begin of unwind block (FDE at 0x9cf8), CODE XREF=main+384
0000000000006b54         push       r9
0000000000006b56         mov        r9, r8
0000000000006b59         mov        r8, rcx
0000000000006b5c         mov        rcx, rdx
0000000000006b5f         mov        rdx, rsi
0000000000006b62         mov        esi, 0xa
0000000000006b67         call       xnumtoumax                                  ; xnumtoumax
0000000000006b6c         add        rsp, 0x18
0000000000006b70         ret
                        ; endp
0000000000006b71         align      128                                         ; End of unwind block (FDE at 0x9cf8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80


                     xstrtoumax:
0000000000006b80         push       r15                                         ; Begin of unwind block (FDE at 0x9d14), CODE XREF=xnumtoumax+53
0000000000006b82         push       r14
0000000000006b84         push       r13
0000000000006b86         push       r12
0000000000006b88         push       rbp
0000000000006b89         push       rbx
0000000000006b8a         sub        rsp, 0x28
0000000000006b8e         mov        rax, qword [fs:0x28]
0000000000006b97         mov        qword [rsp+0x58+var_40], rax
0000000000006b9c         xor        eax, eax
0000000000006b9e         cmp        edx, 0x24
0000000000006ba1         ja         loc_6f05

0000000000006ba7         lea        rax, qword [rsp+0x58+var_48]
0000000000006bac         mov        r15, rsi
0000000000006baf         test       rsi, rsi
0000000000006bb2         mov        rbp, rdi
0000000000006bb5         mov        dword [rsp+0x58+var_50], edx
0000000000006bb9         mov        r14, rcx
0000000000006bbc         mov        r13, r8
0000000000006bbf         cmove      r15, rax
0000000000006bc3         call       j___errno_location                          ; __errno_location
0000000000006bc8         mov        dword [rax], 0x0
0000000000006bce         mov        r12, rax
0000000000006bd1         movzx      ebx, byte [rbp]
0000000000006bd5         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000006bda         mov        edx, dword [rsp+0x58+var_50]
0000000000006bde         mov        rsi, qword [rax]
0000000000006be1         mov        rax, rbp
0000000000006be4         jmp        loc_6bf7
0000000000006be6         align      16

                     loc_6bf0:
0000000000006bf0         add        rax, 0x1                                    ; CODE XREF=xstrtoumax+127
0000000000006bf4         movzx      ebx, byte [rax]

                     loc_6bf7:
0000000000006bf7         movzx      ecx, bl                                     ; CODE XREF=xstrtoumax+100
0000000000006bfa         test       byte [rsi+rcx*2+1], 0x20
0000000000006bff         jne        loc_6bf0

0000000000006c01         cmp        bl, 0x2d
0000000000006c04         je         loc_6c58

0000000000006c06         xor        ecx, ecx
0000000000006c08         mov        rsi, r15
0000000000006c0b         mov        rdi, rbp
0000000000006c0e         call       j___strtoul_internal                        ; __strtoul_internal
0000000000006c13         mov        rcx, qword [r15]
0000000000006c16         mov        rbx, rax
0000000000006c19         cmp        rcx, rbp
0000000000006c1c         je         loc_6c48

0000000000006c1e         mov        eax, dword [r12]
0000000000006c22         test       eax, eax
0000000000006c24         je         loc_6c88

0000000000006c26         cmp        eax, 0x22
0000000000006c29         mov        ebp, 0x1
0000000000006c2e         jne        loc_6c58

                     loc_6c30:
0000000000006c30         test       r13, r13                                    ; CODE XREF=xstrtoumax+266
0000000000006c33         je         loc_6c3e

0000000000006c35         movzx      r12d, byte [rcx]
0000000000006c39         test       r12b, r12b
0000000000006c3c         jne        loc_6cb7

                     loc_6c3e:
0000000000006c3e         mov        qword [r14], rbx                            ; CODE XREF=xstrtoumax+179
0000000000006c41         jmp        loc_6c5d
0000000000006c43         align      8

                     loc_6c48:
0000000000006c48         test       r13, r13                                    ; CODE XREF=xstrtoumax+156
0000000000006c4b         mov        qword [rsp+0x58+var_50], rcx
0000000000006c50         jne        loc_6c90

0000000000006c52         nop        word [rax+rax]

                     loc_6c58:
0000000000006c58         mov        ebp, 0x4                                    ; CODE XREF=xstrtoumax+132, xstrtoumax+174, xstrtoumax+280, xstrtoumax+309

                     loc_6c5d:
0000000000006c5d         mov        rdi, qword [rsp+0x58+var_40]                ; CODE XREF=xstrtoumax+193, xstrtoumax+535, xstrtoumax+546
0000000000006c62         xor        rdi, qword [fs:0x28]
0000000000006c6b         mov        eax, ebp
0000000000006c6d         jne        loc_6f00

0000000000006c73         add        rsp, 0x28
0000000000006c77         pop        rbx
0000000000006c78         pop        rbp
0000000000006c79         pop        r12
0000000000006c7b         pop        r13
0000000000006c7d         pop        r14
0000000000006c7f         pop        r15
0000000000006c81         ret
                        ; endp
0000000000006c82         align      8

                     loc_6c88:
0000000000006c88         xor        ebp, ebp                                    ; CODE XREF=xstrtoumax+164
0000000000006c8a         jmp        loc_6c30
0000000000006c8c         align      16

                     loc_6c90:
0000000000006c90         movzx      r12d, byte [rbp]                            ; CODE XREF=xstrtoumax+208
0000000000006c95         test       r12b, r12b
0000000000006c98         je         loc_6c58

0000000000006c9a         movsx      esi, r12b                                   ; argument "__c" for method j_strchr
0000000000006c9e         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000006ca1         xor        ebp, ebp
0000000000006ca3         call       j_strchr                                    ; strchr
0000000000006ca8         test       rax, rax
0000000000006cab         mov        ebx, 0x1
0000000000006cb0         mov        rcx, qword [rsp+0x58+var_50]
0000000000006cb5         je         loc_6c58

                     loc_6cb7:
0000000000006cb7         movsx      esi, r12b                                   ; argument "__c" for method j_strchr, CODE XREF=xstrtoumax+188
0000000000006cbb         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000006cbe         mov        qword [rsp+0x58+var_50], rcx
0000000000006cc3         call       j_strchr                                    ; strchr
0000000000006cc8         test       rax, rax
0000000000006ccb         mov        rcx, qword [rsp+0x58+var_50]
0000000000006cd0         je         loc_6d9c

0000000000006cd6         lea        eax, dword [r12-0x45]
0000000000006cdb         cmp        al, 0x2f
0000000000006cdd         ja         loc_6d30

0000000000006cdf         movabs     rdx, 0x814400308945
0000000000006ce9         bt         rdx, rax
0000000000006ced         jae        loc_6d30

0000000000006cef         mov        esi, 0x30                                   ; argument "__c" for method j_strchr
0000000000006cf4         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000006cf7         mov        qword [rsp+0x58+var_50], rcx
0000000000006cfc         call       j_strchr                                    ; strchr
0000000000006d01         test       rax, rax
0000000000006d04         mov        rcx, qword [rsp+0x58+var_50]
0000000000006d09         je         loc_6d30

0000000000006d0b         movzx      eax, byte [rcx+1]
0000000000006d0f         cmp        al, 0x44
0000000000006d11         je         loc_6d1f

0000000000006d13         cmp        al, 0x69
0000000000006d15         je         loc_6ee8

0000000000006d1b         cmp        al, 0x42
0000000000006d1d         jne        loc_6d30

                     loc_6d1f:
0000000000006d1f         mov        edi, 0x2                                    ; CODE XREF=xstrtoumax+401
0000000000006d24         mov        esi, 0x3e8
0000000000006d29         jmp        loc_6d3a
0000000000006d2b         align      16

                     loc_6d30:
0000000000006d30         mov        edi, 0x1                                    ; CODE XREF=xstrtoumax+349, xstrtoumax+365, xstrtoumax+393, xstrtoumax+413
0000000000006d35         mov        esi, 0x400

                     loc_6d3a:
0000000000006d3a         sub        r12d, 0x42                                  ; CODE XREF=xstrtoumax+425, xstrtoumax+891
0000000000006d3e         cmp        r12b, 0x35
0000000000006d42         ja         loc_6d9c

0000000000006d44         lea        rdx, qword [switch_table_8928]              ; switch_table_8928
0000000000006d4b         movzx      r12d, r12b
0000000000006d4f         movsxd     rax, dword [rdx+r12*4]
0000000000006d53         add        rax, rdx
0000000000006d56         jmp        rax                                         ; switch statement using table at 0x8928, with 54 cases, 0x6d58,0x6d80,0x6d9c,0x6da7,0x6dbd,0x6dd4,0x6dfa,0x6e1f,0x6e3f,0x6e60,0x6e83,0x6ea6,0x6ebc

                     loc_6d58:
0000000000006d58         mov        rax, rbx                                    ; case 43, CODE XREF=xstrtoumax+470
0000000000006d5b         mul        rsi
0000000000006d5e         jo         loc_6f51

0000000000006d64         xor        r8d, r8d

                     loc_6d67:
0000000000006d67         mul        rsi                                         ; CODE XREF=xstrtoumax+846, xstrtoumax+862, xstrtoumax+987
0000000000006d6a         jo         loc_6f42

0000000000006d70         mov        rbx, rax

                     loc_6d73:
0000000000006d73         or         ebp, r8d                                    ; CODE XREF=xstrtoumax+972
0000000000006d76         nop        word [cs:rax+rax]

                     loc_6d80:
0000000000006d80         movsxd     rdi, edi                                    ; case 33, CODE XREF=xstrtoumax+470, xstrtoumax+571, xstrtoumax+594, xstrtoumax+632, xstrtoumax+712, xstrtoumax+727, xstrtoumax+823
0000000000006d83         mov        eax, ebp
0000000000006d85         add        rcx, rdi
0000000000006d88         or         eax, 0x2
0000000000006d8b         mov        qword [r15], rcx
0000000000006d8e         cmp        byte [rcx], 0x0
0000000000006d91         mov        qword [r14], rbx
0000000000006d94         cmovne     ebp, eax
0000000000006d97         jmp        loc_6c5d

                     loc_6d9c:
0000000000006d9c         mov        qword [r14], rbx                            ; case 52, CODE XREF=xstrtoumax+336, xstrtoumax+450, xstrtoumax+470
0000000000006d9f         or         ebp, 0x2
0000000000006da2         jmp        loc_6c5d

                     loc_6da7:
0000000000006da7         mov        edx, 0x2                                    ; case 53, CODE XREF=xstrtoumax+470
0000000000006dac         mov        rax, rdx
0000000000006daf         mul        rbx
0000000000006db2         jo         loc_6e4e

0000000000006db8         add        rbx, rbx
0000000000006dbb         jmp        loc_6d80

                     loc_6dbd:
0000000000006dbd         mov        edx, 0x200                                  ; case 32, CODE XREF=xstrtoumax+470
0000000000006dc2         mov        rax, rdx
0000000000006dc5         mul        rbx
0000000000006dc8         jo         loc_6e4e

0000000000006dce         shl        rbx, 0x9
0000000000006dd2         jmp        loc_6d80

                     loc_6dd4:
0000000000006dd4         mov        r8d, 0x7                                    ; case 24, CODE XREF=xstrtoumax+470
0000000000006dda         xor        r9d, r9d
0000000000006ddd         nop        dword [rax]

                     loc_6de0:
0000000000006de0         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+627
0000000000006de3         mul        rsi
0000000000006de6         mov        rbx, rax
0000000000006de9         jo         loc_6f7e

                     loc_6def:
0000000000006def         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1032
0000000000006df3         jne        loc_6de0

                     loc_6df5:
0000000000006df5         or         ebp, r9d                                    ; CODE XREF=xstrtoumax+669, xstrtoumax+701, xstrtoumax+766, xstrtoumax+801
0000000000006df8         jmp        loc_6d80

                     loc_6dfa:
0000000000006dfa         mov        r8d, 0x8                                    ; case 23, CODE XREF=xstrtoumax+470
0000000000006e00         xor        r9d, r9d
0000000000006e03         nop        dword [rax+rax]

                     loc_6e08:
0000000000006e08         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+667
0000000000006e0b         mul        rsi
0000000000006e0e         mov        rbx, rax
0000000000006e11         jo         loc_6f60

                     loc_6e17:
0000000000006e17         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1002
0000000000006e1b         jne        loc_6e08

0000000000006e1d         jmp        loc_6df5

                     loc_6e1f:
0000000000006e1f         mov        r8d, 0x4                                    ; case 50, CODE XREF=xstrtoumax+470
0000000000006e25         xor        r9d, r9d

                     loc_6e28:
0000000000006e28         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+699
0000000000006e2b         mul        rsi
0000000000006e2e         mov        rbx, rax
0000000000006e31         jo         loc_6f33

                     loc_6e37:
0000000000006e37         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+957
0000000000006e3b         jne        loc_6e28

0000000000006e3d         jmp        loc_6df5

                     loc_6e3f:
0000000000006e3f         mov        rax, rbx                                    ; case 41, CODE XREF=xstrtoumax+470
0000000000006e42         mul        rsi
0000000000006e45         mov        rbx, rax
0000000000006e48         jno        loc_6d80

                     loc_6e4e:
0000000000006e4e         mov        ebp, 0x1                                    ; CODE XREF=xstrtoumax+562, xstrtoumax+584, xstrtoumax+817
0000000000006e53         or         rbx, 0xffffffffffffffff
0000000000006e57         jmp        loc_6d80
0000000000006e5c         align      32

                     loc_6e60:
0000000000006e60         mov        r8d, 0x5                                    ; case 14, CODE XREF=xstrtoumax+470
0000000000006e66         xor        r9d, r9d

                     loc_6e69:
0000000000006e69         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+764
0000000000006e6c         mul        rsi
0000000000006e6f         mov        rbx, rax
0000000000006e72         jo         loc_6f6f

                     loc_6e78:
0000000000006e78         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1017
0000000000006e7c         jne        loc_6e69

0000000000006e7e         jmp        loc_6df5

                     loc_6e83:
0000000000006e83         mov        r8d, 0x6                                    ; case 3, CODE XREF=xstrtoumax+470
0000000000006e89         xor        r9d, r9d

                     loc_6e8c:
0000000000006e8c         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+799
0000000000006e8f         mul        rsi
0000000000006e92         mov        rbx, rax
0000000000006e95         jo         loc_6f24

                     loc_6e9b:
0000000000006e9b         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+942
0000000000006e9f         jne        loc_6e8c

0000000000006ea1         jmp        loc_6df5

                     loc_6ea6:
0000000000006ea6         mov        edx, 0x400                                  ; case 0, CODE XREF=xstrtoumax+470
0000000000006eab         mov        rax, rdx
0000000000006eae         mul        rbx
0000000000006eb1         jo         loc_6e4e

0000000000006eb3         shl        rbx, 0xa
0000000000006eb7         jmp        loc_6d80

                     loc_6ebc:
0000000000006ebc         mov        rax, rbx                                    ; case 37, CODE XREF=xstrtoumax+470
0000000000006ebf         mul        rsi
0000000000006ec2         jo         loc_6f8d

0000000000006ec8         xor        r8d, r8d

                     loc_6ecb:
0000000000006ecb         mul        rsi                                         ; CODE XREF=xstrtoumax+1047
0000000000006ece         jno        loc_6d67

0000000000006ed4         mov        r8d, 0x1
0000000000006eda         or         rax, 0xffffffffffffffff
0000000000006ede         jmp        loc_6d67
0000000000006ee3         align      8

                     loc_6ee8:
0000000000006ee8         xor        edi, edi                                    ; CODE XREF=xstrtoumax+405
0000000000006eea         cmp        byte [rcx+2], 0x42
0000000000006eee         mov        esi, 0x400
0000000000006ef3         sete       dil
0000000000006ef7         lea        edi, dword [rdi+rdi+1]
0000000000006efb         jmp        loc_6d3a

                     loc_6f00:
0000000000006f00         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=xstrtoumax+237
                        ; endp

                     loc_6f05:
0000000000006f05         lea        rcx, qword [__PRETTY_FUNCTION__.4162]       ; argument "__function" for method j___assert_fail, "xstrtoumax", CODE XREF=xstrtoumax+33
0000000000006f0c         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/xstrtol.c"
0000000000006f13         lea        rdi, qword [a0StrtolbaseStr]                ; argument "__assertion" for method j___assert_fail, "0 <= strtol_base && strtol_base <= 36"
0000000000006f1a         mov        edx, 0x54                                   ; argument "__line" for method j___assert_fail
0000000000006f1f         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_6f24:
0000000000006f24         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+789
0000000000006f2a         or         rbx, 0xffffffffffffffff
0000000000006f2e         jmp        loc_6e9b

                     loc_6f33:
0000000000006f33         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+689
0000000000006f39         or         rbx, 0xffffffffffffffff
0000000000006f3d         jmp        loc_6e37

                     loc_6f42:
0000000000006f42         mov        r8d, 0x1                                    ; CODE XREF=xstrtoumax+490
0000000000006f48         or         rbx, 0xffffffffffffffff
0000000000006f4c         jmp        loc_6d73

                     loc_6f51:
0000000000006f51         or         rax, 0xffffffffffffffff                     ; CODE XREF=xstrtoumax+478
0000000000006f55         mov        r8d, 0x1
0000000000006f5b         jmp        loc_6d67

                     loc_6f60:
0000000000006f60         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+657
0000000000006f66         or         rbx, 0xffffffffffffffff
0000000000006f6a         jmp        loc_6e17

                     loc_6f6f:
0000000000006f6f         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+754
0000000000006f75         or         rbx, 0xffffffffffffffff
0000000000006f79         jmp        loc_6e78

                     loc_6f7e:
0000000000006f7e         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+617
0000000000006f84         or         rbx, 0xffffffffffffffff
0000000000006f88         jmp        loc_6def

                     loc_6f8d:
0000000000006f8d         mov        r8d, 0x1                                    ; CODE XREF=xstrtoumax+834
0000000000006f93         or         rax, 0xffffffffffffffff
0000000000006f97         jmp        loc_6ecb
0000000000006f9c         align      32                                          ; End of unwind block (FDE at 0x9d14)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
0000000000006fa0         push       r12                                         ; Begin of unwind block (FDE at 0x9d64), CODE XREF=main+1661, close_stream+21
0000000000006fa2         push       rbp
0000000000006fa3         push       rbx
0000000000006fa4         mov        rbx, rdi
0000000000006fa7         call       j_fileno                                    ; fileno
0000000000006fac         test       eax, eax
0000000000006fae         mov        rdi, rbx
0000000000006fb1         js         loc_7007

0000000000006fb3         call       j___freading                                ; __freading
0000000000006fb8         test       eax, eax
0000000000006fba         jne        loc_6fe8

                     loc_6fbc:
0000000000006fbc         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
0000000000006fbf         call       rpl_fflush                                  ; rpl_fflush
0000000000006fc4         test       eax, eax
0000000000006fc6         je         loc_7004

0000000000006fc8         call       j___errno_location                          ; __errno_location
0000000000006fcd         mov        r12d, dword [rax]
0000000000006fd0         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
0000000000006fd3         mov        rbp, rax
0000000000006fd6         call       j_fclose                                    ; fclose
0000000000006fdb         test       r12d, r12d
0000000000006fde         jne        loc_7010

                     loc_6fe0:
0000000000006fe0         pop        rbx                                         ; CODE XREF=rpl_fclose+121
0000000000006fe1         pop        rbp
0000000000006fe2         pop        r12
0000000000006fe4         ret
                        ; endp
0000000000006fe5         align      8

                     loc_6fe8:
0000000000006fe8         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
0000000000006feb         call       j_fileno                                    ; fileno
0000000000006ff0         xor        esi, esi                                    ; argument "__offset" for method j_lseek
0000000000006ff2         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000006ff7         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000006ff9         call       j_lseek                                     ; lseek
0000000000006ffe         cmp        rax, 0xffffffffffffffff
0000000000007002         jne        loc_6fbc

                     loc_7004:
0000000000007004         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_7007:
0000000000007007         pop        rbx                                         ; CODE XREF=rpl_fclose+17
0000000000007008         pop        rbp
0000000000007009         pop        r12
000000000000700b         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_7010:
0000000000007010         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
0000000000007014         mov        eax, 0xffffffff
0000000000007019         jmp        loc_6fe0
000000000000701b         align      32                                          ; End of unwind block (FDE at 0x9d64)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
0000000000007020         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x9d9c), CODE XREF=rpl_fclose+31
0000000000007023         push       rbx
0000000000007024         mov        rbx, rdi
0000000000007027         je         loc_703a

0000000000007029         call       j___freading                                ; __freading
000000000000702e         test       eax, eax
0000000000007030         je         loc_703a

0000000000007032         test       dword [rbx], 0x100
0000000000007038         jne        loc_7048

                     loc_703a:
000000000000703a         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
000000000000703d         pop        rbx
000000000000703e         jmp        j_fflush                                    ; fflush
                        ; endp
0000000000007043         align      8

                     loc_7048:
0000000000007048         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
000000000000704b         mov        edx, 0x1
0000000000007050         xor        esi, esi
0000000000007052         call       rpl_fseeko                                  ; rpl_fseeko
0000000000007057         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
000000000000705a         pop        rbx
000000000000705b         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
0000000000007060         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0x9d9c), Begin of unwind block (FDE at 0x9dbc), CODE XREF=rpl_fflush+50
0000000000007064         cmp        qword [rdi+0x10], rax
0000000000007068         je         loc_7070

                     j_j_fseeko:        // fseeko
000000000000706a         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
000000000000706f         align      16

                     loc_7070:
0000000000007070         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
0000000000007074         cmp        qword [rdi+0x28], rax
0000000000007078         jne        j_j_fseeko                                  ; fseeko

000000000000707a         cmp        qword [rdi+0x48], 0x0
000000000000707f         jne        j_j_fseeko                                  ; fseeko

0000000000007081         push       r12
0000000000007083         push       rbp
0000000000007084         mov        r12d, edx
0000000000007087         push       rbx
0000000000007088         mov        rbp, rsi
000000000000708b         mov        rbx, rdi
000000000000708e         call       j_fileno                                    ; fileno
0000000000007093         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000007096         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000007099         mov        edi, eax                                    ; argument "__fd" for method j_lseek
000000000000709b         call       j_lseek                                     ; lseek
00000000000070a0         cmp        rax, 0xffffffffffffffff
00000000000070a4         je         loc_70b2

00000000000070a6         and        dword [rbx], 0xffffffef
00000000000070a9         mov        qword [rbx+0x90], rax
00000000000070b0         xor        eax, eax

                     loc_70b2:
00000000000070b2         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
00000000000070b3         pop        rbp
00000000000070b4         pop        r12
00000000000070b6         ret
                        ; endp
00000000000070b7         align      64                                          ; End of unwind block (FDE at 0x9dbc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
00000000000070c0         push       r13                                         ; Begin of unwind block (FDE at 0x9dec), CODE XREF=sub_4d40+534
00000000000070c2         push       r12
00000000000070c4         mov        r13, rsi
00000000000070c7         push       rbp
00000000000070c8         push       rbx
00000000000070c9         mov        rbx, rdi
00000000000070cc         mov        r12, rdx
00000000000070cf         sub        rsp, 0x18
00000000000070d3         mov        rax, qword [fs:0x28]
00000000000070dc         mov        qword [rsp+0x38+var_30], rax
00000000000070e1         xor        eax, eax
00000000000070e3         lea        rax, qword [rsp+0x38+var_34]
00000000000070e8         test       rdi, rdi
00000000000070eb         cmove      rbx, rax
00000000000070ef         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
00000000000070f2         call       j_mbrtowc                                   ; mbrtowc
00000000000070f7         cmp        rax, 0xfffffffffffffffd
00000000000070fb         mov        rbp, rax
00000000000070fe         jbe        loc_7120

0000000000007100         test       r12, r12
0000000000007103         je         loc_7120

0000000000007105         xor        edi, edi
0000000000007107         call       hard_locale                                 ; hard_locale
000000000000710c         test       al, al
000000000000710e         jne        loc_7120

0000000000007110         movzx      eax, byte [r13]
0000000000007115         mov        ebp, 0x1
000000000000711a         mov        dword [rbx], eax
000000000000711c         nop        dword [rax]

                     loc_7120:
0000000000007120         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
0000000000007125         xor        rdx, qword [fs:0x28]
000000000000712e         mov        rax, rbp
0000000000007131         jne        loc_713e

0000000000007133         add        rsp, 0x18
0000000000007137         pop        rbx
0000000000007138         pop        rbp
0000000000007139         pop        r12
000000000000713b         pop        r13
000000000000713d         ret
                        ; endp

                     loc_713e:
000000000000713e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
0000000000007143         align      16                                          ; End of unwind block (FDE at 0x9dec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
0000000000007150         push       r12                                         ; Begin of unwind block (FDE at 0x9e2c), CODE XREF=close_stdout+13, close_stdout+51
0000000000007152         push       rbp
0000000000007153         mov        rbp, rdi
0000000000007156         push       rbx
0000000000007157         call       j___fpending                                ; __fpending
000000000000715c         mov        ebx, dword [rbp]
000000000000715f         mov        rdi, rbp
0000000000007162         mov        r12, rax
0000000000007165         call       rpl_fclose                                  ; rpl_fclose
000000000000716a         and        ebx, 0x20
000000000000716d         test       ebx, ebx
000000000000716f         jne        loc_7188

0000000000007171         test       eax, eax
0000000000007173         je         loc_717f

0000000000007175         test       r12, r12
0000000000007178         mov        eax, 0xffffffff
000000000000717d         je         loc_71b8

                     loc_717f:
000000000000717f         pop        rbx                                         ; CODE XREF=close_stream+35
0000000000007180         pop        rbp
0000000000007181         pop        r12
0000000000007183         ret
                        ; endp
0000000000007184         align      8

                     loc_7188:
0000000000007188         test       eax, eax                                    ; CODE XREF=close_stream+31
000000000000718a         jne        loc_71a8

000000000000718c         call       j___errno_location                          ; __errno_location
0000000000007191         mov        dword [rax], 0x0
0000000000007197         mov        eax, 0xffffffff
000000000000719c         pop        rbx
000000000000719d         pop        rbp
000000000000719e         pop        r12
00000000000071a0         ret
                        ; endp
00000000000071a1         align      8

                     loc_71a8:
00000000000071a8         pop        rbx                                         ; CODE XREF=close_stream+58
00000000000071a9         mov        eax, 0xffffffff
00000000000071ae         pop        rbp
00000000000071af         pop        r12
00000000000071b1         ret
                        ; endp
00000000000071b2         align      8

                     loc_71b8:
00000000000071b8         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
00000000000071bd         cmp        dword [rax], 0x9
00000000000071c0         pop        rbx
00000000000071c1         pop        rbp
00000000000071c2         pop        r12
00000000000071c4         setne      al
00000000000071c7         movzx      eax, al
00000000000071ca         neg        eax
00000000000071cc         ret
                        ; endp
00000000000071cd         align      16                                          ; End of unwind block (FDE at 0x9e2c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
00000000000071d0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x9e7c), CODE XREF=rpl_mbrtowc+71
00000000000071d4         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
00000000000071d6         call       j_setlocale                                 ; setlocale
00000000000071db         mov        rdx, rax
00000000000071de         mov        eax, 0x1
00000000000071e3         test       rdx, rdx
00000000000071e6         je         loc_7205

00000000000071e8         lea        rdi, qword [__PRETTY_FUNCTION__.4162+11]    ; 0x8a0b
00000000000071ef         mov        ecx, 0x2
00000000000071f4         mov        rsi, rdx
00000000000071f7         rep  cmpsb byte [rsi], byte [rdi]
00000000000071f9         seta       cl
00000000000071fc         sbb        cl, 0x0
00000000000071ff         xor        eax, eax
0000000000007201         test       cl, cl
0000000000007203         jne        loc_7210

                     loc_7205:
0000000000007205         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
0000000000007209         ret
                        ; endp
000000000000720a         align      16

                     loc_7210:
0000000000007210         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
0000000000007217         mov        ecx, 0x6
000000000000721c         mov        rsi, rdx
000000000000721f         rep  cmpsb byte [rsi], byte [rdi]
0000000000007221         seta       al
0000000000007224         sbb        al, 0x0
0000000000007226         test       al, al
0000000000007228         setne      al
000000000000722b         add        rsp, 0x8
000000000000722f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000007230         sub        rsp, 0x8                                    ; End of unwind block (FDE at 0x9e7c), Begin of unwind block (FDE at 0x9e9c), CODE XREF=gettext_quote.part.1+11
0000000000007234         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000007239         call       j_nl_langinfo                               ; nl_langinfo
000000000000723e         test       rax, rax
0000000000007241         je         loc_7260

0000000000007243         cmp        byte [rax], 0x0
0000000000007246         lea        rdx, qword [aAscii]                         ; "ASCII"
000000000000724d         cmove      rax, rdx
0000000000007251         add        rsp, 0x8
0000000000007255         ret
                        ; endp
0000000000007256         align      32

                     loc_7260:
0000000000007260         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
0000000000007267         add        rsp, 0x8
000000000000726b         ret
                        ; endp
000000000000726c         align      16                                          ; End of unwind block (FDE at 0x9e9c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
0000000000007270         push       r15                                         ; Begin of unwind block (FDE at 0x9ebc), DATA XREF=_start+22
0000000000007272         push       r14
0000000000007274         mov        r15, rdx
0000000000007277         push       r13
0000000000007279         push       r12
000000000000727b         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
0000000000007282         push       rbp
0000000000007283         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
000000000000728a         push       rbx
000000000000728b         mov        r13d, edi
000000000000728e         mov        r14, rsi
0000000000007291         sub        rbp, r12
0000000000007294         sub        rsp, 0x8
0000000000007298         sar        rbp, 0x3
000000000000729c         call       _init                                       ; _init
00000000000072a1         test       rbp, rbp
00000000000072a4         je         loc_72c6

00000000000072a6         xor        ebx, ebx
00000000000072a8         nop        dword [rax+rax]

                     loc_72b0:
00000000000072b0         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
00000000000072b3         mov        rsi, r14
00000000000072b6         mov        edi, r13d
00000000000072b9         call       qword [r12+rbx*8]
00000000000072bd         add        rbx, 0x1
00000000000072c1         cmp        rbp, rbx
00000000000072c4         jne        loc_72b0

                     loc_72c6:
00000000000072c6         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
00000000000072ca         pop        rbx
00000000000072cb         pop        rbp
00000000000072cc         pop        r12
00000000000072ce         pop        r13
00000000000072d0         pop        r14
00000000000072d2         pop        r15
00000000000072d4         ret
                        ; endp
00000000000072d5         align      32                                          ; End of unwind block (FDE at 0x9ebc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
00000000000072e0         ret                                                    ; Begin of unwind block (FDE at 0x9f04), DATA XREF=_start+15
                        ; endp
00000000000072e2         align      16                                          ; End of unwind block (FDE at 0x9f04)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
00000000000072f0         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0x9f1c), __dso_handle, CODE XREF=main+113
00000000000072f7         xor        esi, esi
00000000000072f9         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
00000000000072fe         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x9f1c)
00000000000072ff         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x7300; 0x7309[ (9 bytes)
        ; File offset : [29440; 29449[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
0000000000007300         sub        rsp, 0x8
0000000000007304         add        rsp, 0x8
0000000000007308         ret
                        ; endp
0000000000007309         db  0x00 ; '.'
000000000000730a         db  0x00 ; '.'
000000000000730b         db  0x00 ; '.'
000000000000730c         db  0x00 ; '.'
000000000000730d         db  0x00 ; '.'
000000000000730e         db  0x00 ; '.'
000000000000730f         db  0x00 ; '.'
0000000000007310         db  0x00 ; '.'
0000000000007311         db  0x00 ; '.'
0000000000007312         db  0x00 ; '.'
0000000000007313         db  0x00 ; '.'
0000000000007314         db  0x00 ; '.'
0000000000007315         db  0x00 ; '.'
0000000000007316         db  0x00 ; '.'
0000000000007317         db  0x00 ; '.'
0000000000007318         db  0x00 ; '.'
0000000000007319         db  0x00 ; '.'
000000000000731a         db  0x00 ; '.'
000000000000731b         db  0x00 ; '.'
000000000000731c         db  0x00 ; '.'
000000000000731d         db  0x00 ; '.'
000000000000731e         db  0x00 ; '.'
000000000000731f         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x7320; 0x8a19[ (5881 bytes)
        ; File offset : [29472; 35353[ (5881 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
0000000000007320         db  0x01 ; '.'
0000000000007321         db  0x00 ; '.'
0000000000007322         db  0x02 ; '.'
0000000000007323         db  0x00 ; '.'
0000000000007324         db  0x2e ; '.'                                         ; DATA XREF=isz85+23
0000000000007325         db  0x2d ; '-'
0000000000007326         db  0x3a ; ':'
0000000000007327         db  0x2b ; '+'
0000000000007328         db  0x3d ; '='
0000000000007329         db  0x5e ; '^'
000000000000732a         db  0x21 ; '!'
000000000000732b         db  0x2f ; '/'
000000000000732c         db  0x2a ; '*'
000000000000732d         db  0x3f ; '?'
000000000000732e         db  0x26 ; '&'
000000000000732f         db  0x3c ; '<'
0000000000007330         db  0x3e ; '>'
0000000000007331         db  0x28 ; '('
0000000000007332         db  0x29 ; ')'
0000000000007333         db  0x5b ; '['
0000000000007334         db  0x5d ; ']'
0000000000007335         db  0x7b ; '{'
0000000000007336         db  0x7d ; '}'
0000000000007337         db  0x40 ; '@'
0000000000007338         db  0x25 ; '%'
0000000000007339         db  0x24 ; '$'
000000000000733a         db  0x23 ; '#'
000000000000733b         db  0x00 ; '.'
                     aP0x32P0x5a:
000000000000733c         db         "*p >= 0x32 && *p <= 0x5a", 0               ; DATA XREF=base32hex_encode+101
                     aBasenc:
0000000000007355         db         "basenc", 0                                 ; DATA XREF=main+249, usage+675, usage+988, usage+1172, usage+1191, usage+1225
                     aUsageSOptionFi:
000000000000735c         db         "Usage: %s [OPTION]... [FILE]\n", 0         ; DATA XREF=usage+93
000000000000737a         db  0x5b ; '['                                         ; DATA XREF=usage+687
000000000000737b         db  0x00 ; '.'
                     aTestInvocation:
000000000000737c         db         "test invocation", 0                        ; DATA XREF=usage+726
                     aMulticallInvoc:
000000000000738c         db         "Multi-call invocation", 0                  ; DATA XREF=usage+774
                     aSha224sum:
00000000000073a2         db         "sha224sum", 0                              ; DATA XREF=usage+791
                     aSha2Utilities:
00000000000073ac         db         "sha2 utilities", 0                         ; DATA XREF=usage+803
                     aSha256sum:
00000000000073bb         db         "sha256sum", 0                              ; DATA XREF=usage+694
                     aSha384sum:
00000000000073c5         db         "sha384sum", 0                              ; DATA XREF=usage+738
                     aSha512sum:
00000000000073cf         db         "sha512sum", 0                              ; DATA XREF=usage+762
                     aNsOnlineHelpSn:
00000000000073d9         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+874
00000000000073f0         db  0x47 ; 'G'                                         ; DATA XREF=main+242, usage+902, usage+1095, emit_bug_reporting_address+68
00000000000073f1         db  0x4e ; 'N'
00000000000073f2         db  0x55 ; 'U'
00000000000073f3         db  0x20 ; ' '
                     aCoreutils:
00000000000073f4         db         "coreutils", 0                              ; DATA XREF=main+82, main+94, usage+750
00000000000073fe         db  0x65 ; 'e'                                         ; DATA XREF=usage+941, usage+1134
00000000000073ff         db  0x6e ; 'n'
0000000000007400         db  0x5f ; '_'
0000000000007401         db  0x00 ; '.'
                     aFullDocumentat:
0000000000007402         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+969, usage+1158
                     aUsrlocalsharel:
000000000000741d         db         "/usr/local/share/locale", 0                ; DATA XREF=main+75
                     aInvalidWrapSiz:
0000000000007435         db         "invalid wrap size", 0                      ; DATA XREF=main+336
                     aAssafGordon:
0000000000007447         db         "Assaf Gordon", 0                           ; DATA XREF=main+228
                     aSimonJosefsson:
0000000000007454         db         "Simon Josefsson", 0                        ; DATA XREF=main+235
0000000000007464         db  0x64 ; 'd'                                         ; DATA XREF=main+130
0000000000007465         db  0x69 ; 'i'
0000000000007466         db  0x77 ; 'w'
0000000000007467         db  0x3a ; ':'
0000000000007468         db  0x00 ; '.'
                     aMissingEncodin:
0000000000007469         db         "missing encoding type", 0                  ; DATA XREF=main+2596
                     aExtraOperandS:
000000000000747f         db         "extra operand %s", 0                       ; DATA XREF=main+2737
0000000000007490         db  0x72 ; 'r'                                         ; DATA XREF=main+562
0000000000007491         db  0x62 ; 'b'
0000000000007492         db  0x00 ; '.'
                     aReadError:
0000000000007493         db         "read error", 0                             ; DATA XREF=main+2075, main+2545
                     aWriteError:
000000000000749e         db         "write error", 0                            ; DATA XREF=main+2211, main+2277, main+2501, main+2634, main+2813, close_stdout+67
                     aInvalidInput:
00000000000074aa         db         "invalid input", 0                          ; DATA XREF=main+2465
                     aClosingStandar:
00000000000074b8         db         "closing standard input", 0                 ; DATA XREF=main+2352
                     aDecode:
00000000000074cf         db         "decode", 0
                     aWrap:
00000000000074d6         db         "wrap", 0
                     aIgnoregarbage:
00000000000074db         db         "ignore-garbage", 0
                     aBase64:
00000000000074ea         db         "base64", 0
                     aBase64url:
00000000000074f1         db         "base64url", 0
                     aBase32:
00000000000074fb         db         "base32", 0
                     aBase32hex:
0000000000007502         db         "base32hex", 0
                     aBase16:
000000000000750c         db         "base16", 0
                     aBase2msbf:
0000000000007513         db         "base2msbf", 0
                     aBase2lsbf:
000000000000751d         db         "base2lsbf", 0
0000000000007527         db  0x7a ; 'z'
0000000000007528         db  0x38 ; '8'
0000000000007529         db  0x35 ; '5'
000000000000752a         db  0x00 ; '.'
                     aHelp:
000000000000752b         db         "help", 0
                     aVersion:
0000000000007530         db         "version", 0
                     aInvalidInputLe:
0000000000007538         db         "invalid input (length must be multiple of 4 characters)", 0 ; DATA XREF=z85_encode+271
                     aCoreutils831sr:
0000000000007570         db         "../coreutils-8.31/src/basenc.c", 0         ; DATA XREF=base32hex_encode+94
000000000000758f         align      16
                     aTrySHelpForMor:
0000000000007590         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
00000000000075b7         align      8
                     aBasencEncodeOr:
00000000000075b8         db         "basenc encode or decode FILE, or standard input, to standard output.\n", 0 ; DATA XREF=usage+132
00000000000075fe         align      512
                     aNwithNoFileOrW:
0000000000007600         db         "\nWith no FILE, or when FILE is -, read standard input.\n", 0 ; DATA XREF=usage+169
                     aNmandatoryArgu:
0000000000007638         db         "\nMandatory arguments to long options are mandatory for short options too.\n", 0 ; DATA XREF=usage+206
0000000000007683         align      8
                     aBase64SameAsBa:
0000000000007688         db         "      --base64          same as 'base64' program (RFC4648 section 4)\n", 0 ; DATA XREF=usage+243
00000000000076ce         align      16
                     aBase64urlFileA:
00000000000076d0         db         "      --base64url       file- and url-safe base64 (RFC4648 section 5)\n", 0 ; DATA XREF=usage+280
0000000000007717         align      8
                     aBase32SameAsBa:
0000000000007718         db         "      --base32          same as 'base32' program (RFC4648 section 6)\n", 0 ; DATA XREF=usage+317
000000000000775e         align      32
                     aBase32hexExten:
0000000000007760         db         "      --base32hex       extended hex alphabet base32 (RFC4648 section 7)\n", 0 ; DATA XREF=usage+354
00000000000077aa         align      16
                     aBase16HexEncod:
00000000000077b0         db         "      --base16          hex encoding (RFC4648 section 8)\n", 0 ; DATA XREF=usage+391
00000000000077ea         align      16
                     aBase2msbfBitSt:
00000000000077f0         db         "      --base2msbf       bit string with most significant bit (msb) first\n", 0 ; DATA XREF=usage+428
000000000000783a         align      64
                     aBase2lsbfBitSt:
0000000000007840         db         "      --base2lsbf       bit string with least significant bit (lsb) first\n", 0 ; DATA XREF=usage+465
000000000000788b         align      16
                     aDDecodeDecodeD:
0000000000007890         db         "  -d, --decode          decode data\n  -i, --ignore-garbage  when decoding, ignore non-alphabet characters\n  -w, --wrap=COLS       wrap encoded lines after COLS character (default 76).\n                          Use 0 to disable line wrapping\n\n", 0 ; DATA XREF=usage+502
0000000000007983         align      8
                     aZ85Ascii85like:
0000000000007988         db         "      --z85             ascii85-like encoding (ZeroMQ spec:32/Z85);\n                        when encoding, input length must be a multiple of 4;\n                        when decoding, input length must be a multiple of 5\n", 0 ; DATA XREF=usage+539
0000000000007a66         align      8
                     aHelpDisplayThi:
0000000000007a68         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+576
0000000000007a95         align      8
                     aVersionOutputV:
0000000000007a98         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+613
0000000000007ace         align      16
                     aNwhenDecodingT:
0000000000007ad0         db         "\nWhen decoding, the input may contain newlines in addition to the bytes of\nthe formal alphabet.  Use --ignore-garbage to attempt to recover\nfrom any other non-alphabet bytes in the encoded stream.\n", 0 ; DATA XREF=usage+650
0000000000007b96         align      8
                     aHttpswwwgnuorg:
0000000000007b98         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+895, usage+995, usage+1088, usage+1198, emit_bug_reporting_address+61
                     aReportAnyTrans:
0000000000007bc0         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+1239
0000000000007c07         align      8
                     aOrAvailableLoc:
0000000000007c08         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+1038
0000000000007c3b         align      64
                     switch_table_7c40:        // switch_table
0000000000007c40         dd         main.loc_1cef-switch_table_7c40, main.loc_1ca4-switch_table_7c40, main.loc_1dd0-switch_table_7c40, main.loc_1d85-switch_table_7c40 ; switch table used at 0x1a69 containing 8 entries, DATA XREF=main+411
0000000000007c50         dd         main.loc_1e1b-switch_table_7c40, main.loc_1c59-switch_table_7c40, main.loc_1a6b-switch_table_7c40, main.loc_1d3a-switch_table_7c40
                     __PRETTY_FUNCTION__.7847:
0000000000007c60         db         "base32hex_encode", 0                       ; DATA XREF=base32hex_encode+87
0000000000007c71         db  0x00 ; '.'
0000000000007c72         db  0x00 ; '.'
0000000000007c73         db  0x00 ; '.'
0000000000007c74         db  0x00 ; '.'
0000000000007c75         db  0x00 ; '.'
0000000000007c76         db  0x00 ; '.'
0000000000007c77         db  0x00 ; '.'
0000000000007c78         db  0x00 ; '.'
0000000000007c79         db  0x00 ; '.'
0000000000007c7a         db  0x00 ; '.'
0000000000007c7b         db  0x00 ; '.'
0000000000007c7c         db  0x00 ; '.'
0000000000007c7d         db  0x00 ; '.'
0000000000007c7e         db  0x00 ; '.'
0000000000007c7f         db  0x00 ; '.'
                     z85_decoding:
0000000000007c80         db  0x44 ; 'D'                                         ; DATA XREF=z85_decode_ctx+28
0000000000007c81         db  0xff ; '.'
0000000000007c82         db  0x54 ; 'T'
0000000000007c83         db  0x53 ; 'S'
0000000000007c84         db  0x52 ; 'R'
0000000000007c85         db  0x48 ; 'H'
0000000000007c86         db  0xff ; '.'
0000000000007c87         db  0x4b ; 'K'
0000000000007c88         db  0x4c ; 'L'
0000000000007c89         db  0x46 ; 'F'
0000000000007c8a         db  0x41 ; 'A'
0000000000007c8b         db  0xff ; '.'
0000000000007c8c         db  0x3f ; '?'
0000000000007c8d         db  0x3e ; '>'
0000000000007c8e         db  0x45 ; 'E'
0000000000007c8f         db  0x00 ; '.'
0000000000007c90         db  0x01 ; '.'
0000000000007c91         db  0x02 ; '.'
0000000000007c92         db  0x03 ; '.'
0000000000007c93         db  0x04 ; '.'
0000000000007c94         db  0x05 ; '.'
0000000000007c95         db  0x06 ; '.'
0000000000007c96         db  0x07 ; '.'
0000000000007c97         db  0x08 ; '.'
0000000000007c98         db  0x09 ; '.'
0000000000007c99         db  0x40 ; '@'
0000000000007c9a         db  0xff ; '.'
0000000000007c9b         db  0x49 ; 'I'
0000000000007c9c         db  0x42 ; 'B'
0000000000007c9d         db  0x4a ; 'J'
0000000000007c9e         db  0x47 ; 'G'
0000000000007c9f         db  0x51 ; 'Q'
0000000000007ca0         db  0x24 ; '$'
0000000000007ca1         db  0x25 ; '%'
0000000000007ca2         db  0x26 ; '&'
0000000000007ca3         db  0x27 ; '''
0000000000007ca4         db  0x28 ; '('
0000000000007ca5         db  0x29 ; ')'
0000000000007ca6         db  0x2a ; '*'
0000000000007ca7         db  0x2b ; '+'
0000000000007ca8         db  0x2c ; ','
0000000000007ca9         db  0x2d ; '-'
0000000000007caa         db  0x2e ; '.'
0000000000007cab         db  0x2f ; '/'
0000000000007cac         db  0x30 ; '0'
0000000000007cad         db  0x31 ; '1'
0000000000007cae         db  0x32 ; '2'
0000000000007caf         db  0x33 ; '3'
0000000000007cb0         db  0x34 ; '4'
0000000000007cb1         db  0x35 ; '5'
0000000000007cb2         db  0x36 ; '6'
0000000000007cb3         db  0x37 ; '7'
0000000000007cb4         db  0x38 ; '8'
0000000000007cb5         db  0x39 ; '9'
0000000000007cb6         db  0x3a ; ':'
0000000000007cb7         db  0x3b ; ';'
0000000000007cb8         db  0x3c ; '<'
0000000000007cb9         db  0x3d ; '='
0000000000007cba         db  0x4d ; 'M'
0000000000007cbb         db  0xff ; '.'
0000000000007cbc         db  0x4e ; 'N'
0000000000007cbd         db  0x43 ; 'C'
0000000000007cbe         db  0xff ; '.'
0000000000007cbf         db  0xff ; '.'
0000000000007cc0         db  0x0a ; '.'
0000000000007cc1         db  0x0b ; '.'
0000000000007cc2         db  0x0c ; '.'
0000000000007cc3         db  0x0d ; '.'
0000000000007cc4         db  0x0e ; '.'
0000000000007cc5         db  0x0f ; '.'
0000000000007cc6         db  0x10 ; '.'
0000000000007cc7         db  0x11 ; '.'
0000000000007cc8         db  0x12 ; '.'
0000000000007cc9         db  0x13 ; '.'
0000000000007cca         db  0x14 ; '.'
0000000000007ccb         db  0x15 ; '.'
0000000000007ccc         db  0x16 ; '.'
0000000000007ccd         db  0x17 ; '.'
0000000000007cce         db  0x18 ; '.'
0000000000007ccf         db  0x19 ; '.'
0000000000007cd0         db  0x1a ; '.'
0000000000007cd1         db  0x1b ; '.'
0000000000007cd2         db  0x1c ; '.'
0000000000007cd3         db  0x1d ; '.'
0000000000007cd4         db  0x1e ; '.'
0000000000007cd5         db  0x1f ; '.'
0000000000007cd6         db  0x20 ; ' '
0000000000007cd7         db  0x21 ; '!'
0000000000007cd8         db  0x22 ; '"'
0000000000007cd9         db  0x23 ; '#'
0000000000007cda         db  0x4f ; 'O'
0000000000007cdb         db  0xff ; '.'
0000000000007cdc         db  0x50 ; 'P'
0000000000007cdd         db  0x00 ; '.'
0000000000007cde         db  0x00 ; '.'
0000000000007cdf         db  0x00 ; '.'
                     z85_encoding:
0000000000007ce0         db         "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.-:+=^!/*?&<>()[]{}@%$#", 0 ; DATA XREF=z85_encode+56
0000000000007d36         align      64
                     base16:
0000000000007d40         db         "0123456789ABCDEF", 0                       ; DATA XREF=base16_encode+5
0000000000007d51         align      32
                     base32_hex_to_norm:
0000000000007d60         db         "ABCDEFGHIJ:;<=>?@KLMNOPQRSTUVWXYZ234567", 0 ; DATA XREF=base32hex_decode_ctx_wrapper+30
0000000000007d88         align      32
                     base32_norm_to_hex:
0000000000007da0         db         "QRSTUV89:;<=>?@0123456789ABCDEFGHIJKLMNOP8.31", 0 ; DATA XREF=base32hex_encode+37
0000000000007dce         db  0x00 ; '.'
0000000000007dcf         db  0x00 ; '.'
0000000000007dd0         db  0x00 ; '.'
0000000000007dd1         db  0x00 ; '.'
0000000000007dd2         db  0x00 ; '.'
0000000000007dd3         db  0x00 ; '.'
0000000000007dd4         db  0x00 ; '.'
0000000000007dd5         db  0x00 ; '.'
0000000000007dd6         db  0x00 ; '.'
0000000000007dd7         db  0x00 ; '.'
0000000000007dd8         db  0x00 ; '.'
0000000000007dd9         db  0x00 ; '.'
0000000000007dda         db  0x00 ; '.'
0000000000007ddb         db  0x00 ; '.'
0000000000007ddc         db  0x00 ; '.'
0000000000007ddd         db  0x00 ; '.'
0000000000007dde         db  0x00 ; '.'
0000000000007ddf         db  0x00 ; '.'
                     b32str.3066:
0000000000007de0         db  0x41 ; 'A'                                         ; DATA XREF=base32_encode
0000000000007de1         db  0x42 ; 'B'
0000000000007de2         db  0x43 ; 'C'
0000000000007de3         db  0x44 ; 'D'
0000000000007de4         db  0x45 ; 'E'
0000000000007de5         db  0x46 ; 'F'
0000000000007de6         db  0x47 ; 'G'
0000000000007de7         db  0x48 ; 'H'
0000000000007de8         db  0x49 ; 'I'
0000000000007de9         db  0x4a ; 'J'
0000000000007dea         db  0x4b ; 'K'
0000000000007deb         db  0x4c ; 'L'
0000000000007dec         db  0x4d ; 'M'
0000000000007ded         db  0x4e ; 'N'
0000000000007dee         db  0x4f ; 'O'
0000000000007def         db  0x50 ; 'P'
0000000000007df0         db  0x51 ; 'Q'
0000000000007df1         db  0x52 ; 'R'
0000000000007df2         db  0x53 ; 'S'
0000000000007df3         db  0x54 ; 'T'
0000000000007df4         db  0x55 ; 'U'
0000000000007df5         db  0x56 ; 'V'
0000000000007df6         db  0x57 ; 'W'
0000000000007df7         db  0x58 ; 'X'
0000000000007df8         db  0x59 ; 'Y'
0000000000007df9         db  0x5a ; 'Z'
0000000000007dfa         db  0x32 ; '2'
0000000000007dfb         db  0x33 ; '3'
0000000000007dfc         db  0x34 ; '4'
0000000000007dfd         db  0x35 ; '5'
0000000000007dfe         db  0x36 ; '6'
0000000000007dff         db  0x37 ; '7'
                     b32:
0000000000007e00         db  0xff ; '.'                                         ; DATA XREF=decode_8+16, isbase32
0000000000007e01         db  0xff ; '.'
0000000000007e02         db  0xff ; '.'
0000000000007e03         db  0xff ; '.'
0000000000007e04         db  0xff ; '.'
0000000000007e05         db  0xff ; '.'
0000000000007e06         db  0xff ; '.'
0000000000007e07         db  0xff ; '.'
0000000000007e08         db  0xff ; '.'
0000000000007e09         db  0xff ; '.'
0000000000007e0a         db  0xff ; '.'
0000000000007e0b         db  0xff ; '.'
0000000000007e0c         db  0xff ; '.'
0000000000007e0d         db  0xff ; '.'
0000000000007e0e         db  0xff ; '.'
0000000000007e0f         db  0xff ; '.'
0000000000007e10         db  0xff ; '.'
0000000000007e11         db  0xff ; '.'
0000000000007e12         db  0xff ; '.'
0000000000007e13         db  0xff ; '.'
0000000000007e14         db  0xff ; '.'
0000000000007e15         db  0xff ; '.'
0000000000007e16         db  0xff ; '.'
0000000000007e17         db  0xff ; '.'
0000000000007e18         db  0xff ; '.'
0000000000007e19         db  0xff ; '.'
0000000000007e1a         db  0xff ; '.'
0000000000007e1b         db  0xff ; '.'
0000000000007e1c         db  0xff ; '.'
0000000000007e1d         db  0xff ; '.'
0000000000007e1e         db  0xff ; '.'
0000000000007e1f         db  0xff ; '.'
0000000000007e20         db  0xff ; '.'
0000000000007e21         db  0xff ; '.'
0000000000007e22         db  0xff ; '.'
0000000000007e23         db  0xff ; '.'
0000000000007e24         db  0xff ; '.'
0000000000007e25         db  0xff ; '.'
0000000000007e26         db  0xff ; '.'
0000000000007e27         db  0xff ; '.'
0000000000007e28         db  0xff ; '.'
0000000000007e29         db  0xff ; '.'
0000000000007e2a         db  0xff ; '.'
0000000000007e2b         db  0xff ; '.'
0000000000007e2c         db  0xff ; '.'
0000000000007e2d         db  0xff ; '.'
0000000000007e2e         db  0xff ; '.'
0000000000007e2f         db  0xff ; '.'
0000000000007e30         db  0xff ; '.'
0000000000007e31         db  0xff ; '.'
0000000000007e32         db  0x1a ; '.'
0000000000007e33         db  0x1b ; '.'
0000000000007e34         db  0x1c ; '.'
0000000000007e35         db  0x1d ; '.'
0000000000007e36         db  0x1e ; '.'
0000000000007e37         db  0x1f ; '.'
0000000000007e38         db  0xff ; '.'
0000000000007e39         db  0xff ; '.'
0000000000007e3a         db  0xff ; '.'
0000000000007e3b         db  0xff ; '.'
0000000000007e3c         db  0xff ; '.'
0000000000007e3d         db  0xff ; '.'
0000000000007e3e         db  0xff ; '.'
0000000000007e3f         db  0xff ; '.'
0000000000007e40         db  0xff ; '.'
0000000000007e41         db  0x00 ; '.'
0000000000007e42         db  0x01 ; '.'
0000000000007e43         db  0x02 ; '.'
0000000000007e44         db  0x03 ; '.'
0000000000007e45         db  0x04 ; '.'
0000000000007e46         db  0x05 ; '.'
0000000000007e47         db  0x06 ; '.'
0000000000007e48         db  0x07 ; '.'
0000000000007e49         db  0x08 ; '.'
0000000000007e4a         db  0x09 ; '.'
0000000000007e4b         db  0x0a ; '.'
0000000000007e4c         db  0x0b ; '.'
0000000000007e4d         db  0x0c ; '.'
0000000000007e4e         db  0x0d ; '.'
0000000000007e4f         db  0x0e ; '.'
0000000000007e50         db  0x0f ; '.'
0000000000007e51         db  0x10 ; '.'
0000000000007e52         db  0x11 ; '.'
0000000000007e53         db  0x12 ; '.'
0000000000007e54         db  0x13 ; '.'
0000000000007e55         db  0x14 ; '.'
0000000000007e56         db  0x15 ; '.'
0000000000007e57         db  0x16 ; '.'
0000000000007e58         db  0x17 ; '.'
0000000000007e59         db  0x18 ; '.'
0000000000007e5a         db  0x19 ; '.'
0000000000007e5b         db  0xff ; '.'
0000000000007e5c         db  0xff ; '.'
0000000000007e5d         db  0xff ; '.'
0000000000007e5e         db  0xff ; '.'
0000000000007e5f         db  0xff ; '.'
0000000000007e60         db  0xff ; '.'
0000000000007e61         db  0xff ; '.'
0000000000007e62         db  0xff ; '.'
0000000000007e63         db  0xff ; '.'
0000000000007e64         db  0xff ; '.'
0000000000007e65         db  0xff ; '.'
0000000000007e66         db  0xff ; '.'
0000000000007e67         db  0xff ; '.'
0000000000007e68         db  0xff ; '.'
0000000000007e69         db  0xff ; '.'
0000000000007e6a         db  0xff ; '.'
0000000000007e6b         db  0xff ; '.'
0000000000007e6c         db  0xff ; '.'
0000000000007e6d         db  0xff ; '.'
0000000000007e6e         db  0xff ; '.'
0000000000007e6f         db  0xff ; '.'
0000000000007e70         db  0xff ; '.'
0000000000007e71         db  0xff ; '.'
0000000000007e72         db  0xff ; '.'
0000000000007e73         db  0xff ; '.'
0000000000007e74         db  0xff ; '.'
0000000000007e75         db  0xff ; '.'
0000000000007e76         db  0xff ; '.'
0000000000007e77         db  0xff ; '.'
0000000000007e78         db  0xff ; '.'
0000000000007e79         db  0xff ; '.'
0000000000007e7a         db  0xff ; '.'
0000000000007e7b         db  0xff ; '.'
0000000000007e7c         db  0xff ; '.'
0000000000007e7d         db  0xff ; '.'
0000000000007e7e         db  0xff ; '.'
0000000000007e7f         db  0xff ; '.'
0000000000007e80         db  0xff ; '.'
0000000000007e81         db  0xff ; '.'
0000000000007e82         db  0xff ; '.'
0000000000007e83         db  0xff ; '.'
0000000000007e84         db  0xff ; '.'
0000000000007e85         db  0xff ; '.'
0000000000007e86         db  0xff ; '.'
0000000000007e87         db  0xff ; '.'
0000000000007e88         db  0xff ; '.'
0000000000007e89         db  0xff ; '.'
0000000000007e8a         db  0xff ; '.'
0000000000007e8b         db  0xff ; '.'
0000000000007e8c         db  0xff ; '.'
0000000000007e8d         db  0xff ; '.'
0000000000007e8e         db  0xff ; '.'
0000000000007e8f         db  0xff ; '.'
0000000000007e90         db  0xff ; '.'
0000000000007e91         db  0xff ; '.'
0000000000007e92         db  0xff ; '.'
0000000000007e93         db  0xff ; '.'
0000000000007e94         db  0xff ; '.'
0000000000007e95         db  0xff ; '.'
0000000000007e96         db  0xff ; '.'
0000000000007e97         db  0xff ; '.'
0000000000007e98         db  0xff ; '.'
0000000000007e99         db  0xff ; '.'
0000000000007e9a         db  0xff ; '.'
0000000000007e9b         db  0xff ; '.'
0000000000007e9c         db  0xff ; '.'
0000000000007e9d         db  0xff ; '.'
0000000000007e9e         db  0xff ; '.'
0000000000007e9f         db  0xff ; '.'
0000000000007ea0         db  0xff ; '.'
0000000000007ea1         db  0xff ; '.'
0000000000007ea2         db  0xff ; '.'
0000000000007ea3         db  0xff ; '.'
0000000000007ea4         db  0xff ; '.'
0000000000007ea5         db  0xff ; '.'
0000000000007ea6         db  0xff ; '.'
0000000000007ea7         db  0xff ; '.'
0000000000007ea8         db  0xff ; '.'
0000000000007ea9         db  0xff ; '.'
0000000000007eaa         db  0xff ; '.'
0000000000007eab         db  0xff ; '.'
0000000000007eac         db  0xff ; '.'
0000000000007ead         db  0xff ; '.'
0000000000007eae         db  0xff ; '.'
0000000000007eaf         db  0xff ; '.'
0000000000007eb0         db  0xff ; '.'
0000000000007eb1         db  0xff ; '.'
0000000000007eb2         db  0xff ; '.'
0000000000007eb3         db  0xff ; '.'
0000000000007eb4         db  0xff ; '.'
0000000000007eb5         db  0xff ; '.'
0000000000007eb6         db  0xff ; '.'
0000000000007eb7         db  0xff ; '.'
0000000000007eb8         db  0xff ; '.'
0000000000007eb9         db  0xff ; '.'
0000000000007eba         db  0xff ; '.'
0000000000007ebb         db  0xff ; '.'
0000000000007ebc         db  0xff ; '.'
0000000000007ebd         db  0xff ; '.'
0000000000007ebe         db  0xff ; '.'
0000000000007ebf         db  0xff ; '.'
0000000000007ec0         db  0xff ; '.'
0000000000007ec1         db  0xff ; '.'
0000000000007ec2         db  0xff ; '.'
0000000000007ec3         db  0xff ; '.'
0000000000007ec4         db  0xff ; '.'
0000000000007ec5         db  0xff ; '.'
0000000000007ec6         db  0xff ; '.'
0000000000007ec7         db  0xff ; '.'
0000000000007ec8         db  0xff ; '.'
0000000000007ec9         db  0xff ; '.'
0000000000007eca         db  0xff ; '.'
0000000000007ecb         db  0xff ; '.'
0000000000007ecc         db  0xff ; '.'
0000000000007ecd         db  0xff ; '.'
0000000000007ece         db  0xff ; '.'
0000000000007ecf         db  0xff ; '.'
0000000000007ed0         db  0xff ; '.'
0000000000007ed1         db  0xff ; '.'
0000000000007ed2         db  0xff ; '.'
0000000000007ed3         db  0xff ; '.'
0000000000007ed4         db  0xff ; '.'
0000000000007ed5         db  0xff ; '.'
0000000000007ed6         db  0xff ; '.'
0000000000007ed7         db  0xff ; '.'
0000000000007ed8         db  0xff ; '.'
0000000000007ed9         db  0xff ; '.'
0000000000007eda         db  0xff ; '.'
0000000000007edb         db  0xff ; '.'
0000000000007edc         db  0xff ; '.'
0000000000007edd         db  0xff ; '.'
0000000000007ede         db  0xff ; '.'
0000000000007edf         db  0xff ; '.'
0000000000007ee0         db  0xff ; '.'
0000000000007ee1         db  0xff ; '.'
0000000000007ee2         db  0xff ; '.'
0000000000007ee3         db  0xff ; '.'
0000000000007ee4         db  0xff ; '.'
0000000000007ee5         db  0xff ; '.'
0000000000007ee6         db  0xff ; '.'
0000000000007ee7         db  0xff ; '.'
0000000000007ee8         db  0xff ; '.'
0000000000007ee9         db  0xff ; '.'
0000000000007eea         db  0xff ; '.'
0000000000007eeb         db  0xff ; '.'
0000000000007eec         db  0xff ; '.'
0000000000007eed         db  0xff ; '.'
0000000000007eee         db  0xff ; '.'
0000000000007eef         db  0xff ; '.'
0000000000007ef0         db  0xff ; '.'
0000000000007ef1         db  0xff ; '.'
0000000000007ef2         db  0xff ; '.'
0000000000007ef3         db  0xff ; '.'
0000000000007ef4         db  0xff ; '.'
0000000000007ef5         db  0xff ; '.'
0000000000007ef6         db  0xff ; '.'
0000000000007ef7         db  0xff ; '.'
0000000000007ef8         db  0xff ; '.'
0000000000007ef9         db  0xff ; '.'
0000000000007efa         db  0xff ; '.'
0000000000007efb         db  0xff ; '.'
0000000000007efc         db  0xff ; '.'
0000000000007efd         db  0xff ; '.'
0000000000007efe         db  0xff ; '.'
0000000000007eff         db  0xff ; '.'
                     b64:
0000000000007f00         db  0xff ; '.'                                         ; DATA XREF=decode_4+16, isbase64
0000000000007f01         db  0xff ; '.'
0000000000007f02         db  0xff ; '.'
0000000000007f03         db  0xff ; '.'
0000000000007f04         db  0xff ; '.'
0000000000007f05         db  0xff ; '.'
0000000000007f06         db  0xff ; '.'
0000000000007f07         db  0xff ; '.'
0000000000007f08         db  0xff ; '.'
0000000000007f09         db  0xff ; '.'
0000000000007f0a         db  0xff ; '.'
0000000000007f0b         db  0xff ; '.'
0000000000007f0c         db  0xff ; '.'
0000000000007f0d         db  0xff ; '.'
0000000000007f0e         db  0xff ; '.'
0000000000007f0f         db  0xff ; '.'
0000000000007f10         db  0xff ; '.'
0000000000007f11         db  0xff ; '.'
0000000000007f12         db  0xff ; '.'
0000000000007f13         db  0xff ; '.'
0000000000007f14         db  0xff ; '.'
0000000000007f15         db  0xff ; '.'
0000000000007f16         db  0xff ; '.'
0000000000007f17         db  0xff ; '.'
0000000000007f18         db  0xff ; '.'
0000000000007f19         db  0xff ; '.'
0000000000007f1a         db  0xff ; '.'
0000000000007f1b         db  0xff ; '.'
0000000000007f1c         db  0xff ; '.'
0000000000007f1d         db  0xff ; '.'
0000000000007f1e         db  0xff ; '.'
0000000000007f1f         db  0xff ; '.'
0000000000007f20         db  0xff ; '.'
0000000000007f21         db  0xff ; '.'
0000000000007f22         db  0xff ; '.'
0000000000007f23         db  0xff ; '.'
0000000000007f24         db  0xff ; '.'
0000000000007f25         db  0xff ; '.'
0000000000007f26         db  0xff ; '.'
0000000000007f27         db  0xff ; '.'
0000000000007f28         db  0xff ; '.'
0000000000007f29         db  0xff ; '.'
0000000000007f2a         db  0xff ; '.'
0000000000007f2b         db  0x3e ; '>'
0000000000007f2c         db  0xff ; '.'
0000000000007f2d         db  0xff ; '.'
0000000000007f2e         db  0xff ; '.'
0000000000007f2f         db  0x3f ; '?'
0000000000007f30         db  0x34 ; '4'
0000000000007f31         db  0x35 ; '5'
0000000000007f32         db  0x36 ; '6'
0000000000007f33         db  0x37 ; '7'
0000000000007f34         db  0x38 ; '8'
0000000000007f35         db  0x39 ; '9'
0000000000007f36         db  0x3a ; ':'
0000000000007f37         db  0x3b ; ';'
0000000000007f38         db  0x3c ; '<'
0000000000007f39         db  0x3d ; '='
0000000000007f3a         db  0xff ; '.'
0000000000007f3b         db  0xff ; '.'
0000000000007f3c         db  0xff ; '.'
0000000000007f3d         db  0xff ; '.'
0000000000007f3e         db  0xff ; '.'
0000000000007f3f         db  0xff ; '.'
0000000000007f40         db  0xff ; '.'
0000000000007f41         db  0x00 ; '.'
0000000000007f42         db  0x01 ; '.'
0000000000007f43         db  0x02 ; '.'
0000000000007f44         db  0x03 ; '.'
0000000000007f45         db  0x04 ; '.'
0000000000007f46         db  0x05 ; '.'
0000000000007f47         db  0x06 ; '.'
0000000000007f48         db  0x07 ; '.'
0000000000007f49         db  0x08 ; '.'
0000000000007f4a         db  0x09 ; '.'
0000000000007f4b         db  0x0a ; '.'
0000000000007f4c         db  0x0b ; '.'
0000000000007f4d         db  0x0c ; '.'
0000000000007f4e         db  0x0d ; '.'
0000000000007f4f         db  0x0e ; '.'
0000000000007f50         db  0x0f ; '.'
0000000000007f51         db  0x10 ; '.'
0000000000007f52         db  0x11 ; '.'
0000000000007f53         db  0x12 ; '.'
0000000000007f54         db  0x13 ; '.'
0000000000007f55         db  0x14 ; '.'
0000000000007f56         db  0x15 ; '.'
0000000000007f57         db  0x16 ; '.'
0000000000007f58         db  0x17 ; '.'
0000000000007f59         db  0x18 ; '.'
0000000000007f5a         db  0x19 ; '.'
0000000000007f5b         db  0xff ; '.'
0000000000007f5c         db  0xff ; '.'
0000000000007f5d         db  0xff ; '.'
0000000000007f5e         db  0xff ; '.'
0000000000007f5f         db  0xff ; '.'
0000000000007f60         db  0xff ; '.'
0000000000007f61         db  0x1a ; '.'
0000000000007f62         db  0x1b ; '.'
0000000000007f63         db  0x1c ; '.'
0000000000007f64         db  0x1d ; '.'
0000000000007f65         db  0x1e ; '.'
0000000000007f66         db  0x1f ; '.'
0000000000007f67         db  0x20 ; ' '
0000000000007f68         db  0x21 ; '!'
0000000000007f69         db  0x22 ; '"'
0000000000007f6a         db  0x23 ; '#'
0000000000007f6b         db  0x24 ; '$'
0000000000007f6c         db  0x25 ; '%'
0000000000007f6d         db  0x26 ; '&'
0000000000007f6e         db  0x27 ; '''
0000000000007f6f         db  0x28 ; '('
0000000000007f70         db  0x29 ; ')'
0000000000007f71         db  0x2a ; '*'
0000000000007f72         db  0x2b ; '+'
0000000000007f73         db  0x2c ; ','
0000000000007f74         db  0x2d ; '-'
0000000000007f75         db  0x2e ; '.'
0000000000007f76         db  0x2f ; '/'
0000000000007f77         db  0x30 ; '0'
0000000000007f78         db  0x31 ; '1'
0000000000007f79         db  0x32 ; '2'
0000000000007f7a         db  0x33 ; '3'
0000000000007f7b         db  0xff ; '.'
0000000000007f7c         db  0xff ; '.'
0000000000007f7d         db  0xff ; '.'
0000000000007f7e         db  0xff ; '.'
0000000000007f7f         db  0xff ; '.'
0000000000007f80         db  0xff ; '.'
0000000000007f81         db  0xff ; '.'
0000000000007f82         db  0xff ; '.'
0000000000007f83         db  0xff ; '.'
0000000000007f84         db  0xff ; '.'
0000000000007f85         db  0xff ; '.'
0000000000007f86         db  0xff ; '.'
0000000000007f87         db  0xff ; '.'
0000000000007f88         db  0xff ; '.'
0000000000007f89         db  0xff ; '.'
0000000000007f8a         db  0xff ; '.'
0000000000007f8b         db  0xff ; '.'
0000000000007f8c         db  0xff ; '.'
0000000000007f8d         db  0xff ; '.'
0000000000007f8e         db  0xff ; '.'
0000000000007f8f         db  0xff ; '.'
0000000000007f90         db  0xff ; '.'
0000000000007f91         db  0xff ; '.'
0000000000007f92         db  0xff ; '.'
0000000000007f93         db  0xff ; '.'
0000000000007f94         db  0xff ; '.'
0000000000007f95         db  0xff ; '.'
0000000000007f96         db  0xff ; '.'
0000000000007f97         db  0xff ; '.'
0000000000007f98         db  0xff ; '.'
0000000000007f99         db  0xff ; '.'
0000000000007f9a         db  0xff ; '.'
0000000000007f9b         db  0xff ; '.'
0000000000007f9c         db  0xff ; '.'
0000000000007f9d         db  0xff ; '.'
0000000000007f9e         db  0xff ; '.'
0000000000007f9f         db  0xff ; '.'
0000000000007fa0         db  0xff ; '.'
0000000000007fa1         db  0xff ; '.'
0000000000007fa2         db  0xff ; '.'
0000000000007fa3         db  0xff ; '.'
0000000000007fa4         db  0xff ; '.'
0000000000007fa5         db  0xff ; '.'
0000000000007fa6         db  0xff ; '.'
0000000000007fa7         db  0xff ; '.'
0000000000007fa8         db  0xff ; '.'
0000000000007fa9         db  0xff ; '.'
0000000000007faa         db  0xff ; '.'
0000000000007fab         db  0xff ; '.'
0000000000007fac         db  0xff ; '.'
0000000000007fad         db  0xff ; '.'
0000000000007fae         db  0xff ; '.'
0000000000007faf         db  0xff ; '.'
0000000000007fb0         db  0xff ; '.'
0000000000007fb1         db  0xff ; '.'
0000000000007fb2         db  0xff ; '.'
0000000000007fb3         db  0xff ; '.'
0000000000007fb4         db  0xff ; '.'
0000000000007fb5         db  0xff ; '.'
0000000000007fb6         db  0xff ; '.'
0000000000007fb7         db  0xff ; '.'
0000000000007fb8         db  0xff ; '.'
0000000000007fb9         db  0xff ; '.'
0000000000007fba         db  0xff ; '.'
0000000000007fbb         db  0xff ; '.'
0000000000007fbc         db  0xff ; '.'
0000000000007fbd         db  0xff ; '.'
0000000000007fbe         db  0xff ; '.'
0000000000007fbf         db  0xff ; '.'
0000000000007fc0         db  0xff ; '.'
0000000000007fc1         db  0xff ; '.'
0000000000007fc2         db  0xff ; '.'
0000000000007fc3         db  0xff ; '.'
0000000000007fc4         db  0xff ; '.'
0000000000007fc5         db  0xff ; '.'
0000000000007fc6         db  0xff ; '.'
0000000000007fc7         db  0xff ; '.'
0000000000007fc8         db  0xff ; '.'
0000000000007fc9         db  0xff ; '.'
0000000000007fca         db  0xff ; '.'
0000000000007fcb         db  0xff ; '.'
0000000000007fcc         db  0xff ; '.'
0000000000007fcd         db  0xff ; '.'
0000000000007fce         db  0xff ; '.'
0000000000007fcf         db  0xff ; '.'
0000000000007fd0         db  0xff ; '.'
0000000000007fd1         db  0xff ; '.'
0000000000007fd2         db  0xff ; '.'
0000000000007fd3         db  0xff ; '.'
0000000000007fd4         db  0xff ; '.'
0000000000007fd5         db  0xff ; '.'
0000000000007fd6         db  0xff ; '.'
0000000000007fd7         db  0xff ; '.'
0000000000007fd8         db  0xff ; '.'
0000000000007fd9         db  0xff ; '.'
0000000000007fda         db  0xff ; '.'
0000000000007fdb         db  0xff ; '.'
0000000000007fdc         db  0xff ; '.'
0000000000007fdd         db  0xff ; '.'
0000000000007fde         db  0xff ; '.'
0000000000007fdf         db  0xff ; '.'
0000000000007fe0         db  0xff ; '.'
0000000000007fe1         db  0xff ; '.'
0000000000007fe2         db  0xff ; '.'
0000000000007fe3         db  0xff ; '.'
0000000000007fe4         db  0xff ; '.'
0000000000007fe5         db  0xff ; '.'
0000000000007fe6         db  0xff ; '.'
0000000000007fe7         db  0xff ; '.'
0000000000007fe8         db  0xff ; '.'
0000000000007fe9         db  0xff ; '.'
0000000000007fea         db  0xff ; '.'
0000000000007feb         db  0xff ; '.'
0000000000007fec         db  0xff ; '.'
0000000000007fed         db  0xff ; '.'
0000000000007fee         db  0xff ; '.'
0000000000007fef         db  0xff ; '.'
0000000000007ff0         db  0xff ; '.'
0000000000007ff1         db  0xff ; '.'
0000000000007ff2         db  0xff ; '.'
0000000000007ff3         db  0xff ; '.'
0000000000007ff4         db  0xff ; '.'
0000000000007ff5         db  0xff ; '.'
0000000000007ff6         db  0xff ; '.'
0000000000007ff7         db  0xff ; '.'
0000000000007ff8         db  0xff ; '.'
0000000000007ff9         db  0xff ; '.'
0000000000007ffa         db  0xff ; '.'
0000000000007ffb         db  0xff ; '.'
0000000000007ffc         db  0xff ; '.'
0000000000007ffd         db  0xff ; '.'
0000000000007ffe         db  0xff ; '.'
0000000000007fff         db  0xff ; '.'
                     b64c:
0000000000008000         db         "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/%s: %s", 0 ; DATA XREF=base64_encode+25, base64_encode+303
0000000000008047         align      8
                     aANullArgv0WasP:
0000000000008048         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
0000000000008080         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
0000000000008088         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
0000000000008089         db  0x74 ; 't'
000000000000808a         db  0x2d ; '-'                                         ; DATA XREF=main+529, main+1715, main+2326
000000000000808b         db  0x00 ; '.'
000000000000808c         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
000000000000808d         db  0x80 ; '.'
000000000000808e         db  0x98 ; '.'
000000000000808f         db  0x00 ; '.'
0000000000008090         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
0000000000008091         db  0x80 ; '.'
0000000000008092         db  0x99 ; '.'
0000000000008093         db  0x00 ; '.'
0000000000008094         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
0000000000008095         db  0x07 ; '.'
0000000000008096         db  0x65 ; 'e'
0000000000008097         db  0x00 ; '.'
0000000000008098         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
0000000000008099         db  0xaf ; '.'
000000000000809a         db  0x00 ; '.'
000000000000809b         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_4d40+1451, sub_4d40+1493, sub_4d40+2429
000000000000809c         db  0x00 ; '.'
000000000000809d         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_4d40+132, sub_4d40+1338, sub_4d40+1670, sub_4d40+1697, sub_4d40+2352
000000000000809e         db  0x00 ; '.'
000000000000809f         db  0x60 ; '`'                                         ; DATA XREF=sub_4d40+1627, sub_4d40+1654
00000000000080a0         db  0x00 ; '.'
                     aLiteral:
00000000000080a1         db         "literal", 0
                     aShell:
00000000000080a9         db         "shell", 0
                     aShellalways:
00000000000080af         db         "shell-always", 0
00000000000080bc         db  0x73 ; 's'
00000000000080bd         db  0x68 ; 'h'
00000000000080be         db  0x65 ; 'e'
00000000000080bf         db  0x6c ; 'l'
00000000000080c0         db  0x6c ; 'l'
00000000000080c1         db  0x2d ; '-'
                     aEscape:
00000000000080c2         db         "escape", 0
                     aShellescapealw:
00000000000080c9         db         "shell-escape-always", 0
                     aCmaybe:
00000000000080dd         db         "c-maybe", 0
                     aClocale:
00000000000080e5         db         "clocale", 0
00000000000080ed         align      256
                     switch_table_8100:        // switch_table
0000000000008100         dd         quotearg_buffer_restyled.loc_543a-switch_table_8100, quotearg_buffer_restyled.loc_4693-switch_table_8100, quotearg_buffer_restyled.loc_5668-switch_table_8100, quotearg_buffer_restyled.loc_5474-switch_table_8100 ; switch table used at 0x4691 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
0000000000008110         dd         quotearg_buffer_restyled.loc_5264-switch_table_8100, quotearg_buffer_restyled.loc_52c0-switch_table_8100, quotearg_buffer_restyled.loc_5315-switch_table_8100, quotearg_buffer_restyled.loc_535a-switch_table_8100
0000000000008120         dd         3 dup (quotearg_buffer_restyled.loc_5394-switch_table_8100)
000000000000812c         db  0xe4 ; '.'                                         ; DATA XREF=quotearg_buffer_restyled+477
000000000000812d         db  0xc8 ; '.'
000000000000812e         db  0xff ; '.'
000000000000812f         db  0xff ; '.'
0000000000008130         db  0xcc ; '.'
0000000000008131         db  0xc9 ; '.'
0000000000008132         db  0xff ; '.'
0000000000008133         db  0xff ; '.'
0000000000008134         db  0xcc ; '.'
0000000000008135         db  0xc9 ; '.'
0000000000008136         db  0xff ; '.'
0000000000008137         db  0xff ; '.'
0000000000008138         db  0xcc ; '.'
0000000000008139         db  0xc9 ; '.'
000000000000813a         db  0xff ; '.'
000000000000813b         db  0xff ; '.'
000000000000813c         db  0xcc ; '.'
000000000000813d         db  0xc9 ; '.'
000000000000813e         db  0xff ; '.'
000000000000813f         db  0xff ; '.'
0000000000008140         db  0xcc ; '.'
0000000000008141         db  0xc9 ; '.'
0000000000008142         db  0xff ; '.'
0000000000008143         db  0xff ; '.'
0000000000008144         db  0xcc ; '.'
0000000000008145         db  0xc9 ; '.'
0000000000008146         db  0xff ; '.'
0000000000008147         db  0xff ; '.'
0000000000008148         db  0x24 ; '$'
0000000000008149         db  0xc9 ; '.'
000000000000814a         db  0xff ; '.'
000000000000814b         db  0xff ; '.'
000000000000814c         db  0x2c ; ','
000000000000814d         db  0xc8 ; '.'
000000000000814e         db  0xff ; '.'
000000000000814f         db  0xff ; '.'
0000000000008150         db  0xec ; '.'
0000000000008151         db  0xc7 ; '.'
0000000000008152         db  0xff ; '.'
0000000000008153         db  0xff ; '.'
0000000000008154         db  0xb4 ; '.'
0000000000008155         db  0xc9 ; '.'
0000000000008156         db  0xff ; '.'
0000000000008157         db  0xff ; '.'
0000000000008158         db  0xa4 ; '.'
0000000000008159         db  0xc9 ; '.'
000000000000815a         db  0xff ; '.'
000000000000815b         db  0xff ; '.'
000000000000815c         db  0x94 ; '.'
000000000000815d         db  0xc9 ; '.'
000000000000815e         db  0xff ; '.'
000000000000815f         db  0xff ; '.'
0000000000008160         db  0x84 ; '.'
0000000000008161         db  0xc9 ; '.'
0000000000008162         db  0xff ; '.'
0000000000008163         db  0xff ; '.'
0000000000008164         db  0xcc ; '.'
0000000000008165         db  0xc9 ; '.'
0000000000008166         db  0xff ; '.'
0000000000008167         db  0xff ; '.'
0000000000008168         db  0xcc ; '.'
0000000000008169         db  0xc9 ; '.'
000000000000816a         db  0xff ; '.'
000000000000816b         db  0xff ; '.'
000000000000816c         db  0xcc ; '.'
000000000000816d         db  0xc9 ; '.'
000000000000816e         db  0xff ; '.'
000000000000816f         db  0xff ; '.'
0000000000008170         db  0xcc ; '.'
0000000000008171         db  0xc9 ; '.'
0000000000008172         db  0xff ; '.'
0000000000008173         db  0xff ; '.'
0000000000008174         db  0xcc ; '.'
0000000000008175         db  0xc9 ; '.'
0000000000008176         db  0xff ; '.'
0000000000008177         db  0xff ; '.'
0000000000008178         db  0xcc ; '.'
0000000000008179         db  0xc9 ; '.'
000000000000817a         db  0xff ; '.'
000000000000817b         db  0xff ; '.'
000000000000817c         db  0xcc ; '.'
000000000000817d         db  0xc9 ; '.'
000000000000817e         db  0xff ; '.'
000000000000817f         db  0xff ; '.'
0000000000008180         db  0xcc ; '.'
0000000000008181         db  0xc9 ; '.'
0000000000008182         db  0xff ; '.'
0000000000008183         db  0xff ; '.'
0000000000008184         db  0xcc ; '.'
0000000000008185         db  0xc9 ; '.'
0000000000008186         db  0xff ; '.'
0000000000008187         db  0xff ; '.'
0000000000008188         db  0xcc ; '.'
0000000000008189         db  0xc9 ; '.'
000000000000818a         db  0xff ; '.'
000000000000818b         db  0xff ; '.'
000000000000818c         db  0xcc ; '.'
000000000000818d         db  0xc9 ; '.'
000000000000818e         db  0xff ; '.'
000000000000818f         db  0xff ; '.'
0000000000008190         db  0xcc ; '.'
0000000000008191         db  0xc9 ; '.'
0000000000008192         db  0xff ; '.'
0000000000008193         db  0xff ; '.'
0000000000008194         db  0xcc ; '.'
0000000000008195         db  0xc9 ; '.'
0000000000008196         db  0xff ; '.'
0000000000008197         db  0xff ; '.'
0000000000008198         db  0xcc ; '.'
0000000000008199         db  0xc9 ; '.'
000000000000819a         db  0xff ; '.'
000000000000819b         db  0xff ; '.'
000000000000819c         db  0xcc ; '.'
000000000000819d         db  0xc9 ; '.'
000000000000819e         db  0xff ; '.'
000000000000819f         db  0xff ; '.'
00000000000081a0         db  0xcc ; '.'
00000000000081a1         db  0xc9 ; '.'
00000000000081a2         db  0xff ; '.'
00000000000081a3         db  0xff ; '.'
00000000000081a4         db  0xcc ; '.'
00000000000081a5         db  0xc9 ; '.'
00000000000081a6         db  0xff ; '.'
00000000000081a7         db  0xff ; '.'
00000000000081a8         db  0xcc ; '.'
00000000000081a9         db  0xc9 ; '.'
00000000000081aa         db  0xff ; '.'
00000000000081ab         db  0xff ; '.'
00000000000081ac         db  0x74 ; 't'
00000000000081ad         db  0xc9 ; '.'
00000000000081ae         db  0xff ; '.'
00000000000081af         db  0xff ; '.'
00000000000081b0         db  0x64 ; 'd'
00000000000081b1         db  0xc9 ; '.'
00000000000081b2         db  0xff ; '.'
00000000000081b3         db  0xff ; '.'
00000000000081b4         db  0x64 ; 'd'
00000000000081b5         db  0xc9 ; '.'
00000000000081b6         db  0xff ; '.'
00000000000081b7         db  0xff ; '.'
00000000000081b8         db  0x34 ; '4'
00000000000081b9         db  0xc9 ; '.'
00000000000081ba         db  0xff ; '.'
00000000000081bb         db  0xff ; '.'
00000000000081bc         db  0x64 ; 'd'
00000000000081bd         db  0xc9 ; '.'
00000000000081be         db  0xff ; '.'
00000000000081bf         db  0xff ; '.'
00000000000081c0         db  0x0c ; '.'
00000000000081c1         db  0xc9 ; '.'
00000000000081c2         db  0xff ; '.'
00000000000081c3         db  0xff ; '.'
00000000000081c4         db  0x64 ; 'd'
00000000000081c5         db  0xc9 ; '.'
00000000000081c6         db  0xff ; '.'
00000000000081c7         db  0xff ; '.'
00000000000081c8         db  0xc7 ; '.'
00000000000081c9         db  0xc7 ; '.'
00000000000081ca         db  0xff ; '.'
00000000000081cb         db  0xff ; '.'
00000000000081cc         db  0x64 ; 'd'
00000000000081cd         db  0xc9 ; '.'
00000000000081ce         db  0xff ; '.'
00000000000081cf         db  0xff ; '.'
00000000000081d0         db  0x64 ; 'd'
00000000000081d1         db  0xc9 ; '.'
00000000000081d2         db  0xff ; '.'
00000000000081d3         db  0xff ; '.'
00000000000081d4         db  0x64 ; 'd'
00000000000081d5         db  0xc9 ; '.'
00000000000081d6         db  0xff ; '.'
00000000000081d7         db  0xff ; '.'
00000000000081d8         db  0x0c ; '.'
00000000000081d9         db  0xc9 ; '.'
00000000000081da         db  0xff ; '.'
00000000000081db         db  0xff ; '.'
00000000000081dc         db  0x0c ; '.'
00000000000081dd         db  0xc9 ; '.'
00000000000081de         db  0xff ; '.'
00000000000081df         db  0xff ; '.'
00000000000081e0         db  0x0c ; '.'
00000000000081e1         db  0xc9 ; '.'
00000000000081e2         db  0xff ; '.'
00000000000081e3         db  0xff ; '.'
00000000000081e4         db  0x0c ; '.'
00000000000081e5         db  0xc9 ; '.'
00000000000081e6         db  0xff ; '.'
00000000000081e7         db  0xff ; '.'
00000000000081e8         db  0x0c ; '.'
00000000000081e9         db  0xc9 ; '.'
00000000000081ea         db  0xff ; '.'
00000000000081eb         db  0xff ; '.'
00000000000081ec         db  0x0c ; '.'
00000000000081ed         db  0xc9 ; '.'
00000000000081ee         db  0xff ; '.'
00000000000081ef         db  0xff ; '.'
00000000000081f0         db  0x0c ; '.'
00000000000081f1         db  0xc9 ; '.'
00000000000081f2         db  0xff ; '.'
00000000000081f3         db  0xff ; '.'
00000000000081f4         db  0x0c ; '.'
00000000000081f5         db  0xc9 ; '.'
00000000000081f6         db  0xff ; '.'
00000000000081f7         db  0xff ; '.'
00000000000081f8         db  0x0c ; '.'
00000000000081f9         db  0xc9 ; '.'
00000000000081fa         db  0xff ; '.'
00000000000081fb         db  0xff ; '.'
00000000000081fc         db  0x0c ; '.'
00000000000081fd         db  0xc9 ; '.'
00000000000081fe         db  0xff ; '.'
00000000000081ff         db  0xff ; '.'
0000000000008200         db  0x0c ; '.'
0000000000008201         db  0xc9 ; '.'
0000000000008202         db  0xff ; '.'
0000000000008203         db  0xff ; '.'
0000000000008204         db  0x0c ; '.'
0000000000008205         db  0xc9 ; '.'
0000000000008206         db  0xff ; '.'
0000000000008207         db  0xff ; '.'
0000000000008208         db  0x0c ; '.'
0000000000008209         db  0xc9 ; '.'
000000000000820a         db  0xff ; '.'
000000000000820b         db  0xff ; '.'
000000000000820c         db  0x0c ; '.'
000000000000820d         db  0xc9 ; '.'
000000000000820e         db  0xff ; '.'
000000000000820f         db  0xff ; '.'
0000000000008210         db  0x0c ; '.'
0000000000008211         db  0xc9 ; '.'
0000000000008212         db  0xff ; '.'
0000000000008213         db  0xff ; '.'
0000000000008214         db  0x0c ; '.'
0000000000008215         db  0xc9 ; '.'
0000000000008216         db  0xff ; '.'
0000000000008217         db  0xff ; '.'
0000000000008218         db  0x64 ; 'd'
0000000000008219         db  0xc9 ; '.'
000000000000821a         db  0xff ; '.'
000000000000821b         db  0xff ; '.'
000000000000821c         db  0x64 ; 'd'
000000000000821d         db  0xc9 ; '.'
000000000000821e         db  0xff ; '.'
000000000000821f         db  0xff ; '.'
0000000000008220         db  0x64 ; 'd'
0000000000008221         db  0xc9 ; '.'
0000000000008222         db  0xff ; '.'
0000000000008223         db  0xff ; '.'
0000000000008224         db  0x64 ; 'd'
0000000000008225         db  0xc9 ; '.'
0000000000008226         db  0xff ; '.'
0000000000008227         db  0xff ; '.'
0000000000008228         db  0x97 ; '.'
0000000000008229         db  0xc7 ; '.'
000000000000822a         db  0xff ; '.'
000000000000822b         db  0xff ; '.'
000000000000822c         db  0xcc ; '.'
000000000000822d         db  0xc9 ; '.'
000000000000822e         db  0xff ; '.'
000000000000822f         db  0xff ; '.'
0000000000008230         db  0x0c ; '.'
0000000000008231         db  0xc9 ; '.'
0000000000008232         db  0xff ; '.'
0000000000008233         db  0xff ; '.'
0000000000008234         db  0x0c ; '.'
0000000000008235         db  0xc9 ; '.'
0000000000008236         db  0xff ; '.'
0000000000008237         db  0xff ; '.'
0000000000008238         db  0x0c ; '.'
0000000000008239         db  0xc9 ; '.'
000000000000823a         db  0xff ; '.'
000000000000823b         db  0xff ; '.'
000000000000823c         db  0x0c ; '.'
000000000000823d         db  0xc9 ; '.'
000000000000823e         db  0xff ; '.'
000000000000823f         db  0xff ; '.'
0000000000008240         db  0x0c ; '.'
0000000000008241         db  0xc9 ; '.'
0000000000008242         db  0xff ; '.'
0000000000008243         db  0xff ; '.'
0000000000008244         db  0x0c ; '.'
0000000000008245         db  0xc9 ; '.'
0000000000008246         db  0xff ; '.'
0000000000008247         db  0xff ; '.'
0000000000008248         db  0x0c ; '.'
0000000000008249         db  0xc9 ; '.'
000000000000824a         db  0xff ; '.'
000000000000824b         db  0xff ; '.'
000000000000824c         db  0x0c ; '.'
000000000000824d         db  0xc9 ; '.'
000000000000824e         db  0xff ; '.'
000000000000824f         db  0xff ; '.'
0000000000008250         db  0x0c ; '.'
0000000000008251         db  0xc9 ; '.'
0000000000008252         db  0xff ; '.'
0000000000008253         db  0xff ; '.'
0000000000008254         db  0x0c ; '.'
0000000000008255         db  0xc9 ; '.'
0000000000008256         db  0xff ; '.'
0000000000008257         db  0xff ; '.'
0000000000008258         db  0x0c ; '.'
0000000000008259         db  0xc9 ; '.'
000000000000825a         db  0xff ; '.'
000000000000825b         db  0xff ; '.'
000000000000825c         db  0x0c ; '.'
000000000000825d         db  0xc9 ; '.'
000000000000825e         db  0xff ; '.'
000000000000825f         db  0xff ; '.'
0000000000008260         db  0x0c ; '.'
0000000000008261         db  0xc9 ; '.'
0000000000008262         db  0xff ; '.'
0000000000008263         db  0xff ; '.'
0000000000008264         db  0x0c ; '.'
0000000000008265         db  0xc9 ; '.'
0000000000008266         db  0xff ; '.'
0000000000008267         db  0xff ; '.'
0000000000008268         db  0x0c ; '.'
0000000000008269         db  0xc9 ; '.'
000000000000826a         db  0xff ; '.'
000000000000826b         db  0xff ; '.'
000000000000826c         db  0x0c ; '.'
000000000000826d         db  0xc9 ; '.'
000000000000826e         db  0xff ; '.'
000000000000826f         db  0xff ; '.'
0000000000008270         db  0x0c ; '.'
0000000000008271         db  0xc9 ; '.'
0000000000008272         db  0xff ; '.'
0000000000008273         db  0xff ; '.'
0000000000008274         db  0x0c ; '.'
0000000000008275         db  0xc9 ; '.'
0000000000008276         db  0xff ; '.'
0000000000008277         db  0xff ; '.'
0000000000008278         db  0x0c ; '.'
0000000000008279         db  0xc9 ; '.'
000000000000827a         db  0xff ; '.'
000000000000827b         db  0xff ; '.'
000000000000827c         db  0x0c ; '.'
000000000000827d         db  0xc9 ; '.'
000000000000827e         db  0xff ; '.'
000000000000827f         db  0xff ; '.'
0000000000008280         db  0x0c ; '.'
0000000000008281         db  0xc9 ; '.'
0000000000008282         db  0xff ; '.'
0000000000008283         db  0xff ; '.'
0000000000008284         db  0x0c ; '.'
0000000000008285         db  0xc9 ; '.'
0000000000008286         db  0xff ; '.'
0000000000008287         db  0xff ; '.'
0000000000008288         db  0x0c ; '.'
0000000000008289         db  0xc9 ; '.'
000000000000828a         db  0xff ; '.'
000000000000828b         db  0xff ; '.'
000000000000828c         db  0x0c ; '.'
000000000000828d         db  0xc9 ; '.'
000000000000828e         db  0xff ; '.'
000000000000828f         db  0xff ; '.'
0000000000008290         db  0x0c ; '.'
0000000000008291         db  0xc9 ; '.'
0000000000008292         db  0xff ; '.'
0000000000008293         db  0xff ; '.'
0000000000008294         db  0x0c ; '.'
0000000000008295         db  0xc9 ; '.'
0000000000008296         db  0xff ; '.'
0000000000008297         db  0xff ; '.'
0000000000008298         db  0x64 ; 'd'
0000000000008299         db  0xc9 ; '.'
000000000000829a         db  0xff ; '.'
000000000000829b         db  0xff ; '.'
000000000000829c         db  0x3c ; '<'
000000000000829d         db  0xc8 ; '.'
000000000000829e         db  0xff ; '.'
000000000000829f         db  0xff ; '.'
00000000000082a0         db  0x0c ; '.'
00000000000082a1         db  0xc9 ; '.'
00000000000082a2         db  0xff ; '.'
00000000000082a3         db  0xff ; '.'
00000000000082a4         db  0x64 ; 'd'
00000000000082a5         db  0xc9 ; '.'
00000000000082a6         db  0xff ; '.'
00000000000082a7         db  0xff ; '.'
00000000000082a8         db  0x0c ; '.'
00000000000082a9         db  0xc9 ; '.'
00000000000082aa         db  0xff ; '.'
00000000000082ab         db  0xff ; '.'
00000000000082ac         db  0x64 ; 'd'
00000000000082ad         db  0xc9 ; '.'
00000000000082ae         db  0xff ; '.'
00000000000082af         db  0xff ; '.'
00000000000082b0         db  0x0c ; '.'
00000000000082b1         db  0xc9 ; '.'
00000000000082b2         db  0xff ; '.'
00000000000082b3         db  0xff ; '.'
00000000000082b4         db  0x0c ; '.'
00000000000082b5         db  0xc9 ; '.'
00000000000082b6         db  0xff ; '.'
00000000000082b7         db  0xff ; '.'
00000000000082b8         db  0x0c ; '.'
00000000000082b9         db  0xc9 ; '.'
00000000000082ba         db  0xff ; '.'
00000000000082bb         db  0xff ; '.'
00000000000082bc         db  0x0c ; '.'
00000000000082bd         db  0xc9 ; '.'
00000000000082be         db  0xff ; '.'
00000000000082bf         db  0xff ; '.'
00000000000082c0         db  0x0c ; '.'
00000000000082c1         db  0xc9 ; '.'
00000000000082c2         db  0xff ; '.'
00000000000082c3         db  0xff ; '.'
00000000000082c4         db  0x0c ; '.'
00000000000082c5         db  0xc9 ; '.'
00000000000082c6         db  0xff ; '.'
00000000000082c7         db  0xff ; '.'
00000000000082c8         db  0x0c ; '.'
00000000000082c9         db  0xc9 ; '.'
00000000000082ca         db  0xff ; '.'
00000000000082cb         db  0xff ; '.'
00000000000082cc         db  0x0c ; '.'
00000000000082cd         db  0xc9 ; '.'
00000000000082ce         db  0xff ; '.'
00000000000082cf         db  0xff ; '.'
00000000000082d0         db  0x0c ; '.'
00000000000082d1         db  0xc9 ; '.'
00000000000082d2         db  0xff ; '.'
00000000000082d3         db  0xff ; '.'
00000000000082d4         db  0x0c ; '.'
00000000000082d5         db  0xc9 ; '.'
00000000000082d6         db  0xff ; '.'
00000000000082d7         db  0xff ; '.'
00000000000082d8         db  0x0c ; '.'
00000000000082d9         db  0xc9 ; '.'
00000000000082da         db  0xff ; '.'
00000000000082db         db  0xff ; '.'
00000000000082dc         db  0x0c ; '.'
00000000000082dd         db  0xc9 ; '.'
00000000000082de         db  0xff ; '.'
00000000000082df         db  0xff ; '.'
00000000000082e0         db  0x0c ; '.'
00000000000082e1         db  0xc9 ; '.'
00000000000082e2         db  0xff ; '.'
00000000000082e3         db  0xff ; '.'
00000000000082e4         db  0x0c ; '.'
00000000000082e5         db  0xc9 ; '.'
00000000000082e6         db  0xff ; '.'
00000000000082e7         db  0xff ; '.'
00000000000082e8         db  0x0c ; '.'
00000000000082e9         db  0xc9 ; '.'
00000000000082ea         db  0xff ; '.'
00000000000082eb         db  0xff ; '.'
00000000000082ec         db  0x0c ; '.'
00000000000082ed         db  0xc9 ; '.'
00000000000082ee         db  0xff ; '.'
00000000000082ef         db  0xff ; '.'
00000000000082f0         db  0x0c ; '.'
00000000000082f1         db  0xc9 ; '.'
00000000000082f2         db  0xff ; '.'
00000000000082f3         db  0xff ; '.'
00000000000082f4         db  0x0c ; '.'
00000000000082f5         db  0xc9 ; '.'
00000000000082f6         db  0xff ; '.'
00000000000082f7         db  0xff ; '.'
00000000000082f8         db  0x0c ; '.'
00000000000082f9         db  0xc9 ; '.'
00000000000082fa         db  0xff ; '.'
00000000000082fb         db  0xff ; '.'
00000000000082fc         db  0x0c ; '.'
00000000000082fd         db  0xc9 ; '.'
00000000000082fe         db  0xff ; '.'
00000000000082ff         db  0xff ; '.'
0000000000008300         db  0x0c ; '.'
0000000000008301         db  0xc9 ; '.'
0000000000008302         db  0xff ; '.'
0000000000008303         db  0xff ; '.'
0000000000008304         db  0x0c ; '.'
0000000000008305         db  0xc9 ; '.'
0000000000008306         db  0xff ; '.'
0000000000008307         db  0xff ; '.'
0000000000008308         db  0x0c ; '.'
0000000000008309         db  0xc9 ; '.'
000000000000830a         db  0xff ; '.'
000000000000830b         db  0xff ; '.'
000000000000830c         db  0x0c ; '.'
000000000000830d         db  0xc9 ; '.'
000000000000830e         db  0xff ; '.'
000000000000830f         db  0xff ; '.'
0000000000008310         db  0x0c ; '.'
0000000000008311         db  0xc9 ; '.'
0000000000008312         db  0xff ; '.'
0000000000008313         db  0xff ; '.'
0000000000008314         db  0x0c ; '.'
0000000000008315         db  0xc9 ; '.'
0000000000008316         db  0xff ; '.'
0000000000008317         db  0xff ; '.'
0000000000008318         db  0xc7 ; '.'
0000000000008319         db  0xc6 ; '.'
000000000000831a         db  0xff ; '.'
000000000000831b         db  0xff ; '.'
000000000000831c         db  0x64 ; 'd'
000000000000831d         db  0xc9 ; '.'
000000000000831e         db  0xff ; '.'
000000000000831f         db  0xff ; '.'
0000000000008320         db  0xc7 ; '.'
0000000000008321         db  0xc6 ; '.'
0000000000008322         db  0xff ; '.'
0000000000008323         db  0xff ; '.'
0000000000008324         db  0x34 ; '4'
0000000000008325         db  0xc9 ; '.'
0000000000008326         db  0xff ; '.'
0000000000008327         db  0xff ; '.'
0000000000008328         db  0xb8 ; '.'                                         ; DATA XREF=sub_4ae0+137
0000000000008329         db  0xc8 ; '.'
000000000000832a         db  0xff ; '.'
000000000000832b         db  0xff ; '.'
000000000000832c         db  0xc8 ; '.'
000000000000832d         db  0xc7 ; '.'
000000000000832e         db  0xff ; '.'
000000000000832f         db  0xff ; '.'
0000000000008330         db  0xc8 ; '.'
0000000000008331         db  0xc7 ; '.'
0000000000008332         db  0xff ; '.'
0000000000008333         db  0xff ; '.'
0000000000008334         db  0xc8 ; '.'
0000000000008335         db  0xc7 ; '.'
0000000000008336         db  0xff ; '.'
0000000000008337         db  0xff ; '.'
0000000000008338         db  0xc8 ; '.'
0000000000008339         db  0xc7 ; '.'
000000000000833a         db  0xff ; '.'
000000000000833b         db  0xff ; '.'
000000000000833c         db  0xc8 ; '.'
000000000000833d         db  0xc7 ; '.'
000000000000833e         db  0xff ; '.'
000000000000833f         db  0xff ; '.'
0000000000008340         db  0xc8 ; '.'
0000000000008341         db  0xc7 ; '.'
0000000000008342         db  0xff ; '.'
0000000000008343         db  0xff ; '.'
0000000000008344         db  0xa8 ; '.'
0000000000008345         db  0xc8 ; '.'
0000000000008346         db  0xff ; '.'
0000000000008347         db  0xff ; '.'
0000000000008348         db  0xf8 ; '.'
0000000000008349         db  0xc9 ; '.'
000000000000834a         db  0xff ; '.'
000000000000834b         db  0xff ; '.'
000000000000834c         db  0xe0 ; '.'
000000000000834d         db  0xc9 ; '.'
000000000000834e         db  0xff ; '.'
000000000000834f         db  0xff ; '.'
0000000000008350         db  0x90 ; '.'
0000000000008351         db  0xc8 ; '.'
0000000000008352         db  0xff ; '.'
0000000000008353         db  0xff ; '.'
0000000000008354         db  0xd0 ; '.'
0000000000008355         db  0xc9 ; '.'
0000000000008356         db  0xff ; '.'
0000000000008357         db  0xff ; '.'
0000000000008358         db  0x78 ; 'x'
0000000000008359         db  0xc8 ; '.'
000000000000835a         db  0xff ; '.'
000000000000835b         db  0xff ; '.'
000000000000835c         db  0xb8 ; '.'
000000000000835d         db  0xc9 ; '.'
000000000000835e         db  0xff ; '.'
000000000000835f         db  0xff ; '.'
0000000000008360         db  0xc8 ; '.'
0000000000008361         db  0xc7 ; '.'
0000000000008362         db  0xff ; '.'
0000000000008363         db  0xff ; '.'
0000000000008364         db  0xc8 ; '.'
0000000000008365         db  0xc7 ; '.'
0000000000008366         db  0xff ; '.'
0000000000008367         db  0xff ; '.'
0000000000008368         db  0xc8 ; '.'
0000000000008369         db  0xc7 ; '.'
000000000000836a         db  0xff ; '.'
000000000000836b         db  0xff ; '.'
000000000000836c         db  0xc8 ; '.'
000000000000836d         db  0xc7 ; '.'
000000000000836e         db  0xff ; '.'
000000000000836f         db  0xff ; '.'
0000000000008370         db  0xc8 ; '.'
0000000000008371         db  0xc7 ; '.'
0000000000008372         db  0xff ; '.'
0000000000008373         db  0xff ; '.'
0000000000008374         db  0xc8 ; '.'
0000000000008375         db  0xc7 ; '.'
0000000000008376         db  0xff ; '.'
0000000000008377         db  0xff ; '.'
0000000000008378         db  0xc8 ; '.'
0000000000008379         db  0xc7 ; '.'
000000000000837a         db  0xff ; '.'
000000000000837b         db  0xff ; '.'
000000000000837c         db  0xc8 ; '.'
000000000000837d         db  0xc7 ; '.'
000000000000837e         db  0xff ; '.'
000000000000837f         db  0xff ; '.'
0000000000008380         db  0xc8 ; '.'
0000000000008381         db  0xc7 ; '.'
0000000000008382         db  0xff ; '.'
0000000000008383         db  0xff ; '.'
0000000000008384         db  0xc8 ; '.'
0000000000008385         db  0xc7 ; '.'
0000000000008386         db  0xff ; '.'
0000000000008387         db  0xff ; '.'
0000000000008388         db  0xc8 ; '.'
0000000000008389         db  0xc7 ; '.'
000000000000838a         db  0xff ; '.'
000000000000838b         db  0xff ; '.'
000000000000838c         db  0xc8 ; '.'
000000000000838d         db  0xc7 ; '.'
000000000000838e         db  0xff ; '.'
000000000000838f         db  0xff ; '.'
0000000000008390         db  0xc8 ; '.'
0000000000008391         db  0xc7 ; '.'
0000000000008392         db  0xff ; '.'
0000000000008393         db  0xff ; '.'
0000000000008394         db  0xc8 ; '.'
0000000000008395         db  0xc7 ; '.'
0000000000008396         db  0xff ; '.'
0000000000008397         db  0xff ; '.'
0000000000008398         db  0xc8 ; '.'
0000000000008399         db  0xc7 ; '.'
000000000000839a         db  0xff ; '.'
000000000000839b         db  0xff ; '.'
000000000000839c         db  0xc8 ; '.'
000000000000839d         db  0xc7 ; '.'
000000000000839e         db  0xff ; '.'
000000000000839f         db  0xff ; '.'
00000000000083a0         db  0xc8 ; '.'
00000000000083a1         db  0xc7 ; '.'
00000000000083a2         db  0xff ; '.'
00000000000083a3         db  0xff ; '.'
00000000000083a4         db  0xc8 ; '.'
00000000000083a5         db  0xc7 ; '.'
00000000000083a6         db  0xff ; '.'
00000000000083a7         db  0xff ; '.'
00000000000083a8         db  0xa0 ; '.'
00000000000083a9         db  0xc9 ; '.'
00000000000083aa         db  0xff ; '.'
00000000000083ab         db  0xff ; '.'
00000000000083ac         db  0x88 ; '.'
00000000000083ad         db  0xc9 ; '.'
00000000000083ae         db  0xff ; '.'
00000000000083af         db  0xff ; '.'
00000000000083b0         db  0x88 ; '.'
00000000000083b1         db  0xc9 ; '.'
00000000000083b2         db  0xff ; '.'
00000000000083b3         db  0xff ; '.'
00000000000083b4         db  0x70 ; 'p'
00000000000083b5         db  0xc9 ; '.'
00000000000083b6         db  0xff ; '.'
00000000000083b7         db  0xff ; '.'
00000000000083b8         db  0x88 ; '.'
00000000000083b9         db  0xc9 ; '.'
00000000000083ba         db  0xff ; '.'
00000000000083bb         db  0xff ; '.'
00000000000083bc         db  0x58 ; 'X'
00000000000083bd         db  0xc9 ; '.'
00000000000083be         db  0xff ; '.'
00000000000083bf         db  0xff ; '.'
00000000000083c0         db  0x88 ; '.'
00000000000083c1         db  0xc9 ; '.'
00000000000083c2         db  0xff ; '.'
00000000000083c3         db  0xff ; '.'
00000000000083c4         db  0xc8 ; '.'
00000000000083c5         db  0xc5 ; '.'
00000000000083c6         db  0xff ; '.'
00000000000083c7         db  0xff ; '.'
00000000000083c8         db  0x88 ; '.'
00000000000083c9         db  0xc9 ; '.'
00000000000083ca         db  0xff ; '.'
00000000000083cb         db  0xff ; '.'
00000000000083cc         db  0x88 ; '.'
00000000000083cd         db  0xc9 ; '.'
00000000000083ce         db  0xff ; '.'
00000000000083cf         db  0xff ; '.'
00000000000083d0         db  0x88 ; '.'
00000000000083d1         db  0xc9 ; '.'
00000000000083d2         db  0xff ; '.'
00000000000083d3         db  0xff ; '.'
00000000000083d4         db  0x58 ; 'X'
00000000000083d5         db  0xc9 ; '.'
00000000000083d6         db  0xff ; '.'
00000000000083d7         db  0xff ; '.'
00000000000083d8         db  0x58 ; 'X'
00000000000083d9         db  0xc9 ; '.'
00000000000083da         db  0xff ; '.'
00000000000083db         db  0xff ; '.'
00000000000083dc         db  0x58 ; 'X'
00000000000083dd         db  0xc9 ; '.'
00000000000083de         db  0xff ; '.'
00000000000083df         db  0xff ; '.'
00000000000083e0         db  0x58 ; 'X'
00000000000083e1         db  0xc9 ; '.'
00000000000083e2         db  0xff ; '.'
00000000000083e3         db  0xff ; '.'
00000000000083e4         db  0x58 ; 'X'
00000000000083e5         db  0xc9 ; '.'
00000000000083e6         db  0xff ; '.'
00000000000083e7         db  0xff ; '.'
00000000000083e8         db  0x58 ; 'X'
00000000000083e9         db  0xc9 ; '.'
00000000000083ea         db  0xff ; '.'
00000000000083eb         db  0xff ; '.'
00000000000083ec         db  0x58 ; 'X'
00000000000083ed         db  0xc9 ; '.'
00000000000083ee         db  0xff ; '.'
00000000000083ef         db  0xff ; '.'
00000000000083f0         db  0x58 ; 'X'
00000000000083f1         db  0xc9 ; '.'
00000000000083f2         db  0xff ; '.'
00000000000083f3         db  0xff ; '.'
00000000000083f4         db  0x58 ; 'X'
00000000000083f5         db  0xc9 ; '.'
00000000000083f6         db  0xff ; '.'
00000000000083f7         db  0xff ; '.'
00000000000083f8         db  0x58 ; 'X'
00000000000083f9         db  0xc9 ; '.'
00000000000083fa         db  0xff ; '.'
00000000000083fb         db  0xff ; '.'
00000000000083fc         db  0x58 ; 'X'
00000000000083fd         db  0xc9 ; '.'
00000000000083fe         db  0xff ; '.'
00000000000083ff         db  0xff ; '.'
0000000000008400         db  0x58 ; 'X'
0000000000008401         db  0xc9 ; '.'
0000000000008402         db  0xff ; '.'
0000000000008403         db  0xff ; '.'
0000000000008404         db  0x58 ; 'X'
0000000000008405         db  0xc9 ; '.'
0000000000008406         db  0xff ; '.'
0000000000008407         db  0xff ; '.'
0000000000008408         db  0x58 ; 'X'
0000000000008409         db  0xc9 ; '.'
000000000000840a         db  0xff ; '.'
000000000000840b         db  0xff ; '.'
000000000000840c         db  0x58 ; 'X'
000000000000840d         db  0xc9 ; '.'
000000000000840e         db  0xff ; '.'
000000000000840f         db  0xff ; '.'
0000000000008410         db  0x58 ; 'X'
0000000000008411         db  0xc9 ; '.'
0000000000008412         db  0xff ; '.'
0000000000008413         db  0xff ; '.'
0000000000008414         db  0x88 ; '.'
0000000000008415         db  0xc9 ; '.'
0000000000008416         db  0xff ; '.'
0000000000008417         db  0xff ; '.'
0000000000008418         db  0x88 ; '.'
0000000000008419         db  0xc9 ; '.'
000000000000841a         db  0xff ; '.'
000000000000841b         db  0xff ; '.'
000000000000841c         db  0x88 ; '.'
000000000000841d         db  0xc9 ; '.'
000000000000841e         db  0xff ; '.'
000000000000841f         db  0xff ; '.'
0000000000008420         db  0x88 ; '.'
0000000000008421         db  0xc9 ; '.'
0000000000008422         db  0xff ; '.'
0000000000008423         db  0xff ; '.'
0000000000008424         db  0x98 ; '.'
0000000000008425         db  0xc5 ; '.'
0000000000008426         db  0xff ; '.'
0000000000008427         db  0xff ; '.'
0000000000008428         db  0xc8 ; '.'
0000000000008429         db  0xc7 ; '.'
000000000000842a         db  0xff ; '.'
000000000000842b         db  0xff ; '.'
000000000000842c         db  0x58 ; 'X'
000000000000842d         db  0xc9 ; '.'
000000000000842e         db  0xff ; '.'
000000000000842f         db  0xff ; '.'
0000000000008430         db  0x58 ; 'X'
0000000000008431         db  0xc9 ; '.'
0000000000008432         db  0xff ; '.'
0000000000008433         db  0xff ; '.'
0000000000008434         db  0x58 ; 'X'
0000000000008435         db  0xc9 ; '.'
0000000000008436         db  0xff ; '.'
0000000000008437         db  0xff ; '.'
0000000000008438         db  0x58 ; 'X'
0000000000008439         db  0xc9 ; '.'
000000000000843a         db  0xff ; '.'
000000000000843b         db  0xff ; '.'
000000000000843c         db  0x58 ; 'X'
000000000000843d         db  0xc9 ; '.'
000000000000843e         db  0xff ; '.'
000000000000843f         db  0xff ; '.'
0000000000008440         db  0x58 ; 'X'
0000000000008441         db  0xc9 ; '.'
0000000000008442         db  0xff ; '.'
0000000000008443         db  0xff ; '.'
0000000000008444         db  0x58 ; 'X'
0000000000008445         db  0xc9 ; '.'
0000000000008446         db  0xff ; '.'
0000000000008447         db  0xff ; '.'
0000000000008448         db  0x58 ; 'X'
0000000000008449         db  0xc9 ; '.'
000000000000844a         db  0xff ; '.'
000000000000844b         db  0xff ; '.'
000000000000844c         db  0x58 ; 'X'
000000000000844d         db  0xc9 ; '.'
000000000000844e         db  0xff ; '.'
000000000000844f         db  0xff ; '.'
0000000000008450         db  0x58 ; 'X'
0000000000008451         db  0xc9 ; '.'
0000000000008452         db  0xff ; '.'
0000000000008453         db  0xff ; '.'
0000000000008454         db  0x58 ; 'X'
0000000000008455         db  0xc9 ; '.'
0000000000008456         db  0xff ; '.'
0000000000008457         db  0xff ; '.'
0000000000008458         db  0x58 ; 'X'
0000000000008459         db  0xc9 ; '.'
000000000000845a         db  0xff ; '.'
000000000000845b         db  0xff ; '.'
000000000000845c         db  0x58 ; 'X'
000000000000845d         db  0xc9 ; '.'
000000000000845e         db  0xff ; '.'
000000000000845f         db  0xff ; '.'
0000000000008460         db  0x58 ; 'X'
0000000000008461         db  0xc9 ; '.'
0000000000008462         db  0xff ; '.'
0000000000008463         db  0xff ; '.'
0000000000008464         db  0x58 ; 'X'
0000000000008465         db  0xc9 ; '.'
0000000000008466         db  0xff ; '.'
0000000000008467         db  0xff ; '.'
0000000000008468         db  0x58 ; 'X'
0000000000008469         db  0xc9 ; '.'
000000000000846a         db  0xff ; '.'
000000000000846b         db  0xff ; '.'
000000000000846c         db  0x58 ; 'X'
000000000000846d         db  0xc9 ; '.'
000000000000846e         db  0xff ; '.'
000000000000846f         db  0xff ; '.'
0000000000008470         db  0x58 ; 'X'
0000000000008471         db  0xc9 ; '.'
0000000000008472         db  0xff ; '.'
0000000000008473         db  0xff ; '.'
0000000000008474         db  0x58 ; 'X'
0000000000008475         db  0xc9 ; '.'
0000000000008476         db  0xff ; '.'
0000000000008477         db  0xff ; '.'
0000000000008478         db  0x58 ; 'X'
0000000000008479         db  0xc9 ; '.'
000000000000847a         db  0xff ; '.'
000000000000847b         db  0xff ; '.'
000000000000847c         db  0x58 ; 'X'
000000000000847d         db  0xc9 ; '.'
000000000000847e         db  0xff ; '.'
000000000000847f         db  0xff ; '.'
0000000000008480         db  0x58 ; 'X'
0000000000008481         db  0xc9 ; '.'
0000000000008482         db  0xff ; '.'
0000000000008483         db  0xff ; '.'
0000000000008484         db  0x58 ; 'X'
0000000000008485         db  0xc9 ; '.'
0000000000008486         db  0xff ; '.'
0000000000008487         db  0xff ; '.'
0000000000008488         db  0x58 ; 'X'
0000000000008489         db  0xc9 ; '.'
000000000000848a         db  0xff ; '.'
000000000000848b         db  0xff ; '.'
000000000000848c         db  0x58 ; 'X'
000000000000848d         db  0xc9 ; '.'
000000000000848e         db  0xff ; '.'
000000000000848f         db  0xff ; '.'
0000000000008490         db  0x58 ; 'X'
0000000000008491         db  0xc9 ; '.'
0000000000008492         db  0xff ; '.'
0000000000008493         db  0xff ; '.'
0000000000008494         db  0x88 ; '.'
0000000000008495         db  0xc9 ; '.'
0000000000008496         db  0xff ; '.'
0000000000008497         db  0xff ; '.'
0000000000008498         db  0x58 ; 'X'
0000000000008499         db  0xc8 ; '.'
000000000000849a         db  0xff ; '.'
000000000000849b         db  0xff ; '.'
000000000000849c         db  0x58 ; 'X'
000000000000849d         db  0xc9 ; '.'
000000000000849e         db  0xff ; '.'
000000000000849f         db  0xff ; '.'
00000000000084a0         db  0x88 ; '.'
00000000000084a1         db  0xc9 ; '.'
00000000000084a2         db  0xff ; '.'
00000000000084a3         db  0xff ; '.'
00000000000084a4         db  0x58 ; 'X'
00000000000084a5         db  0xc9 ; '.'
00000000000084a6         db  0xff ; '.'
00000000000084a7         db  0xff ; '.'
00000000000084a8         db  0x88 ; '.'
00000000000084a9         db  0xc9 ; '.'
00000000000084aa         db  0xff ; '.'
00000000000084ab         db  0xff ; '.'
00000000000084ac         db  0x58 ; 'X'
00000000000084ad         db  0xc9 ; '.'
00000000000084ae         db  0xff ; '.'
00000000000084af         db  0xff ; '.'
00000000000084b0         db  0x58 ; 'X'
00000000000084b1         db  0xc9 ; '.'
00000000000084b2         db  0xff ; '.'
00000000000084b3         db  0xff ; '.'
00000000000084b4         db  0x58 ; 'X'
00000000000084b5         db  0xc9 ; '.'
00000000000084b6         db  0xff ; '.'
00000000000084b7         db  0xff ; '.'
00000000000084b8         db  0x58 ; 'X'
00000000000084b9         db  0xc9 ; '.'
00000000000084ba         db  0xff ; '.'
00000000000084bb         db  0xff ; '.'
00000000000084bc         db  0x58 ; 'X'
00000000000084bd         db  0xc9 ; '.'
00000000000084be         db  0xff ; '.'
00000000000084bf         db  0xff ; '.'
00000000000084c0         db  0x58 ; 'X'
00000000000084c1         db  0xc9 ; '.'
00000000000084c2         db  0xff ; '.'
00000000000084c3         db  0xff ; '.'
00000000000084c4         db  0x58 ; 'X'
00000000000084c5         db  0xc9 ; '.'
00000000000084c6         db  0xff ; '.'
00000000000084c7         db  0xff ; '.'
00000000000084c8         db  0x58 ; 'X'
00000000000084c9         db  0xc9 ; '.'
00000000000084ca         db  0xff ; '.'
00000000000084cb         db  0xff ; '.'
00000000000084cc         db  0x58 ; 'X'
00000000000084cd         db  0xc9 ; '.'
00000000000084ce         db  0xff ; '.'
00000000000084cf         db  0xff ; '.'
00000000000084d0         db  0x58 ; 'X'
00000000000084d1         db  0xc9 ; '.'
00000000000084d2         db  0xff ; '.'
00000000000084d3         db  0xff ; '.'
00000000000084d4         db  0x58 ; 'X'
00000000000084d5         db  0xc9 ; '.'
00000000000084d6         db  0xff ; '.'
00000000000084d7         db  0xff ; '.'
00000000000084d8         db  0x58 ; 'X'
00000000000084d9         db  0xc9 ; '.'
00000000000084da         db  0xff ; '.'
00000000000084db         db  0xff ; '.'
00000000000084dc         db  0x58 ; 'X'
00000000000084dd         db  0xc9 ; '.'
00000000000084de         db  0xff ; '.'
00000000000084df         db  0xff ; '.'
00000000000084e0         db  0x58 ; 'X'
00000000000084e1         db  0xc9 ; '.'
00000000000084e2         db  0xff ; '.'
00000000000084e3         db  0xff ; '.'
00000000000084e4         db  0x58 ; 'X'
00000000000084e5         db  0xc9 ; '.'
00000000000084e6         db  0xff ; '.'
00000000000084e7         db  0xff ; '.'
00000000000084e8         db  0x58 ; 'X'
00000000000084e9         db  0xc9 ; '.'
00000000000084ea         db  0xff ; '.'
00000000000084eb         db  0xff ; '.'
00000000000084ec         db  0x58 ; 'X'
00000000000084ed         db  0xc9 ; '.'
00000000000084ee         db  0xff ; '.'
00000000000084ef         db  0xff ; '.'
00000000000084f0         db  0x58 ; 'X'
00000000000084f1         db  0xc9 ; '.'
00000000000084f2         db  0xff ; '.'
00000000000084f3         db  0xff ; '.'
00000000000084f4         db  0x58 ; 'X'
00000000000084f5         db  0xc9 ; '.'
00000000000084f6         db  0xff ; '.'
00000000000084f7         db  0xff ; '.'
00000000000084f8         db  0x58 ; 'X'
00000000000084f9         db  0xc9 ; '.'
00000000000084fa         db  0xff ; '.'
00000000000084fb         db  0xff ; '.'
00000000000084fc         db  0x58 ; 'X'
00000000000084fd         db  0xc9 ; '.'
00000000000084fe         db  0xff ; '.'
00000000000084ff         db  0xff ; '.'
0000000000008500         db  0x58 ; 'X'
0000000000008501         db  0xc9 ; '.'
0000000000008502         db  0xff ; '.'
0000000000008503         db  0xff ; '.'
0000000000008504         db  0x58 ; 'X'
0000000000008505         db  0xc9 ; '.'
0000000000008506         db  0xff ; '.'
0000000000008507         db  0xff ; '.'
0000000000008508         db  0x58 ; 'X'
0000000000008509         db  0xc9 ; '.'
000000000000850a         db  0xff ; '.'
000000000000850b         db  0xff ; '.'
000000000000850c         db  0x58 ; 'X'
000000000000850d         db  0xc9 ; '.'
000000000000850e         db  0xff ; '.'
000000000000850f         db  0xff ; '.'
0000000000008510         db  0x58 ; 'X'
0000000000008511         db  0xc9 ; '.'
0000000000008512         db  0xff ; '.'
0000000000008513         db  0xff ; '.'
0000000000008514         db  0xc8 ; '.'
0000000000008515         db  0xc4 ; '.'
0000000000008516         db  0xff ; '.'
0000000000008517         db  0xff ; '.'
0000000000008518         db  0x88 ; '.'
0000000000008519         db  0xc9 ; '.'
000000000000851a         db  0xff ; '.'
000000000000851b         db  0xff ; '.'
000000000000851c         db  0xc8 ; '.'
000000000000851d         db  0xc4 ; '.'
000000000000851e         db  0xff ; '.'
000000000000851f         db  0xff ; '.'
0000000000008520         db  0x70 ; 'p'
0000000000008521         db  0xc9 ; '.'
0000000000008522         db  0xff ; '.'
0000000000008523         db  0xff ; '.'
0000000000008524         db  0x00 ; '.'
0000000000008525         db  0x00 ; '.'
0000000000008526         db  0x00 ; '.'
0000000000008527         db  0x00 ; '.'
0000000000008528         db  0x00 ; '.'
0000000000008529         db  0x00 ; '.'
000000000000852a         db  0x00 ; '.'
000000000000852b         db  0x00 ; '.'
000000000000852c         db  0x00 ; '.'
000000000000852d         db  0x00 ; '.'
000000000000852e         db  0x00 ; '.'
000000000000852f         db  0x00 ; '.'
0000000000008530         db  0x00 ; '.'
0000000000008531         db  0x00 ; '.'
0000000000008532         db  0x00 ; '.'
0000000000008533         db  0x00 ; '.'
0000000000008534         db  0x00 ; '.'
0000000000008535         db  0x00 ; '.'
0000000000008536         db  0x00 ; '.'
0000000000008537         db  0x00 ; '.'
0000000000008538         db  0x00 ; '.'
0000000000008539         db  0x00 ; '.'
000000000000853a         db  0x00 ; '.'
000000000000853b         db  0x00 ; '.'
000000000000853c         db  0x00 ; '.'
000000000000853d         db  0x00 ; '.'
000000000000853e         db  0x00 ; '.'
000000000000853f         db  0x00 ; '.'
                     quoting_style_vals:
0000000000008540         db  0x00 ; '.'
0000000000008541         db  0x00 ; '.'
0000000000008542         db  0x00 ; '.'
0000000000008543         db  0x00 ; '.'
0000000000008544         db  0x01 ; '.'
0000000000008545         db  0x00 ; '.'
0000000000008546         db  0x00 ; '.'
0000000000008547         db  0x00 ; '.'
0000000000008548         db  0x02 ; '.'
0000000000008549         db  0x00 ; '.'
000000000000854a         db  0x00 ; '.'
000000000000854b         db  0x00 ; '.'
000000000000854c         db  0x03 ; '.'
000000000000854d         db  0x00 ; '.'
000000000000854e         db  0x00 ; '.'
000000000000854f         db  0x00 ; '.'
0000000000008550         db  0x04 ; '.'
0000000000008551         db  0x00 ; '.'
0000000000008552         db  0x00 ; '.'
0000000000008553         db  0x00 ; '.'
0000000000008554         db  0x05 ; '.'
0000000000008555         db  0x00 ; '.'
0000000000008556         db  0x00 ; '.'
0000000000008557         db  0x00 ; '.'
0000000000008558         db  0x06 ; '.'
0000000000008559         db  0x00 ; '.'
000000000000855a         db  0x00 ; '.'
000000000000855b         db  0x00 ; '.'
000000000000855c         db  0x07 ; '.'
000000000000855d         db  0x00 ; '.'
000000000000855e         db  0x00 ; '.'
000000000000855f         db  0x00 ; '.'
0000000000008560         db  0x08 ; '.'
0000000000008561         db  0x00 ; '.'
0000000000008562         db  0x00 ; '.'
0000000000008563         db  0x00 ; '.'
0000000000008564         db  0x09 ; '.'
0000000000008565         db  0x00 ; '.'
0000000000008566         db  0x00 ; '.'
0000000000008567         db  0x00 ; '.'
                     aSSSn:
0000000000008568         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
0000000000008574         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
000000000000857b         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
000000000000857c         db  0x43 ; 'C'
000000000000857d         db  0x29 ; ')'
000000000000857e         db  0x00 ; '.'
                     aWrittenBySn:
000000000000857f         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
000000000000858f         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
00000000000085a6         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
00000000000085c2         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
00000000000085d7         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
00000000000085ed         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
0000000000008601         align      8
                     aNlicenseGplv3G:
0000000000008608         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
00000000000086d4         align      8
                     aWrittenBySSSna:
00000000000086d8         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_86f8:        // aWrittenBySSSns
00000000000086f8         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
000000000000871c         align      32
                     aWrittenBySSSns_8720:        // aWrittenBySSSns
0000000000008720         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_8748:        // aWrittenBySSSns
0000000000008748         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
0000000000008774         align      8
                     aWrittenBySSSns_8778:        // aWrittenBySSSns
0000000000008778         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
00000000000087a8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
00000000000087dc         align      32
                     aWrittenBySSSns_87e0:        // aWrittenBySSSns
00000000000087e0         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
000000000000881c         align      32
                     aGeneralHelpUsi:
0000000000008820         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
0000000000008861         align      4
                     switch_table_8864:        // switch_table
0000000000008864         dd         version_etc_arn.loc_62c6-switch_table_8864, version_etc_arn.loc_6358-switch_table_8864, version_etc_arn.loc_6398-switch_table_8864, version_etc_arn.loc_63e0-switch_table_8864 ; switch table used at 0x6244 containing 10 entries, DATA XREF=version_etc_arn+150
0000000000008874         dd         version_etc_arn.loc_6430-switch_table_8864, version_etc_arn.loc_6488-switch_table_8864, version_etc_arn.loc_64b8-switch_table_8864, version_etc_arn.loc_6520-switch_table_8864
0000000000008884         dd         version_etc_arn.loc_6250-switch_table_8864, version_etc_arn.loc_6300-switch_table_8864
000000000000888c         align      32
                     version_etc_copyright:
00000000000088a0         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
00000000000088cf         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
                     aCoreutils831li:
00000000000088e0         db         "../coreutils-8.31/lib/xstrtol.c", 0        ; DATA XREF=xstrtoumax+908
                     a0StrtolbaseStr:
0000000000008900         db         "0 <= strtol_base && strtol_base <= 36", 0  ; DATA XREF=xstrtoumax+915
0000000000008926         align      8
                     switch_table_8928:        // switch_table
0000000000008928         dd         xstrtoumax.loc_6ea6-switch_table_8928, 2 dup (xstrtoumax.loc_6d9c-switch_table_8928), xstrtoumax.loc_6e83-switch_table_8928, xstrtoumax.loc_6d9c-switch_table_8928 ; switch table used at 0x6d56 containing 54 entries, DATA XREF=xstrtoumax+452
000000000000893c         dd         xstrtoumax.loc_6ebc-switch_table_8928, 3 dup (xstrtoumax.loc_6d9c-switch_table_8928), xstrtoumax.loc_6e3f-switch_table_8928, xstrtoumax.loc_6d9c-switch_table_8928
0000000000008954         dd         xstrtoumax.loc_6d58-switch_table_8928, 2 dup (xstrtoumax.loc_6d9c-switch_table_8928), xstrtoumax.loc_6e60-switch_table_8928, 3 dup (xstrtoumax.loc_6d9c-switch_table_8928)
0000000000008970         dd         xstrtoumax.loc_6e1f-switch_table_8928, 4 dup (xstrtoumax.loc_6d9c-switch_table_8928), xstrtoumax.loc_6dfa-switch_table_8928, xstrtoumax.loc_6dd4-switch_table_8928
000000000000898c         dd         7 dup (xstrtoumax.loc_6d9c-switch_table_8928), xstrtoumax.loc_6dbd-switch_table_8928, xstrtoumax.loc_6d80-switch_table_8928, 3 dup (xstrtoumax.loc_6d9c-switch_table_8928)
00000000000089bc         dd         xstrtoumax.loc_6ebc-switch_table_8928, 3 dup (xstrtoumax.loc_6d9c-switch_table_8928), xstrtoumax.loc_6e3f-switch_table_8928, xstrtoumax.loc_6d9c-switch_table_8928
00000000000089d4         dd         xstrtoumax.loc_6d58-switch_table_8928, 6 dup (xstrtoumax.loc_6d9c-switch_table_8928), xstrtoumax.loc_6e1f-switch_table_8928, 2 dup (xstrtoumax.loc_6d9c-switch_table_8928)
00000000000089fc         dd         xstrtoumax.loc_6da7-switch_table_8928
                     __PRETTY_FUNCTION__.4162:
0000000000008a00         db         "xstrtoumax", 0                             ; DATA XREF=xstrtoumax+901
0000000000008a0b         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
0000000000008a0c         db  0x00 ; '.'
                     aPosix:
0000000000008a0d         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aAscii:
0000000000008a13         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
0000000000008a19         db  0x00 ; '.'
0000000000008a1a         db  0x00 ; '.'
0000000000008a1b         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0x8a1c; 0x8de8[ (972 bytes)
        ; File offset : [35356; 36328[ (972 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000008a1c         db  0x01 ; '.'
0000000000008a1d         db  0x1b ; '.'
0000000000008a1e         db  0x03 ; '.'
0000000000008a1f         db  0x3b ; ';'
0000000000008a20         db  0xc8 ; '.'
0000000000008a21         db  0x03 ; '.'
0000000000008a22         db  0x00 ; '.'
0000000000008a23         db  0x00 ; '.'
0000000000008a24         db  0x78 ; 'x'
0000000000008a25         db  0x00 ; '.'
0000000000008a26         db  0x00 ; '.'
0000000000008a27         db  0x00 ; '.'
0000000000008a28         db  0x64 ; 'd'
0000000000008a29         db  0x8b ; '.'
0000000000008a2a         db  0xff ; '.'
0000000000008a2b         db  0xff ; '.'
0000000000008a2c         db  0x14 ; '.'
0000000000008a2d         db  0x04 ; '.'
0000000000008a2e         db  0x00 ; '.'
0000000000008a2f         db  0x00 ; '.'
0000000000008a30         db  0x94 ; '.'
0000000000008a31         db  0x8e ; '.'
0000000000008a32         db  0xff ; '.'
0000000000008a33         db  0xff ; '.'
0000000000008a34         db  0x3c ; '<'
0000000000008a35         db  0x04 ; '.'
0000000000008a36         db  0x00 ; '.'
0000000000008a37         db  0x00 ; '.'
0000000000008a38         db  0xa4 ; '.'
0000000000008a39         db  0x8e ; '.'
0000000000008a3a         db  0xff ; '.'
0000000000008a3b         db  0xff ; '.'
0000000000008a3c         db  0xd0 ; '.'
0000000000008a3d         db  0x07 ; '.'
0000000000008a3e         db  0x00 ; '.'
0000000000008a3f         db  0x00 ; '.'
0000000000008a40         db  0xd4 ; '.'
0000000000008a41         db  0x99 ; '.'
0000000000008a42         db  0xff ; '.'
0000000000008a43         db  0xff ; '.'
0000000000008a44         db  0xe4 ; '.'
0000000000008a45         db  0x03 ; '.'
0000000000008a46         db  0x00 ; '.'
0000000000008a47         db  0x00 ; '.'
0000000000008a48         db  0xe4 ; '.'
0000000000008a49         db  0x9a ; '.'
0000000000008a4a         db  0xff ; '.'
0000000000008a4b         db  0xff ; '.'
0000000000008a4c         db  0x54 ; 'T'
0000000000008a4d         db  0x04 ; '.'
0000000000008a4e         db  0x00 ; '.'
0000000000008a4f         db  0x00 ; '.'
0000000000008a50         db  0x04 ; '.'
0000000000008a51         db  0x9b ; '.'
0000000000008a52         db  0xff ; '.'
0000000000008a53         db  0xff ; '.'
0000000000008a54         db  0x68 ; 'h'
0000000000008a55         db  0x04 ; '.'
0000000000008a56         db  0x00 ; '.'
0000000000008a57         db  0x00 ; '.'
0000000000008a58         db  0x24 ; '$'
0000000000008a59         db  0x9b ; '.'
0000000000008a5a         db  0xff ; '.'
0000000000008a5b         db  0xff ; '.'
0000000000008a5c         db  0x7c ; '|'
0000000000008a5d         db  0x04 ; '.'
0000000000008a5e         db  0x00 ; '.'
0000000000008a5f         db  0x00 ; '.'
0000000000008a60         db  0x44 ; 'D'
0000000000008a61         db  0x9b ; '.'
0000000000008a62         db  0xff ; '.'
0000000000008a63         db  0xff ; '.'
0000000000008a64         db  0x90 ; '.'
0000000000008a65         db  0x04 ; '.'
0000000000008a66         db  0x00 ; '.'
0000000000008a67         db  0x00 ; '.'
0000000000008a68         db  0x64 ; 'd'
0000000000008a69         db  0x9b ; '.'
0000000000008a6a         db  0xff ; '.'
0000000000008a6b         db  0xff ; '.'
0000000000008a6c         db  0xa4 ; '.'
0000000000008a6d         db  0x04 ; '.'
0000000000008a6e         db  0x00 ; '.'
0000000000008a6f         db  0x00 ; '.'
0000000000008a70         db  0x74 ; 't'
0000000000008a71         db  0x9b ; '.'
0000000000008a72         db  0xff ; '.'
0000000000008a73         db  0xff ; '.'
0000000000008a74         db  0xb8 ; '.'
0000000000008a75         db  0x04 ; '.'
0000000000008a76         db  0x00 ; '.'
0000000000008a77         db  0x00 ; '.'
0000000000008a78         db  0xb4 ; '.'
0000000000008a79         db  0x9b ; '.'
0000000000008a7a         db  0xff ; '.'
0000000000008a7b         db  0xff ; '.'
0000000000008a7c         db  0xcc ; '.'
0000000000008a7d         db  0x04 ; '.'
0000000000008a7e         db  0x00 ; '.'
0000000000008a7f         db  0x00 ; '.'
0000000000008a80         db  0xc4 ; '.'
0000000000008a81         db  0x9b ; '.'
0000000000008a82         db  0xff ; '.'
0000000000008a83         db  0xff ; '.'
0000000000008a84         db  0xe0 ; '.'
0000000000008a85         db  0x04 ; '.'
0000000000008a86         db  0x00 ; '.'
0000000000008a87         db  0x00 ; '.'
0000000000008a88         db  0xd4 ; '.'
0000000000008a89         db  0x9b ; '.'
0000000000008a8a         db  0xff ; '.'
0000000000008a8b         db  0xff ; '.'
0000000000008a8c         db  0xf4 ; '.'
0000000000008a8d         db  0x04 ; '.'
0000000000008a8e         db  0x00 ; '.'
0000000000008a8f         db  0x00 ; '.'
0000000000008a90         db  0xe4 ; '.'
0000000000008a91         db  0x9b ; '.'
0000000000008a92         db  0xff ; '.'
0000000000008a93         db  0xff ; '.'
0000000000008a94         db  0x08 ; '.'
0000000000008a95         db  0x05 ; '.'
0000000000008a96         db  0x00 ; '.'
0000000000008a97         db  0x00 ; '.'
0000000000008a98         db  0x34 ; '4'
0000000000008a99         db  0x9c ; '.'
0000000000008a9a         db  0xff ; '.'
0000000000008a9b         db  0xff ; '.'
0000000000008a9c         db  0x1c ; '.'
0000000000008a9d         db  0x05 ; '.'
0000000000008a9e         db  0x00 ; '.'
0000000000008a9f         db  0x00 ; '.'
0000000000008aa0         db  0x84 ; '.'
0000000000008aa1         db  0x9c ; '.'
0000000000008aa2         db  0xff ; '.'
0000000000008aa3         db  0xff ; '.'
0000000000008aa4         db  0x30 ; '0'
0000000000008aa5         db  0x05 ; '.'
0000000000008aa6         db  0x00 ; '.'
0000000000008aa7         db  0x00 ; '.'
0000000000008aa8         db  0xb4 ; '.'
0000000000008aa9         db  0x9c ; '.'
0000000000008aaa         db  0xff ; '.'
0000000000008aab         db  0xff ; '.'
0000000000008aac         db  0x44 ; 'D'
0000000000008aad         db  0x05 ; '.'
0000000000008aae         db  0x00 ; '.'
0000000000008aaf         db  0x00 ; '.'
0000000000008ab0         db  0x04 ; '.'
0000000000008ab1         db  0x9d ; '.'
0000000000008ab2         db  0xff ; '.'
0000000000008ab3         db  0xff ; '.'
0000000000008ab4         db  0x6c ; 'l'
0000000000008ab5         db  0x05 ; '.'
0000000000008ab6         db  0x00 ; '.'
0000000000008ab7         db  0x00 ; '.'
0000000000008ab8         db  0x34 ; '4'
0000000000008ab9         db  0x9d ; '.'
0000000000008aba         db  0xff ; '.'
0000000000008abb         db  0xff ; '.'
0000000000008abc         db  0x88 ; '.'
0000000000008abd         db  0x05 ; '.'
0000000000008abe         db  0x00 ; '.'
0000000000008abf         db  0x00 ; '.'
0000000000008ac0         db  0x64 ; 'd'
0000000000008ac1         db  0x9d ; '.'
0000000000008ac2         db  0xff ; '.'
0000000000008ac3         db  0xff ; '.'
0000000000008ac4         db  0xa4 ; '.'
0000000000008ac5         db  0x05 ; '.'
0000000000008ac6         db  0x00 ; '.'
0000000000008ac7         db  0x00 ; '.'
0000000000008ac8         db  0x94 ; '.'
0000000000008ac9         db  0x9d ; '.'
0000000000008aca         db  0xff ; '.'
0000000000008acb         db  0xff ; '.'
0000000000008acc         db  0xc0 ; '.'
0000000000008acd         db  0x05 ; '.'
0000000000008ace         db  0x00 ; '.'
0000000000008acf         db  0x00 ; '.'
0000000000008ad0         db  0xe4 ; '.'
0000000000008ad1         db  0x9d ; '.'
0000000000008ad2         db  0xff ; '.'
0000000000008ad3         db  0xff ; '.'
0000000000008ad4         db  0xd8 ; '.'
0000000000008ad5         db  0x05 ; '.'
0000000000008ad6         db  0x00 ; '.'
0000000000008ad7         db  0x00 ; '.'
0000000000008ad8         db  0x04 ; '.'
0000000000008ad9         db  0x9e ; '.'
0000000000008ada         db  0xff ; '.'
0000000000008adb         db  0xff ; '.'
0000000000008adc         db  0xf4 ; '.'
0000000000008add         db  0x05 ; '.'
0000000000008ade         db  0x00 ; '.'
0000000000008adf         db  0x00 ; '.'
0000000000008ae0         db  0x34 ; '4'
0000000000008ae1         db  0x9e ; '.'
0000000000008ae2         db  0xff ; '.'
0000000000008ae3         db  0xff ; '.'
0000000000008ae4         db  0x10 ; '.'
0000000000008ae5         db  0x06 ; '.'
0000000000008ae6         db  0x00 ; '.'
0000000000008ae7         db  0x00 ; '.'
0000000000008ae8         db  0x44 ; 'D'
0000000000008ae9         db  0x9e ; '.'
0000000000008aea         db  0xff ; '.'
0000000000008aeb         db  0xff ; '.'
0000000000008aec         db  0x24 ; '$'
0000000000008aed         db  0x06 ; '.'
0000000000008aee         db  0x00 ; '.'
0000000000008aef         db  0x00 ; '.'
0000000000008af0         db  0x64 ; 'd'
0000000000008af1         db  0x9e ; '.'
0000000000008af2         db  0xff ; '.'
0000000000008af3         db  0xff ; '.'
0000000000008af4         db  0x40 ; '@'
0000000000008af5         db  0x06 ; '.'
0000000000008af6         db  0x00 ; '.'
0000000000008af7         db  0x00 ; '.'
0000000000008af8         db  0x94 ; '.'
0000000000008af9         db  0x9e ; '.'
0000000000008afa         db  0xff ; '.'
0000000000008afb         db  0xff ; '.'
0000000000008afc         db  0x5c ; '\'
0000000000008afd         db  0x06 ; '.'
0000000000008afe         db  0x00 ; '.'
0000000000008aff         db  0x00 ; '.'
0000000000008b00         db  0xa4 ; '.'
0000000000008b01         db  0x9e ; '.'
0000000000008b02         db  0xff ; '.'
0000000000008b03         db  0xff ; '.'
0000000000008b04         db  0x70 ; 'p'
0000000000008b05         db  0x06 ; '.'
0000000000008b06         db  0x00 ; '.'
0000000000008b07         db  0x00 ; '.'
0000000000008b08         db  0x54 ; 'T'
0000000000008b09         db  0x9f ; '.'
0000000000008b0a         db  0xff ; '.'
0000000000008b0b         db  0xff ; '.'
0000000000008b0c         db  0x84 ; '.'
0000000000008b0d         db  0x06 ; '.'
0000000000008b0e         db  0x00 ; '.'
0000000000008b0f         db  0x00 ; '.'
0000000000008b10         db  0x74 ; 't'
0000000000008b11         db  0xa0 ; '.'
0000000000008b12         db  0xff ; '.'
0000000000008b13         db  0xff ; '.'
0000000000008b14         db  0x98 ; '.'
0000000000008b15         db  0x06 ; '.'
0000000000008b16         db  0x00 ; '.'
0000000000008b17         db  0x00 ; '.'
0000000000008b18         db  0x04 ; '.'
0000000000008b19         db  0xa1 ; '.'
0000000000008b1a         db  0xff ; '.'
0000000000008b1b         db  0xff ; '.'
0000000000008b1c         db  0xac ; '.'
0000000000008b1d         db  0x06 ; '.'
0000000000008b1e         db  0x00 ; '.'
0000000000008b1f         db  0x00 ; '.'
0000000000008b20         db  0xb4 ; '.'
0000000000008b21         db  0xa1 ; '.'
0000000000008b22         db  0xff ; '.'
0000000000008b23         db  0xff ; '.'
0000000000008b24         db  0xc0 ; '.'
0000000000008b25         db  0x06 ; '.'
0000000000008b26         db  0x00 ; '.'
0000000000008b27         db  0x00 ; '.'
0000000000008b28         db  0xf4 ; '.'
0000000000008b29         db  0xa2 ; '.'
0000000000008b2a         db  0xff ; '.'
0000000000008b2b         db  0xff ; '.'
0000000000008b2c         db  0xfc ; '.'
0000000000008b2d         db  0x06 ; '.'
0000000000008b2e         db  0x00 ; '.'
0000000000008b2f         db  0x00 ; '.'
0000000000008b30         db  0x74 ; 't'
0000000000008b31         db  0xa3 ; '.'
0000000000008b32         db  0xff ; '.'
0000000000008b33         db  0xff ; '.'
0000000000008b34         db  0x28 ; '('
0000000000008b35         db  0x07 ; '.'
0000000000008b36         db  0x00 ; '.'
0000000000008b37         db  0x00 ; '.'
0000000000008b38         db  0x64 ; 'd'
0000000000008b39         db  0xa4 ; '.'
0000000000008b3a         db  0xff ; '.'
0000000000008b3b         db  0xff ; '.'
0000000000008b3c         db  0x78 ; 'x'
0000000000008b3d         db  0x07 ; '.'
0000000000008b3e         db  0x00 ; '.'
0000000000008b3f         db  0x00 ; '.'
0000000000008b40         db  0x44 ; 'D'
0000000000008b41         db  0xa5 ; '.'
0000000000008b42         db  0xff ; '.'
0000000000008b43         db  0xff ; '.'
0000000000008b44         db  0xa4 ; '.'
0000000000008b45         db  0x07 ; '.'
0000000000008b46         db  0x00 ; '.'
0000000000008b47         db  0x00 ; '.'
0000000000008b48         db  0x44 ; 'D'
0000000000008b49         db  0xaa ; '.'
0000000000008b4a         db  0xff ; '.'
0000000000008b4b         db  0xff ; '.'
0000000000008b4c         db  0x2c ; ','
0000000000008b4d         db  0x08 ; '.'
0000000000008b4e         db  0x00 ; '.'
0000000000008b4f         db  0x00 ; '.'
0000000000008b50         db  0xf4 ; '.'
0000000000008b51         db  0xab ; '.'
0000000000008b52         db  0xff ; '.'
0000000000008b53         db  0xff ; '.'
0000000000008b54         db  0x40 ; '@'
0000000000008b55         db  0x08 ; '.'
0000000000008b56         db  0x00 ; '.'
0000000000008b57         db  0x00 ; '.'
0000000000008b58         db  0x14 ; '.'
0000000000008b59         db  0xae ; '.'
0000000000008b5a         db  0xff ; '.'
0000000000008b5b         db  0xff ; '.'
0000000000008b5c         db  0x54 ; 'T'
0000000000008b5d         db  0x08 ; '.'
0000000000008b5e         db  0x00 ; '.'
0000000000008b5f         db  0x00 ; '.'
0000000000008b60         db  0xa4 ; '.'
0000000000008b61         db  0xae ; '.'
0000000000008b62         db  0xff ; '.'
0000000000008b63         db  0xff ; '.'
0000000000008b64         db  0xa0 ; '.'
0000000000008b65         db  0x08 ; '.'
0000000000008b66         db  0x00 ; '.'
0000000000008b67         db  0x00 ; '.'
0000000000008b68         db  0xc4 ; '.'
0000000000008b69         db  0xae ; '.'
0000000000008b6a         db  0xff ; '.'
0000000000008b6b         db  0xff ; '.'
0000000000008b6c         db  0xb4 ; '.'
0000000000008b6d         db  0x08 ; '.'
0000000000008b6e         db  0x00 ; '.'
0000000000008b6f         db  0x00 ; '.'
0000000000008b70         db  0xd4 ; '.'
0000000000008b71         db  0xae ; '.'
0000000000008b72         db  0xff ; '.'
0000000000008b73         db  0xff ; '.'
0000000000008b74         db  0xc8 ; '.'
0000000000008b75         db  0x08 ; '.'
0000000000008b76         db  0x00 ; '.'
0000000000008b77         db  0x00 ; '.'
0000000000008b78         db  0x84 ; '.'
0000000000008b79         db  0xb1 ; '.'
0000000000008b7a         db  0xff ; '.'
0000000000008b7b         db  0xff ; '.'
0000000000008b7c         db  0x14 ; '.'
0000000000008b7d         db  0x09 ; '.'
0000000000008b7e         db  0x00 ; '.'
0000000000008b7f         db  0x00 ; '.'
0000000000008b80         db  0x44 ; 'D'
0000000000008b81         db  0xb2 ; '.'
0000000000008b82         db  0xff ; '.'
0000000000008b83         db  0xff ; '.'
0000000000008b84         db  0x5c ; '\'
0000000000008b85         db  0x09 ; '.'
0000000000008b86         db  0x00 ; '.'
0000000000008b87         db  0x00 ; '.'
0000000000008b88         db  0x54 ; 'T'
0000000000008b89         db  0xb3 ; '.'
0000000000008b8a         db  0xff ; '.'
0000000000008b8b         db  0xff ; '.'
0000000000008b8c         db  0x70 ; 'p'
0000000000008b8d         db  0x09 ; '.'
0000000000008b8e         db  0x00 ; '.'
0000000000008b8f         db  0x00 ; '.'
0000000000008b90         db  0x14 ; '.'
0000000000008b91         db  0xb5 ; '.'
0000000000008b92         db  0xff ; '.'
0000000000008b93         db  0xff ; '.'
0000000000008b94         db  0x84 ; '.'
0000000000008b95         db  0x09 ; '.'
0000000000008b96         db  0x00 ; '.'
0000000000008b97         db  0x00 ; '.'
0000000000008b98         db  0xa4 ; '.'
0000000000008b99         db  0xb5 ; '.'
0000000000008b9a         db  0xff ; '.'
0000000000008b9b         db  0xff ; '.'
0000000000008b9c         db  0xd0 ; '.'
0000000000008b9d         db  0x09 ; '.'
0000000000008b9e         db  0x00 ; '.'
0000000000008b9f         db  0x00 ; '.'
0000000000008ba0         db  0xc4 ; '.'
0000000000008ba1         db  0xb5 ; '.'
0000000000008ba2         db  0xff ; '.'
0000000000008ba3         db  0xff ; '.'
0000000000008ba4         db  0xe4 ; '.'
0000000000008ba5         db  0x09 ; '.'
0000000000008ba6         db  0x00 ; '.'
0000000000008ba7         db  0x00 ; '.'
0000000000008ba8         db  0xd4 ; '.'
0000000000008ba9         db  0xb5 ; '.'
0000000000008baa         db  0xff ; '.'
0000000000008bab         db  0xff ; '.'
0000000000008bac         db  0xf8 ; '.'
0000000000008bad         db  0x09 ; '.'
0000000000008bae         db  0x00 ; '.'
0000000000008baf         db  0x00 ; '.'
0000000000008bb0         db  0x84 ; '.'
0000000000008bb1         db  0xb8 ; '.'
0000000000008bb2         db  0xff ; '.'
0000000000008bb3         db  0xff ; '.'
0000000000008bb4         db  0x44 ; 'D'
0000000000008bb5         db  0x0a ; '.'
0000000000008bb6         db  0x00 ; '.'
0000000000008bb7         db  0x00 ; '.'
0000000000008bb8         db  0x44 ; 'D'
0000000000008bb9         db  0xb9 ; '.'
0000000000008bba         db  0xff ; '.'
0000000000008bbb         db  0xff ; '.'
0000000000008bbc         db  0x8c ; '.'
0000000000008bbd         db  0x0a ; '.'
0000000000008bbe         db  0x00 ; '.'
0000000000008bbf         db  0x00 ; '.'
0000000000008bc0         db  0x54 ; 'T'
0000000000008bc1         db  0xb9 ; '.'
0000000000008bc2         db  0xff ; '.'
0000000000008bc3         db  0xff ; '.'
0000000000008bc4         db  0xa0 ; '.'
0000000000008bc5         db  0x0a ; '.'
0000000000008bc6         db  0x00 ; '.'
0000000000008bc7         db  0x00 ; '.'
0000000000008bc8         db  0x64 ; 'd'
0000000000008bc9         db  0xb9 ; '.'
0000000000008bca         db  0xff ; '.'
0000000000008bcb         db  0xff ; '.'
0000000000008bcc         db  0xb4 ; '.'
0000000000008bcd         db  0x0a ; '.'
0000000000008bce         db  0x00 ; '.'
0000000000008bcf         db  0x00 ; '.'
0000000000008bd0         db  0x14 ; '.'
0000000000008bd1         db  0xba ; '.'
0000000000008bd2         db  0xff ; '.'
0000000000008bd3         db  0xff ; '.'
0000000000008bd4         db  0xe4 ; '.'
0000000000008bd5         db  0x0a ; '.'
0000000000008bd6         db  0x00 ; '.'
0000000000008bd7         db  0x00 ; '.'
0000000000008bd8         db  0x24 ; '$'
0000000000008bd9         db  0xba ; '.'
0000000000008bda         db  0xff ; '.'
0000000000008bdb         db  0xff ; '.'
0000000000008bdc         db  0xf8 ; '.'
0000000000008bdd         db  0x0a ; '.'
0000000000008bde         db  0x00 ; '.'
0000000000008bdf         db  0x00 ; '.'
0000000000008be0         db  0x54 ; 'T'
0000000000008be1         db  0xba ; '.'
0000000000008be2         db  0xff ; '.'
0000000000008be3         db  0xff ; '.'
0000000000008be4         db  0x14 ; '.'
0000000000008be5         db  0x0b ; '.'
0000000000008be6         db  0x00 ; '.'
0000000000008be7         db  0x00 ; '.'
0000000000008be8         db  0xf4 ; '.'
0000000000008be9         db  0xba ; '.'
0000000000008bea         db  0xff ; '.'
0000000000008beb         db  0xff ; '.'
0000000000008bec         db  0x34 ; '4'
0000000000008bed         db  0x0b ; '.'
0000000000008bee         db  0x00 ; '.'
0000000000008bef         db  0x00 ; '.'
0000000000008bf0         db  0xe4 ; '.'
0000000000008bf1         db  0xbb ; '.'
0000000000008bf2         db  0xff ; '.'
0000000000008bf3         db  0xff ; '.'
0000000000008bf4         db  0x78 ; 'x'
0000000000008bf5         db  0x0b ; '.'
0000000000008bf6         db  0x00 ; '.'
0000000000008bf7         db  0x00 ; '.'
0000000000008bf8         db  0x24 ; '$'
0000000000008bf9         db  0xce ; '.'
0000000000008bfa         db  0xff ; '.'
0000000000008bfb         db  0xff ; '.'
0000000000008bfc         db  0xf0 ; '.'
0000000000008bfd         db  0x0b ; '.'
0000000000008bfe         db  0x00 ; '.'
0000000000008bff         db  0x00 ; '.'
0000000000008c00         db  0xd4 ; '.'
0000000000008c01         db  0xcf ; '.'
0000000000008c02         db  0xff ; '.'
0000000000008c03         db  0xff ; '.'
0000000000008c04         db  0x5c ; '\'
0000000000008c05         db  0x0c ; '.'
0000000000008c06         db  0x00 ; '.'
0000000000008c07         db  0x00 ; '.'
0000000000008c08         db  0x14 ; '.'
0000000000008c09         db  0xd0 ; '.'
0000000000008c0a         db  0xff ; '.'
0000000000008c0b         db  0xff ; '.'
0000000000008c0c         db  0x88 ; '.'
0000000000008c0d         db  0x0c ; '.'
0000000000008c0e         db  0x00 ; '.'
0000000000008c0f         db  0x00 ; '.'
0000000000008c10         db  0x34 ; '4'
0000000000008c11         db  0xd0 ; '.'
0000000000008c12         db  0xff ; '.'
0000000000008c13         db  0xff ; '.'
0000000000008c14         db  0x9c ; '.'
0000000000008c15         db  0x0c ; '.'
0000000000008c16         db  0x00 ; '.'
0000000000008c17         db  0x00 ; '.'
0000000000008c18         db  0x54 ; 'T'
0000000000008c19         db  0xd0 ; '.'
0000000000008c1a         db  0xff ; '.'
0000000000008c1b         db  0xff ; '.'
0000000000008c1c         db  0xb0 ; '.'
0000000000008c1d         db  0x0c ; '.'
0000000000008c1e         db  0x00 ; '.'
0000000000008c1f         db  0x00 ; '.'
0000000000008c20         db  0x94 ; '.'
0000000000008c21         db  0xd0 ; '.'
0000000000008c22         db  0xff ; '.'
0000000000008c23         db  0xff ; '.'
0000000000008c24         db  0xc4 ; '.'
0000000000008c25         db  0x0c ; '.'
0000000000008c26         db  0x00 ; '.'
0000000000008c27         db  0x00 ; '.'
0000000000008c28         db  0xb4 ; '.'
0000000000008c29         db  0xd0 ; '.'
0000000000008c2a         db  0xff ; '.'
0000000000008c2b         db  0xff ; '.'
0000000000008c2c         db  0xd8 ; '.'
0000000000008c2d         db  0x0c ; '.'
0000000000008c2e         db  0x00 ; '.'
0000000000008c2f         db  0x00 ; '.'
0000000000008c30         db  0xe4 ; '.'
0000000000008c31         db  0xd0 ; '.'
0000000000008c32         db  0xff ; '.'
0000000000008c33         db  0xff ; '.'
0000000000008c34         db  0xec ; '.'
0000000000008c35         db  0x0c ; '.'
0000000000008c36         db  0x00 ; '.'
0000000000008c37         db  0x00 ; '.'
0000000000008c38         db  0x64 ; 'd'
0000000000008c39         db  0xd1 ; '.'
0000000000008c3a         db  0xff ; '.'
0000000000008c3b         db  0xff ; '.'
0000000000008c3c         db  0x40 ; '@'
0000000000008c3d         db  0x0d ; '.'
0000000000008c3e         db  0x00 ; '.'
0000000000008c3f         db  0x00 ; '.'
0000000000008c40         db  0x54 ; 'T'
0000000000008c41         db  0xd2 ; '.'
0000000000008c42         db  0xff ; '.'
0000000000008c43         db  0xff ; '.'
0000000000008c44         db  0xac ; '.'
0000000000008c45         db  0x0d ; '.'
0000000000008c46         db  0x00 ; '.'
0000000000008c47         db  0x00 ; '.'
0000000000008c48         db  0x64 ; 'd'
0000000000008c49         db  0xd2 ; '.'
0000000000008c4a         db  0xff ; '.'
0000000000008c4b         db  0xff ; '.'
0000000000008c4c         db  0xc0 ; '.'
0000000000008c4d         db  0x0d ; '.'
0000000000008c4e         db  0x00 ; '.'
0000000000008c4f         db  0x00 ; '.'
0000000000008c50         db  0x04 ; '.'
0000000000008c51         db  0xd3 ; '.'
0000000000008c52         db  0xff ; '.'
0000000000008c53         db  0xff ; '.'
0000000000008c54         db  0xec ; '.'
0000000000008c55         db  0x0d ; '.'
0000000000008c56         db  0x00 ; '.'
0000000000008c57         db  0x00 ; '.'
0000000000008c58         db  0x24 ; '$'
0000000000008c59         db  0xd3 ; '.'
0000000000008c5a         db  0xff ; '.'
0000000000008c5b         db  0xff ; '.'
0000000000008c5c         db  0x00 ; '.'
0000000000008c5d         db  0x0e ; '.'
0000000000008c5e         db  0x00 ; '.'
0000000000008c5f         db  0x00 ; '.'
0000000000008c60         db  0x34 ; '4'
0000000000008c61         db  0xd3 ; '.'
0000000000008c62         db  0xff ; '.'
0000000000008c63         db  0xff ; '.'
0000000000008c64         db  0x14 ; '.'
0000000000008c65         db  0x0e ; '.'
0000000000008c66         db  0x00 ; '.'
0000000000008c67         db  0x00 ; '.'
0000000000008c68         db  0x54 ; 'T'
0000000000008c69         db  0xd3 ; '.'
0000000000008c6a         db  0xff ; '.'
0000000000008c6b         db  0xff ; '.'
0000000000008c6c         db  0x28 ; '('
0000000000008c6d         db  0x0e ; '.'
0000000000008c6e         db  0x00 ; '.'
0000000000008c6f         db  0x00 ; '.'
0000000000008c70         db  0x74 ; 't'
0000000000008c71         db  0xd3 ; '.'
0000000000008c72         db  0xff ; '.'
0000000000008c73         db  0xff ; '.'
0000000000008c74         db  0x3c ; '<'
0000000000008c75         db  0x0e ; '.'
0000000000008c76         db  0x00 ; '.'
0000000000008c77         db  0x00 ; '.'
0000000000008c78         db  0x04 ; '.'
0000000000008c79         db  0xd4 ; '.'
0000000000008c7a         db  0xff ; '.'
0000000000008c7b         db  0xff ; '.'
0000000000008c7c         db  0x58 ; 'X'
0000000000008c7d         db  0x0e ; '.'
0000000000008c7e         db  0x00 ; '.'
0000000000008c7f         db  0x00 ; '.'
0000000000008c80         db  0x94 ; '.'
0000000000008c81         db  0xd4 ; '.'
0000000000008c82         db  0xff ; '.'
0000000000008c83         db  0xff ; '.'
0000000000008c84         db  0x74 ; 't'
0000000000008c85         db  0x0e ; '.'
0000000000008c86         db  0x00 ; '.'
0000000000008c87         db  0x00 ; '.'
0000000000008c88         db  0xa4 ; '.'
0000000000008c89         db  0xd4 ; '.'
0000000000008c8a         db  0xff ; '.'
0000000000008c8b         db  0xff ; '.'
0000000000008c8c         db  0x88 ; '.'
0000000000008c8d         db  0x0e ; '.'
0000000000008c8e         db  0x00 ; '.'
0000000000008c8f         db  0x00 ; '.'
0000000000008c90         db  0xb4 ; '.'
0000000000008c91         db  0xd4 ; '.'
0000000000008c92         db  0xff ; '.'
0000000000008c93         db  0xff ; '.'
0000000000008c94         db  0x9c ; '.'
0000000000008c95         db  0x0e ; '.'
0000000000008c96         db  0x00 ; '.'
0000000000008c97         db  0x00 ; '.'
0000000000008c98         db  0x54 ; 'T'
0000000000008c99         db  0xd5 ; '.'
0000000000008c9a         db  0xff ; '.'
0000000000008c9b         db  0xff ; '.'
0000000000008c9c         db  0xb8 ; '.'
0000000000008c9d         db  0x0e ; '.'
0000000000008c9e         db  0x00 ; '.'
0000000000008c9f         db  0x00 ; '.'
0000000000008ca0         db  0x64 ; 'd'
0000000000008ca1         db  0xd5 ; '.'
0000000000008ca2         db  0xff ; '.'
0000000000008ca3         db  0xff ; '.'
0000000000008ca4         db  0xcc ; '.'
0000000000008ca5         db  0x0e ; '.'
0000000000008ca6         db  0x00 ; '.'
0000000000008ca7         db  0x00 ; '.'
0000000000008ca8         db  0x84 ; '.'
0000000000008ca9         db  0xd5 ; '.'
0000000000008caa         db  0xff ; '.'
0000000000008cab         db  0xff ; '.'
0000000000008cac         db  0xe0 ; '.'
0000000000008cad         db  0x0e ; '.'
0000000000008cae         db  0x00 ; '.'
0000000000008caf         db  0x00 ; '.'
0000000000008cb0         db  0x94 ; '.'
0000000000008cb1         db  0xd5 ; '.'
0000000000008cb2         db  0xff ; '.'
0000000000008cb3         db  0xff ; '.'
0000000000008cb4         db  0xf4 ; '.'
0000000000008cb5         db  0x0e ; '.'
0000000000008cb6         db  0x00 ; '.'
0000000000008cb7         db  0x00 ; '.'
0000000000008cb8         db  0x24 ; '$'
0000000000008cb9         db  0xd6 ; '.'
0000000000008cba         db  0xff ; '.'
0000000000008cbb         db  0xff ; '.'
0000000000008cbc         db  0x10 ; '.'
0000000000008cbd         db  0x0f ; '.'
0000000000008cbe         db  0x00 ; '.'
0000000000008cbf         db  0x00 ; '.'
0000000000008cc0         db  0xc4 ; '.'
0000000000008cc1         db  0xd6 ; '.'
0000000000008cc2         db  0xff ; '.'
0000000000008cc3         db  0xff ; '.'
0000000000008cc4         db  0x2c ; ','
0000000000008cc5         db  0x0f ; '.'
0000000000008cc6         db  0x00 ; '.'
0000000000008cc7         db  0x00 ; '.'
0000000000008cc8         db  0xd4 ; '.'
0000000000008cc9         db  0xd6 ; '.'
0000000000008cca         db  0xff ; '.'
0000000000008ccb         db  0xff ; '.'
0000000000008ccc         db  0x40 ; '@'
0000000000008ccd         db  0x0f ; '.'
0000000000008cce         db  0x00 ; '.'
0000000000008ccf         db  0x00 ; '.'
0000000000008cd0         db  0xf4 ; '.'
0000000000008cd1         db  0xd6 ; '.'
0000000000008cd2         db  0xff ; '.'
0000000000008cd3         db  0xff ; '.'
0000000000008cd4         db  0x54 ; 'T'
0000000000008cd5         db  0x0f ; '.'
0000000000008cd6         db  0x00 ; '.'
0000000000008cd7         db  0x00 ; '.'
0000000000008cd8         db  0x14 ; '.'
0000000000008cd9         db  0xd7 ; '.'
0000000000008cda         db  0xff ; '.'
0000000000008cdb         db  0xff ; '.'
0000000000008cdc         db  0x68 ; 'h'
0000000000008cdd         db  0x0f ; '.'
0000000000008cde         db  0x00 ; '.'
0000000000008cdf         db  0x00 ; '.'
0000000000008ce0         db  0x24 ; '$'
0000000000008ce1         db  0xd7 ; '.'
0000000000008ce2         db  0xff ; '.'
0000000000008ce3         db  0xff ; '.'
0000000000008ce4         db  0x7c ; '|'
0000000000008ce5         db  0x0f ; '.'
0000000000008ce6         db  0x00 ; '.'
0000000000008ce7         db  0x00 ; '.'
0000000000008ce8         db  0x44 ; 'D'
0000000000008ce9         db  0xd7 ; '.'
0000000000008cea         db  0xff ; '.'
0000000000008ceb         db  0xff ; '.'
0000000000008cec         db  0x90 ; '.'
0000000000008ced         db  0x0f ; '.'
0000000000008cee         db  0x00 ; '.'
0000000000008cef         db  0x00 ; '.'
0000000000008cf0         db  0x64 ; 'd'
0000000000008cf1         db  0xd7 ; '.'
0000000000008cf2         db  0xff ; '.'
0000000000008cf3         db  0xff ; '.'
0000000000008cf4         db  0xa4 ; '.'
0000000000008cf5         db  0x0f ; '.'
0000000000008cf6         db  0x00 ; '.'
0000000000008cf7         db  0x00 ; '.'
0000000000008cf8         db  0x84 ; '.'
0000000000008cf9         db  0xd7 ; '.'
0000000000008cfa         db  0xff ; '.'
0000000000008cfb         db  0xff ; '.'
0000000000008cfc         db  0xbc ; '.'
0000000000008cfd         db  0x0f ; '.'
0000000000008cfe         db  0x00 ; '.'
0000000000008cff         db  0x00 ; '.'
0000000000008d00         db  0xa4 ; '.'
0000000000008d01         db  0xdb ; '.'
0000000000008d02         db  0xff ; '.'
0000000000008d03         db  0xff ; '.'
0000000000008d04         db  0xd0 ; '.'
0000000000008d05         db  0x10 ; '.'
0000000000008d06         db  0x00 ; '.'
0000000000008d07         db  0x00 ; '.'
0000000000008d08         db  0xc4 ; '.'
0000000000008d09         db  0xdb ; '.'
0000000000008d0a         db  0xff ; '.'
0000000000008d0b         db  0xff ; '.'
0000000000008d0c         db  0xe4 ; '.'
0000000000008d0d         db  0x10 ; '.'
0000000000008d0e         db  0x00 ; '.'
0000000000008d0f         db  0x00 ; '.'
0000000000008d10         db  0x44 ; 'D'
0000000000008d11         db  0xdc ; '.'
0000000000008d12         db  0xff ; '.'
0000000000008d13         db  0xff ; '.'
0000000000008d14         db  0x00 ; '.'
0000000000008d15         db  0x11 ; '.'
0000000000008d16         db  0x00 ; '.'
0000000000008d17         db  0x00 ; '.'
0000000000008d18         db  0x24 ; '$'
0000000000008d19         db  0xdd ; '.'
0000000000008d1a         db  0xff ; '.'
0000000000008d1b         db  0xff ; '.'
0000000000008d1c         db  0x2c ; ','
0000000000008d1d         db  0x11 ; '.'
0000000000008d1e         db  0x00 ; '.'
0000000000008d1f         db  0x00 ; '.'
0000000000008d20         db  0xa4 ; '.'
0000000000008d21         db  0xdd ; '.'
0000000000008d22         db  0xff ; '.'
0000000000008d23         db  0xff ; '.'
0000000000008d24         db  0x4c ; 'L'
0000000000008d25         db  0x11 ; '.'
0000000000008d26         db  0x00 ; '.'
0000000000008d27         db  0x00 ; '.'
0000000000008d28         db  0xc4 ; '.'
0000000000008d29         db  0xdd ; '.'
0000000000008d2a         db  0xff ; '.'
0000000000008d2b         db  0xff ; '.'
0000000000008d2c         db  0x68 ; 'h'
0000000000008d2d         db  0x11 ; '.'
0000000000008d2e         db  0x00 ; '.'
0000000000008d2f         db  0x00 ; '.'
0000000000008d30         db  0xf4 ; '.'
0000000000008d31         db  0xdd ; '.'
0000000000008d32         db  0xff ; '.'
0000000000008d33         db  0xff ; '.'
0000000000008d34         db  0x7c ; '|'
0000000000008d35         db  0x11 ; '.'
0000000000008d36         db  0x00 ; '.'
0000000000008d37         db  0x00 ; '.'
0000000000008d38         db  0x04 ; '.'
0000000000008d39         db  0xde ; '.'
0000000000008d3a         db  0xff ; '.'
0000000000008d3b         db  0xff ; '.'
0000000000008d3c         db  0x90 ; '.'
0000000000008d3d         db  0x11 ; '.'
0000000000008d3e         db  0x00 ; '.'
0000000000008d3f         db  0x00 ; '.'
0000000000008d40         db  0x44 ; 'D'
0000000000008d41         db  0xde ; '.'
0000000000008d42         db  0xff ; '.'
0000000000008d43         db  0xff ; '.'
0000000000008d44         db  0xb4 ; '.'
0000000000008d45         db  0x11 ; '.'
0000000000008d46         db  0x00 ; '.'
0000000000008d47         db  0x00 ; '.'
0000000000008d48         db  0x74 ; 't'
0000000000008d49         db  0xde ; '.'
0000000000008d4a         db  0xff ; '.'
0000000000008d4b         db  0xff ; '.'
0000000000008d4c         db  0xc8 ; '.'
0000000000008d4d         db  0x11 ; '.'
0000000000008d4e         db  0x00 ; '.'
0000000000008d4f         db  0x00 ; '.'
0000000000008d50         db  0x04 ; '.'
0000000000008d51         db  0xdf ; '.'
0000000000008d52         db  0xff ; '.'
0000000000008d53         db  0xff ; '.'
0000000000008d54         db  0xe0 ; '.'
0000000000008d55         db  0x11 ; '.'
0000000000008d56         db  0x00 ; '.'
0000000000008d57         db  0x00 ; '.'
0000000000008d58         db  0x54 ; 'T'
0000000000008d59         db  0xdf ; '.'
0000000000008d5a         db  0xff ; '.'
0000000000008d5b         db  0xff ; '.'
0000000000008d5c         db  0xf8 ; '.'
0000000000008d5d         db  0x11 ; '.'
0000000000008d5e         db  0x00 ; '.'
0000000000008d5f         db  0x00 ; '.'
0000000000008d60         db  0x74 ; 't'
0000000000008d61         db  0xdf ; '.'
0000000000008d62         db  0xff ; '.'
0000000000008d63         db  0xff ; '.'
0000000000008d64         db  0x14 ; '.'
0000000000008d65         db  0x12 ; '.'
0000000000008d66         db  0x00 ; '.'
0000000000008d67         db  0x00 ; '.'
0000000000008d68         db  0xa4 ; '.'
0000000000008d69         db  0xdf ; '.'
0000000000008d6a         db  0xff ; '.'
0000000000008d6b         db  0xff ; '.'
0000000000008d6c         db  0x30 ; '0'
0000000000008d6d         db  0x12 ; '.'
0000000000008d6e         db  0x00 ; '.'
0000000000008d6f         db  0x00 ; '.'
0000000000008d70         db  0xd4 ; '.'
0000000000008d71         db  0xdf ; '.'
0000000000008d72         db  0xff ; '.'
0000000000008d73         db  0xff ; '.'
0000000000008d74         db  0x58 ; 'X'
0000000000008d75         db  0x12 ; '.'
0000000000008d76         db  0x00 ; '.'
0000000000008d77         db  0x00 ; '.'
0000000000008d78         db  0xf4 ; '.'
0000000000008d79         db  0xdf ; '.'
0000000000008d7a         db  0xff ; '.'
0000000000008d7b         db  0xff ; '.'
0000000000008d7c         db  0x74 ; 't'
0000000000008d7d         db  0x12 ; '.'
0000000000008d7e         db  0x00 ; '.'
0000000000008d7f         db  0x00 ; '.'
0000000000008d80         db  0x34 ; '4'
0000000000008d81         db  0xe0 ; '.'
0000000000008d82         db  0xff ; '.'
0000000000008d83         db  0xff ; '.'
0000000000008d84         db  0x8c ; '.'
0000000000008d85         db  0x12 ; '.'
0000000000008d86         db  0x00 ; '.'
0000000000008d87         db  0x00 ; '.'
0000000000008d88         db  0x34 ; '4'
0000000000008d89         db  0xe1 ; '.'
0000000000008d8a         db  0xff ; '.'
0000000000008d8b         db  0xff ; '.'
0000000000008d8c         db  0xd8 ; '.'
0000000000008d8d         db  0x12 ; '.'
0000000000008d8e         db  0x00 ; '.'
0000000000008d8f         db  0x00 ; '.'
0000000000008d90         db  0x64 ; 'd'
0000000000008d91         db  0xe1 ; '.'
0000000000008d92         db  0xff ; '.'
0000000000008d93         db  0xff ; '.'
0000000000008d94         db  0xf4 ; '.'
0000000000008d95         db  0x12 ; '.'
0000000000008d96         db  0x00 ; '.'
0000000000008d97         db  0x00 ; '.'
0000000000008d98         db  0x84 ; '.'
0000000000008d99         db  0xe5 ; '.'
0000000000008d9a         db  0xff ; '.'
0000000000008d9b         db  0xff ; '.'
0000000000008d9c         db  0x44 ; 'D'
0000000000008d9d         db  0x13 ; '.'
0000000000008d9e         db  0x00 ; '.'
0000000000008d9f         db  0x00 ; '.'
0000000000008da0         db  0x04 ; '.'
0000000000008da1         db  0xe6 ; '.'
0000000000008da2         db  0xff ; '.'
0000000000008da3         db  0xff ; '.'
0000000000008da4         db  0x7c ; '|'
0000000000008da5         db  0x13 ; '.'
0000000000008da6         db  0x00 ; '.'
0000000000008da7         db  0x00 ; '.'
0000000000008da8         db  0x44 ; 'D'
0000000000008da9         db  0xe6 ; '.'
0000000000008daa         db  0xff ; '.'
0000000000008dab         db  0xff ; '.'
0000000000008dac         db  0x9c ; '.'
0000000000008dad         db  0x13 ; '.'
0000000000008dae         db  0x00 ; '.'
0000000000008daf         db  0x00 ; '.'
0000000000008db0         db  0xa4 ; '.'
0000000000008db1         db  0xe6 ; '.'
0000000000008db2         db  0xff ; '.'
0000000000008db3         db  0xff ; '.'
0000000000008db4         db  0xcc ; '.'
0000000000008db5         db  0x13 ; '.'
0000000000008db6         db  0x00 ; '.'
0000000000008db7         db  0x00 ; '.'
0000000000008db8         db  0x34 ; '4'
0000000000008db9         db  0xe7 ; '.'
0000000000008dba         db  0xff ; '.'
0000000000008dbb         db  0xff ; '.'
0000000000008dbc         db  0x0c ; '.'
0000000000008dbd         db  0x14 ; '.'
0000000000008dbe         db  0x00 ; '.'
0000000000008dbf         db  0x00 ; '.'
0000000000008dc0         db  0xb4 ; '.'
0000000000008dc1         db  0xe7 ; '.'
0000000000008dc2         db  0xff ; '.'
0000000000008dc3         db  0xff ; '.'
0000000000008dc4         db  0x5c ; '\'
0000000000008dc5         db  0x14 ; '.'
0000000000008dc6         db  0x00 ; '.'
0000000000008dc7         db  0x00 ; '.'
0000000000008dc8         db  0x14 ; '.'
0000000000008dc9         db  0xe8 ; '.'
0000000000008dca         db  0xff ; '.'
0000000000008dcb         db  0xff ; '.'
0000000000008dcc         db  0x7c ; '|'
0000000000008dcd         db  0x14 ; '.'
0000000000008dce         db  0x00 ; '.'
0000000000008dcf         db  0x00 ; '.'
0000000000008dd0         db  0x54 ; 'T'
0000000000008dd1         db  0xe8 ; '.'
0000000000008dd2         db  0xff ; '.'
0000000000008dd3         db  0xff ; '.'
0000000000008dd4         db  0x9c ; '.'
0000000000008dd5         db  0x14 ; '.'
0000000000008dd6         db  0x00 ; '.'
0000000000008dd7         db  0x00 ; '.'
0000000000008dd8         db  0xc4 ; '.'
0000000000008dd9         db  0xe8 ; '.'
0000000000008dda         db  0xff ; '.'
0000000000008ddb         db  0xff ; '.'
0000000000008ddc         db  0xe4 ; '.'
0000000000008ddd         db  0x14 ; '.'
0000000000008dde         db  0x00 ; '.'
0000000000008ddf         db  0x00 ; '.'
0000000000008de0         db  0xd4 ; '.'
0000000000008de1         db  0xe8 ; '.'
0000000000008de2         db  0xff ; '.'
0000000000008de3         db  0xff ; '.'
0000000000008de4         db  0xfc ; '.'
0000000000008de5         db  0x14 ; '.'
0000000000008de6         db  0x00 ; '.'
0000000000008de7         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x8de8; 0x9f30[ (4424 bytes)
        ; File offset : [36328; 40752[ (4424 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000008de8         dd         0x00000014                                  ; Length of the record
0000000000008dec         dd         0x00000000                                  ; CIE ID
0000000000008df0         db         0x01                                        ; Version
0000000000008df1         db         "zR", 0                                     ; Augmentation String
0000000000008df4         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000008df5         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000008df6         db         0x10                                        ; Return address register
0000000000008df7         db         0x01                                        ; Augmentation data length
0000000000008df8         db         0x1b                                        ; FDE encoding
0000000000008df9         db  0x0c ; '.'
0000000000008dfa         db  0x07 ; '.'
0000000000008dfb         db  0x08 ; '.'
0000000000008dfc         db  0x90 ; '.'
0000000000008dfd         db  0x01 ; '.'
0000000000008dfe         db  0x07 ; '.'
0000000000008dff         db  0x10 ; '.'
0000000000008e00         dd         0x00000014                                  ; Length of the record
0000000000008e04         dd         0x0000001c                                  ; FDE: parent CIE at 0x8de8 (FDE encoding = 0x1B)
0000000000008e08         db         0xe8, 0x95, 2 dup (0xff)                    ; begin 0x23f0
0000000000008e0c         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x241b)
0000000000008e10         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e11         align      8
0000000000008e18         dd         0x00000014                                  ; Length of the record
0000000000008e1c         dd         0x00000000                                  ; CIE ID
0000000000008e20         db         0x01                                        ; Version
0000000000008e21         db         "zR", 0                                     ; Augmentation String
0000000000008e24         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000008e25         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000008e26         db         0x10                                        ; Return address register
0000000000008e27         db         0x01                                        ; Augmentation data length
0000000000008e28         db         0x1b                                        ; FDE encoding
0000000000008e29         db  0x0c ; '.'
0000000000008e2a         db  0x07 ; '.'
0000000000008e2b         db  0x08 ; '.'
0000000000008e2c         db  0x90 ; '.'
0000000000008e2d         db  0x01 ; '.'
0000000000008e2e         db  0x00 ; '.'
0000000000008e2f         db  0x00 ; '.'
0000000000008e30         dd         0x00000024                                  ; Length of the record
0000000000008e34         dd         0x0000001c                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000008e38         db         0x48, 0x87, 2 dup (0xff)                    ; begin 0x1580
0000000000008e3c         db         0x30, 0x03, 2 dup (0x00)                    ; length 0x330 (end at 0x18b0)
0000000000008e40         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e41         db  0x0e ; '.'
0000000000008e42         db  0x10 ; '.'
0000000000008e43         db  0x46 ; 'F'
0000000000008e44         db  0x0e ; '.'
0000000000008e45         db  0x18 ; '.'
0000000000008e46         db  0x4a ; 'J'
0000000000008e47         db  0x0f ; '.'
0000000000008e48         db  0x0b ; '.'
0000000000008e49         db  0x77 ; 'w'
0000000000008e4a         db  0x08 ; '.'
0000000000008e4b         db  0x80 ; '.'
0000000000008e4c         db  0x00 ; '.'
0000000000008e4d         db  0x3f ; '?'
0000000000008e4e         db  0x1a ; '.'
0000000000008e4f         db  0x3b ; ';'
0000000000008e50         db  0x2a ; '*'
0000000000008e51         db  0x33 ; '3'
0000000000008e52         db  0x24 ; '$'
0000000000008e53         db  0x22 ; '"'
0000000000008e54         db  0x00 ; '.'
0000000000008e55         db  0x00 ; '.'
0000000000008e56         db  0x00 ; '.'
0000000000008e57         db  0x00 ; '.'
0000000000008e58         dd         0x00000014                                  ; Length of the record
0000000000008e5c         dd         0x00000044                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000008e60         db         0x50, 0x8a, 2 dup (0xff)                    ; begin 0x18b0
0000000000008e64         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x18b8)
0000000000008e68         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e69         align      16
0000000000008e70         dd         0x00000010                                  ; Length of the record
0000000000008e74         dd         0x0000005c                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000008e78         db         0x88, 0x96, 2 dup (0xff)                    ; begin 0x2500
0000000000008e7c         db         0x19, 3 dup (0x00)                          ; length 0x19 (end at 0x2519)
0000000000008e80         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e81         align      4
0000000000008e84         dd         0x00000010                                  ; Length of the record
0000000000008e88         dd         0x00000070                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000008e8c         db         0x94, 0x96, 2 dup (0xff)                    ; begin 0x2520
0000000000008e90         db         0x1b, 3 dup (0x00)                          ; length 0x1b (end at 0x253b)
0000000000008e94         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e95         align      8
0000000000008e98         dd         0x00000010                                  ; Length of the record
0000000000008e9c         dd         0x00000084                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000008ea0         db         0xa0, 0x96, 2 dup (0xff)                    ; begin 0x2540
0000000000008ea4         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x2555)
0000000000008ea8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ea9         align      4
0000000000008eac         dd         0x00000010                                  ; Length of the record
0000000000008eb0         dd         0x00000098                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000008eb4         db         0xac, 0x96, 2 dup (0xff)                    ; begin 0x2560
0000000000008eb8         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x2575)
0000000000008ebc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ebd         align      64
0000000000008ec0         dd         0x00000010                                  ; Length of the record
0000000000008ec4         dd         0x000000ac                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000008ec8         db         0xb8, 0x96, 2 dup (0xff)                    ; begin 0x2580
0000000000008ecc         db         0x04, 3 dup (0x00)                          ; length 0x4 (end at 0x2584)
0000000000008ed0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ed1         align      4
0000000000008ed4         dd         0x00000010                                  ; Length of the record
0000000000008ed8         dd         0x000000c0                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000008edc         db         0xb4, 0x96, 2 dup (0xff)                    ; begin 0x2590
0000000000008ee0         db         0x3d, 3 dup (0x00)                          ; length 0x3d (end at 0x25cd)
0000000000008ee4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ee5         align      8
0000000000008ee8         dd         0x00000010                                  ; Length of the record
0000000000008eec         dd         0x000000d4                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000008ef0         db         0xe0, 0x96, 2 dup (0xff)                    ; begin 0x25d0
0000000000008ef4         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x25df)
0000000000008ef8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ef9         align      4
0000000000008efc         dd         0x00000010                                  ; Length of the record
0000000000008f00         dd         0x000000e8                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000008f04         db         0xdc, 0x96, 2 dup (0xff)                    ; begin 0x25e0
0000000000008f08         db         0x0b, 3 dup (0x00)                          ; length 0xb (end at 0x25eb)
0000000000008f0c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008f0d         align      16
0000000000008f10         dd         0x00000010                                  ; Length of the record
0000000000008f14         dd         0x000000fc                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000008f18         db         0xd8, 0x96, 2 dup (0xff)                    ; begin 0x25f0
0000000000008f1c         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x25f8)
0000000000008f20         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008f21         align      4
0000000000008f24         dd         0x00000010                                  ; Length of the record
0000000000008f28         dd         0x00000110                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000008f2c         db         0xd4, 0x96, 2 dup (0xff)                    ; begin 0x2600
0000000000008f30         db         0x44, 3 dup (0x00)                          ; length 0x44 (end at 0x2644)
0000000000008f34         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008f35         align      8
0000000000008f38         dd         0x00000010                                  ; Length of the record
0000000000008f3c         dd         0x00000124                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000008f40         db         0x10, 0x97, 2 dup (0xff)                    ; begin 0x2650
0000000000008f44         db         0x44, 3 dup (0x00)                          ; length 0x44 (end at 0x2694)
0000000000008f48         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008f49         align      4
0000000000008f4c         dd         0x00000010                                  ; Length of the record
0000000000008f50         dd         0x00000138                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000008f54         db         0x4c, 0x97, 2 dup (0xff)                    ; begin 0x26a0
0000000000008f58         db         0x2a, 3 dup (0x00)                          ; length 0x2a (end at 0x26ca)
0000000000008f5c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008f5d         align      32
0000000000008f60         dd         0x00000024                                  ; Length of the record
0000000000008f64         dd         0x0000014c                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000008f68         db         0x68, 0x97, 2 dup (0xff)                    ; begin 0x26d0
0000000000008f6c         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x271a)
0000000000008f70         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008f71         db  0x41 ; 'A'
0000000000008f72         db  0x0e ; '.'
0000000000008f73         db  0x10 ; '.'
0000000000008f74         db  0x86 ; '.'
0000000000008f75         db  0x02 ; '.'
0000000000008f76         db  0x41 ; 'A'
0000000000008f77         db  0x0e ; '.'
0000000000008f78         db  0x18 ; '.'
0000000000008f79         db  0x83 ; '.'
0000000000008f7a         db  0x03 ; '.'
0000000000008f7b         db  0x4a ; 'J'
0000000000008f7c         db  0x0e ; '.'
0000000000008f7d         db  0x20 ; ' '
0000000000008f7e         db  0x7b ; '{'
0000000000008f7f         db  0x0e ; '.'
0000000000008f80         db  0x18 ; '.'
0000000000008f81         db  0x41 ; 'A'
0000000000008f82         db  0x0e ; '.'
0000000000008f83         db  0x10 ; '.'
0000000000008f84         db  0x41 ; 'A'
0000000000008f85         db  0x0e ; '.'
0000000000008f86         db  0x08 ; '.'
0000000000008f87         db  0x00 ; '.'
0000000000008f88         dd         0x00000018                                  ; Length of the record
0000000000008f8c         dd         0x00000174                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000008f90         db         0x90, 0x97, 2 dup (0xff)                    ; begin 0x2720
0000000000008f94         db         0x23, 3 dup (0x00)                          ; length 0x23 (end at 0x2743)
0000000000008f98         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008f99         db  0x41 ; 'A'
0000000000008f9a         db  0x0e ; '.'
0000000000008f9b         db  0x10 ; '.'
0000000000008f9c         db  0x83 ; '.'
0000000000008f9d         db  0x02 ; '.'
0000000000008f9e         db  0x61 ; 'a'
0000000000008f9f         db  0x0e ; '.'
0000000000008fa0         db  0x08 ; '.'
0000000000008fa1         db  0x00 ; '.'
0000000000008fa2         db  0x00 ; '.'
0000000000008fa3         db  0x00 ; '.'
0000000000008fa4         dd         0x00000018                                  ; Length of the record
0000000000008fa8         dd         0x00000190                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000008fac         db         0xa4, 0x97, 2 dup (0xff)                    ; begin 0x2750
0000000000008fb0         db         0x23, 3 dup (0x00)                          ; length 0x23 (end at 0x2773)
0000000000008fb4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008fb5         db  0x41 ; 'A'
0000000000008fb6         db  0x0e ; '.'
0000000000008fb7         db  0x10 ; '.'
0000000000008fb8         db  0x83 ; '.'
0000000000008fb9         db  0x02 ; '.'
0000000000008fba         db  0x61 ; 'a'
0000000000008fbb         db  0x0e ; '.'
0000000000008fbc         db  0x08 ; '.'
0000000000008fbd         db  0x00 ; '.'
0000000000008fbe         db  0x00 ; '.'
0000000000008fbf         db  0x00 ; '.'
0000000000008fc0         dd         0x00000018                                  ; Length of the record
0000000000008fc4         dd         0x000001ac                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000008fc8         db         0xb8, 0x97, 2 dup (0xff)                    ; begin 0x2780
0000000000008fcc         db         0x26, 3 dup (0x00)                          ; length 0x26 (end at 0x27a6)
0000000000008fd0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008fd1         db  0x41 ; 'A'
0000000000008fd2         db  0x0e ; '.'
0000000000008fd3         db  0x10 ; '.'
0000000000008fd4         db  0x83 ; '.'
0000000000008fd5         db  0x02 ; '.'
0000000000008fd6         db  0x64 ; 'd'
0000000000008fd7         db  0x0e ; '.'
0000000000008fd8         db  0x08 ; '.'
0000000000008fd9         db  0x00 ; '.'
0000000000008fda         db  0x00 ; '.'
0000000000008fdb         db  0x00 ; '.'
0000000000008fdc         dd         0x00000014                                  ; Length of the record
0000000000008fe0         dd         0x000001c8                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000008fe4         db         0xcc, 0x97, 2 dup (0xff)                    ; begin 0x27b0
0000000000008fe8         db         0x45, 3 dup (0x00)                          ; length 0x45 (end at 0x27f5)
0000000000008fec         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008fed         db  0x62 ; 'b'
0000000000008fee         db  0x0e ; '.'
0000000000008fef         db  0x10 ; '.'
0000000000008ff0         db  0x4f ; 'O'
0000000000008ff1         db  0x0e ; '.'
0000000000008ff2         db  0x08 ; '.'
0000000000008ff3         db  0x00 ; '.'
0000000000008ff4         dd         0x00000018                                  ; Length of the record
0000000000008ff8         dd         0x000001e0                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000008ffc         db         0x04, 0x98, 2 dup (0xff)                    ; begin 0x2800
0000000000009000         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x2814)
0000000000009004         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009005         db  0x41 ; 'A'
0000000000009006         db  0x0e ; '.'
0000000000009007         db  0x10 ; '.'
0000000000009008         db  0x83 ; '.'
0000000000009009         db  0x02 ; '.'
000000000000900a         db  0x52 ; 'R'
000000000000900b         db  0x0e ; '.'
000000000000900c         db  0x08 ; '.'
000000000000900d         db  0x00 ; '.'
000000000000900e         db  0x00 ; '.'
000000000000900f         db  0x00 ; '.'
0000000000009010         dd         0x00000018                                  ; Length of the record
0000000000009014         dd         0x000001fc                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009018         db         0x08, 0x98, 2 dup (0xff)                    ; begin 0x2820
000000000000901c         db         0x25, 3 dup (0x00)                          ; length 0x25 (end at 0x2845)
0000000000009020         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009021         db  0x41 ; 'A'
0000000000009022         db  0x0e ; '.'
0000000000009023         db  0x10 ; '.'
0000000000009024         db  0x83 ; '.'
0000000000009025         db  0x02 ; '.'
0000000000009026         db  0x63 ; 'c'
0000000000009027         db  0x0e ; '.'
0000000000009028         db  0x08 ; '.'
0000000000009029         db  0x00 ; '.'
000000000000902a         db  0x00 ; '.'
000000000000902b         db  0x00 ; '.'
000000000000902c         dd         0x00000010                                  ; Length of the record
0000000000009030         dd         0x00000218                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009034         db         0x1c, 0x98, 2 dup (0xff)                    ; begin 0x2850
0000000000009038         db         0x09, 3 dup (0x00)                          ; length 0x9 (end at 0x2859)
000000000000903c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000903d         align      64
0000000000009040         dd         0x00000018                                  ; Length of the record
0000000000009044         dd         0x0000022c                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009048         db         0x18, 0x98, 2 dup (0xff)                    ; begin 0x2860
000000000000904c         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x2874)
0000000000009050         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009051         db  0x41 ; 'A'
0000000000009052         db  0x0e ; '.'
0000000000009053         db  0x10 ; '.'
0000000000009054         db  0x83 ; '.'
0000000000009055         db  0x02 ; '.'
0000000000009056         db  0x52 ; 'R'
0000000000009057         db  0x0e ; '.'
0000000000009058         db  0x08 ; '.'
0000000000009059         db  0x00 ; '.'
000000000000905a         db  0x00 ; '.'
000000000000905b         db  0x00 ; '.'
000000000000905c         dd         0x00000018                                  ; Length of the record
0000000000009060         dd         0x00000248                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009064         db         0x1c, 0x98, 2 dup (0xff)                    ; begin 0x2880
0000000000009068         db         0x25, 3 dup (0x00)                          ; length 0x25 (end at 0x28a5)
000000000000906c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000906d         db  0x41 ; 'A'
000000000000906e         db  0x0e ; '.'
000000000000906f         db  0x10 ; '.'
0000000000009070         db  0x83 ; '.'
0000000000009071         db  0x02 ; '.'
0000000000009072         db  0x63 ; 'c'
0000000000009073         db  0x0e ; '.'
0000000000009074         db  0x08 ; '.'
0000000000009075         db  0x00 ; '.'
0000000000009076         db  0x00 ; '.'
0000000000009077         db  0x00 ; '.'
0000000000009078         dd         0x00000010                                  ; Length of the record
000000000000907c         dd         0x00000264                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009080         db         0x30, 0x98, 2 dup (0xff)                    ; begin 0x28b0
0000000000009084         db         0x09, 3 dup (0x00)                          ; length 0x9 (end at 0x28b9)
0000000000009088         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009089         align      4
000000000000908c         dd         0x00000010                                  ; Length of the record
0000000000009090         dd         0x00000278                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009094         db         0x2c, 0x98, 2 dup (0xff)                    ; begin 0x28c0
0000000000009098         db         0xa3, 3 dup (0x00)                          ; length 0xa3 (end at 0x2963)
000000000000909c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000909d         align      32
00000000000090a0         dd         0x00000010                                  ; Length of the record
00000000000090a4         dd         0x0000028c                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
00000000000090a8         db         0xc8, 0x98, 2 dup (0xff)                    ; begin 0x2970
00000000000090ac         db         0x13, 0x01, 2 dup (0x00)                    ; length 0x113 (end at 0x2a83)
00000000000090b0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000090b1         align      4
00000000000090b4         dd         0x00000010                                  ; Length of the record
00000000000090b8         dd         0x000002a0                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
00000000000090bc         db         0xd4, 0x99, 2 dup (0xff)                    ; begin 0x2a90
00000000000090c0         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x2b13)
00000000000090c4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000090c5         align      8
00000000000090c8         dd         0x00000010                                  ; Length of the record
00000000000090cc         dd         0x000002b4                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
00000000000090d0         db         0x50, 0x9a, 2 dup (0xff)                    ; begin 0x2b20
00000000000090d4         db         0xa3, 3 dup (0x00)                          ; length 0xa3 (end at 0x2bc3)
00000000000090d8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000090d9         align      4
00000000000090dc         dd         0x00000038                                  ; Length of the record
00000000000090e0         dd         0x000002c8                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
00000000000090e4         db         0xec, 0x9a, 2 dup (0xff)                    ; begin 0x2bd0
00000000000090e8         db         0x38, 0x01, 2 dup (0x00)                    ; length 0x138 (end at 0x2d08)
00000000000090ec         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000090ed         db  0x42 ; 'B'
00000000000090ee         db  0x0e ; '.'
00000000000090ef         db  0x10 ; '.'
00000000000090f0         db  0x8d ; '.'
00000000000090f1         db  0x02 ; '.'
00000000000090f2         db  0x42 ; 'B'
00000000000090f3         db  0x0e ; '.'
00000000000090f4         db  0x18 ; '.'
00000000000090f5         db  0x8c ; '.'
00000000000090f6         db  0x03 ; '.'
00000000000090f7         db  0x41 ; 'A'
00000000000090f8         db  0x0e ; '.'
00000000000090f9         db  0x20 ; ' '
00000000000090fa         db  0x86 ; '.'
00000000000090fb         db  0x04 ; '.'
00000000000090fc         db  0x41 ; 'A'
00000000000090fd         db  0x0e ; '.'
00000000000090fe         db  0x28 ; '('
00000000000090ff         db  0x83 ; '.'
0000000000009100         db  0x05 ; '.'
0000000000009101         db  0x44 ; 'D'
0000000000009102         db  0x0e ; '.'
0000000000009103         db  0x40 ; '@'
0000000000009104         db  0x02 ; '.'
0000000000009105         db  0xfe ; '.'
0000000000009106         db  0x0a ; '.'
0000000000009107         db  0x0e ; '.'
0000000000009108         db  0x28 ; '('
0000000000009109         db  0x41 ; 'A'
000000000000910a         db  0x0e ; '.'
000000000000910b         db  0x20 ; ' '
000000000000910c         db  0x41 ; 'A'
000000000000910d         db  0x0e ; '.'
000000000000910e         db  0x18 ; '.'
000000000000910f         db  0x42 ; 'B'
0000000000009110         db  0x0e ; '.'
0000000000009111         db  0x10 ; '.'
0000000000009112         db  0x42 ; 'B'
0000000000009113         db  0x0e ; '.'
0000000000009114         db  0x08 ; '.'
0000000000009115         db  0x41 ; 'A'
0000000000009116         db  0x0b ; '.'
0000000000009117         db  0x00 ; '.'
0000000000009118         dd         0x00000028                                  ; Length of the record
000000000000911c         dd         0x00000304                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009120         db         0xf0, 0x9b, 2 dup (0xff)                    ; begin 0x2d10
0000000000009124         db         0x76, 3 dup (0x00)                          ; length 0x76 (end at 0x2d86)
0000000000009128         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009129         db  0x41 ; 'A'
000000000000912a         db  0x0e ; '.'
000000000000912b         db  0x10 ; '.'
000000000000912c         db  0x86 ; '.'
000000000000912d         db  0x02 ; '.'
000000000000912e         db  0x41 ; 'A'
000000000000912f         db  0x0e ; '.'
0000000000009130         db  0x18 ; '.'
0000000000009131         db  0x83 ; '.'
0000000000009132         db  0x03 ; '.'
0000000000009133         db  0x4a ; 'J'
0000000000009134         db  0x0e ; '.'
0000000000009135         db  0x20 ; ' '
0000000000009136         db  0x02 ; '.'
0000000000009137         db  0x48 ; 'H'
0000000000009138         db  0x0a ; '.'
0000000000009139         db  0x0e ; '.'
000000000000913a         db  0x18 ; '.'
000000000000913b         db  0x41 ; 'A'
000000000000913c         db  0x0e ; '.'
000000000000913d         db  0x10 ; '.'
000000000000913e         db  0x41 ; 'A'
000000000000913f         db  0x0e ; '.'
0000000000009140         db  0x08 ; '.'
0000000000009141         db  0x41 ; 'A'
0000000000009142         db  0x0b ; '.'
0000000000009143         db  0x00 ; '.'
0000000000009144         dd         0x0000004c                                  ; Length of the record
0000000000009148         dd         0x00000330                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
000000000000914c         db         0x44, 0x9c, 2 dup (0xff)                    ; begin 0x2d90
0000000000009150         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x2e73)
0000000000009154         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009155         db  0x42 ; 'B'
0000000000009156         db  0x0e ; '.'
0000000000009157         db  0x10 ; '.'
0000000000009158         db  0x8e ; '.'
0000000000009159         db  0x02 ; '.'
000000000000915a         db  0x42 ; 'B'
000000000000915b         db  0x0e ; '.'
000000000000915c         db  0x18 ; '.'
000000000000915d         db  0x8d ; '.'
000000000000915e         db  0x03 ; '.'
000000000000915f         db  0x45 ; 'E'
0000000000009160         db  0x0e ; '.'
0000000000009161         db  0x20 ; ' '
0000000000009162         db  0x8c ; '.'
0000000000009163         db  0x04 ; '.'
0000000000009164         db  0x41 ; 'A'
0000000000009165         db  0x0e ; '.'
0000000000009166         db  0x28 ; '('
0000000000009167         db  0x86 ; '.'
0000000000009168         db  0x05 ; '.'
0000000000009169         db  0x44 ; 'D'
000000000000916a         db  0x0e ; '.'
000000000000916b         db  0x30 ; '0'
000000000000916c         db  0x83 ; '.'
000000000000916d         db  0x06 ; '.'
000000000000916e         db  0x02 ; '.'
000000000000916f         db  0x8b ; '.'
0000000000009170         db  0x0a ; '.'
0000000000009171         db  0x0e ; '.'
0000000000009172         db  0x28 ; '('
0000000000009173         db  0x41 ; 'A'
0000000000009174         db  0x0e ; '.'
0000000000009175         db  0x20 ; ' '
0000000000009176         db  0x42 ; 'B'
0000000000009177         db  0x0e ; '.'
0000000000009178         db  0x18 ; '.'
0000000000009179         db  0x42 ; 'B'
000000000000917a         db  0x0e ; '.'
000000000000917b         db  0x10 ; '.'
000000000000917c         db  0x42 ; 'B'
000000000000917d         db  0x0e ; '.'
000000000000917e         db  0x08 ; '.'
000000000000917f         db  0x48 ; 'H'
0000000000009180         db  0x0b ; '.'
0000000000009181         db  0x41 ; 'A'
0000000000009182         db  0x0a ; '.'
0000000000009183         db  0x0e ; '.'
0000000000009184         db  0x28 ; '('
0000000000009185         db  0x4b ; 'K'
0000000000009186         db  0x0e ; '.'
0000000000009187         db  0x20 ; ' '
0000000000009188         db  0x42 ; 'B'
0000000000009189         db  0x0e ; '.'
000000000000918a         db  0x18 ; '.'
000000000000918b         db  0x42 ; 'B'
000000000000918c         db  0x0e ; '.'
000000000000918d         db  0x10 ; '.'
000000000000918e         db  0x42 ; 'B'
000000000000918f         db  0x0e ; '.'
0000000000009190         db  0x08 ; '.'
0000000000009191         db  0x46 ; 'F'
0000000000009192         db  0x0b ; '.'
0000000000009193         db  0x00 ; '.'
0000000000009194         dd         0x00000028                                  ; Length of the record
0000000000009198         dd         0x00000380                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
000000000000919c         db         0xe4, 0x9c, 2 dup (0xff)                    ; begin 0x2e80
00000000000091a0         db         0xd1, 3 dup (0x00)                          ; length 0xd1 (end at 0x2f51)
00000000000091a4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000091a5         db  0x41 ; 'A'
00000000000091a6         db  0x0e ; '.'
00000000000091a7         db  0x10 ; '.'
00000000000091a8         db  0x86 ; '.'
00000000000091a9         db  0x02 ; '.'
00000000000091aa         db  0x41 ; 'A'
00000000000091ab         db  0x0e ; '.'
00000000000091ac         db  0x18 ; '.'
00000000000091ad         db  0x83 ; '.'
00000000000091ae         db  0x03 ; '.'
00000000000091af         db  0x4a ; 'J'
00000000000091b0         db  0x0e ; '.'
00000000000091b1         db  0x40 ; '@'
00000000000091b2         db  0x02 ; '.'
00000000000091b3         db  0x7b ; '{'
00000000000091b4         db  0x0a ; '.'
00000000000091b5         db  0x0e ; '.'
00000000000091b6         db  0x18 ; '.'
00000000000091b7         db  0x41 ; 'A'
00000000000091b8         db  0x0e ; '.'
00000000000091b9         db  0x10 ; '.'
00000000000091ba         db  0x41 ; 'A'
00000000000091bb         db  0x0e ; '.'
00000000000091bc         db  0x08 ; '.'
00000000000091bd         db  0x47 ; 'G'
00000000000091be         db  0x0b ; '.'
00000000000091bf         db  0x00 ; '.'
00000000000091c0         dd         0x00000028                                  ; Length of the record
00000000000091c4         dd         0x000003ac                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
00000000000091c8         db         0x98, 0x9d, 2 dup (0xff)                    ; begin 0x2f60
00000000000091cc         db         0xfa, 0x04, 2 dup (0x00)                    ; length 0x4fa (end at 0x345a)
00000000000091d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000091d1         db  0x42 ; 'B'
00000000000091d2         db  0x0e ; '.'
00000000000091d3         db  0x10 ; '.'
00000000000091d4         db  0x8d ; '.'
00000000000091d5         db  0x02 ; '.'
00000000000091d6         db  0x42 ; 'B'
00000000000091d7         db  0x0e ; '.'
00000000000091d8         db  0x18 ; '.'
00000000000091d9         db  0x8c ; '.'
00000000000091da         db  0x03 ; '.'
00000000000091db         db  0x46 ; 'F'
00000000000091dc         db  0x0e ; '.'
00000000000091dd         db  0x20 ; ' '
00000000000091de         db  0x86 ; '.'
00000000000091df         db  0x04 ; '.'
00000000000091e0         db  0x41 ; 'A'
00000000000091e1         db  0x0e ; '.'
00000000000091e2         db  0x28 ; '('
00000000000091e3         db  0x83 ; '.'
00000000000091e4         db  0x05 ; '.'
00000000000091e5         db  0x49 ; 'I'
00000000000091e6         db  0x0e ; '.'
00000000000091e7         db  0xb0 ; '.'
00000000000091e8         db  0x01 ; '.'
00000000000091e9         db  0x00 ; '.'
00000000000091ea         db  0x00 ; '.'
00000000000091eb         db  0x00 ; '.'
00000000000091ec         dd         0x00000058                                  ; Length of the record
00000000000091f0         dd         0x000003d8                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
00000000000091f4         db         0xcc, 0x86, 2 dup (0xff)                    ; begin 0x18c0
00000000000091f8         db         0x29, 0x0b, 2 dup (0x00)                    ; length 0xb29 (end at 0x23e9)
00000000000091fc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000091fd         db  0x42 ; 'B'
00000000000091fe         db  0x0e ; '.'
00000000000091ff         db  0x10 ; '.'
0000000000009200         db  0x8f ; '.'
0000000000009201         db  0x02 ; '.'
0000000000009202         db  0x42 ; 'B'
0000000000009203         db  0x0e ; '.'
0000000000009204         db  0x18 ; '.'
0000000000009205         db  0x8e ; '.'
0000000000009206         db  0x03 ; '.'
0000000000009207         db  0x45 ; 'E'
0000000000009208         db  0x0e ; '.'
0000000000009209         db  0x20 ; ' '
000000000000920a         db  0x8d ; '.'
000000000000920b         db  0x04 ; '.'
000000000000920c         db  0x42 ; 'B'
000000000000920d         db  0x0e ; '.'
000000000000920e         db  0x28 ; '('
000000000000920f         db  0x8c ; '.'
0000000000009210         db  0x05 ; '.'
0000000000009211         db  0x47 ; 'G'
0000000000009212         db  0x0e ; '.'
0000000000009213         db  0x30 ; '0'
0000000000009214         db  0x86 ; '.'
0000000000009215         db  0x06 ; '.'
0000000000009216         db  0x41 ; 'A'
0000000000009217         db  0x0e ; '.'
0000000000009218         db  0x38 ; '8'
0000000000009219         db  0x83 ; '.'
000000000000921a         db  0x07 ; '.'
000000000000921b         db  0x4f ; 'O'
000000000000921c         db  0x0e ; '.'
000000000000921d         db  0xc0 ; '.'
000000000000921e         db  0x01 ; '.'
000000000000921f         db  0x02 ; '.'
0000000000009220         db  0xb2 ; '.'
0000000000009221         db  0x0a ; '.'
0000000000009222         db  0x0e ; '.'
0000000000009223         db  0xc8 ; '.'
0000000000009224         db  0x01 ; '.'
0000000000009225         db  0x50 ; 'P'
0000000000009226         db  0x0e ; '.'
0000000000009227         db  0xd0 ; '.'
0000000000009228         db  0x01 ; '.'
0000000000009229         db  0x6c ; 'l'
000000000000922a         db  0x0b ; '.'
000000000000922b         db  0x03 ; '.'
000000000000922c         db  0x98 ; '.'
000000000000922d         db  0x05 ; '.'
000000000000922e         db  0x0a ; '.'
000000000000922f         db  0x0e ; '.'
0000000000009230         db  0x38 ; '8'
0000000000009231         db  0x41 ; 'A'
0000000000009232         db  0x0e ; '.'
0000000000009233         db  0x30 ; '0'
0000000000009234         db  0x41 ; 'A'
0000000000009235         db  0x0e ; '.'
0000000000009236         db  0x28 ; '('
0000000000009237         db  0x42 ; 'B'
0000000000009238         db  0x0e ; '.'
0000000000009239         db  0x20 ; ' '
000000000000923a         db  0x42 ; 'B'
000000000000923b         db  0x0e ; '.'
000000000000923c         db  0x18 ; '.'
000000000000923d         db  0x42 ; 'B'
000000000000923e         db  0x0e ; '.'
000000000000923f         db  0x10 ; '.'
0000000000009240         db  0x42 ; 'B'
0000000000009241         db  0x0e ; '.'
0000000000009242         db  0x08 ; '.'
0000000000009243         db  0x41 ; 'A'
0000000000009244         db  0x0b ; '.'
0000000000009245         db  0x00 ; '.'
0000000000009246         db  0x00 ; '.'
0000000000009247         db  0x00 ; '.'
0000000000009248         dd         0x00000010                                  ; Length of the record
000000000000924c         dd         0x00000434                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009250         db         0x10, 0xa2, 2 dup (0xff)                    ; begin 0x3460
0000000000009254         db         0xaa, 0x01, 2 dup (0x00)                    ; length 0x1aa (end at 0x360a)
0000000000009258         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009259         align      4
000000000000925c         dd         0x00000010                                  ; Length of the record
0000000000009260         dd         0x00000448                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009264         db         0xac, 0xa3, 2 dup (0xff)                    ; begin 0x3610
0000000000009268         db         0x19, 0x02, 2 dup (0x00)                    ; length 0x219 (end at 0x3829)
000000000000926c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000926d         align      16
0000000000009270         dd         0x00000048                                  ; Length of the record
0000000000009274         dd         0x0000045c                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009278         db         0xb8, 0xa5, 2 dup (0xff)                    ; begin 0x3830
000000000000927c         db         0x87, 3 dup (0x00)                          ; length 0x87 (end at 0x38b7)
0000000000009280         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009281         db  0x42 ; 'B'
0000000000009282         db  0x0e ; '.'
0000000000009283         db  0x10 ; '.'
0000000000009284         db  0x8e ; '.'
0000000000009285         db  0x02 ; '.'
0000000000009286         db  0x42 ; 'B'
0000000000009287         db  0x0e ; '.'
0000000000009288         db  0x18 ; '.'
0000000000009289         db  0x8d ; '.'
000000000000928a         db  0x03 ; '.'
000000000000928b         db  0x49 ; 'I'
000000000000928c         db  0x0e ; '.'
000000000000928d         db  0x20 ; ' '
000000000000928e         db  0x8c ; '.'
000000000000928f         db  0x04 ; '.'
0000000000009290         db  0x41 ; 'A'
0000000000009291         db  0x0e ; '.'
0000000000009292         db  0x28 ; '('
0000000000009293         db  0x86 ; '.'
0000000000009294         db  0x05 ; '.'
0000000000009295         db  0x41 ; 'A'
0000000000009296         db  0x0e ; '.'
0000000000009297         db  0x30 ; '0'
0000000000009298         db  0x83 ; '.'
0000000000009299         db  0x06 ; '.'
000000000000929a         db  0x70 ; 'p'
000000000000929b         db  0x0a ; '.'
000000000000929c         db  0x0e ; '.'
000000000000929d         db  0x28 ; '('
000000000000929e         db  0x44 ; 'D'
000000000000929f         db  0x0e ; '.'
00000000000092a0         db  0x20 ; ' '
00000000000092a1         db  0x42 ; 'B'
00000000000092a2         db  0x0e ; '.'
00000000000092a3         db  0x18 ; '.'
00000000000092a4         db  0x42 ; 'B'
00000000000092a5         db  0x0e ; '.'
00000000000092a6         db  0x10 ; '.'
00000000000092a7         db  0x42 ; 'B'
00000000000092a8         db  0x0e ; '.'
00000000000092a9         db  0x08 ; '.'
00000000000092aa         db  0x47 ; 'G'
00000000000092ab         db  0x0b ; '.'
00000000000092ac         db  0x6c ; 'l'
00000000000092ad         db  0x0e ; '.'
00000000000092ae         db  0x28 ; '('
00000000000092af         db  0x44 ; 'D'
00000000000092b0         db  0x0e ; '.'
00000000000092b1         db  0x20 ; ' '
00000000000092b2         db  0x42 ; 'B'
00000000000092b3         db  0x0e ; '.'
00000000000092b4         db  0x18 ; '.'
00000000000092b5         db  0x42 ; 'B'
00000000000092b6         db  0x0e ; '.'
00000000000092b7         db  0x10 ; '.'
00000000000092b8         db  0x42 ; 'B'
00000000000092b9         db  0x0e ; '.'
00000000000092ba         db  0x08 ; '.'
00000000000092bb         db  0x00 ; '.'
00000000000092bc         dd         0x00000010                                  ; Length of the record
00000000000092c0         dd         0x000004a8                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
00000000000092c4         db         0xfc, 0xa5, 2 dup (0xff)                    ; begin 0x38c0
00000000000092c8         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x38d5)
00000000000092cc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000092cd         align      16
00000000000092d0         dd         0x00000010                                  ; Length of the record
00000000000092d4         dd         0x000004bc                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
00000000000092d8         db         0x08, 0xa6, 2 dup (0xff)                    ; begin 0x38e0
00000000000092dc         db         0x07, 3 dup (0x00)                          ; length 0x7 (end at 0x38e7)
00000000000092e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000092e1         align      4
00000000000092e4         dd         0x00000048                                  ; Length of the record
00000000000092e8         dd         0x000004d0                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
00000000000092ec         db         0x04, 0xa6, 2 dup (0xff)                    ; begin 0x38f0
00000000000092f0         db         0xae, 0x02, 2 dup (0x00)                    ; length 0x2ae (end at 0x3b9e)
00000000000092f4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000092f5         db  0x42 ; 'B'
00000000000092f6         db  0x0e ; '.'
00000000000092f7         db  0x10 ; '.'
00000000000092f8         db  0x8f ; '.'
00000000000092f9         db  0x02 ; '.'
00000000000092fa         db  0x42 ; 'B'
00000000000092fb         db  0x0e ; '.'
00000000000092fc         db  0x18 ; '.'
00000000000092fd         db  0x8e ; '.'
00000000000092fe         db  0x03 ; '.'
00000000000092ff         db  0x45 ; 'E'
0000000000009300         db  0x0e ; '.'
0000000000009301         db  0x20 ; ' '
0000000000009302         db  0x8d ; '.'
0000000000009303         db  0x04 ; '.'
0000000000009304         db  0x42 ; 'B'
0000000000009305         db  0x0e ; '.'
0000000000009306         db  0x28 ; '('
0000000000009307         db  0x8c ; '.'
0000000000009308         db  0x05 ; '.'
0000000000009309         db  0x44 ; 'D'
000000000000930a         db  0x0e ; '.'
000000000000930b         db  0x30 ; '0'
000000000000930c         db  0x86 ; '.'
000000000000930d         db  0x06 ; '.'
000000000000930e         db  0x41 ; 'A'
000000000000930f         db  0x0e ; '.'
0000000000009310         db  0x38 ; '8'
0000000000009311         db  0x83 ; '.'
0000000000009312         db  0x07 ; '.'
0000000000009313         db  0x47 ; 'G'
0000000000009314         db  0x0e ; '.'
0000000000009315         db  0x70 ; 'p'
0000000000009316         db  0x03 ; '.'
0000000000009317         db  0x19 ; '.'
0000000000009318         db  0x01 ; '.'
0000000000009319         db  0x0a ; '.'
000000000000931a         db  0x0e ; '.'
000000000000931b         db  0x38 ; '8'
000000000000931c         db  0x41 ; 'A'
000000000000931d         db  0x0e ; '.'
000000000000931e         db  0x30 ; '0'
000000000000931f         db  0x41 ; 'A'
0000000000009320         db  0x0e ; '.'
0000000000009321         db  0x28 ; '('
0000000000009322         db  0x42 ; 'B'
0000000000009323         db  0x0e ; '.'
0000000000009324         db  0x20 ; ' '
0000000000009325         db  0x42 ; 'B'
0000000000009326         db  0x0e ; '.'
0000000000009327         db  0x18 ; '.'
0000000000009328         db  0x42 ; 'B'
0000000000009329         db  0x0e ; '.'
000000000000932a         db  0x10 ; '.'
000000000000932b         db  0x42 ; 'B'
000000000000932c         db  0x0e ; '.'
000000000000932d         db  0x08 ; '.'
000000000000932e         db  0x46 ; 'F'
000000000000932f         db  0x0b ; '.'
0000000000009330         dd         0x00000044                                  ; Length of the record
0000000000009334         dd         0x0000051c                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009338         db         0x68, 0xa8, 2 dup (0xff)                    ; begin 0x3ba0
000000000000933c         db         0xbf, 3 dup (0x00)                          ; length 0xbf (end at 0x3c5f)
0000000000009340         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009341         db  0x42 ; 'B'
0000000000009342         db  0x0e ; '.'
0000000000009343         db  0x10 ; '.'
0000000000009344         db  0x8e ; '.'
0000000000009345         db  0x02 ; '.'
0000000000009346         db  0x42 ; 'B'
0000000000009347         db  0x0e ; '.'
0000000000009348         db  0x18 ; '.'
0000000000009349         db  0x8d ; '.'
000000000000934a         db  0x03 ; '.'
000000000000934b         db  0x45 ; 'E'
000000000000934c         db  0x0e ; '.'
000000000000934d         db  0x20 ; ' '
000000000000934e         db  0x8c ; '.'
000000000000934f         db  0x04 ; '.'
0000000000009350         db  0x41 ; 'A'
0000000000009351         db  0x0e ; '.'
0000000000009352         db  0x28 ; '('
0000000000009353         db  0x86 ; '.'
0000000000009354         db  0x05 ; '.'
0000000000009355         db  0x44 ; 'D'
0000000000009356         db  0x0e ; '.'
0000000000009357         db  0x30 ; '0'
0000000000009358         db  0x83 ; '.'
0000000000009359         db  0x06 ; '.'
000000000000935a         db  0x4d ; 'M'
000000000000935b         db  0x0e ; '.'
000000000000935c         db  0x50 ; 'P'
000000000000935d         db  0x02 ; '.'
000000000000935e         db  0x76 ; 'v'
000000000000935f         db  0x0a ; '.'
0000000000009360         db  0x0e ; '.'
0000000000009361         db  0x30 ; '0'
0000000000009362         db  0x41 ; 'A'
0000000000009363         db  0x0e ; '.'
0000000000009364         db  0x28 ; '('
0000000000009365         db  0x41 ; 'A'
0000000000009366         db  0x0e ; '.'
0000000000009367         db  0x20 ; ' '
0000000000009368         db  0x42 ; 'B'
0000000000009369         db  0x0e ; '.'
000000000000936a         db  0x18 ; '.'
000000000000936b         db  0x42 ; 'B'
000000000000936c         db  0x0e ; '.'
000000000000936d         db  0x10 ; '.'
000000000000936e         db  0x42 ; 'B'
000000000000936f         db  0x0e ; '.'
0000000000009370         db  0x08 ; '.'
0000000000009371         db  0x47 ; 'G'
0000000000009372         db  0x0b ; '.'
0000000000009373         db  0x00 ; '.'
0000000000009374         db  0x00 ; '.'
0000000000009375         db  0x00 ; '.'
0000000000009376         db  0x00 ; '.'
0000000000009377         db  0x00 ; '.'
0000000000009378         dd         0x00000010                                  ; Length of the record
000000000000937c         dd         0x00000564                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009380         db         0xe0, 0xa8, 2 dup (0xff)                    ; begin 0x3c60
0000000000009384         db         0x08, 0x01, 2 dup (0x00)                    ; length 0x108 (end at 0x3d68)
0000000000009388         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009389         align      4
000000000000938c         dd         0x00000010                                  ; Length of the record
0000000000009390         dd         0x00000578                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009394         db         0xdc, 0xa9, 2 dup (0xff)                    ; begin 0x3d70
0000000000009398         db         0xb5, 0x01, 2 dup (0x00)                    ; length 0x1b5 (end at 0x3f25)
000000000000939c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000939d         align      32
00000000000093a0         dd         0x00000048                                  ; Length of the record
00000000000093a4         dd         0x0000058c                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
00000000000093a8         db         0x88, 0xab, 2 dup (0xff)                    ; begin 0x3f30
00000000000093ac         db         0x87, 3 dup (0x00)                          ; length 0x87 (end at 0x3fb7)
00000000000093b0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000093b1         db  0x42 ; 'B'
00000000000093b2         db  0x0e ; '.'
00000000000093b3         db  0x10 ; '.'
00000000000093b4         db  0x8e ; '.'
00000000000093b5         db  0x02 ; '.'
00000000000093b6         db  0x42 ; 'B'
00000000000093b7         db  0x0e ; '.'
00000000000093b8         db  0x18 ; '.'
00000000000093b9         db  0x8d ; '.'
00000000000093ba         db  0x03 ; '.'
00000000000093bb         db  0x49 ; 'I'
00000000000093bc         db  0x0e ; '.'
00000000000093bd         db  0x20 ; ' '
00000000000093be         db  0x8c ; '.'
00000000000093bf         db  0x04 ; '.'
00000000000093c0         db  0x41 ; 'A'
00000000000093c1         db  0x0e ; '.'
00000000000093c2         db  0x28 ; '('
00000000000093c3         db  0x86 ; '.'
00000000000093c4         db  0x05 ; '.'
00000000000093c5         db  0x41 ; 'A'
00000000000093c6         db  0x0e ; '.'
00000000000093c7         db  0x30 ; '0'
00000000000093c8         db  0x83 ; '.'
00000000000093c9         db  0x06 ; '.'
00000000000093ca         db  0x6f ; 'o'
00000000000093cb         db  0x0a ; '.'
00000000000093cc         db  0x0e ; '.'
00000000000093cd         db  0x28 ; '('
00000000000093ce         db  0x44 ; 'D'
00000000000093cf         db  0x0e ; '.'
00000000000093d0         db  0x20 ; ' '
00000000000093d1         db  0x42 ; 'B'
00000000000093d2         db  0x0e ; '.'
00000000000093d3         db  0x18 ; '.'
00000000000093d4         db  0x42 ; 'B'
00000000000093d5         db  0x0e ; '.'
00000000000093d6         db  0x10 ; '.'
00000000000093d7         db  0x42 ; 'B'
00000000000093d8         db  0x0e ; '.'
00000000000093d9         db  0x08 ; '.'
00000000000093da         db  0x48 ; 'H'
00000000000093db         db  0x0b ; '.'
00000000000093dc         db  0x6c ; 'l'
00000000000093dd         db  0x0e ; '.'
00000000000093de         db  0x28 ; '('
00000000000093df         db  0x44 ; 'D'
00000000000093e0         db  0x0e ; '.'
00000000000093e1         db  0x20 ; ' '
00000000000093e2         db  0x42 ; 'B'
00000000000093e3         db  0x0e ; '.'
00000000000093e4         db  0x18 ; '.'
00000000000093e5         db  0x42 ; 'B'
00000000000093e6         db  0x0e ; '.'
00000000000093e7         db  0x10 ; '.'
00000000000093e8         db  0x42 ; 'B'
00000000000093e9         db  0x0e ; '.'
00000000000093ea         db  0x08 ; '.'
00000000000093eb         db  0x00 ; '.'
00000000000093ec         dd         0x00000010                                  ; Length of the record
00000000000093f0         dd         0x000005d8                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
00000000000093f4         db         0xcc, 0xab, 2 dup (0xff)                    ; begin 0x3fc0
00000000000093f8         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x3fd5)
00000000000093fc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000093fd         align      1024
0000000000009400         dd         0x00000010                                  ; Length of the record
0000000000009404         dd         0x000005ec                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009408         db         0xd8, 0xab, 2 dup (0xff)                    ; begin 0x3fe0
000000000000940c         db         0x07, 3 dup (0x00)                          ; length 0x7 (end at 0x3fe7)
0000000000009410         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009411         align      4
0000000000009414         dd         0x00000048                                  ; Length of the record
0000000000009418         dd         0x00000600                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
000000000000941c         db         0xd4, 0xab, 2 dup (0xff)                    ; begin 0x3ff0
0000000000009420         db         0xad, 0x02, 2 dup (0x00)                    ; length 0x2ad (end at 0x429d)
0000000000009424         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009425         db  0x42 ; 'B'
0000000000009426         db  0x0e ; '.'
0000000000009427         db  0x10 ; '.'
0000000000009428         db  0x8f ; '.'
0000000000009429         db  0x02 ; '.'
000000000000942a         db  0x42 ; 'B'
000000000000942b         db  0x0e ; '.'
000000000000942c         db  0x18 ; '.'
000000000000942d         db  0x8e ; '.'
000000000000942e         db  0x03 ; '.'
000000000000942f         db  0x45 ; 'E'
0000000000009430         db  0x0e ; '.'
0000000000009431         db  0x20 ; ' '
0000000000009432         db  0x8d ; '.'
0000000000009433         db  0x04 ; '.'
0000000000009434         db  0x42 ; 'B'
0000000000009435         db  0x0e ; '.'
0000000000009436         db  0x28 ; '('
0000000000009437         db  0x8c ; '.'
0000000000009438         db  0x05 ; '.'
0000000000009439         db  0x44 ; 'D'
000000000000943a         db  0x0e ; '.'
000000000000943b         db  0x30 ; '0'
000000000000943c         db  0x86 ; '.'
000000000000943d         db  0x06 ; '.'
000000000000943e         db  0x41 ; 'A'
000000000000943f         db  0x0e ; '.'
0000000000009440         db  0x38 ; '8'
0000000000009441         db  0x83 ; '.'
0000000000009442         db  0x07 ; '.'
0000000000009443         db  0x47 ; 'G'
0000000000009444         db  0x0e ; '.'
0000000000009445         db  0x70 ; 'p'
0000000000009446         db  0x03 ; '.'
0000000000009447         db  0x21 ; '!'
0000000000009448         db  0x01 ; '.'
0000000000009449         db  0x0a ; '.'
000000000000944a         db  0x0e ; '.'
000000000000944b         db  0x38 ; '8'
000000000000944c         db  0x41 ; 'A'
000000000000944d         db  0x0e ; '.'
000000000000944e         db  0x30 ; '0'
000000000000944f         db  0x41 ; 'A'
0000000000009450         db  0x0e ; '.'
0000000000009451         db  0x28 ; '('
0000000000009452         db  0x42 ; 'B'
0000000000009453         db  0x0e ; '.'
0000000000009454         db  0x20 ; ' '
0000000000009455         db  0x42 ; 'B'
0000000000009456         db  0x0e ; '.'
0000000000009457         db  0x18 ; '.'
0000000000009458         db  0x42 ; 'B'
0000000000009459         db  0x0e ; '.'
000000000000945a         db  0x10 ; '.'
000000000000945b         db  0x42 ; 'B'
000000000000945c         db  0x0e ; '.'
000000000000945d         db  0x08 ; '.'
000000000000945e         db  0x46 ; 'F'
000000000000945f         db  0x0b ; '.'
0000000000009460         dd         0x00000044                                  ; Length of the record
0000000000009464         dd         0x0000064c                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009468         db         0x38, 0xae, 2 dup (0xff)                    ; begin 0x42a0
000000000000946c         db         0xbf, 3 dup (0x00)                          ; length 0xbf (end at 0x435f)
0000000000009470         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009471         db  0x42 ; 'B'
0000000000009472         db  0x0e ; '.'
0000000000009473         db  0x10 ; '.'
0000000000009474         db  0x8e ; '.'
0000000000009475         db  0x02 ; '.'
0000000000009476         db  0x42 ; 'B'
0000000000009477         db  0x0e ; '.'
0000000000009478         db  0x18 ; '.'
0000000000009479         db  0x8d ; '.'
000000000000947a         db  0x03 ; '.'
000000000000947b         db  0x45 ; 'E'
000000000000947c         db  0x0e ; '.'
000000000000947d         db  0x20 ; ' '
000000000000947e         db  0x8c ; '.'
000000000000947f         db  0x04 ; '.'
0000000000009480         db  0x41 ; 'A'
0000000000009481         db  0x0e ; '.'
0000000000009482         db  0x28 ; '('
0000000000009483         db  0x86 ; '.'
0000000000009484         db  0x05 ; '.'
0000000000009485         db  0x44 ; 'D'
0000000000009486         db  0x0e ; '.'
0000000000009487         db  0x30 ; '0'
0000000000009488         db  0x83 ; '.'
0000000000009489         db  0x06 ; '.'
000000000000948a         db  0x4d ; 'M'
000000000000948b         db  0x0e ; '.'
000000000000948c         db  0x50 ; 'P'
000000000000948d         db  0x02 ; '.'
000000000000948e         db  0x76 ; 'v'
000000000000948f         db  0x0a ; '.'
0000000000009490         db  0x0e ; '.'
0000000000009491         db  0x30 ; '0'
0000000000009492         db  0x41 ; 'A'
0000000000009493         db  0x0e ; '.'
0000000000009494         db  0x28 ; '('
0000000000009495         db  0x41 ; 'A'
0000000000009496         db  0x0e ; '.'
0000000000009497         db  0x20 ; ' '
0000000000009498         db  0x42 ; 'B'
0000000000009499         db  0x0e ; '.'
000000000000949a         db  0x18 ; '.'
000000000000949b         db  0x42 ; 'B'
000000000000949c         db  0x0e ; '.'
000000000000949d         db  0x10 ; '.'
000000000000949e         db  0x42 ; 'B'
000000000000949f         db  0x0e ; '.'
00000000000094a0         db  0x08 ; '.'
00000000000094a1         db  0x47 ; 'G'
00000000000094a2         db  0x0b ; '.'
00000000000094a3         db  0x00 ; '.'
00000000000094a4         db  0x00 ; '.'
00000000000094a5         db  0x00 ; '.'
00000000000094a6         db  0x00 ; '.'
00000000000094a7         db  0x00 ; '.'
00000000000094a8         dd         0x00000010                                  ; Length of the record
00000000000094ac         dd         0x00000694                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
00000000000094b0         db         0xb0, 0xae, 2 dup (0xff)                    ; begin 0x4360
00000000000094b4         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x4368)
00000000000094b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000094b9         align      4
00000000000094bc         dd         0x00000010                                  ; Length of the record
00000000000094c0         dd         0x000006a8                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
00000000000094c4         db         0xac, 0xae, 2 dup (0xff)                    ; begin 0x4370
00000000000094c8         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x4378)
00000000000094cc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000094cd         align      16
00000000000094d0         dd         0x0000002c                                  ; Length of the record
00000000000094d4         dd         0x000006bc                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
00000000000094d8         db         0xa8, 0xae, 2 dup (0xff)                    ; begin 0x4380
00000000000094dc         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x4424)
00000000000094e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000094e1         db  0x41 ; 'A'
00000000000094e2         db  0x0e ; '.'
00000000000094e3         db  0x10 ; '.'
00000000000094e4         db  0x86 ; '.'
00000000000094e5         db  0x02 ; '.'
00000000000094e6         db  0x41 ; 'A'
00000000000094e7         db  0x0e ; '.'
00000000000094e8         db  0x18 ; '.'
00000000000094e9         db  0x83 ; '.'
00000000000094ea         db  0x03 ; '.'
00000000000094eb         db  0x44 ; 'D'
00000000000094ec         db  0x0e ; '.'
00000000000094ed         db  0x20 ; ' '
00000000000094ee         db  0x7a ; 'z'
00000000000094ef         db  0x0a ; '.'
00000000000094f0         db  0x0e ; '.'
00000000000094f1         db  0x18 ; '.'
00000000000094f2         db  0x41 ; 'A'
00000000000094f3         db  0x0e ; '.'
00000000000094f4         db  0x10 ; '.'
00000000000094f5         db  0x41 ; 'A'
00000000000094f6         db  0x0e ; '.'
00000000000094f7         db  0x08 ; '.'
00000000000094f8         db  0x41 ; 'A'
00000000000094f9         db  0x0b ; '.'
00000000000094fa         db  0x00 ; '.'
00000000000094fb         db  0x00 ; '.'
00000000000094fc         db  0x00 ; '.'
00000000000094fd         db  0x00 ; '.'
00000000000094fe         db  0x00 ; '.'
00000000000094ff         db  0x00 ; '.'
0000000000009500         dd         0x00000010                                  ; Length of the record
0000000000009504         dd         0x000006ec                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009508         db         0x28, 0xaf, 2 dup (0xff)                    ; begin 0x4430
000000000000950c         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x4435)
0000000000009510         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009511         align      4
0000000000009514         dd         0x00000018                                  ; Length of the record
0000000000009518         dd         0x00000700                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
000000000000951c         db         0x24, 0xaf, 2 dup (0xff)                    ; begin 0x4440
0000000000009520         db         0x22, 3 dup (0x00)                          ; length 0x22 (end at 0x4462)
0000000000009524         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009525         db  0x46 ; 'F'
0000000000009526         db  0x0e ; '.'
0000000000009527         db  0x10 ; '.'
0000000000009528         db  0x83 ; '.'
0000000000009529         db  0x02 ; '.'
000000000000952a         db  0x4e ; 'N'
000000000000952b         db  0xc3 ; '.'
000000000000952c         db  0x0e ; '.'
000000000000952d         db  0x08 ; '.'
000000000000952e         db  0x00 ; '.'
000000000000952f         db  0x00 ; '.'
0000000000009530         dd         0x0000001c                                  ; Length of the record
0000000000009534         dd         0x0000071c                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009538         db         0x38, 0xaf, 2 dup (0xff)                    ; begin 0x4470
000000000000953c         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x450f)
0000000000009540         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009541         db  0x44 ; 'D'
0000000000009542         db  0x0e ; '.'
0000000000009543         db  0x10 ; '.'
0000000000009544         db  0x83 ; '.'
0000000000009545         db  0x02 ; '.'
0000000000009546         db  0x02 ; '.'
0000000000009547         db  0x78 ; 'x'
0000000000009548         db  0x0a ; '.'
0000000000009549         db  0x0e ; '.'
000000000000954a         db  0x08 ; '.'
000000000000954b         db  0x41 ; 'A'
000000000000954c         db  0x0b ; '.'
000000000000954d         db  0x00 ; '.'
000000000000954e         db  0x00 ; '.'
000000000000954f         db  0x00 ; '.'
0000000000009550         dd         0x00000040                                  ; Length of the record
0000000000009554         dd         0x0000073c                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009558         db         0xb8, 0xaf, 2 dup (0xff)                    ; begin 0x4510
000000000000955c         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x45f7)
0000000000009560         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009561         db  0x41 ; 'A'
0000000000009562         db  0x0e ; '.'
0000000000009563         db  0x10 ; '.'
0000000000009564         db  0x86 ; '.'
0000000000009565         db  0x02 ; '.'
0000000000009566         db  0x41 ; 'A'
0000000000009567         db  0x0e ; '.'
0000000000009568         db  0x18 ; '.'
0000000000009569         db  0x83 ; '.'
000000000000956a         db  0x03 ; '.'
000000000000956b         db  0x49 ; 'I'
000000000000956c         db  0x0e ; '.'
000000000000956d         db  0x20 ; ' '
000000000000956e         db  0x6e ; 'n'
000000000000956f         db  0x0a ; '.'
0000000000009570         db  0x0e ; '.'
0000000000009571         db  0x18 ; '.'
0000000000009572         db  0x41 ; 'A'
0000000000009573         db  0x0e ; '.'
0000000000009574         db  0x10 ; '.'
0000000000009575         db  0x41 ; 'A'
0000000000009576         db  0x0e ; '.'
0000000000009577         db  0x08 ; '.'
0000000000009578         db  0x45 ; 'E'
0000000000009579         db  0x0b ; '.'
000000000000957a         db  0x02 ; '.'
000000000000957b         db  0x4a ; 'J'
000000000000957c         db  0x0a ; '.'
000000000000957d         db  0x0e ; '.'
000000000000957e         db  0x18 ; '.'
000000000000957f         db  0x41 ; 'A'
0000000000009580         db  0x0e ; '.'
0000000000009581         db  0x10 ; '.'
0000000000009582         db  0x41 ; 'A'
0000000000009583         db  0x0e ; '.'
0000000000009584         db  0x08 ; '.'
0000000000009585         db  0x44 ; 'D'
0000000000009586         db  0x0b ; '.'
0000000000009587         db  0x02 ; '.'
0000000000009588         db  0x54 ; 'T'
0000000000009589         db  0x0e ; '.'
000000000000958a         db  0x18 ; '.'
000000000000958b         db  0x41 ; 'A'
000000000000958c         db  0x0e ; '.'
000000000000958d         db  0x10 ; '.'
000000000000958e         db  0x41 ; 'A'
000000000000958f         db  0x0e ; '.'
0000000000009590         db  0x08 ; '.'
0000000000009591         db  0x00 ; '.'
0000000000009592         db  0x00 ; '.'
0000000000009593         db  0x00 ; '.'
0000000000009594         dd         0x00000074                                  ; Length of the record
0000000000009598         dd         0x00000780                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
000000000000959c         db         0x64, 0xb0, 2 dup (0xff)                    ; begin 0x4600
00000000000095a0         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x5834)
00000000000095a4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000095a5         db  0x42 ; 'B'
00000000000095a6         db  0x0e ; '.'
00000000000095a7         db  0x10 ; '.'
00000000000095a8         db  0x8f ; '.'
00000000000095a9         db  0x02 ; '.'
00000000000095aa         db  0x42 ; 'B'
00000000000095ab         db  0x0e ; '.'
00000000000095ac         db  0x18 ; '.'
00000000000095ad         db  0x8e ; '.'
00000000000095ae         db  0x03 ; '.'
00000000000095af         db  0x45 ; 'E'
00000000000095b0         db  0x0e ; '.'
00000000000095b1         db  0x20 ; ' '
00000000000095b2         db  0x8d ; '.'
00000000000095b3         db  0x04 ; '.'
00000000000095b4         db  0x42 ; 'B'
00000000000095b5         db  0x0e ; '.'
00000000000095b6         db  0x28 ; '('
00000000000095b7         db  0x8c ; '.'
00000000000095b8         db  0x05 ; '.'
00000000000095b9         db  0x44 ; 'D'
00000000000095ba         db  0x0e ; '.'
00000000000095bb         db  0x30 ; '0'
00000000000095bc         db  0x86 ; '.'
00000000000095bd         db  0x06 ; '.'
00000000000095be         db  0x41 ; 'A'
00000000000095bf         db  0x0e ; '.'
00000000000095c0         db  0x38 ; '8'
00000000000095c1         db  0x83 ; '.'
00000000000095c2         db  0x07 ; '.'
00000000000095c3         db  0x53 ; 'S'
00000000000095c4         db  0x0e ; '.'
00000000000095c5         db  0xf0 ; '.'
00000000000095c6         db  0x01 ; '.'
00000000000095c7         db  0x03 ; '.'
00000000000095c8         db  0x81 ; '.'
00000000000095c9         db  0x0b ; '.'
00000000000095ca         db  0x0e ; '.'
00000000000095cb         db  0xf8 ; '.'
00000000000095cc         db  0x01 ; '.'
00000000000095cd         db  0x4a ; 'J'
00000000000095ce         db  0x0e ; '.'
00000000000095cf         db  0x80 ; '.'
00000000000095d0         db  0x02 ; '.'
00000000000095d1         db  0x44 ; 'D'
00000000000095d2         db  0x0e ; '.'
00000000000095d3         db  0x88 ; '.'
00000000000095d4         db  0x02 ; '.'
00000000000095d5         db  0x45 ; 'E'
00000000000095d6         db  0x0e ; '.'
00000000000095d7         db  0x90 ; '.'
00000000000095d8         db  0x02 ; '.'
00000000000095d9         db  0x5f ; '_'
00000000000095da         db  0x0e ; '.'
00000000000095db         db  0xf0 ; '.'
00000000000095dc         db  0x01 ; '.'
00000000000095dd         db  0x64 ; 'd'
00000000000095de         db  0x0a ; '.'
00000000000095df         db  0x0e ; '.'
00000000000095e0         db  0x38 ; '8'
00000000000095e1         db  0x41 ; 'A'
00000000000095e2         db  0x0e ; '.'
00000000000095e3         db  0x30 ; '0'
00000000000095e4         db  0x41 ; 'A'
00000000000095e5         db  0x0e ; '.'
00000000000095e6         db  0x28 ; '('
00000000000095e7         db  0x42 ; 'B'
00000000000095e8         db  0x0e ; '.'
00000000000095e9         db  0x20 ; ' '
00000000000095ea         db  0x42 ; 'B'
00000000000095eb         db  0x0e ; '.'
00000000000095ec         db  0x18 ; '.'
00000000000095ed         db  0x42 ; 'B'
00000000000095ee         db  0x0e ; '.'
00000000000095ef         db  0x10 ; '.'
00000000000095f0         db  0x42 ; 'B'
00000000000095f1         db  0x0e ; '.'
00000000000095f2         db  0x08 ; '.'
00000000000095f3         db  0x44 ; 'D'
00000000000095f4         db  0x0b ; '.'
00000000000095f5         db  0x03 ; '.'
00000000000095f6         db  0x99 ; '.'
00000000000095f7         db  0x05 ; '.'
00000000000095f8         db  0x0e ; '.'
00000000000095f9         db  0xf8 ; '.'
00000000000095fa         db  0x01 ; '.'
00000000000095fb         db  0x4d ; 'M'
00000000000095fc         db  0x0e ; '.'
00000000000095fd         db  0x80 ; '.'
00000000000095fe         db  0x02 ; '.'
00000000000095ff         db  0x44 ; 'D'
0000000000009600         db  0x0e ; '.'
0000000000009601         db  0x88 ; '.'
0000000000009602         db  0x02 ; '.'
0000000000009603         db  0x47 ; 'G'
0000000000009604         db  0x0e ; '.'
0000000000009605         db  0x90 ; '.'
0000000000009606         db  0x02 ; '.'
0000000000009607         db  0x5b ; '['
0000000000009608         db  0x0e ; '.'
0000000000009609         db  0xf0 ; '.'
000000000000960a         db  0x01 ; '.'
000000000000960b         db  0x00 ; '.'
000000000000960c         dd         0x00000068                                  ; Length of the record
0000000000009610         dd         0x000007f8                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009614         db         0x2c, 0xc2, 2 dup (0xff)                    ; begin 0x5840
0000000000009618         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x59eb)
000000000000961c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000961d         db  0x42 ; 'B'
000000000000961e         db  0x0e ; '.'
000000000000961f         db  0x10 ; '.'
0000000000009620         db  0x8f ; '.'
0000000000009621         db  0x02 ; '.'
0000000000009622         db  0x42 ; 'B'
0000000000009623         db  0x0e ; '.'
0000000000009624         db  0x18 ; '.'
0000000000009625         db  0x8e ; '.'
0000000000009626         db  0x03 ; '.'
0000000000009627         db  0x45 ; 'E'
0000000000009628         db  0x0e ; '.'
0000000000009629         db  0x20 ; ' '
000000000000962a         db  0x8d ; '.'
000000000000962b         db  0x04 ; '.'
000000000000962c         db  0x42 ; 'B'
000000000000962d         db  0x0e ; '.'
000000000000962e         db  0x28 ; '('
000000000000962f         db  0x8c ; '.'
0000000000009630         db  0x05 ; '.'
0000000000009631         db  0x44 ; 'D'
0000000000009632         db  0x0e ; '.'
0000000000009633         db  0x30 ; '0'
0000000000009634         db  0x86 ; '.'
0000000000009635         db  0x06 ; '.'
0000000000009636         db  0x41 ; 'A'
0000000000009637         db  0x0e ; '.'
0000000000009638         db  0x38 ; '8'
0000000000009639         db  0x83 ; '.'
000000000000963a         db  0x07 ; '.'
000000000000963b         db  0x47 ; 'G'
000000000000963c         db  0x0e ; '.'
000000000000963d         db  0x60 ; '`'
000000000000963e         db  0x02 ; '.'
000000000000963f         db  0x99 ; '.'
0000000000009640         db  0x0e ; '.'
0000000000009641         db  0x68 ; 'h'
0000000000009642         db  0x5f ; '_'
0000000000009643         db  0x0e ; '.'
0000000000009644         db  0x70 ; 'p'
0000000000009645         db  0x46 ; 'F'
0000000000009646         db  0x0e ; '.'
0000000000009647         db  0x78 ; 'x'
0000000000009648         db  0x42 ; 'B'
0000000000009649         db  0x0e ; '.'
000000000000964a         db  0x80 ; '.'
000000000000964b         db  0x01 ; '.'
000000000000964c         db  0x59 ; 'Y'
000000000000964d         db  0x0e ; '.'
000000000000964e         db  0x60 ; '`'
000000000000964f         db  0x02 ; '.'
0000000000009650         db  0x40 ; '@'
0000000000009651         db  0x0e ; '.'
0000000000009652         db  0x68 ; 'h'
0000000000009653         db  0x4b ; 'K'
0000000000009654         db  0x0e ; '.'
0000000000009655         db  0x70 ; 'p'
0000000000009656         db  0x43 ; 'C'
0000000000009657         db  0x0e ; '.'
0000000000009658         db  0x78 ; 'x'
0000000000009659         db  0x45 ; 'E'
000000000000965a         db  0x0e ; '.'
000000000000965b         db  0x80 ; '.'
000000000000965c         db  0x01 ; '.'
000000000000965d         db  0x5e ; '^'
000000000000965e         db  0x0e ; '.'
000000000000965f         db  0x60 ; '`'
0000000000009660         db  0x4c ; 'L'
0000000000009661         db  0x0a ; '.'
0000000000009662         db  0x0e ; '.'
0000000000009663         db  0x38 ; '8'
0000000000009664         db  0x44 ; 'D'
0000000000009665         db  0x0e ; '.'
0000000000009666         db  0x30 ; '0'
0000000000009667         db  0x41 ; 'A'
0000000000009668         db  0x0e ; '.'
0000000000009669         db  0x28 ; '('
000000000000966a         db  0x42 ; 'B'
000000000000966b         db  0x0e ; '.'
000000000000966c         db  0x20 ; ' '
000000000000966d         db  0x42 ; 'B'
000000000000966e         db  0x0e ; '.'
000000000000966f         db  0x18 ; '.'
0000000000009670         db  0x42 ; 'B'
0000000000009671         db  0x0e ; '.'
0000000000009672         db  0x10 ; '.'
0000000000009673         db  0x42 ; 'B'
0000000000009674         db  0x0e ; '.'
0000000000009675         db  0x08 ; '.'
0000000000009676         db  0x46 ; 'F'
0000000000009677         db  0x0b ; '.'
0000000000009678         dd         0x00000028                                  ; Length of the record
000000000000967c         dd         0x00000864                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009680         db         0x70, 0xc3, 2 dup (0xff)                    ; begin 0x59f0
0000000000009684         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x5a26)
0000000000009688         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009689         db  0x42 ; 'B'
000000000000968a         db  0x0e ; '.'
000000000000968b         db  0x10 ; '.'
000000000000968c         db  0x8c ; '.'
000000000000968d         db  0x02 ; '.'
000000000000968e         db  0x41 ; 'A'
000000000000968f         db  0x0e ; '.'
0000000000009690         db  0x18 ; '.'
0000000000009691         db  0x86 ; '.'
0000000000009692         db  0x03 ; '.'
0000000000009693         db  0x41 ; 'A'
0000000000009694         db  0x0e ; '.'
0000000000009695         db  0x20 ; ' '
0000000000009696         db  0x83 ; '.'
0000000000009697         db  0x04 ; '.'
0000000000009698         db  0x6e ; 'n'
0000000000009699         db  0x0e ; '.'
000000000000969a         db  0x18 ; '.'
000000000000969b         db  0x41 ; 'A'
000000000000969c         db  0x0e ; '.'
000000000000969d         db  0x10 ; '.'
000000000000969e         db  0x42 ; 'B'
000000000000969f         db  0x0e ; '.'
00000000000096a0         db  0x08 ; '.'
00000000000096a1         db  0x00 ; '.'
00000000000096a2         db  0x00 ; '.'
00000000000096a3         db  0x00 ; '.'
00000000000096a4         dd         0x00000010                                  ; Length of the record
00000000000096a8         dd         0x00000890                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
00000000000096ac         db         0x84, 0xc3, 2 dup (0xff)                    ; begin 0x5a30
00000000000096b0         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x5a41)
00000000000096b4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000096b5         align      8
00000000000096b8         dd         0x00000010                                  ; Length of the record
00000000000096bc         dd         0x000008a4                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
00000000000096c0         db         0x90, 0xc3, 2 dup (0xff)                    ; begin 0x5a50
00000000000096c4         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x5a61)
00000000000096c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000096c9         align      4
00000000000096cc         dd         0x00000010                                  ; Length of the record
00000000000096d0         dd         0x000008b8                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
00000000000096d4         db         0x9c, 0xc3, 2 dup (0xff)                    ; begin 0x5a70
00000000000096d8         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x5aa5)
00000000000096dc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000096dd         align      32
00000000000096e0         dd         0x00000010                                  ; Length of the record
00000000000096e4         dd         0x000008cc                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
00000000000096e8         db         0xc8, 0xc3, 2 dup (0xff)                    ; begin 0x5ab0
00000000000096ec         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x5ac5)
00000000000096f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000096f1         align      4
00000000000096f4         dd         0x00000010                                  ; Length of the record
00000000000096f8         dd         0x000008e0                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
00000000000096fc         db         0xd4, 0xc3, 2 dup (0xff)                    ; begin 0x5ad0
0000000000009700         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x5b00)
0000000000009704         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009705         db  0x6b ; 'k'
0000000000009706         db  0x0e ; '.'
0000000000009707         db  0x10 ; '.'
0000000000009708         dd         0x00000050                                  ; Length of the record
000000000000970c         dd         0x000008f4                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009710         db         0xf0, 0xc3, 2 dup (0xff)                    ; begin 0x5b00
0000000000009714         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x5b74)
0000000000009718         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009719         db  0x42 ; 'B'
000000000000971a         db  0x0e ; '.'
000000000000971b         db  0x10 ; '.'
000000000000971c         db  0x8f ; '.'
000000000000971d         db  0x02 ; '.'
000000000000971e         db  0x42 ; 'B'
000000000000971f         db  0x0e ; '.'
0000000000009720         db  0x18 ; '.'
0000000000009721         db  0x8e ; '.'
0000000000009722         db  0x03 ; '.'
0000000000009723         db  0x49 ; 'I'
0000000000009724         db  0x0e ; '.'
0000000000009725         db  0x20 ; ' '
0000000000009726         db  0x8d ; '.'
0000000000009727         db  0x04 ; '.'
0000000000009728         db  0x42 ; 'B'
0000000000009729         db  0x0e ; '.'
000000000000972a         db  0x28 ; '('
000000000000972b         db  0x8c ; '.'
000000000000972c         db  0x05 ; '.'
000000000000972d         db  0x44 ; 'D'
000000000000972e         db  0x0e ; '.'
000000000000972f         db  0x30 ; '0'
0000000000009730         db  0x86 ; '.'
0000000000009731         db  0x06 ; '.'
0000000000009732         db  0x41 ; 'A'
0000000000009733         db  0x0e ; '.'
0000000000009734         db  0x38 ; '8'
0000000000009735         db  0x83 ; '.'
0000000000009736         db  0x07 ; '.'
0000000000009737         db  0x4d ; 'M'
0000000000009738         db  0x0e ; '.'
0000000000009739         db  0x50 ; 'P'
000000000000973a         db  0x5f ; '_'
000000000000973b         db  0x0e ; '.'
000000000000973c         db  0x58 ; 'X'
000000000000973d         db  0x47 ; 'G'
000000000000973e         db  0x0e ; '.'
000000000000973f         db  0x60 ; '`'
0000000000009740         db  0x46 ; 'F'
0000000000009741         db  0x0e ; '.'
0000000000009742         db  0x68 ; 'h'
0000000000009743         db  0x44 ; 'D'
0000000000009744         db  0x0e ; '.'
0000000000009745         db  0x70 ; 'p'
0000000000009746         db  0x58 ; 'X'
0000000000009747         db  0x0e ; '.'
0000000000009748         db  0x38 ; '8'
0000000000009749         db  0x41 ; 'A'
000000000000974a         db  0x0e ; '.'
000000000000974b         db  0x30 ; '0'
000000000000974c         db  0x41 ; 'A'
000000000000974d         db  0x0e ; '.'
000000000000974e         db  0x28 ; '('
000000000000974f         db  0x42 ; 'B'
0000000000009750         db  0x0e ; '.'
0000000000009751         db  0x20 ; ' '
0000000000009752         db  0x42 ; 'B'
0000000000009753         db  0x0e ; '.'
0000000000009754         db  0x18 ; '.'
0000000000009755         db  0x42 ; 'B'
0000000000009756         db  0x0e ; '.'
0000000000009757         db  0x10 ; '.'
0000000000009758         db  0x42 ; 'B'
0000000000009759         db  0x0e ; '.'
000000000000975a         db  0x08 ; '.'
000000000000975b         db  0x00 ; '.'
000000000000975c         dd         0x00000068                                  ; Length of the record
0000000000009760         dd         0x00000948                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009764         db         0x1c, 0xc4, 2 dup (0xff)                    ; begin 0x5b80
0000000000009768         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x5c63)
000000000000976c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000976d         db  0x42 ; 'B'
000000000000976e         db  0x0e ; '.'
000000000000976f         db  0x10 ; '.'
0000000000009770         db  0x8f ; '.'
0000000000009771         db  0x02 ; '.'
0000000000009772         db  0x42 ; 'B'
0000000000009773         db  0x0e ; '.'
0000000000009774         db  0x18 ; '.'
0000000000009775         db  0x8e ; '.'
0000000000009776         db  0x03 ; '.'
0000000000009777         db  0x49 ; 'I'
0000000000009778         db  0x0e ; '.'
0000000000009779         db  0x20 ; ' '
000000000000977a         db  0x8d ; '.'
000000000000977b         db  0x04 ; '.'
000000000000977c         db  0x42 ; 'B'
000000000000977d         db  0x0e ; '.'
000000000000977e         db  0x28 ; '('
000000000000977f         db  0x8c ; '.'
0000000000009780         db  0x05 ; '.'
0000000000009781         db  0x44 ; 'D'
0000000000009782         db  0x0e ; '.'
0000000000009783         db  0x30 ; '0'
0000000000009784         db  0x86 ; '.'
0000000000009785         db  0x06 ; '.'
0000000000009786         db  0x41 ; 'A'
0000000000009787         db  0x0e ; '.'
0000000000009788         db  0x38 ; '8'
0000000000009789         db  0x83 ; '.'
000000000000978a         db  0x07 ; '.'
000000000000978b         db  0x4d ; 'M'
000000000000978c         db  0x0e ; '.'
000000000000978d         db  0x70 ; 'p'
000000000000978e         db  0x65 ; 'e'
000000000000978f         db  0x0e ; '.'
0000000000009790         db  0x78 ; 'x'
0000000000009791         db  0x4d ; 'M'
0000000000009792         db  0x0e ; '.'
0000000000009793         db  0x80 ; '.'
0000000000009794         db  0x01 ; '.'
0000000000009795         db  0x46 ; 'F'
0000000000009796         db  0x0e ; '.'
0000000000009797         db  0x88 ; '.'
0000000000009798         db  0x01 ; '.'
0000000000009799         db  0x42 ; 'B'
000000000000979a         db  0x0e ; '.'
000000000000979b         db  0x90 ; '.'
000000000000979c         db  0x01 ; '.'
000000000000979d         db  0x5e ; '^'
000000000000979e         db  0x0e ; '.'
000000000000979f         db  0x70 ; 'p'
00000000000097a0         db  0x56 ; 'V'
00000000000097a1         db  0x0e ; '.'
00000000000097a2         db  0x78 ; 'x'
00000000000097a3         db  0x43 ; 'C'
00000000000097a4         db  0x0e ; '.'
00000000000097a5         db  0x80 ; '.'
00000000000097a6         db  0x01 ; '.'
00000000000097a7         db  0x43 ; 'C'
00000000000097a8         db  0x0e ; '.'
00000000000097a9         db  0x88 ; '.'
00000000000097aa         db  0x01 ; '.'
00000000000097ab         db  0x56 ; 'V'
00000000000097ac         db  0x0e ; '.'
00000000000097ad         db  0x90 ; '.'
00000000000097ae         db  0x01 ; '.'
00000000000097af         db  0x52 ; 'R'
00000000000097b0         db  0x0e ; '.'
00000000000097b1         db  0x70 ; 'p'
00000000000097b2         db  0x5b ; '['
00000000000097b3         db  0x0e ; '.'
00000000000097b4         db  0x38 ; '8'
00000000000097b5         db  0x41 ; 'A'
00000000000097b6         db  0x0e ; '.'
00000000000097b7         db  0x30 ; '0'
00000000000097b8         db  0x41 ; 'A'
00000000000097b9         db  0x0e ; '.'
00000000000097ba         db  0x28 ; '('
00000000000097bb         db  0x42 ; 'B'
00000000000097bc         db  0x0e ; '.'
00000000000097bd         db  0x20 ; ' '
00000000000097be         db  0x42 ; 'B'
00000000000097bf         db  0x0e ; '.'
00000000000097c0         db  0x18 ; '.'
00000000000097c1         db  0x42 ; 'B'
00000000000097c2         db  0x0e ; '.'
00000000000097c3         db  0x10 ; '.'
00000000000097c4         db  0x42 ; 'B'
00000000000097c5         db  0x0e ; '.'
00000000000097c6         db  0x08 ; '.'
00000000000097c7         db  0x00 ; '.'
00000000000097c8         dd         0x00000010                                  ; Length of the record
00000000000097cc         dd         0x000009b4                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
00000000000097d0         db         0xa0, 0xc4, 2 dup (0xff)                    ; begin 0x5c70
00000000000097d4         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x5c7a)
00000000000097d8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000097d9         align      4
00000000000097dc         dd         0x00000028                                  ; Length of the record
00000000000097e0         dd         0x000009c8                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
00000000000097e4         db         0x9c, 0xc4, 2 dup (0xff)                    ; begin 0x5c80
00000000000097e8         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x5d13)
00000000000097ec         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000097ed         db  0x48 ; 'H'
00000000000097ee         db  0x0e ; '.'
00000000000097ef         db  0x10 ; '.'
00000000000097f0         db  0x8c ; '.'
00000000000097f1         db  0x02 ; '.'
00000000000097f2         db  0x48 ; 'H'
00000000000097f3         db  0x0e ; '.'
00000000000097f4         db  0x18 ; '.'
00000000000097f5         db  0x86 ; '.'
00000000000097f6         db  0x03 ; '.'
00000000000097f7         db  0x41 ; 'A'
00000000000097f8         db  0x0e ; '.'
00000000000097f9         db  0x20 ; ' '
00000000000097fa         db  0x83 ; '.'
00000000000097fb         db  0x04 ; '.'
00000000000097fc         db  0x02 ; '.'
00000000000097fd         db  0x74 ; 't'
00000000000097fe         db  0x0e ; '.'
00000000000097ff         db  0x18 ; '.'
0000000000009800         db  0x4b ; 'K'
0000000000009801         db  0x0e ; '.'
0000000000009802         db  0x10 ; '.'
0000000000009803         db  0x42 ; 'B'
0000000000009804         db  0x0e ; '.'
0000000000009805         db  0x08 ; '.'
0000000000009806         db  0x00 ; '.'
0000000000009807         db  0x00 ; '.'
0000000000009808         dd         0x00000010                                  ; Length of the record
000000000000980c         dd         0x000009f4                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009810         db         0x10, 0xc5, 2 dup (0xff)                    ; begin 0x5d20
0000000000009814         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5d33)
0000000000009818         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009819         align      4
000000000000981c         dd         0x00000010                                  ; Length of the record
0000000000009820         dd         0x00000a08                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009824         db         0x1c, 0xc5, 2 dup (0xff)                    ; begin 0x5d40
0000000000009828         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x5d4c)
000000000000982c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000982d         align      16
0000000000009830         dd         0x00000010                                  ; Length of the record
0000000000009834         dd         0x00000a1c                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009838         db         0x18, 0xc5, 2 dup (0xff)                    ; begin 0x5d50
000000000000983c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x5d68)
0000000000009840         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009841         align      4
0000000000009844         dd         0x00000010                                  ; Length of the record
0000000000009848         dd         0x00000a30                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
000000000000984c         db         0x24, 0xc5, 2 dup (0xff)                    ; begin 0x5d70
0000000000009850         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x5d84)
0000000000009854         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009855         align      8
0000000000009858         dd         0x00000018                                  ; Length of the record
000000000000985c         dd         0x00000a44                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009860         db         0x30, 0xc5, 2 dup (0xff)                    ; begin 0x5d90
0000000000009864         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x5e1e)
0000000000009868         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009869         db  0x44 ; 'D'
000000000000986a         db  0x0e ; '.'
000000000000986b         db  0x50 ; 'P'
000000000000986c         db  0x02 ; '.'
000000000000986d         db  0x7f ; '.'
000000000000986e         db  0x0a ; '.'
000000000000986f         db  0x0e ; '.'
0000000000009870         db  0x08 ; '.'
0000000000009871         db  0x41 ; 'A'
0000000000009872         db  0x0b ; '.'
0000000000009873         db  0x00 ; '.'
0000000000009874         dd         0x00000018                                  ; Length of the record
0000000000009878         dd         0x00000a60                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
000000000000987c         db         0xa4, 0xc5, 2 dup (0xff)                    ; begin 0x5e20
0000000000009880         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x5eaa)
0000000000009884         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009885         db  0x44 ; 'D'
0000000000009886         db  0x0e ; '.'
0000000000009887         db  0x50 ; 'P'
0000000000009888         db  0x02 ; '.'
0000000000009889         db  0x7b ; '{'
000000000000988a         db  0x0a ; '.'
000000000000988b         db  0x0e ; '.'
000000000000988c         db  0x08 ; '.'
000000000000988d         db  0x41 ; 'A'
000000000000988e         db  0x0b ; '.'
000000000000988f         db  0x00 ; '.'
0000000000009890         dd         0x00000010                                  ; Length of the record
0000000000009894         dd         0x00000a7c                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009898         db         0x18, 0xc6, 2 dup (0xff)                    ; begin 0x5eb0
000000000000989c         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x5ebc)
00000000000098a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000098a1         align      4
00000000000098a4         dd         0x00000010                                  ; Length of the record
00000000000098a8         dd         0x00000a90                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
00000000000098ac         db         0x14, 0xc6, 2 dup (0xff)                    ; begin 0x5ec0
00000000000098b0         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x5ecf)
00000000000098b4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000098b5         align      8
00000000000098b8         dd         0x00000018                                  ; Length of the record
00000000000098bc         dd         0x00000aa4                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
00000000000098c0         db         0x10, 0xc6, 2 dup (0xff)                    ; begin 0x5ed0
00000000000098c4         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x5f68)
00000000000098c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000098c9         db  0x44 ; 'D'
00000000000098ca         db  0x0e ; '.'
00000000000098cb         db  0x50 ; 'P'
00000000000098cc         db  0x02 ; '.'
00000000000098cd         db  0x8e ; '.'
00000000000098ce         db  0x0a ; '.'
00000000000098cf         db  0x0e ; '.'
00000000000098d0         db  0x08 ; '.'
00000000000098d1         db  0x41 ; 'A'
00000000000098d2         db  0x0b ; '.'
00000000000098d3         db  0x00 ; '.'
00000000000098d4         dd         0x00000010                                  ; Length of the record
00000000000098d8         dd         0x00000ac0                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
00000000000098dc         db         0x94, 0xc6, 2 dup (0xff)                    ; begin 0x5f70
00000000000098e0         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x5f80)
00000000000098e4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000098e5         align      8
00000000000098e8         dd         0x00000010                                  ; Length of the record
00000000000098ec         dd         0x00000ad4                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
00000000000098f0         db         0x90, 0xc6, 2 dup (0xff)                    ; begin 0x5f80
00000000000098f4         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x5f91)
00000000000098f8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000098f9         align      4
00000000000098fc         dd         0x00000010                                  ; Length of the record
0000000000009900         dd         0x00000ae8                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009904         db         0x9c, 0xc6, 2 dup (0xff)                    ; begin 0x5fa0
0000000000009908         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x5faa)
000000000000990c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000990d         align      16
0000000000009910         dd         0x00000018                                  ; Length of the record
0000000000009914         dd         0x00000afc                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009918         db         0x98, 0xc6, 2 dup (0xff)                    ; begin 0x5fb0
000000000000991c         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x603e)
0000000000009920         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009921         db  0x44 ; 'D'
0000000000009922         db  0x0e ; '.'
0000000000009923         db  0x50 ; 'P'
0000000000009924         db  0x02 ; '.'
0000000000009925         db  0x7f ; '.'
0000000000009926         db  0x0a ; '.'
0000000000009927         db  0x0e ; '.'
0000000000009928         db  0x08 ; '.'
0000000000009929         db  0x41 ; 'A'
000000000000992a         db  0x0b ; '.'
000000000000992b         db  0x00 ; '.'
000000000000992c         dd         0x00000018                                  ; Length of the record
0000000000009930         dd         0x00000b18                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009934         db         0x0c, 0xc7, 2 dup (0xff)                    ; begin 0x6040
0000000000009938         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x60d1)
000000000000993c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000993d         db  0x44 ; 'D'
000000000000993e         db  0x0e ; '.'
000000000000993f         db  0x50 ; 'P'
0000000000009940         db  0x02 ; '.'
0000000000009941         db  0x82 ; '.'
0000000000009942         db  0x0a ; '.'
0000000000009943         db  0x0e ; '.'
0000000000009944         db  0x08 ; '.'
0000000000009945         db  0x41 ; 'A'
0000000000009946         db  0x0b ; '.'
0000000000009947         db  0x00 ; '.'
0000000000009948         dd         0x00000010                                  ; Length of the record
000000000000994c         dd         0x00000b34                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009950         db         0x90, 0xc7, 2 dup (0xff)                    ; begin 0x60e0
0000000000009954         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x60ec)
0000000000009958         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009959         align      4
000000000000995c         dd         0x00000010                                  ; Length of the record
0000000000009960         dd         0x00000b48                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009964         db         0x8c, 0xc7, 2 dup (0xff)                    ; begin 0x60f0
0000000000009968         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x6107)
000000000000996c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000996d         align      16
0000000000009970         dd         0x00000010                                  ; Length of the record
0000000000009974         dd         0x00000b5c                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009978         db         0x98, 0xc7, 2 dup (0xff)                    ; begin 0x6110
000000000000997c         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x6123)
0000000000009980         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009981         align      4
0000000000009984         dd         0x00000010                                  ; Length of the record
0000000000009988         dd         0x00000b70                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
000000000000998c         db         0xa4, 0xc7, 2 dup (0xff)                    ; begin 0x6130
0000000000009990         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x613c)
0000000000009994         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009995         align      8
0000000000009998         dd         0x00000010                                  ; Length of the record
000000000000999c         dd         0x00000b84                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
00000000000099a0         db         0xa0, 0xc7, 2 dup (0xff)                    ; begin 0x6140
00000000000099a4         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x6154)
00000000000099a8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000099a9         align      4
00000000000099ac         dd         0x00000010                                  ; Length of the record
00000000000099b0         dd         0x00000b98                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
00000000000099b4         db         0xac, 0xc7, 2 dup (0xff)                    ; begin 0x6160
00000000000099b8         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x6173)
00000000000099bc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000099bd         align      64
00000000000099c0         dd         0x00000014                                  ; Length of the record
00000000000099c4         dd         0x00000bac                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
00000000000099c8         db         0xb8, 0xc7, 2 dup (0xff)                    ; begin 0x6180
00000000000099cc         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x6198)
00000000000099d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000099d1         align      8
00000000000099d8         dd         0x00000110                                  ; Length of the record
00000000000099dc         dd         0x00000bc4                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
00000000000099e0         db         0xc0, 0xc7, 2 dup (0xff)                    ; begin 0x61a0
00000000000099e4         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x65b7)
00000000000099e8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000099e9         db  0x42 ; 'B'
00000000000099ea         db  0x0e ; '.'
00000000000099eb         db  0x10 ; '.'
00000000000099ec         db  0x8f ; '.'
00000000000099ed         db  0x02 ; '.'
00000000000099ee         db  0x42 ; 'B'
00000000000099ef         db  0x0e ; '.'
00000000000099f0         db  0x18 ; '.'
00000000000099f1         db  0x8e ; '.'
00000000000099f2         db  0x03 ; '.'
00000000000099f3         db  0x42 ; 'B'
00000000000099f4         db  0x0e ; '.'
00000000000099f5         db  0x20 ; ' '
00000000000099f6         db  0x8d ; '.'
00000000000099f7         db  0x04 ; '.'
00000000000099f8         db  0x42 ; 'B'
00000000000099f9         db  0x0e ; '.'
00000000000099fa         db  0x28 ; '('
00000000000099fb         db  0x8c ; '.'
00000000000099fc         db  0x05 ; '.'
00000000000099fd         db  0x44 ; 'D'
00000000000099fe         db  0x0e ; '.'
00000000000099ff         db  0x30 ; '0'
0000000000009a00         db  0x86 ; '.'
0000000000009a01         db  0x06 ; '.'
0000000000009a02         db  0x41 ; 'A'
0000000000009a03         db  0x0e ; '.'
0000000000009a04         db  0x38 ; '8'
0000000000009a05         db  0x83 ; '.'
0000000000009a06         db  0x07 ; '.'
0000000000009a07         db  0x4a ; 'J'
0000000000009a08         db  0x0e ; '.'
0000000000009a09         db  0x60 ; '`'
0000000000009a0a         db  0x02 ; '.'
0000000000009a0b         db  0xdd ; '.'
0000000000009a0c         db  0x0e ; '.'
0000000000009a0d         db  0x68 ; 'h'
0000000000009a0e         db  0x57 ; 'W'
0000000000009a0f         db  0x0e ; '.'
0000000000009a10         db  0x70 ; 'p'
0000000000009a11         db  0x42 ; 'B'
0000000000009a12         db  0x0e ; '.'
0000000000009a13         db  0x78 ; 'x'
0000000000009a14         db  0x42 ; 'B'
0000000000009a15         db  0x0e ; '.'
0000000000009a16         db  0x80 ; '.'
0000000000009a17         db  0x01 ; '.'
0000000000009a18         db  0x42 ; 'B'
0000000000009a19         db  0x0e ; '.'
0000000000009a1a         db  0x88 ; '.'
0000000000009a1b         db  0x01 ; '.'
0000000000009a1c         db  0x42 ; 'B'
0000000000009a1d         db  0x0e ; '.'
0000000000009a1e         db  0x90 ; '.'
0000000000009a1f         db  0x01 ; '.'
0000000000009a20         db  0x53 ; 'S'
0000000000009a21         db  0x0e ; '.'
0000000000009a22         db  0x60 ; '`'
0000000000009a23         db  0x44 ; 'D'
0000000000009a24         db  0x0a ; '.'
0000000000009a25         db  0x0e ; '.'
0000000000009a26         db  0x38 ; '8'
0000000000009a27         db  0x41 ; 'A'
0000000000009a28         db  0x0e ; '.'
0000000000009a29         db  0x30 ; '0'
0000000000009a2a         db  0x41 ; 'A'
0000000000009a2b         db  0x0e ; '.'
0000000000009a2c         db  0x28 ; '('
0000000000009a2d         db  0x42 ; 'B'
0000000000009a2e         db  0x0e ; '.'
0000000000009a2f         db  0x20 ; ' '
0000000000009a30         db  0x42 ; 'B'
0000000000009a31         db  0x0e ; '.'
0000000000009a32         db  0x18 ; '.'
0000000000009a33         db  0x42 ; 'B'
0000000000009a34         db  0x0e ; '.'
0000000000009a35         db  0x10 ; '.'
0000000000009a36         db  0x42 ; 'B'
0000000000009a37         db  0x0e ; '.'
0000000000009a38         db  0x08 ; '.'
0000000000009a39         db  0x44 ; 'D'
0000000000009a3a         db  0x0b ; '.'
0000000000009a3b         db  0x02 ; '.'
0000000000009a3c         db  0x78 ; 'x'
0000000000009a3d         db  0x0a ; '.'
0000000000009a3e         db  0x0e ; '.'
0000000000009a3f         db  0x68 ; 'h'
0000000000009a40         db  0x48 ; 'H'
0000000000009a41         db  0x0b ; '.'
0000000000009a42         db  0x5a ; 'Z'
0000000000009a43         db  0x0a ; '.'
0000000000009a44         db  0x0e ; '.'
0000000000009a45         db  0x38 ; '8'
0000000000009a46         db  0x47 ; 'G'
0000000000009a47         db  0x0e ; '.'
0000000000009a48         db  0x30 ; '0'
0000000000009a49         db  0x41 ; 'A'
0000000000009a4a         db  0x0e ; '.'
0000000000009a4b         db  0x28 ; '('
0000000000009a4c         db  0x42 ; 'B'
0000000000009a4d         db  0x0e ; '.'
0000000000009a4e         db  0x20 ; ' '
0000000000009a4f         db  0x42 ; 'B'
0000000000009a50         db  0x0e ; '.'
0000000000009a51         db  0x18 ; '.'
0000000000009a52         db  0x42 ; 'B'
0000000000009a53         db  0x0e ; '.'
0000000000009a54         db  0x10 ; '.'
0000000000009a55         db  0x42 ; 'B'
0000000000009a56         db  0x0e ; '.'
0000000000009a57         db  0x08 ; '.'
0000000000009a58         db  0x56 ; 'V'
0000000000009a59         db  0x0b ; '.'
0000000000009a5a         db  0x5e ; '^'
0000000000009a5b         db  0x0a ; '.'
0000000000009a5c         db  0x0e ; '.'
0000000000009a5d         db  0x38 ; '8'
0000000000009a5e         db  0x52 ; 'R'
0000000000009a5f         db  0x0e ; '.'
0000000000009a60         db  0x30 ; '0'
0000000000009a61         db  0x41 ; 'A'
0000000000009a62         db  0x0e ; '.'
0000000000009a63         db  0x28 ; '('
0000000000009a64         db  0x42 ; 'B'
0000000000009a65         db  0x0e ; '.'
0000000000009a66         db  0x20 ; ' '
0000000000009a67         db  0x42 ; 'B'
0000000000009a68         db  0x0e ; '.'
0000000000009a69         db  0x18 ; '.'
0000000000009a6a         db  0x42 ; 'B'
0000000000009a6b         db  0x0e ; '.'
0000000000009a6c         db  0x10 ; '.'
0000000000009a6d         db  0x42 ; 'B'
0000000000009a6e         db  0x0e ; '.'
0000000000009a6f         db  0x08 ; '.'
0000000000009a70         db  0x4f ; 'O'
0000000000009a71         db  0x0b ; '.'
0000000000009a72         db  0x62 ; 'b'
0000000000009a73         db  0x0a ; '.'
0000000000009a74         db  0x0e ; '.'
0000000000009a75         db  0x38 ; '8'
0000000000009a76         db  0x50 ; 'P'
0000000000009a77         db  0x0e ; '.'
0000000000009a78         db  0x30 ; '0'
0000000000009a79         db  0x41 ; 'A'
0000000000009a7a         db  0x0e ; '.'
0000000000009a7b         db  0x28 ; '('
0000000000009a7c         db  0x42 ; 'B'
0000000000009a7d         db  0x0e ; '.'
0000000000009a7e         db  0x20 ; ' '
0000000000009a7f         db  0x42 ; 'B'
0000000000009a80         db  0x0e ; '.'
0000000000009a81         db  0x18 ; '.'
0000000000009a82         db  0x42 ; 'B'
0000000000009a83         db  0x0e ; '.'
0000000000009a84         db  0x10 ; '.'
0000000000009a85         db  0x42 ; 'B'
0000000000009a86         db  0x0e ; '.'
0000000000009a87         db  0x08 ; '.'
0000000000009a88         db  0x55 ; 'U'
0000000000009a89         db  0x0b ; '.'
0000000000009a8a         db  0x66 ; 'f'
0000000000009a8b         db  0x0e ; '.'
0000000000009a8c         db  0x68 ; 'h'
0000000000009a8d         db  0x42 ; 'B'
0000000000009a8e         db  0x0e ; '.'
0000000000009a8f         db  0x70 ; 'p'
0000000000009a90         db  0x5c ; '\'
0000000000009a91         db  0x0e ; '.'
0000000000009a92         db  0x68 ; 'h'
0000000000009a93         db  0x41 ; 'A'
0000000000009a94         db  0x0e ; '.'
0000000000009a95         db  0x60 ; '`'
0000000000009a96         db  0x44 ; 'D'
0000000000009a97         db  0x0a ; '.'
0000000000009a98         db  0x0e ; '.'
0000000000009a99         db  0x38 ; '8'
0000000000009a9a         db  0x41 ; 'A'
0000000000009a9b         db  0x0e ; '.'
0000000000009a9c         db  0x30 ; '0'
0000000000009a9d         db  0x41 ; 'A'
0000000000009a9e         db  0x0e ; '.'
0000000000009a9f         db  0x28 ; '('
0000000000009aa0         db  0x42 ; 'B'
0000000000009aa1         db  0x0e ; '.'
0000000000009aa2         db  0x20 ; ' '
0000000000009aa3         db  0x42 ; 'B'
0000000000009aa4         db  0x0e ; '.'
0000000000009aa5         db  0x18 ; '.'
0000000000009aa6         db  0x42 ; 'B'
0000000000009aa7         db  0x0e ; '.'
0000000000009aa8         db  0x10 ; '.'
0000000000009aa9         db  0x42 ; 'B'
0000000000009aaa         db  0x0e ; '.'
0000000000009aab         db  0x08 ; '.'
0000000000009aac         db  0x45 ; 'E'
0000000000009aad         db  0x0b ; '.'
0000000000009aae         db  0x68 ; 'h'
0000000000009aaf         db  0x0a ; '.'
0000000000009ab0         db  0x0e ; '.'
0000000000009ab1         db  0x68 ; 'h'
0000000000009ab2         db  0x48 ; 'H'
0000000000009ab3         db  0x0b ; '.'
0000000000009ab4         db  0x72 ; 'r'
0000000000009ab5         db  0x0e ; '.'
0000000000009ab6         db  0x68 ; 'h'
0000000000009ab7         db  0x45 ; 'E'
0000000000009ab8         db  0x0e ; '.'
0000000000009ab9         db  0x70 ; 'p'
0000000000009aba         db  0x42 ; 'B'
0000000000009abb         db  0x0e ; '.'
0000000000009abc         db  0x78 ; 'x'
0000000000009abd         db  0x42 ; 'B'
0000000000009abe         db  0x0e ; '.'
0000000000009abf         db  0x80 ; '.'
0000000000009ac0         db  0x01 ; '.'
0000000000009ac1         db  0x5e ; '^'
0000000000009ac2         db  0x0e ; '.'
0000000000009ac3         db  0x60 ; '`'
0000000000009ac4         db  0x44 ; 'D'
0000000000009ac5         db  0x0a ; '.'
0000000000009ac6         db  0x0e ; '.'
0000000000009ac7         db  0x38 ; '8'
0000000000009ac8         db  0x41 ; 'A'
0000000000009ac9         db  0x0e ; '.'
0000000000009aca         db  0x30 ; '0'
0000000000009acb         db  0x41 ; 'A'
0000000000009acc         db  0x0e ; '.'
0000000000009acd         db  0x28 ; '('
0000000000009ace         db  0x42 ; 'B'
0000000000009acf         db  0x0e ; '.'
0000000000009ad0         db  0x20 ; ' '
0000000000009ad1         db  0x42 ; 'B'
0000000000009ad2         db  0x0e ; '.'
0000000000009ad3         db  0x18 ; '.'
0000000000009ad4         db  0x42 ; 'B'
0000000000009ad5         db  0x0e ; '.'
0000000000009ad6         db  0x10 ; '.'
0000000000009ad7         db  0x42 ; 'B'
0000000000009ad8         db  0x0e ; '.'
0000000000009ad9         db  0x08 ; '.'
0000000000009ada         db  0x41 ; 'A'
0000000000009adb         db  0x0b ; '.'
0000000000009adc         db  0x79 ; 'y'
0000000000009add         db  0x0a ; '.'
0000000000009ade         db  0x0e ; '.'
0000000000009adf         db  0x68 ; 'h'
0000000000009ae0         db  0x42 ; 'B'
0000000000009ae1         db  0x0e ; '.'
0000000000009ae2         db  0x70 ; 'p'
0000000000009ae3         db  0x42 ; 'B'
0000000000009ae4         db  0x0e ; '.'
0000000000009ae5         db  0x78 ; 'x'
0000000000009ae6         db  0x42 ; 'B'
0000000000009ae7         db  0x0e ; '.'
0000000000009ae8         db  0x80 ; '.'
0000000000009ae9         db  0x01 ; '.'
0000000000009aea         db  0x51 ; 'Q'
0000000000009aeb         db  0x0b ; '.'
0000000000009aec         dd         0x00000010                                  ; Length of the record
0000000000009af0         dd         0x00000cd8                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009af4         db         0xcc, 0xca, 2 dup (0xff)                    ; begin 0x65c0
0000000000009af8         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x65e0)
0000000000009afc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009afd         align      256
0000000000009b00         dd         0x00000018                                  ; Length of the record
0000000000009b04         dd         0x00000cec                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009b08         db         0xd8, 0xca, 2 dup (0xff)                    ; begin 0x65e0
0000000000009b0c         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x6658)
0000000000009b10         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009b11         db  0x44 ; 'D'
0000000000009b12         db  0x0e ; '.'
0000000000009b13         db  0x70 ; 'p'
0000000000009b14         db  0x02 ; '.'
0000000000009b15         db  0x60 ; '`'
0000000000009b16         db  0x0a ; '.'
0000000000009b17         db  0x0e ; '.'
0000000000009b18         db  0x08 ; '.'
0000000000009b19         db  0x41 ; 'A'
0000000000009b1a         db  0x0b ; '.'
0000000000009b1b         db  0x00 ; '.'
0000000000009b1c         dd         0x00000028                                  ; Length of the record
0000000000009b20         dd         0x00000d08                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009b24         db         0x3c, 0xcb, 2 dup (0xff)                    ; begin 0x6660
0000000000009b28         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x6735)
0000000000009b2c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009b2d         db  0x41 ; 'A'
0000000000009b2e         db  0x0e ; '.'
0000000000009b2f         db  0x10 ; '.'
0000000000009b30         db  0x86 ; '.'
0000000000009b31         db  0x02 ; '.'
0000000000009b32         db  0x41 ; 'A'
0000000000009b33         db  0x0e ; '.'
0000000000009b34         db  0x18 ; '.'
0000000000009b35         db  0x83 ; '.'
0000000000009b36         db  0x03 ; '.'
0000000000009b37         db  0x50 ; 'P'
0000000000009b38         db  0x0e ; '.'
0000000000009b39         db  0xd0 ; '.'
0000000000009b3a         db  0x01 ; '.'
0000000000009b3b         db  0x02 ; '.'
0000000000009b3c         db  0xab ; '.'
0000000000009b3d         db  0x0a ; '.'
0000000000009b3e         db  0x0e ; '.'
0000000000009b3f         db  0x18 ; '.'
0000000000009b40         db  0x41 ; 'A'
0000000000009b41         db  0x0e ; '.'
0000000000009b42         db  0x10 ; '.'
0000000000009b43         db  0x41 ; 'A'
0000000000009b44         db  0x0e ; '.'
0000000000009b45         db  0x08 ; '.'
0000000000009b46         db  0x41 ; 'A'
0000000000009b47         db  0x0b ; '.'
0000000000009b48         dd         0x0000001c                                  ; Length of the record
0000000000009b4c         dd         0x00000d34                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009b50         db         0xf0, 0xcb, 2 dup (0xff)                    ; begin 0x6740
0000000000009b54         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x67c0)
0000000000009b58         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009b59         db  0x41 ; 'A'
0000000000009b5a         db  0x0e ; '.'
0000000000009b5b         db  0x10 ; '.'
0000000000009b5c         db  0x83 ; '.'
0000000000009b5d         db  0x02 ; '.'
0000000000009b5e         db  0x02 ; '.'
0000000000009b5f         db  0x7a ; 'z'
0000000000009b60         db  0x0e ; '.'
0000000000009b61         db  0x08 ; '.'
0000000000009b62         db  0x00 ; '.'
0000000000009b63         db  0x00 ; '.'
0000000000009b64         db  0x00 ; '.'
0000000000009b65         db  0x00 ; '.'
0000000000009b66         db  0x00 ; '.'
0000000000009b67         db  0x00 ; '.'
0000000000009b68         dd         0x00000018                                  ; Length of the record
0000000000009b6c         dd         0x00000d54                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009b70         db         0x50, 0xcc, 2 dup (0xff)                    ; begin 0x67c0
0000000000009b74         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x67da)
0000000000009b78         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009b79         db  0x41 ; 'A'
0000000000009b7a         db  0x0e ; '.'
0000000000009b7b         db  0x10 ; '.'
0000000000009b7c         db  0x83 ; '.'
0000000000009b7d         db  0x02 ; '.'
0000000000009b7e         db  0x53 ; 'S'
0000000000009b7f         db  0x0a ; '.'
0000000000009b80         db  0x0e ; '.'
0000000000009b81         db  0x08 ; '.'
0000000000009b82         db  0x41 ; 'A'
0000000000009b83         db  0x0b ; '.'
0000000000009b84         dd         0x00000010                                  ; Length of the record
0000000000009b88         dd         0x00000d70                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009b8c         db         0x54, 0xcc, 2 dup (0xff)                    ; begin 0x67e0
0000000000009b90         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x6804)
0000000000009b94         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009b95         db  0x5f ; '_'
0000000000009b96         db  0x0e ; '.'
0000000000009b97         db  0x10 ; '.'
0000000000009b98         dd         0x00000010                                  ; Length of the record
0000000000009b9c         dd         0x00000d84                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009ba0         db         0x70, 0xcc, 2 dup (0xff)                    ; begin 0x6810
0000000000009ba4         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x6812)
0000000000009ba8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009ba9         align      4
0000000000009bac         dd         0x00000020                                  ; Length of the record
0000000000009bb0         dd         0x00000d98                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009bb4         db         0x6c, 0xcc, 2 dup (0xff)                    ; begin 0x6820
0000000000009bb8         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x6856)
0000000000009bbc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009bbd         db  0x44 ; 'D'
0000000000009bbe         db  0x0e ; '.'
0000000000009bbf         db  0x10 ; '.'
0000000000009bc0         db  0x83 ; '.'
0000000000009bc1         db  0x02 ; '.'
0000000000009bc2         db  0x5d ; ']'
0000000000009bc3         db  0x0a ; '.'
0000000000009bc4         db  0x0e ; '.'
0000000000009bc5         db  0x08 ; '.'
0000000000009bc6         db  0x47 ; 'G'
0000000000009bc7         db  0x0b ; '.'
0000000000009bc8         db  0x48 ; 'H'
0000000000009bc9         db  0x0a ; '.'
0000000000009bca         db  0x0e ; '.'
0000000000009bcb         db  0x08 ; '.'
0000000000009bcc         db  0x41 ; 'A'
0000000000009bcd         db  0x0b ; '.'
0000000000009bce         db  0x00 ; '.'
0000000000009bcf         db  0x00 ; '.'
0000000000009bd0         dd         0x00000010                                  ; Length of the record
0000000000009bd4         dd         0x00000dbc                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009bd8         db         0x88, 0xcc, 2 dup (0xff)                    ; begin 0x6860
0000000000009bdc         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x6884)
0000000000009be0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009be1         db  0x5f ; '_'
0000000000009be2         db  0x0e ; '.'
0000000000009be3         db  0x10 ; '.'
0000000000009be4         dd         0x00000014                                  ; Length of the record
0000000000009be8         dd         0x00000dd0                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009bec         db         0xa4, 0xcc, 2 dup (0xff)                    ; begin 0x6890
0000000000009bf0         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x6912)
0000000000009bf4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009bf5         db  0x02 ; '.'
0000000000009bf6         db  0x5f ; '_'
0000000000009bf7         db  0x0e ; '.'
0000000000009bf8         db  0x10 ; '.'
0000000000009bf9         db  0x49 ; 'I'
0000000000009bfa         db  0x0e ; '.'
0000000000009bfb         db  0x08 ; '.'
0000000000009bfc         dd         0x00000014                                  ; Length of the record
0000000000009c00         dd         0x00000de8                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009c04         db         0x1c, 0xcd, 2 dup (0xff)                    ; begin 0x6920
0000000000009c08         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x696a)
0000000000009c0c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009c0d         db  0x02 ; '.'
0000000000009c0e         db  0x45 ; 'E'
0000000000009c0f         db  0x0e ; '.'
0000000000009c10         db  0x10 ; '.'
0000000000009c11         db  0x00 ; '.'
0000000000009c12         db  0x00 ; '.'
0000000000009c13         db  0x00 ; '.'
0000000000009c14         dd         0x00000018                                  ; Length of the record
0000000000009c18         dd         0x00000e00                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009c1c         db         0x54, 0xcd, 2 dup (0xff)                    ; begin 0x6970
0000000000009c20         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x6987)
0000000000009c24         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009c25         db  0x41 ; 'A'
0000000000009c26         db  0x0e ; '.'
0000000000009c27         db  0x10 ; '.'
0000000000009c28         db  0x83 ; '.'
0000000000009c29         db  0x02 ; '.'
0000000000009c2a         db  0x51 ; 'Q'
0000000000009c2b         db  0x0e ; '.'
0000000000009c2c         db  0x08 ; '.'
0000000000009c2d         db  0x00 ; '.'
0000000000009c2e         db  0x00 ; '.'
0000000000009c2f         db  0x00 ; '.'
0000000000009c30         dd         0x00000018                                  ; Length of the record
0000000000009c34         dd         0x00000e1c                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009c38         db         0x58, 0xcd, 2 dup (0xff)                    ; begin 0x6990
0000000000009c3c         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x69be)
0000000000009c40         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009c41         db  0x47 ; 'G'
0000000000009c42         db  0x0e ; '.'
0000000000009c43         db  0x10 ; '.'
0000000000009c44         db  0x61 ; 'a'
0000000000009c45         db  0x0a ; '.'
0000000000009c46         db  0x0e ; '.'
0000000000009c47         db  0x08 ; '.'
0000000000009c48         db  0x41 ; 'A'
0000000000009c49         db  0x0b ; '.'
0000000000009c4a         db  0x00 ; '.'
0000000000009c4b         db  0x00 ; '.'
0000000000009c4c         dd         0x00000024                                  ; Length of the record
0000000000009c50         dd         0x00000e38                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009c54         db         0x6c, 0xcd, 2 dup (0xff)                    ; begin 0x69c0
0000000000009c58         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x69e8)
0000000000009c5c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009c5d         db  0x41 ; 'A'
0000000000009c5e         db  0x0e ; '.'
0000000000009c5f         db  0x10 ; '.'
0000000000009c60         db  0x86 ; '.'
0000000000009c61         db  0x02 ; '.'
0000000000009c62         db  0x41 ; 'A'
0000000000009c63         db  0x0e ; '.'
0000000000009c64         db  0x18 ; '.'
0000000000009c65         db  0x83 ; '.'
0000000000009c66         db  0x03 ; '.'
0000000000009c67         db  0x4d ; 'M'
0000000000009c68         db  0x0e ; '.'
0000000000009c69         db  0x20 ; ' '
0000000000009c6a         db  0x49 ; 'I'
0000000000009c6b         db  0x0e ; '.'
0000000000009c6c         db  0x18 ; '.'
0000000000009c6d         db  0x47 ; 'G'
0000000000009c6e         db  0x0e ; '.'
0000000000009c6f         db  0x10 ; '.'
0000000000009c70         db  0x41 ; 'A'
0000000000009c71         db  0x0e ; '.'
0000000000009c72         db  0x08 ; '.'
0000000000009c73         db  0x00 ; '.'
0000000000009c74         dd         0x00000018                                  ; Length of the record
0000000000009c78         dd         0x00000e60                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009c7c         db         0x74, 0xcd, 2 dup (0xff)                    ; begin 0x69f0
0000000000009c80         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x6a03)
0000000000009c84         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009c85         db  0x41 ; 'A'
0000000000009c86         db  0x0e ; '.'
0000000000009c87         db  0x10 ; '.'
0000000000009c88         db  0x83 ; '.'
0000000000009c89         db  0x02 ; '.'
0000000000009c8a         db  0x50 ; 'P'
0000000000009c8b         db  0x0e ; '.'
0000000000009c8c         db  0x08 ; '.'
0000000000009c8d         db  0x00 ; '.'
0000000000009c8e         db  0x00 ; '.'
0000000000009c8f         db  0x00 ; '.'
0000000000009c90         dd         0x00000014                                  ; Length of the record
0000000000009c94         dd         0x00000e7c                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009c98         db         0x78, 0xcd, 2 dup (0xff)                    ; begin 0x6a10
0000000000009c9c         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x6a45)
0000000000009ca0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009ca1         db  0x4b ; 'K'
0000000000009ca2         db  0x0e ; '.'
0000000000009ca3         db  0x10 ; '.'
0000000000009ca4         db  0x00 ; '.'
0000000000009ca5         db  0x00 ; '.'
0000000000009ca6         db  0x00 ; '.'
0000000000009ca7         db  0x00 ; '.'
0000000000009ca8         dd         0x00000048                                  ; Length of the record
0000000000009cac         dd         0x00000e94                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009cb0         db         0xa0, 0xcd, 2 dup (0xff)                    ; begin 0x6a50
0000000000009cb4         db         0x00, 0x01, 2 dup (0x00)                    ; length 0x100 (end at 0x6b50)
0000000000009cb8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009cb9         db  0x42 ; 'B'
0000000000009cba         db  0x0e ; '.'
0000000000009cbb         db  0x10 ; '.'
0000000000009cbc         db  0x8f ; '.'
0000000000009cbd         db  0x02 ; '.'
0000000000009cbe         db  0x42 ; 'B'
0000000000009cbf         db  0x0e ; '.'
0000000000009cc0         db  0x18 ; '.'
0000000000009cc1         db  0x8e ; '.'
0000000000009cc2         db  0x03 ; '.'
0000000000009cc3         db  0x45 ; 'E'
0000000000009cc4         db  0x0e ; '.'
0000000000009cc5         db  0x20 ; ' '
0000000000009cc6         db  0x8d ; '.'
0000000000009cc7         db  0x04 ; '.'
0000000000009cc8         db  0x42 ; 'B'
0000000000009cc9         db  0x0e ; '.'
0000000000009cca         db  0x28 ; '('
0000000000009ccb         db  0x8c ; '.'
0000000000009ccc         db  0x05 ; '.'
0000000000009ccd         db  0x44 ; 'D'
0000000000009cce         db  0x0e ; '.'
0000000000009ccf         db  0x30 ; '0'
0000000000009cd0         db  0x86 ; '.'
0000000000009cd1         db  0x06 ; '.'
0000000000009cd2         db  0x41 ; 'A'
0000000000009cd3         db  0x0e ; '.'
0000000000009cd4         db  0x38 ; '8'
0000000000009cd5         db  0x83 ; '.'
0000000000009cd6         db  0x07 ; '.'
0000000000009cd7         db  0x4e ; 'N'
0000000000009cd8         db  0x0e ; '.'
0000000000009cd9         db  0x50 ; 'P'
0000000000009cda         db  0x02 ; '.'
0000000000009cdb         db  0x9d ; '.'
0000000000009cdc         db  0x0a ; '.'
0000000000009cdd         db  0x0e ; '.'
0000000000009cde         db  0x38 ; '8'
0000000000009cdf         db  0x41 ; 'A'
0000000000009ce0         db  0x0e ; '.'
0000000000009ce1         db  0x30 ; '0'
0000000000009ce2         db  0x41 ; 'A'
0000000000009ce3         db  0x0e ; '.'
0000000000009ce4         db  0x28 ; '('
0000000000009ce5         db  0x42 ; 'B'
0000000000009ce6         db  0x0e ; '.'
0000000000009ce7         db  0x20 ; ' '
0000000000009ce8         db  0x42 ; 'B'
0000000000009ce9         db  0x0e ; '.'
0000000000009cea         db  0x18 ; '.'
0000000000009ceb         db  0x42 ; 'B'
0000000000009cec         db  0x0e ; '.'
0000000000009ced         db  0x10 ; '.'
0000000000009cee         db  0x42 ; 'B'
0000000000009cef         db  0x0e ; '.'
0000000000009cf0         db  0x08 ; '.'
0000000000009cf1         db  0x4b ; 'K'
0000000000009cf2         db  0x0b ; '.'
0000000000009cf3         db  0x00 ; '.'
0000000000009cf4         dd         0x00000018                                  ; Length of the record
0000000000009cf8         dd         0x00000ee0                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009cfc         db         0x54, 0xce, 2 dup (0xff)                    ; begin 0x6b50
0000000000009d00         db         0x21, 3 dup (0x00)                          ; length 0x21 (end at 0x6b71)
0000000000009d04         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009d05         db  0x44 ; 'D'
0000000000009d06         db  0x0e ; '.'
0000000000009d07         db  0x18 ; '.'
0000000000009d08         db  0x42 ; 'B'
0000000000009d09         db  0x0e ; '.'
0000000000009d0a         db  0x20 ; ' '
0000000000009d0b         db  0x5a ; 'Z'
0000000000009d0c         db  0x0e ; '.'
0000000000009d0d         db  0x08 ; '.'
0000000000009d0e         db  0x00 ; '.'
0000000000009d0f         db  0x00 ; '.'
0000000000009d10         dd         0x0000004c                                  ; Length of the record
0000000000009d14         dd         0x00000efc                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009d18         db         0x68, 0xce, 2 dup (0xff)                    ; begin 0x6b80
0000000000009d1c         db         0x1c, 0x04, 2 dup (0x00)                    ; length 0x41c (end at 0x6f9c)
0000000000009d20         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009d21         db  0x42 ; 'B'
0000000000009d22         db  0x0e ; '.'
0000000000009d23         db  0x10 ; '.'
0000000000009d24         db  0x8f ; '.'
0000000000009d25         db  0x02 ; '.'
0000000000009d26         db  0x42 ; 'B'
0000000000009d27         db  0x0e ; '.'
0000000000009d28         db  0x18 ; '.'
0000000000009d29         db  0x8e ; '.'
0000000000009d2a         db  0x03 ; '.'
0000000000009d2b         db  0x42 ; 'B'
0000000000009d2c         db  0x0e ; '.'
0000000000009d2d         db  0x20 ; ' '
0000000000009d2e         db  0x8d ; '.'
0000000000009d2f         db  0x04 ; '.'
0000000000009d30         db  0x42 ; 'B'
0000000000009d31         db  0x0e ; '.'
0000000000009d32         db  0x28 ; '('
0000000000009d33         db  0x8c ; '.'
0000000000009d34         db  0x05 ; '.'
0000000000009d35         db  0x41 ; 'A'
0000000000009d36         db  0x0e ; '.'
0000000000009d37         db  0x30 ; '0'
0000000000009d38         db  0x86 ; '.'
0000000000009d39         db  0x06 ; '.'
0000000000009d3a         db  0x41 ; 'A'
0000000000009d3b         db  0x0e ; '.'
0000000000009d3c         db  0x38 ; '8'
0000000000009d3d         db  0x83 ; '.'
0000000000009d3e         db  0x07 ; '.'
0000000000009d3f         db  0x44 ; 'D'
0000000000009d40         db  0x0e ; '.'
0000000000009d41         db  0x60 ; '`'
0000000000009d42         db  0x02 ; '.'
0000000000009d43         db  0xe9 ; '.'
0000000000009d44         db  0x0a ; '.'
0000000000009d45         db  0x0e ; '.'
0000000000009d46         db  0x38 ; '8'
0000000000009d47         db  0x41 ; 'A'
0000000000009d48         db  0x0e ; '.'
0000000000009d49         db  0x30 ; '0'
0000000000009d4a         db  0x41 ; 'A'
0000000000009d4b         db  0x0e ; '.'
0000000000009d4c         db  0x28 ; '('
0000000000009d4d         db  0x42 ; 'B'
0000000000009d4e         db  0x0e ; '.'
0000000000009d4f         db  0x20 ; ' '
0000000000009d50         db  0x42 ; 'B'
0000000000009d51         db  0x0e ; '.'
0000000000009d52         db  0x18 ; '.'
0000000000009d53         db  0x42 ; 'B'
0000000000009d54         db  0x0e ; '.'
0000000000009d55         db  0x10 ; '.'
0000000000009d56         db  0x42 ; 'B'
0000000000009d57         db  0x0e ; '.'
0000000000009d58         db  0x08 ; '.'
0000000000009d59         db  0x47 ; 'G'
0000000000009d5a         db  0x0b ; '.'
0000000000009d5b         db  0x00 ; '.'
0000000000009d5c         db  0x00 ; '.'
0000000000009d5d         db  0x00 ; '.'
0000000000009d5e         db  0x00 ; '.'
0000000000009d5f         db  0x00 ; '.'
0000000000009d60         dd         0x00000034                                  ; Length of the record
0000000000009d64         dd         0x00000f4c                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009d68         db         0x38, 0xd2, 2 dup (0xff)                    ; begin 0x6fa0
0000000000009d6c         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x701b)
0000000000009d70         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009d71         db  0x42 ; 'B'
0000000000009d72         db  0x0e ; '.'
0000000000009d73         db  0x10 ; '.'
0000000000009d74         db  0x8c ; '.'
0000000000009d75         db  0x02 ; '.'
0000000000009d76         db  0x41 ; 'A'
0000000000009d77         db  0x0e ; '.'
0000000000009d78         db  0x18 ; '.'
0000000000009d79         db  0x86 ; '.'
0000000000009d7a         db  0x03 ; '.'
0000000000009d7b         db  0x41 ; 'A'
0000000000009d7c         db  0x0e ; '.'
0000000000009d7d         db  0x20 ; ' '
0000000000009d7e         db  0x83 ; '.'
0000000000009d7f         db  0x04 ; '.'
0000000000009d80         db  0x7d ; '}'
0000000000009d81         db  0x0a ; '.'
0000000000009d82         db  0x0e ; '.'
0000000000009d83         db  0x18 ; '.'
0000000000009d84         db  0x41 ; 'A'
0000000000009d85         db  0x0e ; '.'
0000000000009d86         db  0x10 ; '.'
0000000000009d87         db  0x42 ; 'B'
0000000000009d88         db  0x0e ; '.'
0000000000009d89         db  0x08 ; '.'
0000000000009d8a         db  0x44 ; 'D'
0000000000009d8b         db  0x0b ; '.'
0000000000009d8c         db  0x60 ; '`'
0000000000009d8d         db  0x0a ; '.'
0000000000009d8e         db  0x0e ; '.'
0000000000009d8f         db  0x18 ; '.'
0000000000009d90         db  0x41 ; 'A'
0000000000009d91         db  0x0e ; '.'
0000000000009d92         db  0x10 ; '.'
0000000000009d93         db  0x42 ; 'B'
0000000000009d94         db  0x0e ; '.'
0000000000009d95         db  0x08 ; '.'
0000000000009d96         db  0x45 ; 'E'
0000000000009d97         db  0x0b ; '.'
0000000000009d98         dd         0x0000001c                                  ; Length of the record
0000000000009d9c         dd         0x00000f84                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009da0         db         0x80, 0xd2, 2 dup (0xff)                    ; begin 0x7020
0000000000009da4         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x7060)
0000000000009da8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009da9         db  0x44 ; 'D'
0000000000009daa         db  0x0e ; '.'
0000000000009dab         db  0x10 ; '.'
0000000000009dac         db  0x83 ; '.'
0000000000009dad         db  0x02 ; '.'
0000000000009dae         db  0x5a ; 'Z'
0000000000009daf         db  0x0a ; '.'
0000000000009db0         db  0x0e ; '.'
0000000000009db1         db  0x08 ; '.'
0000000000009db2         db  0x4a ; 'J'
0000000000009db3         db  0x0b ; '.'
0000000000009db4         db  0x53 ; 'S'
0000000000009db5         db  0x0e ; '.'
0000000000009db6         db  0x08 ; '.'
0000000000009db7         db  0x00 ; '.'
0000000000009db8         dd         0x0000002c                                  ; Length of the record
0000000000009dbc         dd         0x00000fa4                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009dc0         db         0xa0, 0xd2, 2 dup (0xff)                    ; begin 0x7060
0000000000009dc4         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x70b7)
0000000000009dc8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009dc9         db  0x63 ; 'c'
0000000000009dca         db  0x0e ; '.'
0000000000009dcb         db  0x10 ; '.'
0000000000009dcc         db  0x8c ; '.'
0000000000009dcd         db  0x02 ; '.'
0000000000009dce         db  0x41 ; 'A'
0000000000009dcf         db  0x0e ; '.'
0000000000009dd0         db  0x18 ; '.'
0000000000009dd1         db  0x86 ; '.'
0000000000009dd2         db  0x03 ; '.'
0000000000009dd3         db  0x44 ; 'D'
0000000000009dd4         db  0x0e ; '.'
0000000000009dd5         db  0x20 ; ' '
0000000000009dd6         db  0x83 ; '.'
0000000000009dd7         db  0x04 ; '.'
0000000000009dd8         db  0x6b ; 'k'
0000000000009dd9         db  0x0e ; '.'
0000000000009dda         db  0x18 ; '.'
0000000000009ddb         db  0x41 ; 'A'
0000000000009ddc         db  0x0e ; '.'
0000000000009ddd         db  0x10 ; '.'
0000000000009dde         db  0x42 ; 'B'
0000000000009ddf         db  0x0e ; '.'
0000000000009de0         db  0x08 ; '.'
0000000000009de1         db  0x00 ; '.'
0000000000009de2         db  0x00 ; '.'
0000000000009de3         db  0x00 ; '.'
0000000000009de4         db  0x00 ; '.'
0000000000009de5         db  0x00 ; '.'
0000000000009de6         db  0x00 ; '.'
0000000000009de7         db  0x00 ; '.'
0000000000009de8         dd         0x0000003c                                  ; Length of the record
0000000000009dec         dd         0x00000fd4                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009df0         db         0xd0, 0xd2, 2 dup (0xff)                    ; begin 0x70c0
0000000000009df4         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x7143)
0000000000009df8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009df9         db  0x42 ; 'B'
0000000000009dfa         db  0x0e ; '.'
0000000000009dfb         db  0x10 ; '.'
0000000000009dfc         db  0x8d ; '.'
0000000000009dfd         db  0x02 ; '.'
0000000000009dfe         db  0x42 ; 'B'
0000000000009dff         db  0x0e ; '.'
0000000000009e00         db  0x18 ; '.'
0000000000009e01         db  0x8c ; '.'
0000000000009e02         db  0x03 ; '.'
0000000000009e03         db  0x44 ; 'D'
0000000000009e04         db  0x0e ; '.'
0000000000009e05         db  0x20 ; ' '
0000000000009e06         db  0x86 ; '.'
0000000000009e07         db  0x04 ; '.'
0000000000009e08         db  0x41 ; 'A'
0000000000009e09         db  0x0e ; '.'
0000000000009e0a         db  0x28 ; '('
0000000000009e0b         db  0x83 ; '.'
0000000000009e0c         db  0x05 ; '.'
0000000000009e0d         db  0x4a ; 'J'
0000000000009e0e         db  0x0e ; '.'
0000000000009e0f         db  0x40 ; '@'
0000000000009e10         db  0x02 ; '.'
0000000000009e11         db  0x64 ; 'd'
0000000000009e12         db  0x0a ; '.'
0000000000009e13         db  0x0e ; '.'
0000000000009e14         db  0x28 ; '('
0000000000009e15         db  0x41 ; 'A'
0000000000009e16         db  0x0e ; '.'
0000000000009e17         db  0x20 ; ' '
0000000000009e18         db  0x41 ; 'A'
0000000000009e19         db  0x0e ; '.'
0000000000009e1a         db  0x18 ; '.'
0000000000009e1b         db  0x42 ; 'B'
0000000000009e1c         db  0x0e ; '.'
0000000000009e1d         db  0x10 ; '.'
0000000000009e1e         db  0x42 ; 'B'
0000000000009e1f         db  0x0e ; '.'
0000000000009e20         db  0x08 ; '.'
0000000000009e21         db  0x41 ; 'A'
0000000000009e22         db  0x0b ; '.'
0000000000009e23         db  0x00 ; '.'
0000000000009e24         db  0x00 ; '.'
0000000000009e25         db  0x00 ; '.'
0000000000009e26         db  0x00 ; '.'
0000000000009e27         db  0x00 ; '.'
0000000000009e28         dd         0x0000004c                                  ; Length of the record
0000000000009e2c         dd         0x00001014                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009e30         db         0x20, 0xd3, 2 dup (0xff)                    ; begin 0x7150
0000000000009e34         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x71cd)
0000000000009e38         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009e39         db  0x42 ; 'B'
0000000000009e3a         db  0x0e ; '.'
0000000000009e3b         db  0x10 ; '.'
0000000000009e3c         db  0x8c ; '.'
0000000000009e3d         db  0x02 ; '.'
0000000000009e3e         db  0x41 ; 'A'
0000000000009e3f         db  0x0e ; '.'
0000000000009e40         db  0x18 ; '.'
0000000000009e41         db  0x86 ; '.'
0000000000009e42         db  0x03 ; '.'
0000000000009e43         db  0x44 ; 'D'
0000000000009e44         db  0x0e ; '.'
0000000000009e45         db  0x20 ; ' '
0000000000009e46         db  0x83 ; '.'
0000000000009e47         db  0x04 ; '.'
0000000000009e48         db  0x69 ; 'i'
0000000000009e49         db  0x0a ; '.'
0000000000009e4a         db  0x0e ; '.'
0000000000009e4b         db  0x18 ; '.'
0000000000009e4c         db  0x41 ; 'A'
0000000000009e4d         db  0x0e ; '.'
0000000000009e4e         db  0x10 ; '.'
0000000000009e4f         db  0x42 ; 'B'
0000000000009e50         db  0x0e ; '.'
0000000000009e51         db  0x08 ; '.'
0000000000009e52         db  0x45 ; 'E'
0000000000009e53         db  0x0b ; '.'
0000000000009e54         db  0x55 ; 'U'
0000000000009e55         db  0x0a ; '.'
0000000000009e56         db  0x0e ; '.'
0000000000009e57         db  0x18 ; '.'
0000000000009e58         db  0x41 ; 'A'
0000000000009e59         db  0x0e ; '.'
0000000000009e5a         db  0x10 ; '.'
0000000000009e5b         db  0x42 ; 'B'
0000000000009e5c         db  0x0e ; '.'
0000000000009e5d         db  0x08 ; '.'
0000000000009e5e         db  0x48 ; 'H'
0000000000009e5f         db  0x0b ; '.'
0000000000009e60         db  0x41 ; 'A'
0000000000009e61         db  0x0a ; '.'
0000000000009e62         db  0x0e ; '.'
0000000000009e63         db  0x18 ; '.'
0000000000009e64         db  0x46 ; 'F'
0000000000009e65         db  0x0e ; '.'
0000000000009e66         db  0x10 ; '.'
0000000000009e67         db  0x42 ; 'B'
0000000000009e68         db  0x0e ; '.'
0000000000009e69         db  0x08 ; '.'
0000000000009e6a         db  0x47 ; 'G'
0000000000009e6b         db  0x0b ; '.'
0000000000009e6c         db  0x49 ; 'I'
0000000000009e6d         db  0x0e ; '.'
0000000000009e6e         db  0x18 ; '.'
0000000000009e6f         db  0x41 ; 'A'
0000000000009e70         db  0x0e ; '.'
0000000000009e71         db  0x10 ; '.'
0000000000009e72         db  0x42 ; 'B'
0000000000009e73         db  0x0e ; '.'
0000000000009e74         db  0x08 ; '.'
0000000000009e75         db  0x00 ; '.'
0000000000009e76         db  0x00 ; '.'
0000000000009e77         db  0x00 ; '.'
0000000000009e78         dd         0x0000001c                                  ; Length of the record
0000000000009e7c         dd         0x00001064                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009e80         db         0x50, 0xd3, 2 dup (0xff)                    ; begin 0x71d0
0000000000009e84         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x7230)
0000000000009e88         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009e89         db  0x44 ; 'D'
0000000000009e8a         db  0x0e ; '.'
0000000000009e8b         db  0x10 ; '.'
0000000000009e8c         db  0x75 ; 'u'
0000000000009e8d         db  0x0a ; '.'
0000000000009e8e         db  0x0e ; '.'
0000000000009e8f         db  0x08 ; '.'
0000000000009e90         db  0x47 ; 'G'
0000000000009e91         db  0x0b ; '.'
0000000000009e92         db  0x5f ; '_'
0000000000009e93         db  0x0e ; '.'
0000000000009e94         db  0x08 ; '.'
0000000000009e95         db  0x00 ; '.'
0000000000009e96         db  0x00 ; '.'
0000000000009e97         db  0x00 ; '.'
0000000000009e98         dd         0x0000001c                                  ; Length of the record
0000000000009e9c         dd         0x00001084                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009ea0         db         0x90, 0xd3, 2 dup (0xff)                    ; begin 0x7230
0000000000009ea4         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x726c)
0000000000009ea8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009ea9         db  0x44 ; 'D'
0000000000009eaa         db  0x0e ; '.'
0000000000009eab         db  0x10 ; '.'
0000000000009eac         db  0x61 ; 'a'
0000000000009ead         db  0x0a ; '.'
0000000000009eae         db  0x0e ; '.'
0000000000009eaf         db  0x08 ; '.'
0000000000009eb0         db  0x4b ; 'K'
0000000000009eb1         db  0x0b ; '.'
0000000000009eb2         db  0x4b ; 'K'
0000000000009eb3         db  0x0e ; '.'
0000000000009eb4         db  0x08 ; '.'
0000000000009eb5         db  0x00 ; '.'
0000000000009eb6         db  0x00 ; '.'
0000000000009eb7         db  0x00 ; '.'
0000000000009eb8         dd         0x00000044                                  ; Length of the record
0000000000009ebc         dd         0x000010a4                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009ec0         db         0xb0, 0xd3, 2 dup (0xff)                    ; begin 0x7270
0000000000009ec4         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x72d5)
0000000000009ec8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009ec9         db  0x42 ; 'B'
0000000000009eca         db  0x0e ; '.'
0000000000009ecb         db  0x10 ; '.'
0000000000009ecc         db  0x8f ; '.'
0000000000009ecd         db  0x02 ; '.'
0000000000009ece         db  0x42 ; 'B'
0000000000009ecf         db  0x0e ; '.'
0000000000009ed0         db  0x18 ; '.'
0000000000009ed1         db  0x8e ; '.'
0000000000009ed2         db  0x03 ; '.'
0000000000009ed3         db  0x45 ; 'E'
0000000000009ed4         db  0x0e ; '.'
0000000000009ed5         db  0x20 ; ' '
0000000000009ed6         db  0x8d ; '.'
0000000000009ed7         db  0x04 ; '.'
0000000000009ed8         db  0x42 ; 'B'
0000000000009ed9         db  0x0e ; '.'
0000000000009eda         db  0x28 ; '('
0000000000009edb         db  0x8c ; '.'
0000000000009edc         db  0x05 ; '.'
0000000000009edd         db  0x48 ; 'H'
0000000000009ede         db  0x0e ; '.'
0000000000009edf         db  0x30 ; '0'
0000000000009ee0         db  0x86 ; '.'
0000000000009ee1         db  0x06 ; '.'
0000000000009ee2         db  0x48 ; 'H'
0000000000009ee3         db  0x0e ; '.'
0000000000009ee4         db  0x38 ; '8'
0000000000009ee5         db  0x83 ; '.'
0000000000009ee6         db  0x07 ; '.'
0000000000009ee7         db  0x4d ; 'M'
0000000000009ee8         db  0x0e ; '.'
0000000000009ee9         db  0x40 ; '@'
0000000000009eea         db  0x72 ; 'r'
0000000000009eeb         db  0x0e ; '.'
0000000000009eec         db  0x38 ; '8'
0000000000009eed         db  0x41 ; 'A'
0000000000009eee         db  0x0e ; '.'
0000000000009eef         db  0x30 ; '0'
0000000000009ef0         db  0x41 ; 'A'
0000000000009ef1         db  0x0e ; '.'
0000000000009ef2         db  0x28 ; '('
0000000000009ef3         db  0x42 ; 'B'
0000000000009ef4         db  0x0e ; '.'
0000000000009ef5         db  0x20 ; ' '
0000000000009ef6         db  0x42 ; 'B'
0000000000009ef7         db  0x0e ; '.'
0000000000009ef8         db  0x18 ; '.'
0000000000009ef9         db  0x42 ; 'B'
0000000000009efa         db  0x0e ; '.'
0000000000009efb         db  0x10 ; '.'
0000000000009efc         db  0x42 ; 'B'
0000000000009efd         db  0x0e ; '.'
0000000000009efe         db  0x08 ; '.'
0000000000009eff         db  0x00 ; '.'
0000000000009f00         dd         0x00000014                                  ; Length of the record
0000000000009f04         dd         0x000010ec                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009f08         db         0xd8, 0xd3, 2 dup (0xff)                    ; begin 0x72e0
0000000000009f0c         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x72e2)
0000000000009f10         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009f11         align      8
0000000000009f18         dd         0x00000010                                  ; Length of the record
0000000000009f1c         dd         0x00001104                                  ; FDE: parent CIE at 0x8e18 (FDE encoding = 0x1B)
0000000000009f20         db         0xd0, 0xd3, 2 dup (0xff)                    ; begin 0x72f0
0000000000009f24         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x72fe)
0000000000009f28         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009f29         align      16


        ; Segment Segment 3
        ; Range: [0x20aa10; 0x20b258[ (2120 bytes)
        ; File offset : [43536; 45184[ (1648 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x20aa10; 0x20aa18[ (8 bytes)
        ; File offset : [43536; 43544[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
000000000020aa10         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x20aa18; 0x20aa20[ (8 bytes)
        ; File offset : [43544; 43552[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
000000000020aa18         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x20aa20; 0x20ac38[ (536 bytes)
        ; File offset : [43552; 44088[ (536 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     long_options:
000000000020aa20         db  0xcf ; '.'                                         ; DATA XREF=main+123
000000000020aa21         db  0x74 ; 't'
000000000020aa22         db  0x00 ; '.'
000000000020aa23         db  0x00 ; '.'
000000000020aa24         db  0x00 ; '.'
000000000020aa25         db  0x00 ; '.'
000000000020aa26         db  0x00 ; '.'
000000000020aa27         db  0x00 ; '.'
000000000020aa28         db  0x00 ; '.'
000000000020aa29         db  0x00 ; '.'
000000000020aa2a         db  0x00 ; '.'
000000000020aa2b         db  0x00 ; '.'
000000000020aa2c         db  0x00 ; '.'
000000000020aa2d         db  0x00 ; '.'
000000000020aa2e         db  0x00 ; '.'
000000000020aa2f         db  0x00 ; '.'
000000000020aa30         db  0x00 ; '.'
000000000020aa31         db  0x00 ; '.'
000000000020aa32         db  0x00 ; '.'
000000000020aa33         db  0x00 ; '.'
000000000020aa34         db  0x00 ; '.'
000000000020aa35         db  0x00 ; '.'
000000000020aa36         db  0x00 ; '.'
000000000020aa37         db  0x00 ; '.'
000000000020aa38         db  0x64 ; 'd'
000000000020aa39         db  0x00 ; '.'
000000000020aa3a         db  0x00 ; '.'
000000000020aa3b         db  0x00 ; '.'
000000000020aa3c         db  0x00 ; '.'
000000000020aa3d         db  0x00 ; '.'
000000000020aa3e         db  0x00 ; '.'
000000000020aa3f         db  0x00 ; '.'
000000000020aa40         db  0xd6 ; '.'
000000000020aa41         db  0x74 ; 't'
000000000020aa42         db  0x00 ; '.'
000000000020aa43         db  0x00 ; '.'
000000000020aa44         db  0x00 ; '.'
000000000020aa45         db  0x00 ; '.'
000000000020aa46         db  0x00 ; '.'
000000000020aa47         db  0x00 ; '.'
000000000020aa48         db  0x01 ; '.'
000000000020aa49         db  0x00 ; '.'
000000000020aa4a         db  0x00 ; '.'
000000000020aa4b         db  0x00 ; '.'
000000000020aa4c         db  0x00 ; '.'
000000000020aa4d         db  0x00 ; '.'
000000000020aa4e         db  0x00 ; '.'
000000000020aa4f         db  0x00 ; '.'
000000000020aa50         db  0x00 ; '.'
000000000020aa51         db  0x00 ; '.'
000000000020aa52         db  0x00 ; '.'
000000000020aa53         db  0x00 ; '.'
000000000020aa54         db  0x00 ; '.'
000000000020aa55         db  0x00 ; '.'
000000000020aa56         db  0x00 ; '.'
000000000020aa57         db  0x00 ; '.'
000000000020aa58         db  0x77 ; 'w'
000000000020aa59         db  0x00 ; '.'
000000000020aa5a         db  0x00 ; '.'
000000000020aa5b         db  0x00 ; '.'
000000000020aa5c         db  0x00 ; '.'
000000000020aa5d         db  0x00 ; '.'
000000000020aa5e         db  0x00 ; '.'
000000000020aa5f         db  0x00 ; '.'
000000000020aa60         db  0xdb ; '.'
000000000020aa61         db  0x74 ; 't'
000000000020aa62         db  0x00 ; '.'
000000000020aa63         db  0x00 ; '.'
000000000020aa64         db  0x00 ; '.'
000000000020aa65         db  0x00 ; '.'
000000000020aa66         db  0x00 ; '.'
000000000020aa67         db  0x00 ; '.'
000000000020aa68         db  0x00 ; '.'
000000000020aa69         db  0x00 ; '.'
000000000020aa6a         db  0x00 ; '.'
000000000020aa6b         db  0x00 ; '.'
000000000020aa6c         db  0x00 ; '.'
000000000020aa6d         db  0x00 ; '.'
000000000020aa6e         db  0x00 ; '.'
000000000020aa6f         db  0x00 ; '.'
000000000020aa70         db  0x00 ; '.'
000000000020aa71         db  0x00 ; '.'
000000000020aa72         db  0x00 ; '.'
000000000020aa73         db  0x00 ; '.'
000000000020aa74         db  0x00 ; '.'
000000000020aa75         db  0x00 ; '.'
000000000020aa76         db  0x00 ; '.'
000000000020aa77         db  0x00 ; '.'
000000000020aa78         db  0x69 ; 'i'
000000000020aa79         db  0x00 ; '.'
000000000020aa7a         db  0x00 ; '.'
000000000020aa7b         db  0x00 ; '.'
000000000020aa7c         db  0x00 ; '.'
000000000020aa7d         db  0x00 ; '.'
000000000020aa7e         db  0x00 ; '.'
000000000020aa7f         db  0x00 ; '.'
000000000020aa80         db  0xea ; '.'
000000000020aa81         db  0x74 ; 't'
000000000020aa82         db  0x00 ; '.'
000000000020aa83         db  0x00 ; '.'
000000000020aa84         db  0x00 ; '.'
000000000020aa85         db  0x00 ; '.'
000000000020aa86         db  0x00 ; '.'
000000000020aa87         db  0x00 ; '.'
000000000020aa88         db  0x00 ; '.'
000000000020aa89         db  0x00 ; '.'
000000000020aa8a         db  0x00 ; '.'
000000000020aa8b         db  0x00 ; '.'
000000000020aa8c         db  0x00 ; '.'
000000000020aa8d         db  0x00 ; '.'
000000000020aa8e         db  0x00 ; '.'
000000000020aa8f         db  0x00 ; '.'
000000000020aa90         db  0x00 ; '.'
000000000020aa91         db  0x00 ; '.'
000000000020aa92         db  0x00 ; '.'
000000000020aa93         db  0x00 ; '.'
000000000020aa94         db  0x00 ; '.'
000000000020aa95         db  0x00 ; '.'
000000000020aa96         db  0x00 ; '.'
000000000020aa97         db  0x00 ; '.'
000000000020aa98         db  0x80 ; '.'
000000000020aa99         db  0x00 ; '.'
000000000020aa9a         db  0x00 ; '.'
000000000020aa9b         db  0x00 ; '.'
000000000020aa9c         db  0x00 ; '.'
000000000020aa9d         db  0x00 ; '.'
000000000020aa9e         db  0x00 ; '.'
000000000020aa9f         db  0x00 ; '.'
000000000020aaa0         db  0xf1 ; '.'
000000000020aaa1         db  0x74 ; 't'
000000000020aaa2         db  0x00 ; '.'
000000000020aaa3         db  0x00 ; '.'
000000000020aaa4         db  0x00 ; '.'
000000000020aaa5         db  0x00 ; '.'
000000000020aaa6         db  0x00 ; '.'
000000000020aaa7         db  0x00 ; '.'
000000000020aaa8         db  0x00 ; '.'
000000000020aaa9         db  0x00 ; '.'
000000000020aaaa         db  0x00 ; '.'
000000000020aaab         db  0x00 ; '.'
000000000020aaac         db  0x00 ; '.'
000000000020aaad         db  0x00 ; '.'
000000000020aaae         db  0x00 ; '.'
000000000020aaaf         db  0x00 ; '.'
000000000020aab0         db  0x00 ; '.'
000000000020aab1         db  0x00 ; '.'
000000000020aab2         db  0x00 ; '.'
000000000020aab3         db  0x00 ; '.'
000000000020aab4         db  0x00 ; '.'
000000000020aab5         db  0x00 ; '.'
000000000020aab6         db  0x00 ; '.'
000000000020aab7         db  0x00 ; '.'
000000000020aab8         db  0x81 ; '.'
000000000020aab9         db  0x00 ; '.'
000000000020aaba         db  0x00 ; '.'
000000000020aabb         db  0x00 ; '.'
000000000020aabc         db  0x00 ; '.'
000000000020aabd         db  0x00 ; '.'
000000000020aabe         db  0x00 ; '.'
000000000020aabf         db  0x00 ; '.'
000000000020aac0         db  0xfb ; '.'
000000000020aac1         db  0x74 ; 't'
000000000020aac2         db  0x00 ; '.'
000000000020aac3         db  0x00 ; '.'
000000000020aac4         db  0x00 ; '.'
000000000020aac5         db  0x00 ; '.'
000000000020aac6         db  0x00 ; '.'
000000000020aac7         db  0x00 ; '.'
000000000020aac8         db  0x00 ; '.'
000000000020aac9         db  0x00 ; '.'
000000000020aaca         db  0x00 ; '.'
000000000020aacb         db  0x00 ; '.'
000000000020aacc         db  0x00 ; '.'
000000000020aacd         db  0x00 ; '.'
000000000020aace         db  0x00 ; '.'
000000000020aacf         db  0x00 ; '.'
000000000020aad0         db  0x00 ; '.'
000000000020aad1         db  0x00 ; '.'
000000000020aad2         db  0x00 ; '.'
000000000020aad3         db  0x00 ; '.'
000000000020aad4         db  0x00 ; '.'
000000000020aad5         db  0x00 ; '.'
000000000020aad6         db  0x00 ; '.'
000000000020aad7         db  0x00 ; '.'
000000000020aad8         db  0x82 ; '.'
000000000020aad9         db  0x00 ; '.'
000000000020aada         db  0x00 ; '.'
000000000020aadb         db  0x00 ; '.'
000000000020aadc         db  0x00 ; '.'
000000000020aadd         db  0x00 ; '.'
000000000020aade         db  0x00 ; '.'
000000000020aadf         db  0x00 ; '.'
000000000020aae0         db  0x02 ; '.'
000000000020aae1         db  0x75 ; 'u'
000000000020aae2         db  0x00 ; '.'
000000000020aae3         db  0x00 ; '.'
000000000020aae4         db  0x00 ; '.'
000000000020aae5         db  0x00 ; '.'
000000000020aae6         db  0x00 ; '.'
000000000020aae7         db  0x00 ; '.'
000000000020aae8         db  0x00 ; '.'
000000000020aae9         db  0x00 ; '.'
000000000020aaea         db  0x00 ; '.'
000000000020aaeb         db  0x00 ; '.'
000000000020aaec         db  0x00 ; '.'
000000000020aaed         db  0x00 ; '.'
000000000020aaee         db  0x00 ; '.'
000000000020aaef         db  0x00 ; '.'
000000000020aaf0         db  0x00 ; '.'
000000000020aaf1         db  0x00 ; '.'
000000000020aaf2         db  0x00 ; '.'
000000000020aaf3         db  0x00 ; '.'
000000000020aaf4         db  0x00 ; '.'
000000000020aaf5         db  0x00 ; '.'
000000000020aaf6         db  0x00 ; '.'
000000000020aaf7         db  0x00 ; '.'
000000000020aaf8         db  0x83 ; '.'
000000000020aaf9         db  0x00 ; '.'
000000000020aafa         db  0x00 ; '.'
000000000020aafb         db  0x00 ; '.'
000000000020aafc         db  0x00 ; '.'
000000000020aafd         db  0x00 ; '.'
000000000020aafe         db  0x00 ; '.'
000000000020aaff         db  0x00 ; '.'
000000000020ab00         db  0x0c ; '.'
000000000020ab01         db  0x75 ; 'u'
000000000020ab02         db  0x00 ; '.'
000000000020ab03         db  0x00 ; '.'
000000000020ab04         db  0x00 ; '.'
000000000020ab05         db  0x00 ; '.'
000000000020ab06         db  0x00 ; '.'
000000000020ab07         db  0x00 ; '.'
000000000020ab08         db  0x00 ; '.'
000000000020ab09         db  0x00 ; '.'
000000000020ab0a         db  0x00 ; '.'
000000000020ab0b         db  0x00 ; '.'
000000000020ab0c         db  0x00 ; '.'
000000000020ab0d         db  0x00 ; '.'
000000000020ab0e         db  0x00 ; '.'
000000000020ab0f         db  0x00 ; '.'
000000000020ab10         db  0x00 ; '.'
000000000020ab11         db  0x00 ; '.'
000000000020ab12         db  0x00 ; '.'
000000000020ab13         db  0x00 ; '.'
000000000020ab14         db  0x00 ; '.'
000000000020ab15         db  0x00 ; '.'
000000000020ab16         db  0x00 ; '.'
000000000020ab17         db  0x00 ; '.'
000000000020ab18         db  0x84 ; '.'
000000000020ab19         db  0x00 ; '.'
000000000020ab1a         db  0x00 ; '.'
000000000020ab1b         db  0x00 ; '.'
000000000020ab1c         db  0x00 ; '.'
000000000020ab1d         db  0x00 ; '.'
000000000020ab1e         db  0x00 ; '.'
000000000020ab1f         db  0x00 ; '.'
000000000020ab20         db  0x13 ; '.'
000000000020ab21         db  0x75 ; 'u'
000000000020ab22         db  0x00 ; '.'
000000000020ab23         db  0x00 ; '.'
000000000020ab24         db  0x00 ; '.'
000000000020ab25         db  0x00 ; '.'
000000000020ab26         db  0x00 ; '.'
000000000020ab27         db  0x00 ; '.'
000000000020ab28         db  0x00 ; '.'
000000000020ab29         db  0x00 ; '.'
000000000020ab2a         db  0x00 ; '.'
000000000020ab2b         db  0x00 ; '.'
000000000020ab2c         db  0x00 ; '.'
000000000020ab2d         db  0x00 ; '.'
000000000020ab2e         db  0x00 ; '.'
000000000020ab2f         db  0x00 ; '.'
000000000020ab30         db  0x00 ; '.'
000000000020ab31         db  0x00 ; '.'
000000000020ab32         db  0x00 ; '.'
000000000020ab33         db  0x00 ; '.'
000000000020ab34         db  0x00 ; '.'
000000000020ab35         db  0x00 ; '.'
000000000020ab36         db  0x00 ; '.'
000000000020ab37         db  0x00 ; '.'
000000000020ab38         db  0x85 ; '.'
000000000020ab39         db  0x00 ; '.'
000000000020ab3a         db  0x00 ; '.'
000000000020ab3b         db  0x00 ; '.'
000000000020ab3c         db  0x00 ; '.'
000000000020ab3d         db  0x00 ; '.'
000000000020ab3e         db  0x00 ; '.'
000000000020ab3f         db  0x00 ; '.'
000000000020ab40         db  0x1d ; '.'
000000000020ab41         db  0x75 ; 'u'
000000000020ab42         db  0x00 ; '.'
000000000020ab43         db  0x00 ; '.'
000000000020ab44         db  0x00 ; '.'
000000000020ab45         db  0x00 ; '.'
000000000020ab46         db  0x00 ; '.'
000000000020ab47         db  0x00 ; '.'
000000000020ab48         db  0x00 ; '.'
000000000020ab49         db  0x00 ; '.'
000000000020ab4a         db  0x00 ; '.'
000000000020ab4b         db  0x00 ; '.'
000000000020ab4c         db  0x00 ; '.'
000000000020ab4d         db  0x00 ; '.'
000000000020ab4e         db  0x00 ; '.'
000000000020ab4f         db  0x00 ; '.'
000000000020ab50         db  0x00 ; '.'
000000000020ab51         db  0x00 ; '.'
000000000020ab52         db  0x00 ; '.'
000000000020ab53         db  0x00 ; '.'
000000000020ab54         db  0x00 ; '.'
000000000020ab55         db  0x00 ; '.'
000000000020ab56         db  0x00 ; '.'
000000000020ab57         db  0x00 ; '.'
000000000020ab58         db  0x86 ; '.'
000000000020ab59         db  0x00 ; '.'
000000000020ab5a         db  0x00 ; '.'
000000000020ab5b         db  0x00 ; '.'
000000000020ab5c         db  0x00 ; '.'
000000000020ab5d         db  0x00 ; '.'
000000000020ab5e         db  0x00 ; '.'
000000000020ab5f         db  0x00 ; '.'
000000000020ab60         db  0x27 ; '''
000000000020ab61         db  0x75 ; 'u'
000000000020ab62         db  0x00 ; '.'
000000000020ab63         db  0x00 ; '.'
000000000020ab64         db  0x00 ; '.'
000000000020ab65         db  0x00 ; '.'
000000000020ab66         db  0x00 ; '.'
000000000020ab67         db  0x00 ; '.'
000000000020ab68         db  0x00 ; '.'
000000000020ab69         db  0x00 ; '.'
000000000020ab6a         db  0x00 ; '.'
000000000020ab6b         db  0x00 ; '.'
000000000020ab6c         db  0x00 ; '.'
000000000020ab6d         db  0x00 ; '.'
000000000020ab6e         db  0x00 ; '.'
000000000020ab6f         db  0x00 ; '.'
000000000020ab70         db  0x00 ; '.'
000000000020ab71         db  0x00 ; '.'
000000000020ab72         db  0x00 ; '.'
000000000020ab73         db  0x00 ; '.'
000000000020ab74         db  0x00 ; '.'
000000000020ab75         db  0x00 ; '.'
000000000020ab76         db  0x00 ; '.'
000000000020ab77         db  0x00 ; '.'
000000000020ab78         db  0x87 ; '.'
000000000020ab79         db  0x00 ; '.'
000000000020ab7a         db  0x00 ; '.'
000000000020ab7b         db  0x00 ; '.'
000000000020ab7c         db  0x00 ; '.'
000000000020ab7d         db  0x00 ; '.'
000000000020ab7e         db  0x00 ; '.'
000000000020ab7f         db  0x00 ; '.'
000000000020ab80         db  0x2b ; '+'
000000000020ab81         db  0x75 ; 'u'
000000000020ab82         db  0x00 ; '.'
000000000020ab83         db  0x00 ; '.'
000000000020ab84         db  0x00 ; '.'
000000000020ab85         db  0x00 ; '.'
000000000020ab86         db  0x00 ; '.'
000000000020ab87         db  0x00 ; '.'
000000000020ab88         db  0x00 ; '.'
000000000020ab89         db  0x00 ; '.'
000000000020ab8a         db  0x00 ; '.'
000000000020ab8b         db  0x00 ; '.'
000000000020ab8c         db  0x00 ; '.'
000000000020ab8d         db  0x00 ; '.'
000000000020ab8e         db  0x00 ; '.'
000000000020ab8f         db  0x00 ; '.'
000000000020ab90         db  0x00 ; '.'
000000000020ab91         db  0x00 ; '.'
000000000020ab92         db  0x00 ; '.'
000000000020ab93         db  0x00 ; '.'
000000000020ab94         db  0x00 ; '.'
000000000020ab95         db  0x00 ; '.'
000000000020ab96         db  0x00 ; '.'
000000000020ab97         db  0x00 ; '.'
000000000020ab98         db  0x7e ; '~'
000000000020ab99         db  0xff ; '.'
000000000020ab9a         db  0xff ; '.'
000000000020ab9b         db  0xff ; '.'
000000000020ab9c         db  0x00 ; '.'
000000000020ab9d         db  0x00 ; '.'
000000000020ab9e         db  0x00 ; '.'
000000000020ab9f         db  0x00 ; '.'
000000000020aba0         db  0x30 ; '0'
000000000020aba1         db  0x75 ; 'u'
000000000020aba2         db  0x00 ; '.'
000000000020aba3         db  0x00 ; '.'
000000000020aba4         db  0x00 ; '.'
000000000020aba5         db  0x00 ; '.'
000000000020aba6         db  0x00 ; '.'
000000000020aba7         db  0x00 ; '.'
000000000020aba8         db  0x00 ; '.'
000000000020aba9         db  0x00 ; '.'
000000000020abaa         db  0x00 ; '.'
000000000020abab         db  0x00 ; '.'
000000000020abac         db  0x00 ; '.'
000000000020abad         db  0x00 ; '.'
000000000020abae         db  0x00 ; '.'
000000000020abaf         db  0x00 ; '.'
000000000020abb0         db  0x00 ; '.'
000000000020abb1         db  0x00 ; '.'
000000000020abb2         db  0x00 ; '.'
000000000020abb3         db  0x00 ; '.'
000000000020abb4         db  0x00 ; '.'
000000000020abb5         db  0x00 ; '.'
000000000020abb6         db  0x00 ; '.'
000000000020abb7         db  0x00 ; '.'
000000000020abb8         db  0x7d ; '}'
000000000020abb9         db  0xff ; '.'
000000000020abba         db  0xff ; '.'
000000000020abbb         db  0xff ; '.'
000000000020abbc         db  0x00 ; '.'
000000000020abbd         db  0x00 ; '.'
000000000020abbe         db  0x00 ; '.'
000000000020abbf         db  0x00 ; '.'
000000000020abc0         db  0x00 ; '.'
000000000020abc1         db  0x00 ; '.'
000000000020abc2         db  0x00 ; '.'
000000000020abc3         db  0x00 ; '.'
000000000020abc4         db  0x00 ; '.'
000000000020abc5         db  0x00 ; '.'
000000000020abc6         db  0x00 ; '.'
000000000020abc7         db  0x00 ; '.'
000000000020abc8         db  0x00 ; '.'
000000000020abc9         db  0x00 ; '.'
000000000020abca         db  0x00 ; '.'
000000000020abcb         db  0x00 ; '.'
000000000020abcc         db  0x00 ; '.'
000000000020abcd         db  0x00 ; '.'
000000000020abce         db  0x00 ; '.'
000000000020abcf         db  0x00 ; '.'
000000000020abd0         db  0x00 ; '.'
000000000020abd1         db  0x00 ; '.'
000000000020abd2         db  0x00 ; '.'
000000000020abd3         db  0x00 ; '.'
000000000020abd4         db  0x00 ; '.'
000000000020abd5         db  0x00 ; '.'
000000000020abd6         db  0x00 ; '.'
000000000020abd7         db  0x00 ; '.'
000000000020abd8         db  0x00 ; '.'
000000000020abd9         db  0x00 ; '.'
000000000020abda         db  0x00 ; '.'
000000000020abdb         db  0x00 ; '.'
000000000020abdc         db  0x00 ; '.'
000000000020abdd         db  0x00 ; '.'
000000000020abde         db  0x00 ; '.'
000000000020abdf         db  0x00 ; '.'
                     quoting_style_args:
000000000020abe0         db  0xa1 ; '.'
000000000020abe1         db  0x80 ; '.'
000000000020abe2         db  0x00 ; '.'
000000000020abe3         db  0x00 ; '.'
000000000020abe4         db  0x00 ; '.'
000000000020abe5         db  0x00 ; '.'
000000000020abe6         db  0x00 ; '.'
000000000020abe7         db  0x00 ; '.'
000000000020abe8         db  0xa9 ; '.'
000000000020abe9         db  0x80 ; '.'
000000000020abea         db  0x00 ; '.'
000000000020abeb         db  0x00 ; '.'
000000000020abec         db  0x00 ; '.'
000000000020abed         db  0x00 ; '.'
000000000020abee         db  0x00 ; '.'
000000000020abef         db  0x00 ; '.'
000000000020abf0         db  0xaf ; '.'
000000000020abf1         db  0x80 ; '.'
000000000020abf2         db  0x00 ; '.'
000000000020abf3         db  0x00 ; '.'
000000000020abf4         db  0x00 ; '.'
000000000020abf5         db  0x00 ; '.'
000000000020abf6         db  0x00 ; '.'
000000000020abf7         db  0x00 ; '.'
000000000020abf8         db  0xbc ; '.'
000000000020abf9         db  0x80 ; '.'
000000000020abfa         db  0x00 ; '.'
000000000020abfb         db  0x00 ; '.'
000000000020abfc         db  0x00 ; '.'
000000000020abfd         db  0x00 ; '.'
000000000020abfe         db  0x00 ; '.'
000000000020abff         db  0x00 ; '.'
000000000020ac00         db  0xc9 ; '.'
000000000020ac01         db  0x80 ; '.'
000000000020ac02         db  0x00 ; '.'
000000000020ac03         db  0x00 ; '.'
000000000020ac04         db  0x00 ; '.'
000000000020ac05         db  0x00 ; '.'
000000000020ac06         db  0x00 ; '.'
000000000020ac07         db  0x00 ; '.'
000000000020ac08         db  0x5a ; 'Z'
000000000020ac09         db  0x73 ; 's'
000000000020ac0a         db  0x00 ; '.'
000000000020ac0b         db  0x00 ; '.'
000000000020ac0c         db  0x00 ; '.'
000000000020ac0d         db  0x00 ; '.'
000000000020ac0e         db  0x00 ; '.'
000000000020ac0f         db  0x00 ; '.'
000000000020ac10         db  0xdd ; '.'
000000000020ac11         db  0x80 ; '.'
000000000020ac12         db  0x00 ; '.'
000000000020ac13         db  0x00 ; '.'
000000000020ac14         db  0x00 ; '.'
000000000020ac15         db  0x00 ; '.'
000000000020ac16         db  0x00 ; '.'
000000000020ac17         db  0x00 ; '.'
000000000020ac18         db  0xc2 ; '.'
000000000020ac19         db  0x80 ; '.'
000000000020ac1a         db  0x00 ; '.'
000000000020ac1b         db  0x00 ; '.'
000000000020ac1c         db  0x00 ; '.'
000000000020ac1d         db  0x00 ; '.'
000000000020ac1e         db  0x00 ; '.'
000000000020ac1f         db  0x00 ; '.'
000000000020ac20         db  0x2e ; '.'
000000000020ac21         db  0x74 ; 't'
000000000020ac22         db  0x00 ; '.'
000000000020ac23         db  0x00 ; '.'
000000000020ac24         db  0x00 ; '.'
000000000020ac25         db  0x00 ; '.'
000000000020ac26         db  0x00 ; '.'
000000000020ac27         db  0x00 ; '.'
000000000020ac28         db  0xe5 ; '.'
000000000020ac29         db  0x80 ; '.'
000000000020ac2a         db  0x00 ; '.'
000000000020ac2b         db  0x00 ; '.'
000000000020ac2c         db  0x00 ; '.'
000000000020ac2d         db  0x00 ; '.'
000000000020ac2e         db  0x00 ; '.'
000000000020ac2f         db  0x00 ; '.'
000000000020ac30         db  0x00 ; '.'
000000000020ac31         db  0x00 ; '.'
000000000020ac32         db  0x00 ; '.'
000000000020ac33         db  0x00 ; '.'
000000000020ac34         db  0x00 ; '.'
000000000020ac35         db  0x00 ; '.'
000000000020ac36         db  0x00 ; '.'
000000000020ac37         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x20ac38; 0x20ae28[ (496 bytes)
        ; File offset : [44088; 44584[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
000000000020ac38         db  0x01 ; '.'
000000000020ac39         db  0x00 ; '.'
000000000020ac3a         db  0x00 ; '.'
000000000020ac3b         db  0x00 ; '.'
000000000020ac3c         db  0x00 ; '.'
000000000020ac3d         db  0x00 ; '.'
000000000020ac3e         db  0x00 ; '.'
000000000020ac3f         db  0x00 ; '.'
000000000020ac40         db  0x01 ; '.'
000000000020ac41         db  0x00 ; '.'
000000000020ac42         db  0x00 ; '.'
000000000020ac43         db  0x00 ; '.'
000000000020ac44         db  0x00 ; '.'
000000000020ac45         db  0x00 ; '.'
000000000020ac46         db  0x00 ; '.'
000000000020ac47         db  0x00 ; '.'
000000000020ac48         db  0x0c ; '.'
000000000020ac49         db  0x00 ; '.'
000000000020ac4a         db  0x00 ; '.'
000000000020ac4b         db  0x00 ; '.'
000000000020ac4c         db  0x00 ; '.'
000000000020ac4d         db  0x00 ; '.'
000000000020ac4e         db  0x00 ; '.'
000000000020ac4f         db  0x00 ; '.'
000000000020ac50         db  0x68 ; 'h'
000000000020ac51         db  0x15 ; '.'
000000000020ac52         db  0x00 ; '.'
000000000020ac53         db  0x00 ; '.'
000000000020ac54         db  0x00 ; '.'
000000000020ac55         db  0x00 ; '.'
000000000020ac56         db  0x00 ; '.'
000000000020ac57         db  0x00 ; '.'
000000000020ac58         db  0x0d ; '.'
000000000020ac59         db  0x00 ; '.'
000000000020ac5a         db  0x00 ; '.'
000000000020ac5b         db  0x00 ; '.'
000000000020ac5c         db  0x00 ; '.'
000000000020ac5d         db  0x00 ; '.'
000000000020ac5e         db  0x00 ; '.'
000000000020ac5f         db  0x00 ; '.'
000000000020ac60         db  0x00 ; '.'
000000000020ac61         db  0x73 ; 's'
000000000020ac62         db  0x00 ; '.'
000000000020ac63         db  0x00 ; '.'
000000000020ac64         db  0x00 ; '.'
000000000020ac65         db  0x00 ; '.'
000000000020ac66         db  0x00 ; '.'
000000000020ac67         db  0x00 ; '.'
000000000020ac68         db  0x19 ; '.'
000000000020ac69         db  0x00 ; '.'
000000000020ac6a         db  0x00 ; '.'
000000000020ac6b         db  0x00 ; '.'
000000000020ac6c         db  0x00 ; '.'
000000000020ac6d         db  0x00 ; '.'
000000000020ac6e         db  0x00 ; '.'
000000000020ac6f         db  0x00 ; '.'
000000000020ac70         db  0x10 ; '.'
000000000020ac71         db  0xaa ; '.'
000000000020ac72         db  0x20 ; ' '
000000000020ac73         db  0x00 ; '.'
000000000020ac74         db  0x00 ; '.'
000000000020ac75         db  0x00 ; '.'
000000000020ac76         db  0x00 ; '.'
000000000020ac77         db  0x00 ; '.'
000000000020ac78         db  0x1b ; '.'
000000000020ac79         db  0x00 ; '.'
000000000020ac7a         db  0x00 ; '.'
000000000020ac7b         db  0x00 ; '.'
000000000020ac7c         db  0x00 ; '.'
000000000020ac7d         db  0x00 ; '.'
000000000020ac7e         db  0x00 ; '.'
000000000020ac7f         db  0x00 ; '.'
000000000020ac80         db  0x08 ; '.'
000000000020ac81         db  0x00 ; '.'
000000000020ac82         db  0x00 ; '.'
000000000020ac83         db  0x00 ; '.'
000000000020ac84         db  0x00 ; '.'
000000000020ac85         db  0x00 ; '.'
000000000020ac86         db  0x00 ; '.'
000000000020ac87         db  0x00 ; '.'
000000000020ac88         db  0x1a ; '.'
000000000020ac89         db  0x00 ; '.'
000000000020ac8a         db  0x00 ; '.'
000000000020ac8b         db  0x00 ; '.'
000000000020ac8c         db  0x00 ; '.'
000000000020ac8d         db  0x00 ; '.'
000000000020ac8e         db  0x00 ; '.'
000000000020ac8f         db  0x00 ; '.'
000000000020ac90         db  0x18 ; '.'
000000000020ac91         db  0xaa ; '.'
000000000020ac92         db  0x20 ; ' '
000000000020ac93         db  0x00 ; '.'
000000000020ac94         db  0x00 ; '.'
000000000020ac95         db  0x00 ; '.'
000000000020ac96         db  0x00 ; '.'
000000000020ac97         db  0x00 ; '.'
000000000020ac98         db  0x1c ; '.'
000000000020ac99         db  0x00 ; '.'
000000000020ac9a         db  0x00 ; '.'
000000000020ac9b         db  0x00 ; '.'
000000000020ac9c         db  0x00 ; '.'
000000000020ac9d         db  0x00 ; '.'
000000000020ac9e         db  0x00 ; '.'
000000000020ac9f         db  0x00 ; '.'
000000000020aca0         db  0x08 ; '.'
000000000020aca1         db  0x00 ; '.'
000000000020aca2         db  0x00 ; '.'
000000000020aca3         db  0x00 ; '.'
000000000020aca4         db  0x00 ; '.'
000000000020aca5         db  0x00 ; '.'
000000000020aca6         db  0x00 ; '.'
000000000020aca7         db  0x00 ; '.'
000000000020aca8         db  0xf5 ; '.'
000000000020aca9         db  0xfe ; '.'
000000000020acaa         db  0xff ; '.'
000000000020acab         db  0x6f ; 'o'
000000000020acac         db  0x00 ; '.'
000000000020acad         db  0x00 ; '.'
000000000020acae         db  0x00 ; '.'
000000000020acaf         db  0x00 ; '.'
000000000020acb0         db  0x98 ; '.'
000000000020acb1         db  0x02 ; '.'
000000000020acb2         db  0x00 ; '.'
000000000020acb3         db  0x00 ; '.'
000000000020acb4         db  0x00 ; '.'
000000000020acb5         db  0x00 ; '.'
000000000020acb6         db  0x00 ; '.'
000000000020acb7         db  0x00 ; '.'
000000000020acb8         db  0x05 ; '.'
000000000020acb9         db  0x00 ; '.'
000000000020acba         db  0x00 ; '.'
000000000020acbb         db  0x00 ; '.'
000000000020acbc         db  0x00 ; '.'
000000000020acbd         db  0x00 ; '.'
000000000020acbe         db  0x00 ; '.'
000000000020acbf         db  0x00 ; '.'
000000000020acc0         db  0xf8 ; '.'
000000000020acc1         db  0x08 ; '.'
000000000020acc2         db  0x00 ; '.'
000000000020acc3         db  0x00 ; '.'
000000000020acc4         db  0x00 ; '.'
000000000020acc5         db  0x00 ; '.'
000000000020acc6         db  0x00 ; '.'
000000000020acc7         db  0x00 ; '.'
000000000020acc8         db  0x06 ; '.'
000000000020acc9         db  0x00 ; '.'
000000000020acca         db  0x00 ; '.'
000000000020accb         db  0x00 ; '.'
000000000020accc         db  0x00 ; '.'
000000000020accd         db  0x00 ; '.'
000000000020acce         db  0x00 ; '.'
000000000020accf         db  0x00 ; '.'
000000000020acd0         db  0xe0 ; '.'
000000000020acd1         db  0x02 ; '.'
000000000020acd2         db  0x00 ; '.'
000000000020acd3         db  0x00 ; '.'
000000000020acd4         db  0x00 ; '.'
000000000020acd5         db  0x00 ; '.'
000000000020acd6         db  0x00 ; '.'
000000000020acd7         db  0x00 ; '.'
000000000020acd8         db  0x0a ; '.'
000000000020acd9         db  0x00 ; '.'
000000000020acda         db  0x00 ; '.'
000000000020acdb         db  0x00 ; '.'
000000000020acdc         db  0x00 ; '.'
000000000020acdd         db  0x00 ; '.'
000000000020acde         db  0x00 ; '.'
000000000020acdf         db  0x00 ; '.'
000000000020ace0         db  0x01 ; '.'
000000000020ace1         db  0x03 ; '.'
000000000020ace2         db  0x00 ; '.'
000000000020ace3         db  0x00 ; '.'
000000000020ace4         db  0x00 ; '.'
000000000020ace5         db  0x00 ; '.'
000000000020ace6         db  0x00 ; '.'
000000000020ace7         db  0x00 ; '.'
000000000020ace8         db  0x0b ; '.'
000000000020ace9         db  0x00 ; '.'
000000000020acea         db  0x00 ; '.'
000000000020aceb         db  0x00 ; '.'
000000000020acec         db  0x00 ; '.'
000000000020aced         db  0x00 ; '.'
000000000020acee         db  0x00 ; '.'
000000000020acef         db  0x00 ; '.'
000000000020acf0         db  0x18 ; '.'
000000000020acf1         db  0x00 ; '.'
000000000020acf2         db  0x00 ; '.'
000000000020acf3         db  0x00 ; '.'
000000000020acf4         db  0x00 ; '.'
000000000020acf5         db  0x00 ; '.'
000000000020acf6         db  0x00 ; '.'
000000000020acf7         db  0x00 ; '.'
000000000020acf8         db  0x15 ; '.'
000000000020acf9         db  0x00 ; '.'
000000000020acfa         db  0x00 ; '.'
000000000020acfb         db  0x00 ; '.'
000000000020acfc         db  0x00 ; '.'
000000000020acfd         db  0x00 ; '.'
000000000020acfe         db  0x00 ; '.'
000000000020acff         db  0x00 ; '.'
000000000020ad00         db  0x00 ; '.'
000000000020ad01         db  0x00 ; '.'
000000000020ad02         db  0x00 ; '.'
000000000020ad03         db  0x00 ; '.'
000000000020ad04         db  0x00 ; '.'
000000000020ad05         db  0x00 ; '.'
000000000020ad06         db  0x00 ; '.'
000000000020ad07         db  0x00 ; '.'
000000000020ad08         db  0x03 ; '.'
000000000020ad09         db  0x00 ; '.'
000000000020ad0a         db  0x00 ; '.'
000000000020ad0b         db  0x00 ; '.'
000000000020ad0c         db  0x00 ; '.'
000000000020ad0d         db  0x00 ; '.'
000000000020ad0e         db  0x00 ; '.'
000000000020ad0f         db  0x00 ; '.'
000000000020ad10         db  0x28 ; '('
000000000020ad11         db  0xae ; '.'
000000000020ad12         db  0x20 ; ' '
000000000020ad13         db  0x00 ; '.'
000000000020ad14         db  0x00 ; '.'
000000000020ad15         db  0x00 ; '.'
000000000020ad16         db  0x00 ; '.'
000000000020ad17         db  0x00 ; '.'
000000000020ad18         db  0x02 ; '.'
000000000020ad19         db  0x00 ; '.'
000000000020ad1a         db  0x00 ; '.'
000000000020ad1b         db  0x00 ; '.'
000000000020ad1c         db  0x00 ; '.'
000000000020ad1d         db  0x00 ; '.'
000000000020ad1e         db  0x00 ; '.'
000000000020ad1f         db  0x00 ; '.'
000000000020ad20         db  0xb0 ; '.'
000000000020ad21         db  0x04 ; '.'
000000000020ad22         db  0x00 ; '.'
000000000020ad23         db  0x00 ; '.'
000000000020ad24         db  0x00 ; '.'
000000000020ad25         db  0x00 ; '.'
000000000020ad26         db  0x00 ; '.'
000000000020ad27         db  0x00 ; '.'
000000000020ad28         db  0x14 ; '.'
000000000020ad29         db  0x00 ; '.'
000000000020ad2a         db  0x00 ; '.'
000000000020ad2b         db  0x00 ; '.'
000000000020ad2c         db  0x00 ; '.'
000000000020ad2d         db  0x00 ; '.'
000000000020ad2e         db  0x00 ; '.'
000000000020ad2f         db  0x00 ; '.'
000000000020ad30         db  0x07 ; '.'
000000000020ad31         db  0x00 ; '.'
000000000020ad32         db  0x00 ; '.'
000000000020ad33         db  0x00 ; '.'
000000000020ad34         db  0x00 ; '.'
000000000020ad35         db  0x00 ; '.'
000000000020ad36         db  0x00 ; '.'
000000000020ad37         db  0x00 ; '.'
000000000020ad38         db  0x17 ; '.'
000000000020ad39         db  0x00 ; '.'
000000000020ad3a         db  0x00 ; '.'
000000000020ad3b         db  0x00 ; '.'
000000000020ad3c         db  0x00 ; '.'
000000000020ad3d         db  0x00 ; '.'
000000000020ad3e         db  0x00 ; '.'
000000000020ad3f         db  0x00 ; '.'
000000000020ad40         db  0xb8 ; '.'
000000000020ad41         db  0x10 ; '.'
000000000020ad42         db  0x00 ; '.'
000000000020ad43         db  0x00 ; '.'
000000000020ad44         db  0x00 ; '.'
000000000020ad45         db  0x00 ; '.'
000000000020ad46         db  0x00 ; '.'
000000000020ad47         db  0x00 ; '.'
000000000020ad48         db  0x07 ; '.'
000000000020ad49         db  0x00 ; '.'
000000000020ad4a         db  0x00 ; '.'
000000000020ad4b         db  0x00 ; '.'
000000000020ad4c         db  0x00 ; '.'
000000000020ad4d         db  0x00 ; '.'
000000000020ad4e         db  0x00 ; '.'
000000000020ad4f         db  0x00 ; '.'
000000000020ad50         db  0xe0 ; '.'
000000000020ad51         db  0x0c ; '.'
000000000020ad52         db  0x00 ; '.'
000000000020ad53         db  0x00 ; '.'
000000000020ad54         db  0x00 ; '.'
000000000020ad55         db  0x00 ; '.'
000000000020ad56         db  0x00 ; '.'
000000000020ad57         db  0x00 ; '.'
000000000020ad58         db  0x08 ; '.'
000000000020ad59         db  0x00 ; '.'
000000000020ad5a         db  0x00 ; '.'
000000000020ad5b         db  0x00 ; '.'
000000000020ad5c         db  0x00 ; '.'
000000000020ad5d         db  0x00 ; '.'
000000000020ad5e         db  0x00 ; '.'
000000000020ad5f         db  0x00 ; '.'
000000000020ad60         db  0xd8 ; '.'
000000000020ad61         db  0x03 ; '.'
000000000020ad62         db  0x00 ; '.'
000000000020ad63         db  0x00 ; '.'
000000000020ad64         db  0x00 ; '.'
000000000020ad65         db  0x00 ; '.'
000000000020ad66         db  0x00 ; '.'
000000000020ad67         db  0x00 ; '.'
000000000020ad68         db  0x09 ; '.'
000000000020ad69         db  0x00 ; '.'
000000000020ad6a         db  0x00 ; '.'
000000000020ad6b         db  0x00 ; '.'
000000000020ad6c         db  0x00 ; '.'
000000000020ad6d         db  0x00 ; '.'
000000000020ad6e         db  0x00 ; '.'
000000000020ad6f         db  0x00 ; '.'
000000000020ad70         db  0x18 ; '.'
000000000020ad71         db  0x00 ; '.'
000000000020ad72         db  0x00 ; '.'
000000000020ad73         db  0x00 ; '.'
000000000020ad74         db  0x00 ; '.'
000000000020ad75         db  0x00 ; '.'
000000000020ad76         db  0x00 ; '.'
000000000020ad77         db  0x00 ; '.'
000000000020ad78         db  0x1e ; '.'
000000000020ad79         db  0x00 ; '.'
000000000020ad7a         db  0x00 ; '.'
000000000020ad7b         db  0x00 ; '.'
000000000020ad7c         db  0x00 ; '.'
000000000020ad7d         db  0x00 ; '.'
000000000020ad7e         db  0x00 ; '.'
000000000020ad7f         db  0x00 ; '.'
000000000020ad80         db  0x08 ; '.'
000000000020ad81         db  0x00 ; '.'
000000000020ad82         db  0x00 ; '.'
000000000020ad83         db  0x00 ; '.'
000000000020ad84         db  0x00 ; '.'
000000000020ad85         db  0x00 ; '.'
000000000020ad86         db  0x00 ; '.'
000000000020ad87         db  0x00 ; '.'
000000000020ad88         db  0xfb ; '.'
000000000020ad89         db  0xff ; '.'
000000000020ad8a         db  0xff ; '.'
000000000020ad8b         db  0x6f ; 'o'
000000000020ad8c         db  0x00 ; '.'
000000000020ad8d         db  0x00 ; '.'
000000000020ad8e         db  0x00 ; '.'
000000000020ad8f         db  0x00 ; '.'
000000000020ad90         db  0x01 ; '.'
000000000020ad91         db  0x00 ; '.'
000000000020ad92         db  0x00 ; '.'
000000000020ad93         db  0x08 ; '.'
000000000020ad94         db  0x00 ; '.'
000000000020ad95         db  0x00 ; '.'
000000000020ad96         db  0x00 ; '.'
000000000020ad97         db  0x00 ; '.'
000000000020ad98         db  0xfe ; '.'
000000000020ad99         db  0xff ; '.'
000000000020ad9a         db  0xff ; '.'
000000000020ad9b         db  0x6f ; 'o'
000000000020ad9c         db  0x00 ; '.'
000000000020ad9d         db  0x00 ; '.'
000000000020ad9e         db  0x00 ; '.'
000000000020ad9f         db  0x00 ; '.'
000000000020ada0         db  0x80 ; '.'
000000000020ada1         db  0x0c ; '.'
000000000020ada2         db  0x00 ; '.'
000000000020ada3         db  0x00 ; '.'
000000000020ada4         db  0x00 ; '.'
000000000020ada5         db  0x00 ; '.'
000000000020ada6         db  0x00 ; '.'
000000000020ada7         db  0x00 ; '.'
000000000020ada8         db  0xff ; '.'
000000000020ada9         db  0xff ; '.'
000000000020adaa         db  0xff ; '.'
000000000020adab         db  0x6f ; 'o'
000000000020adac         db  0x00 ; '.'
000000000020adad         db  0x00 ; '.'
000000000020adae         db  0x00 ; '.'
000000000020adaf         db  0x00 ; '.'
000000000020adb0         db  0x01 ; '.'
000000000020adb1         db  0x00 ; '.'
000000000020adb2         db  0x00 ; '.'
000000000020adb3         db  0x00 ; '.'
000000000020adb4         db  0x00 ; '.'
000000000020adb5         db  0x00 ; '.'
000000000020adb6         db  0x00 ; '.'
000000000020adb7         db  0x00 ; '.'
000000000020adb8         db  0xf0 ; '.'
000000000020adb9         db  0xff ; '.'
000000000020adba         db  0xff ; '.'
000000000020adbb         db  0x6f ; 'o'
000000000020adbc         db  0x00 ; '.'
000000000020adbd         db  0x00 ; '.'
000000000020adbe         db  0x00 ; '.'
000000000020adbf         db  0x00 ; '.'
000000000020adc0         db  0xfa ; '.'
000000000020adc1         db  0x0b ; '.'
000000000020adc2         db  0x00 ; '.'
000000000020adc3         db  0x00 ; '.'
000000000020adc4         db  0x00 ; '.'
000000000020adc5         db  0x00 ; '.'
000000000020adc6         db  0x00 ; '.'
000000000020adc7         db  0x00 ; '.'
000000000020adc8         db  0xf9 ; '.'
000000000020adc9         db  0xff ; '.'
000000000020adca         db  0xff ; '.'
000000000020adcb         db  0x6f ; 'o'
000000000020adcc         db  0x00 ; '.'
000000000020adcd         db  0x00 ; '.'
000000000020adce         db  0x00 ; '.'
000000000020adcf         db  0x00 ; '.'
000000000020add0         db  0x1d ; '.'
000000000020add1         db  0x00 ; '.'
000000000020add2         db  0x00 ; '.'
000000000020add3         db  0x00 ; '.'
000000000020add4         db  0x00 ; '.'
000000000020add5         db  0x00 ; '.'
000000000020add6         db  0x00 ; '.'
000000000020add7         db  0x00 ; '.'
000000000020add8         db  0x00 ; '.'
000000000020add9         db  0x00 ; '.'
000000000020adda         db  0x00 ; '.'
000000000020addb         db  0x00 ; '.'
000000000020addc         db  0x00 ; '.'
000000000020addd         db  0x00 ; '.'
000000000020adde         db  0x00 ; '.'
000000000020addf         db  0x00 ; '.'
000000000020ade0         db  0x00 ; '.'
000000000020ade1         db  0x00 ; '.'
000000000020ade2         db  0x00 ; '.'
000000000020ade3         db  0x00 ; '.'
000000000020ade4         db  0x00 ; '.'
000000000020ade5         db  0x00 ; '.'
000000000020ade6         db  0x00 ; '.'
000000000020ade7         db  0x00 ; '.'
000000000020ade8         db  0x00 ; '.'
000000000020ade9         db  0x00 ; '.'
000000000020adea         db  0x00 ; '.'
000000000020adeb         db  0x00 ; '.'
000000000020adec         db  0x00 ; '.'
000000000020aded         db  0x00 ; '.'
000000000020adee         db  0x00 ; '.'
000000000020adef         db  0x00 ; '.'
000000000020adf0         db  0x00 ; '.'
000000000020adf1         db  0x00 ; '.'
000000000020adf2         db  0x00 ; '.'
000000000020adf3         db  0x00 ; '.'
000000000020adf4         db  0x00 ; '.'
000000000020adf5         db  0x00 ; '.'
000000000020adf6         db  0x00 ; '.'
000000000020adf7         db  0x00 ; '.'
000000000020adf8         db  0x00 ; '.'
000000000020adf9         db  0x00 ; '.'
000000000020adfa         db  0x00 ; '.'
000000000020adfb         db  0x00 ; '.'
000000000020adfc         db  0x00 ; '.'
000000000020adfd         db  0x00 ; '.'
000000000020adfe         db  0x00 ; '.'
000000000020adff         db  0x00 ; '.'
000000000020ae00         db  0x00 ; '.'
000000000020ae01         db  0x00 ; '.'
000000000020ae02         db  0x00 ; '.'
000000000020ae03         db  0x00 ; '.'
000000000020ae04         db  0x00 ; '.'
000000000020ae05         db  0x00 ; '.'
000000000020ae06         db  0x00 ; '.'
000000000020ae07         db  0x00 ; '.'
000000000020ae08         db  0x00 ; '.'
000000000020ae09         db  0x00 ; '.'
000000000020ae0a         db  0x00 ; '.'
000000000020ae0b         db  0x00 ; '.'
000000000020ae0c         db  0x00 ; '.'
000000000020ae0d         db  0x00 ; '.'
000000000020ae0e         db  0x00 ; '.'
000000000020ae0f         db  0x00 ; '.'
000000000020ae10         db  0x00 ; '.'
000000000020ae11         db  0x00 ; '.'
000000000020ae12         db  0x00 ; '.'
000000000020ae13         db  0x00 ; '.'
000000000020ae14         db  0x00 ; '.'
000000000020ae15         db  0x00 ; '.'
000000000020ae16         db  0x00 ; '.'
000000000020ae17         db  0x00 ; '.'
000000000020ae18         db  0x00 ; '.'
000000000020ae19         db  0x00 ; '.'
000000000020ae1a         db  0x00 ; '.'
000000000020ae1b         db  0x00 ; '.'
000000000020ae1c         db  0x00 ; '.'
000000000020ae1d         db  0x00 ; '.'
000000000020ae1e         db  0x00 ; '.'
000000000020ae1f         db  0x00 ; '.'
000000000020ae20         db  0x00 ; '.'
000000000020ae21         db  0x00 ; '.'
000000000020ae22         db  0x00 ; '.'
000000000020ae23         db  0x00 ; '.'
000000000020ae24         db  0x00 ; '.'
000000000020ae25         db  0x00 ; '.'
000000000020ae26         db  0x00 ; '.'
000000000020ae27         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x20ae28; 0x20aff8[ (464 bytes)
        ; File offset : [44584; 45048[ (464 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
000000000020ae28         db  0x38 ; '8'
000000000020ae29         db  0xac ; '.'
000000000020ae2a         db  0x20 ; ' '
000000000020ae2b         db  0x00 ; '.'
000000000020ae2c         db  0x00 ; '.'
000000000020ae2d         db  0x00 ; '.'
000000000020ae2e         db  0x00 ; '.'
000000000020ae2f         db  0x00 ; '.'
                     qword_20ae30:
000000000020ae30         dq         0x0000000000000000                          ; DATA XREF=0x1580
000000000020ae38         db  0x00 ; '.'                                         ; DATA XREF=0x1586
000000000020ae39         db  0x00 ; '.'
000000000020ae3a         db  0x00 ; '.'
000000000020ae3b         db  0x00 ; '.'
000000000020ae3c         db  0x00 ; '.'
000000000020ae3d         db  0x00 ; '.'
000000000020ae3e         db  0x00 ; '.'
000000000020ae3f         db  0x00 ; '.'
                     free@GOT:        // free
000000000020ae40         dq         0x000000000020b260                          ; DATA XREF=j_free
                     abort@GOT:        // abort
000000000020ae48         dq         0x000000000020b268                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
000000000020ae50         dq         0x000000000020b270                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
000000000020ae58         dq         0x000000000020b278                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
000000000020ae60         dq         0x000000000020b288                          ; DATA XREF=j__exit
                     __fpending@GOT:        // __fpending
000000000020ae68         dq         0x000000000020b290                          ; DATA XREF=j___fpending
                     fread_unlocked@GOT:        // fread_unlocked
000000000020ae70         dq         0x000000000020b298                          ; DATA XREF=j_fread_unlocked
                     textdomain@GOT:        // textdomain
000000000020ae78         dq         0x000000000020b2a0                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
000000000020ae80         dq         0x000000000020b2a8                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
000000000020ae88         dq         0x000000000020b2b0                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
000000000020ae90         dq         0x000000000020b2b8                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
000000000020ae98         dq         0x000000000020b2c0                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
000000000020aea0         dq         0x000000000020b2c8                          ; DATA XREF=j_strlen
                     __stack_chk_fail@GOT:        // __stack_chk_fail
000000000020aea8         dq         0x000000000020b2d0                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
000000000020aeb0         dq         0x000000000020b2d8                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
000000000020aeb8         dq         0x000000000020b2e0                          ; DATA XREF=j_mbrtowc
                     strchr@GOT:        // strchr
000000000020aec0         dq         0x000000000020b2e8                          ; DATA XREF=j_strchr
                     __overflow@GOT:        // __overflow
000000000020aec8         dq         0x000000000020b2f0                          ; DATA XREF=j___overflow
                     strrchr@GOT:        // strrchr
000000000020aed0         dq         0x000000000020b2f8                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
000000000020aed8         dq         0x000000000020b300                          ; DATA XREF=j_lseek
                     __assert_fail@GOT:        // __assert_fail
000000000020aee0         dq         0x000000000020b308                          ; DATA XREF=j___assert_fail
                     __strtoul_internal@GOT:        // __strtoul_internal
000000000020aee8         dq         0x000000000020b310                          ; DATA XREF=j___strtoul_internal
                     memset@GOT:        // memset
000000000020aef0         dq         0x000000000020b318                          ; DATA XREF=j_memset
                     posix_fadvise@GOT:        // posix_fadvise
000000000020aef8         dq         0x000000000020b320                          ; DATA XREF=j_posix_fadvise
                     memchr@GOT:        // memchr
000000000020af00         dq         0x000000000020b328                          ; DATA XREF=j_memchr
                     memcmp@GOT:        // memcmp
000000000020af08         dq         0x000000000020b338                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
000000000020af10         dq         0x000000000020b340                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
000000000020af18         dq         0x000000000020b348                          ; DATA XREF=j_calloc
                     strcmp@GOT:        // strcmp
000000000020af20         dq         0x000000000020b350                          ; DATA XREF=j_strcmp
                     memcpy@GOT:        // memcpy
000000000020af28         dq         0x000000000020b360                          ; DATA XREF=j_memcpy
                     fileno@GOT:        // fileno
000000000020af30         dq         0x000000000020b368                          ; DATA XREF=j_fileno
                     malloc@GOT:        // malloc
000000000020af38         dq         0x000000000020b370                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
000000000020af40         dq         0x000000000020b378                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
000000000020af48         dq         0x000000000020b380                          ; DATA XREF=j_nl_langinfo
                     __freading@GOT:        // __freading
000000000020af50         dq         0x000000000020b388                          ; DATA XREF=j___freading
                     fwrite_unlocked@GOT:        // fwrite_unlocked
000000000020af58         dq         0x000000000020b390                          ; DATA XREF=j_fwrite_unlocked
                     realloc@GOT:        // realloc
000000000020af60         dq         0x000000000020b398                          ; DATA XREF=j_realloc
                     setlocale@GOT:        // setlocale
000000000020af68         dq         0x000000000020b3a0                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
000000000020af70         dq         0x000000000020b3a8                          ; DATA XREF=j___printf_chk
                     memmove@GOT:        // memmove
000000000020af78         dq         0x000000000020b3b0                          ; DATA XREF=j_memmove
                     error@GOT:        // error
000000000020af80         dq         0x000000000020b3b8                          ; DATA XREF=j_error
                     fseeko@GOT:        // fseeko
000000000020af88         dq         0x000000000020b3c0                          ; DATA XREF=j_fseeko
                     fopen@GOT:        // fopen
000000000020af90         dq         0x000000000020b3c8                          ; DATA XREF=j_fopen
                     __cxa_atexit@GOT:        // __cxa_atexit
000000000020af98         dq         0x000000000020b3d0                          ; DATA XREF=j___cxa_atexit
                     exit@GOT:        // exit
000000000020afa0         dq         0x000000000020b3d8                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
000000000020afa8         dq         0x000000000020b3e0                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
000000000020afb0         dq         0x000000000020b3e8                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
000000000020afb8         dq         0x000000000020b3f8                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
000000000020afc0         dq         0x000000000020b400                          ; DATA XREF=j_iswprint
                     __ctype_b_loc@GOT:        // __ctype_b_loc
000000000020afc8         dq         0x000000000020b410                          ; DATA XREF=j___ctype_b_loc
                     qword_20afd0:
000000000020afd0         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
000000000020afd8         db  0x00 ; '.'                                         ; DATA XREF=_start+36
000000000020afd9         db  0x00 ; '.'
000000000020afda         db  0x00 ; '.'
000000000020afdb         db  0x00 ; '.'
000000000020afdc         db  0x00 ; '.'
000000000020afdd         db  0x00 ; '.'
000000000020afde         db  0x00 ; '.'
000000000020afdf         db  0x00 ; '.'
                     qword_20afe0:
000000000020afe0         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_20afe8:
000000000020afe8         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_20aff0:
000000000020aff0         dq         0x0000000000000000                          ; DATA XREF=j_qword_20aff0, __do_global_dtors_aux+9
000000000020aff8         db  0x00 ; '.'
000000000020aff9         db  0x00 ; '.'
000000000020affa         db  0x00 ; '.'
000000000020affb         db  0x00 ; '.'
000000000020affc         db  0x00 ; '.'
000000000020affd         db  0x00 ; '.'
000000000020affe         db  0x00 ; '.'
000000000020afff         db  0x00 ; '.'


        ; Section .data
        ; Range: [0x20b000; 0x20b080[ (128 bytes)
        ; File offset : [45056; 45184[ (128 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

000000000020b000         db  0x00 ; '.'
000000000020b001         db  0x00 ; '.'
000000000020b002         db  0x00 ; '.'
000000000020b003         db  0x00 ; '.'
000000000020b004         db  0x00 ; '.'
000000000020b005         db  0x00 ; '.'
000000000020b006         db  0x00 ; '.'
000000000020b007         db  0x00 ; '.'
                     __dso_handle:
000000000020b008         dq         0x000000000020b008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     Version:
000000000020b010         dq         0x0000000000007dc9                          ; DATA XREF=main+219
                     exit_failure:
000000000020b018         dd         0x00000001                                  ; DATA XREF=close_stdout+130, xalloc_die+23
000000000020b01c         db  0x00 ; '.'
000000000020b01d         db  0x00 ; '.'
000000000020b01e         db  0x00 ; '.'
000000000020b01f         db  0x00 ; '.'
                     quote_quoting_options:
000000000020b020         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
000000000020b021         db  0x00 ; '.'
000000000020b022         db  0x00 ; '.'
000000000020b023         db  0x00 ; '.'
000000000020b024         db  0x00 ; '.'
000000000020b025         db  0x00 ; '.'
000000000020b026         db  0x00 ; '.'
000000000020b027         db  0x00 ; '.'
000000000020b028         db  0x00 ; '.'
000000000020b029         db  0x00 ; '.'
000000000020b02a         db  0x00 ; '.'
000000000020b02b         db  0x00 ; '.'
000000000020b02c         db  0x00 ; '.'
000000000020b02d         db  0x00 ; '.'
000000000020b02e         db  0x00 ; '.'
000000000020b02f         db  0x00 ; '.'
000000000020b030         db  0x00 ; '.'
000000000020b031         db  0x00 ; '.'
000000000020b032         db  0x00 ; '.'
000000000020b033         db  0x00 ; '.'
000000000020b034         db  0x00 ; '.'
000000000020b035         db  0x00 ; '.'
000000000020b036         db  0x00 ; '.'
000000000020b037         db  0x00 ; '.'
000000000020b038         db  0x00 ; '.'
000000000020b039         db  0x00 ; '.'
000000000020b03a         db  0x00 ; '.'
000000000020b03b         db  0x00 ; '.'
000000000020b03c         db  0x00 ; '.'
000000000020b03d         db  0x00 ; '.'
000000000020b03e         db  0x00 ; '.'
000000000020b03f         db  0x00 ; '.'
000000000020b040         db  0x00 ; '.'
000000000020b041         db  0x00 ; '.'
000000000020b042         db  0x00 ; '.'
000000000020b043         db  0x00 ; '.'
000000000020b044         db  0x00 ; '.'
000000000020b045         db  0x00 ; '.'
000000000020b046         db  0x00 ; '.'
000000000020b047         db  0x00 ; '.'
000000000020b048         db  0x00 ; '.'
000000000020b049         db  0x00 ; '.'
000000000020b04a         db  0x00 ; '.'
000000000020b04b         db  0x00 ; '.'
000000000020b04c         db  0x00 ; '.'
000000000020b04d         db  0x00 ; '.'
000000000020b04e         db  0x00 ; '.'
000000000020b04f         db  0x00 ; '.'
000000000020b050         db  0x00 ; '.'
000000000020b051         db  0x00 ; '.'
000000000020b052         db  0x00 ; '.'
000000000020b053         db  0x00 ; '.'
000000000020b054         db  0x00 ; '.'
000000000020b055         db  0x00 ; '.'
000000000020b056         db  0x00 ; '.'
000000000020b057         db  0x00 ; '.'
                     nslots:
000000000020b058         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020b05c         align      32
                     slotvec:
000000000020b060         dq         0x000000000020b070                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
000000000020b068         db  0x00 ; '.'
000000000020b069         db  0x00 ; '.'
000000000020b06a         db  0x00 ; '.'
000000000020b06b         db  0x00 ; '.'
000000000020b06c         db  0x00 ; '.'
000000000020b06d         db  0x00 ; '.'
000000000020b06e         db  0x00 ; '.'
000000000020b06f         db  0x00 ; '.'
                     slotvec0:
000000000020b070         dq         1.26481e-321, 1.05853e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec


        ; Section .bss
        ; Range: [0x20b080; 0x20b258[ (472 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
000000000020b080         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
000000000020b081         db  0x00 ; '.'
000000000020b082         db  0x00 ; '.'
000000000020b083         db  0x00 ; '.'
000000000020b084         db  0x00 ; '.'
000000000020b085         db  0x00 ; '.'
000000000020b086         db  0x00 ; '.'
000000000020b087         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
000000000020b088         db  0x00 ; '.'                                         ; DATA XREF=main+212, main+608, main+1744, main+2133, main+2177, usage+125, usage+162, usage+199, usage+236, usage+273, usage+310
000000000020b089         db  0x00 ; '.'
000000000020b08a         db  0x00 ; '.'
000000000020b08b         db  0x00 ; '.'
000000000020b08c         db  0x00 ; '.'
000000000020b08d         db  0x00 ; '.'
000000000020b08e         db  0x00 ; '.'
000000000020b08f         db  0x00 ; '.'
                     stdin@@GLIBC_2.2.5:
000000000020b090         db  0x00 ; '.'                                         ; DATA XREF=main+1727
000000000020b091         db  0x00 ; '.'
000000000020b092         db  0x00 ; '.'
000000000020b093         db  0x00 ; '.'
000000000020b094         db  0x00 ; '.'
000000000020b095         db  0x00 ; '.'
000000000020b096         db  0x00 ; '.'
000000000020b097         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
000000000020b098         db  0x00 ; '.'                                         ; DATA XREF=main+497
000000000020b099         db  0x00 ; '.'
000000000020b09a         db  0x00 ; '.'
000000000020b09b         db  0x00 ; '.'
000000000020b09c         db  0x00 ; '.'
000000000020b09d         db  0x00 ; '.'
000000000020b09e         db  0x00 ; '.'
000000000020b09f         db  0x00 ; '.'
                     optarg@@GLIBC_2.2.5:
000000000020b0a0         db  0x00 ; '.'                                         ; DATA XREF=main+355
000000000020b0a1         db  0x00 ; '.'
000000000020b0a2         db  0x00 ; '.'
000000000020b0a3         db  0x00 ; '.'
000000000020b0a4         db  0x00 ; '.'
000000000020b0a5         db  0x00 ; '.'
000000000020b0a6         db  0x00 ; '.'
000000000020b0a7         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
000000000020b0a8         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
000000000020b0a9         db  0x00 ; '.'
000000000020b0aa         db  0x00 ; '.'
000000000020b0ab         db  0x00 ; '.'
000000000020b0ac         db  0x00 ; '.'
000000000020b0ad         db  0x00 ; '.'
000000000020b0ae         db  0x00 ; '.'
000000000020b0af         db  0x00 ; '.'
000000000020b0b0         db  0x00 ; '.'
000000000020b0b1         db  0x00 ; '.'
000000000020b0b2         db  0x00 ; '.'
000000000020b0b3         db  0x00 ; '.'
000000000020b0b4         db  0x00 ; '.'
000000000020b0b5         db  0x00 ; '.'
000000000020b0b6         db  0x00 ; '.'
000000000020b0b7         db  0x00 ; '.'
000000000020b0b8         db  0x00 ; '.'
000000000020b0b9         db  0x00 ; '.'
000000000020b0ba         db  0x00 ; '.'
000000000020b0bb         db  0x00 ; '.'
000000000020b0bc         db  0x00 ; '.'
000000000020b0bd         db  0x00 ; '.'
000000000020b0be         db  0x00 ; '.'
000000000020b0bf         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
000000000020b0c0         db  0x00 ; '.'                                         ; DATA XREF=usage+61, close_stdout+44, set_program_name+125
000000000020b0c1         db  0x00 ; '.'
000000000020b0c2         db  0x00 ; '.'
000000000020b0c3         db  0x00 ; '.'
000000000020b0c4         db  0x00 ; '.'
000000000020b0c5         db  0x00 ; '.'
000000000020b0c6         db  0x00 ; '.'
000000000020b0c7         db  0x00 ; '.'
                     completed.7697:
000000000020b0c8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
000000000020b0c9         db  0x00 ; '.'
000000000020b0ca         db  0x00 ; '.'
000000000020b0cb         db  0x00 ; '.'
000000000020b0cc         db  0x00 ; '.'
000000000020b0cd         db  0x00 ; '.'
000000000020b0ce         db  0x00 ; '.'
000000000020b0cf         db  0x00 ; '.'
                     base_decode_ctx:
000000000020b0d0         db  0x00 ; '.'                                         ; DATA XREF=main+490, main+984, main+1059, main+1134, main+1209, main+1284, main+1359, main+1434, main+1512, main+1629
000000000020b0d1         db  0x00 ; '.'
000000000020b0d2         db  0x00 ; '.'
000000000020b0d3         db  0x00 ; '.'
000000000020b0d4         db  0x00 ; '.'
000000000020b0d5         db  0x00 ; '.'
000000000020b0d6         db  0x00 ; '.'
000000000020b0d7         db  0x00 ; '.'
                     base_decode_ctx_init:
000000000020b0d8         db  0x00 ; '.'                                         ; DATA XREF=main+476, main+679, main+970, main+1045, main+1120, main+1195, main+1270, main+1345, main+1420
000000000020b0d9         db  0x00 ; '.'
000000000020b0da         db  0x00 ; '.'
000000000020b0db         db  0x00 ; '.'
000000000020b0dc         db  0x00 ; '.'
000000000020b0dd         db  0x00 ; '.'
000000000020b0de         db  0x00 ; '.'
000000000020b0df         db  0x00 ; '.'
                     base_encode:
000000000020b0e0         db  0x00 ; '.'                                         ; DATA XREF=main+462, main+956, main+1031, main+1106, main+1181, main+1256, main+1331, main+1406, main+1862
000000000020b0e1         db  0x00 ; '.'
000000000020b0e2         db  0x00 ; '.'
000000000020b0e3         db  0x00 ; '.'
000000000020b0e4         db  0x00 ; '.'
000000000020b0e5         db  0x00 ; '.'
000000000020b0e6         db  0x00 ; '.'
000000000020b0e7         db  0x00 ; '.'
                     isbase:
000000000020b0e8         db  0x00 ; '.'                                         ; DATA XREF=main+448, main+854, main+942, main+1017, main+1092, main+1167, main+1242, main+1317, main+1392
000000000020b0e9         db  0x00 ; '.'
000000000020b0ea         db  0x00 ; '.'
000000000020b0eb         db  0x00 ; '.'
000000000020b0ec         db  0x00 ; '.'
000000000020b0ed         db  0x00 ; '.'
000000000020b0ee         db  0x00 ; '.'
000000000020b0ef         db  0x00 ; '.'
                     base_length:
000000000020b0f0         db  0x00 ; '.'                                         ; DATA XREF=main+434, main+625, main+742, main+779, main+928, main+1003, main+1078, main+1153, main+1228, main+1303, main+1378
000000000020b0f1         db  0x00 ; '.'
000000000020b0f2         db  0x00 ; '.'
000000000020b0f3         db  0x00 ; '.'
000000000020b0f4         db  0x00 ; '.'
000000000020b0f5         db  0x00 ; '.'
000000000020b0f6         db  0x00 ; '.'
000000000020b0f7         db  0x00 ; '.'
                     ignore_EPIPE:
000000000020b0f8         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
000000000020b0f9         db  0x00 ; '.'
000000000020b0fa         db  0x00 ; '.'
000000000020b0fb         db  0x00 ; '.'
000000000020b0fc         db  0x00 ; '.'
000000000020b0fd         db  0x00 ; '.'
000000000020b0fe         db  0x00 ; '.'
000000000020b0ff         db  0x00 ; '.'
                     file_name:
000000000020b100         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
000000000020b101         db  0x00 ; '.'
000000000020b102         db  0x00 ; '.'
000000000020b103         db  0x00 ; '.'
000000000020b104         db  0x00 ; '.'
000000000020b105         db  0x00 ; '.'
000000000020b106         db  0x00 ; '.'
000000000020b107         db  0x00 ; '.'
                     program_name:
000000000020b108         db  0x00 ; '.'                                         ; DATA XREF=usage+20, set_program_name+109
000000000020b109         db  0x00 ; '.'
000000000020b10a         db  0x00 ; '.'
000000000020b10b         db  0x00 ; '.'
000000000020b10c         db  0x00 ; '.'
000000000020b10d         db  0x00 ; '.'
000000000020b10e         db  0x00 ; '.'
000000000020b10f         db  0x00 ; '.'
000000000020b110         db  0x00 ; '.'
000000000020b111         db  0x00 ; '.'
000000000020b112         db  0x00 ; '.'
000000000020b113         db  0x00 ; '.'
000000000020b114         db  0x00 ; '.'
000000000020b115         db  0x00 ; '.'
000000000020b116         db  0x00 ; '.'
000000000020b117         db  0x00 ; '.'
000000000020b118         db  0x00 ; '.'
000000000020b119         db  0x00 ; '.'
000000000020b11a         db  0x00 ; '.'
000000000020b11b         db  0x00 ; '.'
000000000020b11c         db  0x00 ; '.'
000000000020b11d         db  0x00 ; '.'
000000000020b11e         db  0x00 ; '.'
000000000020b11f         db  0x00 ; '.'
                     slot0:
000000000020b120         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
000000000020b121         db  0x00 ; '.'
000000000020b122         db  0x00 ; '.'
000000000020b123         db  0x00 ; '.'
000000000020b124         db  0x00 ; '.'
000000000020b125         db  0x00 ; '.'
000000000020b126         db  0x00 ; '.'
000000000020b127         db  0x00 ; '.'
000000000020b128         db  0x00 ; '.'
000000000020b129         db  0x00 ; '.'
000000000020b12a         db  0x00 ; '.'
000000000020b12b         db  0x00 ; '.'
000000000020b12c         db  0x00 ; '.'
000000000020b12d         db  0x00 ; '.'
000000000020b12e         db  0x00 ; '.'
000000000020b12f         db  0x00 ; '.'
000000000020b130         db  0x00 ; '.'
000000000020b131         db  0x00 ; '.'
000000000020b132         db  0x00 ; '.'
000000000020b133         db  0x00 ; '.'
000000000020b134         db  0x00 ; '.'
000000000020b135         db  0x00 ; '.'
000000000020b136         db  0x00 ; '.'
000000000020b137         db  0x00 ; '.'
000000000020b138         db  0x00 ; '.'
000000000020b139         db  0x00 ; '.'
000000000020b13a         db  0x00 ; '.'
000000000020b13b         db  0x00 ; '.'
000000000020b13c         db  0x00 ; '.'
000000000020b13d         db  0x00 ; '.'
000000000020b13e         db  0x00 ; '.'
000000000020b13f         db  0x00 ; '.'
000000000020b140         db  0x00 ; '.'
000000000020b141         db  0x00 ; '.'
000000000020b142         db  0x00 ; '.'
000000000020b143         db  0x00 ; '.'
000000000020b144         db  0x00 ; '.'
000000000020b145         db  0x00 ; '.'
000000000020b146         db  0x00 ; '.'
000000000020b147         db  0x00 ; '.'
000000000020b148         db  0x00 ; '.'
000000000020b149         db  0x00 ; '.'
000000000020b14a         db  0x00 ; '.'
000000000020b14b         db  0x00 ; '.'
000000000020b14c         db  0x00 ; '.'
000000000020b14d         db  0x00 ; '.'
000000000020b14e         db  0x00 ; '.'
000000000020b14f         db  0x00 ; '.'
000000000020b150         db  0x00 ; '.'
000000000020b151         db  0x00 ; '.'
000000000020b152         db  0x00 ; '.'
000000000020b153         db  0x00 ; '.'
000000000020b154         db  0x00 ; '.'
000000000020b155         db  0x00 ; '.'
000000000020b156         db  0x00 ; '.'
000000000020b157         db  0x00 ; '.'
000000000020b158         db  0x00 ; '.'
000000000020b159         db  0x00 ; '.'
000000000020b15a         db  0x00 ; '.'
000000000020b15b         db  0x00 ; '.'
000000000020b15c         db  0x00 ; '.'
000000000020b15d         db  0x00 ; '.'
000000000020b15e         db  0x00 ; '.'
000000000020b15f         db  0x00 ; '.'
000000000020b160         db  0x00 ; '.'
000000000020b161         db  0x00 ; '.'
000000000020b162         db  0x00 ; '.'
000000000020b163         db  0x00 ; '.'
000000000020b164         db  0x00 ; '.'
000000000020b165         db  0x00 ; '.'
000000000020b166         db  0x00 ; '.'
000000000020b167         db  0x00 ; '.'
000000000020b168         db  0x00 ; '.'
000000000020b169         db  0x00 ; '.'
000000000020b16a         db  0x00 ; '.'
000000000020b16b         db  0x00 ; '.'
000000000020b16c         db  0x00 ; '.'
000000000020b16d         db  0x00 ; '.'
000000000020b16e         db  0x00 ; '.'
000000000020b16f         db  0x00 ; '.'
000000000020b170         db  0x00 ; '.'
000000000020b171         db  0x00 ; '.'
000000000020b172         db  0x00 ; '.'
000000000020b173         db  0x00 ; '.'
000000000020b174         db  0x00 ; '.'
000000000020b175         db  0x00 ; '.'
000000000020b176         db  0x00 ; '.'
000000000020b177         db  0x00 ; '.'
000000000020b178         db  0x00 ; '.'
000000000020b179         db  0x00 ; '.'
000000000020b17a         db  0x00 ; '.'
000000000020b17b         db  0x00 ; '.'
000000000020b17c         db  0x00 ; '.'
000000000020b17d         db  0x00 ; '.'
000000000020b17e         db  0x00 ; '.'
000000000020b17f         db  0x00 ; '.'
000000000020b180         db  0x00 ; '.'
000000000020b181         db  0x00 ; '.'
000000000020b182         db  0x00 ; '.'
000000000020b183         db  0x00 ; '.'
000000000020b184         db  0x00 ; '.'
000000000020b185         db  0x00 ; '.'
000000000020b186         db  0x00 ; '.'
000000000020b187         db  0x00 ; '.'
000000000020b188         db  0x00 ; '.'
000000000020b189         db  0x00 ; '.'
000000000020b18a         db  0x00 ; '.'
000000000020b18b         db  0x00 ; '.'
000000000020b18c         db  0x00 ; '.'
000000000020b18d         db  0x00 ; '.'
000000000020b18e         db  0x00 ; '.'
000000000020b18f         db  0x00 ; '.'
000000000020b190         db  0x00 ; '.'
000000000020b191         db  0x00 ; '.'
000000000020b192         db  0x00 ; '.'
000000000020b193         db  0x00 ; '.'
000000000020b194         db  0x00 ; '.'
000000000020b195         db  0x00 ; '.'
000000000020b196         db  0x00 ; '.'
000000000020b197         db  0x00 ; '.'
000000000020b198         db  0x00 ; '.'
000000000020b199         db  0x00 ; '.'
000000000020b19a         db  0x00 ; '.'
000000000020b19b         db  0x00 ; '.'
000000000020b19c         db  0x00 ; '.'
000000000020b19d         db  0x00 ; '.'
000000000020b19e         db  0x00 ; '.'
000000000020b19f         db  0x00 ; '.'
000000000020b1a0         db  0x00 ; '.'
000000000020b1a1         db  0x00 ; '.'
000000000020b1a2         db  0x00 ; '.'
000000000020b1a3         db  0x00 ; '.'
000000000020b1a4         db  0x00 ; '.'
000000000020b1a5         db  0x00 ; '.'
000000000020b1a6         db  0x00 ; '.'
000000000020b1a7         db  0x00 ; '.'
000000000020b1a8         db  0x00 ; '.'
000000000020b1a9         db  0x00 ; '.'
000000000020b1aa         db  0x00 ; '.'
000000000020b1ab         db  0x00 ; '.'
000000000020b1ac         db  0x00 ; '.'
000000000020b1ad         db  0x00 ; '.'
000000000020b1ae         db  0x00 ; '.'
000000000020b1af         db  0x00 ; '.'
000000000020b1b0         db  0x00 ; '.'
000000000020b1b1         db  0x00 ; '.'
000000000020b1b2         db  0x00 ; '.'
000000000020b1b3         db  0x00 ; '.'
000000000020b1b4         db  0x00 ; '.'
000000000020b1b5         db  0x00 ; '.'
000000000020b1b6         db  0x00 ; '.'
000000000020b1b7         db  0x00 ; '.'
000000000020b1b8         db  0x00 ; '.'
000000000020b1b9         db  0x00 ; '.'
000000000020b1ba         db  0x00 ; '.'
000000000020b1bb         db  0x00 ; '.'
000000000020b1bc         db  0x00 ; '.'
000000000020b1bd         db  0x00 ; '.'
000000000020b1be         db  0x00 ; '.'
000000000020b1bf         db  0x00 ; '.'
000000000020b1c0         db  0x00 ; '.'
000000000020b1c1         db  0x00 ; '.'
000000000020b1c2         db  0x00 ; '.'
000000000020b1c3         db  0x00 ; '.'
000000000020b1c4         db  0x00 ; '.'
000000000020b1c5         db  0x00 ; '.'
000000000020b1c6         db  0x00 ; '.'
000000000020b1c7         db  0x00 ; '.'
000000000020b1c8         db  0x00 ; '.'
000000000020b1c9         db  0x00 ; '.'
000000000020b1ca         db  0x00 ; '.'
000000000020b1cb         db  0x00 ; '.'
000000000020b1cc         db  0x00 ; '.'
000000000020b1cd         db  0x00 ; '.'
000000000020b1ce         db  0x00 ; '.'
000000000020b1cf         db  0x00 ; '.'
000000000020b1d0         db  0x00 ; '.'
000000000020b1d1         db  0x00 ; '.'
000000000020b1d2         db  0x00 ; '.'
000000000020b1d3         db  0x00 ; '.'
000000000020b1d4         db  0x00 ; '.'
000000000020b1d5         db  0x00 ; '.'
000000000020b1d6         db  0x00 ; '.'
000000000020b1d7         db  0x00 ; '.'
000000000020b1d8         db  0x00 ; '.'
000000000020b1d9         db  0x00 ; '.'
000000000020b1da         db  0x00 ; '.'
000000000020b1db         db  0x00 ; '.'
000000000020b1dc         db  0x00 ; '.'
000000000020b1dd         db  0x00 ; '.'
000000000020b1de         db  0x00 ; '.'
000000000020b1df         db  0x00 ; '.'
000000000020b1e0         db  0x00 ; '.'
000000000020b1e1         db  0x00 ; '.'
000000000020b1e2         db  0x00 ; '.'
000000000020b1e3         db  0x00 ; '.'
000000000020b1e4         db  0x00 ; '.'
000000000020b1e5         db  0x00 ; '.'
000000000020b1e6         db  0x00 ; '.'
000000000020b1e7         db  0x00 ; '.'
000000000020b1e8         db  0x00 ; '.'
000000000020b1e9         db  0x00 ; '.'
000000000020b1ea         db  0x00 ; '.'
000000000020b1eb         db  0x00 ; '.'
000000000020b1ec         db  0x00 ; '.'
000000000020b1ed         db  0x00 ; '.'
000000000020b1ee         db  0x00 ; '.'
000000000020b1ef         db  0x00 ; '.'
000000000020b1f0         db  0x00 ; '.'
000000000020b1f1         db  0x00 ; '.'
000000000020b1f2         db  0x00 ; '.'
000000000020b1f3         db  0x00 ; '.'
000000000020b1f4         db  0x00 ; '.'
000000000020b1f5         db  0x00 ; '.'
000000000020b1f6         db  0x00 ; '.'
000000000020b1f7         db  0x00 ; '.'
000000000020b1f8         db  0x00 ; '.'
000000000020b1f9         db  0x00 ; '.'
000000000020b1fa         db  0x00 ; '.'
000000000020b1fb         db  0x00 ; '.'
000000000020b1fc         db  0x00 ; '.'
000000000020b1fd         db  0x00 ; '.'
000000000020b1fe         db  0x00 ; '.'
000000000020b1ff         db  0x00 ; '.'
000000000020b200         db  0x00 ; '.'
000000000020b201         db  0x00 ; '.'
000000000020b202         db  0x00 ; '.'
000000000020b203         db  0x00 ; '.'
000000000020b204         db  0x00 ; '.'
000000000020b205         db  0x00 ; '.'
000000000020b206         db  0x00 ; '.'
000000000020b207         db  0x00 ; '.'
000000000020b208         db  0x00 ; '.'
000000000020b209         db  0x00 ; '.'
000000000020b20a         db  0x00 ; '.'
000000000020b20b         db  0x00 ; '.'
000000000020b20c         db  0x00 ; '.'
000000000020b20d         db  0x00 ; '.'
000000000020b20e         db  0x00 ; '.'
000000000020b20f         db  0x00 ; '.'
000000000020b210         db  0x00 ; '.'
000000000020b211         db  0x00 ; '.'
000000000020b212         db  0x00 ; '.'
000000000020b213         db  0x00 ; '.'
000000000020b214         db  0x00 ; '.'
000000000020b215         db  0x00 ; '.'
000000000020b216         db  0x00 ; '.'
000000000020b217         db  0x00 ; '.'
000000000020b218         db  0x00 ; '.'
000000000020b219         db  0x00 ; '.'
000000000020b21a         db  0x00 ; '.'
000000000020b21b         db  0x00 ; '.'
000000000020b21c         db  0x00 ; '.'
000000000020b21d         db  0x00 ; '.'
000000000020b21e         db  0x00 ; '.'
000000000020b21f         db  0x00 ; '.'
                     default_quoting_options:
000000000020b220         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
000000000020b221         db  0x00 ; '.'
000000000020b222         db  0x00 ; '.'
000000000020b223         db  0x00 ; '.'
000000000020b224         db  0x00 ; '.'
000000000020b225         db  0x00 ; '.'
000000000020b226         db  0x00 ; '.'
000000000020b227         db  0x00 ; '.'
000000000020b228         db  0x00 ; '.'
000000000020b229         db  0x00 ; '.'
000000000020b22a         db  0x00 ; '.'
000000000020b22b         db  0x00 ; '.'
000000000020b22c         db  0x00 ; '.'
000000000020b22d         db  0x00 ; '.'
000000000020b22e         db  0x00 ; '.'
000000000020b22f         db  0x00 ; '.'
000000000020b230         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
000000000020b231         db  0x00 ; '.'
000000000020b232         db  0x00 ; '.'
000000000020b233         db  0x00 ; '.'
000000000020b234         db  0x00 ; '.'
000000000020b235         db  0x00 ; '.'
000000000020b236         db  0x00 ; '.'
000000000020b237         db  0x00 ; '.'
000000000020b238         db  0x00 ; '.'
000000000020b239         db  0x00 ; '.'
000000000020b23a         db  0x00 ; '.'
000000000020b23b         db  0x00 ; '.'
000000000020b23c         db  0x00 ; '.'
000000000020b23d         db  0x00 ; '.'
000000000020b23e         db  0x00 ; '.'
000000000020b23f         db  0x00 ; '.'
000000000020b240         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
000000000020b241         db  0x00 ; '.'
000000000020b242         db  0x00 ; '.'
000000000020b243         db  0x00 ; '.'
000000000020b244         db  0x00 ; '.'
000000000020b245         db  0x00 ; '.'
000000000020b246         db  0x00 ; '.'
000000000020b247         db  0x00 ; '.'
000000000020b248         db  0x00 ; '.'
000000000020b249         db  0x00 ; '.'
000000000020b24a         db  0x00 ; '.'
000000000020b24b         db  0x00 ; '.'
000000000020b24c         db  0x00 ; '.'
000000000020b24d         db  0x00 ; '.'
000000000020b24e         db  0x00 ; '.'
000000000020b24f         db  0x00 ; '.'
                     qword_20b250:
000000000020b250         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
000000000020b251         db  0x00 ; '.'
000000000020b252         db  0x00 ; '.'
000000000020b253         db  0x00 ; '.'
000000000020b254         db  0x00 ; '.'
000000000020b255         db  0x00 ; '.'
000000000020b256         db  0x00 ; '.'
000000000020b257         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x20b260; 0x20b5d0[ (880 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x20b260; 0x416830[ (2143696 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     free:
000000000020b260         extern function code                                   ; DATA XREF=free@GOT
                     abort:
000000000020b268         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
000000000020b270         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
000000000020b278         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
000000000020b280         extern function code
                     _exit:
000000000020b288         extern function code                                   ; DATA XREF=_exit@GOT
                     __fpending:
000000000020b290         extern function code                                   ; DATA XREF=__fpending@GOT
                     fread_unlocked:
000000000020b298         extern function code                                   ; DATA XREF=fread_unlocked@GOT
                     textdomain:
000000000020b2a0         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
000000000020b2a8         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
000000000020b2b0         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
000000000020b2b8         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
000000000020b2c0         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
000000000020b2c8         extern function code                                   ; DATA XREF=strlen@GOT
                     __stack_chk_fail:
000000000020b2d0         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
000000000020b2d8         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
000000000020b2e0         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     strchr:
000000000020b2e8         extern function code                                   ; DATA XREF=strchr@GOT
                     __overflow:
000000000020b2f0         extern function code                                   ; DATA XREF=__overflow@GOT
                     strrchr:
000000000020b2f8         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
000000000020b300         extern function code                                   ; DATA XREF=lseek@GOT
                     __assert_fail:
000000000020b308         extern function code                                   ; DATA XREF=__assert_fail@GOT
                     __strtoul_internal:
000000000020b310         extern function code                                   ; DATA XREF=__strtoul_internal@GOT
                     memset:
000000000020b318         extern function code                                   ; DATA XREF=memset@GOT
                     posix_fadvise:
000000000020b320         extern function code                                   ; DATA XREF=posix_fadvise@GOT
                     memchr:
000000000020b328         extern function code                                   ; DATA XREF=memchr@GOT
                     __libc_start_main:
000000000020b330         extern function code
                     memcmp:
000000000020b338         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
000000000020b340         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
000000000020b348         extern function code                                   ; DATA XREF=calloc@GOT
                     strcmp:
000000000020b350         extern function code                                   ; DATA XREF=strcmp@GOT
                     __gmon_start__:
000000000020b358         extern function code
                     memcpy:
000000000020b360         extern function code                                   ; DATA XREF=memcpy@GOT
                     fileno:
000000000020b368         extern function code                                   ; DATA XREF=fileno@GOT
                     malloc:
000000000020b370         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
000000000020b378         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
000000000020b380         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __freading:
000000000020b388         extern function code                                   ; DATA XREF=__freading@GOT
                     fwrite_unlocked:
000000000020b390         extern function code                                   ; DATA XREF=fwrite_unlocked@GOT
                     realloc:
000000000020b398         extern function code                                   ; DATA XREF=realloc@GOT
                     setlocale:
000000000020b3a0         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
000000000020b3a8         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     memmove:
000000000020b3b0         extern function code                                   ; DATA XREF=memmove@GOT
                     error:
000000000020b3b8         extern function code                                   ; DATA XREF=error@GOT
                     fseeko:
000000000020b3c0         extern function code                                   ; DATA XREF=fseeko@GOT
                     fopen:
000000000020b3c8         extern function code                                   ; DATA XREF=fopen@GOT
                     __cxa_atexit:
000000000020b3d0         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     exit:
000000000020b3d8         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
000000000020b3e0         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
000000000020b3e8         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
000000000020b3f0         extern function code
                     mbsinit:
000000000020b3f8         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
000000000020b400         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
000000000020b408         extern function code
                     __ctype_b_loc:
000000000020b410         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     free@@GLIBC_2.2.5:
000000000020b418         extern function code
                     abort@@GLIBC_2.2.5:
000000000020b420         extern function code
                     __errno_location@@GLIBC_2.2.5:
000000000020b428         extern function code
                     strncmp@@GLIBC_2.2.5:
000000000020b430         extern function code
                     _ITM_deregisterTMCloneTable_20b438:        // _ITM_deregisterTMCloneTable
000000000020b438         extern function code
                     _exit@@GLIBC_2.2.5:
000000000020b440         extern function code
                     __fpending@@GLIBC_2.2.5:
000000000020b448         extern function code
                     fread_unlocked@@GLIBC_2.2.5:
000000000020b450         extern function code
                     textdomain@@GLIBC_2.2.5:
000000000020b458         extern function code
                     fclose@@GLIBC_2.2.5:
000000000020b460         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
000000000020b468         extern function code
                     dcgettext@@GLIBC_2.2.5:
000000000020b470         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
000000000020b478         extern function code
                     strlen@@GLIBC_2.2.5:
000000000020b480         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
000000000020b488         extern function code
                     getopt_long@@GLIBC_2.2.5:
000000000020b490         extern function code
                     mbrtowc@@GLIBC_2.2.5:
000000000020b498         extern function code
                     strchr@@GLIBC_2.2.5:
000000000020b4a0         extern function code
                     __overflow@@GLIBC_2.2.5:
000000000020b4a8         extern function code
                     strrchr@@GLIBC_2.2.5:
000000000020b4b0         extern function code
                     lseek@@GLIBC_2.2.5:
000000000020b4b8         extern function code
                     __assert_fail@@GLIBC_2.2.5:
000000000020b4c0         extern function code
                     __strtoul_internal@@GLIBC_2.2.5:
000000000020b4c8         extern function code
                     memset@@GLIBC_2.2.5:
000000000020b4d0         extern function code
                     posix_fadvise@@GLIBC_2.2.5:
000000000020b4d8         extern function code
                     memchr@@GLIBC_2.2.5:
000000000020b4e0         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
000000000020b4e8         extern function code
                     memcmp@@GLIBC_2.2.5:
000000000020b4f0         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
000000000020b4f8         extern function code
                     calloc@@GLIBC_2.2.5:
000000000020b500         extern function code
                     strcmp@@GLIBC_2.2.5:
000000000020b508         extern function code
                     __gmon_start___20b510:        // __gmon_start__
000000000020b510         extern function code
                     memcpy@@GLIBC_2.14:
000000000020b518         extern function code
                     fileno@@GLIBC_2.2.5:
000000000020b520         extern function code
                     malloc@@GLIBC_2.2.5:
000000000020b528         extern function code
                     fflush@@GLIBC_2.2.5:
000000000020b530         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
000000000020b538         extern function code
                     __freading@@GLIBC_2.2.5:
000000000020b540         extern function code
                     fwrite_unlocked@@GLIBC_2.2.5:
000000000020b548         extern function code
                     realloc@@GLIBC_2.2.5:
000000000020b550         extern function code
                     setlocale@@GLIBC_2.2.5:
000000000020b558         extern function code
                     __printf_chk@@GLIBC_2.3.4:
000000000020b560         extern function code
                     memmove@@GLIBC_2.2.5:
000000000020b568         extern function code
                     error@@GLIBC_2.2.5:
000000000020b570         extern function code
                     fseeko@@GLIBC_2.2.5:
000000000020b578         extern function code
                     fopen@@GLIBC_2.2.5:
000000000020b580         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
000000000020b588         extern function code
                     exit@@GLIBC_2.2.5:
000000000020b590         extern function code
                     fwrite@@GLIBC_2.2.5:
000000000020b598         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
000000000020b5a0         extern function code
                     _ITM_registerTMCloneTable_20b5a8:        // _ITM_registerTMCloneTable
000000000020b5a8         extern function code
                     mbsinit@@GLIBC_2.2.5:
000000000020b5b0         extern function code
                     iswprint@@GLIBC_2.2.5:
000000000020b5b8         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
000000000020b5c0         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
000000000020b5c8         extern function code
