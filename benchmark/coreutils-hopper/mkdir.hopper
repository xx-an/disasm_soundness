
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/mkdir
        UUID: 24A0E121-56F1-94FC-7C28-DB7CBF094D6F
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0xac40[ (44096 bytes)
        ; File offset : [0; 44096[ (44096 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0xd0 ; '.'
0000000000000019         db  0x1d ; '.'
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0xa0 ; '.'
0000000000000029         db  0xd0 ; '.'
000000000000002a         db  0x03 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0x40 ; '@'
00000000000000d1         db  0xac ; '.'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0x40 ; '@'
00000000000000d9         db  0xac ; '.'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0x90 ; '.'
00000000000000f1         db  0xba ; '.'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0x90 ; '.'
00000000000000f9         db  0xba ; '.'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0x90 ; '.'                                         ; DATA XREF=quotearg_free+87, rpl_fflush+18, slotvec0
0000000000000101         db  0xba ; '.'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0xf0 ; '.'
0000000000000109         db  0x05 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0xb0 ; '.'
0000000000000111         db  0x07 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'                                         ; DATA XREF=mode_compile+688, mode_adjust+143, mode_adjust+160
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0xd8 ; '.'
0000000000000129         db  0xbb ; '.'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0xd8 ; '.'
0000000000000131         db  0xbb ; '.'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0xd8 ; '.'
0000000000000139         db  0xbb ; '.'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'                                         ; DATA XREF=mode_compile+847, mode_create_from_ref+61
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0x6c ; 'l'
0000000000000199         db  0x99 ; '.'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0x6c ; 'l'
00000000000001a1         db  0x99 ; '.'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0x6c ; 'l'
00000000000001a9         db  0x99 ; '.'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0x0c ; '.'
00000000000001b1         db  0x03 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0x0c ; '.'
00000000000001b9         db  0x03 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'                                         ; DATA XREF=mode_compile+304
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'                                         ; DATA XREF=main+54, main+447, main+583, make_ancestor+46, make_ancestor+116, make_dir_parents+552
0000000000000200         db  0x52 ; 'R'                                         ; DATA XREF=make_dir_parents+165, mode_compile+656
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'                                         ; DATA XREF=mode_compile+784
0000000000000208         db  0x90 ; '.'
0000000000000209         db  0xba ; '.'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0x90 ; '.'
0000000000000211         db  0xba ; '.'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0x90 ; '.'
0000000000000219         db  0xba ; '.'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0x70 ; 'p'
0000000000000221         db  0x05 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0x70 ; 'p'
0000000000000229         db  0x05 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000000238         db  0x2f ; '/'
0000000000000239         db  0x6c ; 'l'
000000000000023a         db  0x69 ; 'i'
000000000000023b         db  0x62 ; 'b'
000000000000023c         db  0x36 ; '6'
000000000000023d         db  0x34 ; '4'
000000000000023e         db  0x2f ; '/'
000000000000023f         db  0x6c ; 'l'
0000000000000240         db  0x64 ; 'd'
0000000000000241         db  0x2d ; '-'
0000000000000242         db  0x6c ; 'l'
0000000000000243         db  0x69 ; 'i'
0000000000000244         db  0x6e ; 'n'
0000000000000245         db  0x75 ; 'u'
0000000000000246         db  0x78 ; 'x'
0000000000000247         db  0x2d ; '-'
0000000000000248         db  0x78 ; 'x'
0000000000000249         db  0x38 ; '8'
000000000000024a         db  0x36 ; '6'
000000000000024b         db  0x2d ; '-'
000000000000024c         db  0x36 ; '6'
000000000000024d         db  0x34 ; '4'
000000000000024e         db  0x2e ; '.'
000000000000024f         db  0x73 ; 's'
0000000000000250         db  0x6f ; 'o'
0000000000000251         db  0x2e ; '.'
0000000000000252         db  0x32 ; '2'
0000000000000253         db  0x00 ; '.'


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0x24 ; '$'
0000000000000285         db  0xa0 ; '.'
0000000000000286         db  0xe1 ; '.'
0000000000000287         db  0x21 ; '!'
0000000000000288         db  0x56 ; 'V'
0000000000000289         db  0xf1 ; '.'
000000000000028a         db  0x94 ; '.'
000000000000028b         db  0xfc ; '.'
000000000000028c         db  0x7c ; '|'
000000000000028d         db  0x28 ; '('
000000000000028e         db  0xdb ; '.'
000000000000028f         db  0x7c ; '|'
0000000000000290         db  0xbf ; '.'
0000000000000291         db  0x09 ; '.'
0000000000000292         db  0x4d ; 'M'
0000000000000293         db  0x6f ; 'o'
0000000000000294         db  0x41 ; 'A'
0000000000000295         db  0x73 ; 's'
0000000000000296         db  0xc9 ; '.'
0000000000000297         db  0xa8 ; '.'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2dc[ (68 bytes)
        ; File offset : [664; 732[ (68 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x43 ; 'C'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'
00000000000002a9         db  0x4d ; 'M'
00000000000002aa         db  0x41 ; 'A'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0x20 ; ' '
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x1c ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x43 ; 'C'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x44 ; 'D'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x49 ; 'I'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x96 ; '.'
00000000000002c5         db  0xa0 ; '.'
00000000000002c6         db  0x89 ; '.'
00000000000002c7         db  0x97 ; '.'
00000000000002c8         db  0xce ; '.'
00000000000002c9         db  0x2c ; ','
00000000000002ca         db  0x63 ; 'c'
00000000000002cb         db  0x72 ; 'r'
00000000000002cc         db  0xe4 ; '.'
00000000000002cd         db  0x62 ; 'b'
00000000000002ce         db  0x41 ; 'A'
00000000000002cf         db  0xf5 ; '.'
00000000000002d0         db  0x39 ; '9'
00000000000002d1         db  0xf2 ; '.'
00000000000002d2         db  0x8b ; '.'
00000000000002d3         db  0x1c ; '.'
00000000000002d4         db  0x32 ; '2'
00000000000002d5         db  0xc4 ; '.'
00000000000002d6         db  0xf7 ; '.'
00000000000002d7         db  0x12 ; '.'
00000000000002d8         db  0xb3 ; '.'
00000000000002d9         db  0xa2 ; '.'
00000000000002da         db  0xf7 ; '.'
00000000000002db         db  0x12 ; '.'
00000000000002dc         db  0x00 ; '.'
00000000000002dd         db  0x00 ; '.'
00000000000002de         db  0x00 ; '.'
00000000000002df         db  0x00 ; '.'


        ; Section .dynsym
        ; Range: [0x2e0; 0x9e8[ (1800 bytes)
        ; File offset : [736; 2536[ (1800 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0x97 ; '.'
00000000000002f9         db  0x01 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x12 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x4d ; 'M'
0000000000000311         db  0x01 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x12 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0x6e ; 'n'
0000000000000329         db  0x02 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x12 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0x93 ; '.'
0000000000000341         db  0x00 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x12 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0xf8 ; '.'
0000000000000359         db  0x00 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x12 ; '.'
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0x38 ; '8'
0000000000000371         db  0x00 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x12 ; '.'
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0xdc ; '.'
0000000000000389         db  0x02 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x20 ; ' '
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0x99 ; '.'
00000000000003a1         db  0x00 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x12 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0xd1 ; '.'
00000000000003b9         db  0x01 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x12 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0x85 ; '.'
00000000000003d1         db  0x00 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x12 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0x0e ; '.'
00000000000003e9         db  0x02 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x12 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'                                         ; DATA XREF=mode_compile+829
0000000000000400         db  0x20 ; ' '                                         ; DATA XREF=rpl_fcntl+288
0000000000000401         db  0x02 ; '.'                                         ; DATA XREF=rpl_fcntl+272
0000000000000402         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+280
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x12 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+81, rpl_fcntl+123, rpl_fcntl+264
0000000000000407         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+256
0000000000000408         db  0x00 ; '.'                                         ; DATA XREF=vasnprintf+29
0000000000000409         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+336
000000000000040a         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+350
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0x75 ; 'u'
0000000000000419         db  0x01 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x12 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0x39 ; '9'
0000000000000431         db  0x01 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x12 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'                                         ; DATA XREF=mode_compile+752
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0x1c ; '.'
0000000000000449         db  0x02 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x12 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0x4f ; 'O'
0000000000000461         db  0x00 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x12 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0xc5 ; '.'
0000000000000479         db  0x00 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x12 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0xea ; '.'
0000000000000491         db  0x00 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x12 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x5a ; 'Z'
00000000000004a9         db  0x00 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x12 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0x6b ; 'k'
00000000000004c1         db  0x00 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x12 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0xa6 ; '.'
00000000000004d9         db  0x01 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x12 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0x30 ; '0'
00000000000004f1         db  0x00 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x12 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0x54 ; 'T'
0000000000000509         db  0x02 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x12 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0x47 ; 'G'
0000000000000521         db  0x00 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x12 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0x2c ; ','
0000000000000539         db  0x01 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x12 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0xb7 ; '.'
0000000000000551         db  0x00 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x12 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0xf1 ; '.'
0000000000000569         db  0x00 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x12 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0x3a ; ':'
0000000000000581         db  0x01 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x12 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0x3b ; ';'
0000000000000599         db  0x02 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x12 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0x09 ; '.'
00000000000005b1         db  0x01 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x12 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0x5f ; '_'
00000000000005c9         db  0x02 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x12 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0xe3 ; '.'
00000000000005e1         db  0x00 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x12 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0xf8 ; '.'
00000000000005f9         db  0x02 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x20 ; ' '
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x47 ; 'G'
0000000000000611         db  0x01 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x12 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0x32 ; '2'
0000000000000629         db  0x01 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x12 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0xbb ; '.'
0000000000000641         db  0x01 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x12 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x14 ; '.'
0000000000000659         db  0x02 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x12 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x40 ; '@'
0000000000000671         db  0x01 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x12 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0x0b ; '.'
0000000000000689         db  0x00 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x12 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x5b ; '['
00000000000006a1         db  0x01 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x12 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0xb2 ; '.'
00000000000006b9         db  0x01 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x12 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0xdc ; '.'
00000000000006d1         db  0x00 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x12 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0x85 ; '.'
00000000000006e9         db  0x01 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x12 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x59 ; 'Y'
0000000000000701         db  0x00 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x12 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x2b ; '+'
0000000000000719         db  0x02 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x12 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x1f ; '.'
0000000000000731         db  0x01 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x12 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0x8b ; '.'
0000000000000749         db  0x00 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x12 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0x26 ; '&'
0000000000000761         db  0x00 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x12 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0x19 ; '.'
0000000000000779         db  0x00 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x12 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x12 ; '.'
0000000000000791         db  0x00 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x12 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0x13 ; '.'
00000000000007a9         db  0x00 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x12 ; '.'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x00 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0x60 ; '`'
00000000000007c1         db  0x00 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x12 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x00 ; '.'                                         ; DATA XREF=rpl_vfprintf+29
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0xc9 ; '.'
00000000000007d9         db  0x01 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x12 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x00 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0xdc ; '.'
00000000000007f1         db  0x01 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x12 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x00 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x00 ; '.'                                         ; DATA XREF=rpl_vfprintf+12, rpl_vfprintf+155
00000000000007f9         db  0x00 ; '.'
00000000000007fa         db  0x00 ; '.'
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x00 ; '.'
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x4d ; 'M'
0000000000000809         db  0x02 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x12 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x00 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0x00 ; '.'
0000000000000811         db  0x00 ; '.'
0000000000000812         db  0x00 ; '.'
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x00 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0x1e ; '.'
0000000000000821         db  0x01 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x12 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x00 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0x00 ; '.'
0000000000000829         db  0x00 ; '.'
000000000000082a         db  0x00 ; '.'
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x00 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x8e ; '.'
0000000000000839         db  0x02 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x12 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x00 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0x00 ; '.'
0000000000000841         db  0x00 ; '.'
0000000000000842         db  0x00 ; '.'
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x00 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0x9a ; '.'
0000000000000851         db  0x00 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x12 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x00 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0x00 ; '.'
0000000000000859         db  0x00 ; '.'
000000000000085a         db  0x00 ; '.'
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x00 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0xc2 ; '.'
0000000000000869         db  0x01 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x12 ; '.'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x00 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0x00 ; '.'
0000000000000871         db  0x00 ; '.'
0000000000000872         db  0x00 ; '.'
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x00 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0x10 ; '.'
0000000000000881         db  0x01 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x12 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x00 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0x00 ; '.'
0000000000000889         db  0x00 ; '.'
000000000000088a         db  0x00 ; '.'
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x00 ; '.'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x00 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0x07 ; '.'
0000000000000899         db  0x03 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x20 ; ' '
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x00 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0x00 ; '.'
00000000000008a1         db  0x00 ; '.'
00000000000008a2         db  0x00 ; '.'
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x00 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x00 ; '.'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x00 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x00 ; '.'
00000000000008b0         db  0x53 ; 'S'
00000000000008b1         db  0x01 ; '.'
00000000000008b2         db  0x00 ; '.'
00000000000008b3         db  0x00 ; '.'
00000000000008b4         db  0x12 ; '.'
00000000000008b5         db  0x00 ; '.'
00000000000008b6         db  0x00 ; '.'
00000000000008b7         db  0x00 ; '.'
00000000000008b8         db  0x00 ; '.'
00000000000008b9         db  0x00 ; '.'
00000000000008ba         db  0x00 ; '.'
00000000000008bb         db  0x00 ; '.'
00000000000008bc         db  0x00 ; '.'
00000000000008bd         db  0x00 ; '.'
00000000000008be         db  0x00 ; '.'
00000000000008bf         db  0x00 ; '.'
00000000000008c0         db  0x00 ; '.'
00000000000008c1         db  0x00 ; '.'
00000000000008c2         db  0x00 ; '.'
00000000000008c3         db  0x00 ; '.'
00000000000008c4         db  0x00 ; '.'
00000000000008c5         db  0x00 ; '.'
00000000000008c6         db  0x00 ; '.'
00000000000008c7         db  0x00 ; '.'
00000000000008c8         db  0x7c ; '|'
00000000000008c9         db  0x00 ; '.'
00000000000008ca         db  0x00 ; '.'
00000000000008cb         db  0x00 ; '.'
00000000000008cc         db  0x12 ; '.'
00000000000008cd         db  0x00 ; '.'
00000000000008ce         db  0x00 ; '.'
00000000000008cf         db  0x00 ; '.'
00000000000008d0         db  0x00 ; '.'
00000000000008d1         db  0x00 ; '.'
00000000000008d2         db  0x00 ; '.'
00000000000008d3         db  0x00 ; '.'
00000000000008d4         db  0x00 ; '.'
00000000000008d5         db  0x00 ; '.'
00000000000008d6         db  0x00 ; '.'
00000000000008d7         db  0x00 ; '.'
00000000000008d8         db  0x00 ; '.'
00000000000008d9         db  0x00 ; '.'
00000000000008da         db  0x00 ; '.'
00000000000008db         db  0x00 ; '.'
00000000000008dc         db  0x00 ; '.'
00000000000008dd         db  0x00 ; '.'
00000000000008de         db  0x00 ; '.'
00000000000008df         db  0x00 ; '.'
00000000000008e0         db  0xff ; '.'
00000000000008e1         db  0x01 ; '.'
00000000000008e2         db  0x00 ; '.'
00000000000008e3         db  0x00 ; '.'
00000000000008e4         db  0x22 ; '"'
00000000000008e5         db  0x00 ; '.'
00000000000008e6         db  0x00 ; '.'
00000000000008e7         db  0x00 ; '.'
00000000000008e8         db  0x00 ; '.'
00000000000008e9         db  0x00 ; '.'
00000000000008ea         db  0x00 ; '.'
00000000000008eb         db  0x00 ; '.'
00000000000008ec         db  0x00 ; '.'
00000000000008ed         db  0x00 ; '.'
00000000000008ee         db  0x00 ; '.'
00000000000008ef         db  0x00 ; '.'
00000000000008f0         db  0x00 ; '.'
00000000000008f1         db  0x00 ; '.'
00000000000008f2         db  0x00 ; '.'
00000000000008f3         db  0x00 ; '.'
00000000000008f4         db  0x00 ; '.'
00000000000008f5         db  0x00 ; '.'
00000000000008f6         db  0x00 ; '.'
00000000000008f7         db  0x00 ; '.'
00000000000008f8         db  0x66 ; 'f'
00000000000008f9         db  0x00 ; '.'
00000000000008fa         db  0x00 ; '.'
00000000000008fb         db  0x00 ; '.'
00000000000008fc         db  0x12 ; '.'
00000000000008fd         db  0x00 ; '.'
00000000000008fe         db  0x00 ; '.'
00000000000008ff         db  0x00 ; '.'
0000000000000900         db  0x00 ; '.'
0000000000000901         db  0x00 ; '.'
0000000000000902         db  0x00 ; '.'
0000000000000903         db  0x00 ; '.'
0000000000000904         db  0x00 ; '.'
0000000000000905         db  0x00 ; '.'
0000000000000906         db  0x00 ; '.'
0000000000000907         db  0x00 ; '.'
0000000000000908         db  0x00 ; '.'
0000000000000909         db  0x00 ; '.'
000000000000090a         db  0x00 ; '.'
000000000000090b         db  0x00 ; '.'
000000000000090c         db  0x00 ; '.'
000000000000090d         db  0x00 ; '.'
000000000000090e         db  0x00 ; '.'
000000000000090f         db  0x00 ; '.'
0000000000000910         db  0x67 ; 'g'
0000000000000911         db  0x01 ; '.'
0000000000000912         db  0x00 ; '.'
0000000000000913         db  0x00 ; '.'
0000000000000914         db  0x12 ; '.'
0000000000000915         db  0x00 ; '.'
0000000000000916         db  0x00 ; '.'
0000000000000917         db  0x00 ; '.'
0000000000000918         db  0x00 ; '.'
0000000000000919         db  0x00 ; '.'
000000000000091a         db  0x00 ; '.'
000000000000091b         db  0x00 ; '.'
000000000000091c         db  0x00 ; '.'
000000000000091d         db  0x00 ; '.'
000000000000091e         db  0x00 ; '.'
000000000000091f         db  0x00 ; '.'
0000000000000920         db  0x00 ; '.'
0000000000000921         db  0x00 ; '.'
0000000000000922         db  0x00 ; '.'
0000000000000923         db  0x00 ; '.'
0000000000000924         db  0x00 ; '.'
0000000000000925         db  0x00 ; '.'
0000000000000926         db  0x00 ; '.'
0000000000000927         db  0x00 ; '.'
0000000000000928         db  0x25 ; '%'
0000000000000929         db  0x01 ; '.'
000000000000092a         db  0x00 ; '.'
000000000000092b         db  0x00 ; '.'
000000000000092c         db  0x11 ; '.'
000000000000092d         db  0x00 ; '.'
000000000000092e         db  0x19 ; '.'
000000000000092f         db  0x00 ; '.'
0000000000000930         db  0x88 ; '.'
0000000000000931         db  0xc0 ; '.'
0000000000000932         db  0x20 ; ' '
0000000000000933         db  0x00 ; '.'
0000000000000934         db  0x00 ; '.'
0000000000000935         db  0x00 ; '.'
0000000000000936         db  0x00 ; '.'
0000000000000937         db  0x00 ; '.'
0000000000000938         db  0x08 ; '.'
0000000000000939         db  0x00 ; '.'
000000000000093a         db  0x00 ; '.'
000000000000093b         db  0x00 ; '.'
000000000000093c         db  0x00 ; '.'
000000000000093d         db  0x00 ; '.'
000000000000093e         db  0x00 ; '.'
000000000000093f         db  0x00 ; '.'
0000000000000940         db  0x73 ; 's'
0000000000000941         db  0x02 ; '.'
0000000000000942         db  0x00 ; '.'
0000000000000943         db  0x00 ; '.'
0000000000000944         db  0x11 ; '.'
0000000000000945         db  0x00 ; '.'
0000000000000946         db  0x19 ; '.'
0000000000000947         db  0x00 ; '.'
0000000000000948         db  0x80 ; '.'
0000000000000949         db  0xc0 ; '.'
000000000000094a         db  0x20 ; ' '
000000000000094b         db  0x00 ; '.'
000000000000094c         db  0x00 ; '.'
000000000000094d         db  0x00 ; '.'
000000000000094e         db  0x00 ; '.'
000000000000094f         db  0x00 ; '.'
0000000000000950         db  0x08 ; '.'
0000000000000951         db  0x00 ; '.'
0000000000000952         db  0x00 ; '.'
0000000000000953         db  0x00 ; '.'
0000000000000954         db  0x00 ; '.'
0000000000000955         db  0x00 ; '.'
0000000000000956         db  0x00 ; '.'
0000000000000957         db  0x00 ; '.'
0000000000000958         db  0x9f ; '.'
0000000000000959         db  0x00 ; '.'
000000000000095a         db  0x00 ; '.'
000000000000095b         db  0x00 ; '.'
000000000000095c         db  0x21 ; '!'
000000000000095d         db  0x00 ; '.'
000000000000095e         db  0x19 ; '.'
000000000000095f         db  0x00 ; '.'
0000000000000960         db  0xa0 ; '.'
0000000000000961         db  0xc0 ; '.'
0000000000000962         db  0x20 ; ' '
0000000000000963         db  0x00 ; '.'
0000000000000964         db  0x00 ; '.'
0000000000000965         db  0x00 ; '.'
0000000000000966         db  0x00 ; '.'
0000000000000967         db  0x00 ; '.'
0000000000000968         db  0x08 ; '.'
0000000000000969         db  0x00 ; '.'
000000000000096a         db  0x00 ; '.'
000000000000096b         db  0x00 ; '.'
000000000000096c         db  0x00 ; '.'
000000000000096d         db  0x00 ; '.'
000000000000096e         db  0x00 ; '.'
000000000000096f         db  0x00 ; '.'
0000000000000970         db  0x7e ; '~'
0000000000000971         db  0x02 ; '.'
0000000000000972         db  0x00 ; '.'
0000000000000973         db  0x00 ; '.'
0000000000000974         db  0x11 ; '.'
0000000000000975         db  0x00 ; '.'
0000000000000976         db  0x19 ; '.'
0000000000000977         db  0x00 ; '.'
0000000000000978         db  0xa0 ; '.'
0000000000000979         db  0xc0 ; '.'
000000000000097a         db  0x20 ; ' '
000000000000097b         db  0x00 ; '.'
000000000000097c         db  0x00 ; '.'
000000000000097d         db  0x00 ; '.'
000000000000097e         db  0x00 ; '.'
000000000000097f         db  0x00 ; '.'
0000000000000980         db  0x08 ; '.'
0000000000000981         db  0x00 ; '.'
0000000000000982         db  0x00 ; '.'
0000000000000983         db  0x00 ; '.'
0000000000000984         db  0x00 ; '.'
0000000000000985         db  0x00 ; '.'
0000000000000986         db  0x00 ; '.'
0000000000000987         db  0x00 ; '.'
0000000000000988         db  0xe1 ; '.'
0000000000000989         db  0x01 ; '.'
000000000000098a         db  0x00 ; '.'
000000000000098b         db  0x00 ; '.'
000000000000098c         db  0x21 ; '!'
000000000000098d         db  0x00 ; '.'
000000000000098e         db  0x19 ; '.'
000000000000098f         db  0x00 ; '.'
0000000000000990         db  0x80 ; '.'
0000000000000991         db  0xc0 ; '.'
0000000000000992         db  0x20 ; ' '
0000000000000993         db  0x00 ; '.'
0000000000000994         db  0x00 ; '.'
0000000000000995         db  0x00 ; '.'
0000000000000996         db  0x00 ; '.'
0000000000000997         db  0x00 ; '.'
0000000000000998         db  0x08 ; '.'
0000000000000999         db  0x00 ; '.'
000000000000099a         db  0x00 ; '.'
000000000000099b         db  0x00 ; '.'
000000000000099c         db  0x00 ; '.'
000000000000099d         db  0x00 ; '.'
000000000000099e         db  0x00 ; '.'
000000000000099f         db  0x00 ; '.'
00000000000009a0         db  0x90 ; '.'
00000000000009a1         db  0x01 ; '.'
00000000000009a2         db  0x00 ; '.'
00000000000009a3         db  0x00 ; '.'
00000000000009a4         db  0x11 ; '.'
00000000000009a5         db  0x00 ; '.'
00000000000009a6         db  0x19 ; '.'
00000000000009a7         db  0x00 ; '.'
00000000000009a8         db  0xc0 ; '.'
00000000000009a9         db  0xc0 ; '.'
00000000000009aa         db  0x20 ; ' '
00000000000009ab         db  0x00 ; '.'
00000000000009ac         db  0x00 ; '.'
00000000000009ad         db  0x00 ; '.'
00000000000009ae         db  0x00 ; '.'
00000000000009af         db  0x00 ; '.'
00000000000009b0         db  0x08 ; '.'
00000000000009b1         db  0x00 ; '.'
00000000000009b2         db  0x00 ; '.'
00000000000009b3         db  0x00 ; '.'
00000000000009b4         db  0x00 ; '.'
00000000000009b5         db  0x00 ; '.'
00000000000009b6         db  0x00 ; '.'
00000000000009b7         db  0x00 ; '.'
00000000000009b8         db  0x40 ; '@'
00000000000009b9         db  0x00 ; '.'
00000000000009ba         db  0x00 ; '.'
00000000000009bb         db  0x00 ; '.'
00000000000009bc         db  0x11 ; '.'
00000000000009bd         db  0x00 ; '.'
00000000000009be         db  0x19 ; '.'
00000000000009bf         db  0x00 ; '.'
00000000000009c0         db  0x90 ; '.'                                         ; DATA XREF=mode_compile+768
00000000000009c1         db  0xc0 ; '.'
00000000000009c2         db  0x20 ; ' '
00000000000009c3         db  0x00 ; '.'
00000000000009c4         db  0x00 ; '.'
00000000000009c5         db  0x00 ; '.'
00000000000009c6         db  0x00 ; '.'
00000000000009c7         db  0x00 ; '.'
00000000000009c8         db  0x04 ; '.'
00000000000009c9         db  0x00 ; '.'
00000000000009ca         db  0x00 ; '.'
00000000000009cb         db  0x00 ; '.'
00000000000009cc         db  0x00 ; '.'
00000000000009cd         db  0x00 ; '.'
00000000000009ce         db  0x00 ; '.'
00000000000009cf         db  0x00 ; '.'
00000000000009d0         db  0x7e ; '~'
00000000000009d1         db  0x01 ; '.'
00000000000009d2         db  0x00 ; '.'
00000000000009d3         db  0x00 ; '.'
00000000000009d4         db  0x11 ; '.'
00000000000009d5         db  0x00 ; '.'
00000000000009d6         db  0x19 ; '.'
00000000000009d7         db  0x00 ; '.'
00000000000009d8         db  0x98 ; '.'
00000000000009d9         db  0xc0 ; '.'
00000000000009da         db  0x20 ; ' '
00000000000009db         db  0x00 ; '.'
00000000000009dc         db  0x00 ; '.'
00000000000009dd         db  0x00 ; '.'
00000000000009de         db  0x00 ; '.'
00000000000009df         db  0x00 ; '.'
00000000000009e0         db  0x08 ; '.'
00000000000009e1         db  0x00 ; '.'
00000000000009e2         db  0x00 ; '.'
00000000000009e3         db  0x00 ; '.'
00000000000009e4         db  0x00 ; '.'
00000000000009e5         db  0x00 ; '.'
00000000000009e6         db  0x00 ; '.'
00000000000009e7         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0x9e8; 0xd09[ (801 bytes)
        ; File offset : [2536; 3337[ (801 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

00000000000009e8         db  0x00 ; '.'
00000000000009e9         db  0x6c ; 'l'
00000000000009ea         db  0x69 ; 'i'
00000000000009eb         db  0x62 ; 'b'
00000000000009ec         db  0x63 ; 'c'
00000000000009ed         db  0x2e ; '.'
00000000000009ee         db  0x73 ; 's'
00000000000009ef         db  0x6f ; 'o'
00000000000009f0         db  0x2e ; '.'
00000000000009f1         db  0x36 ; '6'
00000000000009f2         db  0x00 ; '.'
00000000000009f3         db  0x66 ; 'f'
00000000000009f4         db  0x66 ; 'f'
00000000000009f5         db  0x6c ; 'l'
00000000000009f6         db  0x75 ; 'u'
00000000000009f7         db  0x73 ; 's'
00000000000009f8         db  0x68 ; 'h'
00000000000009f9         db  0x00 ; '.'
00000000000009fa         db  0x66 ; 'f'
00000000000009fb         db  0x63 ; 'c'
00000000000009fc         db  0x68 ; 'h'
00000000000009fd         db  0x6d ; 'm'
00000000000009fe         db  0x6f ; 'o'
00000000000009ff         db  0x64 ; 'd'
0000000000000a00         db  0x00 ; '.'
0000000000000a01         db  0x5f ; '_'
0000000000000a02         db  0x5f ; '_'
0000000000000a03         db  0x70 ; 'p'
0000000000000a04         db  0x72 ; 'r'
0000000000000a05         db  0x69 ; 'i'
0000000000000a06         db  0x6e ; 'n'
0000000000000a07         db  0x74 ; 't'
0000000000000a08         db  0x66 ; 'f'
0000000000000a09         db  0x5f ; '_'
0000000000000a0a         db  0x63 ; 'c'
0000000000000a0b         db  0x68 ; 'h'
0000000000000a0c         db  0x6b ; 'k'
0000000000000a0d         db  0x00 ; '.'
0000000000000a0e         db  0x73 ; 's'
0000000000000a0f         db  0x65 ; 'e'
0000000000000a10         db  0x74 ; 't'
0000000000000a11         db  0x6c ; 'l'
0000000000000a12         db  0x6f ; 'o'
0000000000000a13         db  0x63 ; 'c'
0000000000000a14         db  0x61 ; 'a'
0000000000000a15         db  0x6c ; 'l'
0000000000000a16         db  0x65 ; 'e'
0000000000000a17         db  0x00 ; '.'
0000000000000a18         db  0x6d ; 'm'
0000000000000a19         db  0x62 ; 'b'
0000000000000a1a         db  0x72 ; 'r'
0000000000000a1b         db  0x74 ; 't'
0000000000000a1c         db  0x6f ; 'o'
0000000000000a1d         db  0x77 ; 'w'
0000000000000a1e         db  0x63 ; 'c'
0000000000000a1f         db  0x00 ; '.'
0000000000000a20         db  0x73 ; 's'
0000000000000a21         db  0x74 ; 't'
0000000000000a22         db  0x72 ; 'r'
0000000000000a23         db  0x6e ; 'n'
0000000000000a24         db  0x63 ; 'c'
0000000000000a25         db  0x6d ; 'm'
0000000000000a26         db  0x70 ; 'p'
0000000000000a27         db  0x00 ; '.'
0000000000000a28         db  0x6f ; 'o'
0000000000000a29         db  0x70 ; 'p'
0000000000000a2a         db  0x74 ; 't'
0000000000000a2b         db  0x69 ; 'i'
0000000000000a2c         db  0x6e ; 'n'
0000000000000a2d         db  0x64 ; 'd'
0000000000000a2e         db  0x00 ; '.'
0000000000000a2f         db  0x73 ; 's'
0000000000000a30         db  0x74 ; 't'
0000000000000a31         db  0x72 ; 'r'
0000000000000a32         db  0x72 ; 'r'
0000000000000a33         db  0x63 ; 'c'
0000000000000a34         db  0x68 ; 'h'
0000000000000a35         db  0x72 ; 'r'
0000000000000a36         db  0x00 ; '.'
0000000000000a37         db  0x64 ; 'd'
0000000000000a38         db  0x63 ; 'c'
0000000000000a39         db  0x67 ; 'g'
0000000000000a3a         db  0x65 ; 'e'
0000000000000a3b         db  0x74 ; 't'
0000000000000a3c         db  0x74 ; 't'
0000000000000a3d         db  0x65 ; 'e'
0000000000000a3e         db  0x78 ; 'x'
0000000000000a3f         db  0x74 ; 't'
0000000000000a40         db  0x00 ; '.'
0000000000000a41         db  0x66 ; 'f'
0000000000000a42         db  0x63 ; 'c'
0000000000000a43         db  0x68 ; 'h'
0000000000000a44         db  0x64 ; 'd'
0000000000000a45         db  0x69 ; 'i'
0000000000000a46         db  0x72 ; 'r'
0000000000000a47         db  0x00 ; '.'
0000000000000a48         db  0x65 ; 'e'
0000000000000a49         db  0x72 ; 'r'
0000000000000a4a         db  0x72 ; 'r'
0000000000000a4b         db  0x6f ; 'o'
0000000000000a4c         db  0x72 ; 'r'
0000000000000a4d         db  0x00 ; '.'
0000000000000a4e         db  0x66 ; 'f'
0000000000000a4f         db  0x6f ; 'o'
0000000000000a50         db  0x72 ; 'r'
0000000000000a51         db  0x6b ; 'k'
0000000000000a52         db  0x00 ; '.'
0000000000000a53         db  0x5f ; '_'
0000000000000a54         db  0x5f ; '_'
0000000000000a55         db  0x73 ; 's'
0000000000000a56         db  0x74 ; 't'
0000000000000a57         db  0x61 ; 'a'
0000000000000a58         db  0x63 ; 'c'
0000000000000a59         db  0x6b ; 'k'
0000000000000a5a         db  0x5f ; '_'
0000000000000a5b         db  0x63 ; 'c'
0000000000000a5c         db  0x68 ; 'h'
0000000000000a5d         db  0x6b ; 'k'
0000000000000a5e         db  0x5f ; '_'
0000000000000a5f         db  0x66 ; 'f'
0000000000000a60         db  0x61 ; 'a'
0000000000000a61         db  0x69 ; 'i'
0000000000000a62         db  0x6c ; 'l'
0000000000000a63         db  0x00 ; '.'
0000000000000a64         db  0x69 ; 'i'
0000000000000a65         db  0x73 ; 's'
0000000000000a66         db  0x77 ; 'w'
0000000000000a67         db  0x70 ; 'p'
0000000000000a68         db  0x72 ; 'r'
0000000000000a69         db  0x69 ; 'i'
0000000000000a6a         db  0x6e ; 'n'
0000000000000a6b         db  0x74 ; 't'
0000000000000a6c         db  0x00 ; '.'
0000000000000a6d         db  0x6d ; 'm'
0000000000000a6e         db  0x6b ; 'k'
0000000000000a6f         db  0x64 ; 'd'
0000000000000a70         db  0x69 ; 'i'
0000000000000a71         db  0x72 ; 'r'
0000000000000a72         db  0x00 ; '.'
0000000000000a73         db  0x72 ; 'r'
0000000000000a74         db  0x65 ; 'e'
0000000000000a75         db  0x61 ; 'a'
0000000000000a76         db  0x6c ; 'l'
0000000000000a77         db  0x6c ; 'l'
0000000000000a78         db  0x6f ; 'o'
0000000000000a79         db  0x63 ; 'c'
0000000000000a7a         db  0x00 ; '.'
0000000000000a7b         db  0x61 ; 'a'
0000000000000a7c         db  0x62 ; 'b'
0000000000000a7d         db  0x6f ; 'o'
0000000000000a7e         db  0x72 ; 'r'
0000000000000a7f         db  0x74 ; 't'
0000000000000a80         db  0x00 ; '.'
0000000000000a81         db  0x5f ; '_'
0000000000000a82         db  0x65 ; 'e'
0000000000000a83         db  0x78 ; 'x'
0000000000000a84         db  0x69 ; 'i'
0000000000000a85         db  0x74 ; 't'
0000000000000a86         db  0x00 ; '.'
0000000000000a87         db  0x70 ; 'p'
0000000000000a88         db  0x72 ; 'r'
0000000000000a89         db  0x6f ; 'o'
0000000000000a8a         db  0x67 ; 'g'
0000000000000a8b         db  0x72 ; 'r'
0000000000000a8c         db  0x61 ; 'a'
0000000000000a8d         db  0x6d ; 'm'
0000000000000a8e         db  0x5f ; '_'
0000000000000a8f         db  0x69 ; 'i'
0000000000000a90         db  0x6e ; 'n'
0000000000000a91         db  0x76 ; 'v'
0000000000000a92         db  0x6f ; 'o'
0000000000000a93         db  0x63 ; 'c'
0000000000000a94         db  0x61 ; 'a'
0000000000000a95         db  0x74 ; 't'
0000000000000a96         db  0x69 ; 'i'
0000000000000a97         db  0x6f ; 'o'
0000000000000a98         db  0x6e ; 'n'
0000000000000a99         db  0x5f ; '_'
0000000000000a9a         db  0x6e ; 'n'
0000000000000a9b         db  0x61 ; 'a'
0000000000000a9c         db  0x6d ; 'm'
0000000000000a9d         db  0x65 ; 'e'
0000000000000a9e         db  0x00 ; '.'
0000000000000a9f         db  0x5f ; '_'
0000000000000aa0         db  0x5f ; '_'
0000000000000aa1         db  0x61 ; 'a'
0000000000000aa2         db  0x73 ; 's'
0000000000000aa3         db  0x73 ; 's'
0000000000000aa4         db  0x65 ; 'e'
0000000000000aa5         db  0x72 ; 'r'
0000000000000aa6         db  0x74 ; 't'
0000000000000aa7         db  0x5f ; '_'
0000000000000aa8         db  0x66 ; 'f'
0000000000000aa9         db  0x61 ; 'a'
0000000000000aaa         db  0x69 ; 'i'
0000000000000aab         db  0x6c ; 'l'
0000000000000aac         db  0x00 ; '.'
0000000000000aad         db  0x5f ; '_'
0000000000000aae         db  0x5f ; '_'
0000000000000aaf         db  0x63 ; 'c'
0000000000000ab0         db  0x74 ; 't'
0000000000000ab1         db  0x79 ; 'y'
0000000000000ab2         db  0x70 ; 'p'
0000000000000ab3         db  0x65 ; 'e'
0000000000000ab4         db  0x5f ; '_'
0000000000000ab5         db  0x67 ; 'g'
0000000000000ab6         db  0x65 ; 'e'
0000000000000ab7         db  0x74 ; 't'
0000000000000ab8         db  0x5f ; '_'
0000000000000ab9         db  0x6d ; 'm'
0000000000000aba         db  0x62 ; 'b'
0000000000000abb         db  0x5f ; '_'
0000000000000abc         db  0x63 ; 'c'
0000000000000abd         db  0x75 ; 'u'
0000000000000abe         db  0x72 ; 'r'
0000000000000abf         db  0x5f ; '_'
0000000000000ac0         db  0x6d ; 'm'
0000000000000ac1         db  0x61 ; 'a'
0000000000000ac2         db  0x78 ; 'x'
0000000000000ac3         db  0x00 ; '.'
0000000000000ac4         db  0x6c ; 'l'
0000000000000ac5         db  0x63 ; 'c'
0000000000000ac6         db  0x68 ; 'h'
0000000000000ac7         db  0x6f ; 'o'
0000000000000ac8         db  0x77 ; 'w'
0000000000000ac9         db  0x6e ; 'n'
0000000000000aca         db  0x00 ; '.'
0000000000000acb         db  0x63 ; 'c'
0000000000000acc         db  0x61 ; 'a'
0000000000000acd         db  0x6c ; 'l'
0000000000000ace         db  0x6c ; 'l'
0000000000000acf         db  0x6f ; 'o'
0000000000000ad0         db  0x63 ; 'c'
0000000000000ad1         db  0x00 ; '.'
0000000000000ad2         db  0x73 ; 's'
0000000000000ad3         db  0x74 ; 't'
0000000000000ad4         db  0x72 ; 'r'
0000000000000ad5         db  0x6c ; 'l'
0000000000000ad6         db  0x65 ; 'e'
0000000000000ad7         db  0x6e ; 'n'
0000000000000ad8         db  0x00 ; '.'
0000000000000ad9         db  0x6d ; 'm'
0000000000000ada         db  0x65 ; 'e'
0000000000000adb         db  0x6d ; 'm'
0000000000000adc         db  0x73 ; 's'
0000000000000add         db  0x65 ; 'e'
0000000000000ade         db  0x74 ; 't'
0000000000000adf         db  0x00 ; '.'
0000000000000ae0         db  0x5f ; '_'
0000000000000ae1         db  0x5f ; '_'
0000000000000ae2         db  0x65 ; 'e'
0000000000000ae3         db  0x72 ; 'r'
0000000000000ae4         db  0x72 ; 'r'
0000000000000ae5         db  0x6e ; 'n'
0000000000000ae6         db  0x6f ; 'o'
0000000000000ae7         db  0x5f ; '_'
0000000000000ae8         db  0x6c ; 'l'
0000000000000ae9         db  0x6f ; 'o'
0000000000000aea         db  0x63 ; 'c'
0000000000000aeb         db  0x61 ; 'a'
0000000000000aec         db  0x74 ; 't'
0000000000000aed         db  0x69 ; 'i'
0000000000000aee         db  0x6f ; 'o'
0000000000000aef         db  0x6e ; 'n'
0000000000000af0         db  0x00 ; '.'
0000000000000af1         db  0x6d ; 'm'
0000000000000af2         db  0x65 ; 'e'
0000000000000af3         db  0x6d ; 'm'
0000000000000af4         db  0x63 ; 'c'
0000000000000af5         db  0x6d ; 'm'
0000000000000af6         db  0x70 ; 'p'
0000000000000af7         db  0x00 ; '.'
0000000000000af8         db  0x5f ; '_'
0000000000000af9         db  0x5f ; '_'
0000000000000afa         db  0x66 ; 'f'
0000000000000afb         db  0x70 ; 'p'
0000000000000afc         db  0x72 ; 'r'
0000000000000afd         db  0x69 ; 'i'
0000000000000afe         db  0x6e ; 'n'
0000000000000aff         db  0x74 ; 't'
                     aFchk:
0000000000000b00         db         "f_chk", 0
0000000000000b06         db  0x66 ; 'f'
0000000000000b07         db  0x63 ; 'c'
0000000000000b08         db  0x68 ; 'h'
0000000000000b09         db  0x6f ; 'o'
0000000000000b0a         db  0x77 ; 'w'
0000000000000b0b         db  0x6e ; 'n'
0000000000000b0c         db  0x00 ; '.'
0000000000000b0d         db  0x73 ; 's'
0000000000000b0e         db  0x74 ; 't'
0000000000000b0f         db  0x64 ; 'd'
0000000000000b10         db  0x6f ; 'o'
0000000000000b11         db  0x75 ; 'u'
0000000000000b12         db  0x74 ; 't'
0000000000000b13         db  0x00 ; '.'
0000000000000b14         db  0x6c ; 'l'
0000000000000b15         db  0x73 ; 's'
0000000000000b16         db  0x65 ; 'e'
0000000000000b17         db  0x65 ; 'e'
0000000000000b18         db  0x6b ; 'k'
0000000000000b19         db  0x00 ; '.'
0000000000000b1a         db  0x6d ; 'm'
0000000000000b1b         db  0x65 ; 'e'
0000000000000b1c         db  0x6d ; 'm'
0000000000000b1d         db  0x63 ; 'c'
0000000000000b1e         db  0x70 ; 'p'
0000000000000b1f         db  0x79 ; 'y'
0000000000000b20         db  0x00 ; '.'
0000000000000b21         db  0x66 ; 'f'
0000000000000b22         db  0x63 ; 'c'
0000000000000b23         db  0x6c ; 'l'
0000000000000b24         db  0x6f ; 'o'
0000000000000b25         db  0x73 ; 's'
0000000000000b26         db  0x65 ; 'e'
0000000000000b27         db  0x00 ; '.'
0000000000000b28         db  0x6d ; 'm'
0000000000000b29         db  0x61 ; 'a'
0000000000000b2a         db  0x6c ; 'l'
0000000000000b2b         db  0x6c ; 'l'
0000000000000b2c         db  0x6f ; 'o'
0000000000000b2d         db  0x63 ; 'c'
0000000000000b2e         db  0x00 ; '.'
0000000000000b2f         db  0x75 ; 'u'
0000000000000b30         db  0x6d ; 'm'
0000000000000b31         db  0x61 ; 'a'
0000000000000b32         db  0x73 ; 's'
0000000000000b33         db  0x6b ; 'k'
0000000000000b34         db  0x00 ; '.'
0000000000000b35         db  0x72 ; 'r'
0000000000000b36         db  0x61 ; 'a'
0000000000000b37         db  0x69 ; 'i'
0000000000000b38         db  0x73 ; 's'
0000000000000b39         db  0x65 ; 'e'
0000000000000b3a         db  0x00 ; '.'
0000000000000b3b         db  0x6d ; 'm'
0000000000000b3c         db  0x62 ; 'b'
0000000000000b3d         db  0x73 ; 's'
0000000000000b3e         db  0x69 ; 'i'
0000000000000b3f         db  0x6e ; 'n'
0000000000000b40         db  0x69 ; 'i'
0000000000000b41         db  0x74 ; 't'
0000000000000b42         db  0x00 ; '.'
0000000000000b43         db  0x6e ; 'n'
0000000000000b44         db  0x6c ; 'l'
                     aLanginfo:
0000000000000b45         db         "_langinfo", 0
0000000000000b4f         db  0x5f ; '_'
0000000000000b50         db  0x5f ; '_'
0000000000000b51         db  0x63 ; 'c'
0000000000000b52         db  0x74 ; 't'
0000000000000b53         db  0x79 ; 'y'
0000000000000b54         db  0x70 ; 'p'
0000000000000b55         db  0x65 ; 'e'
0000000000000b56         db  0x5f ; '_'
0000000000000b57         db  0x62 ; 'b'
0000000000000b58         db  0x5f ; '_'
0000000000000b59         db  0x6c ; 'l'
0000000000000b5a         db  0x6f ; 'o'
0000000000000b5b         db  0x63 ; 'c'
0000000000000b5c         db  0x00 ; '.'
0000000000000b5d         db  0x5f ; '_'
0000000000000b5e         db  0x5f ; '_'
0000000000000b5f         db  0x6f ; 'o'
0000000000000b60         db  0x70 ; 'p'
0000000000000b61         db  0x65 ; 'e'
0000000000000b62         db  0x6e ; 'n'
0000000000000b63         db  0x5f ; '_'
0000000000000b64         db  0x32 ; '2'
0000000000000b65         db  0x00 ; '.'
0000000000000b66         db  0x6f ; 'o'
0000000000000b67         db  0x70 ; 'p'
0000000000000b68         db  0x74 ; 't'
0000000000000b69         db  0x61 ; 'a'
0000000000000b6a         db  0x72 ; 'r'
0000000000000b6b         db  0x67 ; 'g'
0000000000000b6c         db  0x00 ; '.'
0000000000000b6d         db  0x5f ; '_'
0000000000000b6e         db  0x5f ; '_'
0000000000000b6f         db  0x66 ; 'f'
0000000000000b70         db  0x72 ; 'r'
0000000000000b71         db  0x65 ; 'e'
0000000000000b72         db  0x61 ; 'a'
0000000000000b73         db  0x64 ; 'd'
0000000000000b74         db  0x69 ; 'i'
0000000000000b75         db  0x6e ; 'n'
0000000000000b76         db  0x67 ; 'g'
0000000000000b77         db  0x00 ; '.'
0000000000000b78         db  0x73 ; 's'
0000000000000b79         db  0x74 ; 't'
0000000000000b7a         db  0x64 ; 'd'
0000000000000b7b         db  0x65 ; 'e'
0000000000000b7c         db  0x72 ; 'r'
0000000000000b7d         db  0x72 ; 'r'
0000000000000b7e         db  0x00 ; '.'
0000000000000b7f         db  0x5f ; '_'
0000000000000b80         db  0x5f ; '_'
0000000000000b81         db  0x73 ; 's'
0000000000000b82         db  0x6e ; 'n'
0000000000000b83         db  0x70 ; 'p'
0000000000000b84         db  0x72 ; 'r'
0000000000000b85         db  0x69 ; 'i'
0000000000000b86         db  0x6e ; 'n'
0000000000000b87         db  0x74 ; 't'
0000000000000b88         db  0x66 ; 'f'
0000000000000b89         db  0x5f ; '_'
0000000000000b8a         db  0x63 ; 'c'
0000000000000b8b         db  0x68 ; 'h'
0000000000000b8c         db  0x6b ; 'k'
0000000000000b8d         db  0x00 ; '.'
0000000000000b8e         db  0x67 ; 'g'
0000000000000b8f         db  0x65 ; 'e'
0000000000000b90         db  0x74 ; 't'
0000000000000b91         db  0x6f ; 'o'
0000000000000b92         db  0x70 ; 'p'
0000000000000b93         db  0x74 ; 't'
0000000000000b94         db  0x5f ; '_'
0000000000000b95         db  0x6c ; 'l'
0000000000000b96         db  0x6f ; 'o'
0000000000000b97         db  0x6e ; 'n'
0000000000000b98         db  0x67 ; 'g'
0000000000000b99         db  0x00 ; '.'
0000000000000b9a         db  0x5f ; '_'
0000000000000b9b         db  0x5f ; '_'
0000000000000b9c         db  0x66 ; 'f'
0000000000000b9d         db  0x78 ; 'x'
0000000000000b9e         db  0x73 ; 's'
0000000000000b9f         db  0x74 ; 't'
0000000000000ba0         db  0x61 ; 'a'
0000000000000ba1         db  0x74 ; 't'
0000000000000ba2         db  0x00 ; '.'
0000000000000ba3         db  0x66 ; 'f'
0000000000000ba4         db  0x69 ; 'i'
0000000000000ba5         db  0x6c ; 'l'
0000000000000ba6         db  0x65 ; 'e'
0000000000000ba7         db  0x6e ; 'n'
0000000000000ba8         db  0x6f ; 'o'
0000000000000ba9         db  0x00 ; '.'
0000000000000baa         db  0x66 ; 'f'
0000000000000bab         db  0x77 ; 'w'
0000000000000bac         db  0x72 ; 'r'
0000000000000bad         db  0x69 ; 'i'
0000000000000bae         db  0x74 ; 't'
0000000000000baf         db  0x65 ; 'e'
0000000000000bb0         db  0x00 ; '.'
0000000000000bb1         db  0x77 ; 'w'
0000000000000bb2         db  0x61 ; 'a'
0000000000000bb3         db  0x69 ; 'i'
0000000000000bb4         db  0x74 ; 't'
0000000000000bb5         db  0x70 ; 'p'
0000000000000bb6         db  0x69 ; 'i'
0000000000000bb7         db  0x64 ; 'd'
0000000000000bb8         db  0x00 ; '.'
0000000000000bb9         db  0x5f ; '_'
0000000000000bba         db  0x5f ; '_'
0000000000000bbb         db  0x66 ; 'f'
0000000000000bbc         db  0x70 ; 'p'
0000000000000bbd         db  0x65 ; 'e'
0000000000000bbe         db  0x6e ; 'n'
0000000000000bbf         db  0x64 ; 'd'
0000000000000bc0         db  0x69 ; 'i'
0000000000000bc1         db  0x6e ; 'n'
0000000000000bc2         db  0x67 ; 'g'
0000000000000bc3         db  0x00 ; '.'
0000000000000bc4         db  0x6f ; 'o'
0000000000000bc5         db  0x70 ; 'p'
0000000000000bc6         db  0x65 ; 'e'
0000000000000bc7         db  0x6e ; 'n'
0000000000000bc8         db  0x00 ; '.'
0000000000000bc9         db  0x70 ; 'p'
0000000000000bca         db  0x72 ; 'r'
0000000000000bcb         db  0x6f ; 'o'
0000000000000bcc         db  0x67 ; 'g'
0000000000000bcd         db  0x72 ; 'r'
0000000000000bce         db  0x61 ; 'a'
0000000000000bcf         db  0x6d ; 'm'
0000000000000bd0         db  0x5f ; '_'
0000000000000bd1         db  0x69 ; 'i'
0000000000000bd2         db  0x6e ; 'n'
0000000000000bd3         db  0x76 ; 'v'
0000000000000bd4         db  0x6f ; 'o'
0000000000000bd5         db  0x63 ; 'c'
0000000000000bd6         db  0x61 ; 'a'
0000000000000bd7         db  0x74 ; 't'
0000000000000bd8         db  0x69 ; 'i'
0000000000000bd9         db  0x6f ; 'o'
0000000000000bda         db  0x6e ; 'n'
0000000000000bdb         db  0x5f ; '_'
0000000000000bdc         db  0x73 ; 's'
0000000000000bdd         db  0x68 ; 'h'
0000000000000bde         db  0x6f ; 'o'
0000000000000bdf         db  0x72 ; 'r'
0000000000000be0         db  0x74 ; 't'
0000000000000be1         db  0x5f ; '_'
0000000000000be2         db  0x6e ; 'n'
0000000000000be3         db  0x61 ; 'a'
0000000000000be4         db  0x6d ; 'm'
0000000000000be5         db  0x65 ; 'e'
0000000000000be6         db  0x00 ; '.'
0000000000000be7         db  0x5f ; '_'
0000000000000be8         db  0x5f ; '_'
0000000000000be9         db  0x63 ; 'c'
0000000000000bea         db  0x78 ; 'x'
0000000000000beb         db  0x61 ; 'a'
0000000000000bec         db  0x5f ; '_'
0000000000000bed         db  0x66 ; 'f'
0000000000000bee         db  0x69 ; 'i'
0000000000000bef         db  0x6e ; 'n'
0000000000000bf0         db  0x61 ; 'a'
0000000000000bf1         db  0x6c ; 'l'
0000000000000bf2         db  0x69 ; 'i'
0000000000000bf3         db  0x7a ; 'z'
0000000000000bf4         db  0x65 ; 'e'
0000000000000bf5         db  0x00 ; '.'
0000000000000bf6         db  0x66 ; 'f'
0000000000000bf7         db  0x63 ; 'c'
0000000000000bf8         db  0x6e ; 'n'
0000000000000bf9         db  0x74 ; 't'
0000000000000bfa         db  0x6c ; 'l'
0000000000000bfb         db  0x00 ; '.'
0000000000000bfc         db  0x5f ; '_'
0000000000000bfd         db  0x5f ; '_'
0000000000000bfe         db  0x78 ; 'x'
0000000000000bff         db  0x73 ; 's'
0000000000000c00         db  0x74 ; 't'                                         ; DATA XREF=make_dir_parents+160, mode_compile+672, mode_compile+818, mode_adjust+40, dirchownmod+440
0000000000000c01         db  0x61 ; 'a'
0000000000000c02         db  0x74 ; 't'
0000000000000c03         db  0x00 ; '.'
0000000000000c04         db  0x62 ; 'b'
0000000000000c05         db  0x69 ; 'i'
0000000000000c06         db  0x6e ; 'n'
0000000000000c07         db  0x64 ; 'd'
0000000000000c08         db  0x74 ; 't'
0000000000000c09         db  0x65 ; 'e'
0000000000000c0a         db  0x78 ; 'x'
0000000000000c0b         db  0x74 ; 't'
0000000000000c0c         db  0x64 ; 'd'
0000000000000c0d         db  0x6f ; 'o'
0000000000000c0e         db  0x6d ; 'm'
0000000000000c0f         db  0x61 ; 'a'
0000000000000c10         db  0x69 ; 'i'
0000000000000c11         db  0x6e ; 'n'
0000000000000c12         db  0x00 ; '.'
0000000000000c13         db  0x66 ; 'f'
0000000000000c14         db  0x77 ; 'w'
0000000000000c15         db  0x72 ; 'r'
0000000000000c16         db  0x69 ; 'i'
0000000000000c17         db  0x74 ; 't'
0000000000000c18         db  0x65 ; 'e'
0000000000000c19         db  0x5f ; '_'
0000000000000c1a         db  0x75 ; 'u'
0000000000000c1b         db  0x6e ; 'n'
0000000000000c1c         db  0x6c ; 'l'
0000000000000c1d         db  0x6f ; 'o'
0000000000000c1e         db  0x63 ; 'c'
0000000000000c1f         db  0x6b ; 'k'
0000000000000c20         db  0x65 ; 'e'
0000000000000c21         db  0x64 ; 'd'
0000000000000c22         db  0x00 ; '.'
0000000000000c23         db  0x5f ; '_'
0000000000000c24         db  0x5f ; '_'
0000000000000c25         db  0x6c ; 'l'
0000000000000c26         db  0x69 ; 'i'
0000000000000c27         db  0x62 ; 'b'
0000000000000c28         db  0x63 ; 'c'
0000000000000c29         db  0x5f ; '_'
0000000000000c2a         db  0x73 ; 's'
0000000000000c2b         db  0x74 ; 't'
0000000000000c2c         db  0x61 ; 'a'
0000000000000c2d         db  0x72 ; 'r'
0000000000000c2e         db  0x74 ; 't'
0000000000000c2f         db  0x5f ; '_'
0000000000000c30         db  0x6d ; 'm'
0000000000000c31         db  0x61 ; 'a'
0000000000000c32         db  0x69 ; 'i'
0000000000000c33         db  0x6e ; 'n'
0000000000000c34         db  0x00 ; '.'
0000000000000c35         db  0x66 ; 'f'
0000000000000c36         db  0x73 ; 's'
0000000000000c37         db  0x65 ; 'e'
0000000000000c38         db  0x65 ; 'e'
0000000000000c39         db  0x6b ; 'k'
0000000000000c3a         db  0x6f ; 'o'
0000000000000c3b         db  0x00 ; '.'
0000000000000c3c         db  0x5f ; '_'
0000000000000c3d         db  0x5f ; '_'
0000000000000c3e         db  0x6f ; 'o'
0000000000000c3f         db  0x76 ; 'v'
0000000000000c40         db  0x65 ; 'e'
0000000000000c41         db  0x72 ; 'r'
0000000000000c42         db  0x66 ; 'f'
0000000000000c43         db  0x6c ; 'l'
0000000000000c44         db  0x6f ; 'o'
0000000000000c45         db  0x77 ; 'w'
0000000000000c46         db  0x00 ; '.'
0000000000000c47         db  0x66 ; 'f'
0000000000000c48         db  0x70 ; 'p'
0000000000000c49         db  0x75 ; 'u'
0000000000000c4a         db  0x74 ; 't'
0000000000000c4b         db  0x73 ; 's'
0000000000000c4c         db  0x5f ; '_'
0000000000000c4d         db  0x75 ; 'u'
0000000000000c4e         db  0x6e ; 'n'
0000000000000c4f         db  0x6c ; 'l'
0000000000000c50         db  0x6f ; 'o'
0000000000000c51         db  0x63 ; 'c'
0000000000000c52         db  0x6b ; 'k'
0000000000000c53         db  0x65 ; 'e'
0000000000000c54         db  0x64 ; 'd'
0000000000000c55         db  0x00 ; '.'
0000000000000c56         db  0x66 ; 'f'
0000000000000c57         db  0x72 ; 'r'
0000000000000c58         db  0x65 ; 'e'
0000000000000c59         db  0x65 ; 'e'
0000000000000c5a         db  0x00 ; '.'
0000000000000c5b         db  0x5f ; '_'
0000000000000c5c         db  0x5f ; '_'
0000000000000c5d         db  0x70 ; 'p'
0000000000000c5e         db  0x72 ; 'r'
0000000000000c5f         db  0x6f ; 'o'
0000000000000c60         db  0x67 ; 'g'
0000000000000c61         db  0x6e ; 'n'
0000000000000c62         db  0x61 ; 'a'
0000000000000c63         db  0x6d ; 'm'
0000000000000c64         db  0x65 ; 'e'
0000000000000c65         db  0x00 ; '.'
0000000000000c66         db  0x5f ; '_'
0000000000000c67         db  0x5f ; '_'
0000000000000c68         db  0x70 ; 'p'
0000000000000c69         db  0x72 ; 'r'
0000000000000c6a         db  0x6f ; 'o'
0000000000000c6b         db  0x67 ; 'g'
0000000000000c6c         db  0x6e ; 'n'
0000000000000c6d         db  0x61 ; 'a'
0000000000000c6e         db  0x6d ; 'm'
0000000000000c6f         db  0x65 ; 'e'
0000000000000c70         db  0x5f ; '_'
0000000000000c71         db  0x66 ; 'f'
0000000000000c72         db  0x75 ; 'u'
0000000000000c73         db  0x6c ; 'l'
0000000000000c74         db  0x6c ; 'l'
0000000000000c75         db  0x00 ; '.'
0000000000000c76         db  0x5f ; '_'
0000000000000c77         db  0x5f ; '_'
0000000000000c78         db  0x63 ; 'c'
0000000000000c79         db  0x78 ; 'x'
0000000000000c7a         db  0x61 ; 'a'
0000000000000c7b         db  0x5f ; '_'
0000000000000c7c         db  0x61 ; 'a'
0000000000000c7d         db  0x74 ; 't'
0000000000000c7e         db  0x65 ; 'e'
0000000000000c7f         db  0x78 ; 'x'
0000000000000c80         db  0x69 ; 'i'
0000000000000c81         db  0x74 ; 't'
0000000000000c82         db  0x00 ; '.'
0000000000000c83         db  0x47 ; 'G'
0000000000000c84         db  0x4c ; 'L'
0000000000000c85         db  0x49 ; 'I'
0000000000000c86         db  0x42 ; 'B'
0000000000000c87         db  0x43 ; 'C'
0000000000000c88         db  0x5f ; '_'
0000000000000c89         db  0x32 ; '2'
0000000000000c8a         db  0x2e ; '.'
0000000000000c8b         db  0x33 ; '3'
0000000000000c8c         db  0x00 ; '.'
0000000000000c8d         db  0x47 ; 'G'
0000000000000c8e         db  0x4c ; 'L'
0000000000000c8f         db  0x49 ; 'I'
0000000000000c90         db  0x42 ; 'B'
0000000000000c91         db  0x43 ; 'C'
0000000000000c92         db  0x5f ; '_'
0000000000000c93         db  0x32 ; '2'
0000000000000c94         db  0x2e ; '.'
0000000000000c95         db  0x31 ; '1'
0000000000000c96         db  0x34 ; '4'
0000000000000c97         db  0x00 ; '.'
0000000000000c98         db  0x47 ; 'G'
0000000000000c99         db  0x4c ; 'L'
0000000000000c9a         db  0x49 ; 'I'
0000000000000c9b         db  0x42 ; 'B'
0000000000000c9c         db  0x43 ; 'C'
0000000000000c9d         db  0x5f ; '_'
0000000000000c9e         db  0x32 ; '2'
0000000000000c9f         db  0x2e ; '.'
0000000000000ca0         db  0x34 ; '4'
0000000000000ca1         db  0x00 ; '.'
0000000000000ca2         db  0x47 ; 'G'
0000000000000ca3         db  0x4c ; 'L'
0000000000000ca4         db  0x49 ; 'I'
0000000000000ca5         db  0x42 ; 'B'
0000000000000ca6         db  0x43 ; 'C'
0000000000000ca7         db  0x5f ; '_'
0000000000000ca8         db  0x32 ; '2'
0000000000000ca9         db  0x2e ; '.'
0000000000000caa         db  0x37 ; '7'
0000000000000cab         db  0x00 ; '.'
0000000000000cac         db  0x47 ; 'G'
0000000000000cad         db  0x4c ; 'L'
0000000000000cae         db  0x49 ; 'I'
0000000000000caf         db  0x42 ; 'B'
0000000000000cb0         db  0x43 ; 'C'
0000000000000cb1         db  0x5f ; '_'
0000000000000cb2         db  0x32 ; '2'
0000000000000cb3         db  0x2e ; '.'
0000000000000cb4         db  0x33 ; '3'
0000000000000cb5         db  0x2e ; '.'
0000000000000cb6         db  0x34 ; '4'
0000000000000cb7         db  0x00 ; '.'
0000000000000cb8         db  0x47 ; 'G'
0000000000000cb9         db  0x4c ; 'L'
0000000000000cba         db  0x49 ; 'I'
0000000000000cbb         db  0x42 ; 'B'
0000000000000cbc         db  0x43 ; 'C'
0000000000000cbd         db  0x5f ; '_'
0000000000000cbe         db  0x32 ; '2'
0000000000000cbf         db  0x2e ; '.'
0000000000000cc0         db  0x32 ; '2'
0000000000000cc1         db  0x2e ; '.'
0000000000000cc2         db  0x35 ; '5'
0000000000000cc3         db  0x00 ; '.'
0000000000000cc4         db  0x5f ; '_'
0000000000000cc5         db  0x49 ; 'I'
0000000000000cc6         db  0x54 ; 'T'
0000000000000cc7         db  0x4d ; 'M'
0000000000000cc8         db  0x5f ; '_'
0000000000000cc9         db  0x64 ; 'd'
0000000000000cca         db  0x65 ; 'e'
0000000000000ccb         db  0x72 ; 'r'
0000000000000ccc         db  0x65 ; 'e'
0000000000000ccd         db  0x67 ; 'g'
0000000000000cce         db  0x69 ; 'i'
0000000000000ccf         db  0x73 ; 's'
0000000000000cd0         db  0x74 ; 't'
0000000000000cd1         db  0x65 ; 'e'
0000000000000cd2         db  0x72 ; 'r'
0000000000000cd3         db  0x54 ; 'T'
0000000000000cd4         db  0x4d ; 'M'
0000000000000cd5         db  0x43 ; 'C'
0000000000000cd6         db  0x6c ; 'l'
0000000000000cd7         db  0x6f ; 'o'
0000000000000cd8         db  0x6e ; 'n'
0000000000000cd9         db  0x65 ; 'e'
0000000000000cda         db  0x54 ; 'T'
0000000000000cdb         db  0x61 ; 'a'
0000000000000cdc         db  0x62 ; 'b'
0000000000000cdd         db  0x6c ; 'l'
0000000000000cde         db  0x65 ; 'e'
0000000000000cdf         db  0x00 ; '.'
0000000000000ce0         db  0x5f ; '_'
0000000000000ce1         db  0x5f ; '_'
0000000000000ce2         db  0x67 ; 'g'
0000000000000ce3         db  0x6d ; 'm'
0000000000000ce4         db  0x6f ; 'o'
0000000000000ce5         db  0x6e ; 'n'
0000000000000ce6         db  0x5f ; '_'
0000000000000ce7         db  0x73 ; 's'
0000000000000ce8         db  0x74 ; 't'
0000000000000ce9         db  0x61 ; 'a'
0000000000000cea         db  0x72 ; 'r'
0000000000000ceb         db  0x74 ; 't'
0000000000000cec         db  0x5f ; '_'
0000000000000ced         db  0x5f ; '_'
0000000000000cee         db  0x00 ; '.'
0000000000000cef         db  0x5f ; '_'
0000000000000cf0         db  0x49 ; 'I'
0000000000000cf1         db  0x54 ; 'T'
0000000000000cf2         db  0x4d ; 'M'
0000000000000cf3         db  0x5f ; '_'
0000000000000cf4         db  0x72 ; 'r'
0000000000000cf5         db  0x65 ; 'e'
0000000000000cf6         db  0x67 ; 'g'
0000000000000cf7         db  0x69 ; 'i'
0000000000000cf8         db  0x73 ; 's'
0000000000000cf9         db  0x74 ; 't'
0000000000000cfa         db  0x65 ; 'e'
0000000000000cfb         db  0x72 ; 'r'
0000000000000cfc         db  0x54 ; 'T'
0000000000000cfd         db  0x4d ; 'M'
0000000000000cfe         db  0x43 ; 'C'
0000000000000cff         db  0x6c ; 'l'
                     aOnetable:
0000000000000d00         db         "oneTable", 0
0000000000000d09         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xd0a; 0xda0[ (150 bytes)
        ; File offset : [3338; 3488[ (150 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000d0a         db  0x00 ; '.'
0000000000000d0b         db  0x00 ; '.'
0000000000000d0c         db  0x03 ; '.'
0000000000000d0d         db  0x00 ; '.'
0000000000000d0e         db  0x02 ; '.'
0000000000000d0f         db  0x00 ; '.'
0000000000000d10         db  0x02 ; '.'
0000000000000d11         db  0x00 ; '.'
0000000000000d12         db  0x02 ; '.'
0000000000000d13         db  0x00 ; '.'
0000000000000d14         db  0x02 ; '.'
0000000000000d15         db  0x00 ; '.'
0000000000000d16         db  0x02 ; '.'
0000000000000d17         db  0x00 ; '.'
0000000000000d18         db  0x00 ; '.'
0000000000000d19         db  0x00 ; '.'
0000000000000d1a         db  0x02 ; '.'
0000000000000d1b         db  0x00 ; '.'
0000000000000d1c         db  0x02 ; '.'
0000000000000d1d         db  0x00 ; '.'
0000000000000d1e         db  0x02 ; '.'
0000000000000d1f         db  0x00 ; '.'
0000000000000d20         db  0x02 ; '.'
0000000000000d21         db  0x00 ; '.'
0000000000000d22         db  0x02 ; '.'
0000000000000d23         db  0x00 ; '.'
0000000000000d24         db  0x04 ; '.'
0000000000000d25         db  0x00 ; '.'
0000000000000d26         db  0x02 ; '.'
0000000000000d27         db  0x00 ; '.'
0000000000000d28         db  0x02 ; '.'
0000000000000d29         db  0x00 ; '.'
0000000000000d2a         db  0x02 ; '.'
0000000000000d2b         db  0x00 ; '.'
0000000000000d2c         db  0x02 ; '.'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x02 ; '.'
0000000000000d2f         db  0x00 ; '.'
0000000000000d30         db  0x02 ; '.'
0000000000000d31         db  0x00 ; '.'
0000000000000d32         db  0x05 ; '.'
0000000000000d33         db  0x00 ; '.'
0000000000000d34         db  0x02 ; '.'
0000000000000d35         db  0x00 ; '.'
0000000000000d36         db  0x02 ; '.'
0000000000000d37         db  0x00 ; '.'
0000000000000d38         db  0x02 ; '.'
0000000000000d39         db  0x00 ; '.'
0000000000000d3a         db  0x02 ; '.'
0000000000000d3b         db  0x00 ; '.'
0000000000000d3c         db  0x02 ; '.'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x02 ; '.'
0000000000000d3f         db  0x00 ; '.'
0000000000000d40         db  0x02 ; '.'
0000000000000d41         db  0x00 ; '.'
0000000000000d42         db  0x02 ; '.'
0000000000000d43         db  0x00 ; '.'
0000000000000d44         db  0x02 ; '.'
0000000000000d45         db  0x00 ; '.'
0000000000000d46         db  0x02 ; '.'
0000000000000d47         db  0x00 ; '.'
0000000000000d48         db  0x02 ; '.'
0000000000000d49         db  0x00 ; '.'
0000000000000d4a         db  0x02 ; '.'
0000000000000d4b         db  0x00 ; '.'
0000000000000d4c         db  0x00 ; '.'
0000000000000d4d         db  0x00 ; '.'
0000000000000d4e         db  0x02 ; '.'
0000000000000d4f         db  0x00 ; '.'
0000000000000d50         db  0x06 ; '.'
0000000000000d51         db  0x00 ; '.'
0000000000000d52         db  0x02 ; '.'
0000000000000d53         db  0x00 ; '.'
0000000000000d54         db  0x02 ; '.'
0000000000000d55         db  0x00 ; '.'
0000000000000d56         db  0x02 ; '.'
0000000000000d57         db  0x00 ; '.'
0000000000000d58         db  0x02 ; '.'
0000000000000d59         db  0x00 ; '.'
0000000000000d5a         db  0x02 ; '.'
0000000000000d5b         db  0x00 ; '.'
0000000000000d5c         db  0x02 ; '.'
0000000000000d5d         db  0x00 ; '.'
0000000000000d5e         db  0x02 ; '.'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0x02 ; '.'
0000000000000d61         db  0x00 ; '.'
0000000000000d62         db  0x02 ; '.'
0000000000000d63         db  0x00 ; '.'
0000000000000d64         db  0x02 ; '.'
0000000000000d65         db  0x00 ; '.'
0000000000000d66         db  0x02 ; '.'
0000000000000d67         db  0x00 ; '.'
0000000000000d68         db  0x02 ; '.'
0000000000000d69         db  0x00 ; '.'
0000000000000d6a         db  0x02 ; '.'
0000000000000d6b         db  0x00 ; '.'
0000000000000d6c         db  0x03 ; '.'
0000000000000d6d         db  0x00 ; '.'
0000000000000d6e         db  0x02 ; '.'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0x02 ; '.'
0000000000000d71         db  0x00 ; '.'
0000000000000d72         db  0x02 ; '.'
0000000000000d73         db  0x00 ; '.'
0000000000000d74         db  0x02 ; '.'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x02 ; '.'
0000000000000d77         db  0x00 ; '.'
0000000000000d78         db  0x02 ; '.'
0000000000000d79         db  0x00 ; '.'
0000000000000d7a         db  0x02 ; '.'
0000000000000d7b         db  0x00 ; '.'
0000000000000d7c         db  0x02 ; '.'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x02 ; '.'
0000000000000d7f         db  0x00 ; '.'
0000000000000d80         db  0x02 ; '.'
0000000000000d81         db  0x00 ; '.'
0000000000000d82         db  0x03 ; '.'
0000000000000d83         db  0x00 ; '.'
0000000000000d84         db  0x00 ; '.'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x02 ; '.'
0000000000000d87         db  0x00 ; '.'
0000000000000d88         db  0x02 ; '.'
0000000000000d89         db  0x00 ; '.'
0000000000000d8a         db  0x02 ; '.'
0000000000000d8b         db  0x00 ; '.'
0000000000000d8c         db  0x02 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x07 ; '.'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0x02 ; '.'
0000000000000d91         db  0x00 ; '.'
0000000000000d92         db  0x02 ; '.'
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x02 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x02 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0x02 ; '.'
0000000000000d99         db  0x00 ; '.'
0000000000000d9a         db  0x02 ; '.'
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x02 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x02 ; '.'
0000000000000d9f         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xda0; 0xe10[ (112 bytes)
        ; File offset : [3488; 3600[ (112 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000da0         db  0x01 ; '.'
0000000000000da1         db  0x00 ; '.'
0000000000000da2         db  0x06 ; '.'
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x01 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x00 ; '.'
0000000000000da7         db  0x00 ; '.'
0000000000000da8         db  0x10 ; '.'
0000000000000da9         db  0x00 ; '.'
0000000000000daa         db  0x00 ; '.'
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x00 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x00 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0x13 ; '.'
0000000000000db1         db  0x69 ; 'i'
0000000000000db2         db  0x69 ; 'i'
0000000000000db3         db  0x0d ; '.'
0000000000000db4         db  0x00 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x07 ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0x9b ; '.'
0000000000000db9         db  0x02 ; '.'
0000000000000dba         db  0x00 ; '.'
0000000000000dbb         db  0x00 ; '.'
0000000000000dbc         db  0x10 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x00 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0x94 ; '.'
0000000000000dc1         db  0x91 ; '.'
0000000000000dc2         db  0x96 ; '.'
0000000000000dc3         db  0x06 ; '.'
0000000000000dc4         db  0x00 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x06 ; '.'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0xa5 ; '.'
0000000000000dc9         db  0x02 ; '.'
0000000000000dca         db  0x00 ; '.'
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x10 ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x00 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0x14 ; '.'
0000000000000dd1         db  0x69 ; 'i'
0000000000000dd2         db  0x69 ; 'i'
0000000000000dd3         db  0x0d ; '.'
0000000000000dd4         db  0x00 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x05 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0xb0 ; '.'
0000000000000dd9         db  0x02 ; '.'
0000000000000dda         db  0x00 ; '.'
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x10 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x00 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0x17 ; '.'
0000000000000de1         db  0x69 ; 'i'
0000000000000de2         db  0x69 ; 'i'
0000000000000de3         db  0x0d ; '.'
0000000000000de4         db  0x00 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x04 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0xba ; '.'
0000000000000de9         db  0x02 ; '.'
0000000000000dea         db  0x00 ; '.'
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x10 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x00 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0x74 ; 't'
0000000000000df1         db  0x19 ; '.'
0000000000000df2         db  0x69 ; 'i'
0000000000000df3         db  0x09 ; '.'
0000000000000df4         db  0x00 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x03 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0xc4 ; '.'
0000000000000df9         db  0x02 ; '.'
0000000000000dfa         db  0x00 ; '.'
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x10 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x00 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0x75 ; 'u'
0000000000000e01         db  0x1a ; '.'
0000000000000e02         db  0x69 ; 'i'
0000000000000e03         db  0x09 ; '.'
0000000000000e04         db  0x00 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x02 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0xd0 ; '.'
0000000000000e09         db  0x02 ; '.'
0000000000000e0a         db  0x00 ; '.'
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x00 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x00 ; '.'
0000000000000e0f         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xe10; 0x1128[ (792 bytes)
        ; File offset : [3600; 4392[ (792 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000e10         db  0x90 ; '.'
0000000000000e11         db  0xba ; '.'
0000000000000e12         db  0x20 ; ' '
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x00 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x00 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0x08 ; '.'
0000000000000e19         db  0x00 ; '.'
0000000000000e1a         db  0x00 ; '.'
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x00 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x00 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0xd0 ; '.'
0000000000000e21         db  0x1e ; '.'
0000000000000e22         db  0x00 ; '.'
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x00 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x00 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0x98 ; '.'
0000000000000e29         db  0xba ; '.'
0000000000000e2a         db  0x20 ; ' '
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x00 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x00 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0x08 ; '.'
0000000000000e31         db  0x00 ; '.'
0000000000000e32         db  0x00 ; '.'
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0x90 ; '.'
0000000000000e39         db  0x1e ; '.'
0000000000000e3a         db  0x00 ; '.'
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x00 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x00 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0xa0 ; '.'
0000000000000e41         db  0xba ; '.'
0000000000000e42         db  0x20 ; ' '
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x00 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0x08 ; '.'
0000000000000e49         db  0x00 ; '.'
0000000000000e4a         db  0x00 ; '.'
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x00 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0x50 ; 'P'
0000000000000e51         db  0x88 ; '.'
0000000000000e52         db  0x00 ; '.'
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x00 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x00 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0xc0 ; '.'
0000000000000e59         db  0xba ; '.'
0000000000000e5a         db  0x20 ; ' '
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x00 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x00 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0x08 ; '.'
0000000000000e61         db  0x00 ; '.'
0000000000000e62         db  0x00 ; '.'
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x00 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0x58 ; 'X'
0000000000000e69         db  0x88 ; '.'
0000000000000e6a         db  0x00 ; '.'
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x00 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x00 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0xe0 ; '.'
0000000000000e71         db  0xba ; '.'
0000000000000e72         db  0x20 ; ' '
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x00 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0x08 ; '.'
0000000000000e79         db  0x00 ; '.'
0000000000000e7a         db  0x00 ; '.'
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x00 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0x5d ; ']'
0000000000000e81         db  0x88 ; '.'
0000000000000e82         db  0x00 ; '.'
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x00 ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0x00 ; '.'
0000000000000e89         db  0xbb ; '.'
0000000000000e8a         db  0x20 ; ' '
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x00 ; '.'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0x08 ; '.'
0000000000000e91         db  0x00 ; '.'
0000000000000e92         db  0x00 ; '.'
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'
0000000000000e98         db  0x65 ; 'e'
0000000000000e99         db  0x88 ; '.'
0000000000000e9a         db  0x00 ; '.'
0000000000000e9b         db  0x00 ; '.'
0000000000000e9c         db  0x00 ; '.'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x00 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0x20 ; ' '
0000000000000ea1         db  0xbb ; '.'
0000000000000ea2         db  0x20 ; ' '
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x00 ; '.'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0x08 ; '.'
0000000000000ea9         db  0x00 ; '.'
0000000000000eaa         db  0x00 ; '.'
0000000000000eab         db  0x00 ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x00 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0x6d ; 'm'
0000000000000eb1         db  0x88 ; '.'
0000000000000eb2         db  0x00 ; '.'
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x00 ; '.'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0x40 ; '@'
0000000000000eb9         db  0xbb ; '.'
0000000000000eba         db  0x20 ; ' '
0000000000000ebb         db  0x00 ; '.'
0000000000000ebc         db  0x00 ; '.'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x00 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0x08 ; '.'
0000000000000ec1         db  0x00 ; '.'
0000000000000ec2         db  0x00 ; '.'
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x00 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0x72 ; 'r'
0000000000000ec9         db  0x88 ; '.'
0000000000000eca         db  0x00 ; '.'
0000000000000ecb         db  0x00 ; '.'
0000000000000ecc         db  0x00 ; '.'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0x80 ; '.'
0000000000000ed1         db  0xbb ; '.'
0000000000000ed2         db  0x20 ; ' '
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x00 ; '.'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0x08 ; '.'
0000000000000ed9         db  0x00 ; '.'
0000000000000eda         db  0x00 ; '.'
0000000000000edb         db  0x00 ; '.'
0000000000000edc         db  0x00 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0x01 ; '.'
0000000000000ee1         db  0x8e ; '.'
0000000000000ee2         db  0x00 ; '.'
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x00 ; '.'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0x88 ; '.'
0000000000000ee9         db  0xbb ; '.'
0000000000000eea         db  0x20 ; ' '
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x00 ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x00 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0x08 ; '.'
0000000000000ef1         db  0x00 ; '.'
0000000000000ef2         db  0x00 ; '.'
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0x09 ; '.'
0000000000000ef9         db  0x8e ; '.'
0000000000000efa         db  0x00 ; '.'
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x00 ; '.'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0x90 ; '.'
0000000000000f01         db  0xbb ; '.'
0000000000000f02         db  0x20 ; ' '
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x00 ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0x08 ; '.'
0000000000000f09         db  0x00 ; '.'
0000000000000f0a         db  0x00 ; '.'
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x00 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0x0f ; '.'
0000000000000f11         db  0x8e ; '.'
0000000000000f12         db  0x00 ; '.'
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x00 ; '.'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0x98 ; '.'
0000000000000f19         db  0xbb ; '.'
0000000000000f1a         db  0x20 ; ' '
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x00 ; '.'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0x08 ; '.'
0000000000000f21         db  0x00 ; '.'
0000000000000f22         db  0x00 ; '.'
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x00 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0x1c ; '.'
0000000000000f29         db  0x8e ; '.'
0000000000000f2a         db  0x00 ; '.'
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x00 ; '.'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0xa0 ; '.'
0000000000000f31         db  0xbb ; '.'
0000000000000f32         db  0x20 ; ' '
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x00 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0x08 ; '.'
0000000000000f39         db  0x00 ; '.'
0000000000000f3a         db  0x00 ; '.'
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x00 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0x29 ; ')'
0000000000000f41         db  0x8e ; '.'
0000000000000f42         db  0x00 ; '.'
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x00 ; '.'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0xa8 ; '.'
0000000000000f49         db  0xbb ; '.'
0000000000000f4a         db  0x20 ; ' '
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x00 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0x08 ; '.'
0000000000000f51         db  0x00 ; '.'
0000000000000f52         db  0x00 ; '.'
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0x3d ; '='
0000000000000f59         db  0x8e ; '.'
0000000000000f5a         db  0x00 ; '.'
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x00 ; '.'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0xb0 ; '.'
0000000000000f61         db  0xbb ; '.'
0000000000000f62         db  0x20 ; ' '
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x00 ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0x08 ; '.'
0000000000000f69         db  0x00 ; '.'
0000000000000f6a         db  0x00 ; '.'
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0x3f ; '?'
0000000000000f71         db  0x8e ; '.'
0000000000000f72         db  0x00 ; '.'
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x00 ; '.'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0xb8 ; '.'
0000000000000f79         db  0xbb ; '.'
0000000000000f7a         db  0x20 ; ' '
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x00 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0x08 ; '.'
0000000000000f81         db  0x00 ; '.'
0000000000000f82         db  0x00 ; '.'
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x00 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0x22 ; '"'
0000000000000f89         db  0x8e ; '.'
0000000000000f8a         db  0x00 ; '.'
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x00 ; '.'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0xc0 ; '.'
0000000000000f91         db  0xbb ; '.'
0000000000000f92         db  0x20 ; ' '
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x00 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0x08 ; '.'
0000000000000f99         db  0x00 ; '.'
0000000000000f9a         db  0x00 ; '.'
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'                                         ; DATA XREF=vasnprintf+180
0000000000000fa0         db  0xfe ; '.'
0000000000000fa1         db  0x87 ; '.'
0000000000000fa2         db  0x00 ; '.'
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x00 ; '.'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0xc8 ; '.'
0000000000000fa9         db  0xbb ; '.'
0000000000000faa         db  0x20 ; ' '
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x00 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0x08 ; '.'
0000000000000fb1         db  0x00 ; '.'
0000000000000fb2         db  0x00 ; '.'
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x00 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0x47 ; 'G'
0000000000000fb9         db  0x8e ; '.'
0000000000000fba         db  0x00 ; '.'
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x00 ; '.'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0x08 ; '.'
0000000000000fc1         db  0xc0 ; '.'
0000000000000fc2         db  0x20 ; ' '
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x00 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0x08 ; '.'
0000000000000fc9         db  0x00 ; '.'
0000000000000fca         db  0x00 ; '.'
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0x08 ; '.'
0000000000000fd1         db  0xc0 ; '.'
0000000000000fd2         db  0x20 ; ' '
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x00 ; '.'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x10 ; '.'
0000000000000fd9         db  0xc0 ; '.'
0000000000000fda         db  0x20 ; ' '
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x00 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0x08 ; '.'
0000000000000fe1         db  0x00 ; '.'
0000000000000fe2         db  0x00 ; '.'
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x00 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0x94 ; '.'
0000000000000fe9         db  0x8c ; '.'
0000000000000fea         db  0x00 ; '.'
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x00 ; '.'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x60 ; '`'
0000000000000ff1         db  0xc0 ; '.'
0000000000000ff2         db  0x20 ; ' '
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x00 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0x08 ; '.'
0000000000000ff9         db  0x00 ; '.'
0000000000000ffa         db  0x00 ; '.'
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'                                         ; DATA XREF=mode_compile+231, mode_compile+433, mode_compile+491, mode_compile+505, mode_compile+511, mode_compile+736, mode_compile+813, mode_compile+852, mode_create_from_ref+66, mode_create_from_ref+73, mode_adjust+7
0000000000001000         db  0x70 ; 'p'
0000000000001001         db  0xc0 ; '.'
0000000000001002         db  0x20 ; ' '
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x00 ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x78 ; 'x'
0000000000001009         db  0xc0 ; '.'
000000000000100a         db  0x20 ; ' '
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x00 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0x08 ; '.'
0000000000001011         db  0x00 ; '.'
0000000000001012         db  0x00 ; '.'
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0x00 ; '.'
0000000000001019         db  0xc1 ; '.'
000000000000101a         db  0x20 ; ' '
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x00 ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0xc8 ; '.'
0000000000001021         db  0xbf ; '.'
0000000000001022         db  0x20 ; ' '
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x00 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x06 ; '.'
0000000000001029         db  0x00 ; '.'
000000000000102a         db  0x00 ; '.'
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x07 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0x00 ; '.'
0000000000001031         db  0x00 ; '.'
0000000000001032         db  0x00 ; '.'
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x00 ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0xd0 ; '.'
0000000000001039         db  0xbf ; '.'
000000000000103a         db  0x20 ; ' '
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x00 ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0x06 ; '.'
0000000000001041         db  0x00 ; '.'
0000000000001042         db  0x00 ; '.'
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x1d ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0x00 ; '.'
0000000000001049         db  0x00 ; '.'
000000000000104a         db  0x00 ; '.'
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x00 ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0xd8 ; '.'
0000000000001051         db  0xbf ; '.'
0000000000001052         db  0x20 ; ' '
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x00 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0x06 ; '.'
0000000000001059         db  0x00 ; '.'
000000000000105a         db  0x00 ; '.'
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x21 ; '!'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0x00 ; '.'
0000000000001061         db  0x00 ; '.'
0000000000001062         db  0x00 ; '.'
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x00 ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0xe0 ; '.'
0000000000001069         db  0xbf ; '.'
000000000000106a         db  0x20 ; ' '
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x00 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0x06 ; '.'
0000000000001071         db  0x00 ; '.'
0000000000001072         db  0x00 ; '.'
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x3d ; '='
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0x00 ; '.'
0000000000001079         db  0x00 ; '.'
000000000000107a         db  0x00 ; '.'
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x00 ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0xe8 ; '.'
0000000000001081         db  0xbf ; '.'
0000000000001082         db  0x20 ; ' '
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x00 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0x06 ; '.'
0000000000001089         db  0x00 ; '.'
000000000000108a         db  0x00 ; '.'
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x40 ; '@'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0x00 ; '.'
0000000000001091         db  0x00 ; '.'
0000000000001092         db  0x00 ; '.'
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x00 ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x80 ; '.'
0000000000001099         db  0xc0 ; '.'
000000000000109a         db  0x20 ; ' '
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x00 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0x05 ; '.'
00000000000010a1         db  0x00 ; '.'
00000000000010a2         db  0x00 ; '.'
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x44 ; 'D'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0x00 ; '.'
00000000000010a9         db  0x00 ; '.'
00000000000010aa         db  0x00 ; '.'
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x00 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x88 ; '.'
00000000000010b1         db  0xc0 ; '.'
00000000000010b2         db  0x20 ; ' '
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x00 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0x05 ; '.'
00000000000010b9         db  0x00 ; '.'
00000000000010ba         db  0x00 ; '.'
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x43 ; 'C'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0x00 ; '.'
00000000000010c1         db  0x00 ; '.'
00000000000010c2         db  0x00 ; '.'
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x00 ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x90 ; '.'
00000000000010c9         db  0xc0 ; '.'
00000000000010ca         db  0x20 ; ' '
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x00 ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0x05 ; '.'
00000000000010d1         db  0x00 ; '.'
00000000000010d2         db  0x00 ; '.'
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x49 ; 'I'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0x00 ; '.'
00000000000010d9         db  0x00 ; '.'
00000000000010da         db  0x00 ; '.'
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x00 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x98 ; '.'
00000000000010e1         db  0xc0 ; '.'
00000000000010e2         db  0x20 ; ' '
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x00 ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0x05 ; '.'
00000000000010e9         db  0x00 ; '.'
00000000000010ea         db  0x00 ; '.'
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x4a ; 'J'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0x00 ; '.'
00000000000010f1         db  0x00 ; '.'
00000000000010f2         db  0x00 ; '.'
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x00 ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0xa0 ; '.'
00000000000010f9         db  0xc0 ; '.'
00000000000010fa         db  0x20 ; ' '
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x00 ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0x05 ; '.'
0000000000001101         db  0x00 ; '.'
0000000000001102         db  0x00 ; '.'
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x46 ; 'F'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0x00 ; '.'
0000000000001109         db  0x00 ; '.'
000000000000110a         db  0x00 ; '.'
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x00 ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0xc0 ; '.'
0000000000001111         db  0xc0 ; '.'
0000000000001112         db  0x20 ; ' '
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x00 ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0x05 ; '.'
0000000000001119         db  0x00 ; '.'
000000000000111a         db  0x00 ; '.'
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x48 ; 'H'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x00 ; '.'
0000000000001121         db  0x00 ; '.'
0000000000001122         db  0x00 ; '.'
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x00 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0x1128; 0x16e0[ (1464 bytes)
        ; File offset : [4392; 5856[ (1464 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000001128         db  0xe0 ; '.'
0000000000001129         db  0xbd ; '.'
000000000000112a         db  0x20 ; ' '
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x00 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0x07 ; '.'
0000000000001131         db  0x00 ; '.'
0000000000001132         db  0x00 ; '.'
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x01 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x00 ; '.'
0000000000001139         db  0x00 ; '.'
000000000000113a         db  0x00 ; '.'
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x00 ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0xe8 ; '.'
0000000000001141         db  0xbd ; '.'
0000000000001142         db  0x20 ; ' '
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x00 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0x07 ; '.'
0000000000001149         db  0x00 ; '.'
000000000000114a         db  0x00 ; '.'
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x02 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x00 ; '.'
0000000000001151         db  0x00 ; '.'
0000000000001152         db  0x00 ; '.'
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x00 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0xf0 ; '.'
0000000000001159         db  0xbd ; '.'
000000000000115a         db  0x20 ; ' '
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x00 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0x07 ; '.'
0000000000001161         db  0x00 ; '.'
0000000000001162         db  0x00 ; '.'
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x03 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x00 ; '.'
0000000000001169         db  0x00 ; '.'
000000000000116a         db  0x00 ; '.'
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x00 ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0xf8 ; '.'
0000000000001171         db  0xbd ; '.'
0000000000001172         db  0x20 ; ' '
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x00 ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0x07 ; '.'
0000000000001179         db  0x00 ; '.'
000000000000117a         db  0x00 ; '.'
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x04 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x00 ; '.'
0000000000001181         db  0x00 ; '.'
0000000000001182         db  0x00 ; '.'
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x00 ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x00 ; '.'
0000000000001189         db  0xbe ; '.'
000000000000118a         db  0x20 ; ' '
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x00 ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0x07 ; '.'
0000000000001191         db  0x00 ; '.'
0000000000001192         db  0x00 ; '.'
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x05 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0x00 ; '.'
0000000000001199         db  0x00 ; '.'
000000000000119a         db  0x00 ; '.'
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x00 ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x08 ; '.'
00000000000011a1         db  0xbe ; '.'
00000000000011a2         db  0x20 ; ' '
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x00 ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0x07 ; '.'
00000000000011a9         db  0x00 ; '.'
00000000000011aa         db  0x00 ; '.'
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x06 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0x00 ; '.'
00000000000011b1         db  0x00 ; '.'
00000000000011b2         db  0x00 ; '.'
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x00 ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x10 ; '.'
00000000000011b9         db  0xbe ; '.'
00000000000011ba         db  0x20 ; ' '
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x00 ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0x07 ; '.'
00000000000011c1         db  0x00 ; '.'
00000000000011c2         db  0x00 ; '.'
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x08 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0x00 ; '.'
00000000000011c9         db  0x00 ; '.'
00000000000011ca         db  0x00 ; '.'
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x00 ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x18 ; '.'
00000000000011d1         db  0xbe ; '.'
00000000000011d2         db  0x20 ; ' '
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x00 ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0x07 ; '.'
00000000000011d9         db  0x00 ; '.'
00000000000011da         db  0x00 ; '.'
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x09 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0x00 ; '.'
00000000000011e1         db  0x00 ; '.'
00000000000011e2         db  0x00 ; '.'
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x00 ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x20 ; ' '
00000000000011e9         db  0xbe ; '.'
00000000000011ea         db  0x20 ; ' '
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x00 ; '.'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0x07 ; '.'
00000000000011f1         db  0x00 ; '.'
00000000000011f2         db  0x00 ; '.'
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x0a ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0x00 ; '.'
00000000000011f9         db  0x00 ; '.'
00000000000011fa         db  0x00 ; '.'
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x00 ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x28 ; '('
0000000000001201         db  0xbe ; '.'
0000000000001202         db  0x20 ; ' '
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x00 ; '.'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0x07 ; '.'
0000000000001209         db  0x00 ; '.'
000000000000120a         db  0x00 ; '.'
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x0b ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0x00 ; '.'
0000000000001211         db  0x00 ; '.'
0000000000001212         db  0x00 ; '.'
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x00 ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x30 ; '0'
0000000000001219         db  0xbe ; '.'
000000000000121a         db  0x20 ; ' '
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x00 ; '.'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0x07 ; '.'
0000000000001221         db  0x00 ; '.'
0000000000001222         db  0x00 ; '.'
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x0c ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0x00 ; '.'
0000000000001229         db  0x00 ; '.'
000000000000122a         db  0x00 ; '.'
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x00 ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x38 ; '8'
0000000000001231         db  0xbe ; '.'
0000000000001232         db  0x20 ; ' '
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x00 ; '.'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0x07 ; '.'
0000000000001239         db  0x00 ; '.'
000000000000123a         db  0x00 ; '.'
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x0d ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x00 ; '.'
0000000000001241         db  0x00 ; '.'
0000000000001242         db  0x00 ; '.'
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x00 ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x40 ; '@'
0000000000001249         db  0xbe ; '.'
000000000000124a         db  0x20 ; ' '
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x00 ; '.'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0x07 ; '.'
0000000000001251         db  0x00 ; '.'
0000000000001252         db  0x00 ; '.'
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x0e ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0x00 ; '.'
0000000000001259         db  0x00 ; '.'
000000000000125a         db  0x00 ; '.'
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x00 ; '.'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x48 ; 'H'
0000000000001261         db  0xbe ; '.'
0000000000001262         db  0x20 ; ' '
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x00 ; '.'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x07 ; '.'
0000000000001269         db  0x00 ; '.'
000000000000126a         db  0x00 ; '.'
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x0f ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x00 ; '.'
0000000000001271         db  0x00 ; '.'
0000000000001272         db  0x00 ; '.'
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x00 ; '.'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x50 ; 'P'
0000000000001279         db  0xbe ; '.'
000000000000127a         db  0x20 ; ' '
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x00 ; '.'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x07 ; '.'
0000000000001281         db  0x00 ; '.'
0000000000001282         db  0x00 ; '.'
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x10 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0x00 ; '.'
0000000000001289         db  0x00 ; '.'
000000000000128a         db  0x00 ; '.'
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x00 ; '.'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x58 ; 'X'
0000000000001291         db  0xbe ; '.'
0000000000001292         db  0x20 ; ' '
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x00 ; '.'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x07 ; '.'
0000000000001299         db  0x00 ; '.'
000000000000129a         db  0x00 ; '.'
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x11 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0x00 ; '.'
00000000000012a1         db  0x00 ; '.'
00000000000012a2         db  0x00 ; '.'
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x00 ; '.'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x60 ; '`'
00000000000012a9         db  0xbe ; '.'
00000000000012aa         db  0x20 ; ' '
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x00 ; '.'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x07 ; '.'
00000000000012b1         db  0x00 ; '.'
00000000000012b2         db  0x00 ; '.'
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x12 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0x00 ; '.'
00000000000012b9         db  0x00 ; '.'
00000000000012ba         db  0x00 ; '.'
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x00 ; '.'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x68 ; 'h'
00000000000012c1         db  0xbe ; '.'
00000000000012c2         db  0x20 ; ' '
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x00 ; '.'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0x07 ; '.'
00000000000012c9         db  0x00 ; '.'
00000000000012ca         db  0x00 ; '.'
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x13 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0x00 ; '.'
00000000000012d1         db  0x00 ; '.'
00000000000012d2         db  0x00 ; '.'
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x00 ; '.'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x70 ; 'p'
00000000000012d9         db  0xbe ; '.'
00000000000012da         db  0x20 ; ' '
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x00 ; '.'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0x07 ; '.'
00000000000012e1         db  0x00 ; '.'
00000000000012e2         db  0x00 ; '.'
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x14 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0x00 ; '.'
00000000000012e9         db  0x00 ; '.'
00000000000012ea         db  0x00 ; '.'
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x00 ; '.'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x78 ; 'x'
00000000000012f1         db  0xbe ; '.'
00000000000012f2         db  0x20 ; ' '
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x00 ; '.'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x07 ; '.'
00000000000012f9         db  0x00 ; '.'
00000000000012fa         db  0x00 ; '.'
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x15 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0x00 ; '.'
0000000000001301         db  0x00 ; '.'
0000000000001302         db  0x00 ; '.'
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x00 ; '.'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x80 ; '.'
0000000000001309         db  0xbe ; '.'
000000000000130a         db  0x20 ; ' '
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x00 ; '.'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0x07 ; '.'
0000000000001311         db  0x00 ; '.'
0000000000001312         db  0x00 ; '.'
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x16 ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0x00 ; '.'
0000000000001319         db  0x00 ; '.'
000000000000131a         db  0x00 ; '.'
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x00 ; '.'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x88 ; '.'
0000000000001321         db  0xbe ; '.'
0000000000001322         db  0x20 ; ' '
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x00 ; '.'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0x07 ; '.'
0000000000001329         db  0x00 ; '.'
000000000000132a         db  0x00 ; '.'
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x17 ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0x00 ; '.'
0000000000001331         db  0x00 ; '.'
0000000000001332         db  0x00 ; '.'
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x00 ; '.'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x90 ; '.'
0000000000001339         db  0xbe ; '.'
000000000000133a         db  0x20 ; ' '
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x00 ; '.'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0x07 ; '.'
0000000000001341         db  0x00 ; '.'
0000000000001342         db  0x00 ; '.'
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x18 ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0x00 ; '.'
0000000000001349         db  0x00 ; '.'
000000000000134a         db  0x00 ; '.'
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x00 ; '.'
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x98 ; '.'
0000000000001351         db  0xbe ; '.'
0000000000001352         db  0x20 ; ' '
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x00 ; '.'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0x07 ; '.'
0000000000001359         db  0x00 ; '.'
000000000000135a         db  0x00 ; '.'
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x19 ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0x00 ; '.'
0000000000001361         db  0x00 ; '.'
0000000000001362         db  0x00 ; '.'
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x00 ; '.'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0xa0 ; '.'
0000000000001369         db  0xbe ; '.'
000000000000136a         db  0x20 ; ' '
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x00 ; '.'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0x07 ; '.'
0000000000001371         db  0x00 ; '.'
0000000000001372         db  0x00 ; '.'
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x1a ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x00 ; '.'
0000000000001379         db  0x00 ; '.'
000000000000137a         db  0x00 ; '.'
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x00 ; '.'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0xa8 ; '.'
0000000000001381         db  0xbe ; '.'
0000000000001382         db  0x20 ; ' '
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x00 ; '.'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0x07 ; '.'
0000000000001389         db  0x00 ; '.'
000000000000138a         db  0x00 ; '.'
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x1b ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x00 ; '.'
0000000000001391         db  0x00 ; '.'
0000000000001392         db  0x00 ; '.'
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x00 ; '.'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0xb0 ; '.'
0000000000001399         db  0xbe ; '.'
000000000000139a         db  0x20 ; ' '
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x00 ; '.'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0x07 ; '.'
00000000000013a1         db  0x00 ; '.'
00000000000013a2         db  0x00 ; '.'
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x1c ; '.'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x00 ; '.'
00000000000013a9         db  0x00 ; '.'
00000000000013aa         db  0x00 ; '.'
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x00 ; '.'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0xb8 ; '.'
00000000000013b1         db  0xbe ; '.'
00000000000013b2         db  0x20 ; ' '
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x00 ; '.'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'
00000000000013b8         db  0x07 ; '.'
00000000000013b9         db  0x00 ; '.'
00000000000013ba         db  0x00 ; '.'
00000000000013bb         db  0x00 ; '.'
00000000000013bc         db  0x1e ; '.'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x00 ; '.'
00000000000013bf         db  0x00 ; '.'
00000000000013c0         db  0x00 ; '.'
00000000000013c1         db  0x00 ; '.'
00000000000013c2         db  0x00 ; '.'
00000000000013c3         db  0x00 ; '.'
00000000000013c4         db  0x00 ; '.'
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x00 ; '.'
00000000000013c7         db  0x00 ; '.'
00000000000013c8         db  0xc0 ; '.'
00000000000013c9         db  0xbe ; '.'
00000000000013ca         db  0x20 ; ' '
00000000000013cb         db  0x00 ; '.'
00000000000013cc         db  0x00 ; '.'
00000000000013cd         db  0x00 ; '.'
00000000000013ce         db  0x00 ; '.'
00000000000013cf         db  0x00 ; '.'
00000000000013d0         db  0x07 ; '.'
00000000000013d1         db  0x00 ; '.'
00000000000013d2         db  0x00 ; '.'
00000000000013d3         db  0x00 ; '.'
00000000000013d4         db  0x1f ; '.'
00000000000013d5         db  0x00 ; '.'
00000000000013d6         db  0x00 ; '.'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0x00 ; '.'
00000000000013d9         db  0x00 ; '.'
00000000000013da         db  0x00 ; '.'
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x00 ; '.'
00000000000013dd         db  0x00 ; '.'
00000000000013de         db  0x00 ; '.'
00000000000013df         db  0x00 ; '.'
00000000000013e0         db  0xc8 ; '.'
00000000000013e1         db  0xbe ; '.'
00000000000013e2         db  0x20 ; ' '
00000000000013e3         db  0x00 ; '.'
00000000000013e4         db  0x00 ; '.'
00000000000013e5         db  0x00 ; '.'
00000000000013e6         db  0x00 ; '.'
00000000000013e7         db  0x00 ; '.'
00000000000013e8         db  0x07 ; '.'
00000000000013e9         db  0x00 ; '.'
00000000000013ea         db  0x00 ; '.'
00000000000013eb         db  0x00 ; '.'
00000000000013ec         db  0x20 ; ' '
00000000000013ed         db  0x00 ; '.'
00000000000013ee         db  0x00 ; '.'
00000000000013ef         db  0x00 ; '.'
00000000000013f0         db  0x00 ; '.'
00000000000013f1         db  0x00 ; '.'
00000000000013f2         db  0x00 ; '.'
00000000000013f3         db  0x00 ; '.'
00000000000013f4         db  0x00 ; '.'
00000000000013f5         db  0x00 ; '.'
00000000000013f6         db  0x00 ; '.'
00000000000013f7         db  0x00 ; '.'
00000000000013f8         db  0xd0 ; '.'
00000000000013f9         db  0xbe ; '.'
00000000000013fa         db  0x20 ; ' '
00000000000013fb         db  0x00 ; '.'
00000000000013fc         db  0x00 ; '.'
00000000000013fd         db  0x00 ; '.'
00000000000013fe         db  0x00 ; '.'
00000000000013ff         db  0x00 ; '.'
0000000000001400         db  0x07 ; '.'
0000000000001401         db  0x00 ; '.'
0000000000001402         db  0x00 ; '.'
0000000000001403         db  0x00 ; '.'
0000000000001404         db  0x22 ; '"'
0000000000001405         db  0x00 ; '.'
0000000000001406         db  0x00 ; '.'
0000000000001407         db  0x00 ; '.'
0000000000001408         db  0x00 ; '.'
0000000000001409         db  0x00 ; '.'
000000000000140a         db  0x00 ; '.'
000000000000140b         db  0x00 ; '.'
000000000000140c         db  0x00 ; '.'
000000000000140d         db  0x00 ; '.'
000000000000140e         db  0x00 ; '.'
000000000000140f         db  0x00 ; '.'
0000000000001410         db  0xd8 ; '.'
0000000000001411         db  0xbe ; '.'
0000000000001412         db  0x20 ; ' '
0000000000001413         db  0x00 ; '.'
0000000000001414         db  0x00 ; '.'
0000000000001415         db  0x00 ; '.'
0000000000001416         db  0x00 ; '.'
0000000000001417         db  0x00 ; '.'
0000000000001418         db  0x07 ; '.'
0000000000001419         db  0x00 ; '.'
000000000000141a         db  0x00 ; '.'
000000000000141b         db  0x00 ; '.'
000000000000141c         db  0x23 ; '#'
000000000000141d         db  0x00 ; '.'
000000000000141e         db  0x00 ; '.'
000000000000141f         db  0x00 ; '.'
0000000000001420         db  0x00 ; '.'
0000000000001421         db  0x00 ; '.'
0000000000001422         db  0x00 ; '.'
0000000000001423         db  0x00 ; '.'
0000000000001424         db  0x00 ; '.'
0000000000001425         db  0x00 ; '.'
0000000000001426         db  0x00 ; '.'
0000000000001427         db  0x00 ; '.'
0000000000001428         db  0xe0 ; '.'
0000000000001429         db  0xbe ; '.'
000000000000142a         db  0x20 ; ' '
000000000000142b         db  0x00 ; '.'
000000000000142c         db  0x00 ; '.'
000000000000142d         db  0x00 ; '.'
000000000000142e         db  0x00 ; '.'
000000000000142f         db  0x00 ; '.'
0000000000001430         db  0x07 ; '.'
0000000000001431         db  0x00 ; '.'
0000000000001432         db  0x00 ; '.'
0000000000001433         db  0x00 ; '.'
0000000000001434         db  0x24 ; '$'
0000000000001435         db  0x00 ; '.'
0000000000001436         db  0x00 ; '.'
0000000000001437         db  0x00 ; '.'
0000000000001438         db  0x00 ; '.'
0000000000001439         db  0x00 ; '.'
000000000000143a         db  0x00 ; '.'
000000000000143b         db  0x00 ; '.'
000000000000143c         db  0x00 ; '.'
000000000000143d         db  0x00 ; '.'
000000000000143e         db  0x00 ; '.'
000000000000143f         db  0x00 ; '.'
0000000000001440         db  0xe8 ; '.'
0000000000001441         db  0xbe ; '.'
0000000000001442         db  0x20 ; ' '
0000000000001443         db  0x00 ; '.'
0000000000001444         db  0x00 ; '.'
0000000000001445         db  0x00 ; '.'
0000000000001446         db  0x00 ; '.'
0000000000001447         db  0x00 ; '.'
0000000000001448         db  0x07 ; '.'
0000000000001449         db  0x00 ; '.'
000000000000144a         db  0x00 ; '.'
000000000000144b         db  0x00 ; '.'
000000000000144c         db  0x25 ; '%'
000000000000144d         db  0x00 ; '.'
000000000000144e         db  0x00 ; '.'
000000000000144f         db  0x00 ; '.'
0000000000001450         db  0x00 ; '.'
0000000000001451         db  0x00 ; '.'
0000000000001452         db  0x00 ; '.'
0000000000001453         db  0x00 ; '.'
0000000000001454         db  0x00 ; '.'
0000000000001455         db  0x00 ; '.'
0000000000001456         db  0x00 ; '.'
0000000000001457         db  0x00 ; '.'
0000000000001458         db  0xf0 ; '.'
0000000000001459         db  0xbe ; '.'
000000000000145a         db  0x20 ; ' '
000000000000145b         db  0x00 ; '.'
000000000000145c         db  0x00 ; '.'
000000000000145d         db  0x00 ; '.'
000000000000145e         db  0x00 ; '.'
000000000000145f         db  0x00 ; '.'
0000000000001460         db  0x07 ; '.'
0000000000001461         db  0x00 ; '.'
0000000000001462         db  0x00 ; '.'
0000000000001463         db  0x00 ; '.'
0000000000001464         db  0x26 ; '&'
0000000000001465         db  0x00 ; '.'
0000000000001466         db  0x00 ; '.'
0000000000001467         db  0x00 ; '.'
0000000000001468         db  0x00 ; '.'
0000000000001469         db  0x00 ; '.'
000000000000146a         db  0x00 ; '.'
000000000000146b         db  0x00 ; '.'
000000000000146c         db  0x00 ; '.'
000000000000146d         db  0x00 ; '.'
000000000000146e         db  0x00 ; '.'
000000000000146f         db  0x00 ; '.'
0000000000001470         db  0xf8 ; '.'
0000000000001471         db  0xbe ; '.'
0000000000001472         db  0x20 ; ' '
0000000000001473         db  0x00 ; '.'
0000000000001474         db  0x00 ; '.'
0000000000001475         db  0x00 ; '.'
0000000000001476         db  0x00 ; '.'
0000000000001477         db  0x00 ; '.'
0000000000001478         db  0x07 ; '.'
0000000000001479         db  0x00 ; '.'
000000000000147a         db  0x00 ; '.'
000000000000147b         db  0x00 ; '.'
000000000000147c         db  0x27 ; '''
000000000000147d         db  0x00 ; '.'
000000000000147e         db  0x00 ; '.'
000000000000147f         db  0x00 ; '.'
0000000000001480         db  0x00 ; '.'
0000000000001481         db  0x00 ; '.'
0000000000001482         db  0x00 ; '.'
0000000000001483         db  0x00 ; '.'
0000000000001484         db  0x00 ; '.'
0000000000001485         db  0x00 ; '.'
0000000000001486         db  0x00 ; '.'
0000000000001487         db  0x00 ; '.'
0000000000001488         db  0x00 ; '.'
0000000000001489         db  0xbf ; '.'
000000000000148a         db  0x20 ; ' '
000000000000148b         db  0x00 ; '.'
000000000000148c         db  0x00 ; '.'
000000000000148d         db  0x00 ; '.'
000000000000148e         db  0x00 ; '.'
000000000000148f         db  0x00 ; '.'
0000000000001490         db  0x07 ; '.'
0000000000001491         db  0x00 ; '.'
0000000000001492         db  0x00 ; '.'
0000000000001493         db  0x00 ; '.'
0000000000001494         db  0x28 ; '('
0000000000001495         db  0x00 ; '.'
0000000000001496         db  0x00 ; '.'
0000000000001497         db  0x00 ; '.'
0000000000001498         db  0x00 ; '.'
0000000000001499         db  0x00 ; '.'
000000000000149a         db  0x00 ; '.'
000000000000149b         db  0x00 ; '.'
000000000000149c         db  0x00 ; '.'
000000000000149d         db  0x00 ; '.'
000000000000149e         db  0x00 ; '.'
000000000000149f         db  0x00 ; '.'
00000000000014a0         db  0x08 ; '.'
00000000000014a1         db  0xbf ; '.'
00000000000014a2         db  0x20 ; ' '
00000000000014a3         db  0x00 ; '.'
00000000000014a4         db  0x00 ; '.'
00000000000014a5         db  0x00 ; '.'
00000000000014a6         db  0x00 ; '.'
00000000000014a7         db  0x00 ; '.'
00000000000014a8         db  0x07 ; '.'
00000000000014a9         db  0x00 ; '.'
00000000000014aa         db  0x00 ; '.'
00000000000014ab         db  0x00 ; '.'
00000000000014ac         db  0x29 ; ')'
00000000000014ad         db  0x00 ; '.'
00000000000014ae         db  0x00 ; '.'
00000000000014af         db  0x00 ; '.'
00000000000014b0         db  0x00 ; '.'
00000000000014b1         db  0x00 ; '.'
00000000000014b2         db  0x00 ; '.'
00000000000014b3         db  0x00 ; '.'
00000000000014b4         db  0x00 ; '.'
00000000000014b5         db  0x00 ; '.'
00000000000014b6         db  0x00 ; '.'
00000000000014b7         db  0x00 ; '.'
00000000000014b8         db  0x10 ; '.'
00000000000014b9         db  0xbf ; '.'
00000000000014ba         db  0x20 ; ' '
00000000000014bb         db  0x00 ; '.'
00000000000014bc         db  0x00 ; '.'
00000000000014bd         db  0x00 ; '.'
00000000000014be         db  0x00 ; '.'
00000000000014bf         db  0x00 ; '.'
00000000000014c0         db  0x07 ; '.'
00000000000014c1         db  0x00 ; '.'
00000000000014c2         db  0x00 ; '.'
00000000000014c3         db  0x00 ; '.'
00000000000014c4         db  0x2a ; '*'
00000000000014c5         db  0x00 ; '.'
00000000000014c6         db  0x00 ; '.'
00000000000014c7         db  0x00 ; '.'
00000000000014c8         db  0x00 ; '.'
00000000000014c9         db  0x00 ; '.'
00000000000014ca         db  0x00 ; '.'
00000000000014cb         db  0x00 ; '.'
00000000000014cc         db  0x00 ; '.'
00000000000014cd         db  0x00 ; '.'
00000000000014ce         db  0x00 ; '.'
00000000000014cf         db  0x00 ; '.'
00000000000014d0         db  0x18 ; '.'
00000000000014d1         db  0xbf ; '.'
00000000000014d2         db  0x20 ; ' '
00000000000014d3         db  0x00 ; '.'
00000000000014d4         db  0x00 ; '.'
00000000000014d5         db  0x00 ; '.'
00000000000014d6         db  0x00 ; '.'
00000000000014d7         db  0x00 ; '.'
00000000000014d8         db  0x07 ; '.'
00000000000014d9         db  0x00 ; '.'
00000000000014da         db  0x00 ; '.'
00000000000014db         db  0x00 ; '.'
00000000000014dc         db  0x2b ; '+'
00000000000014dd         db  0x00 ; '.'
00000000000014de         db  0x00 ; '.'
00000000000014df         db  0x00 ; '.'
00000000000014e0         db  0x00 ; '.'
00000000000014e1         db  0x00 ; '.'
00000000000014e2         db  0x00 ; '.'
00000000000014e3         db  0x00 ; '.'
00000000000014e4         db  0x00 ; '.'
00000000000014e5         db  0x00 ; '.'
00000000000014e6         db  0x00 ; '.'
00000000000014e7         db  0x00 ; '.'
00000000000014e8         db  0x20 ; ' '
00000000000014e9         db  0xbf ; '.'
00000000000014ea         db  0x20 ; ' '
00000000000014eb         db  0x00 ; '.'
00000000000014ec         db  0x00 ; '.'
00000000000014ed         db  0x00 ; '.'
00000000000014ee         db  0x00 ; '.'
00000000000014ef         db  0x00 ; '.'
00000000000014f0         db  0x07 ; '.'
00000000000014f1         db  0x00 ; '.'
00000000000014f2         db  0x00 ; '.'
00000000000014f3         db  0x00 ; '.'
00000000000014f4         db  0x2c ; ','
00000000000014f5         db  0x00 ; '.'
00000000000014f6         db  0x00 ; '.'
00000000000014f7         db  0x00 ; '.'
00000000000014f8         db  0x00 ; '.'
00000000000014f9         db  0x00 ; '.'
00000000000014fa         db  0x00 ; '.'
00000000000014fb         db  0x00 ; '.'
00000000000014fc         db  0x00 ; '.'
00000000000014fd         db  0x00 ; '.'
00000000000014fe         db  0x00 ; '.'
00000000000014ff         db  0x00 ; '.'
0000000000001500         db  0x28 ; '('
0000000000001501         db  0xbf ; '.'
0000000000001502         db  0x20 ; ' '
0000000000001503         db  0x00 ; '.'
0000000000001504         db  0x00 ; '.'
0000000000001505         db  0x00 ; '.'
0000000000001506         db  0x00 ; '.'
0000000000001507         db  0x00 ; '.'
0000000000001508         db  0x07 ; '.'
0000000000001509         db  0x00 ; '.'
000000000000150a         db  0x00 ; '.'
000000000000150b         db  0x00 ; '.'
000000000000150c         db  0x2d ; '-'
000000000000150d         db  0x00 ; '.'
000000000000150e         db  0x00 ; '.'
000000000000150f         db  0x00 ; '.'
0000000000001510         db  0x00 ; '.'
0000000000001511         db  0x00 ; '.'
0000000000001512         db  0x00 ; '.'
0000000000001513         db  0x00 ; '.'
0000000000001514         db  0x00 ; '.'
0000000000001515         db  0x00 ; '.'
0000000000001516         db  0x00 ; '.'
0000000000001517         db  0x00 ; '.'
0000000000001518         db  0x30 ; '0'
0000000000001519         db  0xbf ; '.'
000000000000151a         db  0x20 ; ' '
000000000000151b         db  0x00 ; '.'
000000000000151c         db  0x00 ; '.'
000000000000151d         db  0x00 ; '.'
000000000000151e         db  0x00 ; '.'
000000000000151f         db  0x00 ; '.'
0000000000001520         db  0x07 ; '.'
0000000000001521         db  0x00 ; '.'
0000000000001522         db  0x00 ; '.'
0000000000001523         db  0x00 ; '.'
0000000000001524         db  0x2e ; '.'
0000000000001525         db  0x00 ; '.'
0000000000001526         db  0x00 ; '.'
0000000000001527         db  0x00 ; '.'
0000000000001528         db  0x00 ; '.'
0000000000001529         db  0x00 ; '.'
000000000000152a         db  0x00 ; '.'
000000000000152b         db  0x00 ; '.'
000000000000152c         db  0x00 ; '.'
000000000000152d         db  0x00 ; '.'
000000000000152e         db  0x00 ; '.'
000000000000152f         db  0x00 ; '.'
0000000000001530         db  0x38 ; '8'
0000000000001531         db  0xbf ; '.'
0000000000001532         db  0x20 ; ' '
0000000000001533         db  0x00 ; '.'
0000000000001534         db  0x00 ; '.'
0000000000001535         db  0x00 ; '.'
0000000000001536         db  0x00 ; '.'
0000000000001537         db  0x00 ; '.'
0000000000001538         db  0x07 ; '.'
0000000000001539         db  0x00 ; '.'
000000000000153a         db  0x00 ; '.'
000000000000153b         db  0x00 ; '.'
000000000000153c         db  0x2f ; '/'
000000000000153d         db  0x00 ; '.'
000000000000153e         db  0x00 ; '.'
000000000000153f         db  0x00 ; '.'
0000000000001540         db  0x00 ; '.'
0000000000001541         db  0x00 ; '.'
0000000000001542         db  0x00 ; '.'
0000000000001543         db  0x00 ; '.'
0000000000001544         db  0x00 ; '.'
0000000000001545         db  0x00 ; '.'
0000000000001546         db  0x00 ; '.'
0000000000001547         db  0x00 ; '.'
0000000000001548         db  0x40 ; '@'
0000000000001549         db  0xbf ; '.'
000000000000154a         db  0x20 ; ' '
000000000000154b         db  0x00 ; '.'
000000000000154c         db  0x00 ; '.'
000000000000154d         db  0x00 ; '.'
000000000000154e         db  0x00 ; '.'
000000000000154f         db  0x00 ; '.'
0000000000001550         db  0x07 ; '.'
0000000000001551         db  0x00 ; '.'
0000000000001552         db  0x00 ; '.'
0000000000001553         db  0x00 ; '.'
0000000000001554         db  0x30 ; '0'
0000000000001555         db  0x00 ; '.'
0000000000001556         db  0x00 ; '.'
0000000000001557         db  0x00 ; '.'
0000000000001558         db  0x00 ; '.'
0000000000001559         db  0x00 ; '.'
000000000000155a         db  0x00 ; '.'
000000000000155b         db  0x00 ; '.'
000000000000155c         db  0x00 ; '.'
000000000000155d         db  0x00 ; '.'
000000000000155e         db  0x00 ; '.'
000000000000155f         db  0x00 ; '.'
0000000000001560         db  0x48 ; 'H'
0000000000001561         db  0xbf ; '.'
0000000000001562         db  0x20 ; ' '
0000000000001563         db  0x00 ; '.'
0000000000001564         db  0x00 ; '.'
0000000000001565         db  0x00 ; '.'
0000000000001566         db  0x00 ; '.'
0000000000001567         db  0x00 ; '.'
0000000000001568         db  0x07 ; '.'
0000000000001569         db  0x00 ; '.'
000000000000156a         db  0x00 ; '.'
000000000000156b         db  0x00 ; '.'
000000000000156c         db  0x31 ; '1'
000000000000156d         db  0x00 ; '.'
000000000000156e         db  0x00 ; '.'
000000000000156f         db  0x00 ; '.'
0000000000001570         db  0x00 ; '.'
0000000000001571         db  0x00 ; '.'
0000000000001572         db  0x00 ; '.'
0000000000001573         db  0x00 ; '.'
0000000000001574         db  0x00 ; '.'
0000000000001575         db  0x00 ; '.'
0000000000001576         db  0x00 ; '.'
0000000000001577         db  0x00 ; '.'
0000000000001578         db  0x50 ; 'P'
0000000000001579         db  0xbf ; '.'
000000000000157a         db  0x20 ; ' '
000000000000157b         db  0x00 ; '.'
000000000000157c         db  0x00 ; '.'
000000000000157d         db  0x00 ; '.'
000000000000157e         db  0x00 ; '.'
000000000000157f         db  0x00 ; '.'
0000000000001580         db  0x07 ; '.'
0000000000001581         db  0x00 ; '.'
0000000000001582         db  0x00 ; '.'
0000000000001583         db  0x00 ; '.'
0000000000001584         db  0x32 ; '2'
0000000000001585         db  0x00 ; '.'
0000000000001586         db  0x00 ; '.'
0000000000001587         db  0x00 ; '.'
0000000000001588         db  0x00 ; '.'
0000000000001589         db  0x00 ; '.'
000000000000158a         db  0x00 ; '.'
000000000000158b         db  0x00 ; '.'
000000000000158c         db  0x00 ; '.'
000000000000158d         db  0x00 ; '.'
000000000000158e         db  0x00 ; '.'
000000000000158f         db  0x00 ; '.'
0000000000001590         db  0x58 ; 'X'
0000000000001591         db  0xbf ; '.'
0000000000001592         db  0x20 ; ' '
0000000000001593         db  0x00 ; '.'
0000000000001594         db  0x00 ; '.'
0000000000001595         db  0x00 ; '.'
0000000000001596         db  0x00 ; '.'
0000000000001597         db  0x00 ; '.'
0000000000001598         db  0x07 ; '.'
0000000000001599         db  0x00 ; '.'
000000000000159a         db  0x00 ; '.'
000000000000159b         db  0x00 ; '.'
000000000000159c         db  0x33 ; '3'
000000000000159d         db  0x00 ; '.'
000000000000159e         db  0x00 ; '.'
000000000000159f         db  0x00 ; '.'
00000000000015a0         db  0x00 ; '.'
00000000000015a1         db  0x00 ; '.'
00000000000015a2         db  0x00 ; '.'
00000000000015a3         db  0x00 ; '.'
00000000000015a4         db  0x00 ; '.'
00000000000015a5         db  0x00 ; '.'
00000000000015a6         db  0x00 ; '.'
00000000000015a7         db  0x00 ; '.'
00000000000015a8         db  0x60 ; '`'
00000000000015a9         db  0xbf ; '.'
00000000000015aa         db  0x20 ; ' '
00000000000015ab         db  0x00 ; '.'
00000000000015ac         db  0x00 ; '.'
00000000000015ad         db  0x00 ; '.'
00000000000015ae         db  0x00 ; '.'
00000000000015af         db  0x00 ; '.'
00000000000015b0         db  0x07 ; '.'
00000000000015b1         db  0x00 ; '.'
00000000000015b2         db  0x00 ; '.'
00000000000015b3         db  0x00 ; '.'
00000000000015b4         db  0x34 ; '4'
00000000000015b5         db  0x00 ; '.'
00000000000015b6         db  0x00 ; '.'
00000000000015b7         db  0x00 ; '.'
00000000000015b8         db  0x00 ; '.'
00000000000015b9         db  0x00 ; '.'
00000000000015ba         db  0x00 ; '.'
00000000000015bb         db  0x00 ; '.'
00000000000015bc         db  0x00 ; '.'
00000000000015bd         db  0x00 ; '.'
00000000000015be         db  0x00 ; '.'
00000000000015bf         db  0x00 ; '.'
00000000000015c0         db  0x68 ; 'h'
00000000000015c1         db  0xbf ; '.'
00000000000015c2         db  0x20 ; ' '
00000000000015c3         db  0x00 ; '.'
00000000000015c4         db  0x00 ; '.'
00000000000015c5         db  0x00 ; '.'
00000000000015c6         db  0x00 ; '.'
00000000000015c7         db  0x00 ; '.'
00000000000015c8         db  0x07 ; '.'
00000000000015c9         db  0x00 ; '.'
00000000000015ca         db  0x00 ; '.'
00000000000015cb         db  0x00 ; '.'
00000000000015cc         db  0x35 ; '5'
00000000000015cd         db  0x00 ; '.'
00000000000015ce         db  0x00 ; '.'
00000000000015cf         db  0x00 ; '.'
00000000000015d0         db  0x00 ; '.'
00000000000015d1         db  0x00 ; '.'
00000000000015d2         db  0x00 ; '.'
00000000000015d3         db  0x00 ; '.'
00000000000015d4         db  0x00 ; '.'
00000000000015d5         db  0x00 ; '.'
00000000000015d6         db  0x00 ; '.'
00000000000015d7         db  0x00 ; '.'
00000000000015d8         db  0x70 ; 'p'
00000000000015d9         db  0xbf ; '.'
00000000000015da         db  0x20 ; ' '
00000000000015db         db  0x00 ; '.'
00000000000015dc         db  0x00 ; '.'
00000000000015dd         db  0x00 ; '.'
00000000000015de         db  0x00 ; '.'
00000000000015df         db  0x00 ; '.'
00000000000015e0         db  0x07 ; '.'
00000000000015e1         db  0x00 ; '.'
00000000000015e2         db  0x00 ; '.'
00000000000015e3         db  0x00 ; '.'
00000000000015e4         db  0x36 ; '6'
00000000000015e5         db  0x00 ; '.'
00000000000015e6         db  0x00 ; '.'
00000000000015e7         db  0x00 ; '.'
00000000000015e8         db  0x00 ; '.'
00000000000015e9         db  0x00 ; '.'
00000000000015ea         db  0x00 ; '.'
00000000000015eb         db  0x00 ; '.'
00000000000015ec         db  0x00 ; '.'
00000000000015ed         db  0x00 ; '.'
00000000000015ee         db  0x00 ; '.'
00000000000015ef         db  0x00 ; '.'
00000000000015f0         db  0x78 ; 'x'
00000000000015f1         db  0xbf ; '.'
00000000000015f2         db  0x20 ; ' '
00000000000015f3         db  0x00 ; '.'
00000000000015f4         db  0x00 ; '.'
00000000000015f5         db  0x00 ; '.'
00000000000015f6         db  0x00 ; '.'
00000000000015f7         db  0x00 ; '.'
00000000000015f8         db  0x07 ; '.'
00000000000015f9         db  0x00 ; '.'
00000000000015fa         db  0x00 ; '.'
00000000000015fb         db  0x00 ; '.'
00000000000015fc         db  0x37 ; '7'
00000000000015fd         db  0x00 ; '.'
00000000000015fe         db  0x00 ; '.'
00000000000015ff         db  0x00 ; '.'
0000000000001600         db  0x00 ; '.'
0000000000001601         db  0x00 ; '.'
0000000000001602         db  0x00 ; '.'
0000000000001603         db  0x00 ; '.'
0000000000001604         db  0x00 ; '.'
0000000000001605         db  0x00 ; '.'
0000000000001606         db  0x00 ; '.'
0000000000001607         db  0x00 ; '.'
0000000000001608         db  0x80 ; '.'
0000000000001609         db  0xbf ; '.'
000000000000160a         db  0x20 ; ' '
000000000000160b         db  0x00 ; '.'
000000000000160c         db  0x00 ; '.'
000000000000160d         db  0x00 ; '.'
000000000000160e         db  0x00 ; '.'
000000000000160f         db  0x00 ; '.'
0000000000001610         db  0x07 ; '.'
0000000000001611         db  0x00 ; '.'
0000000000001612         db  0x00 ; '.'
0000000000001613         db  0x00 ; '.'
0000000000001614         db  0x38 ; '8'
0000000000001615         db  0x00 ; '.'
0000000000001616         db  0x00 ; '.'
0000000000001617         db  0x00 ; '.'
0000000000001618         db  0x00 ; '.'
0000000000001619         db  0x00 ; '.'
000000000000161a         db  0x00 ; '.'
000000000000161b         db  0x00 ; '.'
000000000000161c         db  0x00 ; '.'
000000000000161d         db  0x00 ; '.'
000000000000161e         db  0x00 ; '.'
000000000000161f         db  0x00 ; '.'
0000000000001620         db  0x88 ; '.'
0000000000001621         db  0xbf ; '.'
0000000000001622         db  0x20 ; ' '
0000000000001623         db  0x00 ; '.'
0000000000001624         db  0x00 ; '.'
0000000000001625         db  0x00 ; '.'
0000000000001626         db  0x00 ; '.'
0000000000001627         db  0x00 ; '.'
0000000000001628         db  0x07 ; '.'
0000000000001629         db  0x00 ; '.'
000000000000162a         db  0x00 ; '.'
000000000000162b         db  0x00 ; '.'
000000000000162c         db  0x39 ; '9'
000000000000162d         db  0x00 ; '.'
000000000000162e         db  0x00 ; '.'
000000000000162f         db  0x00 ; '.'
0000000000001630         db  0x00 ; '.'
0000000000001631         db  0x00 ; '.'
0000000000001632         db  0x00 ; '.'
0000000000001633         db  0x00 ; '.'
0000000000001634         db  0x00 ; '.'
0000000000001635         db  0x00 ; '.'
0000000000001636         db  0x00 ; '.'
0000000000001637         db  0x00 ; '.'
0000000000001638         db  0x90 ; '.'
0000000000001639         db  0xbf ; '.'
000000000000163a         db  0x20 ; ' '
000000000000163b         db  0x00 ; '.'
000000000000163c         db  0x00 ; '.'
000000000000163d         db  0x00 ; '.'
000000000000163e         db  0x00 ; '.'
000000000000163f         db  0x00 ; '.'
0000000000001640         db  0x07 ; '.'
0000000000001641         db  0x00 ; '.'
0000000000001642         db  0x00 ; '.'
0000000000001643         db  0x00 ; '.'
0000000000001644         db  0x3a ; ':'
0000000000001645         db  0x00 ; '.'
0000000000001646         db  0x00 ; '.'
0000000000001647         db  0x00 ; '.'
0000000000001648         db  0x00 ; '.'
0000000000001649         db  0x00 ; '.'
000000000000164a         db  0x00 ; '.'
000000000000164b         db  0x00 ; '.'
000000000000164c         db  0x00 ; '.'
000000000000164d         db  0x00 ; '.'
000000000000164e         db  0x00 ; '.'
000000000000164f         db  0x00 ; '.'
0000000000001650         db  0x98 ; '.'
0000000000001651         db  0xbf ; '.'
0000000000001652         db  0x20 ; ' '
0000000000001653         db  0x00 ; '.'
0000000000001654         db  0x00 ; '.'
0000000000001655         db  0x00 ; '.'
0000000000001656         db  0x00 ; '.'
0000000000001657         db  0x00 ; '.'
0000000000001658         db  0x07 ; '.'
0000000000001659         db  0x00 ; '.'
000000000000165a         db  0x00 ; '.'
000000000000165b         db  0x00 ; '.'
000000000000165c         db  0x3b ; ';'
000000000000165d         db  0x00 ; '.'
000000000000165e         db  0x00 ; '.'
000000000000165f         db  0x00 ; '.'
0000000000001660         db  0x00 ; '.'
0000000000001661         db  0x00 ; '.'
0000000000001662         db  0x00 ; '.'
0000000000001663         db  0x00 ; '.'
0000000000001664         db  0x00 ; '.'
0000000000001665         db  0x00 ; '.'
0000000000001666         db  0x00 ; '.'
0000000000001667         db  0x00 ; '.'
0000000000001668         db  0xa0 ; '.'
0000000000001669         db  0xbf ; '.'
000000000000166a         db  0x20 ; ' '
000000000000166b         db  0x00 ; '.'
000000000000166c         db  0x00 ; '.'
000000000000166d         db  0x00 ; '.'
000000000000166e         db  0x00 ; '.'
000000000000166f         db  0x00 ; '.'
0000000000001670         db  0x07 ; '.'
0000000000001671         db  0x00 ; '.'
0000000000001672         db  0x00 ; '.'
0000000000001673         db  0x00 ; '.'
0000000000001674         db  0x3c ; '<'
0000000000001675         db  0x00 ; '.'
0000000000001676         db  0x00 ; '.'
0000000000001677         db  0x00 ; '.'
0000000000001678         db  0x00 ; '.'
0000000000001679         db  0x00 ; '.'
000000000000167a         db  0x00 ; '.'
000000000000167b         db  0x00 ; '.'
000000000000167c         db  0x00 ; '.'
000000000000167d         db  0x00 ; '.'
000000000000167e         db  0x00 ; '.'
000000000000167f         db  0x00 ; '.'
0000000000001680         db  0xa8 ; '.'
0000000000001681         db  0xbf ; '.'
0000000000001682         db  0x20 ; ' '
0000000000001683         db  0x00 ; '.'
0000000000001684         db  0x00 ; '.'
0000000000001685         db  0x00 ; '.'
0000000000001686         db  0x00 ; '.'
0000000000001687         db  0x00 ; '.'
0000000000001688         db  0x07 ; '.'
0000000000001689         db  0x00 ; '.'
000000000000168a         db  0x00 ; '.'
000000000000168b         db  0x00 ; '.'
000000000000168c         db  0x3e ; '>'
000000000000168d         db  0x00 ; '.'
000000000000168e         db  0x00 ; '.'
000000000000168f         db  0x00 ; '.'
0000000000001690         db  0x00 ; '.'
0000000000001691         db  0x00 ; '.'
0000000000001692         db  0x00 ; '.'
0000000000001693         db  0x00 ; '.'
0000000000001694         db  0x00 ; '.'
0000000000001695         db  0x00 ; '.'
0000000000001696         db  0x00 ; '.'
0000000000001697         db  0x00 ; '.'
0000000000001698         db  0xb0 ; '.'
0000000000001699         db  0xbf ; '.'
000000000000169a         db  0x20 ; ' '
000000000000169b         db  0x00 ; '.'
000000000000169c         db  0x00 ; '.'
000000000000169d         db  0x00 ; '.'
000000000000169e         db  0x00 ; '.'
000000000000169f         db  0x00 ; '.'
00000000000016a0         db  0x07 ; '.'
00000000000016a1         db  0x00 ; '.'
00000000000016a2         db  0x00 ; '.'
00000000000016a3         db  0x00 ; '.'
00000000000016a4         db  0x3f ; '?'
00000000000016a5         db  0x00 ; '.'
00000000000016a6         db  0x00 ; '.'
00000000000016a7         db  0x00 ; '.'
00000000000016a8         db  0x00 ; '.'
00000000000016a9         db  0x00 ; '.'
00000000000016aa         db  0x00 ; '.'
00000000000016ab         db  0x00 ; '.'
00000000000016ac         db  0x00 ; '.'
00000000000016ad         db  0x00 ; '.'
00000000000016ae         db  0x00 ; '.'
00000000000016af         db  0x00 ; '.'
00000000000016b0         db  0xb8 ; '.'
00000000000016b1         db  0xbf ; '.'
00000000000016b2         db  0x20 ; ' '
00000000000016b3         db  0x00 ; '.'
00000000000016b4         db  0x00 ; '.'
00000000000016b5         db  0x00 ; '.'
00000000000016b6         db  0x00 ; '.'
00000000000016b7         db  0x00 ; '.'
00000000000016b8         db  0x07 ; '.'
00000000000016b9         db  0x00 ; '.'
00000000000016ba         db  0x00 ; '.'
00000000000016bb         db  0x00 ; '.'
00000000000016bc         db  0x41 ; 'A'
00000000000016bd         db  0x00 ; '.'
00000000000016be         db  0x00 ; '.'
00000000000016bf         db  0x00 ; '.'
00000000000016c0         db  0x00 ; '.'
00000000000016c1         db  0x00 ; '.'
00000000000016c2         db  0x00 ; '.'
00000000000016c3         db  0x00 ; '.'
00000000000016c4         db  0x00 ; '.'
00000000000016c5         db  0x00 ; '.'
00000000000016c6         db  0x00 ; '.'
00000000000016c7         db  0x00 ; '.'
00000000000016c8         db  0xc0 ; '.'
00000000000016c9         db  0xbf ; '.'
00000000000016ca         db  0x20 ; ' '
00000000000016cb         db  0x00 ; '.'
00000000000016cc         db  0x00 ; '.'
00000000000016cd         db  0x00 ; '.'
00000000000016ce         db  0x00 ; '.'
00000000000016cf         db  0x00 ; '.'
00000000000016d0         db  0x07 ; '.'
00000000000016d1         db  0x00 ; '.'
00000000000016d2         db  0x00 ; '.'
00000000000016d3         db  0x00 ; '.'
00000000000016d4         db  0x42 ; 'B'
00000000000016d5         db  0x00 ; '.'
00000000000016d6         db  0x00 ; '.'
00000000000016d7         db  0x00 ; '.'
00000000000016d8         db  0x00 ; '.'
00000000000016d9         db  0x00 ; '.'
00000000000016da         db  0x00 ; '.'
00000000000016db         db  0x00 ; '.'
00000000000016dc         db  0x00 ; '.'
00000000000016dd         db  0x00 ; '.'
00000000000016de         db  0x00 ; '.'
00000000000016df         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x16e0; 0x16f7[ (23 bytes)
        ; File offset : [5856; 5879[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
00000000000016e0         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
00000000000016e4         mov        rax, qword [qword_20bfd8]                   ; qword_20bfd8
00000000000016eb         test       rax, rax
00000000000016ee         je         loc_16f2

00000000000016f0         call       rax

                     loc_16f2:
00000000000016f2         add        rsp, 0x8                                    ; CODE XREF=_init+14
00000000000016f6         ret
                        ; endp
00000000000016f7         db  0x00 ; '.'
00000000000016f8         db  0x00 ; '.'
00000000000016f9         db  0x00 ; '.'
00000000000016fa         db  0x00 ; '.'
00000000000016fb         db  0x00 ; '.'
00000000000016fc         db  0x00 ; '.'
00000000000016fd         db  0x00 ; '.'
00000000000016fe         db  0x00 ; '.'
00000000000016ff         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x1700; 0x1ae0[ (992 bytes)
        ; File offset : [5888; 6880[ (992 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_1700:
0000000000001700         push       qword [qword_20bdd0]                        ; Begin of unwind block (FDE at 0x9cc4), qword_20bdd0, CODE XREF=sub_1716+5
0000000000001706         jmp        qword [qword_20bdd0+8]                      ; 0x20bdd8
                        ; endp
000000000000170c         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___snprintf_chk:        // __snprintf_chk
0000000000001710         jmp        qword [__snprintf_chk@GOT]                  ; __snprintf_chk, __snprintf_chk@GOT, CODE XREF=vasnprintf+1464, vasnprintf+1776, vasnprintf+2093, vasnprintf+2222, vasnprintf+2417, vasnprintf+3225
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1716:
0000000000001716         push       0x0
000000000000171b         jmp        loc_1700


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_raise:        // raise
0000000000001720         jmp        qword [raise@GOT]                           ; raise, raise@GOT, CODE XREF=savewd_restore+188
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1726:
0000000000001726         push       0x1
000000000000172b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
0000000000001730         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=main+600, mode_compile+182, quotearg_n_options+277, quotearg_free+55, quotearg_free+82, quotearg_free+120, xrealloc+40, rpl_vfprintf+120, rpl_vfprintf+200, vasnprintf+402, vasnprintf+430
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1736:
0000000000001736         push       0x2
000000000000173b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
0000000000001740         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=set_program_name+154, sub_3870+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48, vasnprintf+3878
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1746:
0000000000001746         push       0x3
000000000000174b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
0000000000001750         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=process_dir+78, process_dir+119, make_ancestor+23, make_ancestor+128, close_stdout+22, make_dir_parents+228, make_dir_parents+758, make_dir_parents+858, make_dir_parents+936, quotearg_n_options+28, clone_quoting_options+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1756:
0000000000001756         push       0x4
000000000000175b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
0000000000001760         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+628, usage+821
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1766:
0000000000001766         push       0x5
000000000000176b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
0000000000001770         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136, savewd_restore+334
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1776:
0000000000001776         push       0x6
000000000000177b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
0000000000001780         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1786:
0000000000001786         push       0x7
000000000000178b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mkdir:        // mkdir
0000000000001790         jmp        qword [mkdir@GOT]                           ; mkdir, mkdir@GOT, CODE XREF=make_ancestor+51, make_ancestor+121, make_dir_parents+208, make_dir_parents+528
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1796:
0000000000001796         push       0x8
000000000000179b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fcntl:        // fcntl
00000000000017a0         jmp        qword [fcntl@GOT]                           ; fcntl, fcntl@GOT, CODE XREF=rpl_fcntl+128, rpl_fcntl+212, rpl_fcntl+320, rpl_fcntl+407, rpl_fcntl+423, rpl_fcntl+460, rpl_fcntl+483, rpl_fcntl+559, rpl_fcntl+606
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17a6:
00000000000017a6         push       0x9
00000000000017ab         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
00000000000017b0         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+125
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17b6:
00000000000017b6         push       0xa
00000000000017bb         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___open_2:        // __open_2
00000000000017c0         jmp        qword [__open_2@GOT]                        ; __open_2, __open_2@GOT, CODE XREF=savewd_chdir+49, savewd_chdir+346
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17c6:
00000000000017c6         push       0xb
00000000000017cb         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
00000000000017d0         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17d6:
00000000000017d6         push       0xc
00000000000017db         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
00000000000017e0         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+113
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17e6:
00000000000017e6         push       0xd
00000000000017eb         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
00000000000017f0         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+332, main+374, main+653, main+697, usage+56, usage+102, usage+146, usage+183, usage+220, usage+257, usage+294
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17f6:
00000000000017f6         push       0xe
00000000000017fb         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
0000000000001800         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1806:
0000000000001806         push       0xf
000000000000180b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
0000000000001810         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=quotearg_buffer_restyled+343, sub_3870+411, sub_3870+1742, xstrdup+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1816:
0000000000001816         push       0x10
000000000000181b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_chdir:        // chdir
0000000000001820         jmp        qword [chdir@GOT]                           ; chdir, chdir@GOT, CODE XREF=savewd_chdir+283
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1826:
0000000000001826         push       0x11
000000000000182b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
0000000000001830         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=main+678, prog_fprintf+271, make_dir_parents+949, mode_create_from_ref+132, sub_3870+2739, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137, quotearg_n_custom_mem+140, savewd_restore+296
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1836:
0000000000001836         push       0x12
000000000000183b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
0000000000001840         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+164
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1846:
0000000000001846         push       0x13
000000000000184b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
0000000000001850         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1856:
0000000000001856         push       0x14
000000000000185b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___overflow:        // __overflow
0000000000001860         jmp        qword [__overflow@GOT]                      ; __overflow, __overflow@GOT, CODE XREF=prog_fprintf+264
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1866:
0000000000001866         push       0x15
000000000000186b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
0000000000001870         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1876:
0000000000001876         push       0x16
000000000000187b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
0000000000001880         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1886:
0000000000001886         push       0x17
000000000000188b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___assert_fail:        // __assert_fail
0000000000001890         jmp        qword [__assert_fail@GOT]                   ; __assert_fail, __assert_fail@GOT, CODE XREF=savewd_chdir+471, savewd_chdir+645, savewd_chdir+676, savewd_restore+291, savewd_restore+327, savewd_finish+81, savewd_finish+112
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1896:
0000000000001896         push       0x18
000000000000189b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
00000000000018a0         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18a6:
00000000000018a6         push       0x19
00000000000018ab         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_close:        // close
00000000000018b0         jmp        qword [close@GOT]                           ; close, close@GOT, CODE XREF=savewd_chdir+109, savewd_restore+245, savewd_finish+35, dirchownmod+219, dirchownmod+466, fd_safer+38, rpl_fcntl+510
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18b6:
00000000000018b6         push       0x1a
00000000000018bb         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
00000000000018c0         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=quotearg_buffer_restyled+410
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18c6:
00000000000018c6         push       0x1b
00000000000018cb         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
00000000000018d0         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+157, usage+194, usage+231, usage+268, usage+305, usage+349, usage+936, prog_fprintf+120, version_etc_arn+135, emit_bug_reporting_address+123
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18d6:
00000000000018d6         push       0x1c
00000000000018db         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
00000000000018e0         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18e6:
00000000000018e6         push       0x1d
00000000000018eb         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_umask:        // umask
00000000000018f0         jmp        qword [umask@GOT]                           ; umask, umask@GOT, CODE XREF=main+422, main+432, main+528, main+538, make_ancestor+108, make_ancestor+142
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18f6:
00000000000018f6         push       0x1e
00000000000018fb         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
0000000000001900         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=xmemdup+35, vasnprintf+686, vasnprintf+912, vasnprintf+973, vasnprintf+2590, vasnprintf+3085, vasnprintf+3403, vasnprintf+3547, vasnprintf+4227, printf_parse+2492, printf_parse+2595
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1906:
0000000000001906         push       0x1f
000000000000190b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
0000000000001910         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1916:
0000000000001916         push       0x20
000000000000191b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___xstat:        // __xstat
0000000000001920         jmp        qword [__xstat@GOT]                         ; __xstat, __xstat@GOT, CODE XREF=make_dir_parents+293, mode_create_from_ref+38, dirchownmod+277
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1926:
0000000000001926         push       0x21
000000000000192b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
0000000000001930         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=xmalloc+4, vasnprintf+210, vasnprintf+2547, vasnprintf+3007, vasnprintf+3353, vasnprintf+3497, vasnprintf+4191, printf_parse+2420, printf_parse+2528, printf_parse+2852, printf_parse+3169
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1936:
0000000000001936         push       0x22
000000000000193b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
0000000000001940         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1946:
0000000000001946         push       0x23
000000000000194b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
0000000000001950         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1956:
0000000000001956         push       0x24
000000000000195b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fxstat:        // __fxstat
0000000000001960         jmp        qword [__fxstat@GOT]                        ; __fxstat, __fxstat@GOT, CODE XREF=dirchownmod+75
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1966:
0000000000001966         push       0x25
000000000000196b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lchown:        // lchown
0000000000001970         jmp        qword [lchown@GOT]                          ; lchown, lchown@GOT, CODE XREF=dirchownmod+165
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1976:
0000000000001976         push       0x26
000000000000197b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
0000000000001980         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1986:
0000000000001986         push       0x27
000000000000198b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fchdir:        // fchdir
0000000000001990         jmp        qword [fchdir@GOT]                          ; fchdir, fchdir@GOT, CODE XREF=savewd_chdir+234, savewd_restore+211
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1996:
0000000000001996         push       0x28
000000000000199b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite_unlocked:        // fwrite_unlocked
00000000000019a0         jmp        qword [fwrite_unlocked@GOT]                 ; fwrite_unlocked, fwrite_unlocked@GOT, CODE XREF=prog_fprintf+145
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19a6:
00000000000019a6         push       0x29
00000000000019ab         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_chown:        // chown
00000000000019b0         jmp        qword [chown@GOT]                           ; chown, chown@GOT, CODE XREF=dirchownmod+480
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19b6:
00000000000019b6         push       0x2a
00000000000019bb         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
00000000000019c0         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17, vasnprintf+645, vasnprintf+1242, vasnprintf+1660, vasnprintf+2887, vasnprintf+4043, vasnprintf+4085, printf_parse+805, printf_parse+1041, printf_parse+2266, printf_parse+2729
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19c6:
00000000000019c6         push       0x2b
00000000000019cb         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
00000000000019d0         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+94, usage+603, usage+796, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19d6:
00000000000019d6         push       0x2c
00000000000019db         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
00000000000019e0         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=usage+120, usage+591, usage+684, usage+745, usage+784, usage+887, emit_bug_reporting_address+37, emit_bug_reporting_address+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19e6:
00000000000019e6         push       0x2d
00000000000019eb         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fchmod:        // fchmod
00000000000019f0         jmp        qword [fchmod@GOT]                          ; fchmod, fchmod@GOT, CODE XREF=dirchownmod+498
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19f6:
00000000000019f6         push       0x2e
00000000000019fb         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_chmod:        // chmod
0000000000001a00         jmp        qword [chmod@GOT]                           ; chmod, chmod@GOT, CODE XREF=dirchownmod+398
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a06:
0000000000001a06         push       0x2f
0000000000001a0b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
0000000000001a10         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+346, main+673, main+711, close_stdout+125, close_stdout+157, make_dir_parents+370, make_dir_parents+456, make_dir_parents+838, xalloc_die+43
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a16:
0000000000001a16         push       0x30
0000000000001a1b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_waitpid:        // waitpid
0000000000001a20         jmp        qword [waitpid@GOT]                         ; waitpid, waitpid@GOT, CODE XREF=savewd_restore+161
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a26:
0000000000001a26         push       0x31
0000000000001a2b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_open:        // open
0000000000001a30         jmp        qword [open@GOT]                            ; open, open@GOT, CODE XREF=open_safer+35
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a36:
0000000000001a36         push       0x32
0000000000001a3b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
0000000000001a40         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a46:
0000000000001a46         push       0x33
0000000000001a4b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fchown:        // fchown
0000000000001a50         jmp        qword [fchown@GOT]                          ; fchown, fchown@GOT, CODE XREF=dirchownmod+418
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a56:
0000000000001a56         push       0x34
0000000000001a5b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000001a60         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a66:
0000000000001a66         push       0x35
0000000000001a6b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000001a70         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+298, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a76:
0000000000001a76         push       0x36
0000000000001a7b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
0000000000001a80         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149, rpl_vfprintf+102
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a86:
0000000000001a86         push       0x37
0000000000001a8b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
0000000000001a90         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642, version_etc_arn+718, version_etc_arn+872
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a96:
0000000000001a96         push       0x38
0000000000001a9b         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
0000000000001aa0         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_3870+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1aa6:
0000000000001aa6         push       0x39
0000000000001aab         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
0000000000001ab0         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_3870+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ab6:
0000000000001ab6         push       0x3a
0000000000001abb         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fork:        // fork
0000000000001ac0         jmp        qword [fork@GOT]                            ; fork, fork@GOT, CODE XREF=savewd_chdir+537
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ac6:
0000000000001ac6         push       0x3b
0000000000001acb         jmp        0x1700
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
0000000000001ad0         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=sub_3610+51
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ad6:
0000000000001ad6         push       0x3c
0000000000001adb         jmp        0x1700
                        ; endp


        ; Section .plt.got
        ; Range: [0x1ae0; 0x1ae8[ (8 bytes)
        ; File offset : [6880; 6888[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_20bfe8:        // qword_20bfe8
0000000000001ae0         jmp        qword [qword_20bfe8]                        ; qword, End of unwind block (FDE at 0x9cc4), Begin of unwind block (FDE at 0x9cec), qword_20bfe8, CODE XREF=__do_global_dtors_aux+30
                        ; endp
0000000000001ae6         align      8
0000000000001ae8         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x9cec)
0000000000001ae9         db  0x00 ; '.'
0000000000001aea         db  0x00 ; '.'
0000000000001aeb         db  0x00 ; '.'
0000000000001aec         db  0x00 ; '.'
0000000000001aed         db  0x00 ; '.'
0000000000001aee         db  0x00 ; '.'
0000000000001aef         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x1af0; 0x871e[ (27694 bytes)
        ; File offset : [6896; 34590[ (27694 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_44: int8_t, -68
        ;    var_4C: int64_t, -76
        ;    var_50: int32_t, -80
        ;    var_58: int64_t, -88


                     main:
0000000000001af0         push       r14                                         ; Begin of unwind block (FDE at 0x9ddc), DATA XREF=_start+29
0000000000001af2         push       r13
0000000000001af4         lea        r13, qword [make_ancestor]                  ; make_ancestor
0000000000001afb         push       r12
0000000000001afd         push       rbp
0000000000001afe         mov        ebp, edi
0000000000001b00         push       rbx
0000000000001b01         mov        rbx, rsi
0000000000001b04         xor        r12d, r12d
0000000000001b07         sub        rsp, 0x30
0000000000001b0b         mov        rdi, qword [rsi]
0000000000001b0e         mov        rax, qword [fs:0x28]
0000000000001b17         mov        qword [rsp+0x58+var_30], rax
0000000000001b1c         xor        eax, eax
0000000000001b1e         mov        qword [rsp+0x58+var_58], 0x0
0000000000001b26         mov        qword [rsp+0x58+var_4C], 0x1ff
0000000000001b2f         mov        qword [rsp+0x58+var_40], 0x0
0000000000001b38         mov        byte [rsp+0x58+var_44], 0x0
0000000000001b3d         call       set_program_name                            ; set_program_name
0000000000001b42         lea        rsi, qword [aWrittenBySSAnd+27]             ; argument "__locale" for method j_setlocale, 0x9406
0000000000001b49         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
0000000000001b4e         call       j_setlocale                                 ; setlocale
0000000000001b53         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
0000000000001b5a         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
0000000000001b61         call       j_bindtextdomain                            ; bindtextdomain
0000000000001b66         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
0000000000001b6d         call       j_textdomain                                ; textdomain
0000000000001b72         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
0000000000001b79         call       atexit                                      ; atexit

                     loc_1b7e:
0000000000001b7e         lea        rcx, qword [longopts]                       ; argument "__longopts" for method j_getopt_long, longopts, CODE XREF=main+231, main+312, main+351, main+384, main+396
0000000000001b85         lea        rdx, qword [aPmvz]                          ; argument "__shortopts" for method j_getopt_long, "pm:vZ"
0000000000001b8c         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
0000000000001b8f         mov        rsi, rbx                                    ; argument "___argv" for method j_getopt_long
0000000000001b92         mov        edi, ebp                                    ; argument "___argc" for method j_getopt_long
0000000000001b94         call       j_getopt_long                               ; getopt_long
0000000000001b99         cmp        eax, 0xffffffff
0000000000001b9c         je         loc_1c81

0000000000001ba2         cmp        eax, 0x5a
0000000000001ba5         je         loc_1c20

0000000000001ba7         jle        loc_1be0

0000000000001ba9         cmp        eax, 0x70
0000000000001bac         je         loc_1c78

0000000000001bb2         cmp        eax, 0x76
0000000000001bb5         je         loc_1c58

0000000000001bbb         cmp        eax, 0x6d
0000000000001bbe         je         loc_1bd0

                     loc_1bc0:
0000000000001bc0         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=main+615, main+716
0000000000001bc5         call       usage                                       ; usage
0000000000001bca         nop        word [rax+rax]

                     loc_1bd0:
0000000000001bd0         mov        r12, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+206
0000000000001bd7         jmp        loc_1b7e
0000000000001bd9         align      32

                     loc_1be0:
0000000000001be0         cmp        eax, 0xffffff7d                             ; CODE XREF=main+183
0000000000001be5         jne        loc_1d52

0000000000001beb         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001bf2         mov        rcx, qword [Version]                        ; Version
0000000000001bf9         lea        r8, qword [aDavidMackenzie]                 ; "David MacKenzie"
0000000000001c00         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x87c0
0000000000001c07         lea        rsi, qword [aMkdir]                         ; "mkdir"
0000000000001c0e         xor        r9d, r9d
0000000000001c11         xor        eax, eax
0000000000001c13         call       version_etc                                 ; version_etc
0000000000001c18         xor        edi, edi                                    ; argument "__status" for method j_exit
0000000000001c1a         call       j_exit                                      ; exit
                        ; endp
0000000000001c1f         align      32

                     loc_1c20:
0000000000001c20         cmp        qword [optarg@@GLIBC_2.2.5], 0x0            ; optarg@@GLIBC_2.2.5, CODE XREF=main+181
0000000000001c28         je         loc_1b7e

0000000000001c2e         lea        rsi, qword [aWarningIgnorin]                ; argument "msgid" for method j_dcgettext, "warning: ignoring --context; it requires an SELinux/SMACK-enabled kernel"
0000000000001c35         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001c37         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001c3c         call       j_dcgettext                                 ; dcgettext
0000000000001c41         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001c43         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001c46         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001c48         xor        eax, eax
0000000000001c4a         call       j_error                                     ; error
0000000000001c4f         jmp        loc_1b7e
0000000000001c54         align      8

                     loc_1c58:
0000000000001c58         lea        rsi, qword [aCreatedDirecto]                ; argument "msgid" for method j_dcgettext, "created directory %s", CODE XREF=main+197
0000000000001c5f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001c64         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001c66         call       j_dcgettext                                 ; dcgettext
0000000000001c6b         mov        qword [rsp+0x58+var_40], rax
0000000000001c70         jmp        loc_1b7e
0000000000001c75         align      8

                     loc_1c78:
0000000000001c78         mov        qword [rsp+0x58+var_58], r13                ; CODE XREF=main+188
0000000000001c7c         jmp        loc_1b7e

                     loc_1c81:
0000000000001c81         cmp        dword [optind@@GLIBC_2.2.5], ebp            ; optind@@GLIBC_2.2.5, CODE XREF=main+172
0000000000001c87         je         loc_1d9b

0000000000001c8d         cmp        qword [rsp+0x58+var_58], 0x0
0000000000001c92         je         loc_1cf9

0000000000001c94         xor        edi, edi                                    ; argument "__mask" for method j_umask
0000000000001c96         call       j_umask                                     ; umask
0000000000001c9b         mov        edi, eax                                    ; argument "__mask" for method j_umask
0000000000001c9d         mov        r13d, eax
0000000000001ca0         call       j_umask                                     ; umask
0000000000001ca5         test       r12, r12
0000000000001ca8         mov        dword [rsp+0x58+var_50], r13d
0000000000001cad         jne        loc_1d14

0000000000001caf         mov        dword [rsp+0x58+var_4C], 0x1ff

                     loc_1cb7:
0000000000001cb7         mov        r12, rsp                                    ; CODE XREF=main+524

                     loc_1cba:
0000000000001cba         movsxd     rdx, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+605
0000000000001cc1         mov        edi, ebp
0000000000001cc3         mov        rcx, r12
0000000000001cc6         sub        edi, edx
0000000000001cc8         lea        rsi, qword [rbx+rdx*8]
0000000000001ccc         lea        rdx, qword [process_dir]                    ; process_dir
0000000000001cd3         call       savewd_process_files                        ; savewd_process_files
0000000000001cd8         mov        rcx, qword [rsp+0x58+var_30]
0000000000001cdd         xor        rcx, qword [fs:0x28]
0000000000001ce6         jne        loc_1d96

0000000000001cec         add        rsp, 0x30
0000000000001cf0         pop        rbx
0000000000001cf1         pop        rbp
0000000000001cf2         pop        r12
0000000000001cf4         pop        r13
0000000000001cf6         pop        r14
0000000000001cf8         ret
                        ; endp

                     loc_1cf9:
0000000000001cf9         test       r12, r12                                    ; CODE XREF=main+418
0000000000001cfc         je         loc_1cb7

0000000000001cfe         xor        edi, edi                                    ; argument "__mask" for method j_umask
0000000000001d00         call       j_umask                                     ; umask
0000000000001d05         mov        r13d, eax
0000000000001d08         mov        edi, eax                                    ; argument "__mask" for method j_umask
0000000000001d0a         call       j_umask                                     ; umask
0000000000001d0f         mov        dword [rsp+0x58+var_50], r13d

                     loc_1d14:
0000000000001d14         mov        rdi, r12                                    ; CODE XREF=main+445
0000000000001d17         call       mode_compile                                ; mode_compile
0000000000001d1c         test       rax, rax
0000000000001d1f         mov        r14, rax
0000000000001d22         je         loc_1d64

0000000000001d24         mov        r12, rsp
0000000000001d27         mov        rcx, rax
0000000000001d2a         mov        edx, r13d
0000000000001d2d         lea        r8, qword [r12+0x10]
0000000000001d32         mov        esi, 0x1
0000000000001d37         mov        edi, 0x1ff
0000000000001d3c         call       mode_adjust                                 ; mode_adjust
0000000000001d41         mov        rdi, r14                                    ; argument "__ptr" for method j_free
0000000000001d44         mov        dword [rsp+0x58+var_4C], eax
0000000000001d48         call       j_free                                      ; free
0000000000001d4d         jmp        loc_1cba

                     loc_1d52:
0000000000001d52         cmp        eax, 0xffffff7e                             ; CODE XREF=main+245
0000000000001d57         jne        loc_1bc0

0000000000001d5d         xor        edi, edi                                    ; argument #1 for method usage
0000000000001d5f         call       usage                                       ; usage

                     loc_1d64:
0000000000001d64         mov        rdi, r12                                    ; CODE XREF=main+562
0000000000001d67         call       quote                                       ; quote
0000000000001d6c         lea        rsi, qword [aInvalidModeS]                  ; argument "msgid" for method j_dcgettext, "invalid mode %s"
0000000000001d73         mov        rbx, rax
0000000000001d76         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001d7b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001d7d         call       j_dcgettext                                 ; dcgettext
0000000000001d82         mov        rcx, rbx
0000000000001d85         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001d88         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001d8a         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001d8f         xor        eax, eax
0000000000001d91         call       j_error                                     ; error

                     loc_1d96:
0000000000001d96         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=main+502
                        ; endp

                     loc_1d9b:
0000000000001d9b         lea        rsi, qword [aMissingOperand]                ; argument "msgid" for method j_dcgettext, "missing operand", CODE XREF=main+407
0000000000001da2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001da4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001da9         call       j_dcgettext                                 ; dcgettext
0000000000001dae         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001db0         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001db3         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001db5         xor        eax, eax
0000000000001db7         call       j_error                                     ; error
0000000000001dbc         jmp        loc_1bc0
0000000000001dc1         align      16                                          ; End of unwind block (FDE at 0x9ddc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
0000000000001dd0         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x9c94)
0000000000001dd2         mov        r9, rdx
0000000000001dd5         pop        rsi
0000000000001dd6         mov        rdx, rsp
0000000000001dd9         and        rsp, 0xfffffffffffffff0
0000000000001ddd         push       rax
0000000000001dde         push       rsp
0000000000001ddf         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
0000000000001de6         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
0000000000001ded         lea        rdi, qword [main]                           ; main
0000000000001df4         call       qword [qword_20bfc8+8]                      ; 0x20bfd0
0000000000001dfa         hlt
                        ; endp
0000000000001dfb         align      512                                         ; End of unwind block (FDE at 0x9c94)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000001e00         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
0000000000001e07         push       rbp
0000000000001e08         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000001e0f         cmp        rax, rdi
0000000000001e12         mov        rbp, rsp
0000000000001e15         je         loc_1e30

0000000000001e17         mov        rax, qword [qword_20bfc8]                   ; qword_20bfc8
0000000000001e1e         test       rax, rax
0000000000001e21         je         loc_1e30

0000000000001e23         pop        rbp
0000000000001e24         jmp        rax
                        ; endp
0000000000001e26         align      16

                     loc_1e30:
0000000000001e30         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
0000000000001e31         ret
                        ; endp
0000000000001e32         align      64

                     register_tm_clones:
0000000000001e40         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
0000000000001e47         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000001e4e         push       rbp
0000000000001e4f         sub        rsi, rdi
0000000000001e52         mov        rbp, rsp
0000000000001e55         sar        rsi, 0x3
0000000000001e59         mov        rax, rsi
0000000000001e5c         shr        rax, 0x3f
0000000000001e60         add        rsi, rax
0000000000001e63         sar        rsi, 0x1
0000000000001e66         je         loc_1e80

0000000000001e68         mov        rax, qword [qword_20bfe0]                   ; qword_20bfe0
0000000000001e6f         test       rax, rax
0000000000001e72         je         loc_1e80

0000000000001e74         pop        rbp
0000000000001e75         jmp        rax
                        ; endp
0000000000001e77         align      128

                     loc_1e80:
0000000000001e80         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000001e81         ret
                        ; endp
0000000000001e82         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
0000000000001e90         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
0000000000001e97         jne        loc_1ec8

0000000000001e99         cmp        qword [qword_20bfe8], 0x0                   ; qword_20bfe8
0000000000001ea1         push       rbp
0000000000001ea2         mov        rbp, rsp
0000000000001ea5         je         loc_1eb3

0000000000001ea7         mov        rdi, qword [__dso_handle]                   ; __dso_handle
0000000000001eae         call       j_qword_20bfe8                              ; qword_20bfe8

                     loc_1eb3:
0000000000001eb3         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
0000000000001eb8         mov        byte [completed.7697], 0x1                  ; completed.7697
0000000000001ebf         pop        rbp
0000000000001ec0         ret
                        ; endp
0000000000001ec1         align      8

                     loc_1ec8:
0000000000001ec8         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
0000000000001eca         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000001ed0         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000001ed1         mov        rbp, rsp
0000000000001ed4         pop        rbp
0000000000001ed5         jmp        register_tm_clones                          ; register_tm_clones
0000000000001eda         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_30: int64_t, -48


                     process_dir:
0000000000001ee0         push       rbp                                         ; Begin of unwind block (FDE at 0x9d04), DATA XREF=main+476
0000000000001ee1         push       rbx
0000000000001ee2         mov        rbx, rdx
0000000000001ee5         sub        rsp, 0x28
0000000000001ee9         cmp        byte [rbx+0x14], 0x0
0000000000001eed         mov        rdx, qword [rdx]
0000000000001ef0         je         loc_1ef7

0000000000001ef2         test       rdx, rdx
0000000000001ef5         je         loc_1f48

                     loc_1ef7:
0000000000001ef7         mov        eax, dword [rbx+0x10]                       ; CODE XREF=process_dir+16, process_dir+145
0000000000001efa         mov        r8d, dword [rbx+0xc]
0000000000001efe         lea        r9, qword [announce_mkdir]                  ; announce_mkdir
0000000000001f05         push       0x1
0000000000001f07         push       0xffffffffffffffff
0000000000001f09         mov        rcx, rbx
0000000000001f0c         push       0xffffffffffffffff
0000000000001f0e         push       rax
0000000000001f0f         call       make_dir_parents                            ; make_dir_parents
0000000000001f14         xor        eax, 0x1
0000000000001f17         add        rsp, 0x20
0000000000001f1b         test       al, al
0000000000001f1d         movzx      ebp, al
0000000000001f20         jne        loc_1f39

0000000000001f22         cmp        byte [rbx+0x14], 0x0
0000000000001f26         je         loc_1f39

0000000000001f28         cmp        qword [rbx], 0x0
0000000000001f2c         je         loc_1f39

0000000000001f2e         call       j___errno_location                          ; __errno_location
0000000000001f33         mov        dword [rax], 0x5f

                     loc_1f39:
0000000000001f39         add        rsp, 0x28                                   ; CODE XREF=process_dir+64, process_dir+70, process_dir+76
0000000000001f3d         mov        eax, ebp
0000000000001f3f         pop        rbx
0000000000001f40         pop        rbp
0000000000001f41         ret
                        ; endp
0000000000001f42         align      8

                     loc_1f48:
0000000000001f48         mov        qword [rsp+0x38+var_20], rsi                ; CODE XREF=process_dir+21
0000000000001f4d         mov        qword [rsp+0x38+var_28], rdi
0000000000001f52         mov        qword [rsp+0x38+var_30], rdx
0000000000001f57         call       j___errno_location                          ; __errno_location
0000000000001f5c         mov        rsi, qword [rsp+0x38+var_20]
0000000000001f61         mov        dword [rax], 0x5f
0000000000001f67         mov        rdi, qword [rsp+0x38+var_28]
0000000000001f6c         mov        rdx, qword [rsp+0x38+var_30]
0000000000001f71         jmp        loc_1ef7
0000000000001f73         align      128                                         ; End of unwind block (FDE at 0x9d04)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72
        ;    var_58: -88
        ;    var_68: -104
        ;    var_78: -120
        ;    var_88: -136
        ;    var_98: -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C8: int8_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_E0: int64_t, -224
        ;    var_E4: int32_t, -228
        ;    var_E8: int32_t, -232


                     announce_mkdir.part.4:
0000000000001f80         push       rbx                                         ; Begin of unwind block (FDE at 0x9d40), CODE XREF=announce_mkdir+7, make_ancestor+84
0000000000001f81         mov        rbx, rsi
0000000000001f84         mov        rsi, rdi
0000000000001f87         mov        edi, 0x4
0000000000001f8c         call       quotearg_style                              ; quotearg_style
0000000000001f91         mov        rsi, qword [rbx+0x18]
0000000000001f95         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001f9c         mov        rdx, rax
0000000000001f9f         pop        rbx
0000000000001fa0         xor        eax, eax
0000000000001fa2         jmp        prog_fprintf                                ; prog_fprintf
0000000000001fa7         align      16                                          ; End of unwind block (FDE at 0x9d40)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     announce_mkdir:
0000000000001fb0         cmp        qword [rsi+0x18], 0x0                       ; Begin of unwind block (FDE at 0x9d5c), DATA XREF=process_dir+30
0000000000001fb5         je         loc_1fc0

0000000000001fb7         jmp        announce_mkdir.part.4                       ; announce_mkdir.part.4
                        ; endp
0000000000001fb9         align      64

                     loc_1fc0:
0000000000001fc0         ret                                                    ; CODE XREF=announce_mkdir+5
                        ; endp
0000000000001fc2         align      16                                          ; End of unwind block (FDE at 0x9d5c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     make_ancestor:
0000000000001fd0         cmp        byte [rdx+0x14], 0x0                        ; Begin of unwind block (FDE at 0x9d70), DATA XREF=main+4
0000000000001fd4         push       r14
0000000000001fd6         push       r13
0000000000001fd8         push       r12
0000000000001fda         mov        r12, rdi
0000000000001fdd         push       rbp
0000000000001fde         mov        rbp, rdx
0000000000001fe1         push       rbx
0000000000001fe2         mov        rbx, rsi
0000000000001fe5         je         loc_1ff2

0000000000001fe7         call       j___errno_location                          ; __errno_location
0000000000001fec         mov        dword [rax], 0x5f

                     loc_1ff2:
0000000000001ff2         mov        edi, dword [rbp+8]                          ; CODE XREF=make_ancestor+21
0000000000001ff5         test       dil, 0xc0
0000000000001ff9         jne        loc_2038

0000000000001ffb         mov        rdi, rbx                                    ; argument "__path" for method j_mkdir
0000000000001ffe         mov        esi, 0x1ff                                  ; argument "__mode" for method j_mkdir
0000000000002003         call       j_mkdir                                     ; mkdir
0000000000002008         mov        ebx, eax

                     loc_200a:
000000000000200a         test       ebx, ebx                                    ; CODE XREF=make_ancestor+151
000000000000200c         jne        loc_2029

000000000000200e         mov        ebx, dword [rbp+8]
0000000000002011         shr        ebx, 0x8
0000000000002014         and        ebx, 0x1
0000000000002017         cmp        qword [rbp+0x18], 0x0
000000000000201c         je         loc_2029

000000000000201e         mov        rsi, rbp
0000000000002021         mov        rdi, r12
0000000000002024         call       announce_mkdir.part.4                       ; announce_mkdir.part.4

                     loc_2029:
0000000000002029         mov        eax, ebx                                    ; CODE XREF=make_ancestor+60, make_ancestor+76
000000000000202b         pop        rbx
000000000000202c         pop        rbp
000000000000202d         pop        r12
000000000000202f         pop        r13
0000000000002031         pop        r14
0000000000002033         ret
                        ; endp
0000000000002034         align      8

                     loc_2038:
0000000000002038         and        dil, 0x3f                                   ; argument "__mask" for method j_umask, CODE XREF=make_ancestor+41
000000000000203c         call       j_umask                                     ; umask
0000000000002041         mov        rdi, rbx                                    ; argument "__path" for method j_mkdir
0000000000002044         mov        esi, 0x1ff                                  ; argument "__mode" for method j_mkdir
0000000000002049         call       j_mkdir                                     ; mkdir
000000000000204e         mov        ebx, eax
0000000000002050         call       j___errno_location                          ; __errno_location
0000000000002055         mov        edi, dword [rbp+8]                          ; argument "__mask" for method j_umask
0000000000002058         mov        r14d, dword [rax]
000000000000205b         mov        r13, rax
000000000000205e         call       j_umask                                     ; umask
0000000000002063         mov        dword [r13], r14d
0000000000002067         jmp        loc_200a
0000000000002069         align      16                                          ; End of unwind block (FDE at 0x9d70)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
0000000000002070         push       r13                                         ; Begin of unwind block (FDE at 0x9db0), CODE XREF=main+213, main+623
0000000000002072         push       r12
0000000000002074         mov        edx, 0x5
0000000000002079         push       rbp
000000000000207a         push       rbx
000000000000207b         mov        ebp, edi
000000000000207d         sub        rsp, 0x88
0000000000002084         mov        rbx, qword [program_name]                   ; program_name
000000000000208b         mov        rax, qword [fs:0x28]
0000000000002094         mov        qword [rsp+0xa8+var_30], rax
0000000000002099         xor        eax, eax
000000000000209b         test       edi, edi
000000000000209d         je         loc_20cd

000000000000209f         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
00000000000020a6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000020a8         call       j_dcgettext                                 ; dcgettext
00000000000020ad         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
00000000000020b4         mov        rdx, rax
00000000000020b7         mov        rcx, rbx
00000000000020ba         mov        esi, 0x1
00000000000020bf         xor        eax, eax
00000000000020c1         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_20c6:
00000000000020c6         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+750
00000000000020c8         call       j_exit                                      ; exit
                        ; endp

                     loc_20cd:
00000000000020cd         lea        rsi, qword [aUsageSOptionDi]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... DIRECTORY...\\n", CODE XREF=usage+45
00000000000020d4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000020d6         call       j_dcgettext                                 ; dcgettext
00000000000020db         mov        rdx, rbx
00000000000020de         mov        rsi, rax
00000000000020e1         mov        edi, 0x1
00000000000020e6         xor        eax, eax
00000000000020e8         call       j___printf_chk                              ; __printf_chk
00000000000020ed         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000020f4         lea        rsi, qword [aCreateTheDirec]                ; argument "msgid" for method j_dcgettext, "Create the DIRECTORY(ies), if they do not already exist.\\n"
00000000000020fb         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002100         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002102         call       j_dcgettext                                 ; dcgettext
0000000000002107         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000210a         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000210d         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002112         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002119         lea        rsi, qword [aNmandatoryArgu]                ; argument "msgid" for method j_dcgettext, "\\nMandatory arguments to long options are mandatory for short options too.\\n"
0000000000002120         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002125         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002127         call       j_dcgettext                                 ; dcgettext
000000000000212c         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000212f         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002132         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002137         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000213e         lea        rsi, qword [aMModemodeSetFi]                ; argument "msgid" for method j_dcgettext, "  -m, --mode=MODE   set file mode (as in chmod), not a=rwx - umask\\n  -p, --parents     no error if existing, make parent directories as needed\\n  -v, --verbose     print a message for each created directory\\n"
0000000000002145         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000214a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000214c         call       j_dcgettext                                 ; dcgettext
0000000000002151         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002154         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002157         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000215c         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002163         lea        rsi, qword [aZSetSelinuxSec]                ; argument "msgid" for method j_dcgettext, "  -Z                   set SELinux security context of each created directory\\n                         to the default type\\n      --context[=CTX]  like -Z, or if CTX is specified then set the SELinux\\n                         or SMACK security context to CTX…"
000000000000216a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000216f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002171         call       j_dcgettext                                 ; dcgettext
0000000000002176         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002179         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000217c         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002181         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002188         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
000000000000218f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002194         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002196         call       j_dcgettext                                 ; dcgettext
000000000000219b         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000219e         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000021a1         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000021a6         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000021ad         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
00000000000021b4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000021b9         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000021bb         call       j_dcgettext                                 ; dcgettext
00000000000021c0         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000021c3         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000021c6         lea        rbx, qword [aMkdir]                         ; "mkdir"
00000000000021cd         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000021d2         lea        rax, qword [aMkdir+6]                       ; 0x874a
00000000000021d9         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
00000000000021e0         mov        qword [rsp+0xa8+var_48], 0x0
00000000000021e9         mov        qword [rsp+0xa8+var_40], 0x0
00000000000021f2         mov        rdx, rsp
00000000000021f5         mov        qword [rsp+0xa8+var_A8], rax
00000000000021f9         lea        rax, qword [aTestInvocation]                ; "test invocation"
0000000000002200         mov        qword [rsp+0xa8+var_78], rcx
0000000000002205         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
000000000000220c         mov        qword [rsp+0xa8+var_A0], rax
0000000000002211         lea        rax, qword [aCoreutils]                     ; "coreutils"
0000000000002218         mov        qword [rsp+0xa8+var_68], rcx
000000000000221d         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
0000000000002224         mov        qword [rsp+0xa8+var_98], rax
0000000000002229         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
0000000000002230         mov        qword [rsp+0xa8+var_58], rcx
0000000000002235         mov        qword [rsp+0xa8+var_90], rax
000000000000223a         lea        rax, qword [aSha224sum]                     ; "sha224sum"
0000000000002241         mov        qword [rsp+0xa8+var_88], rax
0000000000002246         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
000000000000224d         mov        qword [rsp+0xa8+var_80], rax
0000000000002252         mov        qword [rsp+0xa8+var_70], rax
0000000000002257         mov        qword [rsp+0xa8+var_60], rax
000000000000225c         mov        qword [rsp+0xa8+var_50], rax
0000000000002261         nop        dword [rax]

                     loc_2268:
0000000000002268         add        rdx, 0x10                                   ; CODE XREF=usage+533
000000000000226c         mov        rdi, qword [rdx]
000000000000226f         test       rdi, rdi
0000000000002272         je         loc_2287

0000000000002274         mov        ecx, 0x6
0000000000002279         mov        rsi, rbx
000000000000227c         rep  cmpsb byte [rsi], byte [rdi]
000000000000227e         seta       al
0000000000002281         sbb        al, 0x0
0000000000002283         test       al, al
0000000000002285         jne        loc_2268

                     loc_2287:
0000000000002287         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+514
000000000000228b         xor        edi, edi
000000000000228d         mov        edx, 0x5
0000000000002292         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
0000000000002299         test       r12, r12
000000000000229c         je         loc_2363

00000000000022a2         call       j_dcgettext                                 ; dcgettext
00000000000022a7         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000022ae         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x87c0
00000000000022b5         mov        rsi, rax
00000000000022b8         mov        edi, 0x1
00000000000022bd         xor        eax, eax
00000000000022bf         call       j___printf_chk                              ; __printf_chk
00000000000022c4         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
00000000000022c6         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
00000000000022cb         call       j_setlocale                                 ; setlocale
00000000000022d0         test       rax, rax
00000000000022d3         je         loc_22f1

00000000000022d5         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x87ce
00000000000022dc         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
00000000000022e1         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
00000000000022e4         call       j_strncmp                                   ; strncmp
00000000000022e9         test       eax, eax
00000000000022eb         jne        loc_23f8

                     loc_22f1:
00000000000022f1         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+611, usage+941
00000000000022f8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000022fa         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000022ff         call       j_dcgettext                                 ; dcgettext
0000000000002304         lea        rcx, qword [aMkdir]                         ; "mkdir"
000000000000230b         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002312         mov        rsi, rax
0000000000002315         mov        edi, 0x1
000000000000231a         xor        eax, eax
000000000000231c         call       j___printf_chk                              ; __printf_chk
0000000000002321         cmp        r12, rbx
0000000000002324         lea        rcx, qword [aMulticallInvoc+10]             ; 0x8766
000000000000232b         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0x9406
0000000000002332         cmove      rbx, rcx

                     loc_2336:
0000000000002336         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+892
000000000000233d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000233f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002344         call       j_dcgettext                                 ; dcgettext
0000000000002349         mov        rcx, rbx
000000000000234c         mov        rsi, rax
000000000000234f         mov        rdx, r12
0000000000002352         mov        edi, 0x1
0000000000002357         xor        eax, eax
0000000000002359         call       j___printf_chk                              ; __printf_chk
000000000000235e         jmp        loc_20c6

                     loc_2363:
0000000000002363         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+556
0000000000002368         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
000000000000236f         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x87c0
0000000000002376         mov        rsi, rax
0000000000002379         mov        edi, 0x1
000000000000237e         xor        eax, eax
0000000000002380         call       j___printf_chk                              ; __printf_chk
0000000000002385         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000002387         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
000000000000238c         call       j_setlocale                                 ; setlocale
0000000000002391         test       rax, rax
0000000000002394         je         loc_23ae

0000000000002396         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x87ce
000000000000239d         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
00000000000023a2         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
00000000000023a5         call       j_strncmp                                   ; strncmp
00000000000023aa         test       eax, eax
00000000000023ac         jne        loc_23f1

                     loc_23ae:
00000000000023ae         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+804
00000000000023b5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000023ba         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000023bc         lea        r12, qword [aMkdir]                         ; "mkdir"
00000000000023c3         lea        rbx, qword [aMulticallInvoc+10]             ; 0x8766
00000000000023ca         call       j_dcgettext                                 ; dcgettext
00000000000023cf         lea        rcx, qword [aMkdir]                         ; "mkdir"
00000000000023d6         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000023dd         mov        rsi, rax
00000000000023e0         mov        edi, 0x1
00000000000023e5         xor        eax, eax
00000000000023e7         call       j___printf_chk                              ; __printf_chk
00000000000023ec         jmp        loc_2336

                     loc_23f1:
00000000000023f1         lea        r12, qword [aMkdir]                         ; "mkdir", CODE XREF=usage+828

                     loc_23f8:
00000000000023f8         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+635
00000000000023ff         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
0000000000002406         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002408         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000240d         call       j_dcgettext                                 ; dcgettext
0000000000002412         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002415         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002418         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000241d         jmp        loc_22f1
0000000000002422         align      16                                          ; End of unwind block (FDE at 0x9db0)

                     prog_fprintf:
0000000000002430         push       rbp                                         ; Begin of unwind block (FDE at 0x9e24), CODE XREF=announce_mkdir.part.4+34
0000000000002431         push       rbx
0000000000002432         mov        rbp, rsi
0000000000002435         mov        rbx, rdi
0000000000002438         sub        rsp, 0xd8
000000000000243f         test       al, al
0000000000002441         mov        qword [rsp+0xe8+var_B8], rdx
0000000000002446         mov        qword [rsp+0xe8+var_B0], rcx
000000000000244b         mov        qword [rsp+0xe8+var_A8], r8
0000000000002450         mov        qword [rsp+0xe8+var_A0], r9
0000000000002455         je         loc_248e

0000000000002457         movaps     xmmword [rsp+0xe8+var_98], xmm0
000000000000245c         movaps     xmmword [rsp+0xe8+var_88], xmm1
0000000000002461         movaps     xmmword [rsp+0xe8+var_78], xmm2
0000000000002466         movaps     xmmword [rsp+0xe8+var_68], xmm3
000000000000246e         movaps     xmmword [rsp+0xe8+var_58], xmm4
0000000000002476         movaps     xmmword [rsp+0xe8+var_48], xmm5
000000000000247e         movaps     xmmword [rsp+0xe8+var_38], xmm6
0000000000002486         movaps     xmmword [rsp+0xe8+var_28], xmm7

                     loc_248e:
000000000000248e         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked, CODE XREF=prog_fprintf+37
0000000000002491         mov        rax, qword [fs:0x28]
000000000000249a         mov        qword [rsp+0xe8+var_D0], rax
000000000000249f         xor        eax, eax
00000000000024a1         mov        rdi, qword [program_name]                   ; argument "__s" for method j_fputs_unlocked, program_name
00000000000024a8         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000024ad         lea        rdi, qword [aWarningIgnorin+73]             ; argument "__ptr" for method j_fwrite_unlocked, 0x8c91
00000000000024b4         mov        rcx, rbx                                    ; argument "__stream" for method j_fwrite_unlocked
00000000000024b7         mov        edx, 0x2                                    ; argument "__n" for method j_fwrite_unlocked
00000000000024bc         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
00000000000024c1         call       j_fwrite_unlocked                           ; fwrite_unlocked
00000000000024c6         lea        rax, qword [rsp+0xe8+arg_0]
00000000000024ce         mov        rdx, rsp
00000000000024d1         mov        rsi, rbp
00000000000024d4         mov        rdi, rbx
00000000000024d7         mov        dword [rsp+0xe8+var_E8], 0x10
00000000000024de         mov        dword [rsp+0xe8+var_E4], 0x30
00000000000024e6         mov        qword [rsp+0xe8+var_E0], rax
00000000000024eb         lea        rax, qword [rsp+0xe8+var_C8]
00000000000024f0         mov        qword [rsp+0xe8+var_D8], rax
00000000000024f5         call       rpl_vfprintf                                ; rpl_vfprintf
00000000000024fa         mov        rax, qword [rbx+0x28]
00000000000024fe         cmp        rax, qword [rbx+0x30]
0000000000002502         jae        loc_2530

0000000000002504         lea        rdx, qword [rax+1]
0000000000002508         mov        qword [rbx+0x28], rdx
000000000000250c         mov        byte [rax], 0xa

                     loc_250f:
000000000000250f         mov        rax, qword [rsp+0xe8+var_D0]                ; CODE XREF=prog_fprintf+269
0000000000002514         xor        rax, qword [fs:0x28]
000000000000251d         jne        loc_253f

000000000000251f         add        rsp, 0xd8
0000000000002526         pop        rbx
0000000000002527         pop        rbp
0000000000002528         ret
                        ; endp
0000000000002529         align      16

                     loc_2530:
0000000000002530         mov        esi, 0xa                                    ; argument #2 for method j___overflow, CODE XREF=prog_fprintf+210
0000000000002535         mov        rdi, rbx                                    ; argument #1 for method j___overflow
0000000000002538         call       j___overflow                                ; __overflow
000000000000253d         jmp        loc_250f

                     loc_253f:
000000000000253f         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=prog_fprintf+237
                        ; endp
0000000000002544         align      16                                          ; End of unwind block (FDE at 0x9e24)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
0000000000002550         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0x9e54), file_name
0000000000002557         ret
                        ; endp
0000000000002558         align      32                                          ; End of unwind block (FDE at 0x9e54)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
0000000000002560         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x9e68), ignore_EPIPE
0000000000002567         ret
                        ; endp
0000000000002568         align      16                                          ; End of unwind block (FDE at 0x9e68)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
0000000000002570         push       rbp                                         ; Begin of unwind block (FDE at 0x9e7c), DATA XREF=main+130
0000000000002571         push       rbx
0000000000002572         sub        rsp, 0x8
0000000000002576         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000257d         call       close_stream                                ; close_stream
0000000000002582         test       eax, eax
0000000000002584         je         loc_259c

0000000000002586         call       j___errno_location                          ; __errno_location
000000000000258b         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
0000000000002592         mov        rbx, rax
0000000000002595         je         loc_25b3

0000000000002597         cmp        dword [rax], 0x20
000000000000259a         jne        loc_25b3

                     loc_259c:
000000000000259c         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
00000000000025a3         call       close_stream                                ; close_stream
00000000000025a8         test       eax, eax
00000000000025aa         jne        loc_25f2

00000000000025ac         add        rsp, 0x8
00000000000025b0         pop        rbx
00000000000025b1         pop        rbp
00000000000025b2         ret
                        ; endp

                     loc_25b3:
00000000000025b3         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
00000000000025ba         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000025bc         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000025c1         call       j_dcgettext                                 ; dcgettext
00000000000025c6         mov        rdi, qword [file_name]                      ; file_name
00000000000025cd         mov        rbp, rax
00000000000025d0         test       rdi, rdi
00000000000025d3         je         loc_25fd

00000000000025d5         call       quotearg_colon                              ; quotearg_colon
00000000000025da         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
00000000000025dc         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
00000000000025e3         mov        rcx, rax
00000000000025e6         mov        r8, rbp
00000000000025e9         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000025eb         xor        eax, eax
00000000000025ed         call       j_error                                     ; error

                     loc_25f2:
00000000000025f2         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
00000000000025f8         call       j__exit                                     ; _exit
                        ; endp

                     loc_25fd:
00000000000025fd         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
00000000000025ff         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8ca9
0000000000002606         mov        rcx, rax
0000000000002609         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000260b         xor        eax, eax
000000000000260d         call       j_error                                     ; error
0000000000002612         jmp        loc_25f2
0000000000002614         align      32                                          ; End of unwind block (FDE at 0x9e7c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_C0: int32_t, -192
        ;    var_D8: int32_t, -216
        ;    var_D9: int8_t, -217
        ;    var_E0: int32_t, -224
        ;    var_E8: int64_t, -232
        ;    var_F0: int64_t, -240
        ;    var_F8: int64_t, -248


                     make_dir_parents:
0000000000002620         push       r15                                         ; Begin of unwind block (FDE at 0x9eac), CODE XREF=process_dir+47
0000000000002622         push       r14
0000000000002624         mov        r15, rcx
0000000000002627         push       r13
0000000000002629         push       r12
000000000000262b         mov        r14, rsi
000000000000262e         push       rbp
000000000000262f         push       rbx
0000000000002630         mov        r13, rdx
0000000000002633         mov        rbx, rdi
0000000000002636         mov        r12d, r8d
0000000000002639         sub        rsp, 0xc8
0000000000002640         mov        eax, dword [rsp+0xf8+arg_18]
0000000000002647         mov        dword [rsp+0xf8+var_E0], eax
000000000000264b         mov        rax, qword [fs:0x28]
0000000000002654         mov        qword [rsp+0xf8+var_40], rax
000000000000265c         xor        eax, eax
000000000000265e         cmp        byte [rdi], 0x2f
0000000000002661         je         loc_266c

0000000000002663         cmp        dword [rsi], 0x4
0000000000002666         je         loc_27b0

                     loc_266c:
000000000000266c         test       r13, r13                                    ; CODE XREF=make_dir_parents+65, make_dir_parents+405
000000000000266f         je         loc_27a0

0000000000002675         mov        rcx, r15
0000000000002678         mov        rdx, r13
000000000000267b         mov        rsi, r14
000000000000267e         mov        rdi, rbx
0000000000002681         mov        qword [rsp+0xf8+var_F0], r9
0000000000002686         call       mkancesdirs                                 ; mkancesdirs
000000000000268b         test       rax, rax
000000000000268e         js         loc_2970

0000000000002694         mov        r9, qword [rsp+0xf8+var_F0]
0000000000002699         add        rax, rbx
000000000000269c         mov        qword [rsp+0xf8+var_F8], rax

                     loc_26a0:
00000000000026a0         cmp        dword [rsp+0xf8+arg_8], 0xffffffff          ; CODE XREF=make_dir_parents+388
00000000000026a8         mov        eax, dword [rsp+0xf8+arg_0]
00000000000026af         mov        esi, r12d
00000000000026b2         sete       cl
00000000000026b5         cmp        dword [rsp+0xf8+arg_10], 0xffffffff
00000000000026bd         sete       dl
00000000000026c0         and        eax, 0xc00
00000000000026c5         and        esi, 0x200
00000000000026cb         or         eax, esi
00000000000026cd         and        cl, dl
00000000000026cf         mov        byte [rsp+0xf8+var_D9], cl
00000000000026d3         jne        loc_2820

00000000000026d9         mov        eax, r12d
00000000000026dc         and        eax, 0xffffffc0
00000000000026df         mov        dword [rsp+0xf8+var_F0], eax

                     loc_26e3:
00000000000026e3         mov        esi, dword [rsp+0xf8+var_F0]                ; argument "__mode" for method j_mkdir, CODE XREF=make_dir_parents+618
00000000000026e7         mov        rdi, qword [rsp+0xf8+var_F8]                ; argument "__path" for method j_mkdir
00000000000026eb         mov        qword [rsp+0xf8+var_E8], r9
00000000000026f0         call       j_mkdir                                     ; mkdir
00000000000026f5         test       eax, eax
00000000000026f7         mov        ebp, eax
00000000000026f9         mov        r9, qword [rsp+0xf8+var_E8]
00000000000026fe         je         loc_2890

                     loc_2704:
0000000000002704         call       j___errno_location                          ; __errno_location, CODE XREF=make_dir_parents+537
0000000000002709         cmp        byte [rsp+0xf8+var_E0], 0x0
000000000000270e         mov        r15, rax
0000000000002711         mov        ebp, dword [rax]
0000000000002713         je         loc_29b0

0000000000002719         test       ebp, ebp
000000000000271b         je         loc_286c

0000000000002721         cmp        ebp, 0x2
0000000000002724         setne      r12b
0000000000002728         test       r13, r13
000000000000272b         setne      al
000000000000272e         and        r12b, al
0000000000002731         je         loc_27bb

0000000000002737         mov        rsi, qword [rsp+0xf8+var_F8]                ; argument "__filename" for method j___xstat
000000000000273b         lea        rdx, qword [rsp+0xf8+var_D8]                ; argument "__stat_buf" for method j___xstat
0000000000002740         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
0000000000002745         call       j___xstat                                   ; __xstat
000000000000274a         test       eax, eax
000000000000274c         je         loc_2990

0000000000002752         cmp        ebp, 0x11
0000000000002755         jne        loc_27bb

0000000000002757         mov        eax, dword [r15]
000000000000275a         cmp        eax, 0x14
000000000000275d         je         loc_27bb

000000000000275f         cmp        eax, 0x2
0000000000002762         je         loc_27bb

0000000000002764         mov        rdi, rbx
0000000000002767         xor        r12d, r12d
000000000000276a         call       quote                                       ; quote
000000000000276f         lea        rsi, qword [aCannotStatS]                   ; argument "msgid" for method j_dcgettext, "cannot stat %s"
0000000000002776         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000277b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000277d         mov        rbx, rax
0000000000002780         call       j_dcgettext                                 ; dcgettext
0000000000002785         mov        esi, dword [r15]                            ; argument "__errnum" for method j_error
0000000000002788         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000278b         mov        rcx, rbx
000000000000278e         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002790         xor        eax, eax
0000000000002792         call       j_error                                     ; error
0000000000002797         jmp        loc_27ed
0000000000002799         align      32

                     loc_27a0:
00000000000027a0         mov        qword [rsp+0xf8+var_F8], rbx                ; CODE XREF=make_dir_parents+79
00000000000027a4         jmp        loc_26a0
00000000000027a9         align      16

                     loc_27b0:
00000000000027b0         mov        ebp, dword [rsi+4]                          ; CODE XREF=make_dir_parents+70
00000000000027b3         test       ebp, ebp
00000000000027b5         je         loc_266c

                     loc_27bb:
00000000000027bb         mov        rdi, rbx                                    ; CODE XREF=make_dir_parents+273, make_dir_parents+309, make_dir_parents+317, make_dir_parents+322, make_dir_parents+743, make_dir_parents+752, make_dir_parents+769, make_dir_parents+865, make_dir_parents+894
00000000000027be         xor        r12d, r12d
00000000000027c1         call       quote                                       ; quote
00000000000027c6         lea        rsi, qword [aCannotCreateDi]                ; argument "msgid" for method j_dcgettext, "cannot create directory %s"
00000000000027cd         mov        rbx, rax
00000000000027d0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000027d5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000027d7         call       j_dcgettext                                 ; dcgettext
00000000000027dc         mov        rcx, rbx
00000000000027df         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000027e2         mov        esi, ebp                                    ; argument "__errnum" for method j_error
00000000000027e4         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000027e6         xor        eax, eax
00000000000027e8         call       j_error                                     ; error

                     loc_27ed:
00000000000027ed         mov        rdi, qword [rsp+0xf8+var_40]                ; CODE XREF=make_dir_parents+375, make_dir_parents+594, make_dir_parents+843, make_dir_parents+900
00000000000027f5         xor        rdi, qword [fs:0x28]
00000000000027fe         mov        eax, r12d
0000000000002801         jne        loc_29d5

0000000000002807         add        rsp, 0xc8
000000000000280e         pop        rbx
000000000000280f         pop        rbp
0000000000002810         pop        r12
0000000000002812         pop        r13
0000000000002814         pop        r14
0000000000002816         pop        r15
0000000000002818         ret
                        ; endp
0000000000002819         align      32

                     loc_2820:
0000000000002820         test       eax, eax                                    ; CODE XREF=make_dir_parents+179
0000000000002822         jne        loc_2880

0000000000002824         mov        rdi, qword [rsp+0xf8+var_F8]                ; argument "__path" for method j_mkdir
0000000000002828         mov        esi, r12d                                   ; argument "__mode" for method j_mkdir
000000000000282b         mov        qword [rsp+0xf8+var_E8], r9
0000000000002830         call       j_mkdir                                     ; mkdir
0000000000002835         test       eax, eax
0000000000002837         mov        ebp, eax
0000000000002839         jne        loc_2704

000000000000283f         mov        eax, r12d
0000000000002842         mov        rsi, r15
0000000000002845         mov        rdi, rbx
0000000000002848         and        eax, 0x1ff
000000000000284d         and        eax, dword [rsp+0xf8+arg_0]
0000000000002854         mov        r9, qword [rsp+0xf8+var_E8]
0000000000002859         mov        dword [rsp+0xf8+var_F0], eax
000000000000285d         call       r9
0000000000002860         mov        esi, dword [rsp+0xf8+var_F0]
0000000000002864         test       esi, esi
0000000000002866         jne        loc_29da

                     loc_286c:
000000000000286c         mov        r12d, 0x1                                   ; CODE XREF=make_dir_parents+251, make_dir_parents+661, make_dir_parents+726, make_dir_parents+852
0000000000002872         jmp        loc_27ed
0000000000002877         align      128

                     loc_2880:
0000000000002880         mov        eax, r12d                                   ; CODE XREF=make_dir_parents+514
0000000000002883         and        eax, 0xffffffed
0000000000002886         mov        dword [rsp+0xf8+var_F0], eax
000000000000288a         jmp        loc_26e3
000000000000288f         align      16

                     loc_2890:
0000000000002890         mov        rsi, r15                                    ; CODE XREF=make_dir_parents+222
0000000000002893         mov        rdi, rbx
0000000000002896         call       r9
0000000000002899         mov        edx, 0x3

                     loc_289e:
000000000000289e         mov        r15, qword [rsp+0xf8+var_F8]                ; CODE XREF=make_dir_parents+925, make_dir_parents+964
00000000000028a2         lea        rcx, qword [rsp+0xf8+var_D8]
00000000000028a7         mov        rdi, r14
00000000000028aa         mov        rsi, r15
00000000000028ad         call       savewd_chdir                                ; savewd_chdir
00000000000028b2         cmp        eax, 0xffffffff
00000000000028b5         jl         loc_286c

00000000000028b7         test       eax, eax
00000000000028b9         lea        rax, qword [aSS+7]                          ; 0x8cac
00000000000028c0         mov        r9d, r12d
00000000000028c3         cmovne     rax, r15
00000000000028c7         sub        rsp, 0x8
00000000000028cb         mov        edx, dword [rsp+0x100+arg_0]
00000000000028d2         mov        rsi, rax
00000000000028d5         push       rdx
00000000000028d6         mov        r8d, dword [rsp+0x108+arg_10]
00000000000028de         mov        ecx, dword [rsp+0x108+arg_8]
00000000000028e5         mov        edx, dword [rsp+0x108+var_F0]
00000000000028e9         mov        edi, dword [rsp+0x108+var_D8]
00000000000028ed         call       dirchownmod                                 ; dirchownmod
00000000000028f2         test       eax, eax
00000000000028f4         pop        rdx
00000000000028f5         pop        rcx
00000000000028f6         je         loc_286c

00000000000028fc         test       ebp, ebp
00000000000028fe         je         loc_29c8

0000000000002904         cmp        ebp, 0x2
0000000000002907         je         loc_27bb

000000000000290d         test       r13, r13
0000000000002910         je         loc_27bb

0000000000002916         call       j___errno_location                          ; __errno_location
000000000000291b         cmp        dword [rax], 0x14
000000000000291e         mov        r12, rax
0000000000002921         je         loc_27bb

                     loc_2927:
0000000000002927         mov        rdi, rbx                                    ; CODE XREF=make_dir_parents+944
000000000000292a         call       quote                                       ; quote
000000000000292f         cmp        byte [rsp+0xf8+var_D9], 0x0
0000000000002934         mov        rbx, rax
0000000000002937         lea        rsi, qword [aCannotChangeOw]                ; "cannot change owner and permissions of %s"
000000000000293e         lea        rax, qword [aCannotChangePe]                ; "cannot change permissions of %s"
0000000000002945         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000294a         cmovne     rsi, rax                                    ; argument "msgid" for method j_dcgettext
000000000000294e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002950         call       j_dcgettext                                 ; dcgettext
0000000000002955         mov        esi, dword [r12]                            ; argument "__errnum" for method j_error
0000000000002959         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000295c         mov        rcx, rbx
000000000000295f         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002961         xor        eax, eax
0000000000002963         xor        r12d, r12d
0000000000002966         call       j_error                                     ; error
000000000000296b         jmp        loc_27ed

                     loc_2970:
0000000000002970         cmp        rax, 0xffffffffffffffff                     ; CODE XREF=make_dir_parents+110
0000000000002974         jne        loc_286c

000000000000297a         call       j___errno_location                          ; __errno_location
000000000000297f         mov        ebp, dword [rax]
0000000000002981         jmp        loc_27bb
0000000000002986         align      16

                     loc_2990:
0000000000002990         mov        eax, dword [rsp+0xf8+var_C0]                ; CODE XREF=make_dir_parents+300
0000000000002994         and        eax, 0xf000
0000000000002999         cmp        eax, 0x4000
000000000000299e         jne        loc_27bb

00000000000029a4         jmp        loc_27ed
00000000000029a9         align      16

                     loc_29b0:
00000000000029b0         mov        dword [rsp+0xf8+var_F0], 0xffffffff         ; CODE XREF=make_dir_parents+243
00000000000029b8         mov        edx, 0x2
00000000000029bd         jmp        loc_289e
00000000000029c2         align      8

                     loc_29c8:
00000000000029c8         call       j___errno_location                          ; __errno_location, CODE XREF=make_dir_parents+734
00000000000029cd         mov        r12, rax
00000000000029d0         jmp        loc_2927

                     loc_29d5:
00000000000029d5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=make_dir_parents+481
                        ; endp

                     loc_29da:
00000000000029da         mov        dword [rsp+0xf8+var_F0], r12d               ; CODE XREF=make_dir_parents+582
00000000000029df         mov        edx, 0x3
00000000000029e4         jmp        loc_289e
00000000000029e9         align      16                                          ; End of unwind block (FDE at 0x9eac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     mode_compile:
00000000000029f0         push       rbp                                         ; Begin of unwind block (FDE at 0x9f0c), CODE XREF=main+551
00000000000029f1         push       rbx
00000000000029f2         mov        rbx, rdi
00000000000029f5         sub        rsp, 0x8
00000000000029f9         movsx      eax, byte [rdi]
00000000000029fc         lea        edx, dword [rax-0x30]
00000000000029ff         cmp        dl, 0x7
0000000000002a02         jbe        loc_2ab8

0000000000002a08         test       al, al
0000000000002a0a         mov        rcx, rdi
0000000000002a0d         mov        edi, 0x1
0000000000002a12         je         loc_2a3b

0000000000002a14         nop        dword [rax]

                     loc_2a18:
0000000000002a18         mov        edx, eax                                    ; CODE XREF=mode_compile+73
0000000000002a1a         and        edx, 0xffffffef
0000000000002a1d         cmp        dl, 0x2d
0000000000002a20         sete       dl
0000000000002a23         cmp        al, 0x2b
0000000000002a25         sete       al
0000000000002a28         add        rcx, 0x1
0000000000002a2c         or         eax, edx
0000000000002a2e         movzx      eax, al
0000000000002a31         add        rdi, rax
0000000000002a34         movzx      eax, byte [rcx]
0000000000002a37         test       al, al
0000000000002a39         jne        loc_2a18

                     loc_2a3b:
0000000000002a3b         mov        edx, 0x10                                   ; CODE XREF=mode_compile+34
0000000000002a40         xor        ecx, ecx
0000000000002a42         mov        rax, rdx
0000000000002a45         mul        rdi
0000000000002a48         jo         loc_2d5f

                     loc_2a4e:
0000000000002a4e         test       rax, rax                                    ; CODE XREF=mode_compile+884
0000000000002a51         js         loc_2d69

0000000000002a57         test       rcx, rcx
0000000000002a5a         jne        loc_2d69

0000000000002a60         shl        rdi, 0x4                                    ; argument #1 for method xmalloc
0000000000002a64         lea        rbp, qword [switch_table_8d24]              ; switch_table_8d24
0000000000002a6b         call       xmalloc                                     ; xmalloc
0000000000002a70         xor        esi, esi

                     loc_2a72:
0000000000002a72         xor        r11d, r11d                                  ; CODE XREF=sub_2d6e+15

                     loc_2a75:
0000000000002a75         movzx      r9d, byte [rbx]                             ; CODE XREF=mode_compile+746
0000000000002a79         cmp        r9b, 0x61
0000000000002a7d         je         loc_2cd0

0000000000002a83         jle        loc_2af0

0000000000002a85         cmp        r9b, 0x6f
0000000000002a89         je         loc_2d00

0000000000002a8f         cmp        r9b, 0x75
0000000000002a93         je         loc_2cf0

0000000000002a99         cmp        r9b, 0x67
0000000000002a9d         je         loc_2ce0

                     loc_2aa3:
0000000000002aa3         mov        rdi, rax                                    ; argument "__ptr" for method j_free, CODE XREF=mode_compile+272, mode_compile+440, mode_compile+462, mode_compile+475, sub_2d6e+23
0000000000002aa6         call       j_free                                      ; free
0000000000002aab         xor        eax, eax

                     loc_2aad:
0000000000002aad         add        rsp, 0x8                                    ; CODE XREF=sub_2d6e+38
0000000000002ab1         pop        rbx
0000000000002ab2         pop        rbp
0000000000002ab3         ret
                        ; endp
0000000000002ab4         align      8

                     loc_2ab8:
0000000000002ab8         mov        rdx, rdi                                    ; CODE XREF=mode_compile+18
0000000000002abb         xor        ebp, ebp
0000000000002abd         jmp        loc_2acf
0000000000002abf         align      64

                     loc_2ac0:
0000000000002ac0         movsx      eax, byte [rdx]                             ; CODE XREF=mode_compile+237
0000000000002ac3         lea        ecx, dword [rax-0x30]
0000000000002ac6         cmp        cl, 0x7
0000000000002ac9         ja         loc_2d10

                     loc_2acf:
0000000000002acf         lea        ebp, dword [rax+rbp*8-0x30]                 ; CODE XREF=mode_compile+205
0000000000002ad3         add        rdx, 0x1
0000000000002ad7         cmp        ebp, 0xfff
0000000000002add         jbe        loc_2ac0

                     loc_2adf:
0000000000002adf         add        rsp, 0x8                                    ; CODE XREF=mode_compile+802
0000000000002ae3         xor        eax, eax
0000000000002ae5         pop        rbx
0000000000002ae6         pop        rbp
0000000000002ae7         ret
                        ; endp
0000000000002ae8         align      16

                     loc_2af0:
0000000000002af0         cmp        r9b, 0x2d                                   ; CODE XREF=mode_compile+147
0000000000002af4         je         loc_2b02

0000000000002af6         cmp        r9b, 0x3d
0000000000002afa         je         loc_2b02

0000000000002afc         cmp        r9b, 0x2b
0000000000002b00         jne        loc_2aa3

                     loc_2b02:
0000000000002b02         lea        rdi, qword [rsi+1]                          ; CODE XREF=mode_compile+260, mode_compile+266
0000000000002b06         shl        rsi, 0x4
0000000000002b0a         add        rsi, rax
0000000000002b0d         jmp        loc_2b74
0000000000002b0f         align      16

                     loc_2b10:
0000000000002b10         cmp        dl, 0x6f                                    ; CODE XREF=mode_compile+405
0000000000002b13         lea        r8, qword [rbx+2]
0000000000002b17         je         loc_2cb0

0000000000002b1d         cmp        dl, 0x75
0000000000002b20         mov        r10d, 0x1c0
0000000000002b26         jne        loc_2c00

                     loc_2b2c:
0000000000002b2c         mov        byte [rsi], r9b                             ; CODE XREF=mode_compile+710, mode_compile+730
0000000000002b2f         mov        byte [rsi+1], 0x3
0000000000002b33         movzx      r9d, byte [rbx+2]
0000000000002b38         mov        dword [rsi+4], r11d
0000000000002b3c         mov        rbx, r8
0000000000002b3f         mov        dword [rsi+8], r10d

                     loc_2b43:
0000000000002b43         mov        edx, r10d                                   ; CODE XREF=mode_compile+621
0000000000002b46         and        edx, r11d
0000000000002b49         test       r11d, r11d
0000000000002b4c         cmovne     r10d, edx

                     loc_2b50:
0000000000002b50         mov        edx, r9d                                    ; CODE XREF=mode_compile+517
0000000000002b53         mov        dword [rsi+0xc], r10d
0000000000002b57         add        rsi, 0x10
0000000000002b5b         and        edx, 0xffffffef
0000000000002b5e         lea        rcx, qword [rdi+1]
0000000000002b62         cmp        dl, 0x2d
0000000000002b65         je         loc_2b71

0000000000002b67         cmp        r9b, 0x2b
0000000000002b6b         jne        loc_2d70

                     loc_2b71:
0000000000002b71         mov        rdi, rcx                                    ; CODE XREF=mode_compile+373

                     loc_2b74:
0000000000002b74         movsx      edx, byte [rbx+1]                           ; CODE XREF=mode_compile+285
0000000000002b78         lea        rcx, qword [rbx+1]
0000000000002b7c         cmp        dl, 0x67
0000000000002b7f         je         loc_2cc0

0000000000002b85         jg         loc_2b10

0000000000002b87         lea        r8d, dword [rdx-0x30]
0000000000002b8b         cmp        r8b, 0x7
0000000000002b8f         ja         loc_2c00

0000000000002b91         xor        r8d, r8d
0000000000002b94         nop        dword [rax]

                     loc_2b98:
0000000000002b98         lea        r8d, dword [rdx+r8*8-0x30]                  ; CODE XREF=mode_compile+457
0000000000002b9d         add        rcx, 0x1
0000000000002ba1         cmp        r8d, 0xfff
0000000000002ba8         ja         loc_2aa3

0000000000002bae         movsx      edx, byte [rcx]
0000000000002bb1         lea        r10d, dword [rdx-0x30]
0000000000002bb5         cmp        r10b, 0x7
0000000000002bb9         jbe        loc_2b98

0000000000002bbb         test       r11d, r11d
0000000000002bbe         jne        loc_2aa3

0000000000002bc4         test       dl, dl
0000000000002bc6         je         loc_2bd1

0000000000002bc8         cmp        dl, 0x2c
0000000000002bcb         jne        loc_2aa3

                     loc_2bd1:
0000000000002bd1         mov        byte [rsi], r9b                             ; CODE XREF=mode_compile+470
0000000000002bd4         mov        byte [rsi+1], 0x1
0000000000002bd8         mov        r9d, edx
0000000000002bdb         mov        dword [rsi+4], 0xfff
0000000000002be2         mov        dword [rsi+8], r8d
0000000000002be6         mov        rbx, rcx
0000000000002be9         mov        r11d, 0xfff
0000000000002bef         mov        r10d, 0xfff
0000000000002bf5         jmp        loc_2b50
0000000000002bfa         align      1024

                     loc_2c00:
0000000000002c00         lea        r8d, dword [rdx-0x58]                       ; CODE XREF=mode_compile+310, mode_compile+415
0000000000002c04         xor        r10d, r10d
0000000000002c07         mov        ebx, 0x1
0000000000002c0c         cmp        r8b, 0x20
0000000000002c10         ja         loc_2c49

0000000000002c12         nop        word [rax+rax]

                     loc_2c18:
0000000000002c18         movzx      r8d, r8b                                    ; CODE XREF=mode_compile+599
0000000000002c1c         movsxd     r8, dword [rbp+r8*4]
0000000000002c21         add        r8, rbp
0000000000002c24         jmp        r8                                          ; switch statement using table at 0x8d24, with 33 cases, 0x2c30,0x2c49,0x2c68,0x2c70,0x2c80,0x2c90,0x2ca0
0000000000002c27         align      16

                     loc_2c30:
0000000000002c30         mov        ebx, 0x2                                    ; case 0, CODE XREF=mode_compile+564
0000000000002c35         nop        dword [rax]

                     loc_2c38:
0000000000002c38         add        rcx, 0x1                                    ; CODE XREF=mode_compile+636, mode_compile+644, mode_compile+663, mode_compile+679, mode_compile+695
0000000000002c3c         movzx      edx, byte [rcx]
0000000000002c3f         lea        r8d, dword [rdx-0x58]
0000000000002c43         cmp        r8b, 0x20
0000000000002c47         jbe        loc_2c18

                     loc_2c49:
0000000000002c49         mov        byte [rsi], r9b                             ; case 30, CODE XREF=mode_compile+544, mode_compile+564
0000000000002c4c         mov        byte [rsi+1], bl
0000000000002c4f         mov        r9d, edx
0000000000002c52         mov        dword [rsi+4], r11d
0000000000002c56         mov        dword [rsi+8], r10d
0000000000002c5a         mov        rbx, rcx
0000000000002c5d         jmp        loc_2b43
0000000000002c62         align      8

                     loc_2c68:
0000000000002c68         or         r10d, 0x49                                  ; case 32, CODE XREF=mode_compile+564
0000000000002c6c         jmp        loc_2c38
0000000000002c6e         align      16

                     loc_2c70:
0000000000002c70         or         r10b, 0x92                                  ; case 31, CODE XREF=mode_compile+564
0000000000002c74         jmp        loc_2c38
0000000000002c76         align      128

                     loc_2c80:
0000000000002c80         or         r10d, 0x200                                 ; case 28, CODE XREF=mode_compile+564
0000000000002c87         jmp        loc_2c38
0000000000002c89         align      16

                     loc_2c90:
0000000000002c90         or         r10d, 0xc00                                 ; case 27, CODE XREF=mode_compile+564
0000000000002c97         jmp        loc_2c38
0000000000002c99         align      32

                     loc_2ca0:
0000000000002ca0         or         r10d, 0x124                                 ; case 26, CODE XREF=mode_compile+564
0000000000002ca7         jmp        loc_2c38
0000000000002ca9         align      16

                     loc_2cb0:
0000000000002cb0         mov        r10d, 0x7                                   ; CODE XREF=mode_compile+295
0000000000002cb6         jmp        loc_2b2c
0000000000002cbb         align      64

                     loc_2cc0:
0000000000002cc0         lea        r8, qword [rbx+2]                           ; CODE XREF=mode_compile+399
0000000000002cc4         mov        r10d, 0x38
0000000000002cca         jmp        loc_2b2c
0000000000002ccf         align      16

                     loc_2cd0:
0000000000002cd0         mov        r11d, 0xfff                                 ; CODE XREF=mode_compile+141

                     loc_2cd6:
0000000000002cd6         add        rbx, 0x1                                    ; CODE XREF=mode_compile+759, mode_compile+775, mode_compile+791
0000000000002cda         jmp        loc_2a75
0000000000002cdf         align      32

                     loc_2ce0:
0000000000002ce0         or         r11d, 0x438                                 ; CODE XREF=mode_compile+173
0000000000002ce7         jmp        loc_2cd6
0000000000002ce9         align      16

                     loc_2cf0:
0000000000002cf0         or         r11d, 0x9c0                                 ; CODE XREF=mode_compile+163
0000000000002cf7         jmp        loc_2cd6
0000000000002cf9         align      256

                     loc_2d00:
0000000000002d00         or         r11d, 0x207                                 ; CODE XREF=mode_compile+153
0000000000002d07         jmp        loc_2cd6
0000000000002d09         align      16

                     loc_2d10:
0000000000002d10         test       al, al                                      ; CODE XREF=mode_compile+217
0000000000002d12         jne        loc_2adf

0000000000002d18         sub        rdx, rbx
0000000000002d1b         mov        ebx, ebp
0000000000002d1d         mov        eax, 0xfff
0000000000002d22         and        ebx, 0xc00
0000000000002d28         mov        edi, 0x20                                   ; argument #1 for method xmalloc
0000000000002d2d         or         ebx, 0x3ff
0000000000002d33         cmp        rdx, 0x5
0000000000002d37         cmovge     ebx, eax
0000000000002d3a         call       xmalloc                                     ; xmalloc
0000000000002d3f         mov        edx, 0x13d
0000000000002d44         mov        dword [rax+4], 0xfff
0000000000002d4b         mov        dword [rax+8], ebp
0000000000002d4e         mov        word [rax], dx
0000000000002d51         mov        dword [rax+0xc], ebx
0000000000002d54         mov        byte [rax+0x11], 0x0
0000000000002d58         add        rsp, 0x8
0000000000002d5c         pop        rbx
0000000000002d5d         pop        rbp
0000000000002d5e         ret
                        ; endp

                     loc_2d5f:
0000000000002d5f         mov        ecx, 0x1                                    ; CODE XREF=mode_compile+88
0000000000002d64         jmp        loc_2a4e

                     loc_2d69:
0000000000002d69         call       xalloc_die                                  ; xalloc_die, CODE XREF=mode_compile+97, mode_compile+106
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2d6e:
0000000000002d6e         nop
                        ; endp

                     loc_2d70:
0000000000002d70         cmp        r9b, 0x2c                                   ; CODE XREF=mode_compile+379
0000000000002d74         jne        loc_2d82

0000000000002d76         add        rbx, 0x1
0000000000002d7a         mov        rsi, rdi
0000000000002d7d         jmp        loc_2a72

                     loc_2d82:
0000000000002d82         test       r9b, r9b                                    ; CODE XREF=sub_2d6e+6
0000000000002d85         jne        loc_2aa3

0000000000002d8b         shl        rdi, 0x4
0000000000002d8f         mov        byte [rax+rdi+1], 0x0
0000000000002d94         jmp        loc_2aad
0000000000002d99         align      32                                          ; End of unwind block (FDE at 0x9f0c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_90: int32_t, -144


                     mode_create_from_ref:
0000000000002da0         push       rbx                                         ; Begin of unwind block (FDE at 0x9f54)
0000000000002da1         mov        rsi, rdi                                    ; argument "__filename" for method j___xstat
0000000000002da4         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
0000000000002da9         sub        rsp, 0xa0
0000000000002db0         mov        rdx, rsp                                    ; argument "__stat_buf" for method j___xstat
0000000000002db3         mov        rax, qword [fs:0x28]
0000000000002dbc         mov        qword [rsp+0xa8+var_10], rax
0000000000002dc4         xor        eax, eax
0000000000002dc6         call       j___xstat                                   ; __xstat
0000000000002dcb         test       eax, eax
0000000000002dcd         jne        loc_2e20

0000000000002dcf         mov        ebx, dword [rsp+0xa8+var_90]
0000000000002dd3         mov        edi, 0x20
0000000000002dd8         call       xmalloc                                     ; xmalloc
0000000000002ddd         mov        edx, 0x13d
0000000000002de2         mov        dword [rax+4], 0xfff
0000000000002de9         mov        dword [rax+0xc], 0xfff
0000000000002df0         mov        word [rax], dx
0000000000002df3         mov        dword [rax+8], ebx
0000000000002df6         mov        byte [rax+0x11], 0x0

                     loc_2dfa:
0000000000002dfa         mov        rcx, qword [rsp+0xa8+var_10]                ; CODE XREF=mode_create_from_ref+130
0000000000002e02         xor        rcx, qword [fs:0x28]
0000000000002e0b         jne        loc_2e24

0000000000002e0d         add        rsp, 0xa0
0000000000002e14         pop        rbx
0000000000002e15         ret
                        ; endp
0000000000002e16         align      32

                     loc_2e20:
0000000000002e20         xor        eax, eax                                    ; CODE XREF=mode_create_from_ref+45
0000000000002e22         jmp        loc_2dfa

                     loc_2e24:
0000000000002e24         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=mode_create_from_ref+107
                        ; endp
0000000000002e29         align      16                                          ; End of unwind block (FDE at 0x9f54)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     mode_adjust:
0000000000002e30         movzx      r10d, byte [rcx+1]                          ; Begin of unwind block (FDE at 0x9f78), CODE XREF=main+588
0000000000002e35         mov        eax, edi
0000000000002e37         and        eax, 0xfff
0000000000002e3c         test       r10b, r10b
0000000000002e3f         je         loc_2f90

0000000000002e45         cmp        sil, 0x1
0000000000002e49         push       r12
0000000000002e4b         push       rbp
0000000000002e4c         push       rbx
0000000000002e4d         sbb        ebx, ebx
0000000000002e4f         movzx      ebp, sil
0000000000002e53         not        ebx
0000000000002e55         xor        r11d, r11d
0000000000002e58         and        ebx, 0xc00
0000000000002e5e         jmp        loc_2e9a

                     loc_2e60:
0000000000002e60         mov        edi, r9d                                    ; CODE XREF=mode_adjust+212
0000000000002e63         or         edi, edx
0000000000002e65         not        edi
0000000000002e67         and        esi, edi
0000000000002e69         cmp        r12b, 0x2d
0000000000002e6d         je         loc_2f80

0000000000002e73         cmp        r12b, 0x3d
0000000000002e77         je         loc_2f2b

                     loc_2e7d:
0000000000002e7d         cmp        r12b, 0x2b                                  ; CODE XREF=mode_adjust+234
0000000000002e81         jne        loc_2e88

0000000000002e83         or         r11d, esi
0000000000002e86         or         eax, esi

                     loc_2e88:
0000000000002e88         add        rcx, 0x10                                   ; CODE XREF=mode_adjust+81, mode_adjust+343
0000000000002e8c         movzx      r10d, byte [rcx+1]
0000000000002e91         test       r10b, r10b
0000000000002e94         je         loc_2f4c

                     loc_2e9a:
0000000000002e9a         mov        r9d, dword [rcx+0xc]                        ; CODE XREF=mode_adjust+46, mode_adjust+278
0000000000002e9e         mov        edi, dword [rcx+4]
0000000000002ea1         mov        esi, dword [rcx+8]
0000000000002ea4         not        r9d
0000000000002ea7         and        r9d, ebx
0000000000002eaa         cmp        r10b, 0x2
0000000000002eae         je         loc_2f60

0000000000002eb4         cmp        r10b, 0x3
0000000000002eb8         jne        loc_2ef8

0000000000002eba         and        esi, eax
0000000000002ebc         mov        r10d, esi
0000000000002ebf         and        r10d, 0x124
0000000000002ec6         cmp        r10d, 0x1
0000000000002eca         sbb        r10d, r10d
0000000000002ecd         not        r10d
0000000000002ed0         and        r10d, 0x124
0000000000002ed7         mov        r12d, r10d
0000000000002eda         or         r12b, 0x92
0000000000002ede         test       sil, 0x92
0000000000002ee2         cmovne     r10d, r12d
0000000000002ee6         mov        r12d, r10d
0000000000002ee9         or         r12d, 0x49
0000000000002eed         test       sil, 0x49
0000000000002ef1         cmovne     r10d, r12d
0000000000002ef5         or         esi, r10d

                     loc_2ef8:
0000000000002ef8         mov        r10d, r9d                                   ; CODE XREF=mode_adjust+136, mode_adjust+325
0000000000002efb         test       edi, edi
0000000000002efd         movzx      r12d, byte [rcx]
0000000000002f01         not        r10d
0000000000002f04         je         loc_2e60

0000000000002f0a         and        r10d, edi
0000000000002f0d         and        esi, r10d
0000000000002f10         cmp        r12b, 0x2d
0000000000002f14         je         loc_2f80

0000000000002f16         cmp        r12b, 0x3d
0000000000002f1a         jne        loc_2e7d

0000000000002f20         not        edi
0000000000002f22         or         r9d, edi
0000000000002f25         mov        r10d, r9d
0000000000002f28         not        r10d

                     loc_2f2b:
0000000000002f2b         and        r10d, 0xfff                                 ; CODE XREF=mode_adjust+71
0000000000002f32         add        rcx, 0x10
0000000000002f36         and        eax, r9d
0000000000002f39         or         r11d, r10d
0000000000002f3c         movzx      r10d, byte [rcx+1]
0000000000002f41         or         eax, esi
0000000000002f43         test       r10b, r10b
0000000000002f46         jne        loc_2e9a

                     loc_2f4c:
0000000000002f4c         test       r8, r8                                      ; CODE XREF=mode_adjust+100
0000000000002f4f         je         loc_2f54

0000000000002f51         mov        dword [r8], r11d

                     loc_2f54:
0000000000002f54         pop        rbx                                         ; CODE XREF=mode_adjust+287
0000000000002f55         pop        rbp
0000000000002f56         pop        r12
0000000000002f58         ret
                        ; endp
0000000000002f59         align      32

                     loc_2f60:
0000000000002f60         mov        r12d, eax                                   ; CODE XREF=mode_adjust+126
0000000000002f63         mov        r10d, esi
0000000000002f66         and        r12d, 0x49
0000000000002f6a         or         r10d, 0x49
0000000000002f6e         or         r12d, ebp
0000000000002f71         cmovne     esi, r10d
0000000000002f75         jmp        loc_2ef8
0000000000002f77         align      128

                     loc_2f80:
0000000000002f80         or         r11d, esi                                   ; CODE XREF=mode_adjust+61, mode_adjust+228
0000000000002f83         not        esi
0000000000002f85         and        eax, esi
0000000000002f87         jmp        loc_2e88
0000000000002f8c         align      16

                     loc_2f90:
0000000000002f90         xor        r11d, r11d                                  ; CODE XREF=mode_adjust+15
0000000000002f93         test       r8, r8
0000000000002f96         je         loc_2f9b

0000000000002f98         mov        dword [r8], r11d

                     loc_2f9b:
0000000000002f9b         ret                                                    ; CODE XREF=mode_adjust+358
                        ; endp
0000000000002f9d         align      32                                          ; End of unwind block (FDE at 0x9f78)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000002fa0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x9fac), CODE XREF=main+77
0000000000002fa3         push       rbx
0000000000002fa4         je         loc_301d

0000000000002fa6         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
0000000000002fab         mov        rbx, rdi
0000000000002fae         call       j_strrchr                                   ; strrchr
0000000000002fb3         test       rax, rax
0000000000002fb6         je         loc_300d

0000000000002fb8         lea        r8, qword [rax+1]
0000000000002fbc         mov        rdx, r8
0000000000002fbf         sub        rdx, rbx
0000000000002fc2         cmp        rdx, 0x6
0000000000002fc6         jle        loc_300d

0000000000002fc8         lea        rsi, qword [rax-6]
0000000000002fcc         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000002fd3         mov        ecx, 0x7
0000000000002fd8         rep  cmpsb byte [rsi], byte [rdi]
0000000000002fda         seta       dl
0000000000002fdd         sbb        dl, 0x0
0000000000002fe0         test       dl, dl
0000000000002fe2         jne        loc_300d

0000000000002fe4         lea        rdi, qword [aLibs+8]                        ; 0x8de8
0000000000002feb         mov        ecx, 0x3
0000000000002ff0         mov        rsi, r8
0000000000002ff3         mov        rbx, r8
0000000000002ff6         rep  cmpsb byte [rsi], byte [rdi]
0000000000002ff8         seta       dl
0000000000002ffb         sbb        dl, 0x0
0000000000002ffe         test       dl, dl
0000000000003000         jne        loc_300d

0000000000003002         lea        rbx, qword [rax+4]
0000000000003006         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_300d:
000000000000300d         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
0000000000003014         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
000000000000301b         pop        rbx
000000000000301c         ret
                        ; endp

                     loc_301d:
000000000000301d         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
0000000000003024         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
000000000000302b         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
0000000000003030         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
0000000000003035         call       j_fwrite                                    ; fwrite
000000000000303a         call       j_abort                                     ; abort
                        ; endp
000000000000303f         align      64                                          ; End of unwind block (FDE at 0x9fac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
0000000000003040         push       rbp                                         ; Begin of unwind block (FDE at 0x9fcc), CODE XREF=sub_3870+2597, sub_3870+2619
0000000000003041         push       rbx
0000000000003042         mov        rbp, rdi
0000000000003045         mov        ebx, esi
0000000000003047         sub        rsp, 0x8
000000000000304b         call       locale_charset                              ; locale_charset
0000000000003050         movzx      edx, byte [rax]
0000000000003053         and        edx, 0xffffffdf
0000000000003056         cmp        dl, 0x55
0000000000003059         je         loc_30d0

000000000000305b         cmp        dl, 0x47
000000000000305e         je         loc_3080

                     loc_3060:
0000000000003060         lea        rax, qword [aLibs+27]                       ; 0x8dfb, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
0000000000003067         lea        rdx, qword [aLibs+29]                       ; 0x8dfd
000000000000306e         cmp        ebx, 0x9
0000000000003071         cmovne     rax, rdx
0000000000003075         add        rsp, 0x8
0000000000003079         pop        rbx
000000000000307a         pop        rbp
000000000000307b         ret
                        ; endp
000000000000307c         align      128

                     loc_3080:
0000000000003080         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
0000000000003084         and        edx, 0xffffffdf
0000000000003087         cmp        dl, 0x42
000000000000308a         jne        loc_3060

000000000000308c         cmp        byte [rax+2], 0x31
0000000000003090         jne        loc_3060

0000000000003092         cmp        byte [rax+3], 0x38
0000000000003096         jne        loc_3060

0000000000003098         cmp        byte [rax+4], 0x30
000000000000309c         jne        loc_3060

000000000000309e         cmp        byte [rax+5], 0x33
00000000000030a2         jne        loc_3060

00000000000030a4         cmp        byte [rax+6], 0x30
00000000000030a8         jne        loc_3060

00000000000030aa         cmp        byte [rax+7], 0x0
00000000000030ae         jne        loc_3060

00000000000030b0         cmp        byte [rbp], 0x60
00000000000030b4         lea        rax, qword [aLibs+20]                       ; 0x8df4
00000000000030bb         lea        rdx, qword [aLibs+24]                       ; 0x8df8
00000000000030c2         cmovne     rax, rdx
00000000000030c6         add        rsp, 0x8
00000000000030ca         pop        rbx
00000000000030cb         pop        rbp
00000000000030cc         ret
                        ; endp
00000000000030cd         align      16

                     loc_30d0:
00000000000030d0         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
00000000000030d4         and        edx, 0xffffffdf
00000000000030d7         cmp        dl, 0x54
00000000000030da         jne        loc_3060

00000000000030dc         movzx      edx, byte [rax+2]
00000000000030e0         and        edx, 0xffffffdf
00000000000030e3         cmp        dl, 0x46
00000000000030e6         jne        loc_3060

00000000000030ec         cmp        byte [rax+3], 0x2d
00000000000030f0         jne        loc_3060

00000000000030f6         cmp        byte [rax+4], 0x38
00000000000030fa         jne        loc_3060

0000000000003100         cmp        byte [rax+5], 0x0
0000000000003104         jne        loc_3060

000000000000310a         cmp        byte [rbp], 0x60
000000000000310e         lea        rax, qword [aLibs+12]                       ; 0x8dec
0000000000003115         lea        rdx, qword [aLibs+16]                       ; 0x8df0
000000000000311c         cmovne     rax, rdx
0000000000003120         add        rsp, 0x8
0000000000003124         pop        rbx
0000000000003125         pop        rbp
0000000000003126         ret
                        ; endp
0000000000003127         align      16                                          ; End of unwind block (FDE at 0x9fcc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
0000000000003130         push       r15                                         ; Begin of unwind block (FDE at 0xa010), CODE XREF=sub_3870+1165, sub_3870+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
0000000000003132         push       r14
0000000000003134         mov        r15d, r8d
0000000000003137         push       r13
0000000000003139         push       r12
000000000000313b         mov        r14, rdi
000000000000313e         push       rbp
000000000000313f         push       rbx
0000000000003140         mov        ebx, r9d
0000000000003143         mov        r13, rsi
0000000000003146         mov        rbp, rcx
0000000000003149         and        ebx, 0x2
000000000000314c         sub        rsp, 0xb8
0000000000003153         mov        rax, qword [rsp+0xe8+arg_0]
000000000000315b         mov        qword [rsp+0xe8+var_D8], rdx
0000000000003160         mov        dword [rsp+0xe8+var_E0], r8d
0000000000003165         mov        dword [rsp+0xe8+var_70], r9d
000000000000316a         mov        qword [rsp+0xe8+var_C8], rax
000000000000316f         mov        rax, qword [rsp+0xe8+arg_8]
0000000000003177         mov        qword [rsp+0xe8+var_80], rax
000000000000317c         mov        rax, qword [rsp+0xe8+arg_10]
0000000000003184         mov        qword [rsp+0xe8+var_88], rax
0000000000003189         mov        rax, qword [fs:0x28]
0000000000003192         mov        qword [rsp+0xe8+var_40], rax
000000000000319a         xor        eax, eax
000000000000319c         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
00000000000031a1         cmp        r15d, 0xa
00000000000031a5         mov        qword [rsp+0xe8+var_90], rax
00000000000031aa         ja         loc_435f

00000000000031b0         lea        rcx, qword [switch_table_8e60]              ; switch_table_8e60
00000000000031b7         mov        edx, r15d
00000000000031ba         movsxd     rax, dword [rcx+rdx*4]
00000000000031be         add        rax, rcx
00000000000031c1         jmp        rax                                         ; switch statement using table at 0x8e60, with 11 cases, 0x31c3,0x3d94,0x3df0,0x3e45,0x3e8a,0x3ec4,0x3f6a,0x3fa4,0x4198

                     loc_31c3:
00000000000031c3         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_3870+1318
00000000000031c8         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000031cd         xor        r12d, r12d
00000000000031d0         mov        qword [rsp+0xe8+var_98], 0x0
00000000000031d9         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000031de         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_31e3:
00000000000031e3         lea        rax, qword [aLibs+29]                       ; 0x8dfd, CODE XREF=sub_3870+1876
00000000000031ea         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000031f3         xor        r15d, r15d
00000000000031f6         mov        dword [rsp+0xe8+var_E0], 0x2
00000000000031fe         mov        qword [rsp+0xe8+var_A0], rax

                     loc_3203:
0000000000003203         xor        r11d, r11d                                  ; CODE XREF=sub_3870+180, sub_3870+1400, sub_3870+1488, sub_3870+1557, sub_3870+1615, sub_3870+1781, sub_3870+1839, sub_3870+2408, sub_3870+2485
0000000000003206         mov        rax, rbp
0000000000003209         mov        r8d, r12d
000000000000320c         mov        rbp, r11
000000000000320f         mov        r11, rax
0000000000003212         nop        word [rax+rax]

                     loc_3218:
0000000000003218         cmp        r11, rbp                                    ; CODE XREF=sub_3320+194
000000000000321b         setne      r12b
000000000000321f         cmp        r11, 0xffffffffffffffff
0000000000003223         jne        loc_3232

0000000000003225         mov        rax, qword [rsp+0xe8+var_D8]
000000000000322a         cmp        byte [rax+rbp], 0x0
000000000000322e         setne      r12b

                     loc_3232:
0000000000003232         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
0000000000003235         je         loc_3890

000000000000323b         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000003240         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000003245         lea        r9, qword [rdi+rbp]
0000000000003249         setne      al
000000000000324c         and        al, byte [rsp+0xe8+var_DB]
0000000000003250         mov        r10d, eax
0000000000003253         je         loc_3300

0000000000003259         mov        rax, qword [rsp+0xe8+var_D0]
000000000000325e         test       rax, rax
0000000000003261         je         loc_3690

0000000000003267         cmp        r11, 0xffffffffffffffff
000000000000326b         lea        rbx, qword [rbp+rax]
0000000000003270         jne        loc_32a0

0000000000003272         cmp        rax, 0x1
0000000000003276         jbe        loc_32a0

0000000000003278         mov        byte [rsp+0xe8+var_B0], r8b
000000000000327d         mov        byte [rsp+0xe8+var_B8], r10b
0000000000003282         mov        qword [rsp+0xe8+var_C0], r9
0000000000003287         call       j_strlen                                    ; strlen
000000000000328c         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000003292         movzx      r10d, byte [rsp+0xe8+var_B8]
0000000000003298         mov        r11, rax
000000000000329b         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_32a0:
00000000000032a0         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
00000000000032a3         mov        byte [rsp+0xe8+var_C0], r10b
00000000000032a8         ja         loc_3860

00000000000032ae         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
00000000000032b3         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
00000000000032b8         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
00000000000032bb         mov        qword [rsp+0xe8+var_A8], r11
00000000000032c0         mov        byte [rsp+0xe8+var_B0], r8b
00000000000032c5         mov        qword [rsp+0xe8+var_B8], r9
00000000000032ca         call       j_memcmp                                    ; memcmp
00000000000032cf         test       eax, eax
00000000000032d1         mov        r9, qword [rsp+0xe8+var_B8]
00000000000032d6         movzx      r8d, byte [rsp+0xe8+var_B0]
00000000000032dc         mov        r11, qword [rsp+0xe8+var_A8]
00000000000032e1         jne        loc_3860

00000000000032e7         cmp        byte [rsp+0xe8+var_D9], 0x0
00000000000032ec         movzx      r10d, byte [rsp+0xe8+var_C0]
00000000000032f2         jne        loc_4275

00000000000032f8         nop        dword [rax+rax]

                     loc_3300:
0000000000003300         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_3850+19
0000000000003304         cmp        bl, 0x7e
0000000000003307         ja         loc_3628

000000000000330d         lea        rcx, qword [switch_table_8e60+44]           ; 0x8e8c
0000000000003314         movzx      edx, bl
0000000000003317         movsxd     rax, dword [rcx+rdx*4]
000000000000331b         add        rax, rcx
000000000000331e         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3320:
0000000000003320         xor        r10d, r10d
0000000000003323         cmp        r11, 0x1
0000000000003327         setne      al
000000000000332a         cmp        r11, 0xffffffffffffffff
000000000000332e         jne        loc_333c

0000000000003330         mov        rax, qword [rsp+arg_8]
0000000000003335         cmp        byte [rax+1], 0x0
0000000000003339         setne      al

                     loc_333c:
000000000000333c         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3320+14
0000000000003341         sete       dl
0000000000003344         test       al, al
0000000000003346         je         loc_3598

                     loc_334c:
000000000000334c         xor        r12d, r12d                                  ; CODE XREF=sub_3590+11
000000000000334f         xor        eax, eax
0000000000003351         nop        dword [rax]
                        ; endp

                     loc_3358:
0000000000003358         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_3540+50, sub_3610+119
000000000000335d         jne        loc_3472

0000000000003363         test       dl, dl
0000000000003365         jne        loc_3472

                     loc_336b:
000000000000336b         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_3420+87
0000000000003370         test       rsi, rsi
0000000000003373         je         loc_3389

0000000000003375         mov        edx, ebx
0000000000003377         shr        dl, 0x5
000000000000337a         movzx      edx, dl
000000000000337d         mov        edx, dword [rsi+rdx*4]
0000000000003380         bt         edx, ebx
0000000000003383         jb         loc_34d3

                     loc_3389:
0000000000003389         test       r10b, r10b                                  ; CODE XREF=sub_3320+83, sub_3420+93
000000000000338c         jne        loc_34d3

0000000000003392         xor        eax, 0x1
0000000000003395         add        rbp, 0x1
0000000000003399         and        eax, r8d

                     loc_339c:
000000000000339c         test       al, al                                      ; CODE XREF=sub_3870+936
000000000000339e         je         loc_33c0

00000000000033a0         cmp        r13, r15
00000000000033a3         jbe        loc_33aa

00000000000033a5         mov        byte [r14+r15], 0x27

                     loc_33aa:
00000000000033aa         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3320+131
00000000000033ae         cmp        r13, rax
00000000000033b1         jbe        loc_33b9

00000000000033b3         mov        byte [r14+r15+1], 0x27

                     loc_33b9:
00000000000033b9         add        r15, 0x2                                    ; CODE XREF=sub_3320+145
00000000000033bd         xor        r8d, r8d

                     loc_33c0:
00000000000033c0         cmp        r15, r13                                    ; CODE XREF=sub_3320+126, sub_3420+275, sub_3870+869
00000000000033c3         jae        loc_33c9

00000000000033c5         mov        byte [r14+r15], bl

                     loc_33c9:
00000000000033c9         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_3320+163
00000000000033ce         add        r15, 0x1
00000000000033d2         mov        eax, 0x0
00000000000033d7         test       r12b, r12b
00000000000033da         cmove      edi, eax
00000000000033dd         mov        byte [rsp+0xe8+var_DA], dil
00000000000033e2         jmp        loc_3218
00000000000033e7         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_33f0:
00000000000033f0         xor        r10d, r10d
00000000000033f3         mov        eax, dword [rsp+arg_0]
00000000000033f7         cmp        eax, 0x2
00000000000033fa         je         loc_39b8

0000000000003400         cmp        eax, 0x5
0000000000003403         je         loc_3978

0000000000003409         cmp        eax, 0x2
000000000000340c         mov        ebx, 0x3f
0000000000003411         sete       dl
0000000000003414         xor        r12d, r12d
0000000000003417         xor        eax, eax
0000000000003419         jmp        sub_3320+56
                        ; endp
000000000000341e         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3420:
0000000000003420         xor        r10d, r10d
0000000000003423         cmp        dword [rsp+arg_0], 0x2
0000000000003428         je         loc_3930

000000000000342e         mov        byte [rsp+arg_74], r12b
0000000000003433         xor        edx, edx
0000000000003435         xor        eax, eax
0000000000003437         mov        ebx, 0x27
000000000000343c         jmp        sub_3320+56
                        ; endp
0000000000003441         nop        dword [rax]
0000000000003448         mov        edx, 0x9
000000000000344d         mov        ebx, 0x74

                     loc_3452:
0000000000003452         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_35e0+10, sub_36d0+37, sub_3810+53
0000000000003457         sete       al
000000000000345a         and        al, byte [rsp+arg_7]
000000000000345e         jne        sub_3590+30

0000000000003464         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_3420+114
0000000000003469         jne        loc_34d0

                     loc_346b:
000000000000346b         mov        ebx, edx                                    ; CODE XREF=sub_3540+18
000000000000346d         xor        r12d, r12d
0000000000003470         xor        eax, eax
                        ; endp

                     loc_3472:
0000000000003472         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_3320+61, sub_3320+69
0000000000003477         jne        loc_336b

000000000000347d         jmp        loc_3389
0000000000003482         nop        word [rax+rax]
0000000000003488         mov        edx, 0x8
000000000000348d         mov        ebx, 0x62
0000000000003492         jmp        sub_3420+68
0000000000003494         nop        dword [rax]
0000000000003498         cmp        dword [rsp+8], 0x2
000000000000349d         je         sub_3870                                    ; sub_3870
00000000000034a3         cmp        byte [rsp+0xd], 0x0
00000000000034a8         je         sub_36b0+16

                     loc_34ae:
00000000000034ae         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_36b0+8
00000000000034b3         je         loc_36c0

00000000000034b9         cmp        qword [rsp+arg_10], 0x0
00000000000034bf         jne        loc_387b

00000000000034c5         mov        ebx, 0x5c
00000000000034ca         nop        word [rax+rax]
                        ; endp

                     loc_34d0:
00000000000034d0         xor        r12d, r12d                                  ; CODE XREF=sub_3420+73, sub_3810+29
                        ; endp

                     loc_34d3:
00000000000034d3         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3320+99, sub_3320+108
00000000000034d8         sete       dl
00000000000034db         cmp        byte [rsp+0xe8+var_D9], 0x0
00000000000034e0         mov        eax, edx
00000000000034e2         jne        loc_3d38

00000000000034e8         mov        eax, r8d
00000000000034eb         xor        eax, 0x1
00000000000034ee         and        al, dl
00000000000034f0         je         loc_3521

00000000000034f2         cmp        r13, r15
00000000000034f5         jbe        loc_34fc

00000000000034f7         mov        byte [r14+r15], 0x27

                     loc_34fc:
00000000000034fc         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_3420+213
0000000000003500         cmp        r13, rdx
0000000000003503         jbe        loc_350b

0000000000003505         mov        byte [r14+r15+1], 0x24

                     loc_350b:
000000000000350b         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_3420+227
000000000000350f         cmp        r13, rdx
0000000000003512         jbe        loc_351a

0000000000003514         mov        byte [r14+r15+2], 0x27

                     loc_351a:
000000000000351a         add        r15, 0x3                                    ; CODE XREF=sub_3420+242
000000000000351e         mov        r8d, eax

                     loc_3521:
0000000000003521         cmp        r13, r15                                    ; CODE XREF=sub_3420+208
0000000000003524         jbe        loc_352b

0000000000003526         mov        byte [r14+r15], 0x5c

                     loc_352b:
000000000000352b         add        r15, 0x1                                    ; CODE XREF=sub_3420+260
000000000000352f         add        rbp, 0x1
0000000000003533         jmp        loc_33c0
0000000000003538         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3540:
0000000000003540         cmp        byte [rsp+arg_5], 0x0
0000000000003545         jne        loc_3713

000000000000354b         xor        edx, edx
000000000000354d         test       byte [rsp+arg_70], 0x1
0000000000003552         je         loc_346b

0000000000003558         add        rbp, 0x1
000000000000355c         jmp        quotearg_buffer_restyled+232
                        ; endp
0000000000003561         nop        dword [rax]
0000000000003568         cmp        dword [rsp+8], 0x2
000000000000356d         sete       dl
0000000000003570         xor        eax, eax
0000000000003572         jmp        sub_3320+56
0000000000003577         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3580:
0000000000003580         mov        edx, 0x7
0000000000003585         mov        ebx, 0x61
000000000000358a         jmp        sub_3420+68
                        ; endp
000000000000358f         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3590:
0000000000003590         cmp        dword [rsp+8], 0x2
0000000000003595         sete       dl
                        ; endp

                     loc_3598:
0000000000003598         test       rbp, rbp                                    ; CODE XREF=sub_3320+38, sub_37b0+35
000000000000359b         jne        loc_334c

00000000000035a1         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_37e0+43
00000000000035a6         and        al, dl
00000000000035a8         je         sub_3320+56

00000000000035ae         mov        rbp, r11
00000000000035b1         mov        dword [rsp+arg_0], 0x2
00000000000035b9         jmp        sub_3870+1097
                        ; endp
00000000000035be         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_35c0:
00000000000035c0         cmp        dword [rsp+arg_0], 0x2
00000000000035c5         sete       dl
00000000000035c8         xor        r12d, r12d
00000000000035cb         jmp        sub_3590+17
                        ; endp
00000000000035cd         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_35d0:
00000000000035d0         cmp        dword [rsp+arg_0], 0x2
00000000000035d5         mov        ebx, 0x20
00000000000035da         sete       dl
00000000000035dd         jmp        sub_3590+17
                        ; endp
00000000000035df         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_35e0:
00000000000035e0         mov        edx, 0xd
00000000000035e5         mov        ebx, 0x72
00000000000035ea         jmp        loc_3452
00000000000035ef         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_35f0:
00000000000035f0         mov        edx, 0xc
00000000000035f5         mov        ebx, 0x66
00000000000035fa         jmp        sub_3420+68
                        ; endp
00000000000035ff         align      512


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3600:
0000000000003600         mov        edx, 0xb
0000000000003605         mov        ebx, 0x76
000000000000360a         jmp        sub_3420+68
                        ; endp
000000000000360f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3610:
0000000000003610         mov        edx, 0xa
0000000000003615         mov        ebx, 0x6e
000000000000361a         jmp        sub_3420+50
                        ; endp
000000000000361f         align      32

                     loc_3620:
0000000000003620         xor        r10d, r10d                                  ; CODE XREF=sub_3610+135
0000000000003623         nop        dword [rax+rax]

                     loc_3628:
0000000000003628         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
000000000000362e         jne        loc_39d8

0000000000003634         mov        qword [rsp+0xe8+var_B0], r11
0000000000003639         mov        byte [rsp+0xe8+var_B8], r8b
000000000000363e         mov        byte [rsp+0xe8+var_C0], r10b
0000000000003643         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000003648         mov        rcx, qword [rax]
000000000000364b         movzx      edx, bl
000000000000364e         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000003654         movzx      r8d, byte [rsp+0xe8+var_B8]
000000000000365a         mov        r11, qword [rsp+0xe8+var_B0]
000000000000365f         mov        edi, 0x1
0000000000003664         movzx      eax, word [rcx+rdx*2]
0000000000003668         and        ax, 0x4000
000000000000366c         setne      r12b
0000000000003670         sete       al
0000000000003673         and        al, byte [rsp+0xe8+var_DB]

                     loc_3677:
0000000000003677         test       al, al                                      ; CODE XREF=sub_3870+2221
0000000000003679         jne        loc_4011

000000000000367f         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000003684         sete       dl
0000000000003687         jmp        loc_3358
000000000000368c         align      16

                     loc_3690:
0000000000003690         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
0000000000003694         cmp        bl, 0x7e
0000000000003697         ja         loc_3620

0000000000003699         lea        rcx, qword [switch_table_8e60+552]          ; 0x9088
00000000000036a0         movzx      edx, bl
00000000000036a3         movsxd     rax, dword [rcx+rdx*4]
00000000000036a7         add        rax, rcx
00000000000036aa         jmp        rax
                        ; endp
00000000000036ac         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_36b0:
00000000000036b0         xor        r10d, r10d
00000000000036b3         cmp        byte [rsp+arg_5], 0x0
00000000000036b8         jne        loc_34ae

00000000000036be         nop

                     loc_36c0:
00000000000036c0         mov        edx, 0x5c                                   ; CODE XREF=sub_3420+136, sub_3420+147
00000000000036c5         mov        ebx, 0x5c
00000000000036ca         jmp        sub_3420+68
                        ; endp
00000000000036cf         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_36d0:
00000000000036d0         mov        edx, 0xc
00000000000036d5         xor        r10d, r10d
00000000000036d8         mov        ebx, 0x66
00000000000036dd         jmp        sub_3420+68
                        ; endp
00000000000036e2         nop        word [rax+rax]
00000000000036e8         mov        edx, 0xa
00000000000036ed         xor        r10d, r10d
00000000000036f0         mov        ebx, 0x6e
00000000000036f5         jmp        sub_3420+50
00000000000036fa         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3700:
0000000000003700         mov        ebx, 0x61
0000000000003705         jmp        sub_3420+176
                        ; endp
000000000000370a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3710:
0000000000003710         xor        r10d, r10d
                        ; endp

                     loc_3713:
0000000000003713         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3540+5
0000000000003718         sete       dl
000000000000371b         cmp        byte [rsp+arg_7], 0x0
0000000000003720         jne        loc_42ba

0000000000003726         mov        eax, r8d
0000000000003729         mov        rcx, r15
000000000000372c         xor        eax, 0x1
000000000000372f         and        al, dl
0000000000003731         je         loc_3760

0000000000003733         cmp        r13, r15
0000000000003736         jbe        loc_373d

0000000000003738         mov        byte [r14+r15], 0x27

                     loc_373d:
000000000000373d         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_3710+38
0000000000003741         cmp        r13, rcx
0000000000003744         jbe        loc_374c

0000000000003746         mov        byte [r14+r15+1], 0x24

                     loc_374c:
000000000000374c         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_3710+52
0000000000003750         cmp        r13, rcx
0000000000003753         ja         loc_3d89

                     loc_3759:
0000000000003759         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_3870+1311
000000000000375d         mov        r8d, eax

                     loc_3760:
0000000000003760         cmp        r13, rcx                                    ; CODE XREF=sub_3710+33
0000000000003763         jbe        loc_376a

0000000000003765         mov        byte [r14+rcx], 0x5c

                     loc_376a:
000000000000376a         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3710+83
000000000000376f         lea        r15, qword [rcx+1]
0000000000003773         je         loc_3d79

0000000000003779         lea        rax, qword [rbp+1]
000000000000377d         cmp        rax, r11
0000000000003780         jae        loc_379b

0000000000003782         mov        rax, qword [rsp+arg_8]
0000000000003787         movzx      eax, byte [rax+rbp+1]
000000000000378c         mov        byte [rsp+arg_20], al
0000000000003790         sub        eax, 0x30
0000000000003793         cmp        al, 0x9
0000000000003795         jbe        loc_3fc9

                     loc_379b:
000000000000379b         mov        eax, r12d                                   ; CODE XREF=sub_3710+112
000000000000379e         mov        ebx, 0x30
00000000000037a3         xor        r12d, r12d
00000000000037a6         jmp        sub_3320+56
                        ; endp
00000000000037ab         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_37b0:
00000000000037b0         cmp        dword [rsp+arg_0], 0x2
00000000000037b5         mov        r12d, r10d
00000000000037b8         sete       dl
00000000000037bb         xor        r10d, r10d
00000000000037be         xor        eax, eax
00000000000037c0         jmp        sub_3320+56
                        ; endp
00000000000037c5         nop        dword [rax]
00000000000037c8         cmp        dword [rsp+8], 0x2
00000000000037cd         sete       dl
00000000000037d0         xor        r10d, r10d
00000000000037d3         jmp        sub_3590+8
00000000000037d8         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_37e0:
00000000000037e0         cmp        dword [rsp+8], 0x2
00000000000037e5         sete       dl
00000000000037e8         xor        r10d, r10d
00000000000037eb         xor        r12d, r12d
00000000000037ee         jmp        sub_3590+17
                        ; endp
00000000000037f3         nop        dword [rax+rax]
00000000000037f8         cmp        dword [rsp+8], 0x2
00000000000037fd         mov        r12d, r10d
0000000000003800         mov        ebx, 0x20
0000000000003805         sete       dl
0000000000003808         xor        r10d, r10d
000000000000380b         jmp        sub_3590+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3810:
0000000000003810         mov        edx, 0xd
0000000000003815         xor        r10d, r10d
0000000000003818         mov        ebx, 0x72
000000000000381d         jmp        sub_3420+50
                        ; endp
0000000000003822         nop        word [rax+rax]
0000000000003828         mov        ebx, 0x76
000000000000382d         jmp        sub_3420+176
0000000000003832         nop        word [rax+rax]
0000000000003838         mov        edx, 0x9
000000000000383d         xor        r10d, r10d
0000000000003840         mov        ebx, 0x74
0000000000003845         jmp        sub_3420+50
000000000000384a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3850:
0000000000003850         mov        ebx, 0x62
0000000000003855         jmp        sub_3420+176
                        ; endp
000000000000385a         nop        word [rax+rax]

                     loc_3860:
0000000000003860         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
0000000000003863         jmp        loc_3300
0000000000003868         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_3870:
0000000000003870         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3420+125
0000000000003875         jne        sub_3870+2416
                        ; endp

                     loc_387b:
000000000000387b         add        rbp, 0x1                                    ; CODE XREF=sub_3420+159
000000000000387f         mov        eax, r8d
0000000000003882         xor        r12d, r12d
0000000000003885         mov        ebx, 0x5c
000000000000388a         jmp        sub_3320+124
                        ; endp
000000000000388f         align      16

                     loc_3890:
0000000000003890         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
0000000000003895         movzx      ebx, byte [rsp+0xe8+var_D9]
000000000000389a         mov        r12d, r8d
000000000000389d         mov        rbp, r11
00000000000038a0         sete       dl
00000000000038a3         mov        eax, ebx
00000000000038a5         test       r15, r15
00000000000038a8         sete       cl
00000000000038ab         and        eax, edx
00000000000038ad         and        al, cl
00000000000038af         jne        loc_4316

00000000000038b5         mov        eax, ebx
00000000000038b7         xor        eax, 0x1
00000000000038ba         and        dl, al
00000000000038bc         je         loc_422c

00000000000038c2         cmp        byte [rsp+0xe8+var_6C], 0x0
00000000000038c7         je         loc_422a

00000000000038cd         cmp        byte [rsp+0xe8+var_DA], 0x0
00000000000038d2         jne        loc_42cd

00000000000038d8         test       r13, r13
00000000000038db         sete       al
00000000000038de         cmp        qword [rsp+0xe8+var_98], 0x0
00000000000038e4         setne      dl
00000000000038e7         and        al, dl
00000000000038e9         je         loc_430c

00000000000038ef         mov        r13, qword [rsp+0xe8+var_98]

                     loc_38f4:
00000000000038f4         lea        rbx, qword [aLibs+29]                       ; 0x8dfd, CODE XREF=sub_3870+2781
00000000000038fb         mov        byte [r14], 0x27
00000000000038ff         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000003907         mov        r15d, 0x1
000000000000390d         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003916         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000391b         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003920         mov        byte [rsp+0xe8+var_6C], al
0000000000003924         jmp        loc_3203
0000000000003929         align      16

                     loc_3930:
0000000000003930         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3420+8
0000000000003935         jne        sub_3870+2416

000000000000393b         test       r13, r13
000000000000393e         je         loc_3d40

0000000000003944         xor        edx, edx
0000000000003946         cmp        qword [rsp+arg_48], 0x0
000000000000394c         jne        loc_3d40

                     loc_3952:
0000000000003952         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_3870+1284, sub_3870+2794
0000000000003957         add        r15, 0x3
000000000000395b         xor        eax, eax
000000000000395d         mov        byte [rsp+arg_74], r12b
0000000000003962         xor        r8d, r8d
0000000000003965         mov        r13, rdx
0000000000003968         mov        ebx, 0x27
000000000000396d         jmp        sub_3320+105
                        ; endp
0000000000003972         align      8

                     loc_3978:
0000000000003978         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_33f0+19
000000000000397d         je         loc_39a0

000000000000397f         lea        rcx, qword [rbp+2]
0000000000003983         cmp        rcx, r11
0000000000003986         jae        loc_39a0

0000000000003988         mov        rax, qword [rsp+arg_8]
000000000000398d         cmp        byte [rax+rbp+1], 0x3f
0000000000003992         je         loc_4122

0000000000003998         nop        dword [rax+rax]

                     loc_39a0:
00000000000039a0         xor        edx, edx                                    ; CODE XREF=sub_3870+269, sub_3870+278, sub_3870+2233, sub_3870+2253
00000000000039a2         xor        r12d, r12d
00000000000039a5         xor        eax, eax
00000000000039a7         mov        ebx, 0x3f
00000000000039ac         jmp        sub_3320+56
                        ; endp
00000000000039b1         align      8

                     loc_39b8:
00000000000039b8         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_33f0+10
00000000000039bd         jne        loc_41e0

00000000000039c3         xor        r12d, r12d
00000000000039c6         xor        eax, eax
00000000000039c8         mov        ebx, 0x3f
00000000000039cd         jmp        sub_3320+105
                        ; endp
00000000000039d2         align      8

                     loc_39d8:
00000000000039d8         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_3610+30
00000000000039e0         cmp        r11, 0xffffffffffffffff
00000000000039e4         mov        qword [rsp+0xe8+var_48], 0x0
00000000000039f0         mov        qword [rsp+0xe8+var_C0], rax
00000000000039f5         jne        loc_3a24

00000000000039f7         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
00000000000039fc         mov        byte [rsp+0xe8+var_A8], r8b
0000000000003a01         mov        byte [rsp+0xe8+var_B0], r10b
0000000000003a06         mov        qword [rsp+0xe8+var_B8], r9
0000000000003a0b         call       j_strlen                                    ; strlen
0000000000003a10         movzx      r8d, byte [rsp+0xe8+var_A8]
0000000000003a16         movzx      r10d, byte [rsp+0xe8+var_B0]
0000000000003a1c         mov        r11, rax
0000000000003a1f         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_3a24:
0000000000003a24         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_3870+389
0000000000003a2c         xor        ecx, ecx
0000000000003a2e         mov        byte [rsp+0xe8+var_6A], bl
0000000000003a32         mov        byte [rsp+0xe8+var_6B], r8b
0000000000003a37         mov        rbx, rcx
0000000000003a3a         mov        qword [rsp+0xe8+var_60], r9
0000000000003a42         mov        qword [rsp+0xe8+var_B0], rax
0000000000003a47         mov        byte [rsp+0xe8+var_69], r10b
0000000000003a4c         mov        qword [rsp+0xe8+var_68], r15
0000000000003a54         mov        qword [rsp+0xe8+var_A8], r14
0000000000003a59         mov        qword [rsp+0xe8+var_78], r13
0000000000003a5e         mov        qword [rsp+0xe8+var_B8], r11

                     loc_3a63:
0000000000003a63         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_3870+623
0000000000003a68         lea        r14, qword [rbp+rbx]
0000000000003a6d         mov        rdx, qword [rsp+0xe8+var_B8]
0000000000003a72         mov        rcx, qword [rsp+0xe8+var_C0]
0000000000003a77         mov        rdi, qword [rsp+0xe8+var_B0]
0000000000003a7c         lea        r13, qword [rax+r14]
0000000000003a80         sub        rdx, r14
0000000000003a83         mov        rsi, r13
0000000000003a86         call       rpl_mbrtowc                                 ; rpl_mbrtowc
0000000000003a8b         test       rax, rax
0000000000003a8e         mov        r15, rax
0000000000003a91         je         loc_3ae1

0000000000003a93         cmp        rax, 0xffffffffffffffff
0000000000003a97         je         loc_40b5

0000000000003a9d         cmp        rax, 0xfffffffffffffffe
0000000000003aa1         je         loc_4041

0000000000003aa7         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000003aac         sete       al
0000000000003aaf         and        al, byte [rsp+0xe8+var_D9]
0000000000003ab3         jne        loc_3c50

                     loc_3ab9:
0000000000003ab9         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_3870+996, sub_3870+1031
0000000000003ac0         call       j_iswprint                                  ; iswprint
0000000000003ac5         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
0000000000003aca         test       eax, eax
0000000000003acc         mov        eax, 0x0
0000000000003ad1         cmove      r12d, eax
0000000000003ad5         add        rbx, r15
0000000000003ad8         call       j_mbsinit                                   ; mbsinit
0000000000003add         test       eax, eax
0000000000003adf         je         loc_3a63

                     loc_3ae1:
0000000000003ae1         mov        edx, r12d                                   ; CODE XREF=sub_3870+545
0000000000003ae4         mov        rdi, rbx
0000000000003ae7         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000003aed         xor        edx, 0x1
0000000000003af0         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003af5         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000003afb         and        dl, byte [rsp+0xe8+var_DB]
0000000000003aff         mov        r15, qword [rsp+0xe8+var_68]
0000000000003b07         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003b0c         mov        r13, qword [rsp+0xe8+var_78]
0000000000003b11         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_3b16:
0000000000003b16         cmp        rdi, 0x1                                    ; CODE XREF=sub_3870+2112, sub_3870+2168
0000000000003b1a         jbe        loc_411b

                     loc_3b20:
0000000000003b20         mov        rcx, rdi                                    ; CODE XREF=sub_3870+1961
0000000000003b23         xor        esi, esi
0000000000003b25         movzx      r9d, byte [rsp+0xe8+var_D9]
0000000000003b2b         add        rcx, rbp
0000000000003b2e         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000003b33         jmp        loc_3bee
0000000000003b38         align      64

                     loc_3b40:
0000000000003b40         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3870+896
0000000000003b45         sete       al
0000000000003b48         test       r9b, r9b
0000000000003b4b         jne        loc_4000

0000000000003b51         mov        esi, r8d
0000000000003b54         xor        esi, 0x1
0000000000003b57         and        al, sil
0000000000003b5a         je         loc_3b8b

0000000000003b5c         cmp        r13, r15
0000000000003b5f         jbe        loc_3b66

0000000000003b61         mov        byte [r14+r15], 0x27

                     loc_3b66:
0000000000003b66         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_3870+751
0000000000003b6a         cmp        r13, rsi
0000000000003b6d         jbe        loc_3b75

0000000000003b6f         mov        byte [r14+r15+1], 0x24

                     loc_3b75:
0000000000003b75         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_3870+765
0000000000003b79         cmp        r13, rsi
0000000000003b7c         jbe        loc_3b84

0000000000003b7e         mov        byte [r14+r15+2], 0x27

                     loc_3b84:
0000000000003b84         add        r15, 0x3                                    ; CODE XREF=sub_3870+780
0000000000003b88         mov        r8d, eax

                     loc_3b8b:
0000000000003b8b         cmp        r13, r15                                    ; CODE XREF=sub_3870+746
0000000000003b8e         jbe        loc_3b95

0000000000003b90         mov        byte [r14+r15], 0x5c

                     loc_3b95:
0000000000003b95         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3870+798
0000000000003b99         cmp        r13, rax
0000000000003b9c         jbe        loc_3bab

0000000000003b9e         mov        eax, ebx
0000000000003ba0         shr        al, 0x6
0000000000003ba3         add        eax, 0x30
0000000000003ba6         mov        byte [r14+r15+1], al

                     loc_3bab:
0000000000003bab         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3870+812
0000000000003baf         cmp        r13, rax
0000000000003bb2         jbe        loc_3bc4

0000000000003bb4         mov        eax, ebx
0000000000003bb6         shr        al, 0x3
0000000000003bb9         and        eax, 0x7
0000000000003bbc         add        eax, 0x30
0000000000003bbf         mov        byte [r14+r15+2], al

                     loc_3bc4:
0000000000003bc4         and        ebx, 0x7                                    ; CODE XREF=sub_3870+834
0000000000003bc7         add        rbp, 0x1
0000000000003bcb         add        r15, 0x3
0000000000003bcf         add        ebx, 0x30
0000000000003bd2         cmp        rbp, rcx
0000000000003bd5         jae        loc_33c0

0000000000003bdb         mov        esi, edx

                     loc_3bdd:
0000000000003bdd         cmp        r13, r15                                    ; CODE XREF=sub_3870+985, sub_3870+1969
0000000000003be0         jbe        loc_3be6

0000000000003be2         mov        byte [r14+r15], bl

                     loc_3be6:
0000000000003be6         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_3870+880
0000000000003bea         add        r15, 0x1

                     loc_3bee:
0000000000003bee         test       dl, dl                                      ; CODE XREF=sub_3870+707
0000000000003bf0         jne        loc_3b40

0000000000003bf6         mov        eax, esi
0000000000003bf8         xor        eax, 0x1
0000000000003bfb         and        eax, r8d
0000000000003bfe         test       r10b, r10b
0000000000003c01         je         loc_3c11

0000000000003c03         cmp        r13, r15
0000000000003c06         jbe        loc_3c0d

0000000000003c08         mov        byte [r14+r15], 0x5c

                     loc_3c0d:
0000000000003c0d         add        r15, 0x1                                    ; CODE XREF=sub_3870+918

                     loc_3c11:
0000000000003c11         add        rbp, 0x1                                    ; CODE XREF=sub_3870+913
0000000000003c15         cmp        rbp, rcx
0000000000003c18         jae        loc_339c

0000000000003c1e         test       al, al
0000000000003c20         je         loc_401e

0000000000003c26         cmp        r13, r15
0000000000003c29         jbe        loc_3c30

0000000000003c2b         mov        byte [r14+r15], 0x27

                     loc_3c30:
0000000000003c30         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3870+953
0000000000003c34         cmp        r13, rax
0000000000003c37         jbe        loc_3c3f

0000000000003c39         mov        byte [r14+r15+1], 0x27

                     loc_3c3f:
0000000000003c3f         add        r15, 0x2                                    ; CODE XREF=sub_3870+967
0000000000003c43         xor        r10d, r10d
0000000000003c46         xor        r8d, r8d
0000000000003c49         jmp        loc_3bdd
0000000000003c4b         align      16

                     loc_3c50:
0000000000003c50         cmp        r15, 0x1                                    ; CODE XREF=sub_3870+579
0000000000003c54         je         loc_3ab9

0000000000003c5a         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000003c5f         lea        rcx, qword [rdi+r15]
0000000000003c63         lea        rdx, qword [rdi+r14+1]
0000000000003c68         lea        r8, qword [rcx+r14]
0000000000003c6c         jmp        loc_3c7d
0000000000003c6e         align      16

                     loc_3c70:
0000000000003c70         add        rdx, 0x1                                    ; CODE XREF=sub_3870+1046, sub_3870+1072
0000000000003c74         cmp        r8, rdx
0000000000003c77         je         loc_3ab9

                     loc_3c7d:
0000000000003c7d         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_3870+1020
0000000000003c80         sub        ecx, 0x5b
0000000000003c83         cmp        cl, 0x21
0000000000003c86         ja         loc_3c70

0000000000003c88         mov        esi, 0x1
0000000000003c8d         shl        rsi, cl
0000000000003c90         mov        rcx, rsi
0000000000003c93         movabs     rsi, 0x20000002b
0000000000003c9d         test       rcx, rsi
0000000000003ca0         je         loc_3c70

0000000000003ca2         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003ca7         mov        r13, qword [rsp+0xe8+var_78]
0000000000003cac         mov        rbp, qword [rsp+0xe8+var_B8]
0000000000003cb1         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_3cb9:
0000000000003cb9         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_3870+1227, sub_3870+1948, sub_3870+2585, sub_3870+2734
0000000000003cbe         je         loc_3cd0

0000000000003cc0         test       al, al
0000000000003cc2         mov        eax, 0x4
0000000000003cc7         cmove      eax, dword [rsp+0xe8+var_E0]
0000000000003ccc         mov        dword [rsp+0xe8+var_E0], eax

                     loc_3cd0:
0000000000003cd0         sub        rsp, 0x8                                    ; CODE XREF=sub_3870+1102
0000000000003cd4         mov        rcx, rbp
0000000000003cd7         mov        rsi, r13
0000000000003cda         push       qword [rsp+0xf0+var_88]
0000000000003cde         push       qword [rsp+0xf8+var_80]
0000000000003ce2         mov        rdi, r14
0000000000003ce5         push       0x0
0000000000003ce7         mov        r9d, dword [rsp+0x108+var_70]
0000000000003cef         mov        r8d, dword [rsp+0x108+var_E0]
0000000000003cf4         mov        rdx, qword [rsp+0x108+var_D8]
0000000000003cf9         and        r9d, 0xfffffffd
0000000000003cfd         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003d02         add        rsp, 0x20
0000000000003d06         mov        r15, rax

                     loc_3d09:
0000000000003d09         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_3870+2549, sub_3870+2560, sub_3870+2711
0000000000003d11         xor        rbx, qword [fs:0x28]
0000000000003d1a         mov        rax, r15
0000000000003d1d         jne        loc_4323

0000000000003d23         add        rsp, 0xb8
0000000000003d2a         pop        rbx
0000000000003d2b         pop        rbp
0000000000003d2c         pop        r12
0000000000003d2e         pop        r13
0000000000003d30         pop        r14
0000000000003d32         pop        r15
0000000000003d34         ret
                        ; endp
0000000000003d35         align      8

                     loc_3d38:
0000000000003d38         mov        rbp, r11                                    ; CODE XREF=sub_3420+194
0000000000003d3b         jmp        loc_3cb9

                     loc_3d40:
0000000000003d40         cmp        r13, r15                                    ; CODE XREF=sub_3870+206, sub_3870+220
0000000000003d43         jbe        loc_3d4a

0000000000003d45         mov        byte [r14+r15], 0x27

                     loc_3d4a:
0000000000003d4a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3870+1235
0000000000003d4e         cmp        r13, rax
0000000000003d51         jbe        loc_3d59

0000000000003d53         mov        byte [r14+r15+1], 0x5c

                     loc_3d59:
0000000000003d59         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3870+1249
0000000000003d5d         cmp        r13, rax
0000000000003d60         jbe        loc_4352

0000000000003d66         mov        rdx, r13
0000000000003d69         mov        byte [r14+r15+2], 0x27
0000000000003d6f         mov        r13, qword [rsp+arg_48]
0000000000003d74         jmp        loc_3952

                     loc_3d79:
0000000000003d79         mov        eax, r12d                                   ; CODE XREF=sub_3710+99
0000000000003d7c         mov        ebx, 0x30
0000000000003d81         xor        r12d, r12d
0000000000003d84         jmp        sub_3320+105
                        ; endp

                     loc_3d89:
0000000000003d89         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_3710+67
0000000000003d8f         jmp        loc_3759

                     loc_3d94:
0000000000003d94         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
0000000000003d96         jne        loc_31c3

0000000000003d9c         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_3da1:
0000000000003da1         test       r13, r13                                    ; CODE XREF=sub_3870+2749
0000000000003da4         jne        loc_433a

0000000000003daa         lea        rax, qword [aLibs+29]                       ; 0x8dfd
0000000000003db1         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003dba         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003dbf         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003dc4         xor        r12d, r12d
0000000000003dc7         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003dcc         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003dd5         mov        qword [rsp+0xe8+var_A0], rax
0000000000003dda         mov        r15d, 0x1
0000000000003de0         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000003de8         jmp        loc_3203
0000000000003ded         align      16

                     loc_3df0:
0000000000003df0         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
0000000000003df2         jne        loc_41ed

0000000000003df8         test       r13, r13
0000000000003dfb         je         loc_4026

0000000000003e01         mov        byte [r14], 0x22
0000000000003e05         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003e0a         xor        r12d, r12d
0000000000003e0d         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003e12         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_3e1b:
0000000000003e1b         lea        rax, qword [aLibs+27]                       ; 0x8dfb, CODE XREF=sub_3870+1996
0000000000003e22         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003e27         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003e2c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003e35         mov        r15d, 0x1
0000000000003e3b         mov        qword [rsp+0xe8+var_A0], rax
0000000000003e40         jmp        loc_3203

                     loc_3e45:
0000000000003e45         lea        rax, qword [aLibs+27]                       ; case 6, 0x8dfb, CODE XREF=quotearg_buffer_restyled+145
0000000000003e4c         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003e51         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003e56         xor        r12d, r12d
0000000000003e59         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003e62         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003e67         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003e6c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003e75         xor        r15d, r15d
0000000000003e78         mov        qword [rsp+0xe8+var_A0], rax
0000000000003e7d         mov        dword [rsp+0xe8+var_E0], 0x5
0000000000003e85         jmp        loc_3203

                     loc_3e8a:
0000000000003e8a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
0000000000003e8f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003e94         xor        r12d, r12d
0000000000003e97         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003ea0         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003ea5         xor        r15d, r15d
0000000000003ea8         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003ead         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000003eb6         mov        qword [rsp+0xe8+var_A0], 0x0
0000000000003ebf         jmp        loc_3203

                     loc_3ec4:
0000000000003ec4         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
0000000000003ec9         je         loc_3f21

0000000000003ecb         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0x8dff
0000000000003ed2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003ed4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003ed9         call       j_dcgettext                                 ; dcgettext
0000000000003ede         mov        rcx, rax
0000000000003ee1         mov        qword [rsp+0xe8+var_80], rax
0000000000003ee6         lea        rax, qword [aLibs+31]                       ; 0x8dff
0000000000003eed         cmp        rcx, rax
0000000000003ef0         je         loc_428e

                     loc_3ef6:
0000000000003ef6         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x8dfd, CODE XREF=sub_3870+2607
0000000000003efd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003eff         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003f04         call       j_dcgettext                                 ; dcgettext
0000000000003f09         mov        rcx, rax
0000000000003f0c         mov        qword [rsp+0xe8+var_88], rax
0000000000003f11         lea        rax, qword [aLibs+29]                       ; 0x8dfd
0000000000003f18         cmp        rcx, rax
0000000000003f1b         je         loc_42a4

                     loc_3f21:
0000000000003f21         xor        r15d, r15d                                  ; CODE XREF=sub_3870+1625, sub_3870+2629
0000000000003f24         test       ebx, ebx
0000000000003f26         je         loc_40ed

                     loc_3f2c:
0000000000003f2c         test       ebx, ebx                                    ; CODE XREF=sub_3870+2183, sub_3870+2214
0000000000003f2e         mov        rbx, qword [rsp+0xe8+var_88]
0000000000003f33         setne      byte [rsp+0xe8+var_D9]
0000000000003f38         xor        r12d, r12d
0000000000003f3b         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
0000000000003f3e         call       j_strlen                                    ; strlen
0000000000003f43         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003f48         mov        qword [rsp+0xe8+var_D0], rax
0000000000003f4d         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003f52         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003f57         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003f60         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003f65         jmp        loc_3203

                     loc_3f6a:
0000000000003f6a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
0000000000003f6f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003f74         xor        r12d, r12d
0000000000003f77         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003f80         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003f85         xor        r15d, r15d
0000000000003f88         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000003f8d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000003f96         mov        qword [rsp+0xe8+var_A0], 0x0
0000000000003f9f         jmp        loc_3203

                     loc_3fa4:
0000000000003fa4         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000003fa9         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003fae         xor        r12d, r12d
0000000000003fb1         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003fba         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003fbf         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003fc4         jmp        loc_31e3

                     loc_3fc9:
0000000000003fc9         cmp        r13, r15                                    ; CODE XREF=sub_3710+133
0000000000003fcc         jbe        loc_3fd3

0000000000003fce         mov        byte [r14+r15], 0x30

                     loc_3fd3:
0000000000003fd3         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_3870+1884
0000000000003fd7         cmp        r13, rax
0000000000003fda         jbe        loc_3fe2

0000000000003fdc         mov        byte [r14+rcx+2], 0x30

                     loc_3fe2:
0000000000003fe2         mov        eax, r12d                                   ; CODE XREF=sub_3870+1898
0000000000003fe5         lea        r15, qword [rcx+3]
0000000000003fe9         xor        r12d, r12d
0000000000003fec         mov        ebx, 0x30
0000000000003ff1         jmp        sub_3320+56
                        ; endp
0000000000003ff6         align      16384

                     loc_4000:
0000000000004000         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_3870+731, DATA XREF=make_dir_parents+889, sub_3610+88, dirchownmod+106, dirchownmod+304
0000000000004005         mov        rbp, r11
0000000000004008         mov        byte [rsp+0xe8+var_DB], bl
000000000000400c         jmp        loc_3cb9

                     loc_4011:
0000000000004011         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_3610+105
0000000000004016         xor        r12d, r12d
0000000000004019         jmp        loc_3b20

                     loc_401e:
000000000000401e         xor        r10d, r10d                                  ; CODE XREF=sub_3870+944
0000000000004021         jmp        loc_3bdd

                     loc_4026:
0000000000004026         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_3870+1419
000000000000402f         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004034         xor        r12d, r12d
0000000000004037         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000403c         jmp        loc_3e1b

                     loc_4041:
0000000000004041         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_3870+561
0000000000004046         mov        rsi, r14
0000000000004049         mov        rcx, r13
000000000000404c         mov        rax, rbx
000000000000404f         mov        rdi, rbx
0000000000004052         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000004058         movzx      ebx, byte [rsp+0xe8+var_6A]
000000000000405d         mov        r9, qword [rsp+0xe8+var_60]
0000000000004065         cmp        rsi, r11
0000000000004068         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000406e         mov        r15, qword [rsp+0xe8+var_68]
0000000000004076         mov        r14, qword [rsp+0xe8+var_A8]
000000000000407b         mov        r13, qword [rsp+0xe8+var_78]
0000000000004080         jae        loc_40a8

0000000000004082         cmp        byte [rcx], 0x0
0000000000004085         jne        loc_4097

0000000000004087         jmp        loc_40a8
0000000000004089         align      16

                     loc_4090:
0000000000004090         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_3870+2099
0000000000004095         je         loc_40a5

                     loc_4097:
0000000000004097         add        rax, 0x1                                    ; CODE XREF=sub_3870+2069
000000000000409b         lea        rdx, qword [rbp+rax]
00000000000040a0         cmp        r11, rdx
00000000000040a3         ja         loc_4090

                     loc_40a5:
00000000000040a5         mov        rdi, rax                                    ; CODE XREF=sub_3870+2085

                     loc_40a8:
00000000000040a8         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_3870+2064, sub_3870+2071
00000000000040ad         xor        r12d, r12d
00000000000040b0         jmp        loc_3b16

                     loc_40b5:
00000000000040b5         mov        rdi, rbx                                    ; CODE XREF=sub_3870+551
00000000000040b8         movzx      r8d, byte [rsp+0xe8+var_6B]
00000000000040be         movzx      ebx, byte [rsp+0xe8+var_6A]
00000000000040c3         movzx      r10d, byte [rsp+0xe8+var_69]
00000000000040c9         mov        r15, qword [rsp+0xe8+var_68]
00000000000040d1         xor        r12d, r12d
00000000000040d4         mov        r14, qword [rsp+0xe8+var_A8]
00000000000040d9         mov        r13, qword [rsp+0xe8+var_78]
00000000000040de         mov        r11, qword [rsp+0xe8+var_B8]
00000000000040e3         movzx      edx, byte [rsp+0xe8+var_DB]
00000000000040e8         jmp        loc_3b16

                     loc_40ed:
00000000000040ed         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_3870+1718
00000000000040f2         movzx      eax, byte [rdx]
00000000000040f5         test       al, al
00000000000040f7         je         loc_3f2c

00000000000040fd         nop        dword [rax]

                     loc_4100:
0000000000004100         cmp        r13, r15                                    ; CODE XREF=sub_3870+2212
0000000000004103         jbe        loc_4109

0000000000004105         mov        byte [r14+r15], al

                     loc_4109:
0000000000004109         add        r15, 0x1                                    ; CODE XREF=sub_3870+2195
000000000000410d         movzx      eax, byte [rdx+r15]
0000000000004112         test       al, al
0000000000004114         jne        loc_4100

0000000000004116         jmp        loc_3f2c

                     loc_411b:
000000000000411b         mov        eax, edx                                    ; CODE XREF=sub_3870+682
000000000000411d         jmp        loc_3677

                     loc_4122:
0000000000004122         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_3870+290
0000000000004126         cmp        bl, 0x3e
0000000000004129         ja         loc_39a0

000000000000412f         movabs     rax, 0x7000a38200000000
0000000000004139         bt         rax, rbx
000000000000413d         jae        loc_39a0

0000000000004143         cmp        byte [rsp+arg_7], 0x0
0000000000004148         jne        loc_4332

000000000000414e         cmp        r13, r15
0000000000004151         jbe        loc_4158

0000000000004153         mov        byte [r14+r15], 0x3f

                     loc_4158:
0000000000004158         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3870+2273
000000000000415c         cmp        r13, rax
000000000000415f         jbe        loc_4167

0000000000004161         mov        byte [r14+r15+1], 0x22

                     loc_4167:
0000000000004167         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3870+2287
000000000000416b         cmp        r13, rax
000000000000416e         jbe        loc_4176

0000000000004170         mov        byte [r14+r15+2], 0x22

                     loc_4176:
0000000000004176         lea        rax, qword [r15+3]                          ; CODE XREF=sub_3870+2302
000000000000417a         cmp        r13, rax
000000000000417d         jbe        loc_4185

000000000000417f         mov        byte [r14+r15+3], 0x3f

                     loc_4185:
0000000000004185         add        r15, 0x4                                    ; CODE XREF=sub_3870+2317
0000000000004189         xor        edx, edx
000000000000418b         xor        r12d, r12d
000000000000418e         xor        eax, eax
0000000000004190         mov        rbp, rcx
0000000000004193         jmp        sub_3320+56
                        ; endp

                     loc_4198:
0000000000004198         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
000000000000419a         je         loc_4328

00000000000041a0         lea        rax, qword [aLibs+29]                       ; 0x8dfd
00000000000041a7         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000041ac         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000041b1         xor        r12d, r12d
00000000000041b4         mov        qword [rsp+0xe8+var_98], 0x0
00000000000041bd         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000041c2         mov        byte [rsp+0xe8+var_DB], 0x0
00000000000041c7         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000041d0         xor        r15d, r15d
00000000000041d3         mov        qword [rsp+0xe8+var_A0], rax
00000000000041d8         jmp        loc_3203
00000000000041dd         align      32

                     loc_41e0:
00000000000041e0         mov        rbp, r11                                    ; CODE XREF=sub_3870+333
00000000000041e3         movzx      eax, byte [rsp+arg_7]
00000000000041e8         jmp        sub_3870+1097
                        ; endp

                     loc_41ed:
00000000000041ed         lea        rax, qword [aLibs+27]                       ; 0x8dfb, CODE XREF=sub_3870+1410
00000000000041f4         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000041f9         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000041fe         xor        r12d, r12d
0000000000004201         mov        qword [rsp+0xe8+var_98], 0x0
000000000000420a         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000420f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004214         mov        qword [rsp+0xe8+var_D0], 0x1
000000000000421d         xor        r15d, r15d
0000000000004220         mov        qword [rsp+0xe8+var_A0], rax
0000000000004225         jmp        loc_3203

                     loc_422a:
000000000000422a         mov        eax, edx                                    ; CODE XREF=sub_3870+87

                     loc_422c:
000000000000422c         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_3870+76, sub_3870+2721
0000000000004231         test       rbx, rbx
0000000000004234         je         loc_4262

0000000000004236         test       al, al
0000000000004238         je         loc_4262

000000000000423a         movzx      ecx, byte [rbx]
000000000000423d         mov        rax, rbx
0000000000004240         test       cl, cl
0000000000004242         je         loc_4262

0000000000004244         mov        rdx, r15
0000000000004247         sub        rax, r15

                     loc_424a:
000000000000424a         cmp        r13, rdx                                    ; CODE XREF=sub_3870+2541
000000000000424d         jbe        loc_4253

000000000000424f         mov        byte [r14+rdx], cl

                     loc_4253:
0000000000004253         add        rdx, 0x1                                    ; CODE XREF=sub_3870+2525
0000000000004257         movzx      ecx, byte [rax+rdx]
000000000000425b         test       cl, cl
000000000000425d         jne        loc_424a

000000000000425f         mov        r15, rdx

                     loc_4262:
0000000000004262         cmp        r13, r15                                    ; CODE XREF=sub_3870+2500, sub_3870+2504, sub_3870+2514
0000000000004265         jbe        loc_3d09

000000000000426b         mov        byte [r14+r15], 0x0
0000000000004270         jmp        loc_3d09

                     loc_4275:
0000000000004275         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
000000000000427a         movzx      ebx, byte [rsp+0xe8+var_D9]
000000000000427f         mov        rbp, r11
0000000000004282         sete       al
0000000000004285         mov        byte [rsp+0xe8+var_DB], bl
0000000000004289         jmp        loc_3cb9

                     loc_428e:
000000000000428e         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_3870+1664
0000000000004292         mov        rdi, rcx
0000000000004295         call       gettext_quote.part.1                        ; gettext_quote.part.1
000000000000429a         mov        qword [rsp+0xe8+var_80], rax
000000000000429f         jmp        loc_3ef6

                     loc_42a4:
00000000000042a4         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_3870+1707
00000000000042a8         mov        rdi, rcx
00000000000042ab         call       gettext_quote.part.1                        ; gettext_quote.part.1
00000000000042b0         mov        qword [rsp+0xe8+var_88], rax
00000000000042b5         jmp        loc_3f21

                     loc_42ba:
00000000000042ba         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_3710+16
00000000000042bf         mov        rbp, r11
00000000000042c2         mov        eax, edx
00000000000042c4         mov        byte [rsp+arg_5], bl
00000000000042c8         jmp        sub_3870+1097
                        ; endp

                     loc_42cd:
00000000000042cd         sub        rsp, 0x8                                    ; CODE XREF=sub_3870+98
00000000000042d1         mov        r8d, 0x5
00000000000042d7         mov        rcx, r11
00000000000042da         push       qword [rsp+0xf0+var_88]
00000000000042de         push       qword [rsp+0xf8+var_80]
00000000000042e2         mov        rdi, r14
00000000000042e5         push       qword [rsp+0x100+var_C8]
00000000000042e9         mov        r9d, dword [rsp+0x108+var_70]
00000000000042f1         mov        rdx, qword [rsp+0x108+var_D8]
00000000000042f6         mov        rsi, qword [rsp+0x108+var_98]
00000000000042fb         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004300         add        rsp, 0x20
0000000000004304         mov        r15, rax
0000000000004307         jmp        loc_3d09

                     loc_430c:
000000000000430c         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_3870+121
0000000000004311         jmp        loc_422c

                     loc_4316:
0000000000004316         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3870+63
000000000000431e         jmp        loc_3cb9

                     loc_4323:
0000000000004323         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_3870+1197
                        ; endp

                     loc_4328:
0000000000004328         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_3870+2346
000000000000432d         jmp        loc_3da1

                     loc_4332:
0000000000004332         mov        rbp, r11                                    ; CODE XREF=sub_3870+2264
0000000000004335         jmp        sub_3870+1120
                        ; endp

                     loc_433a:
000000000000433a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_3870+1332
000000000000433f         xor        eax, eax
0000000000004341         xor        r12d, r12d
0000000000004344         mov        qword [rsp+0xe8+var_98], 0x0
000000000000434d         jmp        loc_38f4

                     loc_4352:
0000000000004352         mov        rdx, r13                                    ; CODE XREF=sub_3870+1264
0000000000004355         mov        r13, qword [rsp+arg_48]
000000000000435a         jmp        loc_3952

                     loc_435f:
000000000000435f         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
0000000000004364         align      16                                          ; End of unwind block (FDE at 0xa010)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
0000000000004370         push       r15                                         ; Begin of unwind block (FDE at 0xa088), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
0000000000004372         push       r14
0000000000004374         movsxd     r15, edi
0000000000004377         push       r13
0000000000004379         push       r12
000000000000437b         mov        r14, rdx
000000000000437e         push       rbp
000000000000437f         push       rbx
0000000000004380         mov        rbp, rcx
0000000000004383         sub        rsp, 0x28
0000000000004387         mov        qword [rsp+0x58+var_50], rsi
000000000000438c         call       j___errno_location                          ; __errno_location
0000000000004391         mov        r13, rax
0000000000004394         mov        eax, dword [rax]
0000000000004396         test       r15d, r15d
0000000000004399         mov        rbx, qword [slotvec]                        ; slotvec
00000000000043a0         mov        dword [rsp+0x58+var_40], eax
00000000000043a4         js         loc_4511

00000000000043aa         cmp        dword [nslots], r15d                        ; nslots
00000000000043b1         jg         loc_4415

00000000000043b3         cmp        r15d, 0x7fffffff
00000000000043ba         je         loc_4516

00000000000043c0         lea        r12d, dword [r15+1]
00000000000043c4         lea        rax, qword [slotvec0]                       ; slotvec0
00000000000043cb         movsxd     rsi, r12d
00000000000043ce         shl        rsi, 0x4
00000000000043d2         cmp        rbx, rax
00000000000043d5         je         loc_44f0

00000000000043db         mov        rdi, rbx                                    ; argument #1 for method xrealloc
00000000000043de         call       xrealloc                                    ; xrealloc
00000000000043e3         mov        rbx, rax
00000000000043e6         mov        qword [slotvec], rax                        ; slotvec

                     loc_43ed:
00000000000043ed         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
00000000000043f4         mov        edx, r12d
00000000000043f7         xor        esi, esi                                    ; argument "__c" for method j_memset
00000000000043f9         sub        edx, edi
00000000000043fb         shl        rdi, 0x4
00000000000043ff         movsxd     rdx, edx
0000000000004402         add        rdi, rbx                                    ; argument "__s" for method j_memset
0000000000004405         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
0000000000004409         call       j_memset                                    ; memset
000000000000440e         mov        dword [nslots], r12d                        ; nslots

                     loc_4415:
0000000000004415         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
0000000000004418         shl        r15, 0x4
000000000000441c         sub        rsp, 0x8
0000000000004420         add        rbx, r15
0000000000004423         lea        r15, qword [rbp+8]
0000000000004427         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
000000000000442b         mov        r11, qword [rbx]
000000000000442e         mov        r12, qword [rbx+8]
0000000000004432         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000004435         or         eax, 0x1
0000000000004438         mov        dword [rsp+0x60+var_3C], eax
000000000000443c         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
000000000000443f         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
0000000000004442         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000004445         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000004447         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
000000000000444a         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
000000000000444f         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
0000000000004452         mov        qword [rsp+0x78+var_48], r11
0000000000004457         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000445c         add        rsp, 0x20
0000000000004460         mov        r11, qword [rsp+0x58+var_48]
0000000000004465         cmp        r11, rax
0000000000004468         ja         loc_44d1

000000000000446a         lea        rsi, qword [rax+1]
000000000000446e         lea        rax, qword [slot0]                          ; slot0
0000000000004475         cmp        r12, rax
0000000000004478         mov        qword [rbx], rsi
000000000000447b         je         loc_448f

000000000000447d         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000004480         mov        qword [rsp+0x58+var_48], rsi
0000000000004485         call       j_free                                      ; free
000000000000448a         mov        rsi, qword [rsp+0x58+var_48]

                     loc_448f:
000000000000448f         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
0000000000004492         mov        qword [rsp+0x58+var_48], rsi
0000000000004497         call       xmalloc                                     ; xmalloc
000000000000449c         sub        rsp, 0x8
00000000000044a0         mov        qword [rbx+8], rax
00000000000044a4         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
00000000000044a8         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
00000000000044ab         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
00000000000044ae         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
00000000000044b1         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
00000000000044b3         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
00000000000044b8         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
00000000000044bb         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
00000000000044c0         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
00000000000044c5         mov        r12, rax
00000000000044c8         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000044cd         add        rsp, 0x20

                     loc_44d1:
00000000000044d1         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
00000000000044d5         mov        dword [r13], eax
00000000000044d9         add        rsp, 0x28
00000000000044dd         mov        rax, r12
00000000000044e0         pop        rbx
00000000000044e1         pop        rbp
00000000000044e2         pop        r12
00000000000044e4         pop        r13
00000000000044e6         pop        r14
00000000000044e8         pop        r15
00000000000044ea         ret
                        ; endp
00000000000044eb         align      16

                     loc_44f0:
00000000000044f0         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
00000000000044f2         call       xrealloc                                    ; xrealloc
00000000000044f7         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
00000000000044ff         mov        rbx, rax
0000000000004502         mov        qword [slotvec], rax                        ; slotvec
0000000000004509         movups     xmmword [rax], xmm0
000000000000450c         jmp        loc_43ed

                     loc_4511:
0000000000004511         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_4516:
0000000000004516         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_451b:
000000000000451b         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0xa088)
                     clone_quoting_options:
0000000000004520         push       r12                                         ; Begin of unwind block (FDE at 0xa0f4)
0000000000004522         push       rbp
0000000000004523         push       rbx
0000000000004524         mov        rbx, rdi
0000000000004527         call       j___errno_location                          ; __errno_location
000000000000452c         mov        r12d, dword [rax]
000000000000452f         mov        rbp, rax
0000000000004532         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000004539         test       rbx, rbx
000000000000453c         mov        esi, 0x38
0000000000004541         cmove      rbx, rax
0000000000004545         mov        rdi, rbx
0000000000004548         call       xmemdup                                     ; xmemdup
000000000000454d         mov        dword [rbp], r12d
0000000000004551         pop        rbx
0000000000004552         pop        rbp
0000000000004553         pop        r12
0000000000004555         ret
                        ; endp
0000000000004556         align      32                                          ; End of unwind block (FDE at 0xa0f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
0000000000004560         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xa120), default_quoting_options
0000000000004567         test       rdi, rdi
000000000000456a         cmove      rdi, rax
000000000000456e         mov        eax, dword [rdi]
0000000000004570         ret
                        ; endp
0000000000004571         align      128                                         ; End of unwind block (FDE at 0xa120)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
0000000000004580         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xa134), default_quoting_options
0000000000004587         test       rdi, rdi
000000000000458a         cmove      rdi, rax
000000000000458e         mov        dword [rdi], esi
0000000000004590         ret
                        ; endp
0000000000004591         align      32                                          ; End of unwind block (FDE at 0xa134)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
00000000000045a0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xa148), default_quoting_options
00000000000045a7         test       rdi, rdi
00000000000045aa         mov        ecx, esi
00000000000045ac         cmove      rdi, rax
00000000000045b0         mov        eax, esi
00000000000045b2         and        ecx, 0x1f
00000000000045b5         shr        al, 0x5
00000000000045b8         movzx      eax, al
00000000000045bb         lea        rdi, qword [rdi+rax*4+8]
00000000000045c0         mov        esi, dword [rdi]
00000000000045c2         mov        eax, esi
00000000000045c4         shr        eax, cl
00000000000045c6         xor        edx, eax
00000000000045c8         and        eax, 0x1
00000000000045cb         and        edx, 0x1
00000000000045ce         shl        edx, cl
00000000000045d0         xor        edx, esi
00000000000045d2         mov        dword [rdi], edx
00000000000045d4         ret
                        ; endp
00000000000045d5         align      32                                          ; End of unwind block (FDE at 0xa148)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
00000000000045e0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xa15c), default_quoting_options
00000000000045e7         test       rdi, rdi
00000000000045ea         cmove      rdi, rax
00000000000045ee         mov        eax, dword [rdi+4]
00000000000045f1         mov        dword [rdi+4], esi
00000000000045f4         ret
                        ; endp
00000000000045f5         align      512                                         ; End of unwind block (FDE at 0xa15c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
0000000000004600         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xa170), default_quoting_options
0000000000004607         test       rdi, rdi
000000000000460a         cmove      rdi, rax
000000000000460e         test       rsi, rsi
0000000000004611         mov        dword [rdi], 0xa
0000000000004617         je         loc_4627

0000000000004619         test       rdx, rdx
000000000000461c         je         loc_4627

000000000000461e         mov        qword [rdi+0x28], rsi
0000000000004622         mov        qword [rdi+0x30], rdx
0000000000004626         ret
                        ; endp

                     loc_4627:
0000000000004627         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
000000000000462b         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
0000000000004630         push       r15                                         ; End of unwind block (FDE at 0xa170), Begin of unwind block (FDE at 0xa184)
0000000000004632         push       r14
0000000000004634         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000463b         push       r13
000000000000463d         push       r12
000000000000463f         mov        r13, rdi
0000000000004642         push       rbp
0000000000004643         push       rbx
0000000000004644         mov        rbx, r8
0000000000004647         mov        r14, rsi
000000000000464a         mov        r15, rdx
000000000000464d         sub        rsp, 0x18
0000000000004651         test       r8, r8
0000000000004654         cmove      rbx, rax
0000000000004658         mov        qword [rsp+0x48+var_40], rcx
000000000000465d         call       j___errno_location                          ; __errno_location
0000000000004662         mov        r12d, dword [rax]
0000000000004665         mov        rbp, rax
0000000000004668         lea        rax, qword [rbx+8]
000000000000466c         sub        rsp, 0x8
0000000000004670         mov        r9d, dword [rbx+4]
0000000000004674         push       qword [rbx+0x30]
0000000000004677         mov        r8d, dword [rbx]
000000000000467a         push       qword [rbx+0x28]
000000000000467d         mov        rdx, r15
0000000000004680         push       rax
0000000000004681         mov        rcx, qword [rsp+0x68+var_40]
0000000000004686         mov        rsi, r14
0000000000004689         mov        rdi, r13
000000000000468c         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004691         mov        dword [rbp], r12d
0000000000004695         add        rsp, 0x38
0000000000004699         pop        rbx
000000000000469a         pop        rbp
000000000000469b         pop        r12
000000000000469d         pop        r13
000000000000469f         pop        r14
00000000000046a1         pop        r15
00000000000046a3         ret
                        ; endp
00000000000046a4         align      16                                          ; End of unwind block (FDE at 0xa184)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
00000000000046b0         push       r15                                         ; Begin of unwind block (FDE at 0xa1d8), CODE XREF=quotearg_alloc+5
00000000000046b2         push       r14
00000000000046b4         lea        rax, qword [default_quoting_options]        ; default_quoting_options
00000000000046bb         push       r13
00000000000046bd         push       r12
00000000000046bf         mov        r12, rdx
00000000000046c2         push       rbp
00000000000046c3         push       rbx
00000000000046c4         mov        rbx, rcx
00000000000046c7         mov        r14, rdi
00000000000046ca         mov        r15, rsi
00000000000046cd         sub        rsp, 0x38
00000000000046d1         test       rcx, rcx
00000000000046d4         cmove      rbx, rax
00000000000046d8         xor        ebp, ebp
00000000000046da         call       j___errno_location                          ; __errno_location
00000000000046df         test       r12, r12
00000000000046e2         mov        r13, rax
00000000000046e5         mov        eax, dword [rax]
00000000000046e7         sete       bpl
00000000000046eb         or         ebp, dword [rbx+4]
00000000000046ee         lea        r10, qword [rbx+8]
00000000000046f2         sub        rsp, 0x8
00000000000046f6         mov        r8d, dword [rbx]
00000000000046f9         mov        rcx, r15
00000000000046fc         mov        dword [rsp+0x70+var_5C], eax
0000000000004700         push       qword [rbx+0x30]
0000000000004703         mov        rdx, r14
0000000000004706         push       qword [rbx+0x28]
0000000000004709         push       r10
000000000000470b         xor        esi, esi
000000000000470d         mov        r9d, ebp
0000000000004710         xor        edi, edi
0000000000004712         mov        qword [rsp+0x88+var_48], r10
0000000000004717         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000471c         lea        rsi, qword [rax+1]
0000000000004720         mov        qword [rsp+0x88+var_40], rax
0000000000004725         add        rsp, 0x20
0000000000004729         mov        rdi, rsi
000000000000472c         mov        qword [rsp+0x68+var_50], rsi
0000000000004731         call       xmalloc                                     ; xmalloc
0000000000004736         mov        qword [rsp+0x68+var_58], rax
000000000000473b         sub        rsp, 0x8
000000000000473f         push       qword [rbx+0x30]
0000000000004742         push       qword [rbx+0x28]
0000000000004745         mov        r10, qword [rsp+0x80+var_48]
000000000000474a         mov        r9d, ebp
000000000000474d         mov        r8d, dword [rbx]
0000000000004750         mov        rcx, r15
0000000000004753         mov        rdx, r14
0000000000004756         mov        rdi, rax
0000000000004759         push       r10
000000000000475b         mov        rsi, qword [rsp+0x88+var_50]
0000000000004760         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004765         mov        eax, dword [rsp+0x88+var_5C]
0000000000004769         add        rsp, 0x20
000000000000476d         test       r12, r12
0000000000004770         mov        dword [r13], eax
0000000000004774         je         loc_477f

0000000000004776         mov        r11, qword [rsp+0x68+var_40]
000000000000477b         mov        qword [r12], r11

                     loc_477f:
000000000000477f         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
0000000000004784         add        rsp, 0x38
0000000000004788         pop        rbx
0000000000004789         pop        rbp
000000000000478a         pop        r12
000000000000478c         pop        r13
000000000000478e         pop        r14
0000000000004790         pop        r15
0000000000004792         ret
                        ; endp
0000000000004793         align      32                                          ; End of unwind block (FDE at 0xa1d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
00000000000047a0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0xa244)
00000000000047a3         xor        edx, edx
00000000000047a5         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
00000000000047aa         align      16                                          ; End of unwind block (FDE at 0xa244)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
00000000000047b0         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0xa258), nslots
00000000000047b6         push       r12
00000000000047b8         mov        r12, qword [slotvec]                        ; slotvec
00000000000047bf         push       rbp
00000000000047c0         push       rbx
00000000000047c1         cmp        eax, 0x1
00000000000047c4         jle        loc_47f1

00000000000047c6         sub        eax, 0x2
00000000000047c9         lea        rbx, qword [r12+0x18]
00000000000047ce         shl        rax, 0x4
00000000000047d2         lea        rbp, qword [r12+rax+0x28]
00000000000047d7         nop        word [rax+rax]

                     loc_47e0:
00000000000047e0         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
00000000000047e3         add        rbx, 0x10
00000000000047e7         call       j_free                                      ; free
00000000000047ec         cmp        rbx, rbp
00000000000047ef         jne        loc_47e0

                     loc_47f1:
00000000000047f1         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
00000000000047f6         lea        rbx, qword [slot0]                          ; slot0
00000000000047fd         cmp        rdi, rbx
0000000000004800         je         loc_4819

0000000000004802         call       j_free                                      ; free
0000000000004807         mov        qword [slotvec0], 0x100                     ; slotvec0
0000000000004812         mov        qword [slotvec0+8], rbx                     ; 0x20c078

                     loc_4819:
0000000000004819         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
0000000000004820         cmp        r12, rbx
0000000000004823         je         loc_4834

0000000000004825         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000004828         call       j_free                                      ; free
000000000000482d         mov        qword [slotvec], rbx                        ; slotvec

                     loc_4834:
0000000000004834         pop        rbx                                         ; CODE XREF=quotearg_free+115
0000000000004835         mov        dword [nslots], 0x1                         ; nslots
000000000000483f         pop        rbp
0000000000004840         pop        r12
0000000000004842         ret
                        ; endp
0000000000004843         align      16                                          ; End of unwind block (FDE at 0xa258)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
0000000000004850         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xa284), default_quoting_options
0000000000004857         mov        rdx, 0xffffffffffffffff
000000000000485e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004863         align      16                                          ; End of unwind block (FDE at 0xa284)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
0000000000004870         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xa298), default_quoting_options
0000000000004877         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000487c         align      128                                         ; End of unwind block (FDE at 0xa298)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
0000000000004880         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xa2ac), default_quoting_options
0000000000004887         mov        rsi, rdi
000000000000488a         mov        rdx, 0xffffffffffffffff
0000000000004891         xor        edi, edi
0000000000004893         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004898         align      32                                          ; End of unwind block (FDE at 0xa2ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
00000000000048a0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xa2c0), default_quoting_options
00000000000048a7         mov        rdx, rsi
00000000000048aa         mov        rsi, rdi
00000000000048ad         xor        edi, edi
00000000000048af         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000048b4         align      64                                          ; End of unwind block (FDE at 0xa2c0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
00000000000048c0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xa2d4)
00000000000048c4         mov        rax, rdx
00000000000048c7         mov        rdx, qword [fs:0x28]
00000000000048d0         mov        qword [rsp+0x48+var_10], rdx
00000000000048d5         xor        edx, edx
00000000000048d7         cmp        esi, 0xa
00000000000048da         je         loc_4944

00000000000048dc         mov        dword [rsp+0x48+var_48], esi
00000000000048df         mov        rcx, rsp
00000000000048e2         mov        rdx, 0xffffffffffffffff
00000000000048e9         mov        rsi, rax
00000000000048ec         mov        qword [rsp+0x48+var_44], 0x0
00000000000048f5         mov        qword [rsp+0x48+var_3C], 0x0
00000000000048fe         mov        qword [rsp+0x48+var_34], 0x0
0000000000004907         mov        qword [rsp+0x48+var_2C], 0x0
0000000000004910         mov        qword [rsp+0x48+var_24], 0x0
0000000000004919         mov        qword [rsp+0x48+var_1C], 0x0
0000000000004922         mov        dword [rsp+0x48+var_14], 0x0
000000000000492a         call       quotearg_n_options                          ; quotearg_n_options
000000000000492f         mov        rcx, qword [rsp+0x48+var_10]
0000000000004934         xor        rcx, qword [fs:0x28]
000000000000493d         jne        loc_4949

000000000000493f         add        rsp, 0x48
0000000000004943         ret
                        ; endp

                     loc_4944:
0000000000004944         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_4949:
0000000000004949         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
000000000000494e         align      16                                          ; End of unwind block (FDE at 0xa2d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
0000000000004950         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xa2f0), CODE XREF=quotearg_style_mem+10
0000000000004954         mov        rax, rdx
0000000000004957         mov        rdx, rcx
000000000000495a         mov        rcx, qword [fs:0x28]
0000000000004963         mov        qword [rsp+0x48+var_10], rcx
0000000000004968         xor        ecx, ecx
000000000000496a         cmp        esi, 0xa
000000000000496d         je         loc_49d0

000000000000496f         mov        dword [rsp+0x48+var_48], esi
0000000000004972         mov        rcx, rsp
0000000000004975         mov        rsi, rax
0000000000004978         mov        qword [rsp+0x48+var_44], 0x0
0000000000004981         mov        qword [rsp+0x48+var_3C], 0x0
000000000000498a         mov        qword [rsp+0x48+var_34], 0x0
0000000000004993         mov        qword [rsp+0x48+var_2C], 0x0
000000000000499c         mov        qword [rsp+0x48+var_24], 0x0
00000000000049a5         mov        qword [rsp+0x48+var_1C], 0x0
00000000000049ae         mov        dword [rsp+0x48+var_14], 0x0
00000000000049b6         call       quotearg_n_options                          ; quotearg_n_options
00000000000049bb         mov        rdx, qword [rsp+0x48+var_10]
00000000000049c0         xor        rdx, qword [fs:0x28]
00000000000049c9         jne        loc_49d5

00000000000049cb         add        rsp, 0x48
00000000000049cf         ret
                        ; endp

                     loc_49d0:
00000000000049d0         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_49d5:
00000000000049d5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
00000000000049da         align      32                                          ; End of unwind block (FDE at 0xa2f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
00000000000049e0         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0xa30c), CODE XREF=announce_mkdir.part.4+12
00000000000049e3         mov        esi, edi
00000000000049e5         xor        edi, edi
00000000000049e7         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
00000000000049ec         align      16                                          ; End of unwind block (FDE at 0xa30c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
00000000000049f0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0xa320)
00000000000049f3         mov        rdx, rsi
00000000000049f6         mov        esi, edi
00000000000049f8         xor        edi, edi
00000000000049fa         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
00000000000049ff         align      512                                         ; End of unwind block (FDE at 0xa320)

                     quotearg_char_mem:
0000000000004a00         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xa334), CODE XREF=quotearg_char+11
0000000000004a04         mov        ecx, edx
0000000000004a06         mov        rax, qword [fs:0x28]
0000000000004a0f         mov        qword [rsp+0x48+var_10], rax
0000000000004a14         xor        eax, eax
0000000000004a16         mov        rax, qword [qword_20c230]                   ; qword_20c230
0000000000004a1d         mov        r8, rsp
0000000000004a20         and        ecx, 0x1f
0000000000004a23         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000004a2b         mov        qword [rsp+0x48+var_18], rax
0000000000004a30         mov        eax, edx
0000000000004a32         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000004a36         shr        al, 0x5
0000000000004a39         movzx      eax, al
0000000000004a3c         lea        r9, qword [r8+rax*4+8]
0000000000004a41         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20c210
0000000000004a49         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000004a4e         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20c220
0000000000004a56         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000004a5b         mov        edx, dword [r9]
0000000000004a5e         mov        eax, edx
0000000000004a60         shr        eax, cl
0000000000004a62         not        eax
0000000000004a64         and        eax, 0x1
0000000000004a67         shl        eax, cl
0000000000004a69         mov        rcx, r8
0000000000004a6c         xor        eax, edx
0000000000004a6e         mov        rdx, rsi
0000000000004a71         mov        rsi, rdi
0000000000004a74         mov        dword [r9], eax
0000000000004a77         xor        edi, edi
0000000000004a79         call       quotearg_n_options                          ; quotearg_n_options
0000000000004a7e         mov        rsi, qword [rsp+0x48+var_10]
0000000000004a83         xor        rsi, qword [fs:0x28]
0000000000004a8c         jne        loc_4a93

0000000000004a8e         add        rsp, 0x48
0000000000004a92         ret
                        ; endp

                     loc_4a93:
0000000000004a93         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
0000000000004a98         align      32                                          ; End of unwind block (FDE at 0xa334)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
0000000000004aa0         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0xa350)
0000000000004aa4         mov        rsi, 0xffffffffffffffff
0000000000004aab         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
0000000000004ab0         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0xa350), Begin of unwind block (FDE at 0xa364), CODE XREF=close_stdout+101
0000000000004ab5         mov        rsi, 0xffffffffffffffff
0000000000004abc         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000004ac1         align      16                                          ; End of unwind block (FDE at 0xa364)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
0000000000004ad0         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0xa378)
0000000000004ad5         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000004ada         align      32                                          ; End of unwind block (FDE at 0xa378)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
0000000000004ae0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xa38c)
0000000000004ae4         mov        rax, rdx
0000000000004ae7         mov        rdx, qword [fs:0x28]
0000000000004af0         mov        qword [rsp+0x48+var_10], rdx
0000000000004af5         xor        edx, edx
0000000000004af7         cmp        esi, 0xa
0000000000004afa         je         loc_4b64

0000000000004afc         mov        dword [rsp+0x48+var_48], esi
0000000000004aff         mov        rcx, rsp
0000000000004b02         mov        rdx, 0xffffffffffffffff
0000000000004b09         mov        rsi, rax
0000000000004b0c         mov        qword [rsp+0x48+var_44], 0x0
0000000000004b15         mov        qword [rsp+0x48+var_3C], 0x4000000
0000000000004b1e         mov        qword [rsp+0x48+var_34], 0x0
0000000000004b27         mov        qword [rsp+0x48+var_2C], 0x0
0000000000004b30         mov        qword [rsp+0x48+var_24], 0x0
0000000000004b39         mov        qword [rsp+0x48+var_1C], 0x0
0000000000004b42         mov        dword [rsp+0x48+var_14], 0x0
0000000000004b4a         call       quotearg_n_options                          ; quotearg_n_options
0000000000004b4f         mov        rcx, qword [rsp+0x48+var_10]
0000000000004b54         xor        rcx, qword [fs:0x28]
0000000000004b5d         jne        loc_4b69

0000000000004b5f         add        rsp, 0x48
0000000000004b63         ret
                        ; endp

                     loc_4b64:
0000000000004b64         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_4b69:
0000000000004b69         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
0000000000004b6e         align      16                                          ; End of unwind block (FDE at 0xa38c)

                     quotearg_n_custom_mem:
0000000000004b70         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xa3a8), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
0000000000004b74         mov        r9, rcx
0000000000004b77         mov        rcx, qword [qword_20c230]                   ; qword_20c230
0000000000004b7e         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000004b86         mov        rax, qword [fs:0x28]
0000000000004b8f         mov        qword [rsp+0x48+var_10], rax
0000000000004b94         xor        eax, eax
0000000000004b96         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000004b9a         test       rsi, rsi
0000000000004b9d         mov        qword [rsp+0x48+var_18], rcx
0000000000004ba2         mov        dword [rsp+0x48+var_48], 0xa
0000000000004ba9         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20c210
0000000000004bb1         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000004bb6         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20c220
0000000000004bbe         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000004bc3         je         loc_4bf7

0000000000004bc5         test       rdx, rdx
0000000000004bc8         je         loc_4bf7

0000000000004bca         mov        qword [rsp+0x48+var_20], rsi
0000000000004bcf         mov        qword [rsp+0x48+var_18], rdx
0000000000004bd4         mov        rcx, rsp
0000000000004bd7         mov        rdx, r8
0000000000004bda         mov        rsi, r9
0000000000004bdd         call       quotearg_n_options                          ; quotearg_n_options
0000000000004be2         mov        rdi, qword [rsp+0x48+var_10]
0000000000004be7         xor        rdi, qword [fs:0x28]
0000000000004bf0         jne        loc_4bfc

0000000000004bf2         add        rsp, 0x48
0000000000004bf6         ret
                        ; endp

                     loc_4bf7:
0000000000004bf7         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_4bfc:
0000000000004bfc         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
0000000000004c01         align      16                                          ; End of unwind block (FDE at 0xa3a8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom:
0000000000004c10         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0xa3c4)
0000000000004c17         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
0000000000004c1c         align      32                                          ; End of unwind block (FDE at 0xa3c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
0000000000004c20         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0xa3d8)
0000000000004c23         mov        r8, 0xffffffffffffffff
0000000000004c2a         mov        rdx, rsi
0000000000004c2d         mov        rsi, rdi
0000000000004c30         xor        edi, edi
0000000000004c32         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004c37         align      64                                          ; End of unwind block (FDE at 0xa3d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
0000000000004c40         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0xa3ec)
0000000000004c43         mov        rcx, rdx
0000000000004c46         mov        rdx, rsi
0000000000004c49         mov        rsi, rdi
0000000000004c4c         xor        edi, edi
0000000000004c4e         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004c53         align      32                                          ; End of unwind block (FDE at 0xa3ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
0000000000004c60         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xa400), quote_quoting_options
0000000000004c67         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004c6c         align      16                                          ; End of unwind block (FDE at 0xa400)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
0000000000004c70         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xa414), quote_quoting_options
0000000000004c77         mov        rdx, rsi
0000000000004c7a         mov        rsi, rdi
0000000000004c7d         xor        edi, edi
0000000000004c7f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004c84         align      16                                          ; End of unwind block (FDE at 0xa414)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
0000000000004c90         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xa428), quote_quoting_options
0000000000004c97         mov        rdx, 0xffffffffffffffff
0000000000004c9e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004ca3         align      16                                          ; End of unwind block (FDE at 0xa428)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
0000000000004cb0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xa43c), quote_quoting_options, CODE XREF=main+631, make_dir_parents+330, make_dir_parents+417, make_dir_parents+778
0000000000004cb7         mov        rsi, rdi
0000000000004cba         mov        rdx, 0xffffffffffffffff
0000000000004cc1         xor        edi, edi
0000000000004cc3         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004cc8         align      16                                          ; End of unwind block (FDE at 0xa43c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     savewd_init:
0000000000004cd0         mov        dword [rdi], 0x0                            ; Begin of unwind block (FDE at 0xa454)
0000000000004cd6         ret
                        ; endp
0000000000004cd7         align      32                                          ; End of unwind block (FDE at 0xa454)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     savewd_errno:
0000000000004ce0         xor        eax, eax                                    ; Begin of unwind block (FDE at 0xa468)
0000000000004ce2         cmp        dword [rdi], 0x4
0000000000004ce5         je         loc_4cf0

0000000000004ce7         ret
                        ; endp
0000000000004ce9         align      16

                     loc_4cf0:
0000000000004cf0         mov        eax, dword [rdi+4]                          ; CODE XREF=savewd_errno+5
0000000000004cf3         ret
                        ; endp
0000000000004cf4         align      256                                         ; End of unwind block (FDE at 0xa468)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     savewd_chdir:
0000000000004d00         test       rcx, rcx                                    ; Begin of unwind block (FDE at 0xa47c), CODE XREF=make_dir_parents+653, mkancesdirs+169
0000000000004d03         push       r14
0000000000004d05         mov        r14d, edx
0000000000004d08         push       r13
0000000000004d0a         mov        r13, rsi
0000000000004d0d         push       r12
0000000000004d0f         mov        r12, rdi
0000000000004d12         push       rbp
0000000000004d13         mov        rbp, rcx
0000000000004d16         push       rbx
0000000000004d17         je         loc_4e38

0000000000004d1d         mov        esi, edx
0000000000004d1f         mov        rdi, r13
0000000000004d22         shl        esi, 0x11
0000000000004d25         and        esi, 0x20000
0000000000004d2b         or         esi, 0x10900
0000000000004d31         call       j___open_2                                  ; __open_2
0000000000004d36         mov        dword [rbp], eax
0000000000004d39         mov        ebx, eax
0000000000004d3b         call       j___errno_location                          ; __errno_location
0000000000004d40         mov        eax, dword [rax]
0000000000004d42         mov        dword [rbp+4], eax

                     loc_4d45:
0000000000004d45         test       ebx, ebx                                    ; CODE XREF=savewd_chdir+353
0000000000004d47         js         loc_4d88

0000000000004d49         and        r14d, 0x2
0000000000004d4d         je         loc_4d96

                     loc_4d4f:
0000000000004d4f         test       rbp, rbp                                    ; case 5, CODE XREF=savewd_chdir+275, savewd_chdir+424, savewd_chdir+439
0000000000004d52         sete       al
0000000000004d55         xor        r14d, r14d

                     loc_4d58:
0000000000004d58         test       ebx, ebx                                    ; CODE XREF=savewd_chdir+374, savewd_chdir+567
0000000000004d5a         js         loc_4d76

0000000000004d5c         test       al, al
0000000000004d5e         je         loc_4d76

0000000000004d60         call       j___errno_location                          ; __errno_location
0000000000004d65         mov        r12d, dword [rax]
0000000000004d68         mov        rbp, rax
0000000000004d6b         mov        edi, ebx                                    ; argument "__fd" for method j_close
0000000000004d6d         call       j_close                                     ; close
0000000000004d72         mov        dword [rbp], r12d

                     loc_4d76:
0000000000004d76         pop        rbx                                         ; CODE XREF=savewd_chdir+90, savewd_chdir+94, savewd_chdir+614
0000000000004d77         mov        eax, r14d
0000000000004d7a         pop        rbp
0000000000004d7b         pop        r12
0000000000004d7d         pop        r13
0000000000004d7f         pop        r14
0000000000004d81         ret
                        ; endp
0000000000004d82         align      8

                     loc_4d88:
0000000000004d88         call       j___errno_location                          ; __errno_location, CODE XREF=savewd_chdir+71
0000000000004d8d         cmp        dword [rax], 0xd
0000000000004d90         jne        loc_4f60

                     loc_4d96:
0000000000004d96         mov        ecx, dword [r12]                            ; CODE XREF=savewd_chdir+77, savewd_chdir+320
0000000000004d9a         cmp        ecx, 0x5
0000000000004d9d         ja         loc_4f8a

0000000000004da3         mov        eax, 0x1
0000000000004da8         shl        rax, cl
0000000000004dab         test       al, 0x36
0000000000004dad         jne        loc_4de4

0000000000004daf         test       al, 0x8
0000000000004db1         jne        loc_4e80

0000000000004db7         test       ecx, ecx
0000000000004db9         jne        loc_4f8a

0000000000004dbf         lea        rdi, qword [aSS+7]                          ; 0x8cac
0000000000004dc6         xor        esi, esi
0000000000004dc8         xor        eax, eax
0000000000004dca         call       open_safer                                  ; open_safer
0000000000004dcf         test       eax, eax
0000000000004dd1         js         loc_4ee0

0000000000004dd7         mov        dword [r12], 0x1
0000000000004ddf         mov        dword [r12+4], eax

                     loc_4de4:
0000000000004de4         test       ebx, ebx                                    ; CODE XREF=savewd_chdir+173, savewd_chdir+510, savewd_chdir+550, savewd_chdir+593
0000000000004de6         js         loc_4e18

                     loc_4de8:
0000000000004de8         mov        edi, ebx                                    ; argument "__fd" for method j_fchdir, CODE XREF=savewd_chdir+399
0000000000004dea         call       j_fchdir                                    ; fchdir
0000000000004def         test       eax, eax
0000000000004df1         mov        r14d, eax
0000000000004df4         jne        loc_4e70

                     loc_4df6:
0000000000004df6         cmp        dword [r12], 0x5                            ; CODE XREF=savewd_chdir+293
0000000000004dfb         ja         loc_4f6b

0000000000004e01         mov        eax, dword [r12]
0000000000004e05         lea        rdx, qword [switch_table_9330]              ; switch_table_9330
0000000000004e0c         movsxd     rax, dword [rdx+rax*4]
0000000000004e10         add        rax, rdx
0000000000004e13         jmp        rax                                         ; switch statement using table at 0x9330, with 6 cases, 0x4d4f,0x4ea0,0x4eb0,0x4f6b
0000000000004e15         align      8

                     loc_4e18:
0000000000004e18         mov        rdi, r13                                    ; argument "__path" for method j_chdir, CODE XREF=savewd_chdir+230, savewd_chdir+405
0000000000004e1b         call       j_chdir                                     ; chdir
0000000000004e20         test       eax, eax
0000000000004e22         mov        r14d, eax
0000000000004e25         je         loc_4df6

0000000000004e27         pop        rbx
0000000000004e28         mov        eax, r14d
0000000000004e2b         pop        rbp
0000000000004e2c         pop        r12
0000000000004e2e         pop        r13
0000000000004e30         pop        r14
0000000000004e32         ret
                        ; endp
0000000000004e33         align      8

                     loc_4e38:
0000000000004e38         test       dl, 0x1                                     ; CODE XREF=savewd_chdir+23
0000000000004e3b         mov        ebx, 0xffffffff
0000000000004e40         je         loc_4d96

0000000000004e46         mov        esi, edx
0000000000004e48         mov        rdi, r13
0000000000004e4b         shl        esi, 0x11
0000000000004e4e         and        esi, 0x20000
0000000000004e54         or         esi, 0x10900
0000000000004e5a         call       j___open_2                                  ; __open_2
0000000000004e5f         mov        ebx, eax
0000000000004e61         jmp        loc_4d45
0000000000004e66         align      16

                     loc_4e70:
0000000000004e70         test       rbp, rbp                                    ; CODE XREF=savewd_chdir+244
0000000000004e73         sete       al
0000000000004e76         jmp        loc_4d58
0000000000004e7b         align      128

                     loc_4e80:
0000000000004e80         mov        edx, dword [r12+4]                          ; CODE XREF=savewd_chdir+177
0000000000004e85         test       edx, edx
0000000000004e87         js         loc_4f19

0000000000004e8d         test       ebx, ebx
0000000000004e8f         jns        loc_4de8

0000000000004e95         jmp        loc_4e18
0000000000004e97         align      32

                     loc_4ea0:
0000000000004ea0         mov        dword [r12], 0x2                            ; case 1, CODE XREF=savewd_chdir+275
0000000000004ea8         jmp        loc_4d4f
0000000000004ead         align      16

                     loc_4eb0:
0000000000004eb0         mov        eax, dword [r12+4]                          ; case 3, CODE XREF=savewd_chdir+275
0000000000004eb5         test       eax, eax
0000000000004eb7         je         loc_4d4f

0000000000004ebd         lea        rcx, qword [__PRETTY_FUNCTION__.4461]       ; argument "__function" for method j___assert_fail, "savewd_chdir"
0000000000004ec4         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/savewd.c"
0000000000004ecb         lea        rdi, qword [aWdvalchild0]                   ; argument "__assertion" for method j___assert_fail, "wd->val.child == 0"
0000000000004ed2         mov        edx, 0x9b                                   ; argument "__line" for method j___assert_fail
0000000000004ed7         call       j___assert_fail                             ; __assert_fail
                        ; endp
0000000000004edc         align      32

                     loc_4ee0:
0000000000004ee0         call       j___errno_location                          ; __errno_location, CODE XREF=savewd_chdir+209
0000000000004ee5         mov        eax, dword [rax]
0000000000004ee7         cmp        eax, 0xd
0000000000004eea         je         loc_4f08

0000000000004eec         cmp        eax, 0x74
0000000000004eef         je         loc_4f08

0000000000004ef1         mov        dword [r12], 0x4
0000000000004ef9         mov        dword [r12+4], eax
0000000000004efe         jmp        loc_4de4
0000000000004f03         align      8

                     loc_4f08:
0000000000004f08         mov        dword [r12], 0x3                            ; CODE XREF=savewd_chdir+490, savewd_chdir+495
0000000000004f10         mov        dword [r12+4], 0xffffffff

                     loc_4f19:
0000000000004f19         call       j_fork                                      ; fork, CODE XREF=savewd_chdir+391
0000000000004f1e         cmp        eax, 0x0
0000000000004f21         mov        dword [r12+4], eax
0000000000004f26         je         loc_4de4

0000000000004f2c         mov        eax, 0x1
0000000000004f31         mov        r14d, 0xfffffffe
0000000000004f37         jg         loc_4d58

0000000000004f3d         mov        dword [r12], 0x4
0000000000004f45         call       j___errno_location                          ; __errno_location
0000000000004f4a         mov        eax, dword [rax]
0000000000004f4c         mov        dword [r12+4], eax
0000000000004f51         jmp        loc_4de4
0000000000004f56         align      32

                     loc_4f60:
0000000000004f60         mov        r14d, 0xffffffff                            ; CODE XREF=savewd_chdir+144
0000000000004f66         jmp        loc_4d76

                     loc_4f6b:
0000000000004f6b         lea        rcx, qword [__PRETTY_FUNCTION__.4461]       ; case 0, argument "__function" for method j___assert_fail, "savewd_chdir", CODE XREF=savewd_chdir+251, savewd_chdir+275
0000000000004f72         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/savewd.c"
0000000000004f79         lea        rdi, qword [aWdvalchild0_92f7+16]           ; argument "__assertion" for method j___assert_fail, 0x9307
0000000000004f80         mov        edx, 0x9f                                   ; argument "__line" for method j___assert_fail
0000000000004f85         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_4f8a:
0000000000004f8a         lea        rcx, qword [__PRETTY_FUNCTION__.4446]       ; argument "__function" for method j___assert_fail, "savewd_save", CODE XREF=savewd_chdir+157, savewd_chdir+185
0000000000004f91         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/savewd.c"
0000000000004f98         lea        rdi, qword [aWdvalchild0_92f7+16]           ; argument "__assertion" for method j___assert_fail, 0x9307
0000000000004f9f         mov        edx, 0x63                                   ; argument "__line" for method j___assert_fail
0000000000004fa4         call       j___assert_fail                             ; __assert_fail
                        ; endp
0000000000004fa9         align      16                                          ; End of unwind block (FDE at 0xa47c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_24: int32_t, -36


                     savewd_restore:
0000000000004fb0         push       r12                                         ; Begin of unwind block (FDE at 0xa4cc), CODE XREF=savewd_process_files+345
0000000000004fb2         push       rbp
0000000000004fb3         push       rbx
0000000000004fb4         sub        rsp, 0x10
0000000000004fb8         mov        rax, qword [fs:0x28]
0000000000004fc1         mov        qword [rsp+0x28+var_20], rax
0000000000004fc6         xor        eax, eax
0000000000004fc8         cmp        dword [rdi], 0x4
0000000000004fcb         ja         loc_50dd

0000000000004fd1         mov        eax, dword [rdi]
0000000000004fd3         lea        rdx, qword [switch_table_9348]              ; switch_table_9348
0000000000004fda         mov        rbx, rdi
0000000000004fdd         movsxd     rax, dword [rdx+rax*4]
0000000000004fe1         add        rax, rdx
0000000000004fe4         jmp        rax                                         ; switch statement using table at 0x9348, with 5 cases, 0x4ff0,0x5003,0x5028,0x5080
0000000000004fe6         align      16

                     loc_4ff0:
0000000000004ff0         mov        ebp, dword [rdi+4]                          ; case 3, CODE XREF=savewd_restore+52
0000000000004ff3         cmp        ebp, 0x0
0000000000004ff6         je         loc_50fc

0000000000004ffc         lea        r12, qword [rsp+0x28+var_24]
0000000000005001         jg         loc_504a

                     loc_5003:
0000000000005003         xor        eax, eax                                    ; case 1, CODE XREF=savewd_restore+52

                     loc_5005:
0000000000005005         mov        rcx, qword [rsp+0x28+var_20]                ; CODE XREF=savewd_restore+141, savewd_restore+200, savewd_restore+226
000000000000500a         xor        rcx, qword [fs:0x28]
0000000000005013         jne        loc_50d8

0000000000005019         add        rsp, 0x10
000000000000501d         pop        rbx
000000000000501e         pop        rbp
000000000000501f         pop        r12
0000000000005021         ret
                        ; endp
0000000000005022         align      8

                     loc_5028:
0000000000005028         mov        r12d, dword [rdi+4]                         ; case 4, CODE XREF=savewd_restore+52
000000000000502c         call       j___errno_location                          ; __errno_location
0000000000005031         mov        rbp, rax

                     loc_5034:
0000000000005034         mov        dword [rbp], r12d                           ; CODE XREF=savewd_restore+260
0000000000005038         mov        eax, 0xffffffff
000000000000503d         jmp        loc_5005
000000000000503f         align      64

                     loc_5040:
0000000000005040         call       j___errno_location                          ; __errno_location, CODE XREF=savewd_restore+168
0000000000005045         cmp        dword [rax], 0x4
0000000000005048         jne        loc_50b9

                     loc_504a:
000000000000504a         xor        edx, edx                                    ; argument "__options" for method j_waitpid, CODE XREF=savewd_restore+81
000000000000504c         mov        rsi, r12                                    ; argument "__stat_loc" for method j_waitpid
000000000000504f         mov        edi, ebp                                    ; argument "__pid" for method j_waitpid
0000000000005051         call       j_waitpid                                   ; waitpid
0000000000005056         test       eax, eax
0000000000005058         js         loc_5040

000000000000505a         mov        eax, dword [rsp+0x28+var_24]
000000000000505e         mov        dword [rbx+4], 0xffffffff
0000000000005065         mov        edi, eax
0000000000005067         and        edi, 0x7f
000000000000506a         je         loc_5075

000000000000506c         call       j_raise                                     ; raise
0000000000005071         mov        eax, dword [rsp+0x28+var_24]

                     loc_5075:
0000000000005075         movzx      eax, ah                                     ; CODE XREF=savewd_restore+186
0000000000005078         jmp        loc_5005
000000000000507a         align      128

                     loc_5080:
0000000000005080         mov        edi, dword [rdi+4]                          ; case 2, argument "__fd" for method j_fchdir, CODE XREF=savewd_restore+52
0000000000005083         call       j_fchdir                                    ; fchdir
0000000000005088         test       eax, eax
000000000000508a         jne        loc_5097

000000000000508c         mov        dword [rbx], 0x1
0000000000005092         jmp        loc_5005

                     loc_5097:
0000000000005097         call       j___errno_location                          ; __errno_location, CODE XREF=savewd_restore+218
000000000000509c         mov        edi, dword [rbx+4]                          ; argument "__fd" for method j_close
000000000000509f         mov        r12d, dword [rax]
00000000000050a2         mov        rbp, rax
00000000000050a5         call       j_close                                     ; close
00000000000050aa         mov        dword [rbx], 0x4
00000000000050b0         mov        dword [rbx+4], r12d
00000000000050b4         jmp        loc_5034

                     loc_50b9:
00000000000050b9         lea        rcx, qword [__PRETTY_FUNCTION__.4477]       ; argument "__function" for method j___assert_fail, "savewd_restore", CODE XREF=savewd_restore+152
00000000000050c0         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/savewd.c"
00000000000050c7         lea        rdi, qword [aErrnolocation4]                ; argument "__assertion" for method j___assert_fail, "(*__errno_location ()) == 4"
00000000000050ce         mov        edx, 0xd8                                   ; argument "__line" for method j___assert_fail
00000000000050d3         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_50d8:
00000000000050d8         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=savewd_restore+99
                        ; endp

                     loc_50dd:
00000000000050dd         lea        rcx, qword [__PRETTY_FUNCTION__.4477]       ; argument "__function" for method j___assert_fail, "savewd_restore", CODE XREF=savewd_restore+27
00000000000050e4         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/savewd.c"
00000000000050eb         lea        rdi, qword [aWdvalchild0_92f7+16]           ; argument "__assertion" for method j___assert_fail, 0x9307
00000000000050f2         mov        edx, 0xe2                                   ; argument "__line" for method j___assert_fail
00000000000050f7         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_50fc:
00000000000050fc         mov        edi, esi                                    ; argument "__status" for method j__exit, CODE XREF=savewd_restore+70
00000000000050fe         call       j__exit                                     ; _exit
                        ; endp
0000000000005103         align      16                                          ; End of unwind block (FDE at 0xa4cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     savewd_finish:
0000000000005110         push       rbx                                         ; Begin of unwind block (FDE at 0xa500), CODE XREF=savewd_process_files+144
0000000000005111         cmp        dword [rdi], 0x4
0000000000005114         ja         loc_5166

0000000000005116         mov        eax, dword [rdi]
0000000000005118         lea        rdx, qword [switch_table_935c]              ; switch_table_935c
000000000000511f         mov        rbx, rdi
0000000000005122         movsxd     rax, dword [rdx+rax*4]
0000000000005126         add        rax, rdx
0000000000005129         jmp        rax                                         ; switch statement using table at 0x935c, with 5 cases, 0x5130,0x5138,0x5140
000000000000512b         align      16

                     loc_5130:
0000000000005130         mov        edi, dword [rdi+4]                          ; case 2, argument "__fd" for method j_close, CODE XREF=savewd_finish+25
0000000000005133         call       j_close                                     ; close

                     loc_5138:
0000000000005138         mov        dword [rbx], 0x5                            ; case 4, CODE XREF=savewd_finish+25, savewd_finish+53
000000000000513e         pop        rbx
000000000000513f         ret
                        ; endp

                     loc_5140:
0000000000005140         mov        eax, dword [rdi+4]                          ; case 3, CODE XREF=savewd_finish+25
0000000000005143         test       eax, eax
0000000000005145         js         loc_5138

0000000000005147         lea        rcx, qword [__PRETTY_FUNCTION__.4491]       ; argument "__function" for method j___assert_fail, "savewd_finish"
000000000000514e         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/savewd.c"
0000000000005155         lea        rdi, qword [aWdvalchild0_92f7]              ; argument "__assertion" for method j___assert_fail, "wd->val.child < 0"
000000000000515c         mov        edx, 0xf7                                   ; argument "__line" for method j___assert_fail
0000000000005161         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_5166:
0000000000005166         lea        rcx, qword [__PRETTY_FUNCTION__.4491]       ; argument "__function" for method j___assert_fail, "savewd_finish", CODE XREF=savewd_finish+4
000000000000516d         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/savewd.c"
0000000000005174         lea        rdi, qword [aWdvalchild0_92f7+16]           ; argument "__assertion" for method j___assert_fail, 0x9307
000000000000517b         mov        edx, 0xfb                                   ; argument "__line" for method j___assert_fail
0000000000005180         call       j___assert_fail                             ; __assert_fail
                        ; endp
0000000000005185         align      16                                          ; End of unwind block (FDE at 0xa500)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_44: int32_t, -68
        ;    var_48: int32_t, -72
        ;    var_4C: int32_t, -76
        ;    var_50: int32_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96


                     savewd_process_files:
0000000000005190         push       r15                                         ; Begin of unwind block (FDE at 0xa51c), CODE XREF=main+483
0000000000005192         push       r14
0000000000005194         mov        eax, edi
0000000000005196         push       r13
0000000000005198         push       r12
000000000000519a         sub        eax, 0x1
000000000000519d         push       rbp
000000000000519e         push       rbx
000000000000519f         mov        r12, rcx
00000000000051a2         mov        rbp, rdx
00000000000051a5         sub        rsp, 0x38
00000000000051a9         mov        rcx, qword [fs:0x28]
00000000000051b2         mov        qword [rsp+0x68+var_40], rcx
00000000000051b7         xor        ecx, ecx
00000000000051b9         test       eax, eax
00000000000051bb         mov        dword [rsp+0x68+var_50], edi
00000000000051bf         mov        qword [rsp+0x68+var_58], rsi
00000000000051c4         mov        dword [rsp+0x68+var_48], 0x0
00000000000051cc         mov        dword [rsp+0x68+var_4C], eax
00000000000051d0         js         loc_5212

00000000000051d2         mov        r13d, eax
00000000000051d5         cdqe
00000000000051d7         lea        rdx, qword [rax*8]
00000000000051df         mov        rax, qword [rsi+rax*8]
00000000000051e3         cmp        byte [rax], 0x2f
00000000000051e6         jne        loc_5298

00000000000051ec         lea        rax, qword [rsi+rdx-8]
00000000000051f1         jmp        loc_5208
00000000000051f3         align      8

                     loc_51f8:
00000000000051f8         mov        rdx, qword [rax]                            ; CODE XREF=savewd_process_files+128
00000000000051fb         sub        rax, 0x8
00000000000051ff         cmp        byte [rdx], 0x2f
0000000000005202         jne        loc_5298

                     loc_5208:
0000000000005208         sub        r13d, 0x1                                   ; CODE XREF=savewd_process_files+97
000000000000520c         cmp        r13d, 0xffffffff
0000000000005210         jne        loc_51f8

                     loc_5212:
0000000000005212         lea        rbx, qword [rsp+0x68+var_48]                ; CODE XREF=savewd_process_files+64, savewd_process_files+267
0000000000005217         xor        r15d, r15d
000000000000521a         xor        r13d, r13d

                     loc_521d:
000000000000521d         mov        rdi, rbx                                    ; CODE XREF=savewd_process_files+366
0000000000005220         call       savewd_finish                               ; savewd_finish
0000000000005225         cmp        dword [rsp+0x68+var_50], r13d
000000000000522a         jle        loc_526b

000000000000522c         mov        ecx, dword [rsp+0x68+var_4C]
0000000000005230         mov        rdi, qword [rsp+0x68+var_58]
0000000000005235         movsxd     rax, r13d
0000000000005238         sub        ecx, r13d
000000000000523b         lea        r14, qword [rdi+rax*8]
000000000000523f         mov        r13, rcx
0000000000005242         add        r13, rax
0000000000005245         lea        r13, qword [rdi+r13*8+8]
000000000000524a         nop        word [rax+rax]

                     loc_5250:
0000000000005250         mov        rdi, qword [r14]                            ; CODE XREF=savewd_process_files+217
0000000000005253         mov        rdx, r12
0000000000005256         mov        rsi, rbx
0000000000005259         call       rbp
000000000000525b         cmp        r15d, eax
000000000000525e         cmovl      r15d, eax
0000000000005262         add        r14, 0x8
0000000000005266         cmp        r14, r13
0000000000005269         jne        loc_5250

                     loc_526b:
000000000000526b         mov        rcx, qword [rsp+0x68+var_40]                ; CODE XREF=savewd_process_files+154
0000000000005270         xor        rcx, qword [fs:0x28]
0000000000005279         mov        eax, r15d
000000000000527c         jne        loc_5317

0000000000005282         add        rsp, 0x38
0000000000005286         pop        rbx
0000000000005287         pop        rbp
0000000000005288         pop        r12
000000000000528a         pop        r13
000000000000528c         pop        r14
000000000000528e         pop        r15
0000000000005290         ret
                        ; endp
0000000000005291         align      8

                     loc_5298:
0000000000005298         test       r13d, r13d                                  ; CODE XREF=savewd_process_files+86, savewd_process_files+114
000000000000529b         jle        loc_5212

00000000000052a1         mov        rcx, qword [rsp+0x68+var_58]
00000000000052a6         lea        eax, dword [r13-1]
00000000000052aa         xor        r15d, r15d
00000000000052ad         lea        rbx, qword [rsp+0x68+var_48]
00000000000052b2         lea        rax, qword [rcx+rax*8+8]
00000000000052b7         mov        r14, rcx
00000000000052ba         mov        qword [rsp+0x68+var_60], rax
00000000000052bf         xor        eax, eax
00000000000052c1         jmp        loc_5308
00000000000052c3         align      8

                     loc_52c8:
00000000000052c8         mov        rdx, r12                                    ; CODE XREF=savewd_process_files+379, savewd_process_files+389
00000000000052cb         mov        rsi, rbx
00000000000052ce         mov        rdi, qword [r14]
00000000000052d1         call       rbp
00000000000052d3         cmp        r15d, eax
00000000000052d6         cmovl      r15d, eax

                     loc_52da:
00000000000052da         mov        rax, qword [r14+8]                          ; CODE XREF=savewd_process_files+387
00000000000052de         cmp        byte [rax], 0x2f
00000000000052e1         je         loc_52f5

00000000000052e3         mov        esi, r15d
00000000000052e6         mov        rdi, rbx
00000000000052e9         call       savewd_restore                              ; savewd_restore
00000000000052ee         cmp        r15d, eax
00000000000052f1         cmovl      r15d, eax

                     loc_52f5:
00000000000052f5         add        r14, 0x8                                    ; CODE XREF=savewd_process_files+337
00000000000052f9         cmp        r14, qword [rsp+0x68+var_60]
00000000000052fe         je         loc_521d

0000000000005304         mov        eax, dword [rsp+0x68+var_48]

                     loc_5308:
0000000000005308         cmp        eax, 0x3                                    ; CODE XREF=savewd_process_files+305
000000000000530b         jne        loc_52c8

000000000000530d         mov        eax, dword [rsp+0x68+var_44]
0000000000005311         test       eax, eax
0000000000005313         jg         loc_52da

0000000000005315         jmp        loc_52c8

                     loc_5317:
0000000000005317         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=savewd_process_files+236
                        ; endp
000000000000531c         align      32                                          ; End of unwind block (FDE at 0xa51c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
0000000000005320         push       r15                                         ; Begin of unwind block (FDE at 0xa56c), CODE XREF=j_version_etc_arn, version_etc_va+75, version_etc+161
0000000000005322         push       r14
0000000000005324         push       r13
0000000000005326         push       r12
0000000000005328         mov        r12, r9
000000000000532b         push       rbp
000000000000532c         push       rbx
000000000000532d         mov        rbp, rdi
0000000000005330         mov        rbx, r8
0000000000005333         sub        rsp, 0x28
0000000000005337         test       rsi, rsi
000000000000533a         je         loc_5458

0000000000005340         mov        r8, rdx
0000000000005343         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
000000000000534a         mov        r9, rcx
000000000000534d         xor        eax, eax
000000000000534f         mov        rcx, rsi
0000000000005352         mov        esi, 0x1
0000000000005357         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_535c:
000000000000535c         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0x93c0, CODE XREF=version_etc_arn+337
0000000000005363         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005365         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000536a         call       j_dcgettext                                 ; dcgettext
000000000000536f         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000005376         mov        rcx, rax
0000000000005379         mov        r8d, 0x7e3
000000000000537f         mov        esi, 0x1
0000000000005384         mov        rdi, rbp
0000000000005387         xor        eax, eax
0000000000005389         call       j___fprintf_chk                             ; __fprintf_chk
000000000000538e         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000005395         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005397         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000539c         call       j_dcgettext                                 ; dcgettext
00000000000053a1         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
00000000000053a4         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000053a7         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000053ac         cmp        r12, 0x9
00000000000053b0         ja         loc_56f0

00000000000053b6         lea        rdx, qword [switch_table_96a8]              ; switch_table_96a8
00000000000053bd         movsxd     rax, dword [rdx+r12*4]
00000000000053c1         add        rax, rdx
00000000000053c4         jmp        rax                                         ; switch statement using table at 0x96a8, with 10 cases, 0x53d0,0x5446,0x5480,0x54d8,0x5518,0x5560,0x55b0,0x5608,0x5638,0x56a0
00000000000053c6         align      16

                     loc_53d0:
00000000000053d0         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
00000000000053d4         mov        rax, qword [rbx+0x10]
00000000000053d8         lea        rsi, qword [aWrittenBySSSns_95b8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
00000000000053df         mov        r8, qword [rbx+8]
00000000000053e3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000053e8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000053ea         mov        r13, qword [rbx+0x30]
00000000000053ee         mov        r12, qword [rbx+0x28]
00000000000053f2         mov        qword [rsp+0x58+var_48], r9
00000000000053f7         mov        r15, qword [rbx+0x20]
00000000000053fb         mov        r14, qword [rbx+0x18]
00000000000053ff         mov        qword [rsp+0x58+var_58], rax
0000000000005403         mov        qword [rsp+0x58+var_50], r8
0000000000005408         mov        rbx, qword [rbx]
000000000000540b         call       j_dcgettext                                 ; dcgettext
0000000000005410         sub        rsp, 0x8

                     loc_5414:
0000000000005414         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
0000000000005419         mov        rdx, rax
000000000000541c         mov        rcx, rbx
000000000000541f         mov        esi, 0x1
0000000000005424         mov        rdi, rbp
0000000000005427         xor        eax, eax
0000000000005429         push       r9
000000000000542b         push       r13
000000000000542d         push       r12
000000000000542f         push       r15
0000000000005431         push       r14
0000000000005433         mov        r9, qword [rsp+0x88+var_58]
0000000000005438         mov        r8, qword [rsp+0x88+var_50]
000000000000543d         call       j___fprintf_chk                             ; __fprintf_chk
0000000000005442         add        rsp, 0x30

                     loc_5446:
0000000000005446         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
000000000000544a         pop        rbx
000000000000544b         pop        rbp
000000000000544c         pop        r12
000000000000544e         pop        r13
0000000000005450         pop        r14
0000000000005452         pop        r15
0000000000005454         ret
                        ; endp
0000000000005455         align      8

                     loc_5458:
0000000000005458         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
000000000000545b         mov        rcx, rdx
000000000000545e         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
0000000000005465         mov        esi, 0x1
000000000000546a         xor        eax, eax
000000000000546c         call       j___fprintf_chk                             ; __fprintf_chk
0000000000005471         jmp        loc_535c
0000000000005476         align      128

                     loc_5480:
0000000000005480         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
0000000000005484         mov        r9, qword [rbx+0x38]
0000000000005488         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
000000000000548f         mov        rax, qword [rbx+0x10]
0000000000005493         mov        r8, qword [rbx+8]
0000000000005497         mov        edx, 0x5
000000000000549c         mov        r13, qword [rbx+0x30]
00000000000054a0         mov        r12, qword [rbx+0x28]
00000000000054a4         mov        r15, qword [rbx+0x20]
00000000000054a8         mov        r14, qword [rbx+0x18]
00000000000054ac         mov        rbx, qword [rbx]
00000000000054af         mov        qword [rsp+0x58+var_40], r10
00000000000054b4         mov        qword [rsp+0x58+var_48], r9
00000000000054b9         mov        qword [rsp+0x58+var_58], rax
00000000000054bd         mov        qword [rsp+0x58+var_50], r8

                     loc_54c2:
00000000000054c2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
00000000000054c4         call       j_dcgettext                                 ; dcgettext
00000000000054c9         mov        r10, qword [rsp+0x58+var_40]
00000000000054ce         push       r10
00000000000054d0         jmp        loc_5414
00000000000054d5         align      8

                     loc_54d8:
00000000000054d8         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
00000000000054db         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
00000000000054e2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000054e7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000054e9         call       j_dcgettext                                 ; dcgettext
00000000000054ee         add        rsp, 0x28
00000000000054f2         mov        rcx, rbx
00000000000054f5         mov        rdi, rbp
00000000000054f8         pop        rbx
00000000000054f9         pop        rbp
00000000000054fa         pop        r12
00000000000054fc         pop        r13
00000000000054fe         pop        r14
0000000000005500         pop        r15
0000000000005502         mov        rdx, rax
0000000000005505         mov        esi, 0x1
000000000000550a         xor        eax, eax
000000000000550c         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000005511         align      8

                     loc_5518:
0000000000005518         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
000000000000551c         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
0000000000005523         mov        rbx, qword [rbx]
0000000000005526         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000552b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000552d         call       j_dcgettext                                 ; dcgettext
0000000000005532         add        rsp, 0x28
0000000000005536         mov        r8, r12
0000000000005539         mov        rcx, rbx
000000000000553c         mov        rdi, rbp
000000000000553f         mov        rdx, rax
0000000000005542         mov        esi, 0x1
0000000000005547         pop        rbx
0000000000005548         pop        rbp
0000000000005549         pop        r12
000000000000554b         pop        r13
000000000000554d         pop        r14
000000000000554f         pop        r15
0000000000005551         xor        eax, eax
0000000000005553         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000005558         align      32

                     loc_5560:
0000000000005560         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
0000000000005564         mov        r12, qword [rbx+8]
0000000000005568         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
000000000000556f         mov        rbx, qword [rbx]
0000000000005572         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005577         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005579         call       j_dcgettext                                 ; dcgettext
000000000000557e         add        rsp, 0x28
0000000000005582         mov        r9, r13
0000000000005585         mov        r8, r12
0000000000005588         mov        rcx, rbx
000000000000558b         mov        rdi, rbp
000000000000558e         mov        rdx, rax
0000000000005591         pop        rbx
0000000000005592         pop        rbp
0000000000005593         pop        r12
0000000000005595         pop        r13
0000000000005597         pop        r14
0000000000005599         pop        r15
000000000000559b         mov        esi, 0x1
00000000000055a0         xor        eax, eax
00000000000055a2         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
00000000000055a7         align      16

                     loc_55b0:
00000000000055b0         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
00000000000055b7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000055bc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000055be         mov        r14, qword [rbx+0x18]
00000000000055c2         mov        r13, qword [rbx+0x10]
00000000000055c6         mov        r12, qword [rbx+8]
00000000000055ca         mov        rbx, qword [rbx]
00000000000055cd         call       j_dcgettext                                 ; dcgettext
00000000000055d2         sub        rsp, 0x8

                     loc_55d6:
00000000000055d6         push       r14                                         ; CODE XREF=version_etc_arn+784
00000000000055d8         mov        rdx, rax
00000000000055db         mov        r9, r13
00000000000055de         mov        r8, r12
00000000000055e1         mov        rcx, rbx
00000000000055e4         mov        rdi, rbp
00000000000055e7         mov        esi, 0x1
00000000000055ec         xor        eax, eax
00000000000055ee         call       j___fprintf_chk                             ; __fprintf_chk
00000000000055f3         pop        rax
00000000000055f4         pop        rdx
00000000000055f5         add        rsp, 0x28
00000000000055f9         pop        rbx
00000000000055fa         pop        rbp
00000000000055fb         pop        r12
00000000000055fd         pop        r13
00000000000055ff         pop        r14
0000000000005601         pop        r15
0000000000005603         ret
                        ; endp
0000000000005604         align      8

                     loc_5608:
0000000000005608         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
000000000000560c         lea        rsi, qword [aWrittenBySSSns_9538]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
0000000000005613         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005618         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000561a         mov        r14, qword [rbx+0x18]
000000000000561e         mov        r13, qword [rbx+0x10]
0000000000005622         mov        r12, qword [rbx+8]
0000000000005626         mov        rbx, qword [rbx]
0000000000005629         call       j_dcgettext                                 ; dcgettext
000000000000562e         push       r15
0000000000005630         jmp        loc_55d6
0000000000005632         align      8

                     loc_5638:
0000000000005638         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
000000000000563c         mov        r12, qword [rbx+0x28]
0000000000005640         lea        rsi, qword [aWrittenBySSSns_9560]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
0000000000005647         mov        r15, qword [rbx+0x20]
000000000000564b         mov        r14, qword [rbx+0x18]
000000000000564f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005654         mov        r13, qword [rbx+0x10]
0000000000005658         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000565a         mov        rbx, qword [rbx]
000000000000565d         mov        qword [rsp+0x58+var_58], r8
0000000000005661         call       j_dcgettext                                 ; dcgettext
0000000000005666         sub        rsp, 0x8
000000000000566a         mov        r9, r13
000000000000566d         push       r12
000000000000566f         push       r15
0000000000005671         push       r14

                     loc_5673:
0000000000005673         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
0000000000005678         mov        rcx, rbx
000000000000567b         mov        rdx, rax
000000000000567e         mov        rdi, rbp
0000000000005681         mov        esi, 0x1
0000000000005686         xor        eax, eax
0000000000005688         call       j___fprintf_chk                             ; __fprintf_chk
000000000000568d         add        rsp, 0x20
0000000000005691         add        rsp, 0x28
0000000000005695         pop        rbx
0000000000005696         pop        rbp
0000000000005697         pop        r12
0000000000005699         pop        r13
000000000000569b         pop        r14
000000000000569d         pop        r15
000000000000569f         ret
                        ; endp

                     loc_56a0:
00000000000056a0         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
00000000000056a4         mov        r13, qword [rbx+0x30]
00000000000056a8         lea        rsi, qword [aWrittenBySSSns_9588]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
00000000000056af         mov        r12, qword [rbx+0x28]
00000000000056b3         mov        r15, qword [rbx+0x20]
00000000000056b7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000056bc         mov        r14, qword [rbx+0x18]
00000000000056c0         mov        r8, qword [rbx+8]
00000000000056c4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000056c6         mov        qword [rsp+0x58+var_50], r9
00000000000056cb         mov        rbx, qword [rbx]
00000000000056ce         mov        qword [rsp+0x58+var_58], r8
00000000000056d2         call       j_dcgettext                                 ; dcgettext
00000000000056d7         push       r13
00000000000056d9         push       r12
00000000000056db         push       r15
00000000000056dd         push       r14
00000000000056df         mov        r9, qword [rsp+0x78+var_50]
00000000000056e4         jmp        loc_5673
00000000000056e6         align      16

                     loc_56f0:
00000000000056f0         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
00000000000056f4         mov        r9, qword [rbx+0x38]
00000000000056f8         mov        edx, 0x5
00000000000056fd         mov        rax, qword [rbx+0x10]
0000000000005701         mov        r8, qword [rbx+8]
0000000000005705         lea        rsi, qword [aWrittenBySSSns_9620]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
000000000000570c         mov        r13, qword [rbx+0x30]
0000000000005710         mov        r12, qword [rbx+0x28]
0000000000005714         mov        r15, qword [rbx+0x20]
0000000000005718         mov        r14, qword [rbx+0x18]
000000000000571c         mov        qword [rsp+0x58+var_40], r10
0000000000005721         mov        qword [rsp+0x58+var_48], r9
0000000000005726         mov        qword [rsp+0x58+var_58], rax
000000000000572a         mov        qword [rsp+0x58+var_50], r8
000000000000572f         mov        rbx, qword [rbx]
0000000000005732         jmp        loc_54c2
0000000000005737         align      64                                          ; End of unwind block (FDE at 0xa56c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
0000000000005740         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0xa680)
0000000000005743         cmp        qword [r8], 0x0
0000000000005747         je         j_version_etc_arn                           ; version_etc_arn

0000000000005749         nop        dword [rax]

                     loc_5750:
0000000000005750         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
0000000000005754         cmp        qword [r8+r9*8], 0x0
0000000000005759         jne        loc_5750

                     j_version_etc_arn:        // version_etc_arn
000000000000575b         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
0000000000005760         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0xa680), Begin of unwind block (FDE at 0xa694)
0000000000005764         mov        r10, r8
0000000000005767         xor        r9d, r9d
000000000000576a         mov        rax, qword [fs:0x28]
0000000000005773         mov        qword [rsp+0x68+var_10], rax
0000000000005778         xor        eax, eax
000000000000577a         mov        r8, rsp
000000000000577d         nop        dword [rax]

                     loc_5780:
0000000000005780         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000005783         cmp        eax, 0x2f
0000000000005786         ja         loc_57ca

0000000000005788         mov        r11d, eax
000000000000578b         add        r11, qword [r10+0x10]
000000000000578f         add        eax, 0x8
0000000000005792         mov        dword [r10], eax

                     loc_5795:
0000000000005795         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000005798         test       rax, rax
000000000000579b         mov        qword [r8+r9*8], rax
000000000000579f         je         loc_57ab

00000000000057a1         add        r9, 0x1
00000000000057a5         cmp        r9, 0xa
00000000000057a9         jne        loc_5780

                     loc_57ab:
00000000000057ab         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
00000000000057b0         mov        rax, qword [rsp+0x68+var_10]
00000000000057b5         xor        rax, qword [fs:0x28]
00000000000057be         jne        loc_57c5

00000000000057c0         add        rsp, 0x68
00000000000057c4         ret
                        ; endp

                     loc_57c5:
00000000000057c5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_57ca:
00000000000057ca         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
00000000000057ce         lea        rax, qword [r11+8]
00000000000057d2         mov        qword [r10+8], rax
00000000000057d6         jmp        loc_5795
00000000000057d8         align      32                                          ; End of unwind block (FDE at 0xa694)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
00000000000057e0         push       rbp                                         ; Begin of unwind block (FDE at 0xa6b0), CODE XREF=main+291
00000000000057e1         push       rbx
00000000000057e2         mov        r10d, 0x20
00000000000057e8         xor        r11d, r11d
00000000000057eb         sub        rsp, 0xb8
00000000000057f2         mov        rax, qword [fs:0x28]
00000000000057fb         mov        qword [rsp+0xc8+var_50], rax
0000000000005800         xor        eax, eax
0000000000005802         lea        rax, qword [rsp+0xc8+arg_0]
000000000000580a         mov        qword [rsp+0xc8+var_28], r8
0000000000005812         lea        rbx, qword [rsp+0xc8+arg_0]
000000000000581a         lea        r8, qword [rsp+0xc8+var_A8]
000000000000581f         mov        qword [rsp+0xc8+var_20], r9
0000000000005827         mov        dword [rsp+0xc8+var_C0], 0x20
000000000000582f         mov        qword [rsp+0xc8+var_B8], rax
0000000000005834         lea        rax, qword [rsp+0xc8+var_48]
000000000000583c         xor        r9d, r9d
000000000000583f         mov        qword [rsp+0xc8+var_B0], rax
0000000000005844         mov        rbp, rax
0000000000005847         nop        word [rax+rax]

                     loc_5850:
0000000000005850         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
0000000000005854         ja         loc_58ac

0000000000005856         mov        eax, r10d
0000000000005859         mov        r11d, 0x1
000000000000585f         add        r10d, 0x8
0000000000005863         add        rax, rbp

                     loc_5866:
0000000000005866         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
0000000000005869         test       rax, rax
000000000000586c         mov        qword [r8+r9*8], rax
0000000000005870         je         loc_587c

0000000000005872         add        r9, 0x1
0000000000005876         cmp        r9, 0xa
000000000000587a         jne        loc_5850

                     loc_587c:
000000000000587c         test       r11b, r11b                                  ; CODE XREF=version_etc+144
000000000000587f         jne        loc_58a5

                     loc_5881:
0000000000005881         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000005886         mov        rax, qword [rsp+0xc8+var_50]
000000000000588b         xor        rax, qword [fs:0x28]
0000000000005894         jne        loc_58a0

0000000000005896         add        rsp, 0xb8
000000000000589d         pop        rbx
000000000000589e         pop        rbp
000000000000589f         ret
                        ; endp

                     loc_58a0:
00000000000058a0         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_58a5:
00000000000058a5         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
00000000000058aa         jmp        loc_5881

                     loc_58ac:
00000000000058ac         mov        rax, rbx                                    ; CODE XREF=version_etc+116
00000000000058af         add        rbx, 0x8
00000000000058b3         jmp        loc_5866
00000000000058b5         align      64                                          ; End of unwind block (FDE at 0xa6b0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
00000000000058c0         push       rbx                                         ; Begin of unwind block (FDE at 0xa6dc)
00000000000058c1         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
00000000000058c8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000058cd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000058cf         call       j_dcgettext                                 ; dcgettext
00000000000058d4         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
00000000000058db         mov        rsi, rax
00000000000058de         mov        edi, 0x1
00000000000058e3         xor        eax, eax
00000000000058e5         call       j___printf_chk                              ; __printf_chk
00000000000058ea         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
00000000000058f1         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000058f6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000058f8         call       j_dcgettext                                 ; dcgettext
00000000000058fd         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000005904         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x87c0
000000000000590b         mov        rsi, rax
000000000000590e         mov        edi, 0x1
0000000000005913         xor        eax, eax
0000000000005915         call       j___printf_chk                              ; __printf_chk
000000000000591a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000005921         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
0000000000005928         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000592a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000592f         call       j_dcgettext                                 ; dcgettext
0000000000005934         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000005937         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000593a         pop        rbx
000000000000593b         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
0000000000005940         push       rbx                                         ; End of unwind block (FDE at 0xa6dc), Begin of unwind block (FDE at 0xa6fc), CODE XREF=mode_compile+123, mode_compile+842, mode_create_from_ref+56, quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15
0000000000005941         mov        rbx, rdi
0000000000005944         call       j_malloc                                    ; malloc
0000000000005949         test       rax, rax
000000000000594c         jne        loc_5953

000000000000594e         test       rbx, rbx
0000000000005951         jne        loc_5955

                     loc_5953:
0000000000005953         pop        rbx                                         ; CODE XREF=xmalloc+12
0000000000005954         ret
                        ; endp

                     loc_5955:
0000000000005955         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_595a:
000000000000595a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0xa6fc)
                     xnmalloc:
0000000000005960         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0xa718)
0000000000005963         mul        rsi
0000000000005966         mov        rdi, rax
0000000000005969         seto       al
000000000000596c         test       rdi, rdi
000000000000596f         js         loc_597b

0000000000005971         movzx      eax, al
0000000000005974         test       rax, rax
0000000000005977         jne        loc_597b

0000000000005979         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_597b:
000000000000597b         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
000000000000597f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5984:
0000000000005984         nop                                                    ; End of unwind block (FDE at 0xa718)
0000000000005986         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000005990         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0xa72c)
                        ; endp
0000000000005992         align      32                                          ; End of unwind block (FDE at 0xa72c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
00000000000059a0         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0xa740), CODE XREF=quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
00000000000059a3         push       rbx
00000000000059a4         mov        rbx, rsi
00000000000059a7         jne        loc_59ae

00000000000059a9         test       rdi, rdi
00000000000059ac         jne        loc_59c8

                     loc_59ae:
00000000000059ae         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
00000000000059b1         call       j_realloc                                   ; realloc
00000000000059b6         test       rax, rax
00000000000059b9         jne        loc_59c0

00000000000059bb         test       rbx, rbx
00000000000059be         jne        loc_59d1

                     loc_59c0:
00000000000059c0         pop        rbx                                         ; CODE XREF=xrealloc+25
00000000000059c1         ret
                        ; endp
00000000000059c2         align      8

                     loc_59c8:
00000000000059c8         call       j_free                                      ; free, CODE XREF=xrealloc+12
00000000000059cd         xor        eax, eax
00000000000059cf         pop        rbx
00000000000059d0         ret
                        ; endp

                     loc_59d1:
00000000000059d1         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_59d6:
00000000000059d6         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0xa740)
                     xnrealloc:
00000000000059e0         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0xa764)
00000000000059e3         mul        rdx
00000000000059e6         mov        rsi, rax
00000000000059e9         seto       al
00000000000059ec         test       rsi, rsi
00000000000059ef         js         loc_59fb

00000000000059f1         movzx      eax, al
00000000000059f4         test       rax, rax
00000000000059f7         jne        loc_59fb

00000000000059f9         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_59fb:
00000000000059fb         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
00000000000059ff         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5a04:
0000000000005a04         nop                                                    ; End of unwind block (FDE at 0xa764)
0000000000005a06         nop        word [cs:rax+rax]
                     x2nrealloc:
0000000000005a10         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xa778)
0000000000005a13         mov        r9, rdx
0000000000005a16         mov        rcx, qword [rsi]
0000000000005a19         je         loc_5a50

0000000000005a1b         xor        edx, edx
0000000000005a1d         movabs     rax, 0x5555555555555554
0000000000005a27         div        r9
0000000000005a2a         cmp        rax, rcx
0000000000005a2d         jbe        loc_5a6b

0000000000005a2f         mov        rax, rcx
0000000000005a32         shr        rax, 0x1
0000000000005a35         lea        rcx, qword [rax+rcx+1]

                     loc_5a3a:
0000000000005a3a         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
0000000000005a3d         imul       rcx, r9                                     ; argument #4 for method xrealloc
0000000000005a41         mov        rsi, rcx                                    ; argument #2 for method xrealloc
0000000000005a44         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000005a49         align      16

                     loc_5a50:
0000000000005a50         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
0000000000005a53         je         loc_5a78

                     loc_5a55:
0000000000005a55         mov        rax, rcx                                    ; CODE XREF=sub_5a74+28
0000000000005a58         mul        r9
0000000000005a5b         seto       dl
0000000000005a5e         test       rax, rax
0000000000005a61         movzx      edx, dl
0000000000005a64         js         loc_5a6b

0000000000005a66         test       rdx, rdx
0000000000005a69         je         loc_5a3a

                     loc_5a6b:
0000000000005a6b         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
0000000000005a6f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5a74:
0000000000005a74         nop        dword [rax]
                        ; endp

                     loc_5a78:
0000000000005a78         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
0000000000005a7a         mov        eax, 0x80
0000000000005a7f         xor        r8d, r8d
0000000000005a82         div        r9
0000000000005a85         test       rax, rax
0000000000005a88         sete       r8b
0000000000005a8c         lea        rcx, qword [r8+rax]
0000000000005a90         jmp        loc_5a55
0000000000005a92         align      32                                          ; End of unwind block (FDE at 0xa778)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000005aa0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xa790)
0000000000005aa3         mov        rax, qword [rsi]
0000000000005aa6         je         loc_5ad0

0000000000005aa8         movabs     rdx, 0x5555555555555553
0000000000005ab2         cmp        rax, rdx
0000000000005ab5         ja         loc_5ae1

0000000000005ab7         mov        rdx, rax
0000000000005aba         shr        rdx, 0x1
0000000000005abd         lea        rax, qword [rdx+rax+1]

                     loc_5ac2:
0000000000005ac2         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
0000000000005ac5         mov        rsi, rax                                    ; argument #2 for method xrealloc
0000000000005ac8         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000005acd         align      16

                     loc_5ad0:
0000000000005ad0         test       rax, rax                                    ; CODE XREF=x2realloc+6
0000000000005ad3         mov        edx, 0x80
0000000000005ad8         cmove      rax, rdx
0000000000005adc         test       rax, rax
0000000000005adf         jns        loc_5ac2

                     loc_5ae1:
0000000000005ae1         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
0000000000005ae5         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5aea:
0000000000005aea         nop        word [rax+rax]                              ; End of unwind block (FDE at 0xa790)
                     xzalloc:
0000000000005af0         push       rbx                                         ; Begin of unwind block (FDE at 0xa7a8)
0000000000005af1         mov        rbx, rdi
0000000000005af4         call       xmalloc                                     ; xmalloc
0000000000005af9         mov        rdx, rbx                                    ; argument "__n" for method j_memset
0000000000005afc         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000005afe         mov        rdi, rax                                    ; argument "__s" for method j_memset
0000000000005b01         pop        rbx
0000000000005b02         jmp        j_memset                                    ; memset
                        ; endp
0000000000005b07         align      16                                          ; End of unwind block (FDE at 0xa7a8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
0000000000005b10         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0xa7c4)
0000000000005b13         sub        rsp, 0x8
0000000000005b17         mul        rsi
0000000000005b1a         seto       dl
0000000000005b1d         test       rax, rax
0000000000005b20         js         loc_5b39

0000000000005b22         movzx      edx, dl
0000000000005b25         test       rdx, rdx
0000000000005b28         jne        loc_5b39

0000000000005b2a         call       j_calloc                                    ; calloc
0000000000005b2f         test       rax, rax
0000000000005b32         je         loc_5b39

0000000000005b34         add        rsp, 0x8
0000000000005b38         ret
                        ; endp

                     loc_5b39:
0000000000005b39         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5b3e:
0000000000005b3e         nop                                                    ; End of unwind block (FDE at 0xa7c4)
                        ; endp

                     xmemdup:
0000000000005b40         push       rbp                                         ; Begin of unwind block (FDE at 0xa7e0), CODE XREF=clone_quoting_options+40, xstrdup+17
0000000000005b41         push       rbx
0000000000005b42         mov        rbp, rdi
0000000000005b45         mov        rdi, rsi
0000000000005b48         mov        rbx, rsi
0000000000005b4b         sub        rsp, 0x8
0000000000005b4f         call       xmalloc                                     ; xmalloc
0000000000005b54         add        rsp, 0x8
0000000000005b58         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
0000000000005b5b         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
0000000000005b5e         pop        rbx
0000000000005b5f         pop        rbp
0000000000005b60         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000005b63         jmp        j_memcpy                                    ; memcpy
                        ; endp
0000000000005b68         align      16                                          ; End of unwind block (FDE at 0xa7e0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000005b70         push       rbx                                         ; Begin of unwind block (FDE at 0xa808)
0000000000005b71         mov        rbx, rdi
0000000000005b74         call       j_strlen                                    ; strlen
0000000000005b79         mov        rdi, rbx
0000000000005b7c         lea        rsi, qword [rax+1]
0000000000005b80         pop        rbx
0000000000005b81         jmp        xmemdup                                     ; xmemdup
0000000000005b83         align      16                                          ; End of unwind block (FDE at 0xa808)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000005b90         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0xa824), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=mode_compile+889, quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41
0000000000005b97         sub        rsp, 0x8
0000000000005b9b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005ba0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005ba2         call       j_dcgettext                                 ; dcgettext
0000000000005ba7         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
0000000000005bad         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x8ca9
0000000000005bb4         mov        rcx, rax
0000000000005bb7         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000005bb9         xor        eax, eax
0000000000005bbb         call       j_error                                     ; error
0000000000005bc0         call       j_abort                                     ; abort
                        ; endp
0000000000005bc5         align      16                                          ; End of unwind block (FDE at 0xa824)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
0000000000005bd0         push       r13                                         ; Begin of unwind block (FDE at 0xa83c), CODE XREF=sub_3870+534
0000000000005bd2         push       r12
0000000000005bd4         mov        r13, rsi
0000000000005bd7         push       rbp
0000000000005bd8         push       rbx
0000000000005bd9         mov        rbx, rdi
0000000000005bdc         mov        r12, rdx
0000000000005bdf         sub        rsp, 0x18
0000000000005be3         mov        rax, qword [fs:0x28]
0000000000005bec         mov        qword [rsp+0x38+var_30], rax
0000000000005bf1         xor        eax, eax
0000000000005bf3         lea        rax, qword [rsp+0x38+var_34]
0000000000005bf8         test       rdi, rdi
0000000000005bfb         cmove      rbx, rax
0000000000005bff         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
0000000000005c02         call       j_mbrtowc                                   ; mbrtowc
0000000000005c07         cmp        rax, 0xfffffffffffffffd
0000000000005c0b         mov        rbp, rax
0000000000005c0e         jbe        loc_5c30

0000000000005c10         test       r12, r12
0000000000005c13         je         loc_5c30

0000000000005c15         xor        edi, edi
0000000000005c17         call       hard_locale                                 ; hard_locale
0000000000005c1c         test       al, al
0000000000005c1e         jne        loc_5c30

0000000000005c20         movzx      eax, byte [r13]
0000000000005c25         mov        ebp, 0x1
0000000000005c2a         mov        dword [rbx], eax
0000000000005c2c         nop        dword [rax]

                     loc_5c30:
0000000000005c30         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
0000000000005c35         xor        rdx, qword [fs:0x28]
0000000000005c3e         mov        rax, rbp
0000000000005c41         jne        loc_5c4e

0000000000005c43         add        rsp, 0x18
0000000000005c47         pop        rbx
0000000000005c48         pop        rbp
0000000000005c49         pop        r12
0000000000005c4b         pop        r13
0000000000005c4d         ret
                        ; endp

                     loc_5c4e:
0000000000005c4e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
0000000000005c53         align      32                                          ; End of unwind block (FDE at 0xa83c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_808: int8_t, -2056
        ;    var_810: int64_t, -2064


                     rpl_vfprintf:
0000000000005c60         push       r13                                         ; Begin of unwind block (FDE at 0xa87c), CODE XREF=prog_fprintf+197
0000000000005c62         push       r12
0000000000005c64         mov        rax, rsi
0000000000005c67         push       rbp
0000000000005c68         push       rbx
0000000000005c69         mov        r13, rdi
0000000000005c6c         sub        rsp, 0x7f8
0000000000005c73         lea        r12, qword [rsp+0x818+var_808]
0000000000005c78         lea        rsi, qword [rsp+0x818+var_810]
0000000000005c7d         mov        qword [rsp+0x818+var_810], 0x7d0
0000000000005c86         mov        rcx, qword [fs:0x28]
0000000000005c8f         mov        qword [rsp+0x818+var_30], rcx
0000000000005c97         xor        ecx, ecx
0000000000005c99         mov        rdi, r12
0000000000005c9c         mov        rcx, rdx
0000000000005c9f         mov        rdx, rax
0000000000005ca2         call       vasnprintf                                  ; vasnprintf
0000000000005ca7         test       rax, rax
0000000000005caa         mov        rbx, qword [rsp+0x818+var_810]
0000000000005caf         je         loc_5d3e

0000000000005cb5         mov        rcx, r13                                    ; argument "__s" for method j_fwrite
0000000000005cb8         mov        rdx, rbx                                    ; argument "__n" for method j_fwrite
0000000000005cbb         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
0000000000005cc0         mov        rdi, rax                                    ; argument "__ptr" for method j_fwrite
0000000000005cc3         mov        rbp, rax
0000000000005cc6         call       j_fwrite                                    ; fwrite
0000000000005ccb         cmp        rax, rbx
0000000000005cce         jb         loc_5d10

0000000000005cd0         cmp        rbp, r12
0000000000005cd3         je         loc_5cdd

0000000000005cd5         mov        rdi, rbp                                    ; argument "__ptr" for method j_free
0000000000005cd8         call       j_free                                      ; free

                     loc_5cdd:
0000000000005cdd         cmp        rbx, 0x7fffffff                             ; CODE XREF=rpl_vfprintf+115
0000000000005ce4         ja         loc_5d33

                     loc_5ce6:
0000000000005ce6         mov        rcx, qword [rsp+0x818+var_30]               ; CODE XREF=rpl_vfprintf+184, rpl_vfprintf+209, rpl_vfprintf+235
0000000000005cee         xor        rcx, qword [fs:0x28]
0000000000005cf7         mov        eax, ebx
0000000000005cf9         jne        loc_5d4d

0000000000005cfb         add        rsp, 0x7f8
0000000000005d02         pop        rbx
0000000000005d03         pop        rbp
0000000000005d04         pop        r12
0000000000005d06         pop        r13
0000000000005d08         ret
                        ; endp
0000000000005d09         align      16

                     loc_5d10:
0000000000005d10         cmp        rbp, r12                                    ; CODE XREF=rpl_vfprintf+110
0000000000005d13         mov        ebx, 0xffffffff
0000000000005d18         je         loc_5ce6

0000000000005d1a         call       j___errno_location                          ; __errno_location
0000000000005d1f         mov        r13d, dword [rax]
0000000000005d22         mov        r12, rax
0000000000005d25         mov        rdi, rbp                                    ; argument "__ptr" for method j_free
0000000000005d28         call       j_free                                      ; free
0000000000005d2d         mov        dword [r12], r13d
0000000000005d31         jmp        loc_5ce6

                     loc_5d33:
0000000000005d33         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_vfprintf+132
0000000000005d38         mov        dword [rax], 0x4b

                     loc_5d3e:
0000000000005d3e         mov        rdi, r13                                    ; CODE XREF=rpl_vfprintf+79
0000000000005d41         mov        ebx, 0xffffffff
0000000000005d46         call       fseterr                                     ; fseterr
0000000000005d4b         jmp        loc_5ce6

                     loc_5d4d:
0000000000005d4d         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_vfprintf+153
                        ; endp
0000000000005d52         align      32                                          ; End of unwind block (FDE at 0xa87c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
0000000000005d60         push       r12                                         ; Begin of unwind block (FDE at 0xa8bc), CODE XREF=close_stdout+13, close_stdout+51
0000000000005d62         push       rbp
0000000000005d63         mov        rbp, rdi
0000000000005d66         push       rbx
0000000000005d67         call       j___fpending                                ; __fpending
0000000000005d6c         mov        ebx, dword [rbp]
0000000000005d6f         mov        rdi, rbp
0000000000005d72         mov        r12, rax
0000000000005d75         call       rpl_fclose                                  ; rpl_fclose
0000000000005d7a         and        ebx, 0x20
0000000000005d7d         test       ebx, ebx
0000000000005d7f         jne        loc_5d98

0000000000005d81         test       eax, eax
0000000000005d83         je         loc_5d8f

0000000000005d85         test       r12, r12
0000000000005d88         mov        eax, 0xffffffff
0000000000005d8d         je         loc_5dc8

                     loc_5d8f:
0000000000005d8f         pop        rbx                                         ; CODE XREF=close_stream+35
0000000000005d90         pop        rbp
0000000000005d91         pop        r12
0000000000005d93         ret
                        ; endp
0000000000005d94         align      8

                     loc_5d98:
0000000000005d98         test       eax, eax                                    ; CODE XREF=close_stream+31
0000000000005d9a         jne        loc_5db8

0000000000005d9c         call       j___errno_location                          ; __errno_location
0000000000005da1         mov        dword [rax], 0x0
0000000000005da7         mov        eax, 0xffffffff
0000000000005dac         pop        rbx
0000000000005dad         pop        rbp
0000000000005dae         pop        r12
0000000000005db0         ret
                        ; endp
0000000000005db1         align      8

                     loc_5db8:
0000000000005db8         pop        rbx                                         ; CODE XREF=close_stream+58
0000000000005db9         mov        eax, 0xffffffff
0000000000005dbe         pop        rbp
0000000000005dbf         pop        r12
0000000000005dc1         ret
                        ; endp
0000000000005dc2         align      8

                     loc_5dc8:
0000000000005dc8         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
0000000000005dcd         cmp        dword [rax], 0x9
0000000000005dd0         pop        rbx
0000000000005dd1         pop        rbp
0000000000005dd2         pop        r12
0000000000005dd4         setne      al
0000000000005dd7         movzx      eax, al
0000000000005dda         neg        eax
0000000000005ddc         ret
                        ; endp
0000000000005ddd         align      32                                          ; End of unwind block (FDE at 0xa8bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_28: int64_t, -40
        ;    var_38: int8_t, -56
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int32_t, -88


                     open_safer:
0000000000005de0         sub        rsp, 0x58                                   ; Begin of unwind block (FDE at 0xa90c), CODE XREF=savewd_chdir+202
0000000000005de4         mov        qword [rsp+0x58+var_28], rdx
0000000000005de9         xor        edx, edx
0000000000005deb         mov        rax, qword [fs:0x28]
0000000000005df4         mov        qword [rsp+0x58+var_40], rax
0000000000005df9         xor        eax, eax
0000000000005dfb         test       sil, 0x40
0000000000005dff         jne        loc_5e28

                     loc_5e01:
0000000000005e01         xor        eax, eax                                    ; CODE XREF=open_safer+103
0000000000005e03         call       j_open                                      ; open
0000000000005e08         mov        edi, eax
0000000000005e0a         call       fd_safer                                    ; fd_safer
0000000000005e0f         mov        rcx, qword [rsp+0x58+var_40]
0000000000005e14         xor        rcx, qword [fs:0x28]
0000000000005e1d         jne        loc_5e49

0000000000005e1f         add        rsp, 0x58
0000000000005e23         ret
                        ; endp
0000000000005e24         align      8

                     loc_5e28:
0000000000005e28         lea        rax, qword [rsp+0x58+arg_0]                 ; CODE XREF=open_safer+31
0000000000005e2d         mov        dword [rsp+0x58+var_58], 0x10
0000000000005e34         mov        edx, dword [rsp+0x58+var_28]
0000000000005e38         mov        qword [rsp+0x58+var_50], rax
0000000000005e3d         lea        rax, qword [rsp+0x58+var_38]
0000000000005e42         mov        qword [rsp+0x58+var_48], rax
0000000000005e47         jmp        loc_5e01

                     loc_5e49:
0000000000005e49         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=open_safer+61
                        ; endp
0000000000005e4e         align      16                                          ; End of unwind block (FDE at 0xa90c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
0000000000005e50         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0xa92c), CODE XREF=rpl_mbrtowc+71
0000000000005e54         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000005e56         call       j_setlocale                                 ; setlocale
0000000000005e5b         mov        rdx, rax
0000000000005e5e         mov        eax, 0x1
0000000000005e63         test       rdx, rdx
0000000000005e66         je         loc_5e85

0000000000005e68         lea        rdi, qword [aMemoryExhauste+17]             ; 0x9720
0000000000005e6f         mov        ecx, 0x2
0000000000005e74         mov        rsi, rdx
0000000000005e77         rep  cmpsb byte [rsi], byte [rdi]
0000000000005e79         seta       cl
0000000000005e7c         sbb        cl, 0x0
0000000000005e7f         xor        eax, eax
0000000000005e81         test       cl, cl
0000000000005e83         jne        loc_5e90

                     loc_5e85:
0000000000005e85         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
0000000000005e89         ret
                        ; endp
0000000000005e8a         align      16

                     loc_5e90:
0000000000005e90         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
0000000000005e97         mov        ecx, 0x6
0000000000005e9c         mov        rsi, rdx
0000000000005e9f         rep  cmpsb byte [rsi], byte [rdi]
0000000000005ea1         seta       al
0000000000005ea4         sbb        al, 0x0
0000000000005ea6         test       al, al
0000000000005ea8         setne      al
0000000000005eab         add        rsp, 0x8
0000000000005eaf         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000005eb0         sub        rsp, 0x8                                    ; End of unwind block (FDE at 0xa92c), Begin of unwind block (FDE at 0xa94c), CODE XREF=gettext_quote.part.1+11
0000000000005eb4         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000005eb9         call       j_nl_langinfo                               ; nl_langinfo
0000000000005ebe         test       rax, rax
0000000000005ec1         je         loc_5ee0

0000000000005ec3         cmp        byte [rax], 0x0
0000000000005ec6         lea        rdx, qword [aAscii]                         ; "ASCII"
0000000000005ecd         cmove      rax, rdx
0000000000005ed1         add        rsp, 0x8
0000000000005ed5         ret
                        ; endp
0000000000005ed6         align      32

                     loc_5ee0:
0000000000005ee0         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
0000000000005ee7         add        rsp, 0x8
0000000000005eeb         ret
                        ; endp
0000000000005eec         align      16                                          ; End of unwind block (FDE at 0xa94c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_44: int32_t, -68
        ;    var_50: int64_t, -80


                     mkancesdirs:
0000000000005ef0         push       r15                                         ; Begin of unwind block (FDE at 0xa96c), CODE XREF=make_dir_parents+102
0000000000005ef2         push       r14
0000000000005ef4         mov        r14, rdx
0000000000005ef7         push       r13
0000000000005ef9         push       r12
0000000000005efb         mov        r13, rdi
0000000000005efe         push       rbp
0000000000005eff         push       rbx
0000000000005f00         mov        rbp, rdi
0000000000005f03         mov        rbx, rdi
0000000000005f06         xor        r12d, r12d
0000000000005f09         sub        rsp, 0x28
0000000000005f0d         mov        qword [rsp+0x58+var_50], rsi
0000000000005f12         mov        qword [rsp+0x58+var_40], rcx
0000000000005f17         mov        byte [rsp+0x58+var_44], 0x0
0000000000005f1c         nop        dword [rax]

                     loc_5f20:
0000000000005f20         add        rbx, 0x1                                    ; CODE XREF=mkancesdirs+90, mkancesdirs+95, mkancesdirs+247
0000000000005f24         movzx      edx, byte [rbx-1]
0000000000005f28         test       dl, dl
0000000000005f2a         je         loc_5fc8

                     loc_5f30:
0000000000005f30         movzx      eax, byte [rbx]                             ; CODE XREF=mkancesdirs+203
0000000000005f33         cmp        al, 0x2f
0000000000005f35         je         loc_5fe0

0000000000005f3b         test       al, al
0000000000005f3d         setne      al
0000000000005f40         cmp        dl, 0x2f
0000000000005f43         sete       r15b
0000000000005f47         and        r15b, al
0000000000005f4a         je         loc_5f20

0000000000005f4c         test       r12, r12
0000000000005f4f         je         loc_5f20

0000000000005f51         mov        rax, r12
0000000000005f54         sub        rax, rbp
0000000000005f57         cmp        rax, 0x1
0000000000005f5b         je         loc_5ff0

0000000000005f61         cmp        rax, 0x2
0000000000005f65         mov        byte [r12], 0x0
0000000000005f6a         je         loc_6035

                     loc_5f70:
0000000000005f70         mov        rdx, qword [rsp+0x58+var_40]                ; CODE XREF=mkancesdirs+267, mkancesdirs+329, mkancesdirs+339
0000000000005f75         mov        rsi, rbp
0000000000005f78         mov        rdi, r13
0000000000005f7b         call       r14
0000000000005f7e         test       eax, eax
0000000000005f80         js         loc_6000

0000000000005f82         mov        byte [rsp+0x58+var_44], r15b
0000000000005f87         mov        edx, 0x1
0000000000005f8c         xor        r15d, r15d

                     loc_5f8f:
0000000000005f8f         mov        rdi, qword [rsp+0x58+var_50]                ; CODE XREF=mkancesdirs+287, mkancesdirs+355
0000000000005f94         xor        ecx, ecx
0000000000005f96         mov        rsi, rbp
0000000000005f99         call       savewd_chdir                                ; savewd_chdir
0000000000005f9e         cmp        eax, 0xffffffff
0000000000005fa1         mov        ebp, eax
0000000000005fa3         je         loc_6018

0000000000005fa5         test       eax, eax
0000000000005fa7         mov        byte [r12], 0x2f
0000000000005fac         jne        loc_6018

                     loc_5fae:
0000000000005fae         mov        rbp, rbx                                    ; CODE XREF=mkancesdirs+260
0000000000005fb1         add        rbx, 0x1
0000000000005fb5         movzx      edx, byte [rbx-1]
0000000000005fb9         test       dl, dl
0000000000005fbb         jne        loc_5f30

0000000000005fc1         nop        dword [rax]

                     loc_5fc8:
0000000000005fc8         mov        rax, rbp                                    ; CODE XREF=mkancesdirs+58
0000000000005fcb         sub        rax, r13

                     loc_5fce:
0000000000005fce         add        rsp, 0x28                                   ; CODE XREF=mkancesdirs+323
0000000000005fd2         pop        rbx
0000000000005fd3         pop        rbp
0000000000005fd4         pop        r12
0000000000005fd6         pop        r13
0000000000005fd8         pop        r14
0000000000005fda         pop        r15
0000000000005fdc         ret
                        ; endp
0000000000005fdd         align      32

                     loc_5fe0:
0000000000005fe0         cmp        dl, 0x2f                                    ; CODE XREF=mkancesdirs+69
0000000000005fe3         cmovne     r12, rbx
0000000000005fe7         jmp        loc_5f20
0000000000005fec         align      16

                     loc_5ff0:
0000000000005ff0         cmp        byte [rbp], 0x2e                            ; CODE XREF=mkancesdirs+107
0000000000005ff4         je         loc_5fae

0000000000005ff6         mov        byte [r12], 0x0
0000000000005ffb         jmp        loc_5f70

                     loc_6000:
0000000000006000         call       j___errno_location                          ; __errno_location, CODE XREF=mkancesdirs+144
0000000000006005         mov        edx, dword [rsp+0x58+var_44]
0000000000006009         mov        r15d, dword [rax]
000000000000600c         and        edx, 0x1
000000000000600f         jmp        loc_5f8f
0000000000006014         align      8

                     loc_6018:
0000000000006018         test       r15d, r15d                                  ; CODE XREF=mkancesdirs+179, mkancesdirs+188
000000000000601b         je         loc_6030

000000000000601d         call       j___errno_location                          ; __errno_location
0000000000006022         cmp        dword [rax], 0x2
0000000000006025         jne        loc_6030

0000000000006027         mov        dword [rax], r15d
000000000000602a         nop        word [rax+rax]

                     loc_6030:
0000000000006030         movsxd     rax, ebp                                    ; CODE XREF=mkancesdirs+299, mkancesdirs+309
0000000000006033         jmp        loc_5fce

                     loc_6035:
0000000000006035         cmp        byte [rbp], 0x2e                            ; CODE XREF=mkancesdirs+122
0000000000006039         jne        loc_5f70

000000000000603f         cmp        byte [rbp+1], 0x2e
0000000000006043         jne        loc_5f70

0000000000006049         xor        r15d, r15d
000000000000604c         mov        byte [rsp+0x58+var_44], 0x0
0000000000006051         xor        edx, edx
0000000000006053         jmp        loc_5f8f
0000000000006058         align      32                                          ; End of unwind block (FDE at 0xa96c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_B8: int32_t, -184
        ;    var_BC: int32_t, -188
        ;    var_C0: int32_t, -192
        ;    var_D8: int8_t, -216
        ;    var_DC: int32_t, -220


                     dirchownmod:
0000000000006060         push       r15                                         ; Begin of unwind block (FDE at 0xa9bc), CODE XREF=make_dir_parents+717
0000000000006062         push       r14
0000000000006064         mov        r15d, edx
0000000000006067         push       r13
0000000000006069         push       r12
000000000000606b         mov        r13d, ecx
000000000000606e         push       rbp
000000000000606f         push       rbx
0000000000006070         mov        ebp, edi
0000000000006072         mov        r12, rsi
0000000000006075         mov        r14d, r9d
0000000000006078         sub        rsp, 0xb8
000000000000607f         mov        rax, qword [fs:0x28]
0000000000006088         mov        qword [rsp+0xe8+var_40], rax
0000000000006090         xor        eax, eax
0000000000006092         test       edi, edi
0000000000006094         mov        dword [rsp+0xe8+var_DC], r8d
0000000000006099         lea        rdx, qword [rsp+0xe8+var_D8]
000000000000609e         js         loc_6170

00000000000060a4         mov        esi, edi                                    ; argument "__fildes" for method j___fxstat
00000000000060a6         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstat
00000000000060ab         call       j___fxstat                                  ; __fxstat
00000000000060b0         test       eax, eax
00000000000060b2         mov        ebx, eax
00000000000060b4         mov        r8d, dword [rsp+0xe8+var_DC]
00000000000060b9         jne        loc_6260

00000000000060bf         mov        ecx, dword [rsp+0xe8+var_C0]
00000000000060c3         mov        eax, ecx
00000000000060c5         and        eax, 0xf000
00000000000060ca         cmp        eax, 0x4000
00000000000060cf         jne        loc_6120

                     loc_60d1:
00000000000060d1         cmp        r13d, 0xffffffff                            ; CODE XREF=dirchownmod+309
00000000000060d5         je         loc_61b0

00000000000060db         cmp        dword [rsp+0xe8+var_BC], r13d
00000000000060e0         je         loc_61b0

                     loc_60e6:
00000000000060e6         test       ebp, ebp                                    ; CODE XREF=dirchownmod+347
00000000000060e8         mov        dword [rsp+0xe8+var_DC], ecx
00000000000060ec         mov        edx, r8d
00000000000060ef         mov        esi, r13d
00000000000060f2         jns        loc_6200

00000000000060f8         cmp        r15d, 0xffffffff
00000000000060fc         mov        rdi, r12
00000000000060ff         je         loc_6240

0000000000006105         call       j_lchown                                    ; lchown
000000000000610a         mov        ecx, dword [rsp+0xe8+var_DC]
000000000000610e         mov        ebx, eax

                     loc_6110:
0000000000006110         test       ebx, ebx                                    ; CODE XREF=dirchownmod+491
0000000000006112         jne        loc_6144

0000000000006114         jmp        loc_6211
0000000000006119         align      32

                     loc_6120:
0000000000006120         call       j___errno_location                          ; __errno_location, CODE XREF=dirchownmod+111
0000000000006125         mov        r13d, 0x14
000000000000612b         mov        r12, rax
000000000000612e         mov        dword [rax], 0x14
0000000000006134         mov        ebx, 0xffffffff

                     loc_6139:
0000000000006139         mov        edi, ebp                                    ; argument "__fd" for method j_close, CODE XREF=dirchownmod+523
000000000000613b         call       j_close                                     ; close
0000000000006140         mov        dword [r12], r13d

                     loc_6144:
0000000000006144         mov        rcx, qword [rsp+0xe8+var_40]                ; CODE XREF=dirchownmod+178, dirchownmod+291, dirchownmod+329, dirchownmod+405, dirchownmod+452, dirchownmod+473
000000000000614c         xor        rcx, qword [fs:0x28]
0000000000006155         mov        eax, ebx
0000000000006157         jne        loc_6270

000000000000615d         add        rsp, 0xb8
0000000000006164         pop        rbx
0000000000006165         pop        rbp
0000000000006166         pop        r12
0000000000006168         pop        r13
000000000000616a         pop        r14
000000000000616c         pop        r15
000000000000616e         ret
                        ; endp
000000000000616f         align      16

                     loc_6170:
0000000000006170         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat, CODE XREF=dirchownmod+62
0000000000006175         call       j___xstat                                   ; __xstat
000000000000617a         test       eax, eax
000000000000617c         mov        ebx, eax
000000000000617e         mov        r8d, dword [rsp+0xe8+var_DC]
0000000000006183         jne        loc_6144

0000000000006185         mov        ecx, dword [rsp+0xe8+var_C0]
0000000000006189         mov        eax, ecx
000000000000618b         and        eax, 0xf000
0000000000006190         cmp        eax, 0x4000
0000000000006195         je         loc_60d1

000000000000619b         call       j___errno_location                          ; __errno_location
00000000000061a0         or         ebx, 0xffffffff
00000000000061a3         mov        dword [rax], 0x14
00000000000061a9         jmp        loc_6144
00000000000061ab         align      16

                     loc_61b0:
00000000000061b0         cmp        r8d, 0xffffffff                             ; CODE XREF=dirchownmod+117, dirchownmod+128
00000000000061b4         je         loc_61c1

00000000000061b6         cmp        dword [rsp+0xe8+var_B8], r8d
00000000000061bb         jne        loc_60e6

                     loc_61c1:
00000000000061c1         xor        edx, edx                                    ; CODE XREF=dirchownmod+340, dirchownmod+436

                     loc_61c3:
00000000000061c3         mov        eax, ecx                                    ; CODE XREF=dirchownmod+446
00000000000061c5         xor        eax, r14d
00000000000061c8         or         eax, edx
00000000000061ca         test       dword [rsp+0xe8+arg_0], eax
00000000000061d1         je         loc_6220

00000000000061d3         mov        esi, dword [rsp+0xe8+arg_0]
00000000000061da         and        ecx, 0xfff
00000000000061e0         not        esi
00000000000061e2         and        esi, ecx
00000000000061e4         or         esi, r14d
00000000000061e7         test       ebp, ebp
00000000000061e9         jns        loc_6250

00000000000061eb         mov        rdi, r12                                    ; argument "__file" for method j_chmod
00000000000061ee         call       j_chmod                                     ; chmod
00000000000061f3         mov        ebx, eax
00000000000061f5         jmp        loc_6144
00000000000061fa         align      512

                     loc_6200:
0000000000006200         mov        edi, ebp                                    ; argument "__fd" for method j_fchown, CODE XREF=dirchownmod+146
0000000000006202         call       j_fchown                                    ; fchown
0000000000006207         test       eax, eax
0000000000006209         mov        ebx, eax
000000000000620b         mov        ecx, dword [rsp+0xe8+var_DC]
000000000000620f         jne        loc_6260

                     loc_6211:
0000000000006211         test       cl, 0x49                                    ; CODE XREF=dirchownmod+180
0000000000006214         je         loc_61c1

0000000000006216         mov        edx, ecx
0000000000006218         and        edx, 0xc00
000000000000621e         jmp        loc_61c3

                     loc_6220:
0000000000006220         xor        ebx, ebx                                    ; CODE XREF=dirchownmod+369
0000000000006222         test       ebp, ebp
0000000000006224         js         loc_6144

000000000000622a         nop        word [rax+rax]

                     loc_6230:
0000000000006230         mov        edi, ebp                                    ; argument "__fd" for method j_close, CODE XREF=dirchownmod+507
0000000000006232         call       j_close                                     ; close
0000000000006237         mov        ebx, eax
0000000000006239         jmp        loc_6144
000000000000623e         align      64

                     loc_6240:
0000000000006240         call       j_chown                                     ; chown, CODE XREF=dirchownmod+159
0000000000006245         mov        ecx, dword [rsp+0xe8+var_DC]
0000000000006249         mov        ebx, eax
000000000000624b         jmp        loc_6110

                     loc_6250:
0000000000006250         mov        edi, ebp                                    ; argument "__fd" for method j_fchmod, CODE XREF=dirchownmod+393
0000000000006252         call       j_fchmod                                    ; fchmod
0000000000006257         test       eax, eax
0000000000006259         mov        ebx, eax
000000000000625b         je         loc_6230

000000000000625d         nop        dword [rax]

                     loc_6260:
0000000000006260         call       j___errno_location                          ; __errno_location, CODE XREF=dirchownmod+89, dirchownmod+431
0000000000006265         mov        r12, rax
0000000000006268         mov        r13d, dword [rax]
000000000000626b         jmp        loc_6139

                     loc_6270:
0000000000006270         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=dirchownmod+247
                        ; endp
0000000000006275         align      128                                         ; End of unwind block (FDE at 0xa9bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fd_safer:
0000000000006280         push       r13                                         ; Begin of unwind block (FDE at 0xaa0c), CODE XREF=open_safer+42
0000000000006282         push       r12
0000000000006284         push       rbp
0000000000006285         push       rbx
0000000000006286         mov        ebx, edi
0000000000006288         sub        rsp, 0x8
000000000000628c         cmp        edi, 0x2
000000000000628f         ja         loc_62b2

0000000000006291         call       dup_safer                                   ; dup_safer
0000000000006296         mov        r12d, eax
0000000000006299         call       j___errno_location                          ; __errno_location
000000000000629e         mov        r13d, dword [rax]
00000000000062a1         mov        rbp, rax
00000000000062a4         mov        edi, ebx                                    ; argument "__fd" for method j_close
00000000000062a6         call       j_close                                     ; close
00000000000062ab         mov        ebx, r12d
00000000000062ae         mov        dword [rbp], r13d

                     loc_62b2:
00000000000062b2         add        rsp, 0x8                                    ; CODE XREF=fd_safer+15
00000000000062b6         mov        eax, ebx
00000000000062b8         pop        rbx
00000000000062b9         pop        rbp
00000000000062ba         pop        r12
00000000000062bc         pop        r13
00000000000062be         ret
                        ; endp
00000000000062bf         align      64                                          ; End of unwind block (FDE at 0xaa0c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
00000000000062c0         push       r12                                         ; Begin of unwind block (FDE at 0xaa44), CODE XREF=close_stream+21
00000000000062c2         push       rbp
00000000000062c3         push       rbx
00000000000062c4         mov        rbx, rdi
00000000000062c7         call       j_fileno                                    ; fileno
00000000000062cc         test       eax, eax
00000000000062ce         mov        rdi, rbx
00000000000062d1         js         loc_6327

00000000000062d3         call       j___freading                                ; __freading
00000000000062d8         test       eax, eax
00000000000062da         jne        loc_6308

                     loc_62dc:
00000000000062dc         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
00000000000062df         call       rpl_fflush                                  ; rpl_fflush
00000000000062e4         test       eax, eax
00000000000062e6         je         loc_6324

00000000000062e8         call       j___errno_location                          ; __errno_location
00000000000062ed         mov        r12d, dword [rax]
00000000000062f0         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
00000000000062f3         mov        rbp, rax
00000000000062f6         call       j_fclose                                    ; fclose
00000000000062fb         test       r12d, r12d
00000000000062fe         jne        loc_6330

                     loc_6300:
0000000000006300         pop        rbx                                         ; CODE XREF=rpl_fclose+121
0000000000006301         pop        rbp
0000000000006302         pop        r12
0000000000006304         ret
                        ; endp
0000000000006305         align      8

                     loc_6308:
0000000000006308         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
000000000000630b         call       j_fileno                                    ; fileno
0000000000006310         xor        esi, esi                                    ; argument "__offset" for method j_lseek
0000000000006312         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000006317         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000006319         call       j_lseek                                     ; lseek
000000000000631e         cmp        rax, 0xffffffffffffffff
0000000000006322         jne        loc_62dc

                     loc_6324:
0000000000006324         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_6327:
0000000000006327         pop        rbx                                         ; CODE XREF=rpl_fclose+17
0000000000006328         pop        rbp
0000000000006329         pop        r12
000000000000632b         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_6330:
0000000000006330         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
0000000000006334         mov        eax, 0xffffffff
0000000000006339         jmp        loc_6300
000000000000633b         align      64                                          ; End of unwind block (FDE at 0xaa44)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
0000000000006340         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xaa7c), CODE XREF=rpl_fclose+31
0000000000006343         push       rbx
0000000000006344         mov        rbx, rdi
0000000000006347         je         loc_635a

0000000000006349         call       j___freading                                ; __freading
000000000000634e         test       eax, eax
0000000000006350         je         loc_635a

0000000000006352         test       dword [rbx], 0x100
0000000000006358         jne        loc_6368

                     loc_635a:
000000000000635a         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
000000000000635d         pop        rbx
000000000000635e         jmp        j_fflush                                    ; fflush
                        ; endp
0000000000006363         align      8

                     loc_6368:
0000000000006368         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
000000000000636b         mov        edx, 0x1
0000000000006370         xor        esi, esi
0000000000006372         call       rpl_fseeko                                  ; rpl_fseeko
0000000000006377         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
000000000000637a         pop        rbx
000000000000637b         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
0000000000006380         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0xaa7c), Begin of unwind block (FDE at 0xaa9c), CODE XREF=rpl_fflush+50
0000000000006384         cmp        qword [rdi+0x10], rax
0000000000006388         je         loc_6390

                     j_j_fseeko:        // fseeko
000000000000638a         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
000000000000638f         align      16

                     loc_6390:
0000000000006390         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
0000000000006394         cmp        qword [rdi+0x28], rax
0000000000006398         jne        j_j_fseeko                                  ; fseeko

000000000000639a         cmp        qword [rdi+0x48], 0x0
000000000000639f         jne        j_j_fseeko                                  ; fseeko

00000000000063a1         push       r12
00000000000063a3         push       rbp
00000000000063a4         mov        r12d, edx
00000000000063a7         push       rbx
00000000000063a8         mov        rbp, rsi
00000000000063ab         mov        rbx, rdi
00000000000063ae         call       j_fileno                                    ; fileno
00000000000063b3         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
00000000000063b6         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
00000000000063b9         mov        edi, eax                                    ; argument "__fd" for method j_lseek
00000000000063bb         call       j_lseek                                     ; lseek
00000000000063c0         cmp        rax, 0xffffffffffffffff
00000000000063c4         je         loc_63d2

00000000000063c6         and        dword [rbx], 0xffffffef
00000000000063c9         mov        qword [rbx+0x90], rax
00000000000063d0         xor        eax, eax

                     loc_63d2:
00000000000063d2         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
00000000000063d3         pop        rbp
00000000000063d4         pop        r12
00000000000063d6         ret
                        ; endp
00000000000063d7         align      32                                          ; End of unwind block (FDE at 0xaa9c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fseterr:
00000000000063e0         or         dword [rdi], 0x20                           ; Begin of unwind block (FDE at 0xaacc), CODE XREF=rpl_vfprintf+230
00000000000063e3         ret
                        ; endp
00000000000063e4         align      16                                          ; End of unwind block (FDE at 0xaacc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_28: int8_t, -40
        ;    var_38: int64_t, -56
        ;    var_2A8: int64_t, -680
        ;    var_2B0: int64_t, -688
        ;    var_2B8: int64_t, -696
        ;    var_2C0: int64_t, -704
        ;    var_3A8: int64_t, -936
        ;    var_3B0: int8_t, -944
        ;    var_3B4: int32_t, -948
        ;    var_3B8: int32_t, -952
        ;    var_3BC: int32_t, -956
        ;    var_3C8: int64_t, -968
        ;    var_3D0: int64_t, -976
        ;    var_3D8: int64_t, -984
        ;    var_3E0: int64_t, -992
        ;    var_3E8: int64_t, -1000
        ;    var_3F0: int64_t, -1008
        ;    var_3F8: int64_t, -1016
        ;    var_400: int64_t, -1024
        ;    var_408: int64_t, -1032
        ;    var_410: int64_t, -1040
        ;    var_418: int64_t, -1048
        ;    var_420: int64_t, -1056
        ;    var_421: int8_t, -1057
        ;    var_424: int32_t, -1060
        ;    var_430: int64_t, -1072
        ;    var_440: -1088
        ;    var_450: -1104


                     vasnprintf:
00000000000063f0         push       rbp                                         ; Begin of unwind block (FDE at 0xaae4), CODE XREF=rpl_vfprintf+66
00000000000063f1         mov        rbp, rsp
00000000000063f4         push       r15
00000000000063f6         push       r14
00000000000063f8         push       r13
00000000000063fa         push       r12
00000000000063fc         lea        r14, qword [rbp+var_3B0]
0000000000006403         push       rbx
0000000000006404         mov        rbx, rdx
0000000000006407         mov        r12, rcx
000000000000640a         mov        rdx, r14
000000000000640d         sub        rsp, 0x408
0000000000006414         mov        qword [rbp+var_418], rsi
000000000000641b         lea        rsi, qword [rbp+var_2C0]
0000000000006422         mov        qword [rbp+var_3E8], rdi
0000000000006429         mov        rdi, rbx
000000000000642c         mov        qword [rbp+var_410], r14
0000000000006433         mov        rax, qword [fs:0x28]
000000000000643c         mov        qword [rbp+var_38], rax
0000000000006440         xor        eax, eax
0000000000006442         mov        qword [rbp+var_408], rsi
0000000000006449         call       printf_parse                                ; printf_parse
000000000000644e         test       eax, eax
0000000000006450         js         loc_72b8

0000000000006456         mov        rsi, r14
0000000000006459         mov        rdi, r12
000000000000645c         call       printf_fetchargs                            ; printf_fetchargs
0000000000006461         test       eax, eax
0000000000006463         js         loc_7320

0000000000006469         mov        rax, qword [rbp+var_2B0]
0000000000006470         mov        rdx, 0xffffffffffffffff
0000000000006477         add        rax, 0x7
000000000000647b         cmp        rax, 0x6
000000000000647f         cmovbe     rax, rdx
0000000000006483         add        rax, qword [rbp+var_2A8]
000000000000648a         jb         loc_6eb8

0000000000006490         mov        rdi, rax
0000000000006493         xor        r8d, r8d
0000000000006496         add        rdi, 0x6
000000000000649a         setb       r8b
000000000000649e         jb         loc_6eb8

00000000000064a4         cmp        rdi, 0xf9f
00000000000064ab         jbe        loc_65f8

00000000000064b1         cmp        rdi, 0xffffffffffffffff
00000000000064b5         mov        qword [rbp+var_3C8], r8
00000000000064bc         je         loc_6eb8

00000000000064c2         call       j_malloc                                    ; malloc
00000000000064c7         test       rax, rax
00000000000064ca         mov        qword [rbp+var_3D8], rax
00000000000064d1         je         loc_6eb8

00000000000064d7         mov        r8, qword [rbp+var_3C8]
00000000000064de         mov        qword [rbp+var_420], rax

                     loc_64e5:
00000000000064e5         xor        r12d, r12d                                  ; CODE XREF=vasnprintf+558
00000000000064e8         cmp        qword [rbp+var_3E8], 0x0
00000000000064f0         je         loc_64fc

00000000000064f2         mov        rax, qword [rbp+var_418]
00000000000064f9         mov        r12, qword [rax]

                     loc_64fc:
00000000000064fc         mov        r13, qword [rbp+var_2B8]                    ; CODE XREF=vasnprintf+256
0000000000006503         lea        rax, qword [rbp+var_3BC]
000000000000650a         mov        r15, qword [rbp+var_3E8]
0000000000006511         mov        qword [rbp+var_400], 0x0
000000000000651c         mov        qword [rbp+var_3F0], rax
0000000000006523         mov        rax, rbx
0000000000006526         mov        rbx, r8
0000000000006529         mov        rcx, qword [r13]
000000000000652d         mov        r8, rax
0000000000006530         cmp        rcx, r8
0000000000006533         je         loc_6ea1

                     loc_6539:
0000000000006539         sub        rcx, r8                                     ; CODE XREF=vasnprintf+2731
000000000000653c         mov        rax, rbx
000000000000653f         add        rax, rcx
0000000000006542         mov        r14, rax
0000000000006545         jae        loc_6628

000000000000654b         cmp        r12, 0xffffffffffffffff
000000000000654f         je         loc_7020

                     loc_6555:
0000000000006555         call       j___errno_location                          ; __errno_location, CODE XREF=vasnprintf+1250, vasnprintf+2694, loc_6f60, vasnprintf+2950, vasnprintf+3039, loc_70b8, vasnprintf+3299, vasnprintf+3309, vasnprintf+3371, vasnprintf+3515, loc_72d0
000000000000655a         mov        qword [rbp+var_3C8], rax

                     loc_6561:
0000000000006561         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+1600, vasnprintf+1618, vasnprintf+1668, vasnprintf+2558, vasnprintf+4338
0000000000006568         je         loc_6573

000000000000656a         test       r15, r15
000000000000656d         jne        loc_7050

                     loc_6573:
0000000000006573         mov        rax, qword [rbp+var_420]                    ; CODE XREF=vasnprintf+376, vasnprintf+3176
000000000000657a         test       rax, rax
000000000000657d         je         loc_6587

000000000000657f         mov        rdi, rax                                    ; argument "__ptr" for method j_free
0000000000006582         call       j_free                                      ; free

                     loc_6587:
0000000000006587         mov        rax, qword [rbp+var_408]                    ; CODE XREF=vasnprintf+397, vasnprintf+2772
000000000000658e         mov        rdi, qword [rbp+var_2B8]
0000000000006595         add        rax, 0x20
0000000000006599         cmp        rdi, rax
000000000000659c         je         loc_65a3

000000000000659e         call       j_free                                      ; free

                     loc_65a3:
00000000000065a3         mov        rax, qword [rbp+var_410]                    ; CODE XREF=vasnprintf+428
00000000000065aa         mov        rdi, qword [rbp+var_3A8]
00000000000065b1         add        rax, 0x10
00000000000065b5         cmp        rdi, rax
00000000000065b8         je         loc_65bf

00000000000065ba         call       j_free                                      ; free

                     loc_65bf:
00000000000065bf         mov        rax, qword [rbp+var_3C8]                    ; CODE XREF=vasnprintf+456
00000000000065c6         xor        r15d, r15d
00000000000065c9         mov        dword [rax], 0xc

                     loc_65cf:
00000000000065cf         mov        rdi, qword [rbp+var_38]                     ; CODE XREF=vasnprintf+1978, vasnprintf+3774, vasnprintf+3787, vasnprintf+3958, vasnprintf+4183
00000000000065d3         xor        rdi, qword [fs:0x28]
00000000000065dc         mov        rax, r15
00000000000065df         jne        loc_74e7

00000000000065e5         lea        rsp, qword [rbp+var_28]
00000000000065e9         pop        rbx
00000000000065ea         pop        r12
00000000000065ec         pop        r13
00000000000065ee         pop        r14
00000000000065f0         pop        r15
00000000000065f2         pop        rbp
00000000000065f3         ret
                        ; endp
00000000000065f4         align      8

                     loc_65f8:
00000000000065f8         add        rax, 0x24                                   ; CODE XREF=vasnprintf+187
00000000000065fc         mov        qword [rbp+var_420], 0x0
0000000000006607         and        rax, 0xfffffffffffffff0
000000000000660b         sub        rsp, rax
000000000000660e         lea        rax, qword [rsp+0x430+var_421]
0000000000006613         and        rax, 0xfffffffffffffff0
0000000000006617         mov        qword [rbp+var_3D8], rax
000000000000661e         jmp        loc_64e5
0000000000006623         align      8

                     loc_6628:
0000000000006628         cmp        r12, rax                                    ; CODE XREF=vasnprintf+341
000000000000662b         jae        loc_6694

000000000000662d         test       r12, r12
0000000000006630         jne        loc_6f60

0000000000006636         cmp        rax, 0xc
000000000000663a         ja         loc_6f72

0000000000006640         mov        r12d, 0xc

                     loc_6646:
0000000000006646         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+2940
000000000000664d         sete       dl
0000000000006650         test       r15, r15
0000000000006653         je         loc_6f98

                     loc_6659:
0000000000006659         test       dl, dl                                      ; CODE XREF=vasnprintf+2972
000000000000665b         jne        loc_6f98

0000000000006661         mov        rsi, r12                                    ; argument "__size" for method j_realloc
0000000000006664         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
0000000000006667         mov        qword [rbp+var_3D0], r8
000000000000666e         mov        qword [rbp+var_3C8], rcx
0000000000006675         call       j_realloc                                   ; realloc
000000000000667a         test       rax, rax
000000000000667d         mov        rcx, qword [rbp+var_3C8]
0000000000006684         mov        r8, qword [rbp+var_3D0]
000000000000668b         je         loc_703b

0000000000006691         mov        r15, rax

                     loc_6694:
0000000000006694         lea        rdi, qword [r15+rbx]                        ; argument "__dest" for method j_memcpy, CODE XREF=vasnprintf+571, vasnprintf+3107, vasnprintf+3123, vasnprintf+3571
0000000000006698         mov        rdx, rcx                                    ; argument "__n" for method j_memcpy
000000000000669b         mov        rsi, r8                                     ; argument "__src" for method j_memcpy
000000000000669e         call       j_memcpy                                    ; memcpy

                     loc_66a3:
00000000000066a3         mov        rax, qword [rbp+var_400]                    ; CODE XREF=vasnprintf+2740
00000000000066aa         cmp        qword [rbp+var_2C0], rax
00000000000066b1         je         loc_736b

00000000000066b7         movzx      edx, byte [r13+0x48]
00000000000066bc         mov        rax, qword [r13+0x50]
00000000000066c0         cmp        dl, 0x25
00000000000066c3         je         loc_6e58

00000000000066c9         cmp        rax, 0xffffffffffffffff
00000000000066cd         je         loc_7316

00000000000066d3         mov        r8, qword [rbp+var_3A8]
00000000000066da         shl        rax, 0x5
00000000000066de         add        rax, r8
00000000000066e1         cmp        dl, 0x6e
00000000000066e4         mov        edi, dword [rax]
00000000000066e6         mov        dword [rbp+var_3D0], edi
00000000000066ec         je         loc_6ed0

00000000000066f2         mov        eax, dword [r13+0x10]
00000000000066f6         mov        rdi, qword [rbp+var_3D8]
00000000000066fd         test       al, 0x1
00000000000066ff         mov        byte [rdi], 0x25
0000000000006702         lea        rbx, qword [rdi+1]
0000000000006706         je         loc_6717

0000000000006708         mov        rdi, qword [rbp+var_3D8]
000000000000670f         lea        rbx, qword [rdi+2]
0000000000006713         mov        byte [rdi+1], 0x27

                     loc_6717:
0000000000006717         test       al, 0x2                                     ; CODE XREF=vasnprintf+790
0000000000006719         je         loc_6722

000000000000671b         mov        byte [rbx], 0x2d
000000000000671e         add        rbx, 0x1

                     loc_6722:
0000000000006722         test       al, 0x4                                     ; CODE XREF=vasnprintf+809
0000000000006724         je         loc_672d

0000000000006726         mov        byte [rbx], 0x2b
0000000000006729         add        rbx, 0x1

                     loc_672d:
000000000000672d         test       al, 0x8                                     ; CODE XREF=vasnprintf+820
000000000000672f         je         loc_6738

0000000000006731         mov        byte [rbx], 0x20
0000000000006734         add        rbx, 0x1

                     loc_6738:
0000000000006738         test       al, 0x10                                    ; CODE XREF=vasnprintf+831
000000000000673a         je         loc_6743

000000000000673c         mov        byte [rbx], 0x23
000000000000673f         add        rbx, 0x1

                     loc_6743:
0000000000006743         test       al, 0x40                                    ; CODE XREF=vasnprintf+842
0000000000006745         je         loc_674e

0000000000006747         mov        byte [rbx], 0x49
000000000000674a         add        rbx, 0x1

                     loc_674e:
000000000000674e         test       al, 0x20                                    ; CODE XREF=vasnprintf+853
0000000000006750         je         loc_6759

0000000000006752         mov        byte [rbx], 0x30
0000000000006755         add        rbx, 0x1

                     loc_6759:
0000000000006759         mov        rsi, qword [r13+0x18]                       ; CODE XREF=vasnprintf+864
000000000000675d         mov        rdx, qword [r13+0x20]
0000000000006761         cmp        rsi, rdx
0000000000006764         je         loc_6796

0000000000006766         mov        rcx, rdx
0000000000006769         mov        rdi, rbx                                    ; argument "__dest" for method j_memcpy
000000000000676c         mov        qword [rbp+var_3E0], r8
0000000000006773         sub        rcx, rsi
0000000000006776         mov        rdx, rcx                                    ; argument "__n" for method j_memcpy
0000000000006779         mov        qword [rbp+var_3C8], rcx
0000000000006780         call       j_memcpy                                    ; memcpy
0000000000006785         mov        rcx, qword [rbp+var_3C8]
000000000000678c         mov        r8, qword [rbp+var_3E0]
0000000000006793         add        rbx, rcx

                     loc_6796:
0000000000006796         mov        rsi, qword [r13+0x30]                       ; CODE XREF=vasnprintf+884
000000000000679a         mov        rdx, qword [r13+0x38]
000000000000679e         cmp        rsi, rdx
00000000000067a1         je         loc_67d3

00000000000067a3         mov        rcx, rdx
00000000000067a6         mov        rdi, rbx                                    ; argument "__dest" for method j_memcpy
00000000000067a9         mov        qword [rbp+var_3E0], r8
00000000000067b0         sub        rcx, rsi
00000000000067b3         mov        rdx, rcx                                    ; argument "__n" for method j_memcpy
00000000000067b6         mov        qword [rbp+var_3C8], rcx
00000000000067bd         call       j_memcpy                                    ; memcpy
00000000000067c2         mov        rcx, qword [rbp+var_3C8]
00000000000067c9         mov        r8, qword [rbp+var_3E0]
00000000000067d0         add        rbx, rcx

                     loc_67d3:
00000000000067d3         mov        edi, dword [rbp+var_3D0]                    ; CODE XREF=vasnprintf+945
00000000000067d9         cmp        edi, 0x10
00000000000067dc         ja         loc_680b

00000000000067de         mov        eax, 0x1
00000000000067e3         mov        ecx, edi
00000000000067e5         shl        rax, cl
00000000000067e8         test       eax, 0x14180
00000000000067ed         jne        loc_6804

00000000000067ef         test       ah, 0x10
00000000000067f2         jne        loc_7150

00000000000067f8         test       ah, 0x6
00000000000067fb         je         loc_680b

00000000000067fd         mov        byte [rbx], 0x6c
0000000000006800         add        rbx, 0x1

                     loc_6804:
0000000000006804         mov        byte [rbx], 0x6c                            ; CODE XREF=vasnprintf+1021
0000000000006807         add        rbx, 0x1

                     loc_680b:
000000000000680b         movzx      eax, byte [r13+0x48]                        ; CODE XREF=vasnprintf+1004, vasnprintf+1035, vasnprintf+3431
0000000000006810         mov        byte [rbx+1], 0x0
0000000000006814         mov        byte [rbx], al
0000000000006816         mov        rax, qword [r13+0x28]
000000000000681a         cmp        rax, 0xffffffffffffffff
000000000000681e         je         loc_6f50

0000000000006824         shl        rax, 0x5
0000000000006828         add        rax, r8
000000000000682b         cmp        dword [rax], 0x5
000000000000682e         jne        loc_7316

0000000000006834         mov        eax, dword [rax+0x10]
0000000000006837         mov        dword [rbp+var_3E0], 0x1
0000000000006841         mov        dword [rbp+var_3B8], eax

                     loc_6847:
0000000000006847         mov        rax, qword [r13+0x40]                       ; CODE XREF=vasnprintf+2922
000000000000684b         cmp        rax, 0xffffffffffffffff
000000000000684f         je         loc_687c

0000000000006851         shl        rax, 0x5
0000000000006855         add        r8, rax
0000000000006858         cmp        dword [r8], 0x5
000000000000685c         jne        loc_7316

0000000000006862         mov        eax, dword [rbp+var_3E0]
0000000000006868         mov        edx, dword [r8+0x10]
000000000000686c         mov        dword [rbp+rax*4+var_3B8], edx
0000000000006873         lea        eax, dword [rax+1]
0000000000006876         mov        dword [rbp+var_3E0], eax

                     loc_687c:
000000000000687c         mov        rax, r14                                    ; CODE XREF=vasnprintf+1119
000000000000687f         xor        edx, edx
0000000000006881         add        rax, 0x2
0000000000006885         jb         loc_74ec

000000000000688b         cmp        r12, rax
000000000000688e         jae        loc_68db

0000000000006890         test       r12, r12
0000000000006893         jne        loc_70b8

0000000000006899         cmp        rax, 0xc
000000000000689d         ja         loc_70d0

00000000000068a3         mov        r12d, 0xc

                     loc_68a9:
00000000000068a9         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+3284
00000000000068b0         sete       dl
00000000000068b3         test       r15, r15
00000000000068b6         je         loc_7100

                     loc_68bc:
00000000000068bc         test       dl, dl                                      ; CODE XREF=vasnprintf+3331
00000000000068be         jne        loc_7100

00000000000068c4         mov        rsi, r12                                    ; argument "__size" for method j_realloc
00000000000068c7         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
00000000000068ca         call       j_realloc                                   ; realloc
00000000000068cf         test       rax, rax
00000000000068d2         je         loc_6555

00000000000068d8         mov        r15, rax

                     loc_68db:
00000000000068db         mov        byte [r15+r14], 0x0                         ; CODE XREF=vasnprintf+1182, vasnprintf+3411, vasnprintf+3795, vasnprintf+4357
00000000000068e0         call       j___errno_location                          ; __errno_location
00000000000068e5         mov        qword [rbp+var_3C8], rax
00000000000068ec         mov        eax, dword [rax]
00000000000068ee         mov        qword [rbp+var_3F8], rbx
00000000000068f5         mov        dword [rbp+var_424], eax
00000000000068fb         nop        dword [rax+rax]

                     loc_6900:
0000000000006900         mov        rax, qword [rbp+var_3C8]                    ; CODE XREF=vasnprintf+1591, vasnprintf+1677, vasnprintf+2598, vasnprintf+2652, vasnprintf+2755, vasnprintf+4332
0000000000006907         mov        rbx, r12
000000000000690a         mov        r10d, 0x7fffffff
0000000000006910         sub        rbx, r14
0000000000006913         mov        dword [rbp+var_3BC], 0xffffffff
000000000000691d         cmp        rbx, 0x7fffffff
0000000000006924         mov        dword [rax], 0x0
000000000000692a         mov        eax, dword [rbp+var_3D0]
0000000000006930         cmovbe     r10, rbx
0000000000006934         cmp        eax, 0x11
0000000000006937         ja         loc_7316

000000000000693d         lea        rsi, qword [switch_table_9730]              ; switch_table_9730
0000000000006944         movsxd     rax, dword [rsi+rax*4]
0000000000006948         add        rax, rsi
000000000000694b         jmp        rax                                         ; switch statement using table at 0x9730, with 18 cases, 0x6950,0x6a88,0x6bb0,0x6c38,0x6cb8,0x6cf8,0x6d80,0x6db0,0x7316
000000000000694d         align      16

                     loc_6950:
0000000000006950         mov        rax, qword [r13+0x50]                       ; case 17, CODE XREF=vasnprintf+1371
0000000000006954         lea        rdi, qword [r15+r14]
0000000000006958         shl        rax, 0x5
000000000000695c         add        rax, qword [rbp+var_3A8]
0000000000006963         mov        r9, qword [rax+0x10]
0000000000006967         mov        eax, dword [rbp+var_3E0]
000000000000696d         cmp        eax, 0x1
0000000000006970         je         loc_6e38

0000000000006976         cmp        eax, 0x2
0000000000006979         je         loc_6e20

000000000000697f         sub        rsp, 0x8
0000000000006983         push       qword [rbp+var_3F0]

                     loc_6989:
0000000000006989         mov        r8, qword [rbp+var_3D8]                     ; CODE XREF=vasnprintf+3262
0000000000006990         mov        rsi, r10
0000000000006993         mov        rcx, 0xffffffffffffffff
000000000000699a         mov        edx, 0x1
000000000000699f         xor        eax, eax
00000000000069a1         mov        qword [rbp+var_430], r10
00000000000069a8         call       j___snprintf_chk                            ; __snprintf_chk
00000000000069ad         pop        rsi
00000000000069ae         pop        rdi
00000000000069af         mov        r10, qword [rbp+var_430]

                     loc_69b6:
00000000000069b6         mov        ecx, dword [rbp+var_3BC]                    ; CODE XREF=vasnprintf+2109, vasnprintf+2238, vasnprintf+2433, vasnprintf+3237
00000000000069bc         test       ecx, ecx
00000000000069be         js         loc_6afc

                     loc_69c4:
00000000000069c4         movsxd     rdx, ecx                                    ; CODE XREF=vasnprintf+1798
00000000000069c7         cmp        rdx, r10
00000000000069ca         jae        loc_69da

00000000000069cc         add        rdx, r15
00000000000069cf         cmp        byte [rdx+r14], 0x0
00000000000069d4         jne        loc_7316

                     loc_69da:
00000000000069da         cmp        ecx, eax                                    ; CODE XREF=vasnprintf+1498
00000000000069dc         jge        loc_69e6

                     loc_69de:
00000000000069de         mov        dword [rbp+var_3BC], eax                    ; CODE XREF=vasnprintf+1823
00000000000069e4         mov        ecx, eax

                     loc_69e6:
00000000000069e6         lea        eax, dword [rcx+1]                          ; CODE XREF=vasnprintf+1516
00000000000069e9         cmp        rax, r10
00000000000069ec         jb         loc_7220

00000000000069f2         cmp        rbx, 0x7ffffffe
00000000000069f9         ja         loc_7240

00000000000069ff         lea        rsi, qword [r12+r12]
0000000000006a03         lea        edx, dword [rcx+2]
0000000000006a06         test       r12, r12
0000000000006a09         mov        rax, 0xffffffffffffffff
0000000000006a10         cmovns     rax, rsi
0000000000006a14         add        rdx, r14
0000000000006a17         jb         loc_74d8

0000000000006a1d         cmp        rax, rdx
0000000000006a20         cmovb      rax, rdx
0000000000006a24         cmp        r12, rax
0000000000006a27         jae        loc_6900

0000000000006a2d         test       r12, r12
0000000000006a30         js         loc_6561

0000000000006a36         cmp        rsi, rax
0000000000006a39         mov        r12, rsi
0000000000006a3c         jae        loc_6a4b

0000000000006a3e         cmp        rax, 0xffffffffffffffff
0000000000006a42         je         loc_6561

0000000000006a48         mov        r12, rax

                     loc_6a4b:
0000000000006a4b         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+1612
0000000000006a52         sete       bl
0000000000006a55         test       r15, r15
0000000000006a58         je         loc_6de0

0000000000006a5e         test       bl, bl
0000000000006a60         jne        loc_6de0

0000000000006a66         mov        rsi, r12                                    ; argument "__size" for method j_realloc
0000000000006a69         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
0000000000006a6c         call       j_realloc                                   ; realloc
0000000000006a71         test       rax, rax
0000000000006a74         je         loc_6561

0000000000006a7a         mov        r15, rax
0000000000006a7d         jmp        loc_6900
0000000000006a82         align      8

                     loc_6a88:
0000000000006a88         mov        rax, qword [r13+0x50]                       ; case 14, CODE XREF=vasnprintf+1371
0000000000006a8c         lea        rdi, qword [r15+r14]
0000000000006a90         shl        rax, 0x5
0000000000006a94         add        rax, qword [rbp+var_3A8]
0000000000006a9b         mov        r9d, dword [rax+0x10]
0000000000006a9f         mov        eax, dword [rbp+var_3E0]
0000000000006aa5         cmp        eax, 0x1
0000000000006aa8         je         loc_6ce0

                     loc_6aae:
0000000000006aae         cmp        eax, 0x2                                    ; CODE XREF=vasnprintf+2281, vasnprintf+2481, vasnprintf+2529
0000000000006ab1         je         loc_6d28

                     loc_6ab7:
0000000000006ab7         sub        rsp, 0x8                                    ; CODE XREF=vasnprintf+2350
0000000000006abb         push       qword [rbp+var_3F0]

                     loc_6ac1:
0000000000006ac1         mov        r8, qword [rbp+var_3D8]                     ; CODE XREF=vasnprintf+2303
0000000000006ac8         mov        rcx, 0xffffffffffffffff
0000000000006acf         mov        edx, 0x1
0000000000006ad4         mov        rsi, r10
0000000000006ad7         xor        eax, eax
0000000000006ad9         mov        qword [rbp+var_430], r10
0000000000006ae0         call       j___snprintf_chk                            ; __snprintf_chk
0000000000006ae5         pop        rdx
0000000000006ae6         pop        rcx
0000000000006ae7         mov        ecx, dword [rbp+var_3BC]
0000000000006aed         mov        r10, qword [rbp+var_430]
0000000000006af4         test       ecx, ecx
0000000000006af6         jns        loc_69c4

                     loc_6afc:
0000000000006afc         mov        rdi, qword [rbp+var_3F8]                    ; CODE XREF=vasnprintf+1486
0000000000006b03         cmp        byte [rdi+1], 0x0
0000000000006b07         jne        loc_6e48

0000000000006b0d         test       eax, eax
0000000000006b0f         jns        loc_69de

0000000000006b15         mov        rax, qword [rbp+var_3C8]
0000000000006b1c         mov        ebx, dword [rax]
0000000000006b1e         test       ebx, ebx
0000000000006b20         jne        loc_6b40

0000000000006b22         movzx      eax, byte [r13+0x48]
0000000000006b27         mov        ebx, 0x16
0000000000006b2c         and        eax, 0xffffffef
0000000000006b2f         cmp        al, 0x63
0000000000006b31         mov        eax, 0x54
0000000000006b36         cmove      ebx, eax
0000000000006b39         nop        dword [rax]

                     loc_6b40:
0000000000006b40         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+1840
0000000000006b47         je         loc_6b52

0000000000006b49         test       r15, r15
0000000000006b4c         jne        loc_72fc

                     loc_6b52:
0000000000006b52         mov        rax, qword [rbp+var_420]                    ; CODE XREF=vasnprintf+1879, vasnprintf+3860
0000000000006b59         test       rax, rax
0000000000006b5c         je         loc_6b66

0000000000006b5e         mov        rdi, rax                                    ; argument "__ptr" for method j_free
0000000000006b61         call       j_free                                      ; free

                     loc_6b66:
0000000000006b66         mov        rax, qword [rbp+var_408]                    ; CODE XREF=vasnprintf+1900
0000000000006b6d         mov        rdi, qword [rbp+var_2B8]
0000000000006b74         add        rax, 0x20
0000000000006b78         cmp        rdi, rax
0000000000006b7b         je         loc_6b82

0000000000006b7d         call       j_free                                      ; free

                     loc_6b82:
0000000000006b82         mov        rax, qword [rbp+var_410]                    ; CODE XREF=vasnprintf+1931
0000000000006b89         mov        rdi, qword [rbp+var_3A8]
0000000000006b90         add        rax, 0x10
0000000000006b94         cmp        rdi, rax
0000000000006b97         je         loc_6b9e

0000000000006b99         call       j_free                                      ; free

                     loc_6b9e:
0000000000006b9e         mov        rax, qword [rbp+var_3C8]                    ; CODE XREF=vasnprintf+1959
0000000000006ba5         xor        r15d, r15d
0000000000006ba8         mov        dword [rax], ebx
0000000000006baa         jmp        loc_65cf
0000000000006baf         align      16

                     loc_6bb0:
0000000000006bb0         mov        rax, qword [r13+0x50]                       ; case 12, CODE XREF=vasnprintf+1371
0000000000006bb4         lea        rdi, qword [r15+r14]
0000000000006bb8         shl        rax, 0x5
0000000000006bbc         add        rax, qword [rbp+var_3A8]
0000000000006bc3         fld        tword [rax+0x10]
0000000000006bc6         mov        eax, dword [rbp+var_3E0]
0000000000006bcc         cmp        eax, 0x1
0000000000006bcf         je         loc_7200

0000000000006bd5         cmp        eax, 0x2
0000000000006bd8         jne        loc_70a0

0000000000006bde         mov        eax, dword [rbp+var_3B4]
0000000000006be4         sub        rsp, 0x8
0000000000006be8         push       qword [rbp+var_3F0]
0000000000006bee         mov        r9d, dword [rbp+var_3B8]
0000000000006bf5         mov        r8, qword [rbp+var_3D8]
0000000000006bfc         mov        rsi, r10
0000000000006bff         sub        rsp, 0x18
0000000000006c03         mov        rcx, 0xffffffffffffffff
0000000000006c0a         mov        edx, 0x1
0000000000006c0f         fstp       tword [rsp+0x458+var_450]
0000000000006c13         push       rax
0000000000006c14         xor        eax, eax
0000000000006c16         mov        qword [rbp+var_430], r10
0000000000006c1d         call       j___snprintf_chk                            ; __snprintf_chk
0000000000006c22         add        rsp, 0x30
0000000000006c26         mov        r10, qword [rbp+var_430]
0000000000006c2d         jmp        loc_69b6
0000000000006c32         align      8

                     loc_6c38:
0000000000006c38         mov        rax, qword [r13+0x50]                       ; case 11, CODE XREF=vasnprintf+1371
0000000000006c3c         lea        rdi, qword [r15+r14]
0000000000006c40         shl        rax, 0x5
0000000000006c44         add        rax, qword [rbp+var_3A8]
0000000000006c4b         movsd      xmm0, qword [rax+0x10]
0000000000006c50         mov        eax, dword [rbp+var_3E0]
0000000000006c56         cmp        eax, 0x1
0000000000006c59         je         loc_71f0

0000000000006c5f         cmp        eax, 0x2
0000000000006c62         jne        loc_7060

0000000000006c68         mov        eax, dword [rbp+var_3B4]
0000000000006c6e         push       qword [rbp+var_3F0]
0000000000006c74         push       rax

                     loc_6c75:
0000000000006c75         mov        r9d, dword [rbp+var_3B8]                    ; CODE XREF=vasnprintf+3594
0000000000006c7c         mov        r8, qword [rbp+var_3D8]
0000000000006c83         mov        rsi, r10
0000000000006c86         mov        rcx, 0xffffffffffffffff
0000000000006c8d         mov        edx, 0x1
0000000000006c92         mov        eax, 0x1
0000000000006c97         mov        qword [rbp+var_430], r10
0000000000006c9e         call       j___snprintf_chk                            ; __snprintf_chk
0000000000006ca3         pop        r8
0000000000006ca5         mov        r10, qword [rbp+var_430]
0000000000006cac         pop        r9
0000000000006cae         jmp        loc_69b6
0000000000006cb3         align      8

                     loc_6cb8:
0000000000006cb8         mov        rax, qword [r13+0x50]                       ; case 4, CODE XREF=vasnprintf+1371
0000000000006cbc         lea        rdi, qword [r15+r14]
0000000000006cc0         shl        rax, 0x5
0000000000006cc4         add        rax, qword [rbp+var_3A8]
0000000000006ccb         movzx      r9d, word [rax+0x10]
0000000000006cd0         mov        eax, dword [rbp+var_3E0]
0000000000006cd6         cmp        eax, 0x1
0000000000006cd9         jne        loc_6aae

0000000000006cdf         nop

                     loc_6ce0:
0000000000006ce0         push       qword [rbp+var_3F0]                         ; CODE XREF=vasnprintf+1720, vasnprintf+2345, vasnprintf+2487, vasnprintf+2535
0000000000006ce6         push       r9

                     loc_6ce8:
0000000000006ce8         mov        r9d, dword [rbp+var_3B8]                    ; CODE XREF=vasnprintf+2640
0000000000006cef         jmp        loc_6ac1
0000000000006cf4         align      8

                     loc_6cf8:
0000000000006cf8         mov        rax, qword [r13+0x50]                       ; case 3, CODE XREF=vasnprintf+1371
0000000000006cfc         lea        rdi, qword [r15+r14]
0000000000006d00         shl        rax, 0x5
0000000000006d04         add        rax, qword [rbp+var_3A8]
0000000000006d0b         movsx      r9d, word [rax+0x10]
0000000000006d10         mov        eax, dword [rbp+var_3E0]
0000000000006d16         cmp        eax, 0x1
0000000000006d19         je         loc_6ce0

0000000000006d1b         cmp        eax, 0x2
0000000000006d1e         jne        loc_6ab7

0000000000006d24         nop        dword [rax]

                     loc_6d28:
0000000000006d28         sub        rsp, 0x8                                    ; CODE XREF=vasnprintf+1729
0000000000006d2c         push       qword [rbp+var_3F0]
0000000000006d32         push       r9

                     loc_6d34:
0000000000006d34         mov        eax, dword [rbp+var_3B4]                    ; CODE XREF=vasnprintf+2620
0000000000006d3a         push       rax

                     loc_6d3b:
0000000000006d3b         mov        r9d, dword [rbp+var_3B8]                    ; CODE XREF=vasnprintf+3617
0000000000006d42         mov        r8, qword [rbp+var_3D8]
0000000000006d49         mov        rsi, r10
0000000000006d4c         mov        rcx, 0xffffffffffffffff
0000000000006d53         mov        edx, 0x1
0000000000006d58         xor        eax, eax
0000000000006d5a         mov        qword [rbp+var_430], r10
0000000000006d61         call       j___snprintf_chk                            ; __snprintf_chk
0000000000006d66         add        rsp, 0x20
0000000000006d6a         mov        r10, qword [rbp+var_430]
0000000000006d71         jmp        loc_69b6
0000000000006d76         align      128

                     loc_6d80:
0000000000006d80         mov        rax, qword [r13+0x50]                       ; case 2, CODE XREF=vasnprintf+1371
0000000000006d84         lea        rdi, qword [r15+r14]
0000000000006d88         shl        rax, 0x5
0000000000006d8c         add        rax, qword [rbp+var_3A8]
0000000000006d93         movzx      r9d, byte [rax+0x10]
0000000000006d98         mov        eax, dword [rbp+var_3E0]
0000000000006d9e         cmp        eax, 0x1
0000000000006da1         jne        loc_6aae

0000000000006da7         jmp        loc_6ce0
0000000000006dac         align      16

                     loc_6db0:
0000000000006db0         mov        rax, qword [r13+0x50]                       ; case 1, CODE XREF=vasnprintf+1371
0000000000006db4         lea        rdi, qword [r15+r14]
0000000000006db8         shl        rax, 0x5
0000000000006dbc         add        rax, qword [rbp+var_3A8]
0000000000006dc3         movsx      r9d, byte [rax+0x10]
0000000000006dc8         mov        eax, dword [rbp+var_3E0]
0000000000006dce         cmp        eax, 0x1
0000000000006dd1         jne        loc_6aae

0000000000006dd7         jmp        loc_6ce0
0000000000006ddc         align      32

                     loc_6de0:
0000000000006de0         mov        rdi, r12                                    ; argument "__size" for method j_malloc, CODE XREF=vasnprintf+1640, vasnprintf+1648
0000000000006de3         call       j_malloc                                    ; malloc
0000000000006de8         test       rax, rax
0000000000006deb         mov        rcx, rax
0000000000006dee         je         loc_6561

0000000000006df4         test       r14, r14
0000000000006df7         je         loc_6eb0

0000000000006dfd         test       bl, bl
0000000000006dff         je         loc_6eb0

0000000000006e05         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
0000000000006e08         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
0000000000006e0b         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000006e0e         call       j_memcpy                                    ; memcpy
0000000000006e13         mov        r15, rax
0000000000006e16         jmp        loc_6900
0000000000006e1b         align      32

                     loc_6e20:
0000000000006e20         sub        rsp, 0x8                                    ; CODE XREF=vasnprintf+1417
0000000000006e24         push       qword [rbp+var_3F0]
0000000000006e2a         push       r9
0000000000006e2c         jmp        loc_6d34
0000000000006e31         align      8

                     loc_6e38:
0000000000006e38         push       qword [rbp+var_3F0]                         ; CODE XREF=vasnprintf+1408
0000000000006e3e         push       r9
0000000000006e40         jmp        loc_6ce8
0000000000006e45         align      8

                     loc_6e48:
0000000000006e48         mov        byte [rdi+1], 0x0                           ; CODE XREF=vasnprintf+1815
0000000000006e4c         jmp        loc_6900
0000000000006e51         align      8

                     loc_6e58:
0000000000006e58         cmp        rax, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+723
0000000000006e5c         jne        loc_7316

0000000000006e62         mov        rax, r14
0000000000006e65         add        rax, 0x1
0000000000006e69         mov        rbx, rax
0000000000006e6c         jae        loc_6ef8

0000000000006e72         cmp        r12, 0xffffffffffffffff
0000000000006e76         jne        loc_6555

0000000000006e7c         mov        rbx, r12

                     loc_6e7f:
0000000000006e7f         mov        byte [r15+r14], 0x25                        ; CODE XREF=vasnprintf+2827, vasnprintf+2904, vasnprintf+3555, vasnprintf+3847

                     loc_6e84:
0000000000006e84         mov        r8, qword [r13+8]                           ; CODE XREF=vasnprintf+3142, vasnprintf+3446, vasnprintf+3462, vasnprintf+3479, vasnprintf+3653
0000000000006e88         add        r13, 0x58
0000000000006e8c         mov        rcx, qword [r13]
0000000000006e90         add        qword [rbp+var_400], 0x1
0000000000006e98         cmp        rcx, r8
0000000000006e9b         jne        loc_6539

                     loc_6ea1:
0000000000006ea1         mov        r14, rbx                                    ; CODE XREF=vasnprintf+323
0000000000006ea4         jmp        loc_66a3
0000000000006ea9         align      16

                     loc_6eb0:
0000000000006eb0         mov        r15, rcx                                    ; CODE XREF=vasnprintf+2567, vasnprintf+2575
0000000000006eb3         jmp        loc_6900

                     loc_6eb8:
0000000000006eb8         call       j___errno_location                          ; __errno_location, CODE XREF=vasnprintf+154, vasnprintf+174, vasnprintf+204, vasnprintf+225
0000000000006ebd         mov        qword [rbp+var_3C8], rax
0000000000006ec4         jmp        loc_6587
0000000000006ec9         align      16

                     loc_6ed0:
0000000000006ed0         mov        edx, edi                                    ; CODE XREF=vasnprintf+764
0000000000006ed2         sub        edx, 0x12
0000000000006ed5         cmp        edx, 0x4
0000000000006ed8         ja         loc_7316

0000000000006ede         lea        rdi, qword [switch_table_9778]              ; switch_table_9778
0000000000006ee5         mov        rax, qword [rax+0x10]
0000000000006ee9         movsxd     rdx, dword [rdi+rdx*4]
0000000000006eed         add        rdx, rdi
0000000000006ef0         jmp        rdx                                         ; switch statement using table at 0x9778, with 5 cases, 0x7030,0x7160,0x7170,0x7180
0000000000006ef2         align      8

                     loc_6ef8:
0000000000006ef8         cmp        r12, rax                                    ; CODE XREF=vasnprintf+2684
0000000000006efb         jae        loc_6e7f

0000000000006efd         test       r12, r12
0000000000006f00         jne        loc_72d0

0000000000006f06         cmp        rax, 0xc
0000000000006f0a         ja         loc_72e2

0000000000006f10         mov        r12d, 0xc

                     loc_6f16:
0000000000006f16         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+3820, vasnprintf+3839
0000000000006f1d         sete       dl
0000000000006f20         test       r15, r15
0000000000006f23         je         loc_7190

0000000000006f29         test       dl, dl
0000000000006f2b         jne        loc_7190

0000000000006f31         mov        rsi, r12                                    ; argument "__size" for method j_realloc
0000000000006f34         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
0000000000006f37         call       j_realloc                                   ; realloc
0000000000006f3c         test       rax, rax
0000000000006f3f         je         loc_703b

0000000000006f45         mov        r15, rax
0000000000006f48         jmp        loc_6e7f
0000000000006f4d         align      16

                     loc_6f50:
0000000000006f50         mov        dword [rbp+var_3E0], 0x0                    ; CODE XREF=vasnprintf+1070
0000000000006f5a         jmp        loc_6847
0000000000006f5f         align      32

                     loc_6f60:
0000000000006f60         js         loc_6555                                    ; CODE XREF=vasnprintf+576

0000000000006f66         add        r12, r12
0000000000006f69         cmp        r12, rax
0000000000006f6c         jae        loc_6646

                     loc_6f72:
0000000000006f72         cmp        rax, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+586
0000000000006f76         je         loc_6555

0000000000006f7c         cmp        r15, qword [rbp+var_3E8]
0000000000006f83         mov        r12, rax
0000000000006f86         sete       dl
0000000000006f89         test       r15, r15
0000000000006f8c         jne        loc_6659

0000000000006f92         nop        word [rax+rax]

                     loc_6f98:
0000000000006f98         mov        rdi, r12                                    ; argument "__size" for method j_malloc, CODE XREF=vasnprintf+611, vasnprintf+619
0000000000006f9b         mov        qword [rbp+var_3E0], r8
0000000000006fa2         mov        byte [rbp+var_3D0], dl
0000000000006fa8         mov        qword [rbp+var_3C8], rcx
0000000000006faf         call       j_malloc                                    ; malloc
0000000000006fb4         test       rax, rax
0000000000006fb7         mov        r9, rax
0000000000006fba         mov        rcx, qword [rbp+var_3C8]
0000000000006fc1         movzx      edx, byte [rbp+var_3D0]
0000000000006fc8         mov        r8, qword [rbp+var_3E0]
0000000000006fcf         je         loc_6555

0000000000006fd5         test       rbx, rbx
0000000000006fd8         je         loc_71e0

0000000000006fde         test       dl, dl
0000000000006fe0         je         loc_71e0

0000000000006fe6         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
0000000000006fe9         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
0000000000006fec         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000006fef         mov        qword [rbp+var_3D0], r8
0000000000006ff6         mov        qword [rbp+var_3C8], rcx
0000000000006ffd         call       j_memcpy                                    ; memcpy
0000000000007002         mov        rcx, qword [rbp+var_3C8]
0000000000007009         mov        r15, rax
000000000000700c         mov        r8, qword [rbp+var_3D0]
0000000000007013         jmp        loc_6694
0000000000007018         align      32

                     loc_7020:
0000000000007020         mov        r14, r12                                    ; CODE XREF=vasnprintf+351
0000000000007023         jmp        loc_6694
0000000000007028         align      16

                     loc_7030:
0000000000007030         mov        qword [rax], r14                            ; case 4, CODE XREF=vasnprintf+2816
0000000000007033         mov        rbx, r14
0000000000007036         jmp        loc_6e84

                     loc_703b:
000000000000703b         call       j___errno_location                          ; __errno_location, CODE XREF=vasnprintf+667, vasnprintf+2895, vasnprintf+4051
0000000000007040         mov        qword [rbp+var_3C8], rax
0000000000007047         nop        word [rax+rax]

                     loc_7050:
0000000000007050         mov        rdi, r15                                    ; argument "__ptr" for method j_free, CODE XREF=vasnprintf+381
0000000000007053         call       j_free                                      ; free
0000000000007058         jmp        loc_6573
000000000000705d         align      32

                     loc_7060:
0000000000007060         mov        r9, qword [rbp+var_3F0]                     ; CODE XREF=vasnprintf+2162
0000000000007067         mov        r8, qword [rbp+var_3D8]
000000000000706e         mov        rsi, r10
0000000000007071         mov        rcx, 0xffffffffffffffff
0000000000007078         mov        edx, 0x1
000000000000707d         mov        eax, 0x1
0000000000007082         mov        qword [rbp+var_430], r10
0000000000007089         call       j___snprintf_chk                            ; __snprintf_chk
000000000000708e         mov        r10, qword [rbp+var_430]
0000000000007095         jmp        loc_69b6
000000000000709a         align      32

                     loc_70a0:
00000000000070a0         sub        rsp, 0x10                                   ; CODE XREF=vasnprintf+2024
00000000000070a4         mov        r9, qword [rbp+var_3F0]
00000000000070ab         fstp       tword [rsp+0x440+var_440]
00000000000070ae         jmp        loc_6989
00000000000070b3         align      8

                     loc_70b8:
00000000000070b8         js         loc_6555                                    ; CODE XREF=vasnprintf+1187

00000000000070be         add        r12, r12
00000000000070c1         cmp        r12, rax
00000000000070c4         jae        loc_68a9

00000000000070ca         nop        word [rax+rax]

                     loc_70d0:
00000000000070d0         test       rdx, rdx                                    ; CODE XREF=vasnprintf+1197, vasnprintf+4372
00000000000070d3         jne        loc_6555

00000000000070d9         cmp        rax, 0xffffffffffffffff
00000000000070dd         je         loc_6555

00000000000070e3         cmp        r15, qword [rbp+var_3E8]
00000000000070ea         mov        r12, rax
00000000000070ed         sete       dl
00000000000070f0         test       r15, r15
00000000000070f3         jne        loc_68bc

00000000000070f9         nop        dword [rax]

                     loc_7100:
0000000000007100         mov        rdi, r12                                    ; argument "__size" for method j_malloc, CODE XREF=vasnprintf+1222, vasnprintf+1230
0000000000007103         mov        byte [rbp+var_3C8], dl
0000000000007109         call       j_malloc                                    ; malloc
000000000000710e         test       rax, rax
0000000000007111         mov        rcx, rax
0000000000007114         movzx      edx, byte [rbp+var_3C8]
000000000000711b         je         loc_6555

0000000000007121         test       r14, r14
0000000000007124         je         loc_72c0

000000000000712a         test       dl, dl
000000000000712c         je         loc_72c0

0000000000007132         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
0000000000007135         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
0000000000007138         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
000000000000713b         call       j_memcpy                                    ; memcpy
0000000000007140         mov        r15, rax
0000000000007143         jmp        loc_68db
0000000000007148         align      16

                     loc_7150:
0000000000007150         mov        byte [rbx], 0x4c                            ; CODE XREF=vasnprintf+1026
0000000000007153         add        rbx, 0x1
0000000000007157         jmp        loc_680b
000000000000715c         align      32

                     loc_7160:
0000000000007160         mov        byte [rax], r14b                            ; case 0, CODE XREF=vasnprintf+2816
0000000000007163         mov        rbx, r14
0000000000007166         jmp        loc_6e84
000000000000716b         align      16

                     loc_7170:
0000000000007170         mov        dword [rax], r14d                           ; case 2, CODE XREF=vasnprintf+2816
0000000000007173         mov        rbx, r14
0000000000007176         jmp        loc_6e84
000000000000717b         align      128

                     loc_7180:
0000000000007180         mov        word [rax], r14w                            ; case 1, CODE XREF=vasnprintf+2816
0000000000007184         mov        rbx, r14
0000000000007187         jmp        loc_6e84
000000000000718c         align      16

                     loc_7190:
0000000000007190         mov        rdi, r12                                    ; argument "__size" for method j_malloc, CODE XREF=vasnprintf+2867, vasnprintf+2875
0000000000007193         mov        byte [rbp+var_3C8], dl
0000000000007199         call       j_malloc                                    ; malloc
000000000000719e         test       rax, rax
00000000000071a1         mov        rcx, rax
00000000000071a4         movzx      edx, byte [rbp+var_3C8]
00000000000071ab         je         loc_6555

00000000000071b1         test       r14, r14
00000000000071b4         je         loc_72f4

00000000000071ba         test       dl, dl
00000000000071bc         je         loc_72f4

00000000000071c2         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
00000000000071c5         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
00000000000071c8         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
00000000000071cb         call       j_memcpy                                    ; memcpy
00000000000071d0         mov        r15, rax
00000000000071d3         jmp        loc_6e7f
00000000000071d8         align      32

                     loc_71e0:
00000000000071e0         mov        r15, r9                                     ; CODE XREF=vasnprintf+3048, vasnprintf+3056
00000000000071e3         jmp        loc_6694
00000000000071e8         align      16

                     loc_71f0:
00000000000071f0         sub        rsp, 0x8                                    ; CODE XREF=vasnprintf+2153
00000000000071f4         push       qword [rbp+var_3F0]
00000000000071fa         jmp        loc_6c75
00000000000071ff         align      512

                     loc_7200:
0000000000007200         sub        rsp, 0x8                                    ; CODE XREF=vasnprintf+2015
0000000000007204         push       qword [rbp+var_3F0]
000000000000720a         sub        rsp, 0x10
000000000000720e         fstp       tword [rsp+0x450+var_450]
0000000000007211         jmp        loc_6d3b
0000000000007216         align      32

                     loc_7220:
0000000000007220         mov        rax, qword [rbp+var_3C8]                    ; CODE XREF=vasnprintf+1532
0000000000007227         mov        edi, dword [rbp+var_424]
000000000000722d         movsxd     rbx, ecx
0000000000007230         add        rbx, r14
0000000000007233         mov        dword [rax], edi
0000000000007235         jmp        loc_6e84
000000000000723a         align      64

                     loc_7240:
0000000000007240         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+1545
0000000000007247         je         loc_7252

0000000000007249         test       r15, r15
000000000000724c         jne        loc_7309

                     loc_7252:
0000000000007252         mov        rax, qword [rbp+var_420]                    ; CODE XREF=vasnprintf+3671, vasnprintf+3873
0000000000007259         test       rax, rax
000000000000725c         je         loc_7266

000000000000725e         mov        rdi, rax                                    ; argument "__ptr" for method j_free
0000000000007261         call       j_free                                      ; free

                     loc_7266:
0000000000007266         mov        rax, qword [rbp+var_408]                    ; CODE XREF=vasnprintf+3692
000000000000726d         mov        rdi, qword [rbp+var_2B8]
0000000000007274         add        rax, 0x20
0000000000007278         cmp        rdi, rax
000000000000727b         je         loc_7282

000000000000727d         call       j_free                                      ; free

                     loc_7282:
0000000000007282         mov        rax, qword [rbp+var_410]                    ; CODE XREF=vasnprintf+3723
0000000000007289         mov        rdi, qword [rbp+var_3A8]
0000000000007290         add        rax, 0x10
0000000000007294         cmp        rdi, rax
0000000000007297         je         loc_729e

0000000000007299         call       j_free                                      ; free

                     loc_729e:
000000000000729e         mov        rax, qword [rbp+var_3C8]                    ; CODE XREF=vasnprintf+3751
00000000000072a5         xor        r15d, r15d
00000000000072a8         mov        dword [rax], 0x4b
00000000000072ae         jmp        loc_65cf
00000000000072b3         align      8

                     loc_72b8:
00000000000072b8         xor        r15d, r15d                                  ; CODE XREF=vasnprintf+96
00000000000072bb         jmp        loc_65cf

                     loc_72c0:
00000000000072c0         mov        r15, rcx                                    ; CODE XREF=vasnprintf+3380, vasnprintf+3388
00000000000072c3         jmp        loc_68db
00000000000072c8         align      16

                     loc_72d0:
00000000000072d0         js         loc_6555                                    ; CODE XREF=vasnprintf+2832

00000000000072d6         add        r12, r12
00000000000072d9         cmp        r12, rax
00000000000072dc         jae        loc_6f16

                     loc_72e2:
00000000000072e2         cmp        rax, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+2842
00000000000072e6         je         loc_6555

00000000000072ec         mov        r12, rax
00000000000072ef         jmp        loc_6f16

                     loc_72f4:
00000000000072f4         mov        r15, rcx                                    ; CODE XREF=vasnprintf+3524, vasnprintf+3532
00000000000072f7         jmp        loc_6e7f

                     loc_72fc:
00000000000072fc         mov        rdi, r15                                    ; argument "__ptr" for method j_free, CODE XREF=vasnprintf+1884
00000000000072ff         call       j_free                                      ; free
0000000000007304         jmp        loc_6b52

                     loc_7309:
0000000000007309         mov        rdi, r15                                    ; argument "__ptr" for method j_free, CODE XREF=vasnprintf+3676
000000000000730c         call       j_free                                      ; free
0000000000007311         jmp        loc_7252

                     loc_7316:
0000000000007316         call       j_abort                                     ; abort, case 0, CODE XREF=vasnprintf+733, vasnprintf+1086, vasnprintf+1132, vasnprintf+1351, vasnprintf+1371, vasnprintf+1508, vasnprintf+2668, vasnprintf+2792
                        ; endp
000000000000731b         align      32

                     loc_7320:
0000000000007320         mov        rax, qword [rbp+var_408]                    ; CODE XREF=vasnprintf+115
0000000000007327         mov        rdi, qword [rbp+var_2B8]
000000000000732e         add        rax, 0x20
0000000000007332         cmp        rdi, rax
0000000000007335         je         loc_733c

0000000000007337         call       j_free                                      ; free

                     loc_733c:
000000000000733c         mov        rax, qword [rbp+var_410]                    ; CODE XREF=vasnprintf+3909
0000000000007343         mov        rdi, qword [rbp+var_3A8]
000000000000734a         add        rax, 0x10
000000000000734e         cmp        rdi, rax
0000000000007351         je         loc_7358

0000000000007353         call       j_free                                      ; free

                     loc_7358:
0000000000007358         call       j___errno_location                          ; __errno_location, CODE XREF=vasnprintf+3937
000000000000735d         xor        r15d, r15d
0000000000007360         mov        dword [rax], 0x16
0000000000007366         jmp        loc_65cf

                     loc_736b:
000000000000736b         mov        rbx, r14                                    ; CODE XREF=vasnprintf+705
000000000000736e         xor        eax, eax
0000000000007370         add        rbx, 0x1
0000000000007374         jb         loc_7480

000000000000737a         cmp        r12, rbx
000000000000737d         jae        loc_73cc

000000000000737f         test       r12, r12
0000000000007382         jne        loc_74b9

0000000000007388         cmp        rbx, 0xc
000000000000738c         ja         loc_749e

0000000000007392         mov        r12d, 0xc

                     loc_7398:
0000000000007398         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+4292, vasnprintf+4309
000000000000739f         sete       r13b
00000000000073a3         test       r15, r15
00000000000073a6         je         loc_744c

00000000000073ac         test       r13b, r13b
00000000000073af         jne        loc_744c

00000000000073b5         mov        rsi, r12                                    ; argument "__size" for method j_realloc
00000000000073b8         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
00000000000073bb         call       j_realloc                                   ; realloc
00000000000073c0         test       rax, rax
00000000000073c3         je         loc_703b

00000000000073c9         mov        r15, rax

                     loc_73cc:
00000000000073cc         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+3981, vasnprintf+4235, vasnprintf+4249, vasnprintf+4323
00000000000073d3         mov        byte [r15+r14], 0x0
00000000000073d8         je         loc_73f1

00000000000073da         cmp        r12, rbx
00000000000073dd         jbe        loc_73f1

00000000000073df         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
00000000000073e2         mov        rsi, rbx                                    ; argument "__size" for method j_realloc
00000000000073e5         call       j_realloc                                   ; realloc
00000000000073ea         test       rax, rax
00000000000073ed         cmovne     r15, rax

                     loc_73f1:
00000000000073f1         mov        rax, qword [rbp+var_420]                    ; CODE XREF=vasnprintf+4072, vasnprintf+4077
00000000000073f8         test       rax, rax
00000000000073fb         je         loc_7405

00000000000073fd         mov        rdi, rax                                    ; argument "__ptr" for method j_free
0000000000007400         call       j_free                                      ; free

                     loc_7405:
0000000000007405         mov        rax, qword [rbp+var_408]                    ; CODE XREF=vasnprintf+4107
000000000000740c         mov        rdi, qword [rbp+var_2B8]
0000000000007413         add        rax, 0x20
0000000000007417         cmp        rdi, rax
000000000000741a         je         loc_7421

000000000000741c         call       j_free                                      ; free

                     loc_7421:
0000000000007421         mov        rax, qword [rbp+var_410]                    ; CODE XREF=vasnprintf+4138
0000000000007428         mov        rdi, qword [rbp+var_3A8]
000000000000742f         add        rax, 0x10
0000000000007433         cmp        rdi, rax
0000000000007436         je         loc_743d

0000000000007438         call       j_free                                      ; free

                     loc_743d:
000000000000743d         mov        rax, qword [rbp+var_418]                    ; CODE XREF=vasnprintf+4166
0000000000007444         mov        qword [rax], r14
0000000000007447         jmp        loc_65cf

                     loc_744c:
000000000000744c         mov        rdi, r12                                    ; argument "__size" for method j_malloc, CODE XREF=vasnprintf+4022, vasnprintf+4031
000000000000744f         call       j_malloc                                    ; malloc
0000000000007454         test       rax, rax
0000000000007457         mov        rcx, rax
000000000000745a         je         loc_6555

0000000000007460         test       r14, r14
0000000000007463         je         loc_74d0

0000000000007465         test       r13b, r13b
0000000000007468         je         loc_74d0

000000000000746a         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
000000000000746d         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
0000000000007470         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000007473         call       j_memcpy                                    ; memcpy
0000000000007478         mov        r15, rax
000000000000747b         jmp        loc_73cc

                     loc_7480:
0000000000007480         cmp        r12, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+3972
0000000000007484         mov        eax, 0x1
0000000000007489         je         loc_73cc

000000000000748f         test       r12, r12
0000000000007492         je         loc_6555

0000000000007498         js         loc_6555

                     loc_749e:
000000000000749e         test       rax, rax                                    ; CODE XREF=vasnprintf+3996, vasnprintf+4315
00000000000074a1         jne        loc_6555

00000000000074a7         cmp        rbx, 0xffffffffffffffff
00000000000074ab         je         loc_6555

00000000000074b1         mov        r12, rbx
00000000000074b4         jmp        loc_7398

                     loc_74b9:
00000000000074b9         js         loc_6555                                    ; CODE XREF=vasnprintf+3986

00000000000074bf         add        r12, r12
00000000000074c2         cmp        r12, rbx
00000000000074c5         jae        loc_7398

00000000000074cb         jmp        loc_749e
00000000000074cd         align      16

                     loc_74d0:
00000000000074d0         mov        r15, rcx                                    ; CODE XREF=vasnprintf+4211, vasnprintf+4216
00000000000074d3         jmp        loc_73cc

                     loc_74d8:
00000000000074d8         cmp        r12, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+1575
00000000000074dc         je         loc_6900

00000000000074e2         jmp        loc_6561

                     loc_74e7:
00000000000074e7         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=vasnprintf+495
                        ; endp

                     loc_74ec:
00000000000074ec         cmp        r12, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+1173
00000000000074f0         mov        edx, 0x1
00000000000074f5         je         loc_68db

00000000000074fb         test       r12, r12
00000000000074fe         je         loc_6555

0000000000007504         jns        loc_70d0

000000000000750a         jmp        loc_6555
000000000000750f         align      16                                          ; End of unwind block (FDE at 0xaae4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dup_safer:
0000000000007510         mov        edx, 0x3                                    ; Begin of unwind block (FDE at 0xab14), CODE XREF=fd_safer+17
0000000000007515         xor        esi, esi
0000000000007517         xor        eax, eax
0000000000007519         jmp        rpl_fcntl                                   ; rpl_fcntl
                        ; endp
000000000000751e         align      32                                          ; End of unwind block (FDE at 0xab14)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int32_t, -104


                     rpl_fcntl:
0000000000007520         push       r12                                         ; Begin of unwind block (FDE at 0xab2c), CODE XREF=dup_safer+9
0000000000007522         push       rbp
0000000000007523         mov        ebp, edi
0000000000007525         push       rbx
0000000000007526         sub        rsp, 0x50
000000000000752a         mov        rax, qword [fs:0x28]
0000000000007533         mov        qword [rsp+0x68+var_50], rax
0000000000007538         xor        eax, eax
000000000000753a         lea        rax, qword [rsp+0x68+arg_0]
000000000000753f         test       esi, esi
0000000000007541         mov        qword [rsp+0x68+var_38], rdx
0000000000007546         mov        qword [rsp+0x68+var_30], rcx
000000000000754b         mov        qword [rsp+0x68+var_28], r8
0000000000007550         mov        qword [rsp+0x68+var_60], rax
0000000000007555         lea        rax, qword [rsp+0x68+var_48]
000000000000755a         mov        qword [rsp+0x68+var_20], r9
000000000000755f         mov        dword [rsp+0x68+var_68], 0x10
0000000000007566         mov        qword [rsp+0x68+var_58], rax
000000000000756b         je         loc_7772

0000000000007571         cmp        esi, 0x406
0000000000007577         jne        loc_75c0

0000000000007579         mov        rax, qword [rsp+0x68+var_58]
000000000000757e         cmp        dword [have_dupfd_cloexec.3326], 0x0        ; have_dupfd_cloexec.3326
0000000000007585         mov        dword [rsp+0x68+var_68], 0x18
000000000000758c         mov        r12d, dword [rax+0x10]
0000000000007590         mov        edx, r12d
0000000000007593         js         loc_76c3

0000000000007599         xor        eax, eax
000000000000759b         mov        esi, 0x406                                  ; argument "__cmd" for method j_fcntl
00000000000075a0         call       j_fcntl                                     ; fcntl
00000000000075a5         test       eax, eax
00000000000075a7         mov        ebx, eax
00000000000075a9         js         loc_7738

                     loc_75af:
00000000000075af         mov        dword [have_dupfd_cloexec.3326], 0x1        ; have_dupfd_cloexec.3326, CODE XREF=rpl_fcntl+544
00000000000075b9         jmp        loc_7600
00000000000075bb         align      64

                     loc_75c0:
00000000000075c0         cmp        esi, 0xb                                    ; CODE XREF=rpl_fcntl+87
00000000000075c3         je         loc_75f0

00000000000075c5         jg         loc_7620

00000000000075c7         cmp        esi, 0x4
00000000000075ca         je         loc_76a0

00000000000075d0         jg         loc_7690

00000000000075d6         cmp        esi, 0x2
00000000000075d9         je         loc_76a0

00000000000075df         jg         loc_75f0

00000000000075e1         cmp        esi, 0x1
00000000000075e4         jne        loc_7648

00000000000075e6         nop        word [cs:rax+rax]

                     loc_75f0:
00000000000075f0         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl, CODE XREF=rpl_fcntl+163, rpl_fcntl+191, rpl_fcntl+278, rpl_fcntl+344, rpl_fcntl+358, rpl_fcntl+371
00000000000075f2         xor        eax, eax
00000000000075f4         call       j_fcntl                                     ; fcntl
00000000000075f9         mov        ebx, eax
00000000000075fb         nop        dword [rax+rax]

                     loc_7600:
0000000000007600         mov        rcx, qword [rsp+0x68+var_50]                ; CODE XREF=rpl_fcntl+153, rpl_fcntl+327, rpl_fcntl+414, rpl_fcntl+432, rpl_fcntl+445, rpl_fcntl+491, rpl_fcntl+524, rpl_fcntl+568, rpl_fcntl+613
0000000000007605         xor        rcx, qword [fs:0x28]
000000000000760e         mov        eax, ebx
0000000000007610         jne        loc_776d

0000000000007616         add        rsp, 0x50
000000000000761a         pop        rbx
000000000000761b         pop        rbp
000000000000761c         pop        r12
000000000000761e         ret
                        ; endp
000000000000761f         align      32

                     loc_7620:
0000000000007620         cmp        esi, 0x407                                  ; CODE XREF=rpl_fcntl+165
0000000000007626         jg         loc_7670

0000000000007628         cmp        esi, 0x406
000000000000762e         jge        loc_76a0

0000000000007630         cmp        esi, 0x401
0000000000007636         je         loc_75f0

0000000000007638         cmp        esi, 0x402
000000000000763e         je         loc_76a0

0000000000007640         cmp        esi, 0x400
0000000000007646         je         loc_76a0

                     loc_7648:
0000000000007648         mov        eax, dword [rsp+0x68+var_68]                ; CODE XREF=rpl_fcntl+196, rpl_fcntl+356, rpl_fcntl+382
000000000000764b         cmp        eax, 0x2f
000000000000764e         ja         loc_778a

0000000000007654         add        rax, qword [rsp+0x68+var_58]

                     loc_7659:
0000000000007659         mov        rdx, qword [rax]                            ; CODE XREF=rpl_fcntl+623
000000000000765c         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
000000000000765e         xor        eax, eax
0000000000007660         call       j_fcntl                                     ; fcntl
0000000000007665         mov        ebx, eax
0000000000007667         jmp        loc_7600
0000000000007669         align      16

                     loc_7670:
0000000000007670         cmp        esi, 0x409                                  ; CODE XREF=rpl_fcntl+262
0000000000007676         je         loc_76a0

0000000000007678         jl         loc_75f0

000000000000767e         cmp        esi, 0x40a
0000000000007684         jne        loc_7648

0000000000007686         jmp        loc_75f0
000000000000768b         align      16

                     loc_7690:
0000000000007690         cmp        esi, 0x9                                    ; CODE XREF=rpl_fcntl+176
0000000000007693         je         loc_75f0

0000000000007699         jg         loc_76a0

000000000000769b         cmp        esi, 0x8
000000000000769e         jne        loc_7648

                     loc_76a0:
00000000000076a0         mov        eax, dword [rsp+0x68+var_68]                ; CODE XREF=rpl_fcntl+170, rpl_fcntl+185, rpl_fcntl+270, rpl_fcntl+286, rpl_fcntl+294, rpl_fcntl+342, rpl_fcntl+377
00000000000076a3         cmp        eax, 0x2f
00000000000076a6         ja         loc_7794

00000000000076ac         add        rax, qword [rsp+0x68+var_58]

                     loc_76b1:
00000000000076b1         mov        edx, dword [rax]                            ; CODE XREF=rpl_fcntl+633
00000000000076b3         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
00000000000076b5         xor        eax, eax
00000000000076b7         call       j_fcntl                                     ; fcntl
00000000000076bc         mov        ebx, eax
00000000000076be         jmp        loc_7600

                     loc_76c3:
00000000000076c3         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl, CODE XREF=rpl_fcntl+115
00000000000076c5         xor        eax, eax
00000000000076c7         call       j_fcntl                                     ; fcntl
00000000000076cc         test       eax, eax
00000000000076ce         mov        ebx, eax
00000000000076d0         js         loc_7600

00000000000076d6         cmp        dword [have_dupfd_cloexec.3326], 0xffffffff ; have_dupfd_cloexec.3326
00000000000076dd         jne        loc_7600

                     loc_76e3:
00000000000076e3         xor        eax, eax                                    ; CODE XREF=rpl_fcntl+584
00000000000076e5         mov        esi, 0x1                                    ; argument "__cmd" for method j_fcntl
00000000000076ea         mov        edi, ebx                                    ; argument "__fd" for method j_fcntl
00000000000076ec         call       j_fcntl                                     ; fcntl
00000000000076f1         test       eax, eax
00000000000076f3         js         loc_7711

00000000000076f5         or         eax, 0x1
00000000000076f8         mov        esi, 0x2                                    ; argument "__cmd" for method j_fcntl
00000000000076fd         mov        edi, ebx                                    ; argument "__fd" for method j_fcntl
00000000000076ff         mov        edx, eax
0000000000007701         xor        eax, eax
0000000000007703         call       j_fcntl                                     ; fcntl
0000000000007708         cmp        eax, 0xffffffff
000000000000770b         jne        loc_7600

                     loc_7711:
0000000000007711         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fcntl+467
0000000000007716         mov        r12d, dword [rax]
0000000000007719         mov        rbp, rax
000000000000771c         mov        edi, ebx                                    ; argument "__fd" for method j_close
000000000000771e         call       j_close                                     ; close
0000000000007723         mov        ebx, 0xffffffff
0000000000007728         mov        dword [rbp], r12d
000000000000772c         jmp        loc_7600
0000000000007731         align      8

                     loc_7738:
0000000000007738         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fcntl+137
000000000000773d         cmp        dword [rax], 0x16
0000000000007740         jne        loc_75af

0000000000007746         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl
0000000000007748         xor        eax, eax
000000000000774a         mov        edx, r12d
000000000000774d         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
000000000000774f         call       j_fcntl                                     ; fcntl
0000000000007754         test       eax, eax
0000000000007756         mov        ebx, eax
0000000000007758         js         loc_7600

000000000000775e         mov        dword [have_dupfd_cloexec.3326], 0xffffffff ; have_dupfd_cloexec.3326
0000000000007768         jmp        loc_76e3

                     loc_776d:
000000000000776d         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_fcntl+240
                        ; endp

                     loc_7772:
0000000000007772         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=rpl_fcntl+75
0000000000007777         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl
0000000000007779         mov        edx, dword [rax+0x10]
000000000000777c         xor        eax, eax
000000000000777e         call       j_fcntl                                     ; fcntl
0000000000007783         mov        ebx, eax
0000000000007785         jmp        loc_7600

                     loc_778a:
000000000000778a         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=rpl_fcntl+302
000000000000778f         jmp        loc_7659

                     loc_7794:
0000000000007794         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=rpl_fcntl+390
0000000000007799         jmp        loc_76b1
000000000000779e         align      32                                          ; End of unwind block (FDE at 0xab2c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     printf_fetchargs:
00000000000077a0         cmp        qword [rsi], 0x0                            ; Begin of unwind block (FDE at 0xab64), CODE XREF=vasnprintf+108
00000000000077a4         mov        rax, qword [rsi+8]
00000000000077a8         je         loc_780d

00000000000077aa         lea        r8, qword [aNull+20]                        ; 0x97a0
00000000000077b1         lea        r10, qword [wide_null_string.2696]          ; wide_null_string.2696
00000000000077b8         lea        r9, qword [aNull]                           ; "(NULL)"
00000000000077bf         xor        ecx, ecx
00000000000077c1         nop        dword [rax]
00000000000077c8         cmp        dword [rax], 0x16
00000000000077cb         ja         loc_7810

00000000000077cd         mov        edx, dword [rax]
00000000000077cf         movsxd     rdx, dword [r8+rdx*4]
00000000000077d3         add        rdx, r8
00000000000077d6         jmp        rdx
                        ; endp
00000000000077d8         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_77e0:
00000000000077e0         mov        rdx, qword [rdi+8]
00000000000077e4         add        rdx, 0xf
00000000000077e8         and        rdx, 0xfffffffffffffff0
00000000000077ec         lea        r11, qword [rdx+0x10]
00000000000077f0         mov        qword [rdi+8], r11
00000000000077f4         fld        tword [rdx]
00000000000077f6         fstp       tword [rax+0x10]
00000000000077f9         nop        dword [rax]
0000000000007800         add        rcx, 0x1                                    ; CODE XREF=sub_7816+137, sub_7816+183
0000000000007804         add        rax, 0x20
0000000000007808         cmp        qword [rsi], rcx
000000000000780b         ja         printf_fetchargs+40
                        ; endp

                     loc_780d:
000000000000780d         xor        eax, eax                                    ; CODE XREF=printf_fetchargs+8
000000000000780f         ret
                        ; endp

                     loc_7810:
0000000000007810         mov        eax, 0xffffffff                             ; CODE XREF=printf_fetchargs+43
0000000000007815         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_7816:
0000000000007816         mov        r11d, dword [rdi]
0000000000007819         cmp        r11d, 0x2f
000000000000781d         ja         loc_795a

0000000000007823         mov        edx, r11d
0000000000007826         add        rdx, qword [rdi+0x10]
000000000000782a         add        r11d, 0x8
000000000000782e         mov        dword [rdi], r11d

                     loc_7831:
0000000000007831         mov        rdx, qword [rdx]                            ; CODE XREF=sub_7900+102
0000000000007834         mov        qword [rax+0x10], rdx
0000000000007838         jmp        sub_77e0+32
                        ; endp
000000000000783a         mov        r11d, dword [rdi]
000000000000783d         cmp        r11d, 0x2f
0000000000007841         ja         sub_797c                                    ; sub_797c
0000000000007847         mov        edx, r11d
000000000000784a         add        rdx, qword [rdi+0x10]
000000000000784e         add        r11d, 0x8
0000000000007852         mov        dword [rdi], r11d

                     loc_7855:
0000000000007855         mov        edx, dword [rdx]                            ; CODE XREF=sub_797c+12
0000000000007857         mov        dword [rax+0x10], edx
000000000000785a         jmp        sub_77e0+32
                        ; endp
000000000000785c         mov        r11d, dword [rdi]
000000000000785f         cmp        r11d, 0x2f
0000000000007863         ja         sub_796b                                    ; sub_796b
0000000000007869         mov        edx, r11d
000000000000786c         add        rdx, qword [rdi+0x10]
0000000000007870         add        r11d, 0x8
0000000000007874         mov        dword [rdi], r11d

                     loc_7877:
0000000000007877         mov        edx, dword [rdx]                            ; CODE XREF=sub_796b+12
0000000000007879         mov        byte [rax+0x10], dl
000000000000787c         jmp        sub_77e0+32
                        ; endp
000000000000787e         mov        r11d, dword [rdi]
0000000000007881         cmp        r11d, 0x2f
0000000000007885         ja         sub_7900+42
000000000000788b         mov        edx, r11d
000000000000788e         add        rdx, qword [rdi+0x10]
0000000000007892         add        r11d, 0x8
0000000000007896         mov        dword [rdi], r11d
0000000000007899         mov        edx, dword [rdx]                            ; CODE XREF=sub_7900+54
000000000000789b         mov        word [rax+0x10], dx
000000000000789f         jmp        sub_77e0+32
00000000000078a4         mov        r11d, dword [rdi]
00000000000078a7         cmp        r11d, 0x2f
00000000000078ab         ja         sub_7900+59
00000000000078b1         mov        edx, r11d
00000000000078b4         add        rdx, qword [rdi+0x10]
00000000000078b8         add        r11d, 0x8
00000000000078bc         mov        dword [rdi], r11d
00000000000078bf         mov        rdx, qword [rdx]                            ; CODE XREF=sub_7900+71
00000000000078c2         test       rdx, rdx
00000000000078c5         cmove      rdx, r9
00000000000078c9         mov        qword [rax+0x10], rdx
00000000000078cd         jmp        sub_77e0+32
00000000000078d2         mov        r11d, dword [rdi+4]
00000000000078d6         cmp        r11d, 0xaf
00000000000078dd         ja         sub_798d                                    ; sub_798d
00000000000078e3         mov        edx, r11d
00000000000078e6         add        rdx, qword [rdi+0x10]
00000000000078ea         add        r11d, 0x10
00000000000078ee         mov        dword [rdi+4], r11d

                     loc_78f2:
00000000000078f2         movsd      xmm0, qword [rdx]                           ; CODE XREF=sub_798d+12
00000000000078f6         movsd      qword [rax+0x10], xmm0
00000000000078fb         jmp        sub_77e0+32
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_7900:
0000000000007900         mov        r11d, dword [rdi]
0000000000007903         cmp        r11d, 0x2f
0000000000007907         ja         loc_794c

0000000000007909         mov        edx, r11d
000000000000790c         add        rdx, qword [rdi+0x10]
0000000000007910         add        r11d, 0x8
0000000000007914         mov        dword [rdi], r11d

                     loc_7917:
0000000000007917         mov        rdx, qword [rdx]                            ; CODE XREF=sub_7900+88
000000000000791a         test       rdx, rdx
000000000000791d         cmove      rdx, r10
0000000000007921         mov        qword [rax+0x10], rdx
0000000000007925         jmp        sub_77e0+32
                        ; endp
000000000000792a         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_7816+111
000000000000792e         lea        r11, qword [rdx+8]
0000000000007932         mov        qword [rdi+8], r11
0000000000007936         jmp        sub_7816+131
000000000000793b         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_7816+149
000000000000793f         lea        r11, qword [rdx+8]
0000000000007943         mov        qword [rdi+8], r11
0000000000007947         jmp        sub_7816+169

                     loc_794c:
000000000000794c         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_7900+7
0000000000007950         lea        r11, qword [rdx+8]
0000000000007954         mov        qword [rdi+8], r11
0000000000007958         jmp        loc_7917

                     loc_795a:
000000000000795a         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_7816+7
000000000000795e         lea        r11, qword [rdx+8]
0000000000007962         mov        qword [rdi+8], r11
0000000000007966         jmp        loc_7831


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_796b:
000000000000796b         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_7816+77
000000000000796f         lea        r11, qword [rdx+8]
0000000000007973         mov        qword [rdi+8], r11
0000000000007977         jmp        loc_7877


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_797c:
000000000000797c         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_7816+43
0000000000007980         lea        r11, qword [rdx+8]
0000000000007984         mov        qword [rdi+8], r11
0000000000007988         jmp        loc_7855


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_798d:
000000000000798d         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_7816+199
0000000000007991         lea        r11, qword [rdx+8]
0000000000007995         mov        qword [rdi+8], r11
0000000000007999         jmp        loc_78f2


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_799e:
000000000000799e         nop                                                    ; End of unwind block (FDE at 0xab64)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128


                     printf_parse:
00000000000079a0         push       r15                                         ; Begin of unwind block (FDE at 0xab7c), CODE XREF=vasnprintf+89
00000000000079a2         push       r14
00000000000079a4         lea        rcx, qword [rsi+0x20]
00000000000079a8         push       r13
00000000000079aa         push       r12
00000000000079ac         lea        rax, qword [rdx+0x10]
00000000000079b0         push       rbp
00000000000079b1         push       rbx
00000000000079b2         mov        r14, rsi
00000000000079b5         mov        r15, rdx
00000000000079b8         xor        ebx, ebx
00000000000079ba         mov        r9d, 0x7
00000000000079c0         sub        rsp, 0x58
00000000000079c4         mov        r10d, 0x7
00000000000079ca         mov        qword [rsi], 0x0
00000000000079d1         mov        qword [rsi+8], rcx
00000000000079d5         mov        qword [rsp+0x88+var_60], rcx
00000000000079da         mov        r8, 0xffffffffffffffff
00000000000079e1         mov        qword [rdx], 0x0
00000000000079e8         mov        qword [rsp+0x88+var_80], rax
00000000000079ed         mov        qword [rdx+8], rax
00000000000079f1         mov        qword [rsp+0x88+var_70], 0x0
00000000000079fa         mov        qword [rsp+0x88+var_78], 0x0
0000000000007a03         mov        qword [rsp+0x88+var_68], 0x0
0000000000007a0c         jmp        loc_7a1b
0000000000007a0e         align      16

                     loc_7a10:
0000000000007a10         cmp        al, 0x25                                    ; CODE XREF=printf_parse+128
0000000000007a12         lea        rbp, qword [rdi+1]
0000000000007a16         je         loc_7a58

                     loc_7a18:
0000000000007a18         mov        rdi, rbp                                    ; CODE XREF=printf_parse+859, printf_parse+868

                     loc_7a1b:
0000000000007a1b         movzx      eax, byte [rdi]                             ; CODE XREF=printf_parse+108
0000000000007a1e         test       al, al
0000000000007a20         jne        loc_7a10

0000000000007a22         lea        rax, qword [rbx+rbx*4]
0000000000007a26         lea        rax, qword [rbx+rax*2]
0000000000007a2a         mov        qword [rcx+rax*8], rdi
0000000000007a2e         mov        rax, qword [rsp+0x88+var_78]
0000000000007a33         mov        qword [r14+0x10], rax
0000000000007a37         mov        rax, qword [rsp+0x88+var_70]
0000000000007a3c         mov        qword [r14+0x18], rax
0000000000007a40         xor        eax, eax

                     loc_7a42:
0000000000007a42         add        rsp, 0x58                                   ; CODE XREF=printf_parse+2174, printf_parse+2844
0000000000007a46         pop        rbx
0000000000007a47         pop        rbp
0000000000007a48         pop        r12
0000000000007a4a         pop        r13
0000000000007a4c         pop        r14
0000000000007a4e         pop        r15
0000000000007a50         ret
                        ; endp
0000000000007a51         align      8

                     loc_7a58:
0000000000007a58         lea        rax, qword [rbx+rbx*4]                      ; CODE XREF=printf_parse+118
0000000000007a5c         mov        r13, r8
0000000000007a5f         lea        rax, qword [rbx+rax*2]
0000000000007a63         lea        r12, qword [rcx+rax*8]
0000000000007a67         mov        qword [r12], rdi
0000000000007a6b         mov        dword [r12+0x10], 0x0
0000000000007a74         mov        qword [r12+0x18], 0x0
0000000000007a7d         mov        qword [r12+0x20], 0x0
0000000000007a86         mov        qword [r12+0x28], r8
0000000000007a8b         mov        qword [r12+0x30], 0x0
0000000000007a94         mov        qword [r12+0x38], 0x0
0000000000007a9d         mov        qword [r12+0x40], r8
0000000000007aa2         mov        qword [r12+0x50], r8
0000000000007aa7         movzx      ebx, byte [rdi+1]
0000000000007aab         lea        eax, dword [rbx-0x30]
0000000000007aae         cmp        al, 0x9
0000000000007ab0         ja         loc_7aee

0000000000007ab2         jmp        loc_7eea
0000000000007ab7         align      64

                     loc_7ac0:
0000000000007ac0         cmp        bl, 0x2d                                    ; CODE XREF=printf_parse+344
0000000000007ac3         je         loc_7b08

0000000000007ac5         cmp        bl, 0x2b
0000000000007ac8         je         loc_7b10

0000000000007aca         cmp        bl, 0x20
0000000000007acd         je         loc_7b20

0000000000007acf         cmp        bl, 0x23
0000000000007ad2         je         loc_7b30

0000000000007ad4         cmp        bl, 0x30
0000000000007ad7         je         loc_7b40

0000000000007ad9         cmp        bl, 0x49
0000000000007adc         jne        loc_7b50

0000000000007ade         or         dword [r12+0x10], 0x40
0000000000007ae4         nop        dword [rax]

                     loc_7ae8:
0000000000007ae8         movzx      ebx, byte [rax]                             ; CODE XREF=printf_parse+352, printf_parse+366, printf_parse+374, printf_parse+390, printf_parse+406, printf_parse+422
0000000000007aeb         mov        rbp, rax

                     loc_7aee:
0000000000007aee         lea        rax, qword [rbp+1]                          ; CODE XREF=printf_parse+272, printf_parse+1381, printf_parse+1490
0000000000007af2         cmp        bl, 0x27
0000000000007af5         mov        rdx, rax
0000000000007af8         jne        loc_7ac0

0000000000007afa         or         dword [r12+0x10], 0x1
0000000000007b00         jmp        loc_7ae8
0000000000007b02         align      8

                     loc_7b08:
0000000000007b08         or         dword [r12+0x10], 0x2                       ; CODE XREF=printf_parse+291
0000000000007b0e         jmp        loc_7ae8

                     loc_7b10:
0000000000007b10         or         dword [r12+0x10], 0x4                       ; CODE XREF=printf_parse+296
0000000000007b16         jmp        loc_7ae8
0000000000007b18         align      32

                     loc_7b20:
0000000000007b20         or         dword [r12+0x10], 0x8                       ; CODE XREF=printf_parse+301
0000000000007b26         jmp        loc_7ae8
0000000000007b28         align      16

                     loc_7b30:
0000000000007b30         or         dword [r12+0x10], 0x10                      ; CODE XREF=printf_parse+306
0000000000007b36         jmp        loc_7ae8
0000000000007b38         align      64

                     loc_7b40:
0000000000007b40         or         dword [r12+0x10], 0x20                      ; CODE XREF=printf_parse+311
0000000000007b46         jmp        loc_7ae8
0000000000007b48         align      16

                     loc_7b50:
0000000000007b50         cmp        bl, 0x2a                                    ; CODE XREF=printf_parse+316
0000000000007b53         je         loc_7d09

0000000000007b59         lea        ecx, dword [rbx-0x30]
0000000000007b5c         cmp        cl, 0x9
0000000000007b5f         jbe        loc_7f77

                     loc_7b65:
0000000000007b65         cmp        bl, 0x2e                                    ; CODE XREF=printf_parse+1577, printf_parse+2412
0000000000007b68         je         loc_7e3f

                     loc_7b6e:
0000000000007b6e         xor        eax, eax                                    ; CODE XREF=printf_parse+1177, printf_parse+1349, printf_parse+1648, printf_parse+2650
0000000000007b70         mov        esi, 0x1
0000000000007b75         jmp        loc_7ba7
0000000000007b77         align      128

                     loc_7b80:
0000000000007b80         cmp        bl, 0x4c                                    ; CODE XREF=printf_parse+526
0000000000007b83         je         loc_7bc0

0000000000007b85         cmp        bl, 0x6c
0000000000007b88         je         loc_7ba0

0000000000007b8a         cmp        bl, 0x6a
0000000000007b8d         je         loc_7ba0

0000000000007b8f         mov        edx, ebx
0000000000007b91         and        edx, 0xffffffdf
0000000000007b94         cmp        dl, 0x5a
0000000000007b97         je         loc_7ba0

0000000000007b99         cmp        bl, 0x74
0000000000007b9c         jne        loc_7bc8

0000000000007b9e         nop

                     loc_7ba0:
0000000000007ba0         add        eax, 0x8                                    ; CODE XREF=printf_parse+488, printf_parse+493, printf_parse+503

                     loc_7ba3:
0000000000007ba3         movzx      ebx, byte [rbp]                             ; CODE XREF=printf_parse+539, printf_parse+547

                     loc_7ba7:
0000000000007ba7         add        rbp, 0x1                                    ; CODE XREF=printf_parse+469
0000000000007bab         cmp        bl, 0x68
0000000000007bae         jne        loc_7b80

0000000000007bb0         mov        ecx, eax
0000000000007bb2         mov        edx, esi
0000000000007bb4         and        ecx, 0x1
0000000000007bb7         shl        edx, cl
0000000000007bb9         or         eax, edx
0000000000007bbb         jmp        loc_7ba3
0000000000007bbd         align      64

                     loc_7bc0:
0000000000007bc0         or         eax, 0x4                                    ; CODE XREF=printf_parse+483
0000000000007bc3         jmp        loc_7ba3
0000000000007bc5         align      8

                     loc_7bc8:
0000000000007bc8         lea        edx, dword [rbx-0x25]                       ; CODE XREF=printf_parse+508
0000000000007bcb         cmp        dl, 0x53
0000000000007bce         ja         loc_81eb

0000000000007bd4         lea        rcx, qword [switch_table_981c]              ; switch_table_981c
0000000000007bdb         movzx      edx, dl
0000000000007bde         movsxd     rdx, dword [rcx+rdx*4]
0000000000007be2         add        rdx, rcx
0000000000007be5         jmp        rdx                                         ; switch statement using table at 0x981c, with 84 cases, 0x7be7,0x7c5b,0x809c,0x80e8,0x80fb,0x8148,0x815b,0x817c,0x818c,0x81e0,0x81eb

                     loc_7be7:
0000000000007be7         mov        r11d, 0x10                                  ; case 46, CODE XREF=printf_parse+581
0000000000007bed         mov        ebx, 0x73
0000000000007bf2         nop        word [rax+rax]

                     loc_7bf8:
0000000000007bf8         cmp        r13, 0xffffffffffffffff                     ; CODE XREF=printf_parse+1797, printf_parse+1805, printf_parse+1820, printf_parse+1834, printf_parse+1853, printf_parse+1878, printf_parse+1892, printf_parse+1900, printf_parse+1915, printf_parse+1929, printf_parse+1952
0000000000007bfc         je         loc_82b7

0000000000007c02         mov        qword [r12+0x50], r13

                     loc_7c07:
0000000000007c07         cmp        r9, r13                                     ; CODE XREF=printf_parse+2361
0000000000007c0a         mov        rcx, qword [r15+8]
0000000000007c0e         jbe        loc_8230

                     loc_7c14:
0000000000007c14         mov        rax, qword [r15]                            ; CODE XREF=printf_parse+2322
0000000000007c17         mov        rdx, rax
0000000000007c1a         shl        rdx, 0x5
0000000000007c1e         add        rdx, rcx
0000000000007c21         cmp        rax, r13
0000000000007c24         ja         loc_7c46

0000000000007c26         nop        word [cs:rax+rax]

                     loc_7c30:
0000000000007c30         add        rax, 0x1                                    ; CODE XREF=printf_parse+673
0000000000007c34         mov        dword [rdx], 0x0
0000000000007c3a         add        rdx, 0x20
0000000000007c3e         cmp        rax, r13
0000000000007c41         jbe        loc_7c30

0000000000007c43         mov        qword [r15], rax

                     loc_7c46:
0000000000007c46         shl        r13, 0x5                                    ; CODE XREF=printf_parse+644
0000000000007c4a         lea        rax, qword [rcx+r13]
0000000000007c4e         mov        edx, dword [rax]
0000000000007c50         test       edx, edx
0000000000007c52         jne        loc_8223

0000000000007c58         mov        dword [rax], r11d

                     loc_7c5b:
0000000000007c5b         mov        byte [r12+0x48], bl                         ; case 0, CODE XREF=printf_parse+581, printf_parse+2182
0000000000007c60         mov        rax, qword [r14]
0000000000007c63         mov        qword [r12+8], rbp
0000000000007c68         lea        rbx, qword [rax+1]
0000000000007c6c         cmp        r10, rbx
0000000000007c6f         mov        qword [r14], rbx
0000000000007c72         ja         loc_7d00

0000000000007c78         test       r10, r10
0000000000007c7b         js         loc_8627

0000000000007c81         add        r10, r10
0000000000007c84         movabs     rax, 0x2e8ba2e8ba2e8ba
0000000000007c8e         cmp        r10, rax
0000000000007c91         ja         loc_8627

0000000000007c97         lea        rax, qword [r10+r10*4]
0000000000007c9b         mov        rdi, qword [r14+8]
0000000000007c9f         cmp        qword [rsp+0x88+var_60], rdi
0000000000007ca4         mov        qword [rsp+0x88+var_48], r9
0000000000007ca9         mov        qword [rsp+0x88+var_50], r10
0000000000007cae         lea        rax, qword [r10+rax*2]
0000000000007cb2         mov        qword [rsp+0x88+var_58], r8
0000000000007cb7         lea        rsi, qword [rax*8]
0000000000007cbf         je         loc_837d

0000000000007cc5         call       j_realloc                                   ; realloc
0000000000007cca         test       rax, rax
0000000000007ccd         mov        rcx, rax
0000000000007cd0         mov        r8, qword [rsp+0x88+var_58]
0000000000007cd5         mov        r10, qword [rsp+0x88+var_50]
0000000000007cda         mov        r9, qword [rsp+0x88+var_48]
0000000000007cdf         je         loc_8627

0000000000007ce5         mov        rax, qword [rsp+0x88+var_60]
0000000000007cea         cmp        rax, qword [r14+8]
0000000000007cee         mov        rbx, qword [r14]
0000000000007cf1         je         loc_83a0

                     loc_7cf7:
0000000000007cf7         mov        qword [r14+8], rcx                          ; CODE XREF=printf_parse+2621
0000000000007cfb         jmp        loc_7a18

                     loc_7d00:
0000000000007d00         mov        rcx, qword [r14+8]                          ; CODE XREF=printf_parse+722
0000000000007d04         jmp        loc_7a18

                     loc_7d09:
0000000000007d09         mov        rsi, qword [rsp+0x88+var_78]                ; CODE XREF=printf_parse+435
0000000000007d0e         mov        ecx, 0x1
0000000000007d13         mov        qword [r12+0x18], rbp
0000000000007d18         mov        qword [r12+0x20], rax
0000000000007d1d         test       rsi, rsi
0000000000007d20         cmovne     rcx, rsi
0000000000007d24         mov        qword [rsp+0x88+var_78], rcx
0000000000007d29         movzx      ecx, byte [rbp+1]
0000000000007d2d         lea        esi, dword [rcx-0x30]
0000000000007d30         cmp        sil, 0x9
0000000000007d34         jbe        loc_8015

                     loc_7d3a:
0000000000007d3a         mov        rsi, qword [rsp+0x88+var_68]                ; CODE XREF=printf_parse+1677
0000000000007d3f         cmp        rsi, 0xffffffffffffffff
0000000000007d43         lea        rdx, qword [rsi+1]
0000000000007d47         mov        qword [r12+0x28], rsi
0000000000007d4c         je         loc_81eb

0000000000007d52         mov        rbx, qword [rsp+0x88+var_68]
0000000000007d57         mov        rbp, rax
0000000000007d5a         mov        qword [rsp+0x88+var_68], rdx

                     loc_7d5f:
0000000000007d5f         cmp        r9, rbx                                     ; CODE XREF=printf_parse+1783
0000000000007d62         mov        rcx, qword [r15+8]
0000000000007d66         ja         loc_83e2

0000000000007d6c         add        r9, r9
0000000000007d6f         lea        rax, qword [rbx+1]
0000000000007d73         cmp        r9, rbx
0000000000007d76         cmovbe     r9, rax
0000000000007d7a         movabs     rax, 0x7ffffffffffffff
0000000000007d84         cmp        r9, rax
0000000000007d87         ja         loc_862b

0000000000007d8d         mov        rsi, r9
0000000000007d90         mov        qword [rsp+0x88+var_48], r9
0000000000007d95         mov        qword [rsp+0x88+var_50], r10
0000000000007d9a         shl        rsi, 0x5
0000000000007d9e         cmp        qword [rsp+0x88+var_80], rcx
0000000000007da3         mov        qword [rsp+0x88+var_58], r8
0000000000007da8         je         loc_84c1

0000000000007dae         mov        rdi, rcx                                    ; argument "__ptr" for method j_realloc
0000000000007db1         call       j_realloc                                   ; realloc
0000000000007db6         mov        rdx, qword [r15+8]
0000000000007dba         mov        r8, qword [rsp+0x88+var_58]
0000000000007dbf         mov        rcx, rax
0000000000007dc2         mov        r10, qword [rsp+0x88+var_50]
0000000000007dc7         mov        r9, qword [rsp+0x88+var_48]

                     loc_7dcc:
0000000000007dcc         test       rcx, rcx                                    ; CODE XREF=printf_parse+2880
0000000000007dcf         je         loc_8687

0000000000007dd5         cmp        qword [rsp+0x88+var_80], rdx
0000000000007dda         mov        rax, qword [r15]
0000000000007ddd         je         loc_859b

                     loc_7de3:
0000000000007de3         mov        qword [r15+8], rcx                          ; CODE XREF=printf_parse+3123

                     loc_7de7:
0000000000007de7         mov        rdx, rax                                    ; CODE XREF=printf_parse+2629
0000000000007dea         shl        rdx, 0x5
0000000000007dee         add        rdx, rcx
0000000000007df1         cmp        rax, rbx
0000000000007df4         ja         loc_7e16

0000000000007df6         nop        word [cs:rax+rax]

                     loc_7e00:
0000000000007e00         add        rax, 0x1                                    ; CODE XREF=printf_parse+1137
0000000000007e04         mov        dword [rdx], 0x0
0000000000007e0a         add        rdx, 0x20
0000000000007e0e         cmp        rax, rbx
0000000000007e11         jbe        loc_7e00

0000000000007e13         mov        qword [r15], rax

                     loc_7e16:
0000000000007e16         shl        rbx, 0x5                                    ; CODE XREF=printf_parse+1108
0000000000007e1a         lea        rax, qword [rcx+rbx]
0000000000007e1e         mov        edx, dword [rax]
0000000000007e20         test       edx, edx
0000000000007e22         jne        loc_82fb

0000000000007e28         mov        dword [rax], 0x5
0000000000007e2e         movzx      ebx, byte [rbp]
0000000000007e32         lea        rdx, qword [rbp+1]
0000000000007e36         cmp        bl, 0x2e
0000000000007e39         jne        loc_7b6e

                     loc_7e3f:
0000000000007e3f         cmp        byte [rbp+1], 0x2a                          ; CODE XREF=printf_parse+456
0000000000007e43         mov        qword [r12+0x30], rbp
0000000000007e48         jne        loc_7fce

0000000000007e4e         mov        rsi, qword [rsp+0x88+var_70]
0000000000007e53         lea        r11, qword [rbp+2]
0000000000007e57         mov        eax, 0x2
0000000000007e5c         mov        qword [r12+0x38], r11
0000000000007e61         cmp        rsi, 0x2
0000000000007e65         cmovae     rax, rsi
0000000000007e69         mov        qword [rsp+0x88+var_70], rax
0000000000007e6e         movsx      eax, byte [rbp+2]
0000000000007e72         lea        edx, dword [rax-0x30]
0000000000007e75         cmp        dl, 0x9
0000000000007e78         jbe        loc_850c

                     loc_7e7e:
0000000000007e7e         mov        rbx, qword [r12+0x40]                       ; CODE XREF=printf_parse+2946
0000000000007e83         cmp        rbx, 0xffffffffffffffff
0000000000007e87         je         loc_84e5

                     loc_7e8d:
0000000000007e8d         cmp        r9, rbx                                     ; CODE XREF=printf_parse+2919, printf_parse+3161
0000000000007e90         mov        rcx, qword [r15+8]
0000000000007e94         jbe        loc_83ff

0000000000007e9a         mov        rax, qword [r15]

                     loc_7e9d:
0000000000007e9d         mov        rdx, rax                                    ; CODE XREF=printf_parse+2788
0000000000007ea0         shl        rdx, 0x5
0000000000007ea4         add        rdx, rcx
0000000000007ea7         cmp        rax, rbx
0000000000007eaa         ja         loc_7ec6

0000000000007eac         nop        dword [rax]

                     loc_7eb0:
0000000000007eb0         add        rax, 0x1                                    ; CODE XREF=printf_parse+1313
0000000000007eb4         mov        dword [rdx], 0x0
0000000000007eba         add        rdx, 0x20
0000000000007ebe         cmp        rax, rbx
0000000000007ec1         jbe        loc_7eb0

0000000000007ec3         mov        qword [r15], rax

                     loc_7ec6:
0000000000007ec6         shl        rbx, 0x5                                    ; CODE XREF=printf_parse+1290
0000000000007eca         lea        rax, qword [rcx+rbx]
0000000000007ece         mov        edx, dword [rax]
0000000000007ed0         test       edx, edx
0000000000007ed2         jne        loc_83ea

0000000000007ed8         mov        dword [rax], 0x5
0000000000007ede         mov        rbp, r11
0000000000007ee1         movzx      ebx, byte [r11]
0000000000007ee5         jmp        loc_7b6e

                     loc_7eea:
0000000000007eea         mov        rax, rbp                                    ; CODE XREF=printf_parse+274
0000000000007eed         nop        dword [rax]

                     loc_7ef0:
0000000000007ef0         add        rax, 0x1                                    ; CODE XREF=printf_parse+1373
0000000000007ef4         movzx      edx, byte [rax]
0000000000007ef7         lea        ecx, dword [rdx-0x30]
0000000000007efa         cmp        cl, 0x9
0000000000007efd         jbe        loc_7ef0

0000000000007eff         cmp        dl, 0x24
0000000000007f02         mov        r13, r8
0000000000007f05         jne        loc_7aee

0000000000007f0b         xor        edx, edx

                     loc_7f0d:
0000000000007f0d         movsx      eax, bl                                     ; CODE XREF=printf_parse+1463
0000000000007f10         movabs     rdi, 0x1999999999999999
0000000000007f1a         mov        rsi, r8
0000000000007f1d         sub        eax, 0x30
0000000000007f20         cmp        rdx, rdi
0000000000007f23         cdqe
0000000000007f25         ja         loc_7f2e

0000000000007f27         lea        rsi, qword [rdx+rdx*4]
0000000000007f2b         add        rsi, rsi

                     loc_7f2e:
0000000000007f2e         mov        rcx, rbp                                    ; CODE XREF=printf_parse+1413

                     loc_7f31:
0000000000007f31         add        rax, rsi                                    ; CODE XREF=printf_parse+2390
0000000000007f34         movzx      ebx, byte [rbp+1]
0000000000007f38         setb       sil
0000000000007f3c         add        rbp, 0x1
0000000000007f40         mov        rdx, rax
0000000000007f43         movzx      esi, sil
0000000000007f47         test       rsi, rsi
0000000000007f4a         lea        edi, dword [rbx-0x30]
0000000000007f4d         jne        loc_82de

0000000000007f53         cmp        dil, 0x9
0000000000007f57         jbe        loc_7f0d

0000000000007f59         mov        r13, rax
0000000000007f5c         sub        r13, 0x1
0000000000007f60         cmp        r13, 0xfffffffffffffffd
0000000000007f64         ja         loc_81eb

0000000000007f6a         lea        rbp, qword [rcx+2]
0000000000007f6e         movzx      ebx, byte [rcx+2]
0000000000007f72         jmp        loc_7aee

                     loc_7f77:
0000000000007f77         mov        qword [r12+0x18], rbp                       ; CODE XREF=printf_parse+447
0000000000007f7c         movzx      edi, byte [rbp]
0000000000007f80         mov        rsi, rbp
0000000000007f83         lea        ecx, dword [rdi-0x30]
0000000000007f86         cmp        cl, 0x9
0000000000007f89         jbe        loc_7f97

0000000000007f8b         jmp        loc_7fc0
0000000000007f8d         align      16

                     loc_7f90:
0000000000007f90         mov        rbp, rax                                    ; CODE XREF=printf_parse+1536
0000000000007f93         add        rax, 0x1

                     loc_7f97:
0000000000007f97         movzx      edi, byte [rax]                             ; CODE XREF=printf_parse+1513
0000000000007f9a         lea        edx, dword [rdi-0x30]
0000000000007f9d         cmp        dl, 0x9
0000000000007fa0         jbe        loc_7f90

0000000000007fa2         mov        rcx, rax
0000000000007fa5         lea        rdx, qword [rbp+2]
0000000000007fa9         mov        rbp, rax
0000000000007fac         sub        rcx, rsi
0000000000007faf         mov        rsi, qword [rsp+0x88+var_78]
0000000000007fb4         cmp        rsi, rcx
0000000000007fb7         cmovae     rcx, rsi
0000000000007fbb         mov        qword [rsp+0x88+var_78], rcx

                     loc_7fc0:
0000000000007fc0         mov        qword [r12+0x20], rbp                       ; CODE XREF=printf_parse+1515
0000000000007fc5         movzx      ebx, byte [rbp]
0000000000007fc9         jmp        loc_7b65

                     loc_7fce:
0000000000007fce         movzx      eax, byte [rbp+1]                           ; CODE XREF=printf_parse+1192
0000000000007fd2         sub        eax, 0x30
0000000000007fd5         cmp        al, 0x9
0000000000007fd7         ja         loc_7fee

0000000000007fd9         nop        dword [rax]

                     loc_7fe0:
0000000000007fe0         add        rdx, 0x1                                    ; CODE XREF=printf_parse+1612
0000000000007fe4         movzx      eax, byte [rdx]
0000000000007fe7         sub        eax, 0x30
0000000000007fea         cmp        al, 0x9
0000000000007fec         jbe        loc_7fe0

                     loc_7fee:
0000000000007fee         mov        rsi, qword [rsp+0x88+var_70]                ; CODE XREF=printf_parse+1591
0000000000007ff3         mov        rax, rdx
0000000000007ff6         mov        qword [r12+0x38], rdx
0000000000007ffb         sub        rax, rbp
0000000000007ffe         movzx      ebx, byte [rdx]
0000000000008001         mov        rbp, rdx
0000000000008004         cmp        rsi, rax
0000000000008007         cmovae     rax, rsi
000000000000800b         mov        qword [rsp+0x88+var_70], rax
0000000000008010         jmp        loc_7b6e

                     loc_8015:
0000000000008015         mov        rsi, rax                                    ; CODE XREF=printf_parse+916

                     loc_8018:
0000000000008018         add        rsi, 0x1                                    ; CODE XREF=printf_parse+1671
000000000000801c         movzx      edi, byte [rsi]
000000000000801f         lea        r11d, dword [rdi-0x30]
0000000000008023         cmp        r11b, 0x9
0000000000008027         jbe        loc_8018

0000000000008029         cmp        dil, 0x24
000000000000802d         jne        loc_7d3a

0000000000008033         xor        esi, esi

                     loc_8035:
0000000000008035         movsx      eax, cl                                     ; CODE XREF=printf_parse+1758
0000000000008038         movabs     rdi, 0x1999999999999999
0000000000008042         mov        rcx, r8
0000000000008045         sub        eax, 0x30
0000000000008048         cmp        rsi, rdi
000000000000804b         cdqe
000000000000804d         ja         loc_8056

000000000000804f         lea        rcx, qword [rsi+rsi*4]
0000000000008053         add        rcx, rcx

                     loc_8056:
0000000000008056         mov        rbp, rdx                                    ; CODE XREF=printf_parse+1709

                     loc_8059:
0000000000008059         xor        r11d, r11d                                  ; CODE XREF=printf_parse+3062
000000000000805c         add        rax, rcx
000000000000805f         movzx      ecx, byte [rdx+1]
0000000000008063         setb       r11b
0000000000008067         add        rdx, 0x1
000000000000806b         mov        rsi, rax
000000000000806e         test       r11, r11
0000000000008071         lea        edi, dword [rcx-0x30]
0000000000008074         jne        loc_857e

000000000000807a         cmp        dil, 0x9
000000000000807e         jbe        loc_8035

0000000000008080         lea        rbx, qword [rax-1]
0000000000008084         cmp        rbx, 0xfffffffffffffffd
0000000000008088         ja         loc_81eb

000000000000808e         mov        qword [r12+0x28], rbx
0000000000008093         add        rbp, 0x2
0000000000008097         jmp        loc_7d5f

                     loc_809c:
000000000000809c         cmp        eax, 0xf                                    ; case 73, CODE XREF=printf_parse+581
000000000000809f         mov        r11d, 0x16
00000000000080a5         jg         loc_7bf8

00000000000080ab         test       al, 0x4
00000000000080ad         jne        loc_7bf8

00000000000080b3         cmp        eax, 0x7
00000000000080b6         mov        r11d, 0x15
00000000000080bc         jg         loc_7bf8

00000000000080c2         test       al, 0x2
00000000000080c4         mov        r11d, 0x12
00000000000080ca         jne        loc_7bf8

00000000000080d0         xor        r11d, r11d
00000000000080d3         test       al, 0x1
00000000000080d5         sete       r11b
00000000000080d9         add        r11d, 0x13
00000000000080dd         jmp        loc_7bf8
00000000000080e2         align      8

                     loc_80e8:
00000000000080e8         xor        r11d, r11d                                  ; case 62, CODE XREF=printf_parse+581
00000000000080eb         cmp        eax, 0x7
00000000000080ee         setg       r11b
00000000000080f2         add        r11d, 0xd
00000000000080f6         jmp        loc_7bf8

                     loc_80fb:
00000000000080fb         cmp        eax, 0xf                                    ; case 68, CODE XREF=printf_parse+581
00000000000080fe         mov        r11d, 0x9
0000000000008104         jg         loc_7bf8

000000000000810a         test       al, 0x4
000000000000810c         jne        loc_7bf8

0000000000008112         cmp        eax, 0x7
0000000000008115         mov        r11d, 0x7
000000000000811b         jg         loc_7bf8

0000000000008121         test       al, 0x2
0000000000008123         mov        r11d, 0x1
0000000000008129         jne        loc_7bf8

000000000000812f         and        eax, 0x1
0000000000008132         cmp        eax, 0x1
0000000000008135         sbb        r11d, r11d
0000000000008138         and        r11d, 0x2
000000000000813c         add        r11d, 0x3
0000000000008140         jmp        loc_7bf8
0000000000008145         align      8

                     loc_8148:
0000000000008148         xor        r11d, r11d                                  ; case 78, CODE XREF=printf_parse+581
000000000000814b         cmp        eax, 0x7
000000000000814e         setg       r11b
0000000000008152         add        r11d, 0xf
0000000000008156         jmp        loc_7bf8

                     loc_815b:
000000000000815b         cmp        eax, 0xf                                    ; case 66, CODE XREF=printf_parse+581
000000000000815e         mov        r11d, 0xc
0000000000008164         jg         loc_7bf8

000000000000816a         xor        r11d, r11d
000000000000816d         test       al, 0x4
000000000000816f         setne      r11b
0000000000008173         add        r11d, 0xb
0000000000008177         jmp        loc_7bf8

                     loc_817c:
000000000000817c         mov        r11d, 0xe                                   ; case 30, CODE XREF=printf_parse+581
0000000000008182         mov        ebx, 0x63
0000000000008187         jmp        loc_7bf8

                     loc_818c:
000000000000818c         cmp        eax, 0xf                                    ; case 83, CODE XREF=printf_parse+581
000000000000818f         mov        r11d, 0xa
0000000000008195         jg         loc_7bf8

000000000000819b         test       al, 0x4
000000000000819d         jne        loc_7bf8

00000000000081a3         cmp        eax, 0x7
00000000000081a6         mov        r11d, 0x8
00000000000081ac         jg         loc_7bf8

00000000000081b2         test       al, 0x2
00000000000081b4         mov        r11d, 0x2
00000000000081ba         jne        loc_7bf8

00000000000081c0         and        eax, 0x1
00000000000081c3         cmp        eax, 0x1
00000000000081c6         sbb        r11d, r11d
00000000000081c9         and        r11d, 0x2
00000000000081cd         add        r11d, 0x4
00000000000081d1         jmp        loc_7bf8
00000000000081d6         align      32

                     loc_81e0:
00000000000081e0         mov        r11d, 0x11                                  ; case 75, CODE XREF=printf_parse+581
00000000000081e6         jmp        loc_7bf8

                     loc_81eb:
00000000000081eb         mov        rcx, qword [r15+8]                          ; case 82, CODE XREF=printf_parse+558, printf_parse+581, printf_parse+940, printf_parse+1476, printf_parse+1768, printf_parse+2345, printf_parse+2370, printf_parse+2903, printf_parse+3019, printf_parse+3042, printf_parse+3146

                     loc_81ef:
00000000000081ef         cmp        qword [rsp+0x88+var_80], rcx                ; CODE XREF=printf_parse+2188, printf_parse+2398, printf_parse+2637
00000000000081f4         je         loc_81fe

00000000000081f6         mov        rdi, rcx                                    ; argument "__ptr" for method j_free
00000000000081f9         call       j_free                                      ; free

                     loc_81fe:
00000000000081fe         mov        rdi, qword [r14+8]                          ; CODE XREF=printf_parse+2132
0000000000008202         cmp        qword [rsp+0x88+var_60], rdi
0000000000008207         je         loc_820e

0000000000008209         call       j_free                                      ; free

                     loc_820e:
000000000000820e         call       j___errno_location                          ; __errno_location, CODE XREF=printf_parse+2151
0000000000008213         mov        dword [rax], 0x16
0000000000008219         mov        eax, 0xffffffff
000000000000821e         jmp        loc_7a42

                     loc_8223:
0000000000008223         cmp        edx, r11d                                   ; CODE XREF=printf_parse+690
0000000000008226         je         loc_7c5b

000000000000822c         jmp        loc_81ef
000000000000822e         align      16

                     loc_8230:
0000000000008230         add        r9, r9                                      ; CODE XREF=printf_parse+622
0000000000008233         lea        rax, qword [r13+1]
0000000000008237         cmp        r9, r13
000000000000823a         cmovbe     r9, rax
000000000000823e         movabs     rax, 0x7ffffffffffffff
0000000000008248         cmp        r9, rax
000000000000824b         ja         loc_862b

0000000000008251         mov        rsi, r9
0000000000008254         mov        qword [rsp+0x88+var_40], r9
0000000000008259         mov        qword [rsp+0x88+var_48], r10
000000000000825e         shl        rsi, 0x5
0000000000008262         cmp        qword [rsp+0x88+var_80], rcx
0000000000008267         mov        qword [rsp+0x88+var_50], r8
000000000000826c         mov        dword [rsp+0x88+var_58], r11d
0000000000008271         je         loc_8311

0000000000008277         mov        rdi, rcx                                    ; argument "__ptr" for method j_realloc
000000000000827a         call       j_realloc                                   ; realloc
000000000000827f         test       rax, rax
0000000000008282         mov        rcx, rax
0000000000008285         mov        r11d, dword [rsp+0x88+var_58]
000000000000828a         mov        r8, qword [rsp+0x88+var_50]
000000000000828f         mov        r10, qword [rsp+0x88+var_48]
0000000000008294         mov        r9, qword [rsp+0x88+var_40]
0000000000008299         je         loc_8627

000000000000829f         mov        rax, qword [rsp+0x88+var_80]
00000000000082a4         cmp        rax, qword [r15+8]
00000000000082a8         je         loc_8339

                     loc_82ae:
00000000000082ae         mov        qword [r15+8], rcx                          ; CODE XREF=printf_parse+2520
00000000000082b2         jmp        loc_7c14

                     loc_82b7:
00000000000082b7         mov        rsi, qword [rsp+0x88+var_68]                ; CODE XREF=printf_parse+604
00000000000082bc         cmp        rsi, 0xffffffffffffffff
00000000000082c0         lea        rax, qword [rsi+1]
00000000000082c4         mov        qword [r12+0x50], rsi
00000000000082c9         je         loc_81eb

00000000000082cf         mov        r13, qword [rsp+0x88+var_68]
00000000000082d4         mov        qword [rsp+0x88+var_68], rax
00000000000082d9         jmp        loc_7c07

                     loc_82de:
00000000000082de         cmp        dil, 0x9                                    ; CODE XREF=printf_parse+1453
00000000000082e2         ja         loc_81eb

00000000000082e8         movsx      eax, bl
00000000000082eb         mov        rsi, r8
00000000000082ee         mov        rcx, rbp
00000000000082f1         sub        eax, 0x30
00000000000082f4         cdqe
00000000000082f6         jmp        loc_7f31

                     loc_82fb:
00000000000082fb         cmp        edx, 0x5                                    ; CODE XREF=printf_parse+1154
00000000000082fe         jne        loc_81ef

0000000000008304         movzx      ebx, byte [rbp]
0000000000008308         lea        rdx, qword [rbp+1]
000000000000830c         jmp        loc_7b65

                     loc_8311:
0000000000008311         mov        rdi, rsi                                    ; argument "__size" for method j_malloc, CODE XREF=printf_parse+2257
0000000000008314         call       j_malloc                                    ; malloc
0000000000008319         test       rax, rax
000000000000831c         mov        rcx, rax
000000000000831f         mov        r11d, dword [rsp+0x88+var_58]
0000000000008324         mov        r8, qword [rsp+0x88+var_50]
0000000000008329         mov        r10, qword [rsp+0x88+var_48]
000000000000832e         mov        r9, qword [rsp+0x88+var_40]
0000000000008333         je         loc_849c

                     loc_8339:
0000000000008339         mov        rdx, qword [r15]                            ; CODE XREF=printf_parse+2312
000000000000833c         mov        rsi, qword [rsp+0x88+var_80]                ; argument "__src" for method j_memcpy
0000000000008341         mov        rdi, rcx                                    ; argument "__dest" for method j_memcpy
0000000000008344         mov        qword [rsp+0x88+var_40], r9
0000000000008349         mov        qword [rsp+0x88+var_48], r10
000000000000834e         mov        qword [rsp+0x88+var_50], r8
0000000000008353         mov        dword [rsp+0x88+var_58], r11d
0000000000008358         shl        rdx, 0x5                                    ; argument "__n" for method j_memcpy
000000000000835c         call       j_memcpy                                    ; memcpy
0000000000008361         mov        r9, qword [rsp+0x88+var_40]
0000000000008366         mov        r10, qword [rsp+0x88+var_48]
000000000000836b         mov        rcx, rax
000000000000836e         mov        r8, qword [rsp+0x88+var_50]
0000000000008373         mov        r11d, dword [rsp+0x88+var_58]
0000000000008378         jmp        loc_82ae

                     loc_837d:
000000000000837d         mov        rdi, rsi                                    ; argument "__size" for method j_malloc, CODE XREF=printf_parse+799
0000000000008380         call       j_malloc                                    ; malloc
0000000000008385         test       rax, rax
0000000000008388         mov        rcx, rax
000000000000838b         mov        r8, qword [rsp+0x88+var_58]
0000000000008390         mov        r10, qword [rsp+0x88+var_50]
0000000000008395         mov        r9, qword [rsp+0x88+var_48]
000000000000839a         je         loc_8489

                     loc_83a0:
00000000000083a0         lea        rax, qword [rbx+rbx*4]                      ; CODE XREF=printf_parse+849
00000000000083a4         mov        rsi, qword [rsp+0x88+var_60]                ; argument "__src" for method j_memcpy
00000000000083a9         mov        rdi, rcx                                    ; argument "__dest" for method j_memcpy
00000000000083ac         mov        qword [rsp+0x88+var_48], r9
00000000000083b1         mov        qword [rsp+0x88+var_50], r10
00000000000083b6         lea        rdx, qword [rbx+rax*2]
00000000000083ba         mov        qword [rsp+0x88+var_58], r8
00000000000083bf         shl        rdx, 0x3                                    ; argument "__n" for method j_memcpy
00000000000083c3         call       j_memcpy                                    ; memcpy
00000000000083c8         mov        rbx, qword [r14]
00000000000083cb         mov        rcx, rax
00000000000083ce         mov        r9, qword [rsp+0x88+var_48]
00000000000083d3         mov        r10, qword [rsp+0x88+var_50]
00000000000083d8         mov        r8, qword [rsp+0x88+var_58]
00000000000083dd         jmp        loc_7cf7

                     loc_83e2:
00000000000083e2         mov        rax, qword [r15]                            ; CODE XREF=printf_parse+966
00000000000083e5         jmp        loc_7de7

                     loc_83ea:
00000000000083ea         cmp        edx, 0x5                                    ; CODE XREF=printf_parse+1330
00000000000083ed         jne        loc_81ef

00000000000083f3         movzx      ebx, byte [r11]
00000000000083f7         mov        rbp, r11
00000000000083fa         jmp        loc_7b6e

                     loc_83ff:
00000000000083ff         add        r9, r9                                      ; CODE XREF=printf_parse+1268
0000000000008402         lea        rax, qword [rbx+1]
0000000000008406         cmp        r9, rbx
0000000000008409         cmovbe     r9, rax
000000000000840d         movabs     rax, 0x7ffffffffffffff
0000000000008417         cmp        r9, rax
000000000000841a         ja         loc_862b

0000000000008420         mov        rsi, r9
0000000000008423         mov        qword [rsp+0x88+var_40], r9
0000000000008428         mov        qword [rsp+0x88+var_48], r10
000000000000842d         shl        rsi, 0x5
0000000000008431         cmp        qword [rsp+0x88+var_80], rcx
0000000000008436         mov        qword [rsp+0x88+var_50], r8
000000000000843b         mov        qword [rsp+0x88+var_58], r11
0000000000008440         je         loc_85fe

0000000000008446         mov        rdi, rcx                                    ; argument "__ptr" for method j_realloc
0000000000008449         call       j_realloc                                   ; realloc
000000000000844e         mov        rdx, qword [r15+8]
0000000000008452         mov        r11, qword [rsp+0x88+var_58]
0000000000008457         mov        rcx, rax
000000000000845a         mov        r8, qword [rsp+0x88+var_50]
000000000000845f         mov        r10, qword [rsp+0x88+var_48]
0000000000008464         mov        r9, qword [rsp+0x88+var_40]

                     loc_8469:
0000000000008469         test       rcx, rcx                                    ; CODE XREF=printf_parse+3202
000000000000846c         je         loc_8687

0000000000008472         cmp        qword [rsp+0x88+var_80], rdx
0000000000008477         mov        rax, qword [r15]
000000000000847a         je         loc_8640

                     loc_8480:
0000000000008480         mov        qword [r15+8], rcx                          ; CODE XREF=printf_parse+3298
0000000000008484         jmp        loc_7e9d

                     loc_8489:
0000000000008489         mov        rcx, qword [r15+8]                          ; CODE XREF=printf_parse+2554
000000000000848d         cmp        qword [rsp+0x88+var_80], rcx
0000000000008492         je         loc_84ac

                     loc_8494:
0000000000008494         mov        rdi, rcx                                    ; argument "__ptr" for method j_free, CODE XREF=printf_parse+3216
0000000000008497         call       j_free                                      ; free

                     loc_849c:
000000000000849c         mov        rdi, qword [r14+8]                          ; CODE XREF=printf_parse+2451, printf_parse+3222
00000000000084a0         cmp        qword [rsp+0x88+var_60], rdi
00000000000084a5         je         loc_84ac

00000000000084a7         call       j_free                                      ; free

                     loc_84ac:
00000000000084ac         call       j___errno_location                          ; __errno_location, CODE XREF=printf_parse+2802, printf_parse+2821
00000000000084b1         mov        dword [rax], 0xc
00000000000084b7         mov        eax, 0xffffffff
00000000000084bc         jmp        loc_7a42

                     loc_84c1:
00000000000084c1         mov        rdi, rsi                                    ; argument "__size" for method j_malloc, CODE XREF=printf_parse+1032
00000000000084c4         call       j_malloc                                    ; malloc
00000000000084c9         mov        rdx, qword [rsp+0x88+var_80]
00000000000084ce         mov        rcx, rax
00000000000084d1         mov        r9, qword [rsp+0x88+var_48]
00000000000084d6         mov        r10, qword [rsp+0x88+var_50]
00000000000084db         mov        r8, qword [rsp+0x88+var_58]
00000000000084e0         jmp        loc_7dcc

                     loc_84e5:
00000000000084e5         mov        rsi, qword [rsp+0x88+var_68]                ; CODE XREF=printf_parse+1255
00000000000084ea         cmp        rsi, 0xffffffffffffffff
00000000000084ee         lea        rax, qword [rsi+1]
00000000000084f2         mov        qword [r12+0x40], rsi
00000000000084f7         je         loc_81eb

00000000000084fd         mov        rbx, qword [rsp+0x88+var_68]
0000000000008502         mov        qword [rsp+0x88+var_68], rax
0000000000008507         jmp        loc_7e8d

                     loc_850c:
000000000000850c         mov        rdx, r11                                    ; CODE XREF=printf_parse+1240

                     loc_850f:
000000000000850f         add        rdx, 0x1                                    ; CODE XREF=printf_parse+2941
0000000000008513         movzx      ecx, byte [rdx]
0000000000008516         lea        esi, dword [rcx-0x30]
0000000000008519         cmp        sil, 0x9
000000000000851d         jbe        loc_850f

000000000000851f         cmp        cl, 0x24
0000000000008522         jne        loc_7e7e

0000000000008528         xor        ecx, ecx

                     loc_852a:
000000000000852a         movabs     rsi, 0x1999999999999999                     ; CODE XREF=printf_parse+3132
0000000000008534         sub        eax, 0x30
0000000000008537         mov        rdx, r8
000000000000853a         cmp        rcx, rsi
000000000000853d         cdqe
000000000000853f         ja         loc_8548

0000000000008541         lea        rdx, qword [rcx+rcx*4]
0000000000008545         add        rdx, rdx

                     loc_8548:
0000000000008548         mov        rsi, r11                                    ; CODE XREF=printf_parse+2975

                     loc_854b:
000000000000854b         xor        ebx, ebx                                    ; CODE XREF=printf_parse+3036
000000000000854d         add        rdx, rax
0000000000008550         movsx      eax, byte [r11+1]
0000000000008555         setb       bl
0000000000008558         add        r11, 0x1
000000000000855c         mov        rcx, rdx
000000000000855f         test       rbx, rbx
0000000000008562         lea        edi, dword [rax-0x30]
0000000000008565         je         loc_85d8

0000000000008567         cmp        dil, 0x9
000000000000856b         ja         loc_81eb

0000000000008571         sub        eax, 0x30
0000000000008574         mov        rdx, r8
0000000000008577         mov        rsi, r11
000000000000857a         cdqe
000000000000857c         jmp        loc_854b

                     loc_857e:
000000000000857e         cmp        dil, 0x9                                    ; CODE XREF=printf_parse+1748
0000000000008582         ja         loc_81eb

0000000000008588         movsx      eax, cl
000000000000858b         mov        rbp, rdx
000000000000858e         mov        rcx, r8
0000000000008591         sub        eax, 0x30
0000000000008594         cdqe
0000000000008596         jmp        loc_8059

                     loc_859b:
000000000000859b         mov        rsi, qword [rsp+0x88+var_80]                ; argument "__src" for method j_memcpy, CODE XREF=printf_parse+1085
00000000000085a0         shl        rax, 0x5
00000000000085a4         mov        rdi, rcx                                    ; argument "__dest" for method j_memcpy
00000000000085a7         mov        rdx, rax                                    ; argument "__n" for method j_memcpy
00000000000085aa         mov        qword [rsp+0x88+var_48], r9
00000000000085af         mov        qword [rsp+0x88+var_50], r10
00000000000085b4         mov        qword [rsp+0x88+var_58], r8
00000000000085b9         call       j_memcpy                                    ; memcpy
00000000000085be         mov        r9, qword [rsp+0x88+var_48]
00000000000085c3         mov        rcx, rax
00000000000085c6         mov        r10, qword [rsp+0x88+var_50]
00000000000085cb         mov        rax, qword [r15]
00000000000085ce         mov        r8, qword [rsp+0x88+var_58]
00000000000085d3         jmp        loc_7de3

                     loc_85d8:
00000000000085d8         cmp        dil, 0x9                                    ; CODE XREF=printf_parse+3013
00000000000085dc         jbe        loc_852a

00000000000085e2         lea        rbx, qword [rdx-1]
00000000000085e6         cmp        rbx, 0xfffffffffffffffd
00000000000085ea         ja         loc_81eb

00000000000085f0         mov        qword [r12+0x40], rbx
00000000000085f5         lea        r11, qword [rsi+2]
00000000000085f9         jmp        loc_7e8d

                     loc_85fe:
00000000000085fe         mov        rdi, rsi                                    ; argument "__size" for method j_malloc, CODE XREF=printf_parse+2720
0000000000008601         call       j_malloc                                    ; malloc
0000000000008606         mov        rdx, qword [rsp+0x88+var_80]
000000000000860b         mov        rcx, rax
000000000000860e         mov        r9, qword [rsp+0x88+var_40]
0000000000008613         mov        r10, qword [rsp+0x88+var_48]
0000000000008618         mov        r8, qword [rsp+0x88+var_50]
000000000000861d         mov        r11, qword [rsp+0x88+var_58]
0000000000008622         jmp        loc_8469

                     loc_8627:
0000000000008627         mov        rcx, qword [r15+8]                          ; CODE XREF=printf_parse+731, printf_parse+753, printf_parse+831, printf_parse+2297

                     loc_862b:
000000000000862b         cmp        qword [rsp+0x88+var_80], rcx                ; CODE XREF=printf_parse+999, printf_parse+2219, printf_parse+2682, printf_parse+3306
0000000000008630         jne        loc_8494

0000000000008636         jmp        loc_849c
000000000000863b         align      64

                     loc_8640:
0000000000008640         mov        rsi, qword [rsp+0x88+var_80]                ; argument "__src" for method j_memcpy, CODE XREF=printf_parse+2778
0000000000008645         shl        rax, 0x5
0000000000008649         mov        rdi, rcx                                    ; argument "__dest" for method j_memcpy
000000000000864c         mov        rdx, rax                                    ; argument "__n" for method j_memcpy
000000000000864f         mov        qword [rsp+0x88+var_40], r9
0000000000008654         mov        qword [rsp+0x88+var_48], r10
0000000000008659         mov        qword [rsp+0x88+var_50], r8
000000000000865e         mov        qword [rsp+0x88+var_58], r11
0000000000008663         call       j_memcpy                                    ; memcpy
0000000000008668         mov        r9, qword [rsp+0x88+var_40]
000000000000866d         mov        rcx, rax
0000000000008670         mov        r10, qword [rsp+0x88+var_48]
0000000000008675         mov        rax, qword [r15]
0000000000008678         mov        r8, qword [rsp+0x88+var_50]
000000000000867d         mov        r11, qword [rsp+0x88+var_58]
0000000000008682         jmp        loc_8480

                     loc_8687:
0000000000008687         mov        rcx, rdx                                    ; CODE XREF=printf_parse+1071, printf_parse+2764
000000000000868a         jmp        loc_862b
000000000000868c         align      16                                          ; End of unwind block (FDE at 0xab7c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
0000000000008690         push       r15                                         ; Begin of unwind block (FDE at 0xabcc), DATA XREF=_start+22
0000000000008692         push       r14
0000000000008694         mov        r15, rdx
0000000000008697         push       r13
0000000000008699         push       r12
000000000000869b         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
00000000000086a2         push       rbp
00000000000086a3         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
00000000000086aa         push       rbx
00000000000086ab         mov        r13d, edi
00000000000086ae         mov        r14, rsi
00000000000086b1         sub        rbp, r12
00000000000086b4         sub        rsp, 0x8
00000000000086b8         sar        rbp, 0x3
00000000000086bc         call       _init                                       ; _init
00000000000086c1         test       rbp, rbp
00000000000086c4         je         loc_86e6

00000000000086c6         xor        ebx, ebx
00000000000086c8         nop        dword [rax+rax]

                     loc_86d0:
00000000000086d0         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
00000000000086d3         mov        rsi, r14
00000000000086d6         mov        edi, r13d
00000000000086d9         call       qword [r12+rbx*8]
00000000000086dd         add        rbx, 0x1
00000000000086e1         cmp        rbp, rbx
00000000000086e4         jne        loc_86d0

                     loc_86e6:
00000000000086e6         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
00000000000086ea         pop        rbx
00000000000086eb         pop        rbp
00000000000086ec         pop        r12
00000000000086ee         pop        r13
00000000000086f0         pop        r14
00000000000086f2         pop        r15
00000000000086f4         ret
                        ; endp
00000000000086f5         align      256                                         ; End of unwind block (FDE at 0xabcc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
0000000000008700         ret                                                    ; Begin of unwind block (FDE at 0xac14), DATA XREF=_start+15
                        ; endp
0000000000008702         align      16                                          ; End of unwind block (FDE at 0xac14)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
0000000000008710         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0xac2c), __dso_handle, CODE XREF=main+137
0000000000008717         xor        esi, esi
0000000000008719         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
000000000000871e         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0xac2c)
000000000000871f         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x8720; 0x8729[ (9 bytes)
        ; File offset : [34592; 34601[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
0000000000008720         sub        rsp, 0x8
0000000000008724         add        rsp, 0x8
0000000000008728         ret
                        ; endp
0000000000008729         db  0x00 ; '.'
000000000000872a         db  0x00 ; '.'
000000000000872b         db  0x00 ; '.'
000000000000872c         db  0x00 ; '.'
000000000000872d         db  0x00 ; '.'
000000000000872e         db  0x00 ; '.'
000000000000872f         db  0x00 ; '.'
0000000000008730         db  0x00 ; '.'
0000000000008731         db  0x00 ; '.'
0000000000008732         db  0x00 ; '.'
0000000000008733         db  0x00 ; '.'
0000000000008734         db  0x00 ; '.'
0000000000008735         db  0x00 ; '.'
0000000000008736         db  0x00 ; '.'
0000000000008737         db  0x00 ; '.'
0000000000008738         db  0x00 ; '.'
0000000000008739         db  0x00 ; '.'
000000000000873a         db  0x00 ; '.'
000000000000873b         db  0x00 ; '.'
000000000000873c         db  0x00 ; '.'
000000000000873d         db  0x00 ; '.'
000000000000873e         db  0x00 ; '.'
000000000000873f         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x8740; 0x996c[ (4652 bytes)
        ; File offset : [34624; 39276[ (4652 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
0000000000008740         db  0x01 ; '.'
0000000000008741         db  0x00 ; '.'
0000000000008742         db  0x02 ; '.'
0000000000008743         db  0x00 ; '.'
                     aMkdir:
0000000000008744         db         "mkdir", 0                                  ; DATA XREF=main+279, usage+342, usage+660, usage+844, usage+863, usage+897
000000000000874a         db  0x5b ; '['                                         ; DATA XREF=usage+354
000000000000874b         db  0x00 ; '.'
                     aTestInvocation:
000000000000874c         db         "test invocation", 0                        ; DATA XREF=usage+393
                     aMulticallInvoc:
000000000000875c         db         "Multi-call invocation", 0                  ; DATA XREF=usage+441
                     aSha224sum:
0000000000008772         db         "sha224sum", 0                              ; DATA XREF=usage+458
                     aSha2Utilities:
000000000000877c         db         "sha2 utilities", 0                         ; DATA XREF=usage+470
                     aSha256sum:
000000000000878b         db         "sha256sum", 0                              ; DATA XREF=usage+361
                     aSha384sum:
0000000000008795         db         "sha384sum", 0                              ; DATA XREF=usage+405
                     aSha512sum:
000000000000879f         db         "sha512sum", 0                              ; DATA XREF=usage+429
                     aNsOnlineHelpSn:
00000000000087a9         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+546
00000000000087c0         db  0x47 ; 'G'                                         ; DATA XREF=main+272, usage+574, usage+767, emit_bug_reporting_address+68
00000000000087c1         db  0x4e ; 'N'
00000000000087c2         db  0x55 ; 'U'
00000000000087c3         db  0x20 ; ' '
                     aCoreutils:
00000000000087c4         db         "coreutils", 0                              ; DATA XREF=main+106, main+118, usage+417
00000000000087ce         db  0x65 ; 'e'                                         ; DATA XREF=usage+613, usage+806
00000000000087cf         db  0x6e ; 'n'
00000000000087d0         db  0x5f ; '_'
00000000000087d1         db  0x00 ; '.'
                     aFullDocumentat:
00000000000087d2         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+641, usage+830
                     aUsrlocalsharel:
00000000000087ed         db         "/usr/local/share/locale", 0                ; DATA XREF=main+99
                     aCreatedDirecto:
0000000000008805         db         "created directory %s", 0                   ; DATA XREF=main+360
                     aDavidMackenzie:
000000000000881a         db         "David MacKenzie", 0                        ; DATA XREF=main+265
                     aPmvz:
000000000000882a         db         "pm:vZ", 0                                  ; DATA XREF=main+149
                     aMissingOperand:
0000000000008830         db         "missing operand", 0                        ; DATA XREF=main+683
                     aInvalidModeS:
0000000000008840         db         "invalid mode %s", 0                        ; DATA XREF=main+636
                     aContext:
0000000000008850         db         "context", 0
                     aMode:
0000000000008858         db         "mode", 0
                     aParents:
000000000000885d         db         "parents", 0
                     aVerbose:
0000000000008865         db         "verbose", 0
                     aHelp:
000000000000886d         db         "help", 0
                     aVersion:
0000000000008872         db         "version", 0
000000000000887a         align      128
                     aTrySHelpForMor:
0000000000008880         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
00000000000088a7         align      8
                     aUsageSOptionDi:
00000000000088a8         db         "Usage: %s [OPTION]... DIRECTORY...\n", 0   ; DATA XREF=usage+93
00000000000088cc         align      16
                     aCreateTheDirec:
00000000000088d0         db         "Create the DIRECTORY(ies), if they do not already exist.\n", 0 ; DATA XREF=usage+132
000000000000890a         align      16
                     aNmandatoryArgu:
0000000000008910         db         "\nMandatory arguments to long options are mandatory for short options too.\n", 0 ; DATA XREF=usage+169
000000000000895b         align      32
                     aMModemodeSetFi:
0000000000008960         db         "  -m, --mode=MODE   set file mode (as in chmod), not a=rwx - umask\n  -p, --parents     no error if existing, make parent directories as needed\n  -v, --verbose     print a message for each created directory\n", 0 ; DATA XREF=usage+206
0000000000008a2f         align      16
                     aZSetSelinuxSec:
0000000000008a30         db         "  -Z                   set SELinux security context of each created directory\n                         to the default type\n      --context[=CTX]  like -Z, or if CTX is specified then set the SELinux\n                         or SMACK security context to CTX" ; DATA XREF=usage+243
0000000000008b30         db         "\n", 0
0000000000008b32         align      8
                     aHelpDisplayThi:
0000000000008b38         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+280
0000000000008b65         align      8
                     aVersionOutputV:
0000000000008b68         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+317
0000000000008b9e         align      32
                     aHttpswwwgnuorg:
0000000000008ba0         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+567, usage+667, usage+760, usage+870, emit_bug_reporting_address+61
                     aReportAnyTrans:
0000000000008bc8         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+911
0000000000008c0f         align      16
                     aOrAvailableLoc:
0000000000008c10         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+710
0000000000008c43         align      8
                     aWarningIgnorin:
0000000000008c48         db         "warning: ignoring --context; it requires an SELinux/SMACK-enabled kernel", 0 ; DATA XREF=main+318
0000000000008c91         db  0x3a ; ':'                                         ; DATA XREF=prog_fprintf+125
0000000000008c92         db  0x20 ; ' '
0000000000008c93         db  0x00 ; '.'
                     a831:
0000000000008c94         db         "8.31", 0                                   ; DATA XREF=Version
                     aWriteError:
0000000000008c99         db         "write error", 0                            ; DATA XREF=close_stdout+67
                     aSS:
0000000000008ca5         db         "%s: %s", 0                                 ; DATA XREF=close_stdout+108
0000000000008cac         db  0x2e ; '.'                                         ; DATA XREF=make_dir_parents+665, savewd_chdir+191
0000000000008cad         db  0x00 ; '.'
                     aCannotStatS:
0000000000008cae         db         "cannot stat %s", 0                         ; DATA XREF=make_dir_parents+335
                     aCannotCreateDi:
0000000000008cbd         db         "cannot create directory %s", 0             ; DATA XREF=make_dir_parents+422
                     aCannotChangePe:
0000000000008cd8         db         "cannot change permissions of %s", 0        ; DATA XREF=make_dir_parents+798
                     aCannotChangeOw:
0000000000008cf8         db         "cannot change owner and permissions of %s", 0 ; DATA XREF=make_dir_parents+791
0000000000008d22         align      4
                     switch_table_8d24:        // switch_table
0000000000008d24         dd         mode_compile.loc_2c30-switch_table_8d24, 25 dup (mode_compile.loc_2c49-switch_table_8d24), mode_compile.loc_2ca0-switch_table_8d24, mode_compile.loc_2c90-switch_table_8d24 ; switch table used at 0x2c24 containing 33 entries, DATA XREF=mode_compile+116
0000000000008d94         dd         mode_compile.loc_2c80-switch_table_8d24, 2 dup (mode_compile.loc_2c49-switch_table_8d24), mode_compile.loc_2c70-switch_table_8d24, mode_compile.loc_2c68-switch_table_8d24
                     aANullArgv0WasP:
0000000000008da8         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
0000000000008de0         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
0000000000008de8         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
0000000000008de9         db  0x74 ; 't'
0000000000008dea         db  0x2d ; '-'
0000000000008deb         db  0x00 ; '.'
0000000000008dec         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
0000000000008ded         db  0x80 ; '.'
0000000000008dee         db  0x98 ; '.'
0000000000008def         db  0x00 ; '.'
0000000000008df0         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
0000000000008df1         db  0x80 ; '.'
0000000000008df2         db  0x99 ; '.'
0000000000008df3         db  0x00 ; '.'
0000000000008df4         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
0000000000008df5         db  0x07 ; '.'
0000000000008df6         db  0x65 ; 'e'
0000000000008df7         db  0x00 ; '.'
0000000000008df8         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
0000000000008df9         db  0xaf ; '.'
0000000000008dfa         db  0x00 ; '.'
0000000000008dfb         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_3870+1451, sub_3870+1493, sub_3870+2429
0000000000008dfc         db  0x00 ; '.'
0000000000008dfd         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_3870+132, sub_3870+1338, sub_3870+1670, sub_3870+1697, sub_3870+2352
0000000000008dfe         db  0x00 ; '.'
0000000000008dff         db  0x60 ; '`'                                         ; DATA XREF=sub_3870+1627, sub_3870+1654
0000000000008e00         db  0x00 ; '.'
                     aLiteral:
0000000000008e01         db         "literal", 0
                     aShell:
0000000000008e09         db         "shell", 0
                     aShellalways:
0000000000008e0f         db         "shell-always", 0
0000000000008e1c         db  0x73 ; 's'
0000000000008e1d         db  0x68 ; 'h'
0000000000008e1e         db  0x65 ; 'e'
0000000000008e1f         db  0x6c ; 'l'
0000000000008e20         db  0x6c ; 'l'
0000000000008e21         db  0x2d ; '-'
                     aEscape:
0000000000008e22         db         "escape", 0
                     aShellescapealw:
0000000000008e29         db         "shell-escape-always", 0
0000000000008e3d         db  0x63 ; 'c'
0000000000008e3e         db  0x00 ; '.'
                     aCmaybe:
0000000000008e3f         db         "c-maybe", 0
                     aClocale:
0000000000008e47         db         "clocale", 0
0000000000008e4f         align      32
                     switch_table_8e60:        // switch_table
0000000000008e60         dd         quotearg_buffer_restyled.loc_3f6a-switch_table_8e60, quotearg_buffer_restyled.loc_31c3-switch_table_8e60, quotearg_buffer_restyled.loc_4198-switch_table_8e60, quotearg_buffer_restyled.loc_3fa4-switch_table_8e60 ; switch table used at 0x31c1 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
0000000000008e70         dd         quotearg_buffer_restyled.loc_3d94-switch_table_8e60, quotearg_buffer_restyled.loc_3df0-switch_table_8e60, quotearg_buffer_restyled.loc_3e45-switch_table_8e60, quotearg_buffer_restyled.loc_3e8a-switch_table_8e60
0000000000008e80         dd         3 dup (quotearg_buffer_restyled.loc_3ec4-switch_table_8e60)
0000000000008e8c         db  0xb4 ; '.'                                         ; DATA XREF=quotearg_buffer_restyled+477
0000000000008e8d         db  0xa6 ; '.'
0000000000008e8e         db  0xff ; '.'
0000000000008e8f         db  0xff ; '.'
0000000000008e90         db  0x9c ; '.'
0000000000008e91         db  0xa7 ; '.'
0000000000008e92         db  0xff ; '.'
0000000000008e93         db  0xff ; '.'
0000000000008e94         db  0x9c ; '.'
0000000000008e95         db  0xa7 ; '.'
0000000000008e96         db  0xff ; '.'
0000000000008e97         db  0xff ; '.'
0000000000008e98         db  0x9c ; '.'
0000000000008e99         db  0xa7 ; '.'
0000000000008e9a         db  0xff ; '.'
0000000000008e9b         db  0xff ; '.'
0000000000008e9c         db  0x9c ; '.'
0000000000008e9d         db  0xa7 ; '.'
0000000000008e9e         db  0xff ; '.'
0000000000008e9f         db  0xff ; '.'
0000000000008ea0         db  0x9c ; '.'
0000000000008ea1         db  0xa7 ; '.'
0000000000008ea2         db  0xff ; '.'
0000000000008ea3         db  0xff ; '.'
0000000000008ea4         db  0x9c ; '.'
0000000000008ea5         db  0xa7 ; '.'
0000000000008ea6         db  0xff ; '.'
0000000000008ea7         db  0xff ; '.'
0000000000008ea8         db  0xf4 ; '.'
0000000000008ea9         db  0xa6 ; '.'
0000000000008eaa         db  0xff ; '.'
0000000000008eab         db  0xff ; '.'
0000000000008eac         db  0xfc ; '.'
0000000000008ead         db  0xa5 ; '.'
0000000000008eae         db  0xff ; '.'
0000000000008eaf         db  0xff ; '.'
0000000000008eb0         db  0xbc ; '.'
0000000000008eb1         db  0xa5 ; '.'
0000000000008eb2         db  0xff ; '.'
0000000000008eb3         db  0xff ; '.'
0000000000008eb4         db  0x84 ; '.'
0000000000008eb5         db  0xa7 ; '.'
0000000000008eb6         db  0xff ; '.'
0000000000008eb7         db  0xff ; '.'
0000000000008eb8         db  0x74 ; 't'
0000000000008eb9         db  0xa7 ; '.'
0000000000008eba         db  0xff ; '.'
0000000000008ebb         db  0xff ; '.'
0000000000008ebc         db  0x64 ; 'd'
0000000000008ebd         db  0xa7 ; '.'
0000000000008ebe         db  0xff ; '.'
0000000000008ebf         db  0xff ; '.'
0000000000008ec0         db  0x54 ; 'T'
0000000000008ec1         db  0xa7 ; '.'
0000000000008ec2         db  0xff ; '.'
0000000000008ec3         db  0xff ; '.'
0000000000008ec4         db  0x9c ; '.'
0000000000008ec5         db  0xa7 ; '.'
0000000000008ec6         db  0xff ; '.'
0000000000008ec7         db  0xff ; '.'
0000000000008ec8         db  0x9c ; '.'
0000000000008ec9         db  0xa7 ; '.'
0000000000008eca         db  0xff ; '.'
0000000000008ecb         db  0xff ; '.'
0000000000008ecc         db  0x9c ; '.'
0000000000008ecd         db  0xa7 ; '.'
0000000000008ece         db  0xff ; '.'
0000000000008ecf         db  0xff ; '.'
0000000000008ed0         db  0x9c ; '.'
0000000000008ed1         db  0xa7 ; '.'
0000000000008ed2         db  0xff ; '.'
0000000000008ed3         db  0xff ; '.'
0000000000008ed4         db  0x9c ; '.'
0000000000008ed5         db  0xa7 ; '.'
0000000000008ed6         db  0xff ; '.'
0000000000008ed7         db  0xff ; '.'
0000000000008ed8         db  0x9c ; '.'
0000000000008ed9         db  0xa7 ; '.'
0000000000008eda         db  0xff ; '.'
0000000000008edb         db  0xff ; '.'
0000000000008edc         db  0x9c ; '.'
0000000000008edd         db  0xa7 ; '.'
0000000000008ede         db  0xff ; '.'
0000000000008edf         db  0xff ; '.'
0000000000008ee0         db  0x9c ; '.'
0000000000008ee1         db  0xa7 ; '.'
0000000000008ee2         db  0xff ; '.'
0000000000008ee3         db  0xff ; '.'
0000000000008ee4         db  0x9c ; '.'
0000000000008ee5         db  0xa7 ; '.'
0000000000008ee6         db  0xff ; '.'
0000000000008ee7         db  0xff ; '.'
0000000000008ee8         db  0x9c ; '.'
0000000000008ee9         db  0xa7 ; '.'
0000000000008eea         db  0xff ; '.'
0000000000008eeb         db  0xff ; '.'
0000000000008eec         db  0x9c ; '.'
0000000000008eed         db  0xa7 ; '.'
0000000000008eee         db  0xff ; '.'
0000000000008eef         db  0xff ; '.'
0000000000008ef0         db  0x9c ; '.'
0000000000008ef1         db  0xa7 ; '.'
0000000000008ef2         db  0xff ; '.'
0000000000008ef3         db  0xff ; '.'
0000000000008ef4         db  0x9c ; '.'
0000000000008ef5         db  0xa7 ; '.'
0000000000008ef6         db  0xff ; '.'
0000000000008ef7         db  0xff ; '.'
0000000000008ef8         db  0x9c ; '.'
0000000000008ef9         db  0xa7 ; '.'
0000000000008efa         db  0xff ; '.'
0000000000008efb         db  0xff ; '.'
0000000000008efc         db  0x9c ; '.'
0000000000008efd         db  0xa7 ; '.'
0000000000008efe         db  0xff ; '.'
0000000000008eff         db  0xff ; '.'
0000000000008f00         db  0x9c ; '.'
0000000000008f01         db  0xa7 ; '.'
0000000000008f02         db  0xff ; '.'
0000000000008f03         db  0xff ; '.'
0000000000008f04         db  0x9c ; '.'
0000000000008f05         db  0xa7 ; '.'
0000000000008f06         db  0xff ; '.'
0000000000008f07         db  0xff ; '.'
0000000000008f08         db  0x9c ; '.'
0000000000008f09         db  0xa7 ; '.'
0000000000008f0a         db  0xff ; '.'
0000000000008f0b         db  0xff ; '.'
0000000000008f0c         db  0x44 ; 'D'
0000000000008f0d         db  0xa7 ; '.'
0000000000008f0e         db  0xff ; '.'
0000000000008f0f         db  0xff ; '.'
0000000000008f10         db  0x34 ; '4'
0000000000008f11         db  0xa7 ; '.'
0000000000008f12         db  0xff ; '.'
0000000000008f13         db  0xff ; '.'
0000000000008f14         db  0x34 ; '4'
0000000000008f15         db  0xa7 ; '.'
0000000000008f16         db  0xff ; '.'
0000000000008f17         db  0xff ; '.'
0000000000008f18         db  0x04 ; '.'
0000000000008f19         db  0xa7 ; '.'
0000000000008f1a         db  0xff ; '.'
0000000000008f1b         db  0xff ; '.'
0000000000008f1c         db  0x34 ; '4'
0000000000008f1d         db  0xa7 ; '.'
0000000000008f1e         db  0xff ; '.'
0000000000008f1f         db  0xff ; '.'
0000000000008f20         db  0xdc ; '.'
0000000000008f21         db  0xa6 ; '.'
0000000000008f22         db  0xff ; '.'
0000000000008f23         db  0xff ; '.'
0000000000008f24         db  0x34 ; '4'
0000000000008f25         db  0xa7 ; '.'
0000000000008f26         db  0xff ; '.'
0000000000008f27         db  0xff ; '.'
0000000000008f28         db  0x97 ; '.'
0000000000008f29         db  0xa5 ; '.'
0000000000008f2a         db  0xff ; '.'
0000000000008f2b         db  0xff ; '.'
0000000000008f2c         db  0x34 ; '4'
0000000000008f2d         db  0xa7 ; '.'
0000000000008f2e         db  0xff ; '.'
0000000000008f2f         db  0xff ; '.'
0000000000008f30         db  0x34 ; '4'
0000000000008f31         db  0xa7 ; '.'
0000000000008f32         db  0xff ; '.'
0000000000008f33         db  0xff ; '.'
0000000000008f34         db  0x34 ; '4'
0000000000008f35         db  0xa7 ; '.'
0000000000008f36         db  0xff ; '.'
0000000000008f37         db  0xff ; '.'
0000000000008f38         db  0xdc ; '.'
0000000000008f39         db  0xa6 ; '.'
0000000000008f3a         db  0xff ; '.'
0000000000008f3b         db  0xff ; '.'
0000000000008f3c         db  0xdc ; '.'
0000000000008f3d         db  0xa6 ; '.'
0000000000008f3e         db  0xff ; '.'
0000000000008f3f         db  0xff ; '.'
0000000000008f40         db  0xdc ; '.'
0000000000008f41         db  0xa6 ; '.'
0000000000008f42         db  0xff ; '.'
0000000000008f43         db  0xff ; '.'
0000000000008f44         db  0xdc ; '.'
0000000000008f45         db  0xa6 ; '.'
0000000000008f46         db  0xff ; '.'
0000000000008f47         db  0xff ; '.'
0000000000008f48         db  0xdc ; '.'
0000000000008f49         db  0xa6 ; '.'
0000000000008f4a         db  0xff ; '.'
0000000000008f4b         db  0xff ; '.'
0000000000008f4c         db  0xdc ; '.'
0000000000008f4d         db  0xa6 ; '.'
0000000000008f4e         db  0xff ; '.'
0000000000008f4f         db  0xff ; '.'
0000000000008f50         db  0xdc ; '.'
0000000000008f51         db  0xa6 ; '.'
0000000000008f52         db  0xff ; '.'
0000000000008f53         db  0xff ; '.'
0000000000008f54         db  0xdc ; '.'
0000000000008f55         db  0xa6 ; '.'
0000000000008f56         db  0xff ; '.'
0000000000008f57         db  0xff ; '.'
0000000000008f58         db  0xdc ; '.'
0000000000008f59         db  0xa6 ; '.'
0000000000008f5a         db  0xff ; '.'
0000000000008f5b         db  0xff ; '.'
0000000000008f5c         db  0xdc ; '.'
0000000000008f5d         db  0xa6 ; '.'
0000000000008f5e         db  0xff ; '.'
0000000000008f5f         db  0xff ; '.'
0000000000008f60         db  0xdc ; '.'
0000000000008f61         db  0xa6 ; '.'
0000000000008f62         db  0xff ; '.'
0000000000008f63         db  0xff ; '.'
0000000000008f64         db  0xdc ; '.'
0000000000008f65         db  0xa6 ; '.'
0000000000008f66         db  0xff ; '.'
0000000000008f67         db  0xff ; '.'
0000000000008f68         db  0xdc ; '.'
0000000000008f69         db  0xa6 ; '.'
0000000000008f6a         db  0xff ; '.'
0000000000008f6b         db  0xff ; '.'
0000000000008f6c         db  0xdc ; '.'
0000000000008f6d         db  0xa6 ; '.'
0000000000008f6e         db  0xff ; '.'
0000000000008f6f         db  0xff ; '.'
0000000000008f70         db  0xdc ; '.'
0000000000008f71         db  0xa6 ; '.'
0000000000008f72         db  0xff ; '.'
0000000000008f73         db  0xff ; '.'
0000000000008f74         db  0xdc ; '.'
0000000000008f75         db  0xa6 ; '.'
0000000000008f76         db  0xff ; '.'
0000000000008f77         db  0xff ; '.'
0000000000008f78         db  0x34 ; '4'
0000000000008f79         db  0xa7 ; '.'
0000000000008f7a         db  0xff ; '.'
0000000000008f7b         db  0xff ; '.'
0000000000008f7c         db  0x34 ; '4'
0000000000008f7d         db  0xa7 ; '.'
0000000000008f7e         db  0xff ; '.'
0000000000008f7f         db  0xff ; '.'
0000000000008f80         db  0x34 ; '4'
0000000000008f81         db  0xa7 ; '.'
0000000000008f82         db  0xff ; '.'
0000000000008f83         db  0xff ; '.'
0000000000008f84         db  0x34 ; '4'
0000000000008f85         db  0xa7 ; '.'
0000000000008f86         db  0xff ; '.'
0000000000008f87         db  0xff ; '.'
0000000000008f88         db  0x67 ; 'g'
0000000000008f89         db  0xa5 ; '.'
0000000000008f8a         db  0xff ; '.'
0000000000008f8b         db  0xff ; '.'
0000000000008f8c         db  0x9c ; '.'
0000000000008f8d         db  0xa7 ; '.'
0000000000008f8e         db  0xff ; '.'
0000000000008f8f         db  0xff ; '.'
0000000000008f90         db  0xdc ; '.'
0000000000008f91         db  0xa6 ; '.'
0000000000008f92         db  0xff ; '.'
0000000000008f93         db  0xff ; '.'
0000000000008f94         db  0xdc ; '.'
0000000000008f95         db  0xa6 ; '.'
0000000000008f96         db  0xff ; '.'
0000000000008f97         db  0xff ; '.'
0000000000008f98         db  0xdc ; '.'
0000000000008f99         db  0xa6 ; '.'
0000000000008f9a         db  0xff ; '.'
0000000000008f9b         db  0xff ; '.'
0000000000008f9c         db  0xdc ; '.'
0000000000008f9d         db  0xa6 ; '.'
0000000000008f9e         db  0xff ; '.'
0000000000008f9f         db  0xff ; '.'
0000000000008fa0         db  0xdc ; '.'
0000000000008fa1         db  0xa6 ; '.'
0000000000008fa2         db  0xff ; '.'
0000000000008fa3         db  0xff ; '.'
0000000000008fa4         db  0xdc ; '.'
0000000000008fa5         db  0xa6 ; '.'
0000000000008fa6         db  0xff ; '.'
0000000000008fa7         db  0xff ; '.'
0000000000008fa8         db  0xdc ; '.'
0000000000008fa9         db  0xa6 ; '.'
0000000000008faa         db  0xff ; '.'
0000000000008fab         db  0xff ; '.'
0000000000008fac         db  0xdc ; '.'
0000000000008fad         db  0xa6 ; '.'
0000000000008fae         db  0xff ; '.'
0000000000008faf         db  0xff ; '.'
0000000000008fb0         db  0xdc ; '.'
0000000000008fb1         db  0xa6 ; '.'
0000000000008fb2         db  0xff ; '.'
0000000000008fb3         db  0xff ; '.'
0000000000008fb4         db  0xdc ; '.'
0000000000008fb5         db  0xa6 ; '.'
0000000000008fb6         db  0xff ; '.'
0000000000008fb7         db  0xff ; '.'
0000000000008fb8         db  0xdc ; '.'
0000000000008fb9         db  0xa6 ; '.'
0000000000008fba         db  0xff ; '.'
0000000000008fbb         db  0xff ; '.'
0000000000008fbc         db  0xdc ; '.'
0000000000008fbd         db  0xa6 ; '.'
0000000000008fbe         db  0xff ; '.'
0000000000008fbf         db  0xff ; '.'
0000000000008fc0         db  0xdc ; '.'
0000000000008fc1         db  0xa6 ; '.'
0000000000008fc2         db  0xff ; '.'
0000000000008fc3         db  0xff ; '.'
0000000000008fc4         db  0xdc ; '.'
0000000000008fc5         db  0xa6 ; '.'
0000000000008fc6         db  0xff ; '.'
0000000000008fc7         db  0xff ; '.'
0000000000008fc8         db  0xdc ; '.'
0000000000008fc9         db  0xa6 ; '.'
0000000000008fca         db  0xff ; '.'
0000000000008fcb         db  0xff ; '.'
0000000000008fcc         db  0xdc ; '.'
0000000000008fcd         db  0xa6 ; '.'
0000000000008fce         db  0xff ; '.'
0000000000008fcf         db  0xff ; '.'
0000000000008fd0         db  0xdc ; '.'
0000000000008fd1         db  0xa6 ; '.'
0000000000008fd2         db  0xff ; '.'
0000000000008fd3         db  0xff ; '.'
0000000000008fd4         db  0xdc ; '.'
0000000000008fd5         db  0xa6 ; '.'
0000000000008fd6         db  0xff ; '.'
0000000000008fd7         db  0xff ; '.'
0000000000008fd8         db  0xdc ; '.'
0000000000008fd9         db  0xa6 ; '.'
0000000000008fda         db  0xff ; '.'
0000000000008fdb         db  0xff ; '.'
0000000000008fdc         db  0xdc ; '.'
0000000000008fdd         db  0xa6 ; '.'
0000000000008fde         db  0xff ; '.'
0000000000008fdf         db  0xff ; '.'
0000000000008fe0         db  0xdc ; '.'
0000000000008fe1         db  0xa6 ; '.'
0000000000008fe2         db  0xff ; '.'
0000000000008fe3         db  0xff ; '.'
0000000000008fe4         db  0xdc ; '.'
0000000000008fe5         db  0xa6 ; '.'
0000000000008fe6         db  0xff ; '.'
0000000000008fe7         db  0xff ; '.'
0000000000008fe8         db  0xdc ; '.'
0000000000008fe9         db  0xa6 ; '.'
0000000000008fea         db  0xff ; '.'
0000000000008feb         db  0xff ; '.'
0000000000008fec         db  0xdc ; '.'
0000000000008fed         db  0xa6 ; '.'
0000000000008fee         db  0xff ; '.'
0000000000008fef         db  0xff ; '.'
0000000000008ff0         db  0xdc ; '.'
0000000000008ff1         db  0xa6 ; '.'
0000000000008ff2         db  0xff ; '.'
0000000000008ff3         db  0xff ; '.'
0000000000008ff4         db  0xdc ; '.'
0000000000008ff5         db  0xa6 ; '.'
0000000000008ff6         db  0xff ; '.'
0000000000008ff7         db  0xff ; '.'
0000000000008ff8         db  0x34 ; '4'
0000000000008ff9         db  0xa7 ; '.'
0000000000008ffa         db  0xff ; '.'
0000000000008ffb         db  0xff ; '.'
0000000000008ffc         db  0x0c ; '.'
0000000000008ffd         db  0xa6 ; '.'
0000000000008ffe         db  0xff ; '.'
0000000000008fff         db  0xff ; '.'
0000000000009000         db  0xdc ; '.'
0000000000009001         db  0xa6 ; '.'
0000000000009002         db  0xff ; '.'
0000000000009003         db  0xff ; '.'
0000000000009004         db  0x34 ; '4'
0000000000009005         db  0xa7 ; '.'
0000000000009006         db  0xff ; '.'
0000000000009007         db  0xff ; '.'
0000000000009008         db  0xdc ; '.'
0000000000009009         db  0xa6 ; '.'
000000000000900a         db  0xff ; '.'
000000000000900b         db  0xff ; '.'
000000000000900c         db  0x34 ; '4'
000000000000900d         db  0xa7 ; '.'
000000000000900e         db  0xff ; '.'
000000000000900f         db  0xff ; '.'
0000000000009010         db  0xdc ; '.'
0000000000009011         db  0xa6 ; '.'
0000000000009012         db  0xff ; '.'
0000000000009013         db  0xff ; '.'
0000000000009014         db  0xdc ; '.'
0000000000009015         db  0xa6 ; '.'
0000000000009016         db  0xff ; '.'
0000000000009017         db  0xff ; '.'
0000000000009018         db  0xdc ; '.'
0000000000009019         db  0xa6 ; '.'
000000000000901a         db  0xff ; '.'
000000000000901b         db  0xff ; '.'
000000000000901c         db  0xdc ; '.'
000000000000901d         db  0xa6 ; '.'
000000000000901e         db  0xff ; '.'
000000000000901f         db  0xff ; '.'
0000000000009020         db  0xdc ; '.'
0000000000009021         db  0xa6 ; '.'
0000000000009022         db  0xff ; '.'
0000000000009023         db  0xff ; '.'
0000000000009024         db  0xdc ; '.'
0000000000009025         db  0xa6 ; '.'
0000000000009026         db  0xff ; '.'
0000000000009027         db  0xff ; '.'
0000000000009028         db  0xdc ; '.'
0000000000009029         db  0xa6 ; '.'
000000000000902a         db  0xff ; '.'
000000000000902b         db  0xff ; '.'
000000000000902c         db  0xdc ; '.'
000000000000902d         db  0xa6 ; '.'
000000000000902e         db  0xff ; '.'
000000000000902f         db  0xff ; '.'
0000000000009030         db  0xdc ; '.'
0000000000009031         db  0xa6 ; '.'
0000000000009032         db  0xff ; '.'
0000000000009033         db  0xff ; '.'
0000000000009034         db  0xdc ; '.'
0000000000009035         db  0xa6 ; '.'
0000000000009036         db  0xff ; '.'
0000000000009037         db  0xff ; '.'
0000000000009038         db  0xdc ; '.'
0000000000009039         db  0xa6 ; '.'
000000000000903a         db  0xff ; '.'
000000000000903b         db  0xff ; '.'
000000000000903c         db  0xdc ; '.'
000000000000903d         db  0xa6 ; '.'
000000000000903e         db  0xff ; '.'
000000000000903f         db  0xff ; '.'
0000000000009040         db  0xdc ; '.'
0000000000009041         db  0xa6 ; '.'
0000000000009042         db  0xff ; '.'
0000000000009043         db  0xff ; '.'
0000000000009044         db  0xdc ; '.'
0000000000009045         db  0xa6 ; '.'
0000000000009046         db  0xff ; '.'
0000000000009047         db  0xff ; '.'
0000000000009048         db  0xdc ; '.'
0000000000009049         db  0xa6 ; '.'
000000000000904a         db  0xff ; '.'
000000000000904b         db  0xff ; '.'
000000000000904c         db  0xdc ; '.'
000000000000904d         db  0xa6 ; '.'
000000000000904e         db  0xff ; '.'
000000000000904f         db  0xff ; '.'
0000000000009050         db  0xdc ; '.'
0000000000009051         db  0xa6 ; '.'
0000000000009052         db  0xff ; '.'
0000000000009053         db  0xff ; '.'
0000000000009054         db  0xdc ; '.'
0000000000009055         db  0xa6 ; '.'
0000000000009056         db  0xff ; '.'
0000000000009057         db  0xff ; '.'
0000000000009058         db  0xdc ; '.'
0000000000009059         db  0xa6 ; '.'
000000000000905a         db  0xff ; '.'
000000000000905b         db  0xff ; '.'
000000000000905c         db  0xdc ; '.'
000000000000905d         db  0xa6 ; '.'
000000000000905e         db  0xff ; '.'
000000000000905f         db  0xff ; '.'
0000000000009060         db  0xdc ; '.'
0000000000009061         db  0xa6 ; '.'
0000000000009062         db  0xff ; '.'
0000000000009063         db  0xff ; '.'
0000000000009064         db  0xdc ; '.'
0000000000009065         db  0xa6 ; '.'
0000000000009066         db  0xff ; '.'
0000000000009067         db  0xff ; '.'
0000000000009068         db  0xdc ; '.'
0000000000009069         db  0xa6 ; '.'
000000000000906a         db  0xff ; '.'
000000000000906b         db  0xff ; '.'
000000000000906c         db  0xdc ; '.'
000000000000906d         db  0xa6 ; '.'
000000000000906e         db  0xff ; '.'
000000000000906f         db  0xff ; '.'
0000000000009070         db  0xdc ; '.'
0000000000009071         db  0xa6 ; '.'
0000000000009072         db  0xff ; '.'
0000000000009073         db  0xff ; '.'
0000000000009074         db  0xdc ; '.'
0000000000009075         db  0xa6 ; '.'
0000000000009076         db  0xff ; '.'
0000000000009077         db  0xff ; '.'
0000000000009078         db  0x97 ; '.'
0000000000009079         db  0xa4 ; '.'
000000000000907a         db  0xff ; '.'
000000000000907b         db  0xff ; '.'
000000000000907c         db  0x34 ; '4'
000000000000907d         db  0xa7 ; '.'
000000000000907e         db  0xff ; '.'
000000000000907f         db  0xff ; '.'
0000000000009080         db  0x97 ; '.'
0000000000009081         db  0xa4 ; '.'
0000000000009082         db  0xff ; '.'
0000000000009083         db  0xff ; '.'
0000000000009084         db  0x04 ; '.'
0000000000009085         db  0xa7 ; '.'
0000000000009086         db  0xff ; '.'
0000000000009087         db  0xff ; '.'
0000000000009088         db  0x88 ; '.'                                         ; DATA XREF=sub_3610+137
0000000000009089         db  0xa6 ; '.'
000000000000908a         db  0xff ; '.'
000000000000908b         db  0xff ; '.'
000000000000908c         db  0x98 ; '.'
000000000000908d         db  0xa5 ; '.'
000000000000908e         db  0xff ; '.'
000000000000908f         db  0xff ; '.'
0000000000009090         db  0x98 ; '.'
0000000000009091         db  0xa5 ; '.'
0000000000009092         db  0xff ; '.'
0000000000009093         db  0xff ; '.'
0000000000009094         db  0x98 ; '.'
0000000000009095         db  0xa5 ; '.'
0000000000009096         db  0xff ; '.'
0000000000009097         db  0xff ; '.'
0000000000009098         db  0x98 ; '.'
0000000000009099         db  0xa5 ; '.'
000000000000909a         db  0xff ; '.'
000000000000909b         db  0xff ; '.'
000000000000909c         db  0x98 ; '.'
000000000000909d         db  0xa5 ; '.'
000000000000909e         db  0xff ; '.'
000000000000909f         db  0xff ; '.'
00000000000090a0         db  0x98 ; '.'
00000000000090a1         db  0xa5 ; '.'
00000000000090a2         db  0xff ; '.'
00000000000090a3         db  0xff ; '.'
00000000000090a4         db  0x78 ; 'x'
00000000000090a5         db  0xa6 ; '.'
00000000000090a6         db  0xff ; '.'
00000000000090a7         db  0xff ; '.'
00000000000090a8         db  0xc8 ; '.'
00000000000090a9         db  0xa7 ; '.'
00000000000090aa         db  0xff ; '.'
00000000000090ab         db  0xff ; '.'
00000000000090ac         db  0xb0 ; '.'
00000000000090ad         db  0xa7 ; '.'
00000000000090ae         db  0xff ; '.'
00000000000090af         db  0xff ; '.'
00000000000090b0         db  0x60 ; '`'
00000000000090b1         db  0xa6 ; '.'
00000000000090b2         db  0xff ; '.'
00000000000090b3         db  0xff ; '.'
00000000000090b4         db  0xa0 ; '.'
00000000000090b5         db  0xa7 ; '.'
00000000000090b6         db  0xff ; '.'
00000000000090b7         db  0xff ; '.'
00000000000090b8         db  0x48 ; 'H'
00000000000090b9         db  0xa6 ; '.'
00000000000090ba         db  0xff ; '.'
00000000000090bb         db  0xff ; '.'
00000000000090bc         db  0x88 ; '.'
00000000000090bd         db  0xa7 ; '.'
00000000000090be         db  0xff ; '.'
00000000000090bf         db  0xff ; '.'
00000000000090c0         db  0x98 ; '.'
00000000000090c1         db  0xa5 ; '.'
00000000000090c2         db  0xff ; '.'
00000000000090c3         db  0xff ; '.'
00000000000090c4         db  0x98 ; '.'
00000000000090c5         db  0xa5 ; '.'
00000000000090c6         db  0xff ; '.'
00000000000090c7         db  0xff ; '.'
00000000000090c8         db  0x98 ; '.'
00000000000090c9         db  0xa5 ; '.'
00000000000090ca         db  0xff ; '.'
00000000000090cb         db  0xff ; '.'
00000000000090cc         db  0x98 ; '.'
00000000000090cd         db  0xa5 ; '.'
00000000000090ce         db  0xff ; '.'
00000000000090cf         db  0xff ; '.'
00000000000090d0         db  0x98 ; '.'
00000000000090d1         db  0xa5 ; '.'
00000000000090d2         db  0xff ; '.'
00000000000090d3         db  0xff ; '.'
00000000000090d4         db  0x98 ; '.'
00000000000090d5         db  0xa5 ; '.'
00000000000090d6         db  0xff ; '.'
00000000000090d7         db  0xff ; '.'
00000000000090d8         db  0x98 ; '.'
00000000000090d9         db  0xa5 ; '.'
00000000000090da         db  0xff ; '.'
00000000000090db         db  0xff ; '.'
00000000000090dc         db  0x98 ; '.'
00000000000090dd         db  0xa5 ; '.'
00000000000090de         db  0xff ; '.'
00000000000090df         db  0xff ; '.'
00000000000090e0         db  0x98 ; '.'
00000000000090e1         db  0xa5 ; '.'
00000000000090e2         db  0xff ; '.'
00000000000090e3         db  0xff ; '.'
00000000000090e4         db  0x98 ; '.'
00000000000090e5         db  0xa5 ; '.'
00000000000090e6         db  0xff ; '.'
00000000000090e7         db  0xff ; '.'
00000000000090e8         db  0x98 ; '.'
00000000000090e9         db  0xa5 ; '.'
00000000000090ea         db  0xff ; '.'
00000000000090eb         db  0xff ; '.'
00000000000090ec         db  0x98 ; '.'
00000000000090ed         db  0xa5 ; '.'
00000000000090ee         db  0xff ; '.'
00000000000090ef         db  0xff ; '.'
00000000000090f0         db  0x98 ; '.'
00000000000090f1         db  0xa5 ; '.'
00000000000090f2         db  0xff ; '.'
00000000000090f3         db  0xff ; '.'
00000000000090f4         db  0x98 ; '.'
00000000000090f5         db  0xa5 ; '.'
00000000000090f6         db  0xff ; '.'
00000000000090f7         db  0xff ; '.'
00000000000090f8         db  0x98 ; '.'
00000000000090f9         db  0xa5 ; '.'
00000000000090fa         db  0xff ; '.'
00000000000090fb         db  0xff ; '.'
00000000000090fc         db  0x98 ; '.'
00000000000090fd         db  0xa5 ; '.'
00000000000090fe         db  0xff ; '.'
00000000000090ff         db  0xff ; '.'
0000000000009100         db  0x98 ; '.'
0000000000009101         db  0xa5 ; '.'
0000000000009102         db  0xff ; '.'
0000000000009103         db  0xff ; '.'
0000000000009104         db  0x98 ; '.'
0000000000009105         db  0xa5 ; '.'
0000000000009106         db  0xff ; '.'
0000000000009107         db  0xff ; '.'
0000000000009108         db  0x70 ; 'p'
0000000000009109         db  0xa7 ; '.'
000000000000910a         db  0xff ; '.'
000000000000910b         db  0xff ; '.'
000000000000910c         db  0x58 ; 'X'
000000000000910d         db  0xa7 ; '.'
000000000000910e         db  0xff ; '.'
000000000000910f         db  0xff ; '.'
0000000000009110         db  0x58 ; 'X'
0000000000009111         db  0xa7 ; '.'
0000000000009112         db  0xff ; '.'
0000000000009113         db  0xff ; '.'
0000000000009114         db  0x40 ; '@'
0000000000009115         db  0xa7 ; '.'
0000000000009116         db  0xff ; '.'
0000000000009117         db  0xff ; '.'
0000000000009118         db  0x58 ; 'X'
0000000000009119         db  0xa7 ; '.'
000000000000911a         db  0xff ; '.'
000000000000911b         db  0xff ; '.'
000000000000911c         db  0x28 ; '('
000000000000911d         db  0xa7 ; '.'
000000000000911e         db  0xff ; '.'
000000000000911f         db  0xff ; '.'
0000000000009120         db  0x58 ; 'X'
0000000000009121         db  0xa7 ; '.'
0000000000009122         db  0xff ; '.'
0000000000009123         db  0xff ; '.'
0000000000009124         db  0x98 ; '.'
0000000000009125         db  0xa3 ; '.'
0000000000009126         db  0xff ; '.'
0000000000009127         db  0xff ; '.'
0000000000009128         db  0x58 ; 'X'
0000000000009129         db  0xa7 ; '.'
000000000000912a         db  0xff ; '.'
000000000000912b         db  0xff ; '.'
000000000000912c         db  0x58 ; 'X'
000000000000912d         db  0xa7 ; '.'
000000000000912e         db  0xff ; '.'
000000000000912f         db  0xff ; '.'
0000000000009130         db  0x58 ; 'X'
0000000000009131         db  0xa7 ; '.'
0000000000009132         db  0xff ; '.'
0000000000009133         db  0xff ; '.'
0000000000009134         db  0x28 ; '('
0000000000009135         db  0xa7 ; '.'
0000000000009136         db  0xff ; '.'
0000000000009137         db  0xff ; '.'
0000000000009138         db  0x28 ; '('
0000000000009139         db  0xa7 ; '.'
000000000000913a         db  0xff ; '.'
000000000000913b         db  0xff ; '.'
000000000000913c         db  0x28 ; '('
000000000000913d         db  0xa7 ; '.'
000000000000913e         db  0xff ; '.'
000000000000913f         db  0xff ; '.'
0000000000009140         db  0x28 ; '('
0000000000009141         db  0xa7 ; '.'
0000000000009142         db  0xff ; '.'
0000000000009143         db  0xff ; '.'
0000000000009144         db  0x28 ; '('
0000000000009145         db  0xa7 ; '.'
0000000000009146         db  0xff ; '.'
0000000000009147         db  0xff ; '.'
0000000000009148         db  0x28 ; '('
0000000000009149         db  0xa7 ; '.'
000000000000914a         db  0xff ; '.'
000000000000914b         db  0xff ; '.'
000000000000914c         db  0x28 ; '('
000000000000914d         db  0xa7 ; '.'
000000000000914e         db  0xff ; '.'
000000000000914f         db  0xff ; '.'
0000000000009150         db  0x28 ; '('
0000000000009151         db  0xa7 ; '.'
0000000000009152         db  0xff ; '.'
0000000000009153         db  0xff ; '.'
0000000000009154         db  0x28 ; '('
0000000000009155         db  0xa7 ; '.'
0000000000009156         db  0xff ; '.'
0000000000009157         db  0xff ; '.'
0000000000009158         db  0x28 ; '('
0000000000009159         db  0xa7 ; '.'
000000000000915a         db  0xff ; '.'
000000000000915b         db  0xff ; '.'
000000000000915c         db  0x28 ; '('
000000000000915d         db  0xa7 ; '.'
000000000000915e         db  0xff ; '.'
000000000000915f         db  0xff ; '.'
0000000000009160         db  0x28 ; '('
0000000000009161         db  0xa7 ; '.'
0000000000009162         db  0xff ; '.'
0000000000009163         db  0xff ; '.'
0000000000009164         db  0x28 ; '('
0000000000009165         db  0xa7 ; '.'
0000000000009166         db  0xff ; '.'
0000000000009167         db  0xff ; '.'
0000000000009168         db  0x28 ; '('
0000000000009169         db  0xa7 ; '.'
000000000000916a         db  0xff ; '.'
000000000000916b         db  0xff ; '.'
000000000000916c         db  0x28 ; '('
000000000000916d         db  0xa7 ; '.'
000000000000916e         db  0xff ; '.'
000000000000916f         db  0xff ; '.'
0000000000009170         db  0x28 ; '('
0000000000009171         db  0xa7 ; '.'
0000000000009172         db  0xff ; '.'
0000000000009173         db  0xff ; '.'
0000000000009174         db  0x58 ; 'X'
0000000000009175         db  0xa7 ; '.'
0000000000009176         db  0xff ; '.'
0000000000009177         db  0xff ; '.'
0000000000009178         db  0x58 ; 'X'
0000000000009179         db  0xa7 ; '.'
000000000000917a         db  0xff ; '.'
000000000000917b         db  0xff ; '.'
000000000000917c         db  0x58 ; 'X'
000000000000917d         db  0xa7 ; '.'
000000000000917e         db  0xff ; '.'
000000000000917f         db  0xff ; '.'
0000000000009180         db  0x58 ; 'X'
0000000000009181         db  0xa7 ; '.'
0000000000009182         db  0xff ; '.'
0000000000009183         db  0xff ; '.'
0000000000009184         db  0x68 ; 'h'
0000000000009185         db  0xa3 ; '.'
0000000000009186         db  0xff ; '.'
0000000000009187         db  0xff ; '.'
0000000000009188         db  0x98 ; '.'
0000000000009189         db  0xa5 ; '.'
000000000000918a         db  0xff ; '.'
000000000000918b         db  0xff ; '.'
000000000000918c         db  0x28 ; '('
000000000000918d         db  0xa7 ; '.'
000000000000918e         db  0xff ; '.'
000000000000918f         db  0xff ; '.'
0000000000009190         db  0x28 ; '('
0000000000009191         db  0xa7 ; '.'
0000000000009192         db  0xff ; '.'
0000000000009193         db  0xff ; '.'
0000000000009194         db  0x28 ; '('
0000000000009195         db  0xa7 ; '.'
0000000000009196         db  0xff ; '.'
0000000000009197         db  0xff ; '.'
0000000000009198         db  0x28 ; '('
0000000000009199         db  0xa7 ; '.'
000000000000919a         db  0xff ; '.'
000000000000919b         db  0xff ; '.'
000000000000919c         db  0x28 ; '('
000000000000919d         db  0xa7 ; '.'
000000000000919e         db  0xff ; '.'
000000000000919f         db  0xff ; '.'
00000000000091a0         db  0x28 ; '('
00000000000091a1         db  0xa7 ; '.'
00000000000091a2         db  0xff ; '.'
00000000000091a3         db  0xff ; '.'
00000000000091a4         db  0x28 ; '('
00000000000091a5         db  0xa7 ; '.'
00000000000091a6         db  0xff ; '.'
00000000000091a7         db  0xff ; '.'
00000000000091a8         db  0x28 ; '('
00000000000091a9         db  0xa7 ; '.'
00000000000091aa         db  0xff ; '.'
00000000000091ab         db  0xff ; '.'
00000000000091ac         db  0x28 ; '('
00000000000091ad         db  0xa7 ; '.'
00000000000091ae         db  0xff ; '.'
00000000000091af         db  0xff ; '.'
00000000000091b0         db  0x28 ; '('
00000000000091b1         db  0xa7 ; '.'
00000000000091b2         db  0xff ; '.'
00000000000091b3         db  0xff ; '.'
00000000000091b4         db  0x28 ; '('
00000000000091b5         db  0xa7 ; '.'
00000000000091b6         db  0xff ; '.'
00000000000091b7         db  0xff ; '.'
00000000000091b8         db  0x28 ; '('
00000000000091b9         db  0xa7 ; '.'
00000000000091ba         db  0xff ; '.'
00000000000091bb         db  0xff ; '.'
00000000000091bc         db  0x28 ; '('
00000000000091bd         db  0xa7 ; '.'
00000000000091be         db  0xff ; '.'
00000000000091bf         db  0xff ; '.'
00000000000091c0         db  0x28 ; '('
00000000000091c1         db  0xa7 ; '.'
00000000000091c2         db  0xff ; '.'
00000000000091c3         db  0xff ; '.'
00000000000091c4         db  0x28 ; '('
00000000000091c5         db  0xa7 ; '.'
00000000000091c6         db  0xff ; '.'
00000000000091c7         db  0xff ; '.'
00000000000091c8         db  0x28 ; '('
00000000000091c9         db  0xa7 ; '.'
00000000000091ca         db  0xff ; '.'
00000000000091cb         db  0xff ; '.'
00000000000091cc         db  0x28 ; '('
00000000000091cd         db  0xa7 ; '.'
00000000000091ce         db  0xff ; '.'
00000000000091cf         db  0xff ; '.'
00000000000091d0         db  0x28 ; '('
00000000000091d1         db  0xa7 ; '.'
00000000000091d2         db  0xff ; '.'
00000000000091d3         db  0xff ; '.'
00000000000091d4         db  0x28 ; '('
00000000000091d5         db  0xa7 ; '.'
00000000000091d6         db  0xff ; '.'
00000000000091d7         db  0xff ; '.'
00000000000091d8         db  0x28 ; '('
00000000000091d9         db  0xa7 ; '.'
00000000000091da         db  0xff ; '.'
00000000000091db         db  0xff ; '.'
00000000000091dc         db  0x28 ; '('
00000000000091dd         db  0xa7 ; '.'
00000000000091de         db  0xff ; '.'
00000000000091df         db  0xff ; '.'
00000000000091e0         db  0x28 ; '('
00000000000091e1         db  0xa7 ; '.'
00000000000091e2         db  0xff ; '.'
00000000000091e3         db  0xff ; '.'
00000000000091e4         db  0x28 ; '('
00000000000091e5         db  0xa7 ; '.'
00000000000091e6         db  0xff ; '.'
00000000000091e7         db  0xff ; '.'
00000000000091e8         db  0x28 ; '('
00000000000091e9         db  0xa7 ; '.'
00000000000091ea         db  0xff ; '.'
00000000000091eb         db  0xff ; '.'
00000000000091ec         db  0x28 ; '('
00000000000091ed         db  0xa7 ; '.'
00000000000091ee         db  0xff ; '.'
00000000000091ef         db  0xff ; '.'
00000000000091f0         db  0x28 ; '('
00000000000091f1         db  0xa7 ; '.'
00000000000091f2         db  0xff ; '.'
00000000000091f3         db  0xff ; '.'
00000000000091f4         db  0x58 ; 'X'
00000000000091f5         db  0xa7 ; '.'
00000000000091f6         db  0xff ; '.'
00000000000091f7         db  0xff ; '.'
00000000000091f8         db  0x28 ; '('
00000000000091f9         db  0xa6 ; '.'
00000000000091fa         db  0xff ; '.'
00000000000091fb         db  0xff ; '.'
00000000000091fc         db  0x28 ; '('
00000000000091fd         db  0xa7 ; '.'
00000000000091fe         db  0xff ; '.'
00000000000091ff         db  0xff ; '.'
0000000000009200         db  0x58 ; 'X'
0000000000009201         db  0xa7 ; '.'
0000000000009202         db  0xff ; '.'
0000000000009203         db  0xff ; '.'
0000000000009204         db  0x28 ; '('
0000000000009205         db  0xa7 ; '.'
0000000000009206         db  0xff ; '.'
0000000000009207         db  0xff ; '.'
0000000000009208         db  0x58 ; 'X'
0000000000009209         db  0xa7 ; '.'
000000000000920a         db  0xff ; '.'
000000000000920b         db  0xff ; '.'
000000000000920c         db  0x28 ; '('
000000000000920d         db  0xa7 ; '.'
000000000000920e         db  0xff ; '.'
000000000000920f         db  0xff ; '.'
0000000000009210         db  0x28 ; '('
0000000000009211         db  0xa7 ; '.'
0000000000009212         db  0xff ; '.'
0000000000009213         db  0xff ; '.'
0000000000009214         db  0x28 ; '('
0000000000009215         db  0xa7 ; '.'
0000000000009216         db  0xff ; '.'
0000000000009217         db  0xff ; '.'
0000000000009218         db  0x28 ; '('
0000000000009219         db  0xa7 ; '.'
000000000000921a         db  0xff ; '.'
000000000000921b         db  0xff ; '.'
000000000000921c         db  0x28 ; '('
000000000000921d         db  0xa7 ; '.'
000000000000921e         db  0xff ; '.'
000000000000921f         db  0xff ; '.'
0000000000009220         db  0x28 ; '('
0000000000009221         db  0xa7 ; '.'
0000000000009222         db  0xff ; '.'
0000000000009223         db  0xff ; '.'
0000000000009224         db  0x28 ; '('
0000000000009225         db  0xa7 ; '.'
0000000000009226         db  0xff ; '.'
0000000000009227         db  0xff ; '.'
0000000000009228         db  0x28 ; '('
0000000000009229         db  0xa7 ; '.'
000000000000922a         db  0xff ; '.'
000000000000922b         db  0xff ; '.'
000000000000922c         db  0x28 ; '('
000000000000922d         db  0xa7 ; '.'
000000000000922e         db  0xff ; '.'
000000000000922f         db  0xff ; '.'
0000000000009230         db  0x28 ; '('
0000000000009231         db  0xa7 ; '.'
0000000000009232         db  0xff ; '.'
0000000000009233         db  0xff ; '.'
0000000000009234         db  0x28 ; '('
0000000000009235         db  0xa7 ; '.'
0000000000009236         db  0xff ; '.'
0000000000009237         db  0xff ; '.'
0000000000009238         db  0x28 ; '('
0000000000009239         db  0xa7 ; '.'
000000000000923a         db  0xff ; '.'
000000000000923b         db  0xff ; '.'
000000000000923c         db  0x28 ; '('
000000000000923d         db  0xa7 ; '.'
000000000000923e         db  0xff ; '.'
000000000000923f         db  0xff ; '.'
0000000000009240         db  0x28 ; '('
0000000000009241         db  0xa7 ; '.'
0000000000009242         db  0xff ; '.'
0000000000009243         db  0xff ; '.'
0000000000009244         db  0x28 ; '('
0000000000009245         db  0xa7 ; '.'
0000000000009246         db  0xff ; '.'
0000000000009247         db  0xff ; '.'
0000000000009248         db  0x28 ; '('
0000000000009249         db  0xa7 ; '.'
000000000000924a         db  0xff ; '.'
000000000000924b         db  0xff ; '.'
000000000000924c         db  0x28 ; '('
000000000000924d         db  0xa7 ; '.'
000000000000924e         db  0xff ; '.'
000000000000924f         db  0xff ; '.'
0000000000009250         db  0x28 ; '('
0000000000009251         db  0xa7 ; '.'
0000000000009252         db  0xff ; '.'
0000000000009253         db  0xff ; '.'
0000000000009254         db  0x28 ; '('
0000000000009255         db  0xa7 ; '.'
0000000000009256         db  0xff ; '.'
0000000000009257         db  0xff ; '.'
0000000000009258         db  0x28 ; '('
0000000000009259         db  0xa7 ; '.'
000000000000925a         db  0xff ; '.'
000000000000925b         db  0xff ; '.'
000000000000925c         db  0x28 ; '('
000000000000925d         db  0xa7 ; '.'
000000000000925e         db  0xff ; '.'
000000000000925f         db  0xff ; '.'
0000000000009260         db  0x28 ; '('
0000000000009261         db  0xa7 ; '.'
0000000000009262         db  0xff ; '.'
0000000000009263         db  0xff ; '.'
0000000000009264         db  0x28 ; '('
0000000000009265         db  0xa7 ; '.'
0000000000009266         db  0xff ; '.'
0000000000009267         db  0xff ; '.'
0000000000009268         db  0x28 ; '('
0000000000009269         db  0xa7 ; '.'
000000000000926a         db  0xff ; '.'
000000000000926b         db  0xff ; '.'
000000000000926c         db  0x28 ; '('
000000000000926d         db  0xa7 ; '.'
000000000000926e         db  0xff ; '.'
000000000000926f         db  0xff ; '.'
0000000000009270         db  0x28 ; '('
0000000000009271         db  0xa7 ; '.'
0000000000009272         db  0xff ; '.'
0000000000009273         db  0xff ; '.'
0000000000009274         db  0x98 ; '.'
0000000000009275         db  0xa2 ; '.'
0000000000009276         db  0xff ; '.'
0000000000009277         db  0xff ; '.'
0000000000009278         db  0x58 ; 'X'
0000000000009279         db  0xa7 ; '.'
000000000000927a         db  0xff ; '.'
000000000000927b         db  0xff ; '.'
000000000000927c         db  0x98 ; '.'
000000000000927d         db  0xa2 ; '.'
000000000000927e         db  0xff ; '.'
000000000000927f         db  0xff ; '.'
0000000000009280         db  0x40 ; '@'
0000000000009281         db  0xa7 ; '.'
0000000000009282         db  0xff ; '.'
0000000000009283         db  0xff ; '.'
0000000000009284         db  0x00 ; '.'
0000000000009285         db  0x00 ; '.'
0000000000009286         db  0x00 ; '.'
0000000000009287         db  0x00 ; '.'
0000000000009288         db  0x00 ; '.'
0000000000009289         db  0x00 ; '.'
000000000000928a         db  0x00 ; '.'
000000000000928b         db  0x00 ; '.'
000000000000928c         db  0x00 ; '.'
000000000000928d         db  0x00 ; '.'
000000000000928e         db  0x00 ; '.'
000000000000928f         db  0x00 ; '.'
0000000000009290         db  0x00 ; '.'
0000000000009291         db  0x00 ; '.'
0000000000009292         db  0x00 ; '.'
0000000000009293         db  0x00 ; '.'
0000000000009294         db  0x00 ; '.'
0000000000009295         db  0x00 ; '.'
0000000000009296         db  0x00 ; '.'
0000000000009297         db  0x00 ; '.'
0000000000009298         db  0x00 ; '.'
0000000000009299         db  0x00 ; '.'
000000000000929a         db  0x00 ; '.'
000000000000929b         db  0x00 ; '.'
000000000000929c         db  0x00 ; '.'
000000000000929d         db  0x00 ; '.'
000000000000929e         db  0x00 ; '.'
000000000000929f         db  0x00 ; '.'
                     quoting_style_vals:
00000000000092a0         db  0x00 ; '.'
00000000000092a1         db  0x00 ; '.'
00000000000092a2         db  0x00 ; '.'
00000000000092a3         db  0x00 ; '.'
00000000000092a4         db  0x01 ; '.'
00000000000092a5         db  0x00 ; '.'
00000000000092a6         db  0x00 ; '.'
00000000000092a7         db  0x00 ; '.'
00000000000092a8         db  0x02 ; '.'
00000000000092a9         db  0x00 ; '.'
00000000000092aa         db  0x00 ; '.'
00000000000092ab         db  0x00 ; '.'
00000000000092ac         db  0x03 ; '.'
00000000000092ad         db  0x00 ; '.'
00000000000092ae         db  0x00 ; '.'
00000000000092af         db  0x00 ; '.'
00000000000092b0         db  0x04 ; '.'
00000000000092b1         db  0x00 ; '.'
00000000000092b2         db  0x00 ; '.'
00000000000092b3         db  0x00 ; '.'
00000000000092b4         db  0x05 ; '.'
00000000000092b5         db  0x00 ; '.'
00000000000092b6         db  0x00 ; '.'
00000000000092b7         db  0x00 ; '.'
00000000000092b8         db  0x06 ; '.'
00000000000092b9         db  0x00 ; '.'
00000000000092ba         db  0x00 ; '.'
00000000000092bb         db  0x00 ; '.'
00000000000092bc         db  0x07 ; '.'
00000000000092bd         db  0x00 ; '.'
00000000000092be         db  0x00 ; '.'
00000000000092bf         db  0x00 ; '.'
00000000000092c0         db  0x08 ; '.'
00000000000092c1         db  0x00 ; '.'
00000000000092c2         db  0x00 ; '.'
00000000000092c3         db  0x00 ; '.'
00000000000092c4         db  0x09 ; '.'
00000000000092c5         db  0x00 ; '.'
00000000000092c6         db  0x00 ; '.'
00000000000092c7         db  0x00 ; '.'
                     aWdvalchild0:
00000000000092c8         db         "wd->val.child == 0", 0                     ; DATA XREF=savewd_chdir+459
                     aErrnolocation4:
00000000000092db         db         "(*__errno_location ()) == 4", 0            ; DATA XREF=savewd_restore+279
                     aWdvalchild0_92f7:        // aWdvalchild0
00000000000092f7         db         "wd->val.child < 0", 0                      ; DATA XREF=savewd_finish+69
0000000000009309         align      16
                     aCoreutils831li:
0000000000009310         db         "../coreutils-8.31/lib/savewd.c", 0         ; DATA XREF=savewd_chdir+452, savewd_chdir+626, savewd_chdir+657, savewd_restore+272, savewd_restore+308, savewd_finish+62, savewd_finish+93
000000000000932f         align      16
                     switch_table_9330:        // switch_table
0000000000009330         dd         savewd_chdir.loc_4f6b-switch_table_9330, savewd_chdir.loc_4ea0-switch_table_9330, savewd_chdir.loc_4d4f-switch_table_9330, savewd_chdir.loc_4eb0-switch_table_9330 ; switch table used at 0x4e13 containing 6 entries, DATA XREF=savewd_chdir+261
0000000000009340         dd         2 dup (savewd_chdir.loc_4d4f-switch_table_9330)
                     switch_table_9348:        // switch_table
0000000000009348         dd         2 dup (savewd_restore.loc_5003-switch_table_9348), savewd_restore.loc_5080-switch_table_9348, savewd_restore.loc_4ff0-switch_table_9348, savewd_restore.loc_5028-switch_table_9348 ; switch table used at 0x4fe4 containing 5 entries, DATA XREF=savewd_restore+35
                     switch_table_935c:        // switch_table
000000000000935c         dd         savewd_finish.loc_5138-switch_table_935c, 2 dup (savewd_finish.loc_5130-switch_table_935c), savewd_finish.loc_5140-switch_table_935c, savewd_finish.loc_5138-switch_table_935c ; switch table used at 0x5129 containing 5 entries, DATA XREF=savewd_finish+8
                     __PRETTY_FUNCTION__.4491:
0000000000009370         db         "savewd_finish", 0                          ; DATA XREF=savewd_finish+55, savewd_finish+86
000000000000937e         align      128
                     __PRETTY_FUNCTION__.4477:
0000000000009380         db         "savewd_restore", 0                         ; DATA XREF=savewd_restore+265, savewd_restore+301
000000000000938f         align      16
                     __PRETTY_FUNCTION__.4446:
0000000000009390         db         "savewd_save", 0                            ; DATA XREF=savewd_chdir+650
000000000000939c         align      32
                     __PRETTY_FUNCTION__.4461:
00000000000093a0         db         "savewd_chdir", 0                           ; DATA XREF=savewd_chdir+445, savewd_chdir+619
                     aSSSn:
00000000000093ad         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
00000000000093b9         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
00000000000093c0         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
00000000000093c1         db  0x43 ; 'C'
00000000000093c2         db  0x29 ; ')'
00000000000093c3         db  0x00 ; '.'
                     aWrittenBySn:
00000000000093c4         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
00000000000093d4         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
00000000000093eb         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
0000000000009407         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
000000000000941c         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
0000000000009432         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
0000000000009446         align      8
                     aNlicenseGplv3G:
0000000000009448         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
0000000000009514         align      8
                     aWrittenBySSSna:
0000000000009518         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_9538:        // aWrittenBySSSns
0000000000009538         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
000000000000955c         align      32
                     aWrittenBySSSns_9560:        // aWrittenBySSSns
0000000000009560         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_9588:        // aWrittenBySSSns
0000000000009588         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
00000000000095b4         align      8
                     aWrittenBySSSns_95b8:        // aWrittenBySSSns
00000000000095b8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
00000000000095e8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
000000000000961c         align      32
                     aWrittenBySSSns_9620:        // aWrittenBySSSns
0000000000009620         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
000000000000965c         align      32
                     aGeneralHelpUsi:
0000000000009660         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
00000000000096a1         align      8
                     switch_table_96a8:        // switch_table
00000000000096a8         dd         version_etc_arn.loc_5446-switch_table_96a8, version_etc_arn.loc_54d8-switch_table_96a8, version_etc_arn.loc_5518-switch_table_96a8, version_etc_arn.loc_5560-switch_table_96a8 ; switch table used at 0x53c4 containing 10 entries, DATA XREF=version_etc_arn+150
00000000000096b8         dd         version_etc_arn.loc_55b0-switch_table_96a8, version_etc_arn.loc_5608-switch_table_96a8, version_etc_arn.loc_5638-switch_table_96a8, version_etc_arn.loc_56a0-switch_table_96a8
00000000000096c8         dd         version_etc_arn.loc_53d0-switch_table_96a8, version_etc_arn.loc_5480-switch_table_96a8
00000000000096d0         align      32
                     version_etc_copyright:
00000000000096e0         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
000000000000970f         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
0000000000009720         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
0000000000009721         db  0x00 ; '.'
                     aPosix:
0000000000009722         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aAscii:
0000000000009728         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
000000000000972e         align      16
                     switch_table_9730:        // switch_table
0000000000009730         dd         vasnprintf.loc_7316-switch_table_9730, vasnprintf.loc_6db0-switch_table_9730, vasnprintf.loc_6d80-switch_table_9730, vasnprintf.loc_6cf8-switch_table_9730 ; switch table used at 0x694b containing 18 entries, DATA XREF=vasnprintf+1357
0000000000009740         dd         vasnprintf.loc_6cb8-switch_table_9730, 2 dup (vasnprintf.loc_6a88-switch_table_9730), 4 dup (vasnprintf.loc_6950-switch_table_9730), vasnprintf.loc_6c38-switch_table_9730
0000000000009760         dd         vasnprintf.loc_6bb0-switch_table_9730, 2 dup (vasnprintf.loc_6a88-switch_table_9730), 3 dup (vasnprintf.loc_6950-switch_table_9730)
                     switch_table_9778:        // switch_table
0000000000009778         dd         vasnprintf.loc_7160-switch_table_9778, vasnprintf.loc_7180-switch_table_9778, vasnprintf.loc_7170-switch_table_9778, 2 dup (vasnprintf.loc_7030-switch_table_9778) ; switch table used at 0x6ef0 containing 5 entries, DATA XREF=vasnprintf+2798
                     aNull:
000000000000978c         db         "(NULL)", 0                                 ; DATA XREF=printf_fetchargs+24
0000000000009793         db  0x00 ; '.'
0000000000009794         db  0x00 ; '.'
0000000000009795         db  0x00 ; '.'
0000000000009796         db  0x00 ; '.'
0000000000009797         db  0x00 ; '.'
0000000000009798         db  0x00 ; '.'
0000000000009799         db  0x00 ; '.'
000000000000979a         db  0x00 ; '.'
000000000000979b         db  0x00 ; '.'
000000000000979c         db  0x00 ; '.'
000000000000979d         db  0x00 ; '.'
000000000000979e         db  0x00 ; '.'
000000000000979f         db  0x00 ; '.'
00000000000097a0         db  0x70 ; 'p'                                         ; DATA XREF=printf_fetchargs+10
00000000000097a1         db  0xe0 ; '.'
00000000000097a2         db  0xff ; '.'
00000000000097a3         db  0xff ; '.'
00000000000097a4         db  0xbc ; '.'
00000000000097a5         db  0xe0 ; '.'
00000000000097a6         db  0xff ; '.'
00000000000097a7         db  0xff ; '.'
00000000000097a8         db  0xbc ; '.'
00000000000097a9         db  0xe0 ; '.'
00000000000097aa         db  0xff ; '.'
00000000000097ab         db  0xff ; '.'
00000000000097ac         db  0xde ; '.'
00000000000097ad         db  0xe0 ; '.'
00000000000097ae         db  0xff ; '.'
00000000000097af         db  0xff ; '.'
00000000000097b0         db  0xde ; '.'
00000000000097b1         db  0xe0 ; '.'
00000000000097b2         db  0xff ; '.'
00000000000097b3         db  0xff ; '.'
00000000000097b4         db  0x9a ; '.'
00000000000097b5         db  0xe0 ; '.'
00000000000097b6         db  0xff ; '.'
00000000000097b7         db  0xff ; '.'
00000000000097b8         db  0x9a ; '.'
00000000000097b9         db  0xe0 ; '.'
00000000000097ba         db  0xff ; '.'
00000000000097bb         db  0xff ; '.'
00000000000097bc         db  0x76 ; 'v'
00000000000097bd         db  0xe0 ; '.'
00000000000097be         db  0xff ; '.'
00000000000097bf         db  0xff ; '.'
00000000000097c0         db  0x76 ; 'v'
00000000000097c1         db  0xe0 ; '.'
00000000000097c2         db  0xff ; '.'
00000000000097c3         db  0xff ; '.'
00000000000097c4         db  0x76 ; 'v'
00000000000097c5         db  0xe0 ; '.'
00000000000097c6         db  0xff ; '.'
00000000000097c7         db  0xff ; '.'
00000000000097c8         db  0x76 ; 'v'
00000000000097c9         db  0xe0 ; '.'
00000000000097ca         db  0xff ; '.'
00000000000097cb         db  0xff ; '.'
00000000000097cc         db  0x32 ; '2'
00000000000097cd         db  0xe1 ; '.'
00000000000097ce         db  0xff ; '.'
00000000000097cf         db  0xff ; '.'
00000000000097d0         db  0x40 ; '@'
00000000000097d1         db  0xe0 ; '.'
00000000000097d2         db  0xff ; '.'
00000000000097d3         db  0xff ; '.'
00000000000097d4         db  0x9a ; '.'
00000000000097d5         db  0xe0 ; '.'
00000000000097d6         db  0xff ; '.'
00000000000097d7         db  0xff ; '.'
00000000000097d8         db  0x9a ; '.'
00000000000097d9         db  0xe0 ; '.'
00000000000097da         db  0xff ; '.'
00000000000097db         db  0xff ; '.'
00000000000097dc         db  0x04 ; '.'
00000000000097dd         db  0xe1 ; '.'
00000000000097de         db  0xff ; '.'
00000000000097df         db  0xff ; '.'
00000000000097e0         db  0x60 ; '`'
00000000000097e1         db  0xe1 ; '.'
00000000000097e2         db  0xff ; '.'
00000000000097e3         db  0xff ; '.'
00000000000097e4         db  0x76 ; 'v'
00000000000097e5         db  0xe0 ; '.'
00000000000097e6         db  0xff ; '.'
00000000000097e7         db  0xff ; '.'
00000000000097e8         db  0x76 ; 'v'
00000000000097e9         db  0xe0 ; '.'
00000000000097ea         db  0xff ; '.'
00000000000097eb         db  0xff ; '.'
00000000000097ec         db  0x76 ; 'v'
00000000000097ed         db  0xe0 ; '.'
00000000000097ee         db  0xff ; '.'
00000000000097ef         db  0xff ; '.'
00000000000097f0         db  0x76 ; 'v'
00000000000097f1         db  0xe0 ; '.'
00000000000097f2         db  0xff ; '.'
00000000000097f3         db  0xff ; '.'
00000000000097f4         db  0x76 ; 'v'
00000000000097f5         db  0xe0 ; '.'
00000000000097f6         db  0xff ; '.'
00000000000097f7         db  0xff ; '.'
00000000000097f8         db  0x76 ; 'v'
00000000000097f9         db  0xe0 ; '.'
00000000000097fa         db  0xff ; '.'
00000000000097fb         db  0xff ; '.'
00000000000097fc         db  0x00 ; '.'
00000000000097fd         db  0x00 ; '.'
00000000000097fe         db  0x00 ; '.'
00000000000097ff         db  0x00 ; '.'
                     wide_null_string.2696:
0000000000009800         db  0x28 ; '('                                         ; DATA XREF=printf_fetchargs+17
0000000000009801         db  0x00 ; '.'
0000000000009802         db  0x00 ; '.'
0000000000009803         db  0x00 ; '.'
0000000000009804         db  0x4e ; 'N'
0000000000009805         db  0x00 ; '.'
0000000000009806         db  0x00 ; '.'
0000000000009807         db  0x00 ; '.'
0000000000009808         db  0x55 ; 'U'
0000000000009809         db  0x00 ; '.'
000000000000980a         db  0x00 ; '.'
000000000000980b         db  0x00 ; '.'
000000000000980c         db  0x4c ; 'L'
000000000000980d         db  0x00 ; '.'
000000000000980e         db  0x00 ; '.'
000000000000980f         db  0x00 ; '.'
0000000000009810         db  0x4c ; 'L'
0000000000009811         db  0x00 ; '.'
0000000000009812         db  0x00 ; '.'
0000000000009813         db  0x00 ; '.'
0000000000009814         db  0x29 ; ')'
0000000000009815         db  0x00 ; '.'
0000000000009816         db  0x00 ; '.'
0000000000009817         db  0x00 ; '.'
0000000000009818         db  0x00 ; '.'
0000000000009819         db  0x00 ; '.'
000000000000981a         db  0x00 ; '.'
000000000000981b         db  0x00 ; '.'
                     switch_table_981c:        // switch_table
000000000000981c         dd         printf_parse.loc_7c5b-switch_table_981c, 27 dup (printf_parse.loc_81eb-switch_table_981c), printf_parse.loc_815b-switch_table_981c, printf_parse.loc_81eb-switch_table_981c ; switch table used at 0x7be5 containing 84 entries, DATA XREF=printf_parse+564
0000000000009894         dd         printf_parse.loc_817c-switch_table_981c, printf_parse.loc_81eb-switch_table_981c, 3 dup (printf_parse.loc_815b-switch_table_981c), 11 dup (printf_parse.loc_81eb-switch_table_981c)
00000000000098d4         dd         printf_parse.loc_7be7-switch_table_981c, 4 dup (printf_parse.loc_81eb-switch_table_981c), printf_parse.loc_818c-switch_table_981c, 8 dup (printf_parse.loc_81eb-switch_table_981c)
000000000000990c         dd         printf_parse.loc_815b-switch_table_981c, printf_parse.loc_81eb-switch_table_981c, printf_parse.loc_80e8-switch_table_981c, printf_parse.loc_80fb-switch_table_981c
000000000000991c         dd         3 dup (printf_parse.loc_815b-switch_table_981c), printf_parse.loc_81eb-switch_table_981c, printf_parse.loc_80fb-switch_table_981c, 4 dup (printf_parse.loc_81eb-switch_table_981c)
0000000000009940         dd         printf_parse.loc_809c-switch_table_981c, printf_parse.loc_818c-switch_table_981c, printf_parse.loc_81e0-switch_table_981c, 2 dup (printf_parse.loc_81eb-switch_table_981c)
0000000000009954         dd         printf_parse.loc_8148-switch_table_981c, printf_parse.loc_81eb-switch_table_981c, printf_parse.loc_818c-switch_table_981c, 2 dup (printf_parse.loc_81eb-switch_table_981c)
0000000000009968         dd         printf_parse.loc_818c-switch_table_981c


        ; Section .eh_frame_hdr
        ; Range: [0x996c; 0x9c78[ (780 bytes)
        ; File offset : [39276; 40056[ (780 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

000000000000996c         db  0x01 ; '.'
000000000000996d         db  0x1b ; '.'
000000000000996e         db  0x03 ; '.'
000000000000996f         db  0x3b ; ';'
0000000000009970         db  0x08 ; '.'
0000000000009971         db  0x03 ; '.'
0000000000009972         db  0x00 ; '.'
0000000000009973         db  0x00 ; '.'
0000000000009974         db  0x60 ; '`'
0000000000009975         db  0x00 ; '.'
0000000000009976         db  0x00 ; '.'
0000000000009977         db  0x00 ; '.'
0000000000009978         db  0x94 ; '.'
0000000000009979         db  0x7d ; '}'
000000000000997a         db  0xff ; '.'
000000000000997b         db  0xff ; '.'
000000000000997c         db  0x54 ; 'T'
000000000000997d         db  0x03 ; '.'
000000000000997e         db  0x00 ; '.'
000000000000997f         db  0x00 ; '.'
0000000000009980         db  0x74 ; 't'
0000000000009981         db  0x81 ; '.'
0000000000009982         db  0xff ; '.'
0000000000009983         db  0xff ; '.'
0000000000009984         db  0x7c ; '|'
0000000000009985         db  0x03 ; '.'
0000000000009986         db  0x00 ; '.'
0000000000009987         db  0x00 ; '.'
0000000000009988         db  0x84 ; '.'
0000000000009989         db  0x81 ; '.'
000000000000998a         db  0xff ; '.'
000000000000998b         db  0xff ; '.'
000000000000998c         db  0x6c ; 'l'
000000000000998d         db  0x04 ; '.'
000000000000998e         db  0x00 ; '.'
000000000000998f         db  0x00 ; '.'
0000000000009990         db  0x64 ; 'd'
0000000000009991         db  0x84 ; '.'
0000000000009992         db  0xff ; '.'
0000000000009993         db  0xff ; '.'
0000000000009994         db  0x24 ; '$'
0000000000009995         db  0x03 ; '.'
0000000000009996         db  0x00 ; '.'
0000000000009997         db  0x00 ; '.'
0000000000009998         db  0x74 ; 't'
0000000000009999         db  0x85 ; '.'
000000000000999a         db  0xff ; '.'
000000000000999b         db  0xff ; '.'
000000000000999c         db  0x94 ; '.'
000000000000999d         db  0x03 ; '.'
000000000000999e         db  0x00 ; '.'
000000000000999f         db  0x00 ; '.'
00000000000099a0         db  0x14 ; '.'
00000000000099a1         db  0x86 ; '.'
00000000000099a2         db  0xff ; '.'
00000000000099a3         db  0xff ; '.'
00000000000099a4         db  0xd0 ; '.'
00000000000099a5         db  0x03 ; '.'
00000000000099a6         db  0x00 ; '.'
00000000000099a7         db  0x00 ; '.'
00000000000099a8         db  0x44 ; 'D'
00000000000099a9         db  0x86 ; '.'
00000000000099aa         db  0xff ; '.'
00000000000099ab         db  0xff ; '.'
00000000000099ac         db  0xec ; '.'
00000000000099ad         db  0x03 ; '.'
00000000000099ae         db  0x00 ; '.'
00000000000099af         db  0x00 ; '.'
00000000000099b0         db  0x64 ; 'd'
00000000000099b1         db  0x86 ; '.'
00000000000099b2         db  0xff ; '.'
00000000000099b3         db  0xff ; '.'
00000000000099b4         db  0x00 ; '.'
00000000000099b5         db  0x04 ; '.'
00000000000099b6         db  0x00 ; '.'
00000000000099b7         db  0x00 ; '.'
00000000000099b8         db  0x04 ; '.'
00000000000099b9         db  0x87 ; '.'
00000000000099ba         db  0xff ; '.'
00000000000099bb         db  0xff ; '.'
00000000000099bc         db  0x40 ; '@'
00000000000099bd         db  0x04 ; '.'
00000000000099be         db  0x00 ; '.'
00000000000099bf         db  0x00 ; '.'
00000000000099c0         db  0xc4 ; '.'
00000000000099c1         db  0x8a ; '.'
00000000000099c2         db  0xff ; '.'
00000000000099c3         db  0xff ; '.'
00000000000099c4         db  0xb4 ; '.'
00000000000099c5         db  0x04 ; '.'
00000000000099c6         db  0x00 ; '.'
00000000000099c7         db  0x00 ; '.'
00000000000099c8         db  0xe4 ; '.'
00000000000099c9         db  0x8b ; '.'
00000000000099ca         db  0xff ; '.'
00000000000099cb         db  0xff ; '.'
00000000000099cc         db  0xe4 ; '.'
00000000000099cd         db  0x04 ; '.'
00000000000099ce         db  0x00 ; '.'
00000000000099cf         db  0x00 ; '.'
00000000000099d0         db  0xf4 ; '.'
00000000000099d1         db  0x8b ; '.'
00000000000099d2         db  0xff ; '.'
00000000000099d3         db  0xff ; '.'
00000000000099d4         db  0xf8 ; '.'
00000000000099d5         db  0x04 ; '.'
00000000000099d6         db  0x00 ; '.'
00000000000099d7         db  0x00 ; '.'
00000000000099d8         db  0x04 ; '.'
00000000000099d9         db  0x8c ; '.'
00000000000099da         db  0xff ; '.'
00000000000099db         db  0xff ; '.'
00000000000099dc         db  0x0c ; '.'
00000000000099dd         db  0x05 ; '.'
00000000000099de         db  0x00 ; '.'
00000000000099df         db  0x00 ; '.'
00000000000099e0         db  0xb4 ; '.'
00000000000099e1         db  0x8c ; '.'
00000000000099e2         db  0xff ; '.'
00000000000099e3         db  0xff ; '.'
00000000000099e4         db  0x3c ; '<'
00000000000099e5         db  0x05 ; '.'
00000000000099e6         db  0x00 ; '.'
00000000000099e7         db  0x00 ; '.'
00000000000099e8         db  0x84 ; '.'
00000000000099e9         db  0x90 ; '.'
00000000000099ea         db  0xff ; '.'
00000000000099eb         db  0xff ; '.'
00000000000099ec         db  0x9c ; '.'
00000000000099ed         db  0x05 ; '.'
00000000000099ee         db  0x00 ; '.'
00000000000099ef         db  0x00 ; '.'
00000000000099f0         db  0x34 ; '4'
00000000000099f1         db  0x94 ; '.'
00000000000099f2         db  0xff ; '.'
00000000000099f3         db  0xff ; '.'
00000000000099f4         db  0xe4 ; '.'
00000000000099f5         db  0x05 ; '.'
00000000000099f6         db  0x00 ; '.'
00000000000099f7         db  0x00 ; '.'
00000000000099f8         db  0xc4 ; '.'
00000000000099f9         db  0x94 ; '.'
00000000000099fa         db  0xff ; '.'
00000000000099fb         db  0xff ; '.'
00000000000099fc         db  0x08 ; '.'
00000000000099fd         db  0x06 ; '.'
00000000000099fe         db  0x00 ; '.'
00000000000099ff         db  0x00 ; '.'
0000000000009a00         db  0x34 ; '4'
0000000000009a01         db  0x96 ; '.'
0000000000009a02         db  0xff ; '.'
0000000000009a03         db  0xff ; '.'
0000000000009a04         db  0x3c ; '<'
0000000000009a05         db  0x06 ; '.'
0000000000009a06         db  0x00 ; '.'
0000000000009a07         db  0x00 ; '.'
0000000000009a08         db  0xd4 ; '.'
0000000000009a09         db  0x96 ; '.'
0000000000009a0a         db  0xff ; '.'
0000000000009a0b         db  0xff ; '.'
0000000000009a0c         db  0x5c ; '\'
0000000000009a0d         db  0x06 ; '.'
0000000000009a0e         db  0x00 ; '.'
0000000000009a0f         db  0x00 ; '.'
0000000000009a10         db  0xc4 ; '.'
0000000000009a11         db  0x97 ; '.'
0000000000009a12         db  0xff ; '.'
0000000000009a13         db  0xff ; '.'
0000000000009a14         db  0xa0 ; '.'
0000000000009a15         db  0x06 ; '.'
0000000000009a16         db  0x00 ; '.'
0000000000009a17         db  0x00 ; '.'
0000000000009a18         db  0x04 ; '.'
0000000000009a19         db  0xaa ; '.'
0000000000009a1a         db  0xff ; '.'
0000000000009a1b         db  0xff ; '.'
0000000000009a1c         db  0x18 ; '.'
0000000000009a1d         db  0x07 ; '.'
0000000000009a1e         db  0x00 ; '.'
0000000000009a1f         db  0x00 ; '.'
0000000000009a20         db  0xb4 ; '.'
0000000000009a21         db  0xab ; '.'
0000000000009a22         db  0xff ; '.'
0000000000009a23         db  0xff ; '.'
0000000000009a24         db  0x84 ; '.'
0000000000009a25         db  0x07 ; '.'
0000000000009a26         db  0x00 ; '.'
0000000000009a27         db  0x00 ; '.'
0000000000009a28         db  0xf4 ; '.'
0000000000009a29         db  0xab ; '.'
0000000000009a2a         db  0xff ; '.'
0000000000009a2b         db  0xff ; '.'
0000000000009a2c         db  0xb0 ; '.'
0000000000009a2d         db  0x07 ; '.'
0000000000009a2e         db  0x00 ; '.'
0000000000009a2f         db  0x00 ; '.'
0000000000009a30         db  0x14 ; '.'
0000000000009a31         db  0xac ; '.'
0000000000009a32         db  0xff ; '.'
0000000000009a33         db  0xff ; '.'
0000000000009a34         db  0xc4 ; '.'
0000000000009a35         db  0x07 ; '.'
0000000000009a36         db  0x00 ; '.'
0000000000009a37         db  0x00 ; '.'
0000000000009a38         db  0x34 ; '4'
0000000000009a39         db  0xac ; '.'
0000000000009a3a         db  0xff ; '.'
0000000000009a3b         db  0xff ; '.'
0000000000009a3c         db  0xd8 ; '.'
0000000000009a3d         db  0x07 ; '.'
0000000000009a3e         db  0x00 ; '.'
0000000000009a3f         db  0x00 ; '.'
0000000000009a40         db  0x74 ; 't'
0000000000009a41         db  0xac ; '.'
0000000000009a42         db  0xff ; '.'
0000000000009a43         db  0xff ; '.'
0000000000009a44         db  0xec ; '.'
0000000000009a45         db  0x07 ; '.'
0000000000009a46         db  0x00 ; '.'
0000000000009a47         db  0x00 ; '.'
0000000000009a48         db  0x94 ; '.'
0000000000009a49         db  0xac ; '.'
0000000000009a4a         db  0xff ; '.'
0000000000009a4b         db  0xff ; '.'
0000000000009a4c         db  0x00 ; '.'
0000000000009a4d         db  0x08 ; '.'
0000000000009a4e         db  0x00 ; '.'
0000000000009a4f         db  0x00 ; '.'
0000000000009a50         db  0xc4 ; '.'
0000000000009a51         db  0xac ; '.'
0000000000009a52         db  0xff ; '.'
0000000000009a53         db  0xff ; '.'
0000000000009a54         db  0x14 ; '.'
0000000000009a55         db  0x08 ; '.'
0000000000009a56         db  0x00 ; '.'
0000000000009a57         db  0x00 ; '.'
0000000000009a58         db  0x44 ; 'D'
0000000000009a59         db  0xad ; '.'
0000000000009a5a         db  0xff ; '.'
0000000000009a5b         db  0xff ; '.'
0000000000009a5c         db  0x68 ; 'h'
0000000000009a5d         db  0x08 ; '.'
0000000000009a5e         db  0x00 ; '.'
0000000000009a5f         db  0x00 ; '.'
0000000000009a60         db  0x34 ; '4'
0000000000009a61         db  0xae ; '.'
0000000000009a62         db  0xff ; '.'
0000000000009a63         db  0xff ; '.'
0000000000009a64         db  0xd4 ; '.'
0000000000009a65         db  0x08 ; '.'
0000000000009a66         db  0x00 ; '.'
0000000000009a67         db  0x00 ; '.'
0000000000009a68         db  0x44 ; 'D'
0000000000009a69         db  0xae ; '.'
0000000000009a6a         db  0xff ; '.'
0000000000009a6b         db  0xff ; '.'
0000000000009a6c         db  0xe8 ; '.'
0000000000009a6d         db  0x08 ; '.'
0000000000009a6e         db  0x00 ; '.'
0000000000009a6f         db  0x00 ; '.'
0000000000009a70         db  0xe4 ; '.'
0000000000009a71         db  0xae ; '.'
0000000000009a72         db  0xff ; '.'
0000000000009a73         db  0xff ; '.'
0000000000009a74         db  0x14 ; '.'
0000000000009a75         db  0x09 ; '.'
0000000000009a76         db  0x00 ; '.'
0000000000009a77         db  0x00 ; '.'
0000000000009a78         db  0x04 ; '.'
0000000000009a79         db  0xaf ; '.'
0000000000009a7a         db  0xff ; '.'
0000000000009a7b         db  0xff ; '.'
0000000000009a7c         db  0x28 ; '('
0000000000009a7d         db  0x09 ; '.'
0000000000009a7e         db  0x00 ; '.'
0000000000009a7f         db  0x00 ; '.'
0000000000009a80         db  0x14 ; '.'
0000000000009a81         db  0xaf ; '.'
0000000000009a82         db  0xff ; '.'
0000000000009a83         db  0xff ; '.'
0000000000009a84         db  0x3c ; '<'
0000000000009a85         db  0x09 ; '.'
0000000000009a86         db  0x00 ; '.'
0000000000009a87         db  0x00 ; '.'
0000000000009a88         db  0x34 ; '4'
0000000000009a89         db  0xaf ; '.'
0000000000009a8a         db  0xff ; '.'
0000000000009a8b         db  0xff ; '.'
0000000000009a8c         db  0x50 ; 'P'
0000000000009a8d         db  0x09 ; '.'
0000000000009a8e         db  0x00 ; '.'
0000000000009a8f         db  0x00 ; '.'
0000000000009a90         db  0x54 ; 'T'
0000000000009a91         db  0xaf ; '.'
0000000000009a92         db  0xff ; '.'
0000000000009a93         db  0xff ; '.'
0000000000009a94         db  0x64 ; 'd'
0000000000009a95         db  0x09 ; '.'
0000000000009a96         db  0x00 ; '.'
0000000000009a97         db  0x00 ; '.'
0000000000009a98         db  0xe4 ; '.'
0000000000009a99         db  0xaf ; '.'
0000000000009a9a         db  0xff ; '.'
0000000000009a9b         db  0xff ; '.'
0000000000009a9c         db  0x80 ; '.'
0000000000009a9d         db  0x09 ; '.'
0000000000009a9e         db  0x00 ; '.'
0000000000009a9f         db  0x00 ; '.'
0000000000009aa0         db  0x74 ; 't'
0000000000009aa1         db  0xb0 ; '.'
0000000000009aa2         db  0xff ; '.'
0000000000009aa3         db  0xff ; '.'
0000000000009aa4         db  0x9c ; '.'
0000000000009aa5         db  0x09 ; '.'
0000000000009aa6         db  0x00 ; '.'
0000000000009aa7         db  0x00 ; '.'
0000000000009aa8         db  0x84 ; '.'
0000000000009aa9         db  0xb0 ; '.'
0000000000009aaa         db  0xff ; '.'
0000000000009aab         db  0xff ; '.'
0000000000009aac         db  0xb0 ; '.'
0000000000009aad         db  0x09 ; '.'
0000000000009aae         db  0x00 ; '.'
0000000000009aaf         db  0x00 ; '.'
0000000000009ab0         db  0x94 ; '.'
0000000000009ab1         db  0xb0 ; '.'
0000000000009ab2         db  0xff ; '.'
0000000000009ab3         db  0xff ; '.'
0000000000009ab4         db  0xc4 ; '.'
0000000000009ab5         db  0x09 ; '.'
0000000000009ab6         db  0x00 ; '.'
0000000000009ab7         db  0x00 ; '.'
0000000000009ab8         db  0x34 ; '4'
0000000000009ab9         db  0xb1 ; '.'
0000000000009aba         db  0xff ; '.'
0000000000009abb         db  0xff ; '.'
0000000000009abc         db  0xe0 ; '.'
0000000000009abd         db  0x09 ; '.'
0000000000009abe         db  0x00 ; '.'
0000000000009abf         db  0x00 ; '.'
0000000000009ac0         db  0x44 ; 'D'
0000000000009ac1         db  0xb1 ; '.'
0000000000009ac2         db  0xff ; '.'
0000000000009ac3         db  0xff ; '.'
0000000000009ac4         db  0xf4 ; '.'
0000000000009ac5         db  0x09 ; '.'
0000000000009ac6         db  0x00 ; '.'
0000000000009ac7         db  0x00 ; '.'
0000000000009ac8         db  0x64 ; 'd'
0000000000009ac9         db  0xb1 ; '.'
0000000000009aca         db  0xff ; '.'
0000000000009acb         db  0xff ; '.'
0000000000009acc         db  0x08 ; '.'
0000000000009acd         db  0x0a ; '.'
0000000000009ace         db  0x00 ; '.'
0000000000009acf         db  0x00 ; '.'
0000000000009ad0         db  0x74 ; 't'
0000000000009ad1         db  0xb1 ; '.'
0000000000009ad2         db  0xff ; '.'
0000000000009ad3         db  0xff ; '.'
0000000000009ad4         db  0x1c ; '.'
0000000000009ad5         db  0x0a ; '.'
0000000000009ad6         db  0x00 ; '.'
0000000000009ad7         db  0x00 ; '.'
0000000000009ad8         db  0x04 ; '.'
0000000000009ad9         db  0xb2 ; '.'
0000000000009ada         db  0xff ; '.'
0000000000009adb         db  0xff ; '.'
0000000000009adc         db  0x38 ; '8'
0000000000009add         db  0x0a ; '.'
0000000000009ade         db  0x00 ; '.'
0000000000009adf         db  0x00 ; '.'
0000000000009ae0         db  0xa4 ; '.'
0000000000009ae1         db  0xb2 ; '.'
0000000000009ae2         db  0xff ; '.'
0000000000009ae3         db  0xff ; '.'
0000000000009ae4         db  0x54 ; 'T'
0000000000009ae5         db  0x0a ; '.'
0000000000009ae6         db  0x00 ; '.'
0000000000009ae7         db  0x00 ; '.'
0000000000009ae8         db  0xb4 ; '.'
0000000000009ae9         db  0xb2 ; '.'
0000000000009aea         db  0xff ; '.'
0000000000009aeb         db  0xff ; '.'
0000000000009aec         db  0x68 ; 'h'
0000000000009aed         db  0x0a ; '.'
0000000000009aee         db  0x00 ; '.'
0000000000009aef         db  0x00 ; '.'
0000000000009af0         db  0xd4 ; '.'
0000000000009af1         db  0xb2 ; '.'
0000000000009af2         db  0xff ; '.'
0000000000009af3         db  0xff ; '.'
0000000000009af4         db  0x7c ; '|'
0000000000009af5         db  0x0a ; '.'
0000000000009af6         db  0x00 ; '.'
0000000000009af7         db  0x00 ; '.'
0000000000009af8         db  0xf4 ; '.'
0000000000009af9         db  0xb2 ; '.'
0000000000009afa         db  0xff ; '.'
0000000000009afb         db  0xff ; '.'
0000000000009afc         db  0x90 ; '.'
0000000000009afd         db  0x0a ; '.'
0000000000009afe         db  0x00 ; '.'
0000000000009aff         db  0x00 ; '.'
0000000000009b00         db  0x04 ; '.'
0000000000009b01         db  0xb3 ; '.'
0000000000009b02         db  0xff ; '.'
0000000000009b03         db  0xff ; '.'
0000000000009b04         db  0xa4 ; '.'
0000000000009b05         db  0x0a ; '.'
0000000000009b06         db  0x00 ; '.'
0000000000009b07         db  0x00 ; '.'
0000000000009b08         db  0x24 ; '$'
0000000000009b09         db  0xb3 ; '.'
0000000000009b0a         db  0xff ; '.'
0000000000009b0b         db  0xff ; '.'
0000000000009b0c         db  0xb8 ; '.'
0000000000009b0d         db  0x0a ; '.'
0000000000009b0e         db  0x00 ; '.'
0000000000009b0f         db  0x00 ; '.'
0000000000009b10         db  0x44 ; 'D'
0000000000009b11         db  0xb3 ; '.'
0000000000009b12         db  0xff ; '.'
0000000000009b13         db  0xff ; '.'
0000000000009b14         db  0xcc ; '.'
0000000000009b15         db  0x0a ; '.'
0000000000009b16         db  0x00 ; '.'
0000000000009b17         db  0x00 ; '.'
0000000000009b18         db  0x64 ; 'd'
0000000000009b19         db  0xb3 ; '.'
0000000000009b1a         db  0xff ; '.'
0000000000009b1b         db  0xff ; '.'
0000000000009b1c         db  0xe4 ; '.'
0000000000009b1d         db  0x0a ; '.'
0000000000009b1e         db  0x00 ; '.'
0000000000009b1f         db  0x00 ; '.'
0000000000009b20         db  0x74 ; 't'
0000000000009b21         db  0xb3 ; '.'
0000000000009b22         db  0xff ; '.'
0000000000009b23         db  0xff ; '.'
0000000000009b24         db  0xf8 ; '.'
0000000000009b25         db  0x0a ; '.'
0000000000009b26         db  0x00 ; '.'
0000000000009b27         db  0x00 ; '.'
0000000000009b28         db  0x94 ; '.'
0000000000009b29         db  0xb3 ; '.'
0000000000009b2a         db  0xff ; '.'
0000000000009b2b         db  0xff ; '.'
0000000000009b2c         db  0x0c ; '.'
0000000000009b2d         db  0x0b ; '.'
0000000000009b2e         db  0x00 ; '.'
0000000000009b2f         db  0x00 ; '.'
0000000000009b30         db  0x44 ; 'D'
0000000000009b31         db  0xb6 ; '.'
0000000000009b32         db  0xff ; '.'
0000000000009b33         db  0xff ; '.'
0000000000009b34         db  0x5c ; '\'
0000000000009b35         db  0x0b ; '.'
0000000000009b36         db  0x00 ; '.'
0000000000009b37         db  0x00 ; '.'
0000000000009b38         db  0xa4 ; '.'
0000000000009b39         db  0xb7 ; '.'
0000000000009b3a         db  0xff ; '.'
0000000000009b3b         db  0xff ; '.'
0000000000009b3c         db  0x90 ; '.'
0000000000009b3d         db  0x0b ; '.'
0000000000009b3e         db  0x00 ; '.'
0000000000009b3f         db  0x00 ; '.'
0000000000009b40         db  0x24 ; '$'
0000000000009b41         db  0xb8 ; '.'
0000000000009b42         db  0xff ; '.'
0000000000009b43         db  0xff ; '.'
0000000000009b44         db  0xac ; '.'
0000000000009b45         db  0x0b ; '.'
0000000000009b46         db  0x00 ; '.'
0000000000009b47         db  0x00 ; '.'
0000000000009b48         db  0xb4 ; '.'
0000000000009b49         db  0xb9 ; '.'
0000000000009b4a         db  0xff ; '.'
0000000000009b4b         db  0xff ; '.'
0000000000009b4c         db  0xfc ; '.'
0000000000009b4d         db  0x0b ; '.'
0000000000009b4e         db  0x00 ; '.'
0000000000009b4f         db  0x00 ; '.'
0000000000009b50         db  0xd4 ; '.'
0000000000009b51         db  0xbd ; '.'
0000000000009b52         db  0xff ; '.'
0000000000009b53         db  0xff ; '.'
0000000000009b54         db  0x10 ; '.'
0000000000009b55         db  0x0d ; '.'
0000000000009b56         db  0x00 ; '.'
0000000000009b57         db  0x00 ; '.'
0000000000009b58         db  0xf4 ; '.'
0000000000009b59         db  0xbd ; '.'
0000000000009b5a         db  0xff ; '.'
0000000000009b5b         db  0xff ; '.'
0000000000009b5c         db  0x24 ; '$'
0000000000009b5d         db  0x0d ; '.'
0000000000009b5e         db  0x00 ; '.'
0000000000009b5f         db  0x00 ; '.'
0000000000009b60         db  0x74 ; 't'
0000000000009b61         db  0xbe ; '.'
0000000000009b62         db  0xff ; '.'
0000000000009b63         db  0xff ; '.'
0000000000009b64         db  0x40 ; '@'
0000000000009b65         db  0x0d ; '.'
0000000000009b66         db  0x00 ; '.'
0000000000009b67         db  0x00 ; '.'
0000000000009b68         db  0x54 ; 'T'
0000000000009b69         db  0xbf ; '.'
0000000000009b6a         db  0xff ; '.'
0000000000009b6b         db  0xff ; '.'
0000000000009b6c         db  0x6c ; 'l'
0000000000009b6d         db  0x0d ; '.'
0000000000009b6e         db  0x00 ; '.'
0000000000009b6f         db  0x00 ; '.'
0000000000009b70         db  0xd4 ; '.'
0000000000009b71         db  0xbf ; '.'
0000000000009b72         db  0xff ; '.'
0000000000009b73         db  0xff ; '.'
0000000000009b74         db  0x8c ; '.'
0000000000009b75         db  0x0d ; '.'
0000000000009b76         db  0x00 ; '.'
0000000000009b77         db  0x00 ; '.'
0000000000009b78         db  0xf4 ; '.'
0000000000009b79         db  0xbf ; '.'
0000000000009b7a         db  0xff ; '.'
0000000000009b7b         db  0xff ; '.'
0000000000009b7c         db  0xa8 ; '.'
0000000000009b7d         db  0x0d ; '.'
0000000000009b7e         db  0x00 ; '.'
0000000000009b7f         db  0x00 ; '.'
0000000000009b80         db  0x24 ; '$'
0000000000009b81         db  0xc0 ; '.'
0000000000009b82         db  0xff ; '.'
0000000000009b83         db  0xff ; '.'
0000000000009b84         db  0xbc ; '.'
0000000000009b85         db  0x0d ; '.'
0000000000009b86         db  0x00 ; '.'
0000000000009b87         db  0x00 ; '.'
0000000000009b88         db  0x34 ; '4'
0000000000009b89         db  0xc0 ; '.'
0000000000009b8a         db  0xff ; '.'
0000000000009b8b         db  0xff ; '.'
0000000000009b8c         db  0xd0 ; '.'
0000000000009b8d         db  0x0d ; '.'
0000000000009b8e         db  0x00 ; '.'
0000000000009b8f         db  0x00 ; '.'
0000000000009b90         db  0x74 ; 't'
0000000000009b91         db  0xc0 ; '.'
0000000000009b92         db  0xff ; '.'
0000000000009b93         db  0xff ; '.'
0000000000009b94         db  0xf4 ; '.'
0000000000009b95         db  0x0d ; '.'
0000000000009b96         db  0x00 ; '.'
0000000000009b97         db  0x00 ; '.'
0000000000009b98         db  0xa4 ; '.'
0000000000009b99         db  0xc0 ; '.'
0000000000009b9a         db  0xff ; '.'
0000000000009b9b         db  0xff ; '.'
0000000000009b9c         db  0x08 ; '.'
0000000000009b9d         db  0x0e ; '.'
0000000000009b9e         db  0x00 ; '.'
0000000000009b9f         db  0x00 ; '.'
0000000000009ba0         db  0x34 ; '4'
0000000000009ba1         db  0xc1 ; '.'
0000000000009ba2         db  0xff ; '.'
0000000000009ba3         db  0xff ; '.'
0000000000009ba4         db  0x20 ; ' '
0000000000009ba5         db  0x0e ; '.'
0000000000009ba6         db  0x00 ; '.'
0000000000009ba7         db  0x00 ; '.'
0000000000009ba8         db  0x84 ; '.'
0000000000009ba9         db  0xc1 ; '.'
0000000000009baa         db  0xff ; '.'
0000000000009bab         db  0xff ; '.'
0000000000009bac         db  0x38 ; '8'
0000000000009bad         db  0x0e ; '.'
0000000000009bae         db  0x00 ; '.'
0000000000009baf         db  0x00 ; '.'
0000000000009bb0         db  0xa4 ; '.'
0000000000009bb1         db  0xc1 ; '.'
0000000000009bb2         db  0xff ; '.'
0000000000009bb3         db  0xff ; '.'
0000000000009bb4         db  0x54 ; 'T'
0000000000009bb5         db  0x0e ; '.'
0000000000009bb6         db  0x00 ; '.'
0000000000009bb7         db  0x00 ; '.'
0000000000009bb8         db  0xd4 ; '.'
0000000000009bb9         db  0xc1 ; '.'
0000000000009bba         db  0xff ; '.'
0000000000009bbb         db  0xff ; '.'
0000000000009bbc         db  0x70 ; 'p'
0000000000009bbd         db  0x0e ; '.'
0000000000009bbe         db  0x00 ; '.'
0000000000009bbf         db  0x00 ; '.'
0000000000009bc0         db  0x04 ; '.'
0000000000009bc1         db  0xc2 ; '.'
0000000000009bc2         db  0xff ; '.'
0000000000009bc3         db  0xff ; '.'
0000000000009bc4         db  0x98 ; '.'
0000000000009bc5         db  0x0e ; '.'
0000000000009bc6         db  0x00 ; '.'
0000000000009bc7         db  0x00 ; '.'
0000000000009bc8         db  0x24 ; '$'
0000000000009bc9         db  0xc2 ; '.'
0000000000009bca         db  0xff ; '.'
0000000000009bcb         db  0xff ; '.'
0000000000009bcc         db  0xb4 ; '.'
0000000000009bcd         db  0x0e ; '.'
0000000000009bce         db  0x00 ; '.'
0000000000009bcf         db  0x00 ; '.'
0000000000009bd0         db  0x64 ; 'd'
0000000000009bd1         db  0xc2 ; '.'
0000000000009bd2         db  0xff ; '.'
0000000000009bd3         db  0xff ; '.'
0000000000009bd4         db  0xcc ; '.'
0000000000009bd5         db  0x0e ; '.'
0000000000009bd6         db  0x00 ; '.'
0000000000009bd7         db  0x00 ; '.'
0000000000009bd8         db  0xf4 ; '.'
0000000000009bd9         db  0xc2 ; '.'
0000000000009bda         db  0xff ; '.'
0000000000009bdb         db  0xff ; '.'
0000000000009bdc         db  0x0c ; '.'
0000000000009bdd         db  0x0f ; '.'
0000000000009bde         db  0x00 ; '.'
0000000000009bdf         db  0x00 ; '.'
0000000000009be0         db  0xf4 ; '.'
0000000000009be1         db  0xc3 ; '.'
0000000000009be2         db  0xff ; '.'
0000000000009be3         db  0xff ; '.'
0000000000009be4         db  0x4c ; 'L'
0000000000009be5         db  0x0f ; '.'
0000000000009be6         db  0x00 ; '.'
0000000000009be7         db  0x00 ; '.'
0000000000009be8         db  0x74 ; 't'
0000000000009be9         db  0xc4 ; '.'
0000000000009bea         db  0xff ; '.'
0000000000009beb         db  0xff ; '.'
0000000000009bec         db  0x9c ; '.'
0000000000009bed         db  0x0f ; '.'
0000000000009bee         db  0x00 ; '.'
0000000000009bef         db  0x00 ; '.'
0000000000009bf0         db  0xe4 ; '.'
0000000000009bf1         db  0xc4 ; '.'
0000000000009bf2         db  0xff ; '.'
0000000000009bf3         db  0xff ; '.'
0000000000009bf4         db  0xbc ; '.'
0000000000009bf5         db  0x0f ; '.'
0000000000009bf6         db  0x00 ; '.'
0000000000009bf7         db  0x00 ; '.'
0000000000009bf8         db  0x44 ; 'D'
0000000000009bf9         db  0xc5 ; '.'
0000000000009bfa         db  0xff ; '.'
0000000000009bfb         db  0xff ; '.'
0000000000009bfc         db  0xdc ; '.'
0000000000009bfd         db  0x0f ; '.'
0000000000009bfe         db  0x00 ; '.'
0000000000009bff         db  0x00 ; '.'
0000000000009c00         db  0x84 ; '.'
0000000000009c01         db  0xc5 ; '.'
0000000000009c02         db  0xff ; '.'
0000000000009c03         db  0xff ; '.'
0000000000009c04         db  0xfc ; '.'
0000000000009c05         db  0x0f ; '.'
0000000000009c06         db  0x00 ; '.'
0000000000009c07         db  0x00 ; '.'
0000000000009c08         db  0xf4 ; '.'
0000000000009c09         db  0xc6 ; '.'
0000000000009c0a         db  0xff ; '.'
0000000000009c0b         db  0xff ; '.'
0000000000009c0c         db  0x4c ; 'L'
0000000000009c0d         db  0x10 ; '.'
0000000000009c0e         db  0x00 ; '.'
0000000000009c0f         db  0x00 ; '.'
0000000000009c10         db  0x14 ; '.'
0000000000009c11         db  0xc9 ; '.'
0000000000009c12         db  0xff ; '.'
0000000000009c13         db  0xff ; '.'
0000000000009c14         db  0x9c ; '.'
0000000000009c15         db  0x10 ; '.'
0000000000009c16         db  0x00 ; '.'
0000000000009c17         db  0x00 ; '.'
0000000000009c18         db  0x54 ; 'T'
0000000000009c19         db  0xc9 ; '.'
0000000000009c1a         db  0xff ; '.'
0000000000009c1b         db  0xff ; '.'
0000000000009c1c         db  0xd4 ; '.'
0000000000009c1d         db  0x10 ; '.'
0000000000009c1e         db  0x00 ; '.'
0000000000009c1f         db  0x00 ; '.'
0000000000009c20         db  0xd4 ; '.'
0000000000009c21         db  0xc9 ; '.'
0000000000009c22         db  0xff ; '.'
0000000000009c23         db  0xff ; '.'
0000000000009c24         db  0x0c ; '.'
0000000000009c25         db  0x11 ; '.'
0000000000009c26         db  0x00 ; '.'
0000000000009c27         db  0x00 ; '.'
0000000000009c28         db  0x14 ; '.'
0000000000009c29         db  0xca ; '.'
0000000000009c2a         db  0xff ; '.'
0000000000009c2b         db  0xff ; '.'
0000000000009c2c         db  0x2c ; ','
0000000000009c2d         db  0x11 ; '.'
0000000000009c2e         db  0x00 ; '.'
0000000000009c2f         db  0x00 ; '.'
0000000000009c30         db  0x74 ; 't'
0000000000009c31         db  0xca ; '.'
0000000000009c32         db  0xff ; '.'
0000000000009c33         db  0xff ; '.'
0000000000009c34         db  0x5c ; '\'
0000000000009c35         db  0x11 ; '.'
0000000000009c36         db  0x00 ; '.'
0000000000009c37         db  0x00 ; '.'
0000000000009c38         db  0x84 ; '.'
0000000000009c39         db  0xca ; '.'
0000000000009c3a         db  0xff ; '.'
0000000000009c3b         db  0xff ; '.'
0000000000009c3c         db  0x74 ; 't'
0000000000009c3d         db  0x11 ; '.'
0000000000009c3e         db  0x00 ; '.'
0000000000009c3f         db  0x00 ; '.'
0000000000009c40         db  0xa4 ; '.'
0000000000009c41         db  0xdb ; '.'
0000000000009c42         db  0xff ; '.'
0000000000009c43         db  0xff ; '.'
0000000000009c44         db  0xa4 ; '.'
0000000000009c45         db  0x11 ; '.'
0000000000009c46         db  0x00 ; '.'
0000000000009c47         db  0x00 ; '.'
0000000000009c48         db  0xb4 ; '.'
0000000000009c49         db  0xdb ; '.'
0000000000009c4a         db  0xff ; '.'
0000000000009c4b         db  0xff ; '.'
0000000000009c4c         db  0xbc ; '.'
0000000000009c4d         db  0x11 ; '.'
0000000000009c4e         db  0x00 ; '.'
0000000000009c4f         db  0x00 ; '.'
0000000000009c50         db  0x34 ; '4'
0000000000009c51         db  0xde ; '.'
0000000000009c52         db  0xff ; '.'
0000000000009c53         db  0xff ; '.'
0000000000009c54         db  0xf4 ; '.'
0000000000009c55         db  0x11 ; '.'
0000000000009c56         db  0x00 ; '.'
0000000000009c57         db  0x00 ; '.'
0000000000009c58         db  0x34 ; '4'
0000000000009c59         db  0xe0 ; '.'
0000000000009c5a         db  0xff ; '.'
0000000000009c5b         db  0xff ; '.'
0000000000009c5c         db  0x0c ; '.'
0000000000009c5d         db  0x12 ; '.'
0000000000009c5e         db  0x00 ; '.'
0000000000009c5f         db  0x00 ; '.'
0000000000009c60         db  0x24 ; '$'
0000000000009c61         db  0xed ; '.'
0000000000009c62         db  0xff ; '.'
0000000000009c63         db  0xff ; '.'
0000000000009c64         db  0x5c ; '\'
0000000000009c65         db  0x12 ; '.'
0000000000009c66         db  0x00 ; '.'
0000000000009c67         db  0x00 ; '.'
0000000000009c68         db  0x94 ; '.'
0000000000009c69         db  0xed ; '.'
0000000000009c6a         db  0xff ; '.'
0000000000009c6b         db  0xff ; '.'
0000000000009c6c         db  0xa4 ; '.'
0000000000009c6d         db  0x12 ; '.'
0000000000009c6e         db  0x00 ; '.'
0000000000009c6f         db  0x00 ; '.'
0000000000009c70         db  0xa4 ; '.'
0000000000009c71         db  0xed ; '.'
0000000000009c72         db  0xff ; '.'
0000000000009c73         db  0xff ; '.'
0000000000009c74         db  0xbc ; '.'
0000000000009c75         db  0x12 ; '.'
0000000000009c76         db  0x00 ; '.'
0000000000009c77         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x9c78; 0xac40[ (4040 bytes)
        ; File offset : [40056; 44096[ (4040 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000009c78         dd         0x00000014                                  ; Length of the record
0000000000009c7c         dd         0x00000000                                  ; CIE ID
0000000000009c80         db         0x01                                        ; Version
0000000000009c81         db         "zR", 0                                     ; Augmentation String
0000000000009c84         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000009c85         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000009c86         db         0x10                                        ; Return address register
0000000000009c87         db         0x01                                        ; Augmentation data length
0000000000009c88         db         0x1b                                        ; FDE encoding
0000000000009c89         db  0x0c ; '.'
0000000000009c8a         db  0x07 ; '.'
0000000000009c8b         db  0x08 ; '.'
0000000000009c8c         db  0x90 ; '.'
0000000000009c8d         db  0x01 ; '.'
0000000000009c8e         db  0x07 ; '.'
0000000000009c8f         db  0x10 ; '.'
0000000000009c90         dd         0x00000014                                  ; Length of the record
0000000000009c94         dd         0x0000001c                                  ; FDE: parent CIE at 0x9c78 (FDE encoding = 0x1B)
0000000000009c98         db         0x38, 0x81, 2 dup (0xff)                    ; begin 0x1dd0
0000000000009c9c         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x1dfb)
0000000000009ca0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009ca1         align      8
0000000000009ca8         dd         0x00000014                                  ; Length of the record
0000000000009cac         dd         0x00000000                                  ; CIE ID
0000000000009cb0         db         0x01                                        ; Version
0000000000009cb1         db         "zR", 0                                     ; Augmentation String
0000000000009cb4         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000009cb5         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000009cb6         db         0x10                                        ; Return address register
0000000000009cb7         db         0x01                                        ; Augmentation data length
0000000000009cb8         db         0x1b                                        ; FDE encoding
0000000000009cb9         db  0x0c ; '.'
0000000000009cba         db  0x07 ; '.'
0000000000009cbb         db  0x08 ; '.'
0000000000009cbc         db  0x90 ; '.'
0000000000009cbd         db  0x01 ; '.'
0000000000009cbe         db  0x00 ; '.'
0000000000009cbf         db  0x00 ; '.'
0000000000009cc0         dd         0x00000024                                  ; Length of the record
0000000000009cc4         dd         0x0000001c                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
0000000000009cc8         db         0x38, 0x7a, 2 dup (0xff)                    ; begin 0x1700
0000000000009ccc         db         0xe0, 0x03, 2 dup (0x00)                    ; length 0x3e0 (end at 0x1ae0)
0000000000009cd0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009cd1         db  0x0e ; '.'
0000000000009cd2         db  0x10 ; '.'
0000000000009cd3         db  0x46 ; 'F'
0000000000009cd4         db  0x0e ; '.'
0000000000009cd5         db  0x18 ; '.'
0000000000009cd6         db  0x4a ; 'J'
0000000000009cd7         db  0x0f ; '.'
0000000000009cd8         db  0x0b ; '.'
0000000000009cd9         db  0x77 ; 'w'
0000000000009cda         db  0x08 ; '.'
0000000000009cdb         db  0x80 ; '.'
0000000000009cdc         db  0x00 ; '.'
0000000000009cdd         db  0x3f ; '?'
0000000000009cde         db  0x1a ; '.'
0000000000009cdf         db  0x3b ; ';'
0000000000009ce0         db  0x2a ; '*'
0000000000009ce1         db  0x33 ; '3'
0000000000009ce2         db  0x24 ; '$'
0000000000009ce3         db  0x22 ; '"'
0000000000009ce4         db  0x00 ; '.'
0000000000009ce5         db  0x00 ; '.'
0000000000009ce6         db  0x00 ; '.'
0000000000009ce7         db  0x00 ; '.'
0000000000009ce8         dd         0x00000014                                  ; Length of the record
0000000000009cec         dd         0x00000044                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
0000000000009cf0         db         0xf0, 0x7d, 2 dup (0xff)                    ; begin 0x1ae0
0000000000009cf4         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x1ae8)
0000000000009cf8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009cf9         align      256
0000000000009d00         dd         0x00000038                                  ; Length of the record
0000000000009d04         dd         0x0000005c                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
0000000000009d08         db         0xd8, 0x81, 2 dup (0xff)                    ; begin 0x1ee0
0000000000009d0c         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x1f73)
0000000000009d10         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009d11         db  0x41 ; 'A'
0000000000009d12         db  0x0e ; '.'
0000000000009d13         db  0x10 ; '.'
0000000000009d14         db  0x86 ; '.'
0000000000009d15         db  0x02 ; '.'
0000000000009d16         db  0x41 ; 'A'
0000000000009d17         db  0x0e ; '.'
0000000000009d18         db  0x18 ; '.'
0000000000009d19         db  0x83 ; '.'
0000000000009d1a         db  0x03 ; '.'
0000000000009d1b         db  0x47 ; 'G'
0000000000009d1c         db  0x0e ; '.'
0000000000009d1d         db  0x40 ; '@'
0000000000009d1e         db  0x5e ; '^'
0000000000009d1f         db  0x0e ; '.'
0000000000009d20         db  0x48 ; 'H'
0000000000009d21         db  0x42 ; 'B'
0000000000009d22         db  0x0e ; '.'
0000000000009d23         db  0x50 ; 'P'
0000000000009d24         db  0x45 ; 'E'
0000000000009d25         db  0x0e ; '.'
0000000000009d26         db  0x58 ; 'X'
0000000000009d27         db  0x41 ; 'A'
0000000000009d28         db  0x0e ; '.'
0000000000009d29         db  0x60 ; '`'
0000000000009d2a         db  0x4c ; 'L'
0000000000009d2b         db  0x0e ; '.'
0000000000009d2c         db  0x40 ; '@'
0000000000009d2d         db  0x62 ; 'b'
0000000000009d2e         db  0x0a ; '.'
0000000000009d2f         db  0x0e ; '.'
0000000000009d30         db  0x18 ; '.'
0000000000009d31         db  0x43 ; 'C'
0000000000009d32         db  0x0e ; '.'
0000000000009d33         db  0x10 ; '.'
0000000000009d34         db  0x41 ; 'A'
0000000000009d35         db  0x0e ; '.'
0000000000009d36         db  0x08 ; '.'
0000000000009d37         db  0x47 ; 'G'
0000000000009d38         db  0x0b ; '.'
0000000000009d39         db  0x00 ; '.'
0000000000009d3a         db  0x00 ; '.'
0000000000009d3b         db  0x00 ; '.'
0000000000009d3c         dd         0x00000018                                  ; Length of the record
0000000000009d40         dd         0x00000098                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
0000000000009d44         db         0x3c, 0x82, 2 dup (0xff)                    ; begin 0x1f80
0000000000009d48         db         0x27, 3 dup (0x00)                          ; length 0x27 (end at 0x1fa7)
0000000000009d4c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009d4d         db  0x41 ; 'A'
0000000000009d4e         db  0x0e ; '.'
0000000000009d4f         db  0x10 ; '.'
0000000000009d50         db  0x83 ; '.'
0000000000009d51         db  0x02 ; '.'
0000000000009d52         db  0x5f ; '_'
0000000000009d53         db  0x0e ; '.'
0000000000009d54         db  0x08 ; '.'
0000000000009d55         db  0x00 ; '.'
0000000000009d56         db  0x00 ; '.'
0000000000009d57         db  0x00 ; '.'
0000000000009d58         dd         0x00000010                                  ; Length of the record
0000000000009d5c         dd         0x000000b4                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
0000000000009d60         db         0x50, 0x82, 2 dup (0xff)                    ; begin 0x1fb0
0000000000009d64         db         0x12, 3 dup (0x00)                          ; length 0x12 (end at 0x1fc2)
0000000000009d68         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009d69         align      4
0000000000009d6c         dd         0x0000003c                                  ; Length of the record
0000000000009d70         dd         0x000000c8                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
0000000000009d74         db         0x5c, 0x82, 2 dup (0xff)                    ; begin 0x1fd0
0000000000009d78         db         0x99, 3 dup (0x00)                          ; length 0x99 (end at 0x2069)
0000000000009d7c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009d7d         db  0x46 ; 'F'
0000000000009d7e         db  0x0e ; '.'
0000000000009d7f         db  0x10 ; '.'
0000000000009d80         db  0x8e ; '.'
0000000000009d81         db  0x02 ; '.'
0000000000009d82         db  0x42 ; 'B'
0000000000009d83         db  0x0e ; '.'
0000000000009d84         db  0x18 ; '.'
0000000000009d85         db  0x8d ; '.'
0000000000009d86         db  0x03 ; '.'
0000000000009d87         db  0x42 ; 'B'
0000000000009d88         db  0x0e ; '.'
0000000000009d89         db  0x20 ; ' '
0000000000009d8a         db  0x8c ; '.'
0000000000009d8b         db  0x04 ; '.'
0000000000009d8c         db  0x44 ; 'D'
0000000000009d8d         db  0x0e ; '.'
0000000000009d8e         db  0x28 ; '('
0000000000009d8f         db  0x86 ; '.'
0000000000009d90         db  0x05 ; '.'
0000000000009d91         db  0x44 ; 'D'
0000000000009d92         db  0x0e ; '.'
0000000000009d93         db  0x30 ; '0'
0000000000009d94         db  0x83 ; '.'
0000000000009d95         db  0x06 ; '.'
0000000000009d96         db  0x02 ; '.'
0000000000009d97         db  0x4a ; 'J'
0000000000009d98         db  0x0a ; '.'
0000000000009d99         db  0x0e ; '.'
0000000000009d9a         db  0x28 ; '('
0000000000009d9b         db  0x41 ; 'A'
0000000000009d9c         db  0x0e ; '.'
0000000000009d9d         db  0x20 ; ' '
0000000000009d9e         db  0x42 ; 'B'
0000000000009d9f         db  0x0e ; '.'
0000000000009da0         db  0x18 ; '.'
0000000000009da1         db  0x42 ; 'B'
0000000000009da2         db  0x0e ; '.'
0000000000009da3         db  0x10 ; '.'
0000000000009da4         db  0x42 ; 'B'
0000000000009da5         db  0x0e ; '.'
0000000000009da6         db  0x08 ; '.'
0000000000009da7         db  0x45 ; 'E'
0000000000009da8         db  0x0b ; '.'
0000000000009da9         db  0x00 ; '.'
0000000000009daa         db  0x00 ; '.'
0000000000009dab         db  0x00 ; '.'
0000000000009dac         dd         0x00000028                                  ; Length of the record
0000000000009db0         dd         0x00000108                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
0000000000009db4         db         0xbc, 0x82, 2 dup (0xff)                    ; begin 0x2070
0000000000009db8         db         0xb2, 0x03, 2 dup (0x00)                    ; length 0x3b2 (end at 0x2422)
0000000000009dbc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009dbd         db  0x42 ; 'B'
0000000000009dbe         db  0x0e ; '.'
0000000000009dbf         db  0x10 ; '.'
0000000000009dc0         db  0x8d ; '.'
0000000000009dc1         db  0x02 ; '.'
0000000000009dc2         db  0x42 ; 'B'
0000000000009dc3         db  0x0e ; '.'
0000000000009dc4         db  0x18 ; '.'
0000000000009dc5         db  0x8c ; '.'
0000000000009dc6         db  0x03 ; '.'
0000000000009dc7         db  0x46 ; 'F'
0000000000009dc8         db  0x0e ; '.'
0000000000009dc9         db  0x20 ; ' '
0000000000009dca         db  0x86 ; '.'
0000000000009dcb         db  0x04 ; '.'
0000000000009dcc         db  0x41 ; 'A'
0000000000009dcd         db  0x0e ; '.'
0000000000009dce         db  0x28 ; '('
0000000000009dcf         db  0x83 ; '.'
0000000000009dd0         db  0x05 ; '.'
0000000000009dd1         db  0x49 ; 'I'
0000000000009dd2         db  0x0e ; '.'
0000000000009dd3         db  0xb0 ; '.'
0000000000009dd4         db  0x01 ; '.'
0000000000009dd5         db  0x00 ; '.'
0000000000009dd6         db  0x00 ; '.'
0000000000009dd7         db  0x00 ; '.'
0000000000009dd8         dd         0x00000044                                  ; Length of the record
0000000000009ddc         dd         0x00000134                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
0000000000009de0         db         0x10, 0x7d, 2 dup (0xff)                    ; begin 0x1af0
0000000000009de4         db         0xd1, 0x02, 2 dup (0x00)                    ; length 0x2d1 (end at 0x1dc1)
0000000000009de8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009de9         db  0x42 ; 'B'
0000000000009dea         db  0x0e ; '.'
0000000000009deb         db  0x10 ; '.'
0000000000009dec         db  0x8e ; '.'
0000000000009ded         db  0x02 ; '.'
0000000000009dee         db  0x42 ; 'B'
0000000000009def         db  0x0e ; '.'
0000000000009df0         db  0x18 ; '.'
0000000000009df1         db  0x8d ; '.'
0000000000009df2         db  0x03 ; '.'
0000000000009df3         db  0x49 ; 'I'
0000000000009df4         db  0x0e ; '.'
0000000000009df5         db  0x20 ; ' '
0000000000009df6         db  0x8c ; '.'
0000000000009df7         db  0x04 ; '.'
0000000000009df8         db  0x41 ; 'A'
0000000000009df9         db  0x0e ; '.'
0000000000009dfa         db  0x28 ; '('
0000000000009dfb         db  0x86 ; '.'
0000000000009dfc         db  0x05 ; '.'
0000000000009dfd         db  0x43 ; 'C'
0000000000009dfe         db  0x0e ; '.'
0000000000009dff         db  0x30 ; '0'
0000000000009e00         db  0x83 ; '.'
0000000000009e01         db  0x06 ; '.'
0000000000009e02         db  0x4a ; 'J'
0000000000009e03         db  0x0e ; '.'
0000000000009e04         db  0x60 ; '`'
0000000000009e05         db  0x03 ; '.'
0000000000009e06         db  0xe5 ; '.'
0000000000009e07         db  0x01 ; '.'
0000000000009e08         db  0x0a ; '.'
0000000000009e09         db  0x0e ; '.'
0000000000009e0a         db  0x30 ; '0'
0000000000009e0b         db  0x41 ; 'A'
0000000000009e0c         db  0x0e ; '.'
0000000000009e0d         db  0x28 ; '('
0000000000009e0e         db  0x41 ; 'A'
0000000000009e0f         db  0x0e ; '.'
0000000000009e10         db  0x20 ; ' '
0000000000009e11         db  0x42 ; 'B'
0000000000009e12         db  0x0e ; '.'
0000000000009e13         db  0x18 ; '.'
0000000000009e14         db  0x42 ; 'B'
0000000000009e15         db  0x0e ; '.'
0000000000009e16         db  0x10 ; '.'
0000000000009e17         db  0x42 ; 'B'
0000000000009e18         db  0x0e ; '.'
0000000000009e19         db  0x08 ; '.'
0000000000009e1a         db  0x41 ; 'A'
0000000000009e1b         db  0x0b ; '.'
0000000000009e1c         db  0x00 ; '.'
0000000000009e1d         db  0x00 ; '.'
0000000000009e1e         db  0x00 ; '.'
0000000000009e1f         db  0x00 ; '.'
0000000000009e20         dd         0x0000002c                                  ; Length of the record
0000000000009e24         dd         0x0000017c                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
0000000000009e28         db         0x08, 0x86, 2 dup (0xff)                    ; begin 0x2430
0000000000009e2c         db         0x14, 0x01, 2 dup (0x00)                    ; length 0x114 (end at 0x2544)
0000000000009e30         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009e31         db  0x41 ; 'A'
0000000000009e32         db  0x0e ; '.'
0000000000009e33         db  0x10 ; '.'
0000000000009e34         db  0x86 ; '.'
0000000000009e35         db  0x02 ; '.'
0000000000009e36         db  0x41 ; 'A'
0000000000009e37         db  0x0e ; '.'
0000000000009e38         db  0x18 ; '.'
0000000000009e39         db  0x83 ; '.'
0000000000009e3a         db  0x03 ; '.'
0000000000009e3b         db  0x4d ; 'M'
0000000000009e3c         db  0x0e ; '.'
0000000000009e3d         db  0xf0 ; '.'
0000000000009e3e         db  0x01 ; '.'
0000000000009e3f         db  0x02 ; '.'
0000000000009e40         db  0xe7 ; '.'
0000000000009e41         db  0x0a ; '.'
0000000000009e42         db  0x0e ; '.'
0000000000009e43         db  0x18 ; '.'
0000000000009e44         db  0x41 ; 'A'
0000000000009e45         db  0x0e ; '.'
0000000000009e46         db  0x10 ; '.'
0000000000009e47         db  0x41 ; 'A'
0000000000009e48         db  0x0e ; '.'
0000000000009e49         db  0x08 ; '.'
0000000000009e4a         db  0x48 ; 'H'
0000000000009e4b         db  0x0b ; '.'
0000000000009e4c         db  0x00 ; '.'
0000000000009e4d         db  0x00 ; '.'
0000000000009e4e         db  0x00 ; '.'
0000000000009e4f         db  0x00 ; '.'
0000000000009e50         dd         0x00000010                                  ; Length of the record
0000000000009e54         dd         0x000001ac                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
0000000000009e58         db         0xf8, 0x86, 2 dup (0xff)                    ; begin 0x2550
0000000000009e5c         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2558)
0000000000009e60         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009e61         align      4
0000000000009e64         dd         0x00000010                                  ; Length of the record
0000000000009e68         dd         0x000001c0                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
0000000000009e6c         db         0xf4, 0x86, 2 dup (0xff)                    ; begin 0x2560
0000000000009e70         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2568)
0000000000009e74         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009e75         align      8
0000000000009e78         dd         0x0000002c                                  ; Length of the record
0000000000009e7c         dd         0x000001d4                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
0000000000009e80         db         0xf0, 0x86, 2 dup (0xff)                    ; begin 0x2570
0000000000009e84         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x2614)
0000000000009e88         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009e89         db  0x41 ; 'A'
0000000000009e8a         db  0x0e ; '.'
0000000000009e8b         db  0x10 ; '.'
0000000000009e8c         db  0x86 ; '.'
0000000000009e8d         db  0x02 ; '.'
0000000000009e8e         db  0x41 ; 'A'
0000000000009e8f         db  0x0e ; '.'
0000000000009e90         db  0x18 ; '.'
0000000000009e91         db  0x83 ; '.'
0000000000009e92         db  0x03 ; '.'
0000000000009e93         db  0x44 ; 'D'
0000000000009e94         db  0x0e ; '.'
0000000000009e95         db  0x20 ; ' '
0000000000009e96         db  0x7a ; 'z'
0000000000009e97         db  0x0a ; '.'
0000000000009e98         db  0x0e ; '.'
0000000000009e99         db  0x18 ; '.'
0000000000009e9a         db  0x41 ; 'A'
0000000000009e9b         db  0x0e ; '.'
0000000000009e9c         db  0x10 ; '.'
0000000000009e9d         db  0x41 ; 'A'
0000000000009e9e         db  0x0e ; '.'
0000000000009e9f         db  0x08 ; '.'
0000000000009ea0         db  0x41 ; 'A'
0000000000009ea1         db  0x0b ; '.'
0000000000009ea2         db  0x00 ; '.'
0000000000009ea3         db  0x00 ; '.'
0000000000009ea4         db  0x00 ; '.'
0000000000009ea5         db  0x00 ; '.'
0000000000009ea6         db  0x00 ; '.'
0000000000009ea7         db  0x00 ; '.'
0000000000009ea8         dd         0x0000005c                                  ; Length of the record
0000000000009eac         dd         0x00000204                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
0000000000009eb0         db         0x70, 0x87, 2 dup (0xff)                    ; begin 0x2620
0000000000009eb4         db         0xc9, 0x03, 2 dup (0x00)                    ; length 0x3c9 (end at 0x29e9)
0000000000009eb8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009eb9         db  0x42 ; 'B'
0000000000009eba         db  0x0e ; '.'
0000000000009ebb         db  0x10 ; '.'
0000000000009ebc         db  0x8f ; '.'
0000000000009ebd         db  0x02 ; '.'
0000000000009ebe         db  0x42 ; 'B'
0000000000009ebf         db  0x0e ; '.'
0000000000009ec0         db  0x18 ; '.'
0000000000009ec1         db  0x8e ; '.'
0000000000009ec2         db  0x03 ; '.'
0000000000009ec3         db  0x45 ; 'E'
0000000000009ec4         db  0x0e ; '.'
0000000000009ec5         db  0x20 ; ' '
0000000000009ec6         db  0x8d ; '.'
0000000000009ec7         db  0x04 ; '.'
0000000000009ec8         db  0x42 ; 'B'
0000000000009ec9         db  0x0e ; '.'
0000000000009eca         db  0x28 ; '('
0000000000009ecb         db  0x8c ; '.'
0000000000009ecc         db  0x05 ; '.'
0000000000009ecd         db  0x44 ; 'D'
0000000000009ece         db  0x0e ; '.'
0000000000009ecf         db  0x30 ; '0'
0000000000009ed0         db  0x86 ; '.'
0000000000009ed1         db  0x06 ; '.'
0000000000009ed2         db  0x41 ; 'A'
0000000000009ed3         db  0x0e ; '.'
0000000000009ed4         db  0x38 ; '8'
0000000000009ed5         db  0x83 ; '.'
0000000000009ed6         db  0x07 ; '.'
0000000000009ed7         db  0x50 ; 'P'
0000000000009ed8         db  0x0e ; '.'
0000000000009ed9         db  0x80 ; '.'
0000000000009eda         db  0x02 ; '.'
0000000000009edb         db  0x03 ; '.'
0000000000009edc         db  0xce ; '.'
0000000000009edd         db  0x01 ; '.'
0000000000009ede         db  0x0a ; '.'
0000000000009edf         db  0x0e ; '.'
0000000000009ee0         db  0x38 ; '8'
0000000000009ee1         db  0x41 ; 'A'
0000000000009ee2         db  0x0e ; '.'
0000000000009ee3         db  0x30 ; '0'
0000000000009ee4         db  0x41 ; 'A'
0000000000009ee5         db  0x0e ; '.'
0000000000009ee6         db  0x28 ; '('
0000000000009ee7         db  0x42 ; 'B'
0000000000009ee8         db  0x0e ; '.'
0000000000009ee9         db  0x20 ; ' '
0000000000009eea         db  0x42 ; 'B'
0000000000009eeb         db  0x0e ; '.'
0000000000009eec         db  0x18 ; '.'
0000000000009eed         db  0x42 ; 'B'
0000000000009eee         db  0x0e ; '.'
0000000000009eef         db  0x10 ; '.'
0000000000009ef0         db  0x42 ; 'B'
0000000000009ef1         db  0x0e ; '.'
0000000000009ef2         db  0x08 ; '.'
0000000000009ef3         db  0x48 ; 'H'
0000000000009ef4         db  0x0b ; '.'
0000000000009ef5         db  0x02 ; '.'
0000000000009ef6         db  0xab ; '.'
0000000000009ef7         db  0x0e ; '.'
0000000000009ef8         db  0x88 ; '.'
0000000000009ef9         db  0x02 ; '.'
0000000000009efa         db  0x4b ; 'K'
0000000000009efb         db  0x0e ; '.'
0000000000009efc         db  0x90 ; '.'
0000000000009efd         db  0x02 ; '.'
0000000000009efe         db  0x5f ; '_'
0000000000009eff         db  0x0e ; '.'
0000000000009f00         db  0x88 ; '.'
0000000000009f01         db  0x02 ; '.'
0000000000009f02         db  0x41 ; 'A'
0000000000009f03         db  0x0e ; '.'
0000000000009f04         db  0x80 ; '.'
0000000000009f05         db  0x02 ; '.'
0000000000009f06         db  0x00 ; '.'
0000000000009f07         db  0x00 ; '.'
0000000000009f08         dd         0x00000044                                  ; Length of the record
0000000000009f0c         dd         0x00000264                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
0000000000009f10         db         0xe0, 0x8a, 2 dup (0xff)                    ; begin 0x29f0
0000000000009f14         db         0xa9, 0x03, 2 dup (0x00)                    ; length 0x3a9 (end at 0x2d99)
0000000000009f18         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009f19         db  0x41 ; 'A'
0000000000009f1a         db  0x0e ; '.'
0000000000009f1b         db  0x10 ; '.'
0000000000009f1c         db  0x86 ; '.'
0000000000009f1d         db  0x02 ; '.'
0000000000009f1e         db  0x41 ; 'A'
0000000000009f1f         db  0x0e ; '.'
0000000000009f20         db  0x18 ; '.'
0000000000009f21         db  0x83 ; '.'
0000000000009f22         db  0x03 ; '.'
0000000000009f23         db  0x47 ; 'G'
0000000000009f24         db  0x0e ; '.'
0000000000009f25         db  0x20 ; ' '
0000000000009f26         db  0x02 ; '.'
0000000000009f27         db  0xb8 ; '.'
0000000000009f28         db  0x0a ; '.'
0000000000009f29         db  0x0e ; '.'
0000000000009f2a         db  0x18 ; '.'
0000000000009f2b         db  0x41 ; 'A'
0000000000009f2c         db  0x0e ; '.'
0000000000009f2d         db  0x10 ; '.'
0000000000009f2e         db  0x41 ; 'A'
0000000000009f2f         db  0x0e ; '.'
0000000000009f30         db  0x08 ; '.'
0000000000009f31         db  0x45 ; 'E'
0000000000009f32         db  0x0b ; '.'
0000000000009f33         db  0x6b ; 'k'
0000000000009f34         db  0x0a ; '.'
0000000000009f35         db  0x0e ; '.'
0000000000009f36         db  0x18 ; '.'
0000000000009f37         db  0x43 ; 'C'
0000000000009f38         db  0x0e ; '.'
0000000000009f39         db  0x10 ; '.'
0000000000009f3a         db  0x41 ; 'A'
0000000000009f3b         db  0x0e ; '.'
0000000000009f3c         db  0x08 ; '.'
0000000000009f3d         db  0x49 ; 'I'
0000000000009f3e         db  0x0b ; '.'
0000000000009f3f         db  0x03 ; '.'
0000000000009f40         db  0x6c ; 'l'
0000000000009f41         db  0x02 ; '.'
0000000000009f42         db  0x0a ; '.'
0000000000009f43         db  0x0e ; '.'
0000000000009f44         db  0x18 ; '.'
0000000000009f45         db  0x41 ; 'A'
0000000000009f46         db  0x0e ; '.'
0000000000009f47         db  0x10 ; '.'
0000000000009f48         db  0x41 ; 'A'
0000000000009f49         db  0x0e ; '.'
0000000000009f4a         db  0x08 ; '.'
0000000000009f4b         db  0x41 ; 'A'
0000000000009f4c         db  0x0b ; '.'
0000000000009f4d         db  0x00 ; '.'
0000000000009f4e         db  0x00 ; '.'
0000000000009f4f         db  0x00 ; '.'
0000000000009f50         dd         0x00000020                                  ; Length of the record
0000000000009f54         dd         0x000002ac                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
0000000000009f58         db         0x48, 0x8e, 2 dup (0xff)                    ; begin 0x2da0
0000000000009f5c         db         0x89, 3 dup (0x00)                          ; length 0x89 (end at 0x2e29)
0000000000009f60         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009f61         db  0x41 ; 'A'
0000000000009f62         db  0x0e ; '.'
0000000000009f63         db  0x10 ; '.'
0000000000009f64         db  0x83 ; '.'
0000000000009f65         db  0x02 ; '.'
0000000000009f66         db  0x4f ; 'O'
0000000000009f67         db  0x0e ; '.'
0000000000009f68         db  0xb0 ; '.'
0000000000009f69         db  0x01 ; '.'
0000000000009f6a         db  0x02 ; '.'
0000000000009f6b         db  0x64 ; 'd'
0000000000009f6c         db  0x0a ; '.'
0000000000009f6d         db  0x0e ; '.'
0000000000009f6e         db  0x10 ; '.'
0000000000009f6f         db  0x41 ; 'A'
0000000000009f70         db  0x0e ; '.'
0000000000009f71         db  0x08 ; '.'
0000000000009f72         db  0x4b ; 'K'
0000000000009f73         db  0x0b ; '.'
0000000000009f74         dd         0x00000030                                  ; Length of the record
0000000000009f78         dd         0x000002d0                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
0000000000009f7c         db         0xb4, 0x8e, 2 dup (0xff)                    ; begin 0x2e30
0000000000009f80         db         0x6d, 0x01, 2 dup (0x00)                    ; length 0x16d (end at 0x2f9d)
0000000000009f84         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009f85         db  0x5b ; '['
0000000000009f86         db  0x0e ; '.'
0000000000009f87         db  0x10 ; '.'
0000000000009f88         db  0x8c ; '.'
0000000000009f89         db  0x02 ; '.'
0000000000009f8a         db  0x41 ; 'A'
0000000000009f8b         db  0x0e ; '.'
0000000000009f8c         db  0x18 ; '.'
0000000000009f8d         db  0x86 ; '.'
0000000000009f8e         db  0x03 ; '.'
0000000000009f8f         db  0x41 ; 'A'
0000000000009f90         db  0x0e ; '.'
0000000000009f91         db  0x20 ; ' '
0000000000009f92         db  0x83 ; '.'
0000000000009f93         db  0x04 ; '.'
0000000000009f94         db  0x03 ; '.'
0000000000009f95         db  0x08 ; '.'
0000000000009f96         db  0x01 ; '.'
0000000000009f97         db  0x0a ; '.'
0000000000009f98         db  0x0e ; '.'
0000000000009f99         db  0x18 ; '.'
0000000000009f9a         db  0x41 ; 'A'
0000000000009f9b         db  0x0e ; '.'
0000000000009f9c         db  0x10 ; '.'
0000000000009f9d         db  0x42 ; 'B'
0000000000009f9e         db  0x0e ; '.'
0000000000009f9f         db  0x08 ; '.'
0000000000009fa0         db  0x48 ; 'H'
0000000000009fa1         db  0x0b ; '.'
0000000000009fa2         db  0x70 ; 'p'
0000000000009fa3         db  0x0e ; '.'
0000000000009fa4         db  0x08 ; '.'
0000000000009fa5         db  0xc3 ; '.'
0000000000009fa6         db  0xc6 ; '.'
0000000000009fa7         db  0xcc ; '.'
0000000000009fa8         dd         0x0000001c                                  ; Length of the record
0000000000009fac         dd         0x00000304                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
0000000000009fb0         db         0xf0, 0x8f, 2 dup (0xff)                    ; begin 0x2fa0
0000000000009fb4         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x303f)
0000000000009fb8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009fb9         db  0x44 ; 'D'
0000000000009fba         db  0x0e ; '.'
0000000000009fbb         db  0x10 ; '.'
0000000000009fbc         db  0x83 ; '.'
0000000000009fbd         db  0x02 ; '.'
0000000000009fbe         db  0x02 ; '.'
0000000000009fbf         db  0x78 ; 'x'
0000000000009fc0         db  0x0a ; '.'
0000000000009fc1         db  0x0e ; '.'
0000000000009fc2         db  0x08 ; '.'
0000000000009fc3         db  0x41 ; 'A'
0000000000009fc4         db  0x0b ; '.'
0000000000009fc5         db  0x00 ; '.'
0000000000009fc6         db  0x00 ; '.'
0000000000009fc7         db  0x00 ; '.'
0000000000009fc8         dd         0x00000040                                  ; Length of the record
0000000000009fcc         dd         0x00000324                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
0000000000009fd0         db         0x70, 0x90, 2 dup (0xff)                    ; begin 0x3040
0000000000009fd4         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x3127)
0000000000009fd8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009fd9         db  0x41 ; 'A'
0000000000009fda         db  0x0e ; '.'
0000000000009fdb         db  0x10 ; '.'
0000000000009fdc         db  0x86 ; '.'
0000000000009fdd         db  0x02 ; '.'
0000000000009fde         db  0x41 ; 'A'
0000000000009fdf         db  0x0e ; '.'
0000000000009fe0         db  0x18 ; '.'
0000000000009fe1         db  0x83 ; '.'
0000000000009fe2         db  0x03 ; '.'
0000000000009fe3         db  0x49 ; 'I'
0000000000009fe4         db  0x0e ; '.'
0000000000009fe5         db  0x20 ; ' '
0000000000009fe6         db  0x6e ; 'n'
0000000000009fe7         db  0x0a ; '.'
0000000000009fe8         db  0x0e ; '.'
0000000000009fe9         db  0x18 ; '.'
0000000000009fea         db  0x41 ; 'A'
0000000000009feb         db  0x0e ; '.'
0000000000009fec         db  0x10 ; '.'
0000000000009fed         db  0x41 ; 'A'
0000000000009fee         db  0x0e ; '.'
0000000000009fef         db  0x08 ; '.'
0000000000009ff0         db  0x45 ; 'E'
0000000000009ff1         db  0x0b ; '.'
0000000000009ff2         db  0x02 ; '.'
0000000000009ff3         db  0x4a ; 'J'
0000000000009ff4         db  0x0a ; '.'
0000000000009ff5         db  0x0e ; '.'
0000000000009ff6         db  0x18 ; '.'
0000000000009ff7         db  0x41 ; 'A'
0000000000009ff8         db  0x0e ; '.'
0000000000009ff9         db  0x10 ; '.'
0000000000009ffa         db  0x41 ; 'A'
0000000000009ffb         db  0x0e ; '.'
0000000000009ffc         db  0x08 ; '.'
0000000000009ffd         db  0x44 ; 'D'
0000000000009ffe         db  0x0b ; '.'
0000000000009fff         db  0x02 ; '.'
000000000000a000         db  0x54 ; 'T'
000000000000a001         db  0x0e ; '.'
000000000000a002         db  0x18 ; '.'
000000000000a003         db  0x41 ; 'A'
000000000000a004         db  0x0e ; '.'
000000000000a005         db  0x10 ; '.'
000000000000a006         db  0x41 ; 'A'
000000000000a007         db  0x0e ; '.'
000000000000a008         db  0x08 ; '.'
000000000000a009         db  0x00 ; '.'
000000000000a00a         db  0x00 ; '.'
000000000000a00b         db  0x00 ; '.'
000000000000a00c         dd         0x00000074                                  ; Length of the record
000000000000a010         dd         0x00000368                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a014         db         0x1c, 0x91, 2 dup (0xff)                    ; begin 0x3130
000000000000a018         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x4364)
000000000000a01c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a01d         db  0x42 ; 'B'
000000000000a01e         db  0x0e ; '.'
000000000000a01f         db  0x10 ; '.'
000000000000a020         db  0x8f ; '.'
000000000000a021         db  0x02 ; '.'
000000000000a022         db  0x42 ; 'B'
000000000000a023         db  0x0e ; '.'
000000000000a024         db  0x18 ; '.'
000000000000a025         db  0x8e ; '.'
000000000000a026         db  0x03 ; '.'
000000000000a027         db  0x45 ; 'E'
000000000000a028         db  0x0e ; '.'
000000000000a029         db  0x20 ; ' '
000000000000a02a         db  0x8d ; '.'
000000000000a02b         db  0x04 ; '.'
000000000000a02c         db  0x42 ; 'B'
000000000000a02d         db  0x0e ; '.'
000000000000a02e         db  0x28 ; '('
000000000000a02f         db  0x8c ; '.'
000000000000a030         db  0x05 ; '.'
000000000000a031         db  0x44 ; 'D'
000000000000a032         db  0x0e ; '.'
000000000000a033         db  0x30 ; '0'
000000000000a034         db  0x86 ; '.'
000000000000a035         db  0x06 ; '.'
000000000000a036         db  0x41 ; 'A'
000000000000a037         db  0x0e ; '.'
000000000000a038         db  0x38 ; '8'
000000000000a039         db  0x83 ; '.'
000000000000a03a         db  0x07 ; '.'
000000000000a03b         db  0x53 ; 'S'
000000000000a03c         db  0x0e ; '.'
000000000000a03d         db  0xf0 ; '.'
000000000000a03e         db  0x01 ; '.'
000000000000a03f         db  0x03 ; '.'
000000000000a040         db  0x81 ; '.'
000000000000a041         db  0x0b ; '.'
000000000000a042         db  0x0e ; '.'
000000000000a043         db  0xf8 ; '.'
000000000000a044         db  0x01 ; '.'
000000000000a045         db  0x4a ; 'J'
000000000000a046         db  0x0e ; '.'
000000000000a047         db  0x80 ; '.'
000000000000a048         db  0x02 ; '.'
000000000000a049         db  0x44 ; 'D'
000000000000a04a         db  0x0e ; '.'
000000000000a04b         db  0x88 ; '.'
000000000000a04c         db  0x02 ; '.'
000000000000a04d         db  0x45 ; 'E'
000000000000a04e         db  0x0e ; '.'
000000000000a04f         db  0x90 ; '.'
000000000000a050         db  0x02 ; '.'
000000000000a051         db  0x5f ; '_'
000000000000a052         db  0x0e ; '.'
000000000000a053         db  0xf0 ; '.'
000000000000a054         db  0x01 ; '.'
000000000000a055         db  0x64 ; 'd'
000000000000a056         db  0x0a ; '.'
000000000000a057         db  0x0e ; '.'
000000000000a058         db  0x38 ; '8'
000000000000a059         db  0x41 ; 'A'
000000000000a05a         db  0x0e ; '.'
000000000000a05b         db  0x30 ; '0'
000000000000a05c         db  0x41 ; 'A'
000000000000a05d         db  0x0e ; '.'
000000000000a05e         db  0x28 ; '('
000000000000a05f         db  0x42 ; 'B'
000000000000a060         db  0x0e ; '.'
000000000000a061         db  0x20 ; ' '
000000000000a062         db  0x42 ; 'B'
000000000000a063         db  0x0e ; '.'
000000000000a064         db  0x18 ; '.'
000000000000a065         db  0x42 ; 'B'
000000000000a066         db  0x0e ; '.'
000000000000a067         db  0x10 ; '.'
000000000000a068         db  0x42 ; 'B'
000000000000a069         db  0x0e ; '.'
000000000000a06a         db  0x08 ; '.'
000000000000a06b         db  0x44 ; 'D'
000000000000a06c         db  0x0b ; '.'
000000000000a06d         db  0x03 ; '.'
000000000000a06e         db  0x99 ; '.'
000000000000a06f         db  0x05 ; '.'
000000000000a070         db  0x0e ; '.'
000000000000a071         db  0xf8 ; '.'
000000000000a072         db  0x01 ; '.'
000000000000a073         db  0x4d ; 'M'
000000000000a074         db  0x0e ; '.'
000000000000a075         db  0x80 ; '.'
000000000000a076         db  0x02 ; '.'
000000000000a077         db  0x44 ; 'D'
000000000000a078         db  0x0e ; '.'
000000000000a079         db  0x88 ; '.'
000000000000a07a         db  0x02 ; '.'
000000000000a07b         db  0x47 ; 'G'
000000000000a07c         db  0x0e ; '.'
000000000000a07d         db  0x90 ; '.'
000000000000a07e         db  0x02 ; '.'
000000000000a07f         db  0x5b ; '['
000000000000a080         db  0x0e ; '.'
000000000000a081         db  0xf0 ; '.'
000000000000a082         db  0x01 ; '.'
000000000000a083         db  0x00 ; '.'
000000000000a084         dd         0x00000068                                  ; Length of the record
000000000000a088         dd         0x000003e0                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a08c         db         0xe4, 0xa2, 2 dup (0xff)                    ; begin 0x4370
000000000000a090         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x451b)
000000000000a094         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a095         db  0x42 ; 'B'
000000000000a096         db  0x0e ; '.'
000000000000a097         db  0x10 ; '.'
000000000000a098         db  0x8f ; '.'
000000000000a099         db  0x02 ; '.'
000000000000a09a         db  0x42 ; 'B'
000000000000a09b         db  0x0e ; '.'
000000000000a09c         db  0x18 ; '.'
000000000000a09d         db  0x8e ; '.'
000000000000a09e         db  0x03 ; '.'
000000000000a09f         db  0x45 ; 'E'
000000000000a0a0         db  0x0e ; '.'
000000000000a0a1         db  0x20 ; ' '
000000000000a0a2         db  0x8d ; '.'
000000000000a0a3         db  0x04 ; '.'
000000000000a0a4         db  0x42 ; 'B'
000000000000a0a5         db  0x0e ; '.'
000000000000a0a6         db  0x28 ; '('
000000000000a0a7         db  0x8c ; '.'
000000000000a0a8         db  0x05 ; '.'
000000000000a0a9         db  0x44 ; 'D'
000000000000a0aa         db  0x0e ; '.'
000000000000a0ab         db  0x30 ; '0'
000000000000a0ac         db  0x86 ; '.'
000000000000a0ad         db  0x06 ; '.'
000000000000a0ae         db  0x41 ; 'A'
000000000000a0af         db  0x0e ; '.'
000000000000a0b0         db  0x38 ; '8'
000000000000a0b1         db  0x83 ; '.'
000000000000a0b2         db  0x07 ; '.'
000000000000a0b3         db  0x47 ; 'G'
000000000000a0b4         db  0x0e ; '.'
000000000000a0b5         db  0x60 ; '`'
000000000000a0b6         db  0x02 ; '.'
000000000000a0b7         db  0x99 ; '.'
000000000000a0b8         db  0x0e ; '.'
000000000000a0b9         db  0x68 ; 'h'
000000000000a0ba         db  0x5f ; '_'
000000000000a0bb         db  0x0e ; '.'
000000000000a0bc         db  0x70 ; 'p'
000000000000a0bd         db  0x46 ; 'F'
000000000000a0be         db  0x0e ; '.'
000000000000a0bf         db  0x78 ; 'x'
000000000000a0c0         db  0x42 ; 'B'
000000000000a0c1         db  0x0e ; '.'
000000000000a0c2         db  0x80 ; '.'
000000000000a0c3         db  0x01 ; '.'
000000000000a0c4         db  0x59 ; 'Y'
000000000000a0c5         db  0x0e ; '.'
000000000000a0c6         db  0x60 ; '`'
000000000000a0c7         db  0x02 ; '.'
000000000000a0c8         db  0x40 ; '@'
000000000000a0c9         db  0x0e ; '.'
000000000000a0ca         db  0x68 ; 'h'
000000000000a0cb         db  0x4b ; 'K'
000000000000a0cc         db  0x0e ; '.'
000000000000a0cd         db  0x70 ; 'p'
000000000000a0ce         db  0x43 ; 'C'
000000000000a0cf         db  0x0e ; '.'
000000000000a0d0         db  0x78 ; 'x'
000000000000a0d1         db  0x45 ; 'E'
000000000000a0d2         db  0x0e ; '.'
000000000000a0d3         db  0x80 ; '.'
000000000000a0d4         db  0x01 ; '.'
000000000000a0d5         db  0x5e ; '^'
000000000000a0d6         db  0x0e ; '.'
000000000000a0d7         db  0x60 ; '`'
000000000000a0d8         db  0x4c ; 'L'
000000000000a0d9         db  0x0a ; '.'
000000000000a0da         db  0x0e ; '.'
000000000000a0db         db  0x38 ; '8'
000000000000a0dc         db  0x44 ; 'D'
000000000000a0dd         db  0x0e ; '.'
000000000000a0de         db  0x30 ; '0'
000000000000a0df         db  0x41 ; 'A'
000000000000a0e0         db  0x0e ; '.'
000000000000a0e1         db  0x28 ; '('
000000000000a0e2         db  0x42 ; 'B'
000000000000a0e3         db  0x0e ; '.'
000000000000a0e4         db  0x20 ; ' '
000000000000a0e5         db  0x42 ; 'B'
000000000000a0e6         db  0x0e ; '.'
000000000000a0e7         db  0x18 ; '.'
000000000000a0e8         db  0x42 ; 'B'
000000000000a0e9         db  0x0e ; '.'
000000000000a0ea         db  0x10 ; '.'
000000000000a0eb         db  0x42 ; 'B'
000000000000a0ec         db  0x0e ; '.'
000000000000a0ed         db  0x08 ; '.'
000000000000a0ee         db  0x46 ; 'F'
000000000000a0ef         db  0x0b ; '.'
000000000000a0f0         dd         0x00000028                                  ; Length of the record
000000000000a0f4         dd         0x0000044c                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a0f8         db         0x28, 0xa4, 2 dup (0xff)                    ; begin 0x4520
000000000000a0fc         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x4556)
000000000000a100         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a101         db  0x42 ; 'B'
000000000000a102         db  0x0e ; '.'
000000000000a103         db  0x10 ; '.'
000000000000a104         db  0x8c ; '.'
000000000000a105         db  0x02 ; '.'
000000000000a106         db  0x41 ; 'A'
000000000000a107         db  0x0e ; '.'
000000000000a108         db  0x18 ; '.'
000000000000a109         db  0x86 ; '.'
000000000000a10a         db  0x03 ; '.'
000000000000a10b         db  0x41 ; 'A'
000000000000a10c         db  0x0e ; '.'
000000000000a10d         db  0x20 ; ' '
000000000000a10e         db  0x83 ; '.'
000000000000a10f         db  0x04 ; '.'
000000000000a110         db  0x6e ; 'n'
000000000000a111         db  0x0e ; '.'
000000000000a112         db  0x18 ; '.'
000000000000a113         db  0x41 ; 'A'
000000000000a114         db  0x0e ; '.'
000000000000a115         db  0x10 ; '.'
000000000000a116         db  0x42 ; 'B'
000000000000a117         db  0x0e ; '.'
000000000000a118         db  0x08 ; '.'
000000000000a119         db  0x00 ; '.'
000000000000a11a         db  0x00 ; '.'
000000000000a11b         db  0x00 ; '.'
000000000000a11c         dd         0x00000010                                  ; Length of the record
000000000000a120         dd         0x00000478                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a124         db         0x3c, 0xa4, 2 dup (0xff)                    ; begin 0x4560
000000000000a128         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4571)
000000000000a12c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a12d         align      16
000000000000a130         dd         0x00000010                                  ; Length of the record
000000000000a134         dd         0x0000048c                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a138         db         0x48, 0xa4, 2 dup (0xff)                    ; begin 0x4580
000000000000a13c         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4591)
000000000000a140         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a141         align      4
000000000000a144         dd         0x00000010                                  ; Length of the record
000000000000a148         dd         0x000004a0                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a14c         db         0x54, 0xa4, 2 dup (0xff)                    ; begin 0x45a0
000000000000a150         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x45d5)
000000000000a154         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a155         align      8
000000000000a158         dd         0x00000010                                  ; Length of the record
000000000000a15c         dd         0x000004b4                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a160         db         0x80, 0xa4, 2 dup (0xff)                    ; begin 0x45e0
000000000000a164         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x45f5)
000000000000a168         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a169         align      4
000000000000a16c         dd         0x00000010                                  ; Length of the record
000000000000a170         dd         0x000004c8                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a174         db         0x8c, 0xa4, 2 dup (0xff)                    ; begin 0x4600
000000000000a178         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x4630)
000000000000a17c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a17d         db  0x6b ; 'k'
000000000000a17e         db  0x0e ; '.'
000000000000a17f         db  0x10 ; '.'
000000000000a180         dd         0x00000050                                  ; Length of the record
000000000000a184         dd         0x000004dc                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a188         db         0xa8, 0xa4, 2 dup (0xff)                    ; begin 0x4630
000000000000a18c         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x46a4)
000000000000a190         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a191         db  0x42 ; 'B'
000000000000a192         db  0x0e ; '.'
000000000000a193         db  0x10 ; '.'
000000000000a194         db  0x8f ; '.'
000000000000a195         db  0x02 ; '.'
000000000000a196         db  0x42 ; 'B'
000000000000a197         db  0x0e ; '.'
000000000000a198         db  0x18 ; '.'
000000000000a199         db  0x8e ; '.'
000000000000a19a         db  0x03 ; '.'
000000000000a19b         db  0x49 ; 'I'
000000000000a19c         db  0x0e ; '.'
000000000000a19d         db  0x20 ; ' '
000000000000a19e         db  0x8d ; '.'
000000000000a19f         db  0x04 ; '.'
000000000000a1a0         db  0x42 ; 'B'
000000000000a1a1         db  0x0e ; '.'
000000000000a1a2         db  0x28 ; '('
000000000000a1a3         db  0x8c ; '.'
000000000000a1a4         db  0x05 ; '.'
000000000000a1a5         db  0x44 ; 'D'
000000000000a1a6         db  0x0e ; '.'
000000000000a1a7         db  0x30 ; '0'
000000000000a1a8         db  0x86 ; '.'
000000000000a1a9         db  0x06 ; '.'
000000000000a1aa         db  0x41 ; 'A'
000000000000a1ab         db  0x0e ; '.'
000000000000a1ac         db  0x38 ; '8'
000000000000a1ad         db  0x83 ; '.'
000000000000a1ae         db  0x07 ; '.'
000000000000a1af         db  0x4d ; 'M'
000000000000a1b0         db  0x0e ; '.'
000000000000a1b1         db  0x50 ; 'P'
000000000000a1b2         db  0x5f ; '_'
000000000000a1b3         db  0x0e ; '.'
000000000000a1b4         db  0x58 ; 'X'
000000000000a1b5         db  0x47 ; 'G'
000000000000a1b6         db  0x0e ; '.'
000000000000a1b7         db  0x60 ; '`'
000000000000a1b8         db  0x46 ; 'F'
000000000000a1b9         db  0x0e ; '.'
000000000000a1ba         db  0x68 ; 'h'
000000000000a1bb         db  0x44 ; 'D'
000000000000a1bc         db  0x0e ; '.'
000000000000a1bd         db  0x70 ; 'p'
000000000000a1be         db  0x58 ; 'X'
000000000000a1bf         db  0x0e ; '.'
000000000000a1c0         db  0x38 ; '8'
000000000000a1c1         db  0x41 ; 'A'
000000000000a1c2         db  0x0e ; '.'
000000000000a1c3         db  0x30 ; '0'
000000000000a1c4         db  0x41 ; 'A'
000000000000a1c5         db  0x0e ; '.'
000000000000a1c6         db  0x28 ; '('
000000000000a1c7         db  0x42 ; 'B'
000000000000a1c8         db  0x0e ; '.'
000000000000a1c9         db  0x20 ; ' '
000000000000a1ca         db  0x42 ; 'B'
000000000000a1cb         db  0x0e ; '.'
000000000000a1cc         db  0x18 ; '.'
000000000000a1cd         db  0x42 ; 'B'
000000000000a1ce         db  0x0e ; '.'
000000000000a1cf         db  0x10 ; '.'
000000000000a1d0         db  0x42 ; 'B'
000000000000a1d1         db  0x0e ; '.'
000000000000a1d2         db  0x08 ; '.'
000000000000a1d3         db  0x00 ; '.'
000000000000a1d4         dd         0x00000068                                  ; Length of the record
000000000000a1d8         dd         0x00000530                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a1dc         db         0xd4, 0xa4, 2 dup (0xff)                    ; begin 0x46b0
000000000000a1e0         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x4793)
000000000000a1e4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a1e5         db  0x42 ; 'B'
000000000000a1e6         db  0x0e ; '.'
000000000000a1e7         db  0x10 ; '.'
000000000000a1e8         db  0x8f ; '.'
000000000000a1e9         db  0x02 ; '.'
000000000000a1ea         db  0x42 ; 'B'
000000000000a1eb         db  0x0e ; '.'
000000000000a1ec         db  0x18 ; '.'
000000000000a1ed         db  0x8e ; '.'
000000000000a1ee         db  0x03 ; '.'
000000000000a1ef         db  0x49 ; 'I'
000000000000a1f0         db  0x0e ; '.'
000000000000a1f1         db  0x20 ; ' '
000000000000a1f2         db  0x8d ; '.'
000000000000a1f3         db  0x04 ; '.'
000000000000a1f4         db  0x42 ; 'B'
000000000000a1f5         db  0x0e ; '.'
000000000000a1f6         db  0x28 ; '('
000000000000a1f7         db  0x8c ; '.'
000000000000a1f8         db  0x05 ; '.'
000000000000a1f9         db  0x44 ; 'D'
000000000000a1fa         db  0x0e ; '.'
000000000000a1fb         db  0x30 ; '0'
000000000000a1fc         db  0x86 ; '.'
000000000000a1fd         db  0x06 ; '.'
000000000000a1fe         db  0x41 ; 'A'
000000000000a1ff         db  0x0e ; '.'
000000000000a200         db  0x38 ; '8'
000000000000a201         db  0x83 ; '.'
000000000000a202         db  0x07 ; '.'
000000000000a203         db  0x4d ; 'M'
000000000000a204         db  0x0e ; '.'
000000000000a205         db  0x70 ; 'p'
000000000000a206         db  0x65 ; 'e'
000000000000a207         db  0x0e ; '.'
000000000000a208         db  0x78 ; 'x'
000000000000a209         db  0x4d ; 'M'
000000000000a20a         db  0x0e ; '.'
000000000000a20b         db  0x80 ; '.'
000000000000a20c         db  0x01 ; '.'
000000000000a20d         db  0x46 ; 'F'
000000000000a20e         db  0x0e ; '.'
000000000000a20f         db  0x88 ; '.'
000000000000a210         db  0x01 ; '.'
000000000000a211         db  0x42 ; 'B'
000000000000a212         db  0x0e ; '.'
000000000000a213         db  0x90 ; '.'
000000000000a214         db  0x01 ; '.'
000000000000a215         db  0x5e ; '^'
000000000000a216         db  0x0e ; '.'
000000000000a217         db  0x70 ; 'p'
000000000000a218         db  0x56 ; 'V'
000000000000a219         db  0x0e ; '.'
000000000000a21a         db  0x78 ; 'x'
000000000000a21b         db  0x43 ; 'C'
000000000000a21c         db  0x0e ; '.'
000000000000a21d         db  0x80 ; '.'
000000000000a21e         db  0x01 ; '.'
000000000000a21f         db  0x43 ; 'C'
000000000000a220         db  0x0e ; '.'
000000000000a221         db  0x88 ; '.'
000000000000a222         db  0x01 ; '.'
000000000000a223         db  0x56 ; 'V'
000000000000a224         db  0x0e ; '.'
000000000000a225         db  0x90 ; '.'
000000000000a226         db  0x01 ; '.'
000000000000a227         db  0x52 ; 'R'
000000000000a228         db  0x0e ; '.'
000000000000a229         db  0x70 ; 'p'
000000000000a22a         db  0x5b ; '['
000000000000a22b         db  0x0e ; '.'
000000000000a22c         db  0x38 ; '8'
000000000000a22d         db  0x41 ; 'A'
000000000000a22e         db  0x0e ; '.'
000000000000a22f         db  0x30 ; '0'
000000000000a230         db  0x41 ; 'A'
000000000000a231         db  0x0e ; '.'
000000000000a232         db  0x28 ; '('
000000000000a233         db  0x42 ; 'B'
000000000000a234         db  0x0e ; '.'
000000000000a235         db  0x20 ; ' '
000000000000a236         db  0x42 ; 'B'
000000000000a237         db  0x0e ; '.'
000000000000a238         db  0x18 ; '.'
000000000000a239         db  0x42 ; 'B'
000000000000a23a         db  0x0e ; '.'
000000000000a23b         db  0x10 ; '.'
000000000000a23c         db  0x42 ; 'B'
000000000000a23d         db  0x0e ; '.'
000000000000a23e         db  0x08 ; '.'
000000000000a23f         db  0x00 ; '.'
000000000000a240         dd         0x00000010                                  ; Length of the record
000000000000a244         dd         0x0000059c                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a248         db         0x58, 0xa5, 2 dup (0xff)                    ; begin 0x47a0
000000000000a24c         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x47aa)
000000000000a250         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a251         align      4
000000000000a254         dd         0x00000028                                  ; Length of the record
000000000000a258         dd         0x000005b0                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a25c         db         0x54, 0xa5, 2 dup (0xff)                    ; begin 0x47b0
000000000000a260         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x4843)
000000000000a264         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a265         db  0x48 ; 'H'
000000000000a266         db  0x0e ; '.'
000000000000a267         db  0x10 ; '.'
000000000000a268         db  0x8c ; '.'
000000000000a269         db  0x02 ; '.'
000000000000a26a         db  0x48 ; 'H'
000000000000a26b         db  0x0e ; '.'
000000000000a26c         db  0x18 ; '.'
000000000000a26d         db  0x86 ; '.'
000000000000a26e         db  0x03 ; '.'
000000000000a26f         db  0x41 ; 'A'
000000000000a270         db  0x0e ; '.'
000000000000a271         db  0x20 ; ' '
000000000000a272         db  0x83 ; '.'
000000000000a273         db  0x04 ; '.'
000000000000a274         db  0x02 ; '.'
000000000000a275         db  0x74 ; 't'
000000000000a276         db  0x0e ; '.'
000000000000a277         db  0x18 ; '.'
000000000000a278         db  0x4b ; 'K'
000000000000a279         db  0x0e ; '.'
000000000000a27a         db  0x10 ; '.'
000000000000a27b         db  0x42 ; 'B'
000000000000a27c         db  0x0e ; '.'
000000000000a27d         db  0x08 ; '.'
000000000000a27e         db  0x00 ; '.'
000000000000a27f         db  0x00 ; '.'
000000000000a280         dd         0x00000010                                  ; Length of the record
000000000000a284         dd         0x000005dc                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a288         db         0xc8, 0xa5, 2 dup (0xff)                    ; begin 0x4850
000000000000a28c         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4863)
000000000000a290         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a291         align      4
000000000000a294         dd         0x00000010                                  ; Length of the record
000000000000a298         dd         0x000005f0                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a29c         db         0xd4, 0xa5, 2 dup (0xff)                    ; begin 0x4870
000000000000a2a0         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x487c)
000000000000a2a4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a2a5         align      8
000000000000a2a8         dd         0x00000010                                  ; Length of the record
000000000000a2ac         dd         0x00000604                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a2b0         db         0xd0, 0xa5, 2 dup (0xff)                    ; begin 0x4880
000000000000a2b4         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x4898)
000000000000a2b8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a2b9         align      4
000000000000a2bc         dd         0x00000010                                  ; Length of the record
000000000000a2c0         dd         0x00000618                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a2c4         db         0xdc, 0xa5, 2 dup (0xff)                    ; begin 0x48a0
000000000000a2c8         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x48b4)
000000000000a2cc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a2cd         align      16
000000000000a2d0         dd         0x00000018                                  ; Length of the record
000000000000a2d4         dd         0x0000062c                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a2d8         db         0xe8, 0xa5, 2 dup (0xff)                    ; begin 0x48c0
000000000000a2dc         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x494e)
000000000000a2e0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a2e1         db  0x44 ; 'D'
000000000000a2e2         db  0x0e ; '.'
000000000000a2e3         db  0x50 ; 'P'
000000000000a2e4         db  0x02 ; '.'
000000000000a2e5         db  0x7f ; '.'
000000000000a2e6         db  0x0a ; '.'
000000000000a2e7         db  0x0e ; '.'
000000000000a2e8         db  0x08 ; '.'
000000000000a2e9         db  0x41 ; 'A'
000000000000a2ea         db  0x0b ; '.'
000000000000a2eb         db  0x00 ; '.'
000000000000a2ec         dd         0x00000018                                  ; Length of the record
000000000000a2f0         dd         0x00000648                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a2f4         db         0x5c, 0xa6, 2 dup (0xff)                    ; begin 0x4950
000000000000a2f8         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x49da)
000000000000a2fc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a2fd         db  0x44 ; 'D'
000000000000a2fe         db  0x0e ; '.'
000000000000a2ff         db  0x50 ; 'P'
000000000000a300         db  0x02 ; '.'
000000000000a301         db  0x7b ; '{'
000000000000a302         db  0x0a ; '.'
000000000000a303         db  0x0e ; '.'
000000000000a304         db  0x08 ; '.'
000000000000a305         db  0x41 ; 'A'
000000000000a306         db  0x0b ; '.'
000000000000a307         db  0x00 ; '.'
000000000000a308         dd         0x00000010                                  ; Length of the record
000000000000a30c         dd         0x00000664                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a310         db         0xd0, 0xa6, 2 dup (0xff)                    ; begin 0x49e0
000000000000a314         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x49ec)
000000000000a318         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a319         align      4
000000000000a31c         dd         0x00000010                                  ; Length of the record
000000000000a320         dd         0x00000678                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a324         db         0xcc, 0xa6, 2 dup (0xff)                    ; begin 0x49f0
000000000000a328         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x49ff)
000000000000a32c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a32d         align      16
000000000000a330         dd         0x00000018                                  ; Length of the record
000000000000a334         dd         0x0000068c                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a338         db         0xc8, 0xa6, 2 dup (0xff)                    ; begin 0x4a00
000000000000a33c         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x4a98)
000000000000a340         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a341         db  0x44 ; 'D'
000000000000a342         db  0x0e ; '.'
000000000000a343         db  0x50 ; 'P'
000000000000a344         db  0x02 ; '.'
000000000000a345         db  0x8e ; '.'
000000000000a346         db  0x0a ; '.'
000000000000a347         db  0x0e ; '.'
000000000000a348         db  0x08 ; '.'
000000000000a349         db  0x41 ; 'A'
000000000000a34a         db  0x0b ; '.'
000000000000a34b         db  0x00 ; '.'
000000000000a34c         dd         0x00000010                                  ; Length of the record
000000000000a350         dd         0x000006a8                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a354         db         0x4c, 0xa7, 2 dup (0xff)                    ; begin 0x4aa0
000000000000a358         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x4ab0)
000000000000a35c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a35d         align      32
000000000000a360         dd         0x00000010                                  ; Length of the record
000000000000a364         dd         0x000006bc                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a368         db         0x48, 0xa7, 2 dup (0xff)                    ; begin 0x4ab0
000000000000a36c         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4ac1)
000000000000a370         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a371         align      4
000000000000a374         dd         0x00000010                                  ; Length of the record
000000000000a378         dd         0x000006d0                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a37c         db         0x54, 0xa7, 2 dup (0xff)                    ; begin 0x4ad0
000000000000a380         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x4ada)
000000000000a384         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a385         align      8
000000000000a388         dd         0x00000018                                  ; Length of the record
000000000000a38c         dd         0x000006e4                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a390         db         0x50, 0xa7, 2 dup (0xff)                    ; begin 0x4ae0
000000000000a394         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x4b6e)
000000000000a398         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a399         db  0x44 ; 'D'
000000000000a39a         db  0x0e ; '.'
000000000000a39b         db  0x50 ; 'P'
000000000000a39c         db  0x02 ; '.'
000000000000a39d         db  0x7f ; '.'
000000000000a39e         db  0x0a ; '.'
000000000000a39f         db  0x0e ; '.'
000000000000a3a0         db  0x08 ; '.'
000000000000a3a1         db  0x41 ; 'A'
000000000000a3a2         db  0x0b ; '.'
000000000000a3a3         db  0x00 ; '.'
000000000000a3a4         dd         0x00000018                                  ; Length of the record
000000000000a3a8         dd         0x00000700                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a3ac         db         0xc4, 0xa7, 2 dup (0xff)                    ; begin 0x4b70
000000000000a3b0         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x4c01)
000000000000a3b4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a3b5         db  0x44 ; 'D'
000000000000a3b6         db  0x0e ; '.'
000000000000a3b7         db  0x50 ; 'P'
000000000000a3b8         db  0x02 ; '.'
000000000000a3b9         db  0x82 ; '.'
000000000000a3ba         db  0x0a ; '.'
000000000000a3bb         db  0x0e ; '.'
000000000000a3bc         db  0x08 ; '.'
000000000000a3bd         db  0x41 ; 'A'
000000000000a3be         db  0x0b ; '.'
000000000000a3bf         db  0x00 ; '.'
000000000000a3c0         dd         0x00000010                                  ; Length of the record
000000000000a3c4         dd         0x0000071c                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a3c8         db         0x48, 0xa8, 2 dup (0xff)                    ; begin 0x4c10
000000000000a3cc         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x4c1c)
000000000000a3d0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a3d1         align      4
000000000000a3d4         dd         0x00000010                                  ; Length of the record
000000000000a3d8         dd         0x00000730                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a3dc         db         0x44, 0xa8, 2 dup (0xff)                    ; begin 0x4c20
000000000000a3e0         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x4c37)
000000000000a3e4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a3e5         align      8
000000000000a3e8         dd         0x00000010                                  ; Length of the record
000000000000a3ec         dd         0x00000744                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a3f0         db         0x50, 0xa8, 2 dup (0xff)                    ; begin 0x4c40
000000000000a3f4         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4c53)
000000000000a3f8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a3f9         align      4
000000000000a3fc         dd         0x00000010                                  ; Length of the record
000000000000a400         dd         0x00000758                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a404         db         0x5c, 0xa8, 2 dup (0xff)                    ; begin 0x4c60
000000000000a408         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x4c6c)
000000000000a40c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a40d         align      16
000000000000a410         dd         0x00000010                                  ; Length of the record
000000000000a414         dd         0x0000076c                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a418         db         0x58, 0xa8, 2 dup (0xff)                    ; begin 0x4c70
000000000000a41c         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x4c84)
000000000000a420         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a421         align      4
000000000000a424         dd         0x00000010                                  ; Length of the record
000000000000a428         dd         0x00000780                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a42c         db         0x64, 0xa8, 2 dup (0xff)                    ; begin 0x4c90
000000000000a430         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4ca3)
000000000000a434         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a435         align      8
000000000000a438         dd         0x00000014                                  ; Length of the record
000000000000a43c         dd         0x00000794                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a440         db         0x70, 0xa8, 2 dup (0xff)                    ; begin 0x4cb0
000000000000a444         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x4cc8)
000000000000a448         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a449         align      16
000000000000a450         dd         0x00000010                                  ; Length of the record
000000000000a454         dd         0x000007ac                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a458         db         0x78, 0xa8, 2 dup (0xff)                    ; begin 0x4cd0
000000000000a45c         db         0x07, 3 dup (0x00)                          ; length 0x7 (end at 0x4cd7)
000000000000a460         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a461         align      4
000000000000a464         dd         0x00000010                                  ; Length of the record
000000000000a468         dd         0x000007c0                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a46c         db         0x74, 0xa8, 2 dup (0xff)                    ; begin 0x4ce0
000000000000a470         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x4cf4)
000000000000a474         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a475         align      8
000000000000a478         dd         0x0000004c                                  ; Length of the record
000000000000a47c         dd         0x000007d4                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a480         db         0x80, 0xa8, 2 dup (0xff)                    ; begin 0x4d00
000000000000a484         db         0xa9, 0x02, 2 dup (0x00)                    ; length 0x2a9 (end at 0x4fa9)
000000000000a488         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a489         db  0x45 ; 'E'
000000000000a48a         db  0x0e ; '.'
000000000000a48b         db  0x10 ; '.'
000000000000a48c         db  0x8e ; '.'
000000000000a48d         db  0x02 ; '.'
000000000000a48e         db  0x45 ; 'E'
000000000000a48f         db  0x0e ; '.'
000000000000a490         db  0x18 ; '.'
000000000000a491         db  0x8d ; '.'
000000000000a492         db  0x03 ; '.'
000000000000a493         db  0x45 ; 'E'
000000000000a494         db  0x0e ; '.'
000000000000a495         db  0x20 ; ' '
000000000000a496         db  0x8c ; '.'
000000000000a497         db  0x04 ; '.'
000000000000a498         db  0x44 ; 'D'
000000000000a499         db  0x0e ; '.'
000000000000a49a         db  0x28 ; '('
000000000000a49b         db  0x86 ; '.'
000000000000a49c         db  0x05 ; '.'
000000000000a49d         db  0x44 ; 'D'
000000000000a49e         db  0x0e ; '.'
000000000000a49f         db  0x30 ; '0'
000000000000a4a0         db  0x83 ; '.'
000000000000a4a1         db  0x06 ; '.'
000000000000a4a2         db  0x02 ; '.'
000000000000a4a3         db  0x60 ; '`'
000000000000a4a4         db  0x0a ; '.'
000000000000a4a5         db  0x0e ; '.'
000000000000a4a6         db  0x28 ; '('
000000000000a4a7         db  0x44 ; 'D'
000000000000a4a8         db  0x0e ; '.'
000000000000a4a9         db  0x20 ; ' '
000000000000a4aa         db  0x42 ; 'B'
000000000000a4ab         db  0x0e ; '.'
000000000000a4ac         db  0x18 ; '.'
000000000000a4ad         db  0x42 ; 'B'
000000000000a4ae         db  0x0e ; '.'
000000000000a4af         db  0x10 ; '.'
000000000000a4b0         db  0x42 ; 'B'
000000000000a4b1         db  0x0e ; '.'
000000000000a4b2         db  0x08 ; '.'
000000000000a4b3         db  0x47 ; 'G'
000000000000a4b4         db  0x0b ; '.'
000000000000a4b5         db  0x02 ; '.'
000000000000a4b6         db  0xa0 ; '.'
000000000000a4b7         db  0x0a ; '.'
000000000000a4b8         db  0x0e ; '.'
000000000000a4b9         db  0x28 ; '('
000000000000a4ba         db  0x44 ; 'D'
000000000000a4bb         db  0x0e ; '.'
000000000000a4bc         db  0x20 ; ' '
000000000000a4bd         db  0x42 ; 'B'
000000000000a4be         db  0x0e ; '.'
000000000000a4bf         db  0x18 ; '.'
000000000000a4c0         db  0x42 ; 'B'
000000000000a4c1         db  0x0e ; '.'
000000000000a4c2         db  0x10 ; '.'
000000000000a4c3         db  0x42 ; 'B'
000000000000a4c4         db  0x0e ; '.'
000000000000a4c5         db  0x08 ; '.'
000000000000a4c6         db  0x46 ; 'F'
000000000000a4c7         db  0x0b ; '.'
000000000000a4c8         dd         0x00000030                                  ; Length of the record
000000000000a4cc         dd         0x00000824                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a4d0         db         0xe0, 0xaa, 2 dup (0xff)                    ; begin 0x4fb0
000000000000a4d4         db         0x53, 0x01, 2 dup (0x00)                    ; length 0x153 (end at 0x5103)
000000000000a4d8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a4d9         db  0x42 ; 'B'
000000000000a4da         db  0x0e ; '.'
000000000000a4db         db  0x10 ; '.'
000000000000a4dc         db  0x8c ; '.'
000000000000a4dd         db  0x02 ; '.'
000000000000a4de         db  0x41 ; 'A'
000000000000a4df         db  0x0e ; '.'
000000000000a4e0         db  0x18 ; '.'
000000000000a4e1         db  0x86 ; '.'
000000000000a4e2         db  0x03 ; '.'
000000000000a4e3         db  0x41 ; 'A'
000000000000a4e4         db  0x0e ; '.'
000000000000a4e5         db  0x20 ; ' '
000000000000a4e6         db  0x83 ; '.'
000000000000a4e7         db  0x04 ; '.'
000000000000a4e8         db  0x44 ; 'D'
000000000000a4e9         db  0x0e ; '.'
000000000000a4ea         db  0x30 ; '0'
000000000000a4eb         db  0x02 ; '.'
000000000000a4ec         db  0x65 ; 'e'
000000000000a4ed         db  0x0a ; '.'
000000000000a4ee         db  0x0e ; '.'
000000000000a4ef         db  0x20 ; ' '
000000000000a4f0         db  0x41 ; 'A'
000000000000a4f1         db  0x0e ; '.'
000000000000a4f2         db  0x18 ; '.'
000000000000a4f3         db  0x41 ; 'A'
000000000000a4f4         db  0x0e ; '.'
000000000000a4f5         db  0x10 ; '.'
000000000000a4f6         db  0x42 ; 'B'
000000000000a4f7         db  0x0e ; '.'
000000000000a4f8         db  0x08 ; '.'
000000000000a4f9         db  0x47 ; 'G'
000000000000a4fa         db  0x0b ; '.'
000000000000a4fb         db  0x00 ; '.'
000000000000a4fc         dd         0x00000018                                  ; Length of the record
000000000000a500         dd         0x00000858                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a504         db         0x0c, 0xac, 2 dup (0xff)                    ; begin 0x5110
000000000000a508         db         0x75, 3 dup (0x00)                          ; length 0x75 (end at 0x5185)
000000000000a50c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a50d         db  0x41 ; 'A'
000000000000a50e         db  0x0e ; '.'
000000000000a50f         db  0x10 ; '.'
000000000000a510         db  0x83 ; '.'
000000000000a511         db  0x02 ; '.'
000000000000a512         db  0x6e ; 'n'
000000000000a513         db  0x0a ; '.'
000000000000a514         db  0x0e ; '.'
000000000000a515         db  0x08 ; '.'
000000000000a516         db  0x41 ; 'A'
000000000000a517         db  0x0b ; '.'
000000000000a518         dd         0x0000004c                                  ; Length of the record
000000000000a51c         dd         0x00000874                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a520         db         0x70, 0xac, 2 dup (0xff)                    ; begin 0x5190
000000000000a524         db         0x8c, 0x01, 2 dup (0x00)                    ; length 0x18c (end at 0x531c)
000000000000a528         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a529         db  0x42 ; 'B'
000000000000a52a         db  0x0e ; '.'
000000000000a52b         db  0x10 ; '.'
000000000000a52c         db  0x8f ; '.'
000000000000a52d         db  0x02 ; '.'
000000000000a52e         db  0x42 ; 'B'
000000000000a52f         db  0x0e ; '.'
000000000000a530         db  0x18 ; '.'
000000000000a531         db  0x8e ; '.'
000000000000a532         db  0x03 ; '.'
000000000000a533         db  0x44 ; 'D'
000000000000a534         db  0x0e ; '.'
000000000000a535         db  0x20 ; ' '
000000000000a536         db  0x8d ; '.'
000000000000a537         db  0x04 ; '.'
000000000000a538         db  0x42 ; 'B'
000000000000a539         db  0x0e ; '.'
000000000000a53a         db  0x28 ; '('
000000000000a53b         db  0x8c ; '.'
000000000000a53c         db  0x05 ; '.'
000000000000a53d         db  0x44 ; 'D'
000000000000a53e         db  0x0e ; '.'
000000000000a53f         db  0x30 ; '0'
000000000000a540         db  0x86 ; '.'
000000000000a541         db  0x06 ; '.'
000000000000a542         db  0x41 ; 'A'
000000000000a543         db  0x0e ; '.'
000000000000a544         db  0x38 ; '8'
000000000000a545         db  0x83 ; '.'
000000000000a546         db  0x07 ; '.'
000000000000a547         db  0x4a ; 'J'
000000000000a548         db  0x0e ; '.'
000000000000a549         db  0x70 ; 'p'
000000000000a54a         db  0x02 ; '.'
000000000000a54b         db  0xdd ; '.'
000000000000a54c         db  0x0a ; '.'
000000000000a54d         db  0x0e ; '.'
000000000000a54e         db  0x38 ; '8'
000000000000a54f         db  0x41 ; 'A'
000000000000a550         db  0x0e ; '.'
000000000000a551         db  0x30 ; '0'
000000000000a552         db  0x41 ; 'A'
000000000000a553         db  0x0e ; '.'
000000000000a554         db  0x28 ; '('
000000000000a555         db  0x42 ; 'B'
000000000000a556         db  0x0e ; '.'
000000000000a557         db  0x20 ; ' '
000000000000a558         db  0x42 ; 'B'
000000000000a559         db  0x0e ; '.'
000000000000a55a         db  0x18 ; '.'
000000000000a55b         db  0x42 ; 'B'
000000000000a55c         db  0x0e ; '.'
000000000000a55d         db  0x10 ; '.'
000000000000a55e         db  0x42 ; 'B'
000000000000a55f         db  0x0e ; '.'
000000000000a560         db  0x08 ; '.'
000000000000a561         db  0x48 ; 'H'
000000000000a562         db  0x0b ; '.'
000000000000a563         db  0x00 ; '.'
000000000000a564         db  0x00 ; '.'
000000000000a565         db  0x00 ; '.'
000000000000a566         db  0x00 ; '.'
000000000000a567         db  0x00 ; '.'
000000000000a568         dd         0x00000110                                  ; Length of the record
000000000000a56c         dd         0x000008c4                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a570         db         0xb0, 0xad, 2 dup (0xff)                    ; begin 0x5320
000000000000a574         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x5737)
000000000000a578         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a579         db  0x42 ; 'B'
000000000000a57a         db  0x0e ; '.'
000000000000a57b         db  0x10 ; '.'
000000000000a57c         db  0x8f ; '.'
000000000000a57d         db  0x02 ; '.'
000000000000a57e         db  0x42 ; 'B'
000000000000a57f         db  0x0e ; '.'
000000000000a580         db  0x18 ; '.'
000000000000a581         db  0x8e ; '.'
000000000000a582         db  0x03 ; '.'
000000000000a583         db  0x42 ; 'B'
000000000000a584         db  0x0e ; '.'
000000000000a585         db  0x20 ; ' '
000000000000a586         db  0x8d ; '.'
000000000000a587         db  0x04 ; '.'
000000000000a588         db  0x42 ; 'B'
000000000000a589         db  0x0e ; '.'
000000000000a58a         db  0x28 ; '('
000000000000a58b         db  0x8c ; '.'
000000000000a58c         db  0x05 ; '.'
000000000000a58d         db  0x44 ; 'D'
000000000000a58e         db  0x0e ; '.'
000000000000a58f         db  0x30 ; '0'
000000000000a590         db  0x86 ; '.'
000000000000a591         db  0x06 ; '.'
000000000000a592         db  0x41 ; 'A'
000000000000a593         db  0x0e ; '.'
000000000000a594         db  0x38 ; '8'
000000000000a595         db  0x83 ; '.'
000000000000a596         db  0x07 ; '.'
000000000000a597         db  0x4a ; 'J'
000000000000a598         db  0x0e ; '.'
000000000000a599         db  0x60 ; '`'
000000000000a59a         db  0x02 ; '.'
000000000000a59b         db  0xdd ; '.'
000000000000a59c         db  0x0e ; '.'
000000000000a59d         db  0x68 ; 'h'
000000000000a59e         db  0x57 ; 'W'
000000000000a59f         db  0x0e ; '.'
000000000000a5a0         db  0x70 ; 'p'
000000000000a5a1         db  0x42 ; 'B'
000000000000a5a2         db  0x0e ; '.'
000000000000a5a3         db  0x78 ; 'x'
000000000000a5a4         db  0x42 ; 'B'
000000000000a5a5         db  0x0e ; '.'
000000000000a5a6         db  0x80 ; '.'
000000000000a5a7         db  0x01 ; '.'
000000000000a5a8         db  0x42 ; 'B'
000000000000a5a9         db  0x0e ; '.'
000000000000a5aa         db  0x88 ; '.'
000000000000a5ab         db  0x01 ; '.'
000000000000a5ac         db  0x42 ; 'B'
000000000000a5ad         db  0x0e ; '.'
000000000000a5ae         db  0x90 ; '.'
000000000000a5af         db  0x01 ; '.'
000000000000a5b0         db  0x53 ; 'S'
000000000000a5b1         db  0x0e ; '.'
000000000000a5b2         db  0x60 ; '`'
000000000000a5b3         db  0x44 ; 'D'
000000000000a5b4         db  0x0a ; '.'
000000000000a5b5         db  0x0e ; '.'
000000000000a5b6         db  0x38 ; '8'
000000000000a5b7         db  0x41 ; 'A'
000000000000a5b8         db  0x0e ; '.'
000000000000a5b9         db  0x30 ; '0'
000000000000a5ba         db  0x41 ; 'A'
000000000000a5bb         db  0x0e ; '.'
000000000000a5bc         db  0x28 ; '('
000000000000a5bd         db  0x42 ; 'B'
000000000000a5be         db  0x0e ; '.'
000000000000a5bf         db  0x20 ; ' '
000000000000a5c0         db  0x42 ; 'B'
000000000000a5c1         db  0x0e ; '.'
000000000000a5c2         db  0x18 ; '.'
000000000000a5c3         db  0x42 ; 'B'
000000000000a5c4         db  0x0e ; '.'
000000000000a5c5         db  0x10 ; '.'
000000000000a5c6         db  0x42 ; 'B'
000000000000a5c7         db  0x0e ; '.'
000000000000a5c8         db  0x08 ; '.'
000000000000a5c9         db  0x44 ; 'D'
000000000000a5ca         db  0x0b ; '.'
000000000000a5cb         db  0x02 ; '.'
000000000000a5cc         db  0x78 ; 'x'
000000000000a5cd         db  0x0a ; '.'
000000000000a5ce         db  0x0e ; '.'
000000000000a5cf         db  0x68 ; 'h'
000000000000a5d0         db  0x48 ; 'H'
000000000000a5d1         db  0x0b ; '.'
000000000000a5d2         db  0x5a ; 'Z'
000000000000a5d3         db  0x0a ; '.'
000000000000a5d4         db  0x0e ; '.'
000000000000a5d5         db  0x38 ; '8'
000000000000a5d6         db  0x47 ; 'G'
000000000000a5d7         db  0x0e ; '.'
000000000000a5d8         db  0x30 ; '0'
000000000000a5d9         db  0x41 ; 'A'
000000000000a5da         db  0x0e ; '.'
000000000000a5db         db  0x28 ; '('
000000000000a5dc         db  0x42 ; 'B'
000000000000a5dd         db  0x0e ; '.'
000000000000a5de         db  0x20 ; ' '
000000000000a5df         db  0x42 ; 'B'
000000000000a5e0         db  0x0e ; '.'
000000000000a5e1         db  0x18 ; '.'
000000000000a5e2         db  0x42 ; 'B'
000000000000a5e3         db  0x0e ; '.'
000000000000a5e4         db  0x10 ; '.'
000000000000a5e5         db  0x42 ; 'B'
000000000000a5e6         db  0x0e ; '.'
000000000000a5e7         db  0x08 ; '.'
000000000000a5e8         db  0x56 ; 'V'
000000000000a5e9         db  0x0b ; '.'
000000000000a5ea         db  0x5e ; '^'
000000000000a5eb         db  0x0a ; '.'
000000000000a5ec         db  0x0e ; '.'
000000000000a5ed         db  0x38 ; '8'
000000000000a5ee         db  0x52 ; 'R'
000000000000a5ef         db  0x0e ; '.'
000000000000a5f0         db  0x30 ; '0'
000000000000a5f1         db  0x41 ; 'A'
000000000000a5f2         db  0x0e ; '.'
000000000000a5f3         db  0x28 ; '('
000000000000a5f4         db  0x42 ; 'B'
000000000000a5f5         db  0x0e ; '.'
000000000000a5f6         db  0x20 ; ' '
000000000000a5f7         db  0x42 ; 'B'
000000000000a5f8         db  0x0e ; '.'
000000000000a5f9         db  0x18 ; '.'
000000000000a5fa         db  0x42 ; 'B'
000000000000a5fb         db  0x0e ; '.'
000000000000a5fc         db  0x10 ; '.'
000000000000a5fd         db  0x42 ; 'B'
000000000000a5fe         db  0x0e ; '.'
000000000000a5ff         db  0x08 ; '.'
000000000000a600         db  0x4f ; 'O'
000000000000a601         db  0x0b ; '.'
000000000000a602         db  0x62 ; 'b'
000000000000a603         db  0x0a ; '.'
000000000000a604         db  0x0e ; '.'
000000000000a605         db  0x38 ; '8'
000000000000a606         db  0x50 ; 'P'
000000000000a607         db  0x0e ; '.'
000000000000a608         db  0x30 ; '0'
000000000000a609         db  0x41 ; 'A'
000000000000a60a         db  0x0e ; '.'
000000000000a60b         db  0x28 ; '('
000000000000a60c         db  0x42 ; 'B'
000000000000a60d         db  0x0e ; '.'
000000000000a60e         db  0x20 ; ' '
000000000000a60f         db  0x42 ; 'B'
000000000000a610         db  0x0e ; '.'
000000000000a611         db  0x18 ; '.'
000000000000a612         db  0x42 ; 'B'
000000000000a613         db  0x0e ; '.'
000000000000a614         db  0x10 ; '.'
000000000000a615         db  0x42 ; 'B'
000000000000a616         db  0x0e ; '.'
000000000000a617         db  0x08 ; '.'
000000000000a618         db  0x55 ; 'U'
000000000000a619         db  0x0b ; '.'
000000000000a61a         db  0x66 ; 'f'
000000000000a61b         db  0x0e ; '.'
000000000000a61c         db  0x68 ; 'h'
000000000000a61d         db  0x42 ; 'B'
000000000000a61e         db  0x0e ; '.'
000000000000a61f         db  0x70 ; 'p'
000000000000a620         db  0x5c ; '\'
000000000000a621         db  0x0e ; '.'
000000000000a622         db  0x68 ; 'h'
000000000000a623         db  0x41 ; 'A'
000000000000a624         db  0x0e ; '.'
000000000000a625         db  0x60 ; '`'
000000000000a626         db  0x44 ; 'D'
000000000000a627         db  0x0a ; '.'
000000000000a628         db  0x0e ; '.'
000000000000a629         db  0x38 ; '8'
000000000000a62a         db  0x41 ; 'A'
000000000000a62b         db  0x0e ; '.'
000000000000a62c         db  0x30 ; '0'
000000000000a62d         db  0x41 ; 'A'
000000000000a62e         db  0x0e ; '.'
000000000000a62f         db  0x28 ; '('
000000000000a630         db  0x42 ; 'B'
000000000000a631         db  0x0e ; '.'
000000000000a632         db  0x20 ; ' '
000000000000a633         db  0x42 ; 'B'
000000000000a634         db  0x0e ; '.'
000000000000a635         db  0x18 ; '.'
000000000000a636         db  0x42 ; 'B'
000000000000a637         db  0x0e ; '.'
000000000000a638         db  0x10 ; '.'
000000000000a639         db  0x42 ; 'B'
000000000000a63a         db  0x0e ; '.'
000000000000a63b         db  0x08 ; '.'
000000000000a63c         db  0x45 ; 'E'
000000000000a63d         db  0x0b ; '.'
000000000000a63e         db  0x68 ; 'h'
000000000000a63f         db  0x0a ; '.'
000000000000a640         db  0x0e ; '.'
000000000000a641         db  0x68 ; 'h'
000000000000a642         db  0x48 ; 'H'
000000000000a643         db  0x0b ; '.'
000000000000a644         db  0x72 ; 'r'
000000000000a645         db  0x0e ; '.'
000000000000a646         db  0x68 ; 'h'
000000000000a647         db  0x45 ; 'E'
000000000000a648         db  0x0e ; '.'
000000000000a649         db  0x70 ; 'p'
000000000000a64a         db  0x42 ; 'B'
000000000000a64b         db  0x0e ; '.'
000000000000a64c         db  0x78 ; 'x'
000000000000a64d         db  0x42 ; 'B'
000000000000a64e         db  0x0e ; '.'
000000000000a64f         db  0x80 ; '.'
000000000000a650         db  0x01 ; '.'
000000000000a651         db  0x5e ; '^'
000000000000a652         db  0x0e ; '.'
000000000000a653         db  0x60 ; '`'
000000000000a654         db  0x44 ; 'D'
000000000000a655         db  0x0a ; '.'
000000000000a656         db  0x0e ; '.'
000000000000a657         db  0x38 ; '8'
000000000000a658         db  0x41 ; 'A'
000000000000a659         db  0x0e ; '.'
000000000000a65a         db  0x30 ; '0'
000000000000a65b         db  0x41 ; 'A'
000000000000a65c         db  0x0e ; '.'
000000000000a65d         db  0x28 ; '('
000000000000a65e         db  0x42 ; 'B'
000000000000a65f         db  0x0e ; '.'
000000000000a660         db  0x20 ; ' '
000000000000a661         db  0x42 ; 'B'
000000000000a662         db  0x0e ; '.'
000000000000a663         db  0x18 ; '.'
000000000000a664         db  0x42 ; 'B'
000000000000a665         db  0x0e ; '.'
000000000000a666         db  0x10 ; '.'
000000000000a667         db  0x42 ; 'B'
000000000000a668         db  0x0e ; '.'
000000000000a669         db  0x08 ; '.'
000000000000a66a         db  0x41 ; 'A'
000000000000a66b         db  0x0b ; '.'
000000000000a66c         db  0x79 ; 'y'
000000000000a66d         db  0x0a ; '.'
000000000000a66e         db  0x0e ; '.'
000000000000a66f         db  0x68 ; 'h'
000000000000a670         db  0x42 ; 'B'
000000000000a671         db  0x0e ; '.'
000000000000a672         db  0x70 ; 'p'
000000000000a673         db  0x42 ; 'B'
000000000000a674         db  0x0e ; '.'
000000000000a675         db  0x78 ; 'x'
000000000000a676         db  0x42 ; 'B'
000000000000a677         db  0x0e ; '.'
000000000000a678         db  0x80 ; '.'
000000000000a679         db  0x01 ; '.'
000000000000a67a         db  0x51 ; 'Q'
000000000000a67b         db  0x0b ; '.'
000000000000a67c         dd         0x00000010                                  ; Length of the record
000000000000a680         dd         0x000009d8                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a684         db         0xbc, 0xb0, 2 dup (0xff)                    ; begin 0x5740
000000000000a688         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x5760)
000000000000a68c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a68d         align      16
000000000000a690         dd         0x00000018                                  ; Length of the record
000000000000a694         dd         0x000009ec                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a698         db         0xc8, 0xb0, 2 dup (0xff)                    ; begin 0x5760
000000000000a69c         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x57d8)
000000000000a6a0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a6a1         db  0x44 ; 'D'
000000000000a6a2         db  0x0e ; '.'
000000000000a6a3         db  0x70 ; 'p'
000000000000a6a4         db  0x02 ; '.'
000000000000a6a5         db  0x60 ; '`'
000000000000a6a6         db  0x0a ; '.'
000000000000a6a7         db  0x0e ; '.'
000000000000a6a8         db  0x08 ; '.'
000000000000a6a9         db  0x41 ; 'A'
000000000000a6aa         db  0x0b ; '.'
000000000000a6ab         db  0x00 ; '.'
000000000000a6ac         dd         0x00000028                                  ; Length of the record
000000000000a6b0         dd         0x00000a08                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a6b4         db         0x2c, 0xb1, 2 dup (0xff)                    ; begin 0x57e0
000000000000a6b8         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x58b5)
000000000000a6bc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a6bd         db  0x41 ; 'A'
000000000000a6be         db  0x0e ; '.'
000000000000a6bf         db  0x10 ; '.'
000000000000a6c0         db  0x86 ; '.'
000000000000a6c1         db  0x02 ; '.'
000000000000a6c2         db  0x41 ; 'A'
000000000000a6c3         db  0x0e ; '.'
000000000000a6c4         db  0x18 ; '.'
000000000000a6c5         db  0x83 ; '.'
000000000000a6c6         db  0x03 ; '.'
000000000000a6c7         db  0x50 ; 'P'
000000000000a6c8         db  0x0e ; '.'
000000000000a6c9         db  0xd0 ; '.'
000000000000a6ca         db  0x01 ; '.'
000000000000a6cb         db  0x02 ; '.'
000000000000a6cc         db  0xab ; '.'
000000000000a6cd         db  0x0a ; '.'
000000000000a6ce         db  0x0e ; '.'
000000000000a6cf         db  0x18 ; '.'
000000000000a6d0         db  0x41 ; 'A'
000000000000a6d1         db  0x0e ; '.'
000000000000a6d2         db  0x10 ; '.'
000000000000a6d3         db  0x41 ; 'A'
000000000000a6d4         db  0x0e ; '.'
000000000000a6d5         db  0x08 ; '.'
000000000000a6d6         db  0x41 ; 'A'
000000000000a6d7         db  0x0b ; '.'
000000000000a6d8         dd         0x0000001c                                  ; Length of the record
000000000000a6dc         dd         0x00000a34                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a6e0         db         0xe0, 0xb1, 2 dup (0xff)                    ; begin 0x58c0
000000000000a6e4         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x5940)
000000000000a6e8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a6e9         db  0x41 ; 'A'
000000000000a6ea         db  0x0e ; '.'
000000000000a6eb         db  0x10 ; '.'
000000000000a6ec         db  0x83 ; '.'
000000000000a6ed         db  0x02 ; '.'
000000000000a6ee         db  0x02 ; '.'
000000000000a6ef         db  0x7a ; 'z'
000000000000a6f0         db  0x0e ; '.'
000000000000a6f1         db  0x08 ; '.'
000000000000a6f2         db  0x00 ; '.'
000000000000a6f3         db  0x00 ; '.'
000000000000a6f4         db  0x00 ; '.'
000000000000a6f5         db  0x00 ; '.'
000000000000a6f6         db  0x00 ; '.'
000000000000a6f7         db  0x00 ; '.'
000000000000a6f8         dd         0x00000018                                  ; Length of the record
000000000000a6fc         dd         0x00000a54                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a700         db         0x40, 0xb2, 2 dup (0xff)                    ; begin 0x5940
000000000000a704         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x595a)
000000000000a708         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a709         db  0x41 ; 'A'
000000000000a70a         db  0x0e ; '.'
000000000000a70b         db  0x10 ; '.'
000000000000a70c         db  0x83 ; '.'
000000000000a70d         db  0x02 ; '.'
000000000000a70e         db  0x53 ; 'S'
000000000000a70f         db  0x0a ; '.'
000000000000a710         db  0x0e ; '.'
000000000000a711         db  0x08 ; '.'
000000000000a712         db  0x41 ; 'A'
000000000000a713         db  0x0b ; '.'
000000000000a714         dd         0x00000010                                  ; Length of the record
000000000000a718         dd         0x00000a70                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a71c         db         0x44, 0xb2, 2 dup (0xff)                    ; begin 0x5960
000000000000a720         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x5984)
000000000000a724         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a725         db  0x5f ; '_'
000000000000a726         db  0x0e ; '.'
000000000000a727         db  0x10 ; '.'
000000000000a728         dd         0x00000010                                  ; Length of the record
000000000000a72c         dd         0x00000a84                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a730         db         0x60, 0xb2, 2 dup (0xff)                    ; begin 0x5990
000000000000a734         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x5992)
000000000000a738         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a739         align      4
000000000000a73c         dd         0x00000020                                  ; Length of the record
000000000000a740         dd         0x00000a98                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a744         db         0x5c, 0xb2, 2 dup (0xff)                    ; begin 0x59a0
000000000000a748         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x59d6)
000000000000a74c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a74d         db  0x44 ; 'D'
000000000000a74e         db  0x0e ; '.'
000000000000a74f         db  0x10 ; '.'
000000000000a750         db  0x83 ; '.'
000000000000a751         db  0x02 ; '.'
000000000000a752         db  0x5d ; ']'
000000000000a753         db  0x0a ; '.'
000000000000a754         db  0x0e ; '.'
000000000000a755         db  0x08 ; '.'
000000000000a756         db  0x47 ; 'G'
000000000000a757         db  0x0b ; '.'
000000000000a758         db  0x48 ; 'H'
000000000000a759         db  0x0a ; '.'
000000000000a75a         db  0x0e ; '.'
000000000000a75b         db  0x08 ; '.'
000000000000a75c         db  0x41 ; 'A'
000000000000a75d         db  0x0b ; '.'
000000000000a75e         db  0x00 ; '.'
000000000000a75f         db  0x00 ; '.'
000000000000a760         dd         0x00000010                                  ; Length of the record
000000000000a764         dd         0x00000abc                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a768         db         0x78, 0xb2, 2 dup (0xff)                    ; begin 0x59e0
000000000000a76c         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x5a04)
000000000000a770         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a771         db  0x5f ; '_'
000000000000a772         db  0x0e ; '.'
000000000000a773         db  0x10 ; '.'
000000000000a774         dd         0x00000014                                  ; Length of the record
000000000000a778         dd         0x00000ad0                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a77c         db         0x94, 0xb2, 2 dup (0xff)                    ; begin 0x5a10
000000000000a780         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x5a92)
000000000000a784         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a785         db  0x02 ; '.'
000000000000a786         db  0x5f ; '_'
000000000000a787         db  0x0e ; '.'
000000000000a788         db  0x10 ; '.'
000000000000a789         db  0x49 ; 'I'
000000000000a78a         db  0x0e ; '.'
000000000000a78b         db  0x08 ; '.'
000000000000a78c         dd         0x00000014                                  ; Length of the record
000000000000a790         dd         0x00000ae8                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a794         db         0x0c, 0xb3, 2 dup (0xff)                    ; begin 0x5aa0
000000000000a798         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x5aea)
000000000000a79c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a79d         db  0x02 ; '.'
000000000000a79e         db  0x45 ; 'E'
000000000000a79f         db  0x0e ; '.'
000000000000a7a0         db  0x10 ; '.'
000000000000a7a1         db  0x00 ; '.'
000000000000a7a2         db  0x00 ; '.'
000000000000a7a3         db  0x00 ; '.'
000000000000a7a4         dd         0x00000018                                  ; Length of the record
000000000000a7a8         dd         0x00000b00                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a7ac         db         0x44, 0xb3, 2 dup (0xff)                    ; begin 0x5af0
000000000000a7b0         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x5b07)
000000000000a7b4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a7b5         db  0x41 ; 'A'
000000000000a7b6         db  0x0e ; '.'
000000000000a7b7         db  0x10 ; '.'
000000000000a7b8         db  0x83 ; '.'
000000000000a7b9         db  0x02 ; '.'
000000000000a7ba         db  0x51 ; 'Q'
000000000000a7bb         db  0x0e ; '.'
000000000000a7bc         db  0x08 ; '.'
000000000000a7bd         db  0x00 ; '.'
000000000000a7be         db  0x00 ; '.'
000000000000a7bf         db  0x00 ; '.'
000000000000a7c0         dd         0x00000018                                  ; Length of the record
000000000000a7c4         dd         0x00000b1c                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a7c8         db         0x48, 0xb3, 2 dup (0xff)                    ; begin 0x5b10
000000000000a7cc         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x5b3e)
000000000000a7d0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a7d1         db  0x47 ; 'G'
000000000000a7d2         db  0x0e ; '.'
000000000000a7d3         db  0x10 ; '.'
000000000000a7d4         db  0x61 ; 'a'
000000000000a7d5         db  0x0a ; '.'
000000000000a7d6         db  0x0e ; '.'
000000000000a7d7         db  0x08 ; '.'
000000000000a7d8         db  0x41 ; 'A'
000000000000a7d9         db  0x0b ; '.'
000000000000a7da         db  0x00 ; '.'
000000000000a7db         db  0x00 ; '.'
000000000000a7dc         dd         0x00000024                                  ; Length of the record
000000000000a7e0         dd         0x00000b38                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a7e4         db         0x5c, 0xb3, 2 dup (0xff)                    ; begin 0x5b40
000000000000a7e8         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x5b68)
000000000000a7ec         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a7ed         db  0x41 ; 'A'
000000000000a7ee         db  0x0e ; '.'
000000000000a7ef         db  0x10 ; '.'
000000000000a7f0         db  0x86 ; '.'
000000000000a7f1         db  0x02 ; '.'
000000000000a7f2         db  0x41 ; 'A'
000000000000a7f3         db  0x0e ; '.'
000000000000a7f4         db  0x18 ; '.'
000000000000a7f5         db  0x83 ; '.'
000000000000a7f6         db  0x03 ; '.'
000000000000a7f7         db  0x4d ; 'M'
000000000000a7f8         db  0x0e ; '.'
000000000000a7f9         db  0x20 ; ' '
000000000000a7fa         db  0x49 ; 'I'
000000000000a7fb         db  0x0e ; '.'
000000000000a7fc         db  0x18 ; '.'
000000000000a7fd         db  0x47 ; 'G'
000000000000a7fe         db  0x0e ; '.'
000000000000a7ff         db  0x10 ; '.'
000000000000a800         db  0x41 ; 'A'
000000000000a801         db  0x0e ; '.'
000000000000a802         db  0x08 ; '.'
000000000000a803         db  0x00 ; '.'
000000000000a804         dd         0x00000018                                  ; Length of the record
000000000000a808         dd         0x00000b60                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a80c         db         0x64, 0xb3, 2 dup (0xff)                    ; begin 0x5b70
000000000000a810         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5b83)
000000000000a814         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a815         db  0x41 ; 'A'
000000000000a816         db  0x0e ; '.'
000000000000a817         db  0x10 ; '.'
000000000000a818         db  0x83 ; '.'
000000000000a819         db  0x02 ; '.'
000000000000a81a         db  0x50 ; 'P'
000000000000a81b         db  0x0e ; '.'
000000000000a81c         db  0x08 ; '.'
000000000000a81d         db  0x00 ; '.'
000000000000a81e         db  0x00 ; '.'
000000000000a81f         db  0x00 ; '.'
000000000000a820         dd         0x00000014                                  ; Length of the record
000000000000a824         dd         0x00000b7c                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a828         db         0x68, 0xb3, 2 dup (0xff)                    ; begin 0x5b90
000000000000a82c         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x5bc5)
000000000000a830         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a831         db  0x4b ; 'K'
000000000000a832         db  0x0e ; '.'
000000000000a833         db  0x10 ; '.'
000000000000a834         db  0x00 ; '.'
000000000000a835         db  0x00 ; '.'
000000000000a836         db  0x00 ; '.'
000000000000a837         db  0x00 ; '.'
000000000000a838         dd         0x0000003c                                  ; Length of the record
000000000000a83c         dd         0x00000b94                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a840         db         0x90, 0xb3, 2 dup (0xff)                    ; begin 0x5bd0
000000000000a844         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x5c53)
000000000000a848         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a849         db  0x42 ; 'B'
000000000000a84a         db  0x0e ; '.'
000000000000a84b         db  0x10 ; '.'
000000000000a84c         db  0x8d ; '.'
000000000000a84d         db  0x02 ; '.'
000000000000a84e         db  0x42 ; 'B'
000000000000a84f         db  0x0e ; '.'
000000000000a850         db  0x18 ; '.'
000000000000a851         db  0x8c ; '.'
000000000000a852         db  0x03 ; '.'
000000000000a853         db  0x44 ; 'D'
000000000000a854         db  0x0e ; '.'
000000000000a855         db  0x20 ; ' '
000000000000a856         db  0x86 ; '.'
000000000000a857         db  0x04 ; '.'
000000000000a858         db  0x41 ; 'A'
000000000000a859         db  0x0e ; '.'
000000000000a85a         db  0x28 ; '('
000000000000a85b         db  0x83 ; '.'
000000000000a85c         db  0x05 ; '.'
000000000000a85d         db  0x4a ; 'J'
000000000000a85e         db  0x0e ; '.'
000000000000a85f         db  0x40 ; '@'
000000000000a860         db  0x02 ; '.'
000000000000a861         db  0x64 ; 'd'
000000000000a862         db  0x0a ; '.'
000000000000a863         db  0x0e ; '.'
000000000000a864         db  0x28 ; '('
000000000000a865         db  0x41 ; 'A'
000000000000a866         db  0x0e ; '.'
000000000000a867         db  0x20 ; ' '
000000000000a868         db  0x41 ; 'A'
000000000000a869         db  0x0e ; '.'
000000000000a86a         db  0x18 ; '.'
000000000000a86b         db  0x42 ; 'B'
000000000000a86c         db  0x0e ; '.'
000000000000a86d         db  0x10 ; '.'
000000000000a86e         db  0x42 ; 'B'
000000000000a86f         db  0x0e ; '.'
000000000000a870         db  0x08 ; '.'
000000000000a871         db  0x41 ; 'A'
000000000000a872         db  0x0b ; '.'
000000000000a873         db  0x00 ; '.'
000000000000a874         db  0x00 ; '.'
000000000000a875         db  0x00 ; '.'
000000000000a876         db  0x00 ; '.'
000000000000a877         db  0x00 ; '.'
000000000000a878         dd         0x0000003c                                  ; Length of the record
000000000000a87c         dd         0x00000bd4                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a880         db         0xe0, 0xb3, 2 dup (0xff)                    ; begin 0x5c60
000000000000a884         db         0xf2, 3 dup (0x00)                          ; length 0xf2 (end at 0x5d52)
000000000000a888         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a889         db  0x42 ; 'B'
000000000000a88a         db  0x0e ; '.'
000000000000a88b         db  0x10 ; '.'
000000000000a88c         db  0x8d ; '.'
000000000000a88d         db  0x02 ; '.'
000000000000a88e         db  0x42 ; 'B'
000000000000a88f         db  0x0e ; '.'
000000000000a890         db  0x18 ; '.'
000000000000a891         db  0x8c ; '.'
000000000000a892         db  0x03 ; '.'
000000000000a893         db  0x44 ; 'D'
000000000000a894         db  0x0e ; '.'
000000000000a895         db  0x20 ; ' '
000000000000a896         db  0x86 ; '.'
000000000000a897         db  0x04 ; '.'
000000000000a898         db  0x41 ; 'A'
000000000000a899         db  0x0e ; '.'
000000000000a89a         db  0x28 ; '('
000000000000a89b         db  0x83 ; '.'
000000000000a89c         db  0x05 ; '.'
000000000000a89d         db  0x4a ; 'J'
000000000000a89e         db  0x0e ; '.'
000000000000a89f         db  0xa0 ; '.'
000000000000a8a0         db  0x10 ; '.'
000000000000a8a1         db  0x02 ; '.'
000000000000a8a2         db  0x8f ; '.'
000000000000a8a3         db  0x0a ; '.'
000000000000a8a4         db  0x0e ; '.'
000000000000a8a5         db  0x28 ; '('
000000000000a8a6         db  0x41 ; 'A'
000000000000a8a7         db  0x0e ; '.'
000000000000a8a8         db  0x20 ; ' '
000000000000a8a9         db  0x41 ; 'A'
000000000000a8aa         db  0x0e ; '.'
000000000000a8ab         db  0x18 ; '.'
000000000000a8ac         db  0x42 ; 'B'
000000000000a8ad         db  0x0e ; '.'
000000000000a8ae         db  0x10 ; '.'
000000000000a8af         db  0x42 ; 'B'
000000000000a8b0         db  0x0e ; '.'
000000000000a8b1         db  0x08 ; '.'
000000000000a8b2         db  0x48 ; 'H'
000000000000a8b3         db  0x0b ; '.'
000000000000a8b4         db  0x00 ; '.'
000000000000a8b5         db  0x00 ; '.'
000000000000a8b6         db  0x00 ; '.'
000000000000a8b7         db  0x00 ; '.'
000000000000a8b8         dd         0x0000004c                                  ; Length of the record
000000000000a8bc         dd         0x00000c14                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a8c0         db         0xa0, 0xb4, 2 dup (0xff)                    ; begin 0x5d60
000000000000a8c4         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x5ddd)
000000000000a8c8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a8c9         db  0x42 ; 'B'
000000000000a8ca         db  0x0e ; '.'
000000000000a8cb         db  0x10 ; '.'
000000000000a8cc         db  0x8c ; '.'
000000000000a8cd         db  0x02 ; '.'
000000000000a8ce         db  0x41 ; 'A'
000000000000a8cf         db  0x0e ; '.'
000000000000a8d0         db  0x18 ; '.'
000000000000a8d1         db  0x86 ; '.'
000000000000a8d2         db  0x03 ; '.'
000000000000a8d3         db  0x44 ; 'D'
000000000000a8d4         db  0x0e ; '.'
000000000000a8d5         db  0x20 ; ' '
000000000000a8d6         db  0x83 ; '.'
000000000000a8d7         db  0x04 ; '.'
000000000000a8d8         db  0x69 ; 'i'
000000000000a8d9         db  0x0a ; '.'
000000000000a8da         db  0x0e ; '.'
000000000000a8db         db  0x18 ; '.'
000000000000a8dc         db  0x41 ; 'A'
000000000000a8dd         db  0x0e ; '.'
000000000000a8de         db  0x10 ; '.'
000000000000a8df         db  0x42 ; 'B'
000000000000a8e0         db  0x0e ; '.'
000000000000a8e1         db  0x08 ; '.'
000000000000a8e2         db  0x45 ; 'E'
000000000000a8e3         db  0x0b ; '.'
000000000000a8e4         db  0x55 ; 'U'
000000000000a8e5         db  0x0a ; '.'
000000000000a8e6         db  0x0e ; '.'
000000000000a8e7         db  0x18 ; '.'
000000000000a8e8         db  0x41 ; 'A'
000000000000a8e9         db  0x0e ; '.'
000000000000a8ea         db  0x10 ; '.'
000000000000a8eb         db  0x42 ; 'B'
000000000000a8ec         db  0x0e ; '.'
000000000000a8ed         db  0x08 ; '.'
000000000000a8ee         db  0x48 ; 'H'
000000000000a8ef         db  0x0b ; '.'
000000000000a8f0         db  0x41 ; 'A'
000000000000a8f1         db  0x0a ; '.'
000000000000a8f2         db  0x0e ; '.'
000000000000a8f3         db  0x18 ; '.'
000000000000a8f4         db  0x46 ; 'F'
000000000000a8f5         db  0x0e ; '.'
000000000000a8f6         db  0x10 ; '.'
000000000000a8f7         db  0x42 ; 'B'
000000000000a8f8         db  0x0e ; '.'
000000000000a8f9         db  0x08 ; '.'
000000000000a8fa         db  0x47 ; 'G'
000000000000a8fb         db  0x0b ; '.'
000000000000a8fc         db  0x49 ; 'I'
000000000000a8fd         db  0x0e ; '.'
000000000000a8fe         db  0x18 ; '.'
000000000000a8ff         db  0x41 ; 'A'
000000000000a900         db  0x0e ; '.'
000000000000a901         db  0x10 ; '.'
000000000000a902         db  0x42 ; 'B'
000000000000a903         db  0x0e ; '.'
000000000000a904         db  0x08 ; '.'
000000000000a905         db  0x00 ; '.'
000000000000a906         db  0x00 ; '.'
000000000000a907         db  0x00 ; '.'
000000000000a908         dd         0x0000001c                                  ; Length of the record
000000000000a90c         dd         0x00000c64                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a910         db         0xd0, 0xb4, 2 dup (0xff)                    ; begin 0x5de0
000000000000a914         db         0x6e, 3 dup (0x00)                          ; length 0x6e (end at 0x5e4e)
000000000000a918         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a919         db  0x44 ; 'D'
000000000000a91a         db  0x0e ; '.'
000000000000a91b         db  0x60 ; '`'
000000000000a91c         db  0x7f ; '.'
000000000000a91d         db  0x0a ; '.'
000000000000a91e         db  0x0e ; '.'
000000000000a91f         db  0x08 ; '.'
000000000000a920         db  0x45 ; 'E'
000000000000a921         db  0x0b ; '.'
000000000000a922         db  0x00 ; '.'
000000000000a923         db  0x00 ; '.'
000000000000a924         db  0x00 ; '.'
000000000000a925         db  0x00 ; '.'
000000000000a926         db  0x00 ; '.'
000000000000a927         db  0x00 ; '.'
000000000000a928         dd         0x0000001c                                  ; Length of the record
000000000000a92c         dd         0x00000c84                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a930         db         0x20, 0xb5, 2 dup (0xff)                    ; begin 0x5e50
000000000000a934         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x5eb0)
000000000000a938         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a939         db  0x44 ; 'D'
000000000000a93a         db  0x0e ; '.'
000000000000a93b         db  0x10 ; '.'
000000000000a93c         db  0x75 ; 'u'
000000000000a93d         db  0x0a ; '.'
000000000000a93e         db  0x0e ; '.'
000000000000a93f         db  0x08 ; '.'
000000000000a940         db  0x47 ; 'G'
000000000000a941         db  0x0b ; '.'
000000000000a942         db  0x5f ; '_'
000000000000a943         db  0x0e ; '.'
000000000000a944         db  0x08 ; '.'
000000000000a945         db  0x00 ; '.'
000000000000a946         db  0x00 ; '.'
000000000000a947         db  0x00 ; '.'
000000000000a948         dd         0x0000001c                                  ; Length of the record
000000000000a94c         dd         0x00000ca4                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a950         db         0x60, 0xb5, 2 dup (0xff)                    ; begin 0x5eb0
000000000000a954         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x5eec)
000000000000a958         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a959         db  0x44 ; 'D'
000000000000a95a         db  0x0e ; '.'
000000000000a95b         db  0x10 ; '.'
000000000000a95c         db  0x61 ; 'a'
000000000000a95d         db  0x0a ; '.'
000000000000a95e         db  0x0e ; '.'
000000000000a95f         db  0x08 ; '.'
000000000000a960         db  0x4b ; 'K'
000000000000a961         db  0x0b ; '.'
000000000000a962         db  0x4b ; 'K'
000000000000a963         db  0x0e ; '.'
000000000000a964         db  0x08 ; '.'
000000000000a965         db  0x00 ; '.'
000000000000a966         db  0x00 ; '.'
000000000000a967         db  0x00 ; '.'
000000000000a968         dd         0x0000004c                                  ; Length of the record
000000000000a96c         dd         0x00000cc4                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a970         db         0x80, 0xb5, 2 dup (0xff)                    ; begin 0x5ef0
000000000000a974         db         0x68, 0x01, 2 dup (0x00)                    ; length 0x168 (end at 0x6058)
000000000000a978         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a979         db  0x42 ; 'B'
000000000000a97a         db  0x0e ; '.'
000000000000a97b         db  0x10 ; '.'
000000000000a97c         db  0x8f ; '.'
000000000000a97d         db  0x02 ; '.'
000000000000a97e         db  0x42 ; 'B'
000000000000a97f         db  0x0e ; '.'
000000000000a980         db  0x18 ; '.'
000000000000a981         db  0x8e ; '.'
000000000000a982         db  0x03 ; '.'
000000000000a983         db  0x45 ; 'E'
000000000000a984         db  0x0e ; '.'
000000000000a985         db  0x20 ; ' '
000000000000a986         db  0x8d ; '.'
000000000000a987         db  0x04 ; '.'
000000000000a988         db  0x42 ; 'B'
000000000000a989         db  0x0e ; '.'
000000000000a98a         db  0x28 ; '('
000000000000a98b         db  0x8c ; '.'
000000000000a98c         db  0x05 ; '.'
000000000000a98d         db  0x44 ; 'D'
000000000000a98e         db  0x0e ; '.'
000000000000a98f         db  0x30 ; '0'
000000000000a990         db  0x86 ; '.'
000000000000a991         db  0x06 ; '.'
000000000000a992         db  0x41 ; 'A'
000000000000a993         db  0x0e ; '.'
000000000000a994         db  0x38 ; '8'
000000000000a995         db  0x83 ; '.'
000000000000a996         db  0x07 ; '.'
000000000000a997         db  0x4d ; 'M'
000000000000a998         db  0x0e ; '.'
000000000000a999         db  0x60 ; '`'
000000000000a99a         db  0x02 ; '.'
000000000000a99b         db  0xc5 ; '.'
000000000000a99c         db  0x0a ; '.'
000000000000a99d         db  0x0e ; '.'
000000000000a99e         db  0x38 ; '8'
000000000000a99f         db  0x41 ; 'A'
000000000000a9a0         db  0x0e ; '.'
000000000000a9a1         db  0x30 ; '0'
000000000000a9a2         db  0x41 ; 'A'
000000000000a9a3         db  0x0e ; '.'
000000000000a9a4         db  0x28 ; '('
000000000000a9a5         db  0x42 ; 'B'
000000000000a9a6         db  0x0e ; '.'
000000000000a9a7         db  0x20 ; ' '
000000000000a9a8         db  0x42 ; 'B'
000000000000a9a9         db  0x0e ; '.'
000000000000a9aa         db  0x18 ; '.'
000000000000a9ab         db  0x42 ; 'B'
000000000000a9ac         db  0x0e ; '.'
000000000000a9ad         db  0x10 ; '.'
000000000000a9ae         db  0x42 ; 'B'
000000000000a9af         db  0x0e ; '.'
000000000000a9b0         db  0x08 ; '.'
000000000000a9b1         db  0x44 ; 'D'
000000000000a9b2         db  0x0b ; '.'
000000000000a9b3         db  0x00 ; '.'
000000000000a9b4         db  0x00 ; '.'
000000000000a9b5         db  0x00 ; '.'
000000000000a9b6         db  0x00 ; '.'
000000000000a9b7         db  0x00 ; '.'
000000000000a9b8         dd         0x0000004c                                  ; Length of the record
000000000000a9bc         dd         0x00000d14                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000a9c0         db         0xa0, 0xb6, 2 dup (0xff)                    ; begin 0x6060
000000000000a9c4         db         0x15, 0x02, 2 dup (0x00)                    ; length 0x215 (end at 0x6275)
000000000000a9c8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000a9c9         db  0x42 ; 'B'
000000000000a9ca         db  0x0e ; '.'
000000000000a9cb         db  0x10 ; '.'
000000000000a9cc         db  0x8f ; '.'
000000000000a9cd         db  0x02 ; '.'
000000000000a9ce         db  0x42 ; 'B'
000000000000a9cf         db  0x0e ; '.'
000000000000a9d0         db  0x18 ; '.'
000000000000a9d1         db  0x8e ; '.'
000000000000a9d2         db  0x03 ; '.'
000000000000a9d3         db  0x45 ; 'E'
000000000000a9d4         db  0x0e ; '.'
000000000000a9d5         db  0x20 ; ' '
000000000000a9d6         db  0x8d ; '.'
000000000000a9d7         db  0x04 ; '.'
000000000000a9d8         db  0x42 ; 'B'
000000000000a9d9         db  0x0e ; '.'
000000000000a9da         db  0x28 ; '('
000000000000a9db         db  0x8c ; '.'
000000000000a9dc         db  0x05 ; '.'
000000000000a9dd         db  0x44 ; 'D'
000000000000a9de         db  0x0e ; '.'
000000000000a9df         db  0x30 ; '0'
000000000000a9e0         db  0x86 ; '.'
000000000000a9e1         db  0x06 ; '.'
000000000000a9e2         db  0x41 ; 'A'
000000000000a9e3         db  0x0e ; '.'
000000000000a9e4         db  0x38 ; '8'
000000000000a9e5         db  0x83 ; '.'
000000000000a9e6         db  0x07 ; '.'
000000000000a9e7         db  0x4f ; 'O'
000000000000a9e8         db  0x0e ; '.'
000000000000a9e9         db  0xf0 ; '.'
000000000000a9ea         db  0x01 ; '.'
000000000000a9eb         db  0x02 ; '.'
000000000000a9ec         db  0xe5 ; '.'
000000000000a9ed         db  0x0a ; '.'
000000000000a9ee         db  0x0e ; '.'
000000000000a9ef         db  0x38 ; '8'
000000000000a9f0         db  0x41 ; 'A'
000000000000a9f1         db  0x0e ; '.'
000000000000a9f2         db  0x30 ; '0'
000000000000a9f3         db  0x41 ; 'A'
000000000000a9f4         db  0x0e ; '.'
000000000000a9f5         db  0x28 ; '('
000000000000a9f6         db  0x42 ; 'B'
000000000000a9f7         db  0x0e ; '.'
000000000000a9f8         db  0x20 ; ' '
000000000000a9f9         db  0x42 ; 'B'
000000000000a9fa         db  0x0e ; '.'
000000000000a9fb         db  0x18 ; '.'
000000000000a9fc         db  0x42 ; 'B'
000000000000a9fd         db  0x0e ; '.'
000000000000a9fe         db  0x10 ; '.'
000000000000a9ff         db  0x42 ; 'B'
000000000000aa00         db  0x0e ; '.'
000000000000aa01         db  0x08 ; '.'
000000000000aa02         db  0x42 ; 'B'
000000000000aa03         db  0x0b ; '.'
000000000000aa04         db  0x00 ; '.'
000000000000aa05         db  0x00 ; '.'
000000000000aa06         db  0x00 ; '.'
000000000000aa07         db  0x00 ; '.'
000000000000aa08         dd         0x00000034                                  ; Length of the record
000000000000aa0c         dd         0x00000d64                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000aa10         db         0x70, 0xb8, 2 dup (0xff)                    ; begin 0x6280
000000000000aa14         db         0x3f, 3 dup (0x00)                          ; length 0x3f (end at 0x62bf)
000000000000aa18         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000aa19         db  0x42 ; 'B'
000000000000aa1a         db  0x0e ; '.'
000000000000aa1b         db  0x10 ; '.'
000000000000aa1c         db  0x8d ; '.'
000000000000aa1d         db  0x02 ; '.'
000000000000aa1e         db  0x42 ; 'B'
000000000000aa1f         db  0x0e ; '.'
000000000000aa20         db  0x18 ; '.'
000000000000aa21         db  0x8c ; '.'
000000000000aa22         db  0x03 ; '.'
000000000000aa23         db  0x41 ; 'A'
000000000000aa24         db  0x0e ; '.'
000000000000aa25         db  0x20 ; ' '
000000000000aa26         db  0x86 ; '.'
000000000000aa27         db  0x04 ; '.'
000000000000aa28         db  0x41 ; 'A'
000000000000aa29         db  0x0e ; '.'
000000000000aa2a         db  0x28 ; '('
000000000000aa2b         db  0x83 ; '.'
000000000000aa2c         db  0x05 ; '.'
000000000000aa2d         db  0x46 ; 'F'
000000000000aa2e         db  0x0e ; '.'
000000000000aa2f         db  0x30 ; '0'
000000000000aa30         db  0x6a ; 'j'
000000000000aa31         db  0x0e ; '.'
000000000000aa32         db  0x28 ; '('
000000000000aa33         db  0x43 ; 'C'
000000000000aa34         db  0x0e ; '.'
000000000000aa35         db  0x20 ; ' '
000000000000aa36         db  0x41 ; 'A'
000000000000aa37         db  0x0e ; '.'
000000000000aa38         db  0x18 ; '.'
000000000000aa39         db  0x42 ; 'B'
000000000000aa3a         db  0x0e ; '.'
000000000000aa3b         db  0x10 ; '.'
000000000000aa3c         db  0x42 ; 'B'
000000000000aa3d         db  0x0e ; '.'
000000000000aa3e         db  0x08 ; '.'
000000000000aa3f         db  0x00 ; '.'
000000000000aa40         dd         0x00000034                                  ; Length of the record
000000000000aa44         dd         0x00000d9c                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000aa48         db         0x78, 0xb8, 2 dup (0xff)                    ; begin 0x62c0
000000000000aa4c         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x633b)
000000000000aa50         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000aa51         db  0x42 ; 'B'
000000000000aa52         db  0x0e ; '.'
000000000000aa53         db  0x10 ; '.'
000000000000aa54         db  0x8c ; '.'
000000000000aa55         db  0x02 ; '.'
000000000000aa56         db  0x41 ; 'A'
000000000000aa57         db  0x0e ; '.'
000000000000aa58         db  0x18 ; '.'
000000000000aa59         db  0x86 ; '.'
000000000000aa5a         db  0x03 ; '.'
000000000000aa5b         db  0x41 ; 'A'
000000000000aa5c         db  0x0e ; '.'
000000000000aa5d         db  0x20 ; ' '
000000000000aa5e         db  0x83 ; '.'
000000000000aa5f         db  0x04 ; '.'
000000000000aa60         db  0x7d ; '}'
000000000000aa61         db  0x0a ; '.'
000000000000aa62         db  0x0e ; '.'
000000000000aa63         db  0x18 ; '.'
000000000000aa64         db  0x41 ; 'A'
000000000000aa65         db  0x0e ; '.'
000000000000aa66         db  0x10 ; '.'
000000000000aa67         db  0x42 ; 'B'
000000000000aa68         db  0x0e ; '.'
000000000000aa69         db  0x08 ; '.'
000000000000aa6a         db  0x44 ; 'D'
000000000000aa6b         db  0x0b ; '.'
000000000000aa6c         db  0x60 ; '`'
000000000000aa6d         db  0x0a ; '.'
000000000000aa6e         db  0x0e ; '.'
000000000000aa6f         db  0x18 ; '.'
000000000000aa70         db  0x41 ; 'A'
000000000000aa71         db  0x0e ; '.'
000000000000aa72         db  0x10 ; '.'
000000000000aa73         db  0x42 ; 'B'
000000000000aa74         db  0x0e ; '.'
000000000000aa75         db  0x08 ; '.'
000000000000aa76         db  0x45 ; 'E'
000000000000aa77         db  0x0b ; '.'
000000000000aa78         dd         0x0000001c                                  ; Length of the record
000000000000aa7c         dd         0x00000dd4                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000aa80         db         0xc0, 0xb8, 2 dup (0xff)                    ; begin 0x6340
000000000000aa84         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x6380)
000000000000aa88         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000aa89         db  0x44 ; 'D'
000000000000aa8a         db  0x0e ; '.'
000000000000aa8b         db  0x10 ; '.'
000000000000aa8c         db  0x83 ; '.'
000000000000aa8d         db  0x02 ; '.'
000000000000aa8e         db  0x5a ; 'Z'
000000000000aa8f         db  0x0a ; '.'
000000000000aa90         db  0x0e ; '.'
000000000000aa91         db  0x08 ; '.'
000000000000aa92         db  0x4a ; 'J'
000000000000aa93         db  0x0b ; '.'
000000000000aa94         db  0x53 ; 'S'
000000000000aa95         db  0x0e ; '.'
000000000000aa96         db  0x08 ; '.'
000000000000aa97         db  0x00 ; '.'
000000000000aa98         dd         0x0000002c                                  ; Length of the record
000000000000aa9c         dd         0x00000df4                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000aaa0         db         0xe0, 0xb8, 2 dup (0xff)                    ; begin 0x6380
000000000000aaa4         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x63d7)
000000000000aaa8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000aaa9         db  0x63 ; 'c'
000000000000aaaa         db  0x0e ; '.'
000000000000aaab         db  0x10 ; '.'
000000000000aaac         db  0x8c ; '.'
000000000000aaad         db  0x02 ; '.'
000000000000aaae         db  0x41 ; 'A'
000000000000aaaf         db  0x0e ; '.'
000000000000aab0         db  0x18 ; '.'
000000000000aab1         db  0x86 ; '.'
000000000000aab2         db  0x03 ; '.'
000000000000aab3         db  0x44 ; 'D'
000000000000aab4         db  0x0e ; '.'
000000000000aab5         db  0x20 ; ' '
000000000000aab6         db  0x83 ; '.'
000000000000aab7         db  0x04 ; '.'
000000000000aab8         db  0x6b ; 'k'
000000000000aab9         db  0x0e ; '.'
000000000000aaba         db  0x18 ; '.'
000000000000aabb         db  0x41 ; 'A'
000000000000aabc         db  0x0e ; '.'
000000000000aabd         db  0x10 ; '.'
000000000000aabe         db  0x42 ; 'B'
000000000000aabf         db  0x0e ; '.'
000000000000aac0         db  0x08 ; '.'
000000000000aac1         db  0x00 ; '.'
000000000000aac2         db  0x00 ; '.'
000000000000aac3         db  0x00 ; '.'
000000000000aac4         db  0x00 ; '.'
000000000000aac5         db  0x00 ; '.'
000000000000aac6         db  0x00 ; '.'
000000000000aac7         db  0x00 ; '.'
000000000000aac8         dd         0x00000014                                  ; Length of the record
000000000000aacc         dd         0x00000e24                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000aad0         db         0x10, 0xb9, 2 dup (0xff)                    ; begin 0x63e0
000000000000aad4         db         0x04, 3 dup (0x00)                          ; length 0x4 (end at 0x63e4)
000000000000aad8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000aad9         align      32
000000000000aae0         dd         0x0000002c                                  ; Length of the record
000000000000aae4         dd         0x00000e3c                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000aae8         db         0x08, 0xb9, 2 dup (0xff)                    ; begin 0x63f0
000000000000aaec         db         0x1f, 0x11, 2 dup (0x00)                    ; length 0x111f (end at 0x750f)
000000000000aaf0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000aaf1         db  0x41 ; 'A'
000000000000aaf2         db  0x0e ; '.'
000000000000aaf3         db  0x10 ; '.'
000000000000aaf4         db  0x86 ; '.'
000000000000aaf5         db  0x02 ; '.'
000000000000aaf6         db  0x43 ; 'C'
000000000000aaf7         db  0x0d ; '.'
000000000000aaf8         db  0x06 ; '.'
000000000000aaf9         db  0x48 ; 'H'
000000000000aafa         db  0x8f ; '.'
000000000000aafb         db  0x03 ; '.'
000000000000aafc         db  0x8e ; '.'
000000000000aafd         db  0x04 ; '.'
000000000000aafe         db  0x8d ; '.'
000000000000aaff         db  0x05 ; '.'
000000000000ab00         db  0x8c ; '.'
000000000000ab01         db  0x06 ; '.'
000000000000ab02         db  0x48 ; 'H'
000000000000ab03         db  0x83 ; '.'
000000000000ab04         db  0x07 ; '.'
000000000000ab05         db  0x03 ; '.'
000000000000ab06         db  0xef ; '.'
000000000000ab07         db  0x01 ; '.'
000000000000ab08         db  0x0a ; '.'
000000000000ab09         db  0x0c ; '.'
000000000000ab0a         db  0x07 ; '.'
000000000000ab0b         db  0x08 ; '.'
000000000000ab0c         db  0x45 ; 'E'
000000000000ab0d         db  0x0b ; '.'
000000000000ab0e         db  0x00 ; '.'
000000000000ab0f         db  0x00 ; '.'
000000000000ab10         dd         0x00000014                                  ; Length of the record
000000000000ab14         dd         0x00000e6c                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000ab18         db         0xf8, 0xc9, 2 dup (0xff)                    ; begin 0x7510
000000000000ab1c         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x751e)
000000000000ab20         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ab21         align      8
000000000000ab28         dd         0x00000034                                  ; Length of the record
000000000000ab2c         dd         0x00000e84                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000ab30         db         0xf0, 0xc9, 2 dup (0xff)                    ; begin 0x7520
000000000000ab34         db         0x7e, 0x02, 2 dup (0x00)                    ; length 0x27e (end at 0x779e)
000000000000ab38         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ab39         db  0x42 ; 'B'
000000000000ab3a         db  0x0e ; '.'
000000000000ab3b         db  0x10 ; '.'
000000000000ab3c         db  0x8c ; '.'
000000000000ab3d         db  0x02 ; '.'
000000000000ab3e         db  0x41 ; 'A'
000000000000ab3f         db  0x0e ; '.'
000000000000ab40         db  0x18 ; '.'
000000000000ab41         db  0x86 ; '.'
000000000000ab42         db  0x03 ; '.'
000000000000ab43         db  0x43 ; 'C'
000000000000ab44         db  0x0e ; '.'
000000000000ab45         db  0x20 ; ' '
000000000000ab46         db  0x83 ; '.'
000000000000ab47         db  0x04 ; '.'
000000000000ab48         db  0x44 ; 'D'
000000000000ab49         db  0x0e ; '.'
000000000000ab4a         db  0x70 ; 'p'
000000000000ab4b         db  0x02 ; '.'
000000000000ab4c         db  0xf0 ; '.'
000000000000ab4d         db  0x0a ; '.'
000000000000ab4e         db  0x0e ; '.'
000000000000ab4f         db  0x20 ; ' '
000000000000ab50         db  0x41 ; 'A'
000000000000ab51         db  0x0e ; '.'
000000000000ab52         db  0x18 ; '.'
000000000000ab53         db  0x41 ; 'A'
000000000000ab54         db  0x0e ; '.'
000000000000ab55         db  0x10 ; '.'
000000000000ab56         db  0x42 ; 'B'
000000000000ab57         db  0x0e ; '.'
000000000000ab58         db  0x08 ; '.'
000000000000ab59         db  0x42 ; 'B'
000000000000ab5a         db  0x0b ; '.'
000000000000ab5b         db  0x00 ; '.'
000000000000ab5c         db  0x00 ; '.'
000000000000ab5d         db  0x00 ; '.'
000000000000ab5e         db  0x00 ; '.'
000000000000ab5f         db  0x00 ; '.'
000000000000ab60         dd         0x00000014                                  ; Length of the record
000000000000ab64         dd         0x00000ebc                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000ab68         db         0x38, 0xcc, 2 dup (0xff)                    ; begin 0x77a0
000000000000ab6c         db         0xfe, 0x01, 2 dup (0x00)                    ; length 0x1fe (end at 0x799e)
000000000000ab70         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ab71         align      8
000000000000ab78         dd         0x0000004c                                  ; Length of the record
000000000000ab7c         dd         0x00000ed4                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000ab80         db         0x20, 0xce, 2 dup (0xff)                    ; begin 0x79a0
000000000000ab84         db         0xec, 0x0c, 2 dup (0x00)                    ; length 0xcec (end at 0x868c)
000000000000ab88         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ab89         db  0x42 ; 'B'
000000000000ab8a         db  0x0e ; '.'
000000000000ab8b         db  0x10 ; '.'
000000000000ab8c         db  0x8f ; '.'
000000000000ab8d         db  0x02 ; '.'
000000000000ab8e         db  0x42 ; 'B'
000000000000ab8f         db  0x0e ; '.'
000000000000ab90         db  0x18 ; '.'
000000000000ab91         db  0x8e ; '.'
000000000000ab92         db  0x03 ; '.'
000000000000ab93         db  0x46 ; 'F'
000000000000ab94         db  0x0e ; '.'
000000000000ab95         db  0x20 ; ' '
000000000000ab96         db  0x8d ; '.'
000000000000ab97         db  0x04 ; '.'
000000000000ab98         db  0x42 ; 'B'
000000000000ab99         db  0x0e ; '.'
000000000000ab9a         db  0x28 ; '('
000000000000ab9b         db  0x8c ; '.'
000000000000ab9c         db  0x05 ; '.'
000000000000ab9d         db  0x45 ; 'E'
000000000000ab9e         db  0x0e ; '.'
000000000000ab9f         db  0x30 ; '0'
000000000000aba0         db  0x86 ; '.'
000000000000aba1         db  0x06 ; '.'
000000000000aba2         db  0x41 ; 'A'
000000000000aba3         db  0x0e ; '.'
000000000000aba4         db  0x38 ; '8'
000000000000aba5         db  0x83 ; '.'
000000000000aba6         db  0x07 ; '.'
000000000000aba7         db  0x52 ; 'R'
000000000000aba8         db  0x0e ; '.'
000000000000aba9         db  0x90 ; '.'
000000000000abaa         db  0x01 ; '.'
000000000000abab         db  0x02 ; '.'
000000000000abac         db  0x82 ; '.'
000000000000abad         db  0x0a ; '.'
000000000000abae         db  0x0e ; '.'
000000000000abaf         db  0x38 ; '8'
000000000000abb0         db  0x41 ; 'A'
000000000000abb1         db  0x0e ; '.'
000000000000abb2         db  0x30 ; '0'
000000000000abb3         db  0x41 ; 'A'
000000000000abb4         db  0x0e ; '.'
000000000000abb5         db  0x28 ; '('
000000000000abb6         db  0x42 ; 'B'
000000000000abb7         db  0x0e ; '.'
000000000000abb8         db  0x20 ; ' '
000000000000abb9         db  0x42 ; 'B'
000000000000abba         db  0x0e ; '.'
000000000000abbb         db  0x18 ; '.'
000000000000abbc         db  0x42 ; 'B'
000000000000abbd         db  0x0e ; '.'
000000000000abbe         db  0x10 ; '.'
000000000000abbf         db  0x42 ; 'B'
000000000000abc0         db  0x0e ; '.'
000000000000abc1         db  0x08 ; '.'
000000000000abc2         db  0x48 ; 'H'
000000000000abc3         db  0x0b ; '.'
000000000000abc4         db  0x00 ; '.'
000000000000abc5         db  0x00 ; '.'
000000000000abc6         db  0x00 ; '.'
000000000000abc7         db  0x00 ; '.'
000000000000abc8         dd         0x00000044                                  ; Length of the record
000000000000abcc         dd         0x00000f24                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000abd0         db         0xc0, 0xda, 2 dup (0xff)                    ; begin 0x8690
000000000000abd4         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x86f5)
000000000000abd8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000abd9         db  0x42 ; 'B'
000000000000abda         db  0x0e ; '.'
000000000000abdb         db  0x10 ; '.'
000000000000abdc         db  0x8f ; '.'
000000000000abdd         db  0x02 ; '.'
000000000000abde         db  0x42 ; 'B'
000000000000abdf         db  0x0e ; '.'
000000000000abe0         db  0x18 ; '.'
000000000000abe1         db  0x8e ; '.'
000000000000abe2         db  0x03 ; '.'
000000000000abe3         db  0x45 ; 'E'
000000000000abe4         db  0x0e ; '.'
000000000000abe5         db  0x20 ; ' '
000000000000abe6         db  0x8d ; '.'
000000000000abe7         db  0x04 ; '.'
000000000000abe8         db  0x42 ; 'B'
000000000000abe9         db  0x0e ; '.'
000000000000abea         db  0x28 ; '('
000000000000abeb         db  0x8c ; '.'
000000000000abec         db  0x05 ; '.'
000000000000abed         db  0x48 ; 'H'
000000000000abee         db  0x0e ; '.'
000000000000abef         db  0x30 ; '0'
000000000000abf0         db  0x86 ; '.'
000000000000abf1         db  0x06 ; '.'
000000000000abf2         db  0x48 ; 'H'
000000000000abf3         db  0x0e ; '.'
000000000000abf4         db  0x38 ; '8'
000000000000abf5         db  0x83 ; '.'
000000000000abf6         db  0x07 ; '.'
000000000000abf7         db  0x4d ; 'M'
000000000000abf8         db  0x0e ; '.'
000000000000abf9         db  0x40 ; '@'
000000000000abfa         db  0x72 ; 'r'
000000000000abfb         db  0x0e ; '.'
000000000000abfc         db  0x38 ; '8'
000000000000abfd         db  0x41 ; 'A'
000000000000abfe         db  0x0e ; '.'
000000000000abff         db  0x30 ; '0'
000000000000ac00         db  0x41 ; 'A'
000000000000ac01         db  0x0e ; '.'
000000000000ac02         db  0x28 ; '('
000000000000ac03         db  0x42 ; 'B'
000000000000ac04         db  0x0e ; '.'
000000000000ac05         db  0x20 ; ' '
000000000000ac06         db  0x42 ; 'B'
000000000000ac07         db  0x0e ; '.'
000000000000ac08         db  0x18 ; '.'
000000000000ac09         db  0x42 ; 'B'
000000000000ac0a         db  0x0e ; '.'
000000000000ac0b         db  0x10 ; '.'
000000000000ac0c         db  0x42 ; 'B'
000000000000ac0d         db  0x0e ; '.'
000000000000ac0e         db  0x08 ; '.'
000000000000ac0f         db  0x00 ; '.'
000000000000ac10         dd         0x00000014                                  ; Length of the record
000000000000ac14         dd         0x00000f6c                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000ac18         db         0xe8, 0xda, 2 dup (0xff)                    ; begin 0x8700
000000000000ac1c         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x8702)
000000000000ac20         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ac21         align      8
000000000000ac28         dd         0x00000010                                  ; Length of the record
000000000000ac2c         dd         0x00000f84                                  ; FDE: parent CIE at 0x9ca8 (FDE encoding = 0x1B)
000000000000ac30         db         0xe0, 0xda, 2 dup (0xff)                    ; begin 0x8710
000000000000ac34         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x871e)
000000000000ac38         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ac39         align      64


        ; Segment Segment 3
        ; Range: [0x20ba90; 0x20c240[ (1968 bytes)
        ; File offset : [47760; 49280[ (1520 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x20ba90; 0x20ba98[ (8 bytes)
        ; File offset : [47760; 47768[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
000000000020ba90         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x20ba98; 0x20baa0[ (8 bytes)
        ; File offset : [47768; 47776[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
000000000020ba98         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x20baa0; 0x20bbd8[ (312 bytes)
        ; File offset : [47776; 48088[ (312 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     longopts:
000000000020baa0         db  0x50 ; 'P'                                         ; DATA XREF=main+142
000000000020baa1         db  0x88 ; '.'
000000000020baa2         db  0x00 ; '.'
000000000020baa3         db  0x00 ; '.'
000000000020baa4         db  0x00 ; '.'
000000000020baa5         db  0x00 ; '.'
000000000020baa6         db  0x00 ; '.'
000000000020baa7         db  0x00 ; '.'
000000000020baa8         db  0x02 ; '.'
000000000020baa9         db  0x00 ; '.'
000000000020baaa         db  0x00 ; '.'
000000000020baab         db  0x00 ; '.'
000000000020baac         db  0x00 ; '.'
000000000020baad         db  0x00 ; '.'
000000000020baae         db  0x00 ; '.'
000000000020baaf         db  0x00 ; '.'
000000000020bab0         db  0x00 ; '.'
000000000020bab1         db  0x00 ; '.'
000000000020bab2         db  0x00 ; '.'
000000000020bab3         db  0x00 ; '.'
000000000020bab4         db  0x00 ; '.'
000000000020bab5         db  0x00 ; '.'
000000000020bab6         db  0x00 ; '.'
000000000020bab7         db  0x00 ; '.'
000000000020bab8         db  0x5a ; 'Z'
000000000020bab9         db  0x00 ; '.'
000000000020baba         db  0x00 ; '.'
000000000020babb         db  0x00 ; '.'
000000000020babc         db  0x00 ; '.'
000000000020babd         db  0x00 ; '.'
000000000020babe         db  0x00 ; '.'
000000000020babf         db  0x00 ; '.'
000000000020bac0         db  0x58 ; 'X'
000000000020bac1         db  0x88 ; '.'
000000000020bac2         db  0x00 ; '.'
000000000020bac3         db  0x00 ; '.'
000000000020bac4         db  0x00 ; '.'
000000000020bac5         db  0x00 ; '.'
000000000020bac6         db  0x00 ; '.'
000000000020bac7         db  0x00 ; '.'
000000000020bac8         db  0x01 ; '.'
000000000020bac9         db  0x00 ; '.'
000000000020baca         db  0x00 ; '.'
000000000020bacb         db  0x00 ; '.'
000000000020bacc         db  0x00 ; '.'
000000000020bacd         db  0x00 ; '.'
000000000020bace         db  0x00 ; '.'
000000000020bacf         db  0x00 ; '.'
000000000020bad0         db  0x00 ; '.'
000000000020bad1         db  0x00 ; '.'
000000000020bad2         db  0x00 ; '.'
000000000020bad3         db  0x00 ; '.'
000000000020bad4         db  0x00 ; '.'
000000000020bad5         db  0x00 ; '.'
000000000020bad6         db  0x00 ; '.'
000000000020bad7         db  0x00 ; '.'
000000000020bad8         db  0x6d ; 'm'
000000000020bad9         db  0x00 ; '.'
000000000020bada         db  0x00 ; '.'
000000000020badb         db  0x00 ; '.'
000000000020badc         db  0x00 ; '.'
000000000020badd         db  0x00 ; '.'
000000000020bade         db  0x00 ; '.'
000000000020badf         db  0x00 ; '.'
000000000020bae0         db  0x5d ; ']'
000000000020bae1         db  0x88 ; '.'
000000000020bae2         db  0x00 ; '.'
000000000020bae3         db  0x00 ; '.'
000000000020bae4         db  0x00 ; '.'
000000000020bae5         db  0x00 ; '.'
000000000020bae6         db  0x00 ; '.'
000000000020bae7         db  0x00 ; '.'
000000000020bae8         db  0x00 ; '.'
000000000020bae9         db  0x00 ; '.'
000000000020baea         db  0x00 ; '.'
000000000020baeb         db  0x00 ; '.'
000000000020baec         db  0x00 ; '.'
000000000020baed         db  0x00 ; '.'
000000000020baee         db  0x00 ; '.'
000000000020baef         db  0x00 ; '.'
000000000020baf0         db  0x00 ; '.'
000000000020baf1         db  0x00 ; '.'
000000000020baf2         db  0x00 ; '.'
000000000020baf3         db  0x00 ; '.'
000000000020baf4         db  0x00 ; '.'
000000000020baf5         db  0x00 ; '.'
000000000020baf6         db  0x00 ; '.'
000000000020baf7         db  0x00 ; '.'
000000000020baf8         db  0x70 ; 'p'
000000000020baf9         db  0x00 ; '.'
000000000020bafa         db  0x00 ; '.'
000000000020bafb         db  0x00 ; '.'
000000000020bafc         db  0x00 ; '.'
000000000020bafd         db  0x00 ; '.'
000000000020bafe         db  0x00 ; '.'
000000000020baff         db  0x00 ; '.'
000000000020bb00         db  0x65 ; 'e'
000000000020bb01         db  0x88 ; '.'
000000000020bb02         db  0x00 ; '.'
000000000020bb03         db  0x00 ; '.'
000000000020bb04         db  0x00 ; '.'
000000000020bb05         db  0x00 ; '.'
000000000020bb06         db  0x00 ; '.'
000000000020bb07         db  0x00 ; '.'
000000000020bb08         db  0x00 ; '.'
000000000020bb09         db  0x00 ; '.'
000000000020bb0a         db  0x00 ; '.'
000000000020bb0b         db  0x00 ; '.'
000000000020bb0c         db  0x00 ; '.'
000000000020bb0d         db  0x00 ; '.'
000000000020bb0e         db  0x00 ; '.'
000000000020bb0f         db  0x00 ; '.'
000000000020bb10         db  0x00 ; '.'
000000000020bb11         db  0x00 ; '.'
000000000020bb12         db  0x00 ; '.'
000000000020bb13         db  0x00 ; '.'
000000000020bb14         db  0x00 ; '.'
000000000020bb15         db  0x00 ; '.'
000000000020bb16         db  0x00 ; '.'
000000000020bb17         db  0x00 ; '.'
000000000020bb18         db  0x76 ; 'v'
000000000020bb19         db  0x00 ; '.'
000000000020bb1a         db  0x00 ; '.'
000000000020bb1b         db  0x00 ; '.'
000000000020bb1c         db  0x00 ; '.'
000000000020bb1d         db  0x00 ; '.'
000000000020bb1e         db  0x00 ; '.'
000000000020bb1f         db  0x00 ; '.'
000000000020bb20         db  0x6d ; 'm'
000000000020bb21         db  0x88 ; '.'
000000000020bb22         db  0x00 ; '.'
000000000020bb23         db  0x00 ; '.'
000000000020bb24         db  0x00 ; '.'
000000000020bb25         db  0x00 ; '.'
000000000020bb26         db  0x00 ; '.'
000000000020bb27         db  0x00 ; '.'
000000000020bb28         db  0x00 ; '.'
000000000020bb29         db  0x00 ; '.'
000000000020bb2a         db  0x00 ; '.'
000000000020bb2b         db  0x00 ; '.'
000000000020bb2c         db  0x00 ; '.'
000000000020bb2d         db  0x00 ; '.'
000000000020bb2e         db  0x00 ; '.'
000000000020bb2f         db  0x00 ; '.'
000000000020bb30         db  0x00 ; '.'
000000000020bb31         db  0x00 ; '.'
000000000020bb32         db  0x00 ; '.'
000000000020bb33         db  0x00 ; '.'
000000000020bb34         db  0x00 ; '.'
000000000020bb35         db  0x00 ; '.'
000000000020bb36         db  0x00 ; '.'
000000000020bb37         db  0x00 ; '.'
000000000020bb38         db  0x7e ; '~'
000000000020bb39         db  0xff ; '.'
000000000020bb3a         db  0xff ; '.'
000000000020bb3b         db  0xff ; '.'
000000000020bb3c         db  0x00 ; '.'
000000000020bb3d         db  0x00 ; '.'
000000000020bb3e         db  0x00 ; '.'
000000000020bb3f         db  0x00 ; '.'
000000000020bb40         db  0x72 ; 'r'
000000000020bb41         db  0x88 ; '.'
000000000020bb42         db  0x00 ; '.'
000000000020bb43         db  0x00 ; '.'
000000000020bb44         db  0x00 ; '.'
000000000020bb45         db  0x00 ; '.'
000000000020bb46         db  0x00 ; '.'
000000000020bb47         db  0x00 ; '.'
000000000020bb48         db  0x00 ; '.'
000000000020bb49         db  0x00 ; '.'
000000000020bb4a         db  0x00 ; '.'
000000000020bb4b         db  0x00 ; '.'
000000000020bb4c         db  0x00 ; '.'
000000000020bb4d         db  0x00 ; '.'
000000000020bb4e         db  0x00 ; '.'
000000000020bb4f         db  0x00 ; '.'
000000000020bb50         db  0x00 ; '.'
000000000020bb51         db  0x00 ; '.'
000000000020bb52         db  0x00 ; '.'
000000000020bb53         db  0x00 ; '.'
000000000020bb54         db  0x00 ; '.'
000000000020bb55         db  0x00 ; '.'
000000000020bb56         db  0x00 ; '.'
000000000020bb57         db  0x00 ; '.'
000000000020bb58         db  0x7d ; '}'
000000000020bb59         db  0xff ; '.'
000000000020bb5a         db  0xff ; '.'
000000000020bb5b         db  0xff ; '.'
000000000020bb5c         db  0x00 ; '.'
000000000020bb5d         db  0x00 ; '.'
000000000020bb5e         db  0x00 ; '.'
000000000020bb5f         db  0x00 ; '.'
000000000020bb60         db  0x00 ; '.'
000000000020bb61         db  0x00 ; '.'
000000000020bb62         db  0x00 ; '.'
000000000020bb63         db  0x00 ; '.'
000000000020bb64         db  0x00 ; '.'
000000000020bb65         db  0x00 ; '.'
000000000020bb66         db  0x00 ; '.'
000000000020bb67         db  0x00 ; '.'
000000000020bb68         db  0x00 ; '.'
000000000020bb69         db  0x00 ; '.'
000000000020bb6a         db  0x00 ; '.'
000000000020bb6b         db  0x00 ; '.'
000000000020bb6c         db  0x00 ; '.'
000000000020bb6d         db  0x00 ; '.'
000000000020bb6e         db  0x00 ; '.'
000000000020bb6f         db  0x00 ; '.'
000000000020bb70         db  0x00 ; '.'
000000000020bb71         db  0x00 ; '.'
000000000020bb72         db  0x00 ; '.'
000000000020bb73         db  0x00 ; '.'
000000000020bb74         db  0x00 ; '.'
000000000020bb75         db  0x00 ; '.'
000000000020bb76         db  0x00 ; '.'
000000000020bb77         db  0x00 ; '.'
000000000020bb78         db  0x00 ; '.'
000000000020bb79         db  0x00 ; '.'
000000000020bb7a         db  0x00 ; '.'
000000000020bb7b         db  0x00 ; '.'
000000000020bb7c         db  0x00 ; '.'
000000000020bb7d         db  0x00 ; '.'
000000000020bb7e         db  0x00 ; '.'
000000000020bb7f         db  0x00 ; '.'
                     quoting_style_args:
000000000020bb80         db  0x01 ; '.'
000000000020bb81         db  0x8e ; '.'
000000000020bb82         db  0x00 ; '.'
000000000020bb83         db  0x00 ; '.'
000000000020bb84         db  0x00 ; '.'
000000000020bb85         db  0x00 ; '.'
000000000020bb86         db  0x00 ; '.'
000000000020bb87         db  0x00 ; '.'
000000000020bb88         db  0x09 ; '.'
000000000020bb89         db  0x8e ; '.'
000000000020bb8a         db  0x00 ; '.'
000000000020bb8b         db  0x00 ; '.'
000000000020bb8c         db  0x00 ; '.'
000000000020bb8d         db  0x00 ; '.'
000000000020bb8e         db  0x00 ; '.'
000000000020bb8f         db  0x00 ; '.'
000000000020bb90         db  0x0f ; '.'
000000000020bb91         db  0x8e ; '.'
000000000020bb92         db  0x00 ; '.'
000000000020bb93         db  0x00 ; '.'
000000000020bb94         db  0x00 ; '.'
000000000020bb95         db  0x00 ; '.'
000000000020bb96         db  0x00 ; '.'
000000000020bb97         db  0x00 ; '.'
000000000020bb98         db  0x1c ; '.'
000000000020bb99         db  0x8e ; '.'
000000000020bb9a         db  0x00 ; '.'
000000000020bb9b         db  0x00 ; '.'
000000000020bb9c         db  0x00 ; '.'
000000000020bb9d         db  0x00 ; '.'
000000000020bb9e         db  0x00 ; '.'
000000000020bb9f         db  0x00 ; '.'
000000000020bba0         db  0x29 ; ')'
000000000020bba1         db  0x8e ; '.'
000000000020bba2         db  0x00 ; '.'
000000000020bba3         db  0x00 ; '.'
000000000020bba4         db  0x00 ; '.'
000000000020bba5         db  0x00 ; '.'
000000000020bba6         db  0x00 ; '.'
000000000020bba7         db  0x00 ; '.'
000000000020bba8         db  0x3d ; '='
000000000020bba9         db  0x8e ; '.'
000000000020bbaa         db  0x00 ; '.'
000000000020bbab         db  0x00 ; '.'
000000000020bbac         db  0x00 ; '.'
000000000020bbad         db  0x00 ; '.'
000000000020bbae         db  0x00 ; '.'
000000000020bbaf         db  0x00 ; '.'
000000000020bbb0         db  0x3f ; '?'
000000000020bbb1         db  0x8e ; '.'
000000000020bbb2         db  0x00 ; '.'
000000000020bbb3         db  0x00 ; '.'
000000000020bbb4         db  0x00 ; '.'
000000000020bbb5         db  0x00 ; '.'
000000000020bbb6         db  0x00 ; '.'
000000000020bbb7         db  0x00 ; '.'
000000000020bbb8         db  0x22 ; '"'
000000000020bbb9         db  0x8e ; '.'
000000000020bbba         db  0x00 ; '.'
000000000020bbbb         db  0x00 ; '.'
000000000020bbbc         db  0x00 ; '.'
000000000020bbbd         db  0x00 ; '.'
000000000020bbbe         db  0x00 ; '.'
000000000020bbbf         db  0x00 ; '.'
000000000020bbc0         db  0xfe ; '.'
000000000020bbc1         db  0x87 ; '.'
000000000020bbc2         db  0x00 ; '.'
000000000020bbc3         db  0x00 ; '.'
000000000020bbc4         db  0x00 ; '.'
000000000020bbc5         db  0x00 ; '.'
000000000020bbc6         db  0x00 ; '.'
000000000020bbc7         db  0x00 ; '.'
000000000020bbc8         db  0x47 ; 'G'
000000000020bbc9         db  0x8e ; '.'
000000000020bbca         db  0x00 ; '.'
000000000020bbcb         db  0x00 ; '.'
000000000020bbcc         db  0x00 ; '.'
000000000020bbcd         db  0x00 ; '.'
000000000020bbce         db  0x00 ; '.'
000000000020bbcf         db  0x00 ; '.'
000000000020bbd0         db  0x00 ; '.'
000000000020bbd1         db  0x00 ; '.'
000000000020bbd2         db  0x00 ; '.'
000000000020bbd3         db  0x00 ; '.'
000000000020bbd4         db  0x00 ; '.'
000000000020bbd5         db  0x00 ; '.'
000000000020bbd6         db  0x00 ; '.'
000000000020bbd7         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x20bbd8; 0x20bdc8[ (496 bytes)
        ; File offset : [48088; 48584[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
000000000020bbd8         db  0x01 ; '.'
000000000020bbd9         db  0x00 ; '.'
000000000020bbda         db  0x00 ; '.'
000000000020bbdb         db  0x00 ; '.'
000000000020bbdc         db  0x00 ; '.'
000000000020bbdd         db  0x00 ; '.'
000000000020bbde         db  0x00 ; '.'
000000000020bbdf         db  0x00 ; '.'
000000000020bbe0         db  0x01 ; '.'
000000000020bbe1         db  0x00 ; '.'
000000000020bbe2         db  0x00 ; '.'
000000000020bbe3         db  0x00 ; '.'
000000000020bbe4         db  0x00 ; '.'
000000000020bbe5         db  0x00 ; '.'
000000000020bbe6         db  0x00 ; '.'
000000000020bbe7         db  0x00 ; '.'
000000000020bbe8         db  0x0c ; '.'
000000000020bbe9         db  0x00 ; '.'
000000000020bbea         db  0x00 ; '.'
000000000020bbeb         db  0x00 ; '.'
000000000020bbec         db  0x00 ; '.'
000000000020bbed         db  0x00 ; '.'
000000000020bbee         db  0x00 ; '.'
000000000020bbef         db  0x00 ; '.'
000000000020bbf0         db  0xe0 ; '.'
000000000020bbf1         db  0x16 ; '.'
000000000020bbf2         db  0x00 ; '.'
000000000020bbf3         db  0x00 ; '.'
000000000020bbf4         db  0x00 ; '.'
000000000020bbf5         db  0x00 ; '.'
000000000020bbf6         db  0x00 ; '.'
000000000020bbf7         db  0x00 ; '.'
000000000020bbf8         db  0x0d ; '.'
000000000020bbf9         db  0x00 ; '.'
000000000020bbfa         db  0x00 ; '.'
000000000020bbfb         db  0x00 ; '.'
000000000020bbfc         db  0x00 ; '.'
000000000020bbfd         db  0x00 ; '.'
000000000020bbfe         db  0x00 ; '.'
000000000020bbff         db  0x00 ; '.'
000000000020bc00         db  0x20 ; ' '
000000000020bc01         db  0x87 ; '.'
000000000020bc02         db  0x00 ; '.'
000000000020bc03         db  0x00 ; '.'
000000000020bc04         db  0x00 ; '.'
000000000020bc05         db  0x00 ; '.'
000000000020bc06         db  0x00 ; '.'
000000000020bc07         db  0x00 ; '.'
000000000020bc08         db  0x19 ; '.'
000000000020bc09         db  0x00 ; '.'
000000000020bc0a         db  0x00 ; '.'
000000000020bc0b         db  0x00 ; '.'
000000000020bc0c         db  0x00 ; '.'
000000000020bc0d         db  0x00 ; '.'
000000000020bc0e         db  0x00 ; '.'
000000000020bc0f         db  0x00 ; '.'
000000000020bc10         db  0x90 ; '.'
000000000020bc11         db  0xba ; '.'
000000000020bc12         db  0x20 ; ' '
000000000020bc13         db  0x00 ; '.'
000000000020bc14         db  0x00 ; '.'
000000000020bc15         db  0x00 ; '.'
000000000020bc16         db  0x00 ; '.'
000000000020bc17         db  0x00 ; '.'
000000000020bc18         db  0x1b ; '.'
000000000020bc19         db  0x00 ; '.'
000000000020bc1a         db  0x00 ; '.'
000000000020bc1b         db  0x00 ; '.'
000000000020bc1c         db  0x00 ; '.'
000000000020bc1d         db  0x00 ; '.'
000000000020bc1e         db  0x00 ; '.'
000000000020bc1f         db  0x00 ; '.'
000000000020bc20         db  0x08 ; '.'
000000000020bc21         db  0x00 ; '.'
000000000020bc22         db  0x00 ; '.'
000000000020bc23         db  0x00 ; '.'
000000000020bc24         db  0x00 ; '.'
000000000020bc25         db  0x00 ; '.'
000000000020bc26         db  0x00 ; '.'
000000000020bc27         db  0x00 ; '.'
000000000020bc28         db  0x1a ; '.'
000000000020bc29         db  0x00 ; '.'
000000000020bc2a         db  0x00 ; '.'
000000000020bc2b         db  0x00 ; '.'
000000000020bc2c         db  0x00 ; '.'
000000000020bc2d         db  0x00 ; '.'
000000000020bc2e         db  0x00 ; '.'
000000000020bc2f         db  0x00 ; '.'
000000000020bc30         db  0x98 ; '.'
000000000020bc31         db  0xba ; '.'
000000000020bc32         db  0x20 ; ' '
000000000020bc33         db  0x00 ; '.'
000000000020bc34         db  0x00 ; '.'
000000000020bc35         db  0x00 ; '.'
000000000020bc36         db  0x00 ; '.'
000000000020bc37         db  0x00 ; '.'
000000000020bc38         db  0x1c ; '.'
000000000020bc39         db  0x00 ; '.'
000000000020bc3a         db  0x00 ; '.'
000000000020bc3b         db  0x00 ; '.'
000000000020bc3c         db  0x00 ; '.'
000000000020bc3d         db  0x00 ; '.'
000000000020bc3e         db  0x00 ; '.'
000000000020bc3f         db  0x00 ; '.'
000000000020bc40         db  0x08 ; '.'
000000000020bc41         db  0x00 ; '.'
000000000020bc42         db  0x00 ; '.'
000000000020bc43         db  0x00 ; '.'
000000000020bc44         db  0x00 ; '.'
000000000020bc45         db  0x00 ; '.'
000000000020bc46         db  0x00 ; '.'
000000000020bc47         db  0x00 ; '.'
000000000020bc48         db  0xf5 ; '.'
000000000020bc49         db  0xfe ; '.'
000000000020bc4a         db  0xff ; '.'
000000000020bc4b         db  0x6f ; 'o'
000000000020bc4c         db  0x00 ; '.'
000000000020bc4d         db  0x00 ; '.'
000000000020bc4e         db  0x00 ; '.'
000000000020bc4f         db  0x00 ; '.'
000000000020bc50         db  0x98 ; '.'
000000000020bc51         db  0x02 ; '.'
000000000020bc52         db  0x00 ; '.'
000000000020bc53         db  0x00 ; '.'
000000000020bc54         db  0x00 ; '.'
000000000020bc55         db  0x00 ; '.'
000000000020bc56         db  0x00 ; '.'
000000000020bc57         db  0x00 ; '.'
000000000020bc58         db  0x05 ; '.'
000000000020bc59         db  0x00 ; '.'
000000000020bc5a         db  0x00 ; '.'
000000000020bc5b         db  0x00 ; '.'
000000000020bc5c         db  0x00 ; '.'
000000000020bc5d         db  0x00 ; '.'
000000000020bc5e         db  0x00 ; '.'
000000000020bc5f         db  0x00 ; '.'
000000000020bc60         db  0xe8 ; '.'
000000000020bc61         db  0x09 ; '.'
000000000020bc62         db  0x00 ; '.'
000000000020bc63         db  0x00 ; '.'
000000000020bc64         db  0x00 ; '.'
000000000020bc65         db  0x00 ; '.'
000000000020bc66         db  0x00 ; '.'
000000000020bc67         db  0x00 ; '.'
000000000020bc68         db  0x06 ; '.'
000000000020bc69         db  0x00 ; '.'
000000000020bc6a         db  0x00 ; '.'
000000000020bc6b         db  0x00 ; '.'
000000000020bc6c         db  0x00 ; '.'
000000000020bc6d         db  0x00 ; '.'
000000000020bc6e         db  0x00 ; '.'
000000000020bc6f         db  0x00 ; '.'
000000000020bc70         db  0xe0 ; '.'
000000000020bc71         db  0x02 ; '.'
000000000020bc72         db  0x00 ; '.'
000000000020bc73         db  0x00 ; '.'
000000000020bc74         db  0x00 ; '.'
000000000020bc75         db  0x00 ; '.'
000000000020bc76         db  0x00 ; '.'
000000000020bc77         db  0x00 ; '.'
000000000020bc78         db  0x0a ; '.'
000000000020bc79         db  0x00 ; '.'
000000000020bc7a         db  0x00 ; '.'
000000000020bc7b         db  0x00 ; '.'
000000000020bc7c         db  0x00 ; '.'
000000000020bc7d         db  0x00 ; '.'
000000000020bc7e         db  0x00 ; '.'
000000000020bc7f         db  0x00 ; '.'
000000000020bc80         db  0x21 ; '!'
000000000020bc81         db  0x03 ; '.'
000000000020bc82         db  0x00 ; '.'
000000000020bc83         db  0x00 ; '.'
000000000020bc84         db  0x00 ; '.'
000000000020bc85         db  0x00 ; '.'
000000000020bc86         db  0x00 ; '.'
000000000020bc87         db  0x00 ; '.'
000000000020bc88         db  0x0b ; '.'
000000000020bc89         db  0x00 ; '.'
000000000020bc8a         db  0x00 ; '.'
000000000020bc8b         db  0x00 ; '.'
000000000020bc8c         db  0x00 ; '.'
000000000020bc8d         db  0x00 ; '.'
000000000020bc8e         db  0x00 ; '.'
000000000020bc8f         db  0x00 ; '.'
000000000020bc90         db  0x18 ; '.'
000000000020bc91         db  0x00 ; '.'
000000000020bc92         db  0x00 ; '.'
000000000020bc93         db  0x00 ; '.'
000000000020bc94         db  0x00 ; '.'
000000000020bc95         db  0x00 ; '.'
000000000020bc96         db  0x00 ; '.'
000000000020bc97         db  0x00 ; '.'
000000000020bc98         db  0x15 ; '.'
000000000020bc99         db  0x00 ; '.'
000000000020bc9a         db  0x00 ; '.'
000000000020bc9b         db  0x00 ; '.'
000000000020bc9c         db  0x00 ; '.'
000000000020bc9d         db  0x00 ; '.'
000000000020bc9e         db  0x00 ; '.'
000000000020bc9f         db  0x00 ; '.'
000000000020bca0         db  0x00 ; '.'
000000000020bca1         db  0x00 ; '.'
000000000020bca2         db  0x00 ; '.'
000000000020bca3         db  0x00 ; '.'
000000000020bca4         db  0x00 ; '.'
000000000020bca5         db  0x00 ; '.'
000000000020bca6         db  0x00 ; '.'
000000000020bca7         db  0x00 ; '.'
000000000020bca8         db  0x03 ; '.'
000000000020bca9         db  0x00 ; '.'
000000000020bcaa         db  0x00 ; '.'
000000000020bcab         db  0x00 ; '.'
000000000020bcac         db  0x00 ; '.'
000000000020bcad         db  0x00 ; '.'
000000000020bcae         db  0x00 ; '.'
000000000020bcaf         db  0x00 ; '.'
000000000020bcb0         db  0xc8 ; '.'
000000000020bcb1         db  0xbd ; '.'
000000000020bcb2         db  0x20 ; ' '
000000000020bcb3         db  0x00 ; '.'
000000000020bcb4         db  0x00 ; '.'
000000000020bcb5         db  0x00 ; '.'
000000000020bcb6         db  0x00 ; '.'
000000000020bcb7         db  0x00 ; '.'
000000000020bcb8         db  0x02 ; '.'
000000000020bcb9         db  0x00 ; '.'
000000000020bcba         db  0x00 ; '.'
000000000020bcbb         db  0x00 ; '.'
000000000020bcbc         db  0x00 ; '.'
000000000020bcbd         db  0x00 ; '.'
000000000020bcbe         db  0x00 ; '.'
000000000020bcbf         db  0x00 ; '.'
000000000020bcc0         db  0xb8 ; '.'
000000000020bcc1         db  0x05 ; '.'
000000000020bcc2         db  0x00 ; '.'
000000000020bcc3         db  0x00 ; '.'
000000000020bcc4         db  0x00 ; '.'
000000000020bcc5         db  0x00 ; '.'
000000000020bcc6         db  0x00 ; '.'
000000000020bcc7         db  0x00 ; '.'
000000000020bcc8         db  0x14 ; '.'
000000000020bcc9         db  0x00 ; '.'
000000000020bcca         db  0x00 ; '.'
000000000020bccb         db  0x00 ; '.'
000000000020bccc         db  0x00 ; '.'
000000000020bccd         db  0x00 ; '.'
000000000020bcce         db  0x00 ; '.'
000000000020bccf         db  0x00 ; '.'
000000000020bcd0         db  0x07 ; '.'
000000000020bcd1         db  0x00 ; '.'
000000000020bcd2         db  0x00 ; '.'
000000000020bcd3         db  0x00 ; '.'
000000000020bcd4         db  0x00 ; '.'
000000000020bcd5         db  0x00 ; '.'
000000000020bcd6         db  0x00 ; '.'
000000000020bcd7         db  0x00 ; '.'
000000000020bcd8         db  0x17 ; '.'
000000000020bcd9         db  0x00 ; '.'
000000000020bcda         db  0x00 ; '.'
000000000020bcdb         db  0x00 ; '.'
000000000020bcdc         db  0x00 ; '.'
000000000020bcdd         db  0x00 ; '.'
000000000020bcde         db  0x00 ; '.'
000000000020bcdf         db  0x00 ; '.'
000000000020bce0         db  0x28 ; '('
000000000020bce1         db  0x11 ; '.'
000000000020bce2         db  0x00 ; '.'
000000000020bce3         db  0x00 ; '.'
000000000020bce4         db  0x00 ; '.'
000000000020bce5         db  0x00 ; '.'
000000000020bce6         db  0x00 ; '.'
000000000020bce7         db  0x00 ; '.'
000000000020bce8         db  0x07 ; '.'
000000000020bce9         db  0x00 ; '.'
000000000020bcea         db  0x00 ; '.'
000000000020bceb         db  0x00 ; '.'
000000000020bcec         db  0x00 ; '.'
000000000020bced         db  0x00 ; '.'
000000000020bcee         db  0x00 ; '.'
000000000020bcef         db  0x00 ; '.'
000000000020bcf0         db  0x10 ; '.'
000000000020bcf1         db  0x0e ; '.'
000000000020bcf2         db  0x00 ; '.'
000000000020bcf3         db  0x00 ; '.'
000000000020bcf4         db  0x00 ; '.'
000000000020bcf5         db  0x00 ; '.'
000000000020bcf6         db  0x00 ; '.'
000000000020bcf7         db  0x00 ; '.'
000000000020bcf8         db  0x08 ; '.'
000000000020bcf9         db  0x00 ; '.'
000000000020bcfa         db  0x00 ; '.'
000000000020bcfb         db  0x00 ; '.'
000000000020bcfc         db  0x00 ; '.'
000000000020bcfd         db  0x00 ; '.'
000000000020bcfe         db  0x00 ; '.'
000000000020bcff         db  0x00 ; '.'
000000000020bd00         db  0x18 ; '.'
000000000020bd01         db  0x03 ; '.'
000000000020bd02         db  0x00 ; '.'
000000000020bd03         db  0x00 ; '.'
000000000020bd04         db  0x00 ; '.'
000000000020bd05         db  0x00 ; '.'
000000000020bd06         db  0x00 ; '.'
000000000020bd07         db  0x00 ; '.'
000000000020bd08         db  0x09 ; '.'
000000000020bd09         db  0x00 ; '.'
000000000020bd0a         db  0x00 ; '.'
000000000020bd0b         db  0x00 ; '.'
000000000020bd0c         db  0x00 ; '.'
000000000020bd0d         db  0x00 ; '.'
000000000020bd0e         db  0x00 ; '.'
000000000020bd0f         db  0x00 ; '.'
000000000020bd10         db  0x18 ; '.'
000000000020bd11         db  0x00 ; '.'
000000000020bd12         db  0x00 ; '.'
000000000020bd13         db  0x00 ; '.'
000000000020bd14         db  0x00 ; '.'
000000000020bd15         db  0x00 ; '.'
000000000020bd16         db  0x00 ; '.'
000000000020bd17         db  0x00 ; '.'
000000000020bd18         db  0x1e ; '.'
000000000020bd19         db  0x00 ; '.'
000000000020bd1a         db  0x00 ; '.'
000000000020bd1b         db  0x00 ; '.'
000000000020bd1c         db  0x00 ; '.'
000000000020bd1d         db  0x00 ; '.'
000000000020bd1e         db  0x00 ; '.'
000000000020bd1f         db  0x00 ; '.'
000000000020bd20         db  0x08 ; '.'
000000000020bd21         db  0x00 ; '.'
000000000020bd22         db  0x00 ; '.'
000000000020bd23         db  0x00 ; '.'
000000000020bd24         db  0x00 ; '.'
000000000020bd25         db  0x00 ; '.'
000000000020bd26         db  0x00 ; '.'
000000000020bd27         db  0x00 ; '.'
000000000020bd28         db  0xfb ; '.'
000000000020bd29         db  0xff ; '.'
000000000020bd2a         db  0xff ; '.'
000000000020bd2b         db  0x6f ; 'o'
000000000020bd2c         db  0x00 ; '.'
000000000020bd2d         db  0x00 ; '.'
000000000020bd2e         db  0x00 ; '.'
000000000020bd2f         db  0x00 ; '.'
000000000020bd30         db  0x01 ; '.'
000000000020bd31         db  0x00 ; '.'
000000000020bd32         db  0x00 ; '.'
000000000020bd33         db  0x08 ; '.'
000000000020bd34         db  0x00 ; '.'
000000000020bd35         db  0x00 ; '.'
000000000020bd36         db  0x00 ; '.'
000000000020bd37         db  0x00 ; '.'
000000000020bd38         db  0xfe ; '.'
000000000020bd39         db  0xff ; '.'
000000000020bd3a         db  0xff ; '.'
000000000020bd3b         db  0x6f ; 'o'
000000000020bd3c         db  0x00 ; '.'
000000000020bd3d         db  0x00 ; '.'
000000000020bd3e         db  0x00 ; '.'
000000000020bd3f         db  0x00 ; '.'
000000000020bd40         db  0xa0 ; '.'
000000000020bd41         db  0x0d ; '.'
000000000020bd42         db  0x00 ; '.'
000000000020bd43         db  0x00 ; '.'
000000000020bd44         db  0x00 ; '.'
000000000020bd45         db  0x00 ; '.'
000000000020bd46         db  0x00 ; '.'
000000000020bd47         db  0x00 ; '.'
000000000020bd48         db  0xff ; '.'
000000000020bd49         db  0xff ; '.'
000000000020bd4a         db  0xff ; '.'
000000000020bd4b         db  0x6f ; 'o'
000000000020bd4c         db  0x00 ; '.'
000000000020bd4d         db  0x00 ; '.'
000000000020bd4e         db  0x00 ; '.'
000000000020bd4f         db  0x00 ; '.'
000000000020bd50         db  0x01 ; '.'
000000000020bd51         db  0x00 ; '.'
000000000020bd52         db  0x00 ; '.'
000000000020bd53         db  0x00 ; '.'
000000000020bd54         db  0x00 ; '.'
000000000020bd55         db  0x00 ; '.'
000000000020bd56         db  0x00 ; '.'
000000000020bd57         db  0x00 ; '.'
000000000020bd58         db  0xf0 ; '.'
000000000020bd59         db  0xff ; '.'
000000000020bd5a         db  0xff ; '.'
000000000020bd5b         db  0x6f ; 'o'
000000000020bd5c         db  0x00 ; '.'
000000000020bd5d         db  0x00 ; '.'
000000000020bd5e         db  0x00 ; '.'
000000000020bd5f         db  0x00 ; '.'
000000000020bd60         db  0x0a ; '.'
000000000020bd61         db  0x0d ; '.'
000000000020bd62         db  0x00 ; '.'
000000000020bd63         db  0x00 ; '.'
000000000020bd64         db  0x00 ; '.'
000000000020bd65         db  0x00 ; '.'
000000000020bd66         db  0x00 ; '.'
000000000020bd67         db  0x00 ; '.'
000000000020bd68         db  0xf9 ; '.'
000000000020bd69         db  0xff ; '.'
000000000020bd6a         db  0xff ; '.'
000000000020bd6b         db  0x6f ; 'o'
000000000020bd6c         db  0x00 ; '.'
000000000020bd6d         db  0x00 ; '.'
000000000020bd6e         db  0x00 ; '.'
000000000020bd6f         db  0x00 ; '.'
000000000020bd70         db  0x16 ; '.'
000000000020bd71         db  0x00 ; '.'
000000000020bd72         db  0x00 ; '.'
000000000020bd73         db  0x00 ; '.'
000000000020bd74         db  0x00 ; '.'
000000000020bd75         db  0x00 ; '.'
000000000020bd76         db  0x00 ; '.'
000000000020bd77         db  0x00 ; '.'
000000000020bd78         db  0x00 ; '.'
000000000020bd79         db  0x00 ; '.'
000000000020bd7a         db  0x00 ; '.'
000000000020bd7b         db  0x00 ; '.'
000000000020bd7c         db  0x00 ; '.'
000000000020bd7d         db  0x00 ; '.'
000000000020bd7e         db  0x00 ; '.'
000000000020bd7f         db  0x00 ; '.'
000000000020bd80         db  0x00 ; '.'
000000000020bd81         db  0x00 ; '.'
000000000020bd82         db  0x00 ; '.'
000000000020bd83         db  0x00 ; '.'
000000000020bd84         db  0x00 ; '.'
000000000020bd85         db  0x00 ; '.'
000000000020bd86         db  0x00 ; '.'
000000000020bd87         db  0x00 ; '.'
000000000020bd88         db  0x00 ; '.'
000000000020bd89         db  0x00 ; '.'
000000000020bd8a         db  0x00 ; '.'
000000000020bd8b         db  0x00 ; '.'
000000000020bd8c         db  0x00 ; '.'
000000000020bd8d         db  0x00 ; '.'
000000000020bd8e         db  0x00 ; '.'
000000000020bd8f         db  0x00 ; '.'
000000000020bd90         db  0x00 ; '.'
000000000020bd91         db  0x00 ; '.'
000000000020bd92         db  0x00 ; '.'
000000000020bd93         db  0x00 ; '.'
000000000020bd94         db  0x00 ; '.'
000000000020bd95         db  0x00 ; '.'
000000000020bd96         db  0x00 ; '.'
000000000020bd97         db  0x00 ; '.'
000000000020bd98         db  0x00 ; '.'
000000000020bd99         db  0x00 ; '.'
000000000020bd9a         db  0x00 ; '.'
000000000020bd9b         db  0x00 ; '.'
000000000020bd9c         db  0x00 ; '.'
000000000020bd9d         db  0x00 ; '.'
000000000020bd9e         db  0x00 ; '.'
000000000020bd9f         db  0x00 ; '.'
000000000020bda0         db  0x00 ; '.'
000000000020bda1         db  0x00 ; '.'
000000000020bda2         db  0x00 ; '.'
000000000020bda3         db  0x00 ; '.'
000000000020bda4         db  0x00 ; '.'
000000000020bda5         db  0x00 ; '.'
000000000020bda6         db  0x00 ; '.'
000000000020bda7         db  0x00 ; '.'
000000000020bda8         db  0x00 ; '.'
000000000020bda9         db  0x00 ; '.'
000000000020bdaa         db  0x00 ; '.'
000000000020bdab         db  0x00 ; '.'
000000000020bdac         db  0x00 ; '.'
000000000020bdad         db  0x00 ; '.'
000000000020bdae         db  0x00 ; '.'
000000000020bdaf         db  0x00 ; '.'
000000000020bdb0         db  0x00 ; '.'
000000000020bdb1         db  0x00 ; '.'
000000000020bdb2         db  0x00 ; '.'
000000000020bdb3         db  0x00 ; '.'
000000000020bdb4         db  0x00 ; '.'
000000000020bdb5         db  0x00 ; '.'
000000000020bdb6         db  0x00 ; '.'
000000000020bdb7         db  0x00 ; '.'
000000000020bdb8         db  0x00 ; '.'
000000000020bdb9         db  0x00 ; '.'
000000000020bdba         db  0x00 ; '.'
000000000020bdbb         db  0x00 ; '.'
000000000020bdbc         db  0x00 ; '.'
000000000020bdbd         db  0x00 ; '.'
000000000020bdbe         db  0x00 ; '.'
000000000020bdbf         db  0x00 ; '.'
000000000020bdc0         db  0x00 ; '.'
000000000020bdc1         db  0x00 ; '.'
000000000020bdc2         db  0x00 ; '.'
000000000020bdc3         db  0x00 ; '.'
000000000020bdc4         db  0x00 ; '.'
000000000020bdc5         db  0x00 ; '.'
000000000020bdc6         db  0x00 ; '.'
000000000020bdc7         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x20bdc8; 0x20bff0[ (552 bytes)
        ; File offset : [48584; 49136[ (552 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
000000000020bdc8         db  0xd8 ; '.'
000000000020bdc9         db  0xbb ; '.'
000000000020bdca         db  0x20 ; ' '
000000000020bdcb         db  0x00 ; '.'
000000000020bdcc         db  0x00 ; '.'
000000000020bdcd         db  0x00 ; '.'
000000000020bdce         db  0x00 ; '.'
000000000020bdcf         db  0x00 ; '.'
                     qword_20bdd0:
000000000020bdd0         dq         0x0000000000000000                          ; DATA XREF=0x1700
000000000020bdd8         db  0x00 ; '.'                                         ; DATA XREF=0x1706
000000000020bdd9         db  0x00 ; '.'
000000000020bdda         db  0x00 ; '.'
000000000020bddb         db  0x00 ; '.'
000000000020bddc         db  0x00 ; '.'
000000000020bddd         db  0x00 ; '.'
000000000020bdde         db  0x00 ; '.'
000000000020bddf         db  0x00 ; '.'
                     __snprintf_chk@GOT:        // __snprintf_chk
000000000020bde0         dq         0x000000000020c250                          ; DATA XREF=j___snprintf_chk
                     raise@GOT:        // raise
000000000020bde8         dq         0x000000000020c258                          ; DATA XREF=j_raise
                     free@GOT:        // free
000000000020bdf0         dq         0x000000000020c260                          ; DATA XREF=j_free
                     abort@GOT:        // abort
000000000020bdf8         dq         0x000000000020c268                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
000000000020be00         dq         0x000000000020c270                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
000000000020be08         dq         0x000000000020c278                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
000000000020be10         dq         0x000000000020c288                          ; DATA XREF=j__exit
                     __fpending@GOT:        // __fpending
000000000020be18         dq         0x000000000020c290                          ; DATA XREF=j___fpending
                     mkdir@GOT:        // mkdir
000000000020be20         dq         0x000000000020c298                          ; DATA XREF=j_mkdir
                     fcntl@GOT:        // fcntl
000000000020be28         dq         0x000000000020c2a0                          ; DATA XREF=j_fcntl
                     textdomain@GOT:        // textdomain
000000000020be30         dq         0x000000000020c2a8                          ; DATA XREF=j_textdomain
                     __open_2@GOT:        // __open_2
000000000020be38         dq         0x000000000020c2b0                          ; DATA XREF=j___open_2
                     fclose@GOT:        // fclose
000000000020be40         dq         0x000000000020c2b8                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
000000000020be48         dq         0x000000000020c2c0                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
000000000020be50         dq         0x000000000020c2c8                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
000000000020be58         dq         0x000000000020c2d0                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
000000000020be60         dq         0x000000000020c2d8                          ; DATA XREF=j_strlen
                     chdir@GOT:        // chdir
000000000020be68         dq         0x000000000020c2e0                          ; DATA XREF=j_chdir
                     __stack_chk_fail@GOT:        // __stack_chk_fail
000000000020be70         dq         0x000000000020c2e8                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
000000000020be78         dq         0x000000000020c2f0                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
000000000020be80         dq         0x000000000020c2f8                          ; DATA XREF=j_mbrtowc
                     __overflow@GOT:        // __overflow
000000000020be88         dq         0x000000000020c300                          ; DATA XREF=j___overflow
                     strrchr@GOT:        // strrchr
000000000020be90         dq         0x000000000020c308                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
000000000020be98         dq         0x000000000020c310                          ; DATA XREF=j_lseek
                     __assert_fail@GOT:        // __assert_fail
000000000020bea0         dq         0x000000000020c318                          ; DATA XREF=j___assert_fail
                     memset@GOT:        // memset
000000000020bea8         dq         0x000000000020c320                          ; DATA XREF=j_memset
                     close@GOT:        // close
000000000020beb0         dq         0x000000000020c328                          ; DATA XREF=j_close
                     memcmp@GOT:        // memcmp
000000000020beb8         dq         0x000000000020c338                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
000000000020bec0         dq         0x000000000020c340                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
000000000020bec8         dq         0x000000000020c348                          ; DATA XREF=j_calloc
                     umask@GOT:        // umask
000000000020bed0         dq         0x000000000020c358                          ; DATA XREF=j_umask
                     memcpy@GOT:        // memcpy
000000000020bed8         dq         0x000000000020c360                          ; DATA XREF=j_memcpy
                     fileno@GOT:        // fileno
000000000020bee0         dq         0x000000000020c368                          ; DATA XREF=j_fileno
                     __xstat@GOT:        // __xstat
000000000020bee8         dq         0x000000000020c370                          ; DATA XREF=j___xstat
                     malloc@GOT:        // malloc
000000000020bef0         dq         0x000000000020c378                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
000000000020bef8         dq         0x000000000020c380                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
000000000020bf00         dq         0x000000000020c388                          ; DATA XREF=j_nl_langinfo
                     __fxstat@GOT:        // __fxstat
000000000020bf08         dq         0x000000000020c390                          ; DATA XREF=j___fxstat
                     lchown@GOT:        // lchown
000000000020bf10         dq         0x000000000020c398                          ; DATA XREF=j_lchown
                     __freading@GOT:        // __freading
000000000020bf18         dq         0x000000000020c3a0                          ; DATA XREF=j___freading
                     fchdir@GOT:        // fchdir
000000000020bf20         dq         0x000000000020c3a8                          ; DATA XREF=j_fchdir
                     fwrite_unlocked@GOT:        // fwrite_unlocked
000000000020bf28         dq         0x000000000020c3b0                          ; DATA XREF=j_fwrite_unlocked
                     chown@GOT:        // chown
000000000020bf30         dq         0x000000000020c3b8                          ; DATA XREF=j_chown
                     realloc@GOT:        // realloc
000000000020bf38         dq         0x000000000020c3c0                          ; DATA XREF=j_realloc
                     setlocale@GOT:        // setlocale
000000000020bf40         dq         0x000000000020c3c8                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
000000000020bf48         dq         0x000000000020c3d0                          ; DATA XREF=j___printf_chk
                     fchmod@GOT:        // fchmod
000000000020bf50         dq         0x000000000020c3d8                          ; DATA XREF=j_fchmod
                     chmod@GOT:        // chmod
000000000020bf58         dq         0x000000000020c3e0                          ; DATA XREF=j_chmod
                     error@GOT:        // error
000000000020bf60         dq         0x000000000020c3e8                          ; DATA XREF=j_error
                     waitpid@GOT:        // waitpid
000000000020bf68         dq         0x000000000020c3f0                          ; DATA XREF=j_waitpid
                     open@GOT:        // open
000000000020bf70         dq         0x000000000020c3f8                          ; DATA XREF=j_open
                     fseeko@GOT:        // fseeko
000000000020bf78         dq         0x000000000020c400                          ; DATA XREF=j_fseeko
                     fchown@GOT:        // fchown
000000000020bf80         dq         0x000000000020c408                          ; DATA XREF=j_fchown
                     __cxa_atexit@GOT:        // __cxa_atexit
000000000020bf88         dq         0x000000000020c410                          ; DATA XREF=j___cxa_atexit
                     exit@GOT:        // exit
000000000020bf90         dq         0x000000000020c418                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
000000000020bf98         dq         0x000000000020c420                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
000000000020bfa0         dq         0x000000000020c428                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
000000000020bfa8         dq         0x000000000020c438                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
000000000020bfb0         dq         0x000000000020c440                          ; DATA XREF=j_iswprint
                     fork@GOT:        // fork
000000000020bfb8         dq         0x000000000020c450                          ; DATA XREF=j_fork
                     __ctype_b_loc@GOT:        // __ctype_b_loc
000000000020bfc0         dq         0x000000000020c458                          ; DATA XREF=j___ctype_b_loc
                     qword_20bfc8:
000000000020bfc8         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
000000000020bfd0         db  0x00 ; '.'                                         ; DATA XREF=_start+36
000000000020bfd1         db  0x00 ; '.'
000000000020bfd2         db  0x00 ; '.'
000000000020bfd3         db  0x00 ; '.'
000000000020bfd4         db  0x00 ; '.'
000000000020bfd5         db  0x00 ; '.'
000000000020bfd6         db  0x00 ; '.'
000000000020bfd7         db  0x00 ; '.'
                     qword_20bfd8:
000000000020bfd8         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_20bfe0:
000000000020bfe0         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_20bfe8:
000000000020bfe8         dq         0x0000000000000000                          ; DATA XREF=j_qword_20bfe8, __do_global_dtors_aux+9
000000000020bff0         db  0x00 ; '.'
000000000020bff1         db  0x00 ; '.'
000000000020bff2         db  0x00 ; '.'
000000000020bff3         db  0x00 ; '.'
000000000020bff4         db  0x00 ; '.'
000000000020bff5         db  0x00 ; '.'
000000000020bff6         db  0x00 ; '.'
000000000020bff7         db  0x00 ; '.'
000000000020bff8         db  0x00 ; '.'
000000000020bff9         db  0x00 ; '.'
000000000020bffa         db  0x00 ; '.'
000000000020bffb         db  0x00 ; '.'
000000000020bffc         db  0x00 ; '.'
000000000020bffd         db  0x00 ; '.'
000000000020bffe         db  0x00 ; '.'
000000000020bfff         db  0x00 ; '.'


        ; Section .data
        ; Range: [0x20c000; 0x20c080[ (128 bytes)
        ; File offset : [49152; 49280[ (128 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

000000000020c000         db  0x00 ; '.'
000000000020c001         db  0x00 ; '.'
000000000020c002         db  0x00 ; '.'
000000000020c003         db  0x00 ; '.'
000000000020c004         db  0x00 ; '.'
000000000020c005         db  0x00 ; '.'
000000000020c006         db  0x00 ; '.'
000000000020c007         db  0x00 ; '.'
                     __dso_handle:
000000000020c008         dq         0x000000000020c008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     Version:
000000000020c010         dq         0x0000000000008c94                          ; "8.31", DATA XREF=main+258
                     exit_failure:
000000000020c018         dd         0x00000001                                  ; DATA XREF=close_stdout+130, xalloc_die+23
000000000020c01c         db  0x00 ; '.'
000000000020c01d         db  0x00 ; '.'
000000000020c01e         db  0x00 ; '.'
000000000020c01f         db  0x00 ; '.'
                     quote_quoting_options:
000000000020c020         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
000000000020c021         db  0x00 ; '.'
000000000020c022         db  0x00 ; '.'
000000000020c023         db  0x00 ; '.'
000000000020c024         db  0x00 ; '.'
000000000020c025         db  0x00 ; '.'
000000000020c026         db  0x00 ; '.'
000000000020c027         db  0x00 ; '.'
000000000020c028         db  0x00 ; '.'
000000000020c029         db  0x00 ; '.'
000000000020c02a         db  0x00 ; '.'
000000000020c02b         db  0x00 ; '.'
000000000020c02c         db  0x00 ; '.'
000000000020c02d         db  0x00 ; '.'
000000000020c02e         db  0x00 ; '.'
000000000020c02f         db  0x00 ; '.'
000000000020c030         db  0x00 ; '.'
000000000020c031         db  0x00 ; '.'
000000000020c032         db  0x00 ; '.'
000000000020c033         db  0x00 ; '.'
000000000020c034         db  0x00 ; '.'
000000000020c035         db  0x00 ; '.'
000000000020c036         db  0x00 ; '.'
000000000020c037         db  0x00 ; '.'
000000000020c038         db  0x00 ; '.'
000000000020c039         db  0x00 ; '.'
000000000020c03a         db  0x00 ; '.'
000000000020c03b         db  0x00 ; '.'
000000000020c03c         db  0x00 ; '.'
000000000020c03d         db  0x00 ; '.'
000000000020c03e         db  0x00 ; '.'
000000000020c03f         db  0x00 ; '.'
000000000020c040         db  0x00 ; '.'
000000000020c041         db  0x00 ; '.'
000000000020c042         db  0x00 ; '.'
000000000020c043         db  0x00 ; '.'
000000000020c044         db  0x00 ; '.'
000000000020c045         db  0x00 ; '.'
000000000020c046         db  0x00 ; '.'
000000000020c047         db  0x00 ; '.'
000000000020c048         db  0x00 ; '.'
000000000020c049         db  0x00 ; '.'
000000000020c04a         db  0x00 ; '.'
000000000020c04b         db  0x00 ; '.'
000000000020c04c         db  0x00 ; '.'
000000000020c04d         db  0x00 ; '.'
000000000020c04e         db  0x00 ; '.'
000000000020c04f         db  0x00 ; '.'
000000000020c050         db  0x00 ; '.'
000000000020c051         db  0x00 ; '.'
000000000020c052         db  0x00 ; '.'
000000000020c053         db  0x00 ; '.'
000000000020c054         db  0x00 ; '.'
000000000020c055         db  0x00 ; '.'
000000000020c056         db  0x00 ; '.'
000000000020c057         db  0x00 ; '.'
                     nslots:
000000000020c058         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020c05c         align      32
                     slotvec:
000000000020c060         dq         0x000000000020c070                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
000000000020c068         db  0x00 ; '.'
000000000020c069         db  0x00 ; '.'
000000000020c06a         db  0x00 ; '.'
000000000020c06b         db  0x00 ; '.'
000000000020c06c         db  0x00 ; '.'
000000000020c06d         db  0x00 ; '.'
000000000020c06e         db  0x00 ; '.'
000000000020c06f         db  0x00 ; '.'
                     slotvec0:
000000000020c070         dq         1.26481e-321, 1.06054e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec


        ; Section .bss
        ; Range: [0x20c080; 0x20c240[ (448 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
000000000020c080         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
000000000020c081         db  0x00 ; '.'
000000000020c082         db  0x00 ; '.'
000000000020c083         db  0x00 ; '.'
000000000020c084         db  0x00 ; '.'
000000000020c085         db  0x00 ; '.'
000000000020c086         db  0x00 ; '.'
000000000020c087         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
000000000020c088         db  0x00 ; '.'                                         ; DATA XREF=main+251, announce_mkdir.part.4+21, usage+125, usage+162, usage+199, usage+236, usage+273, usage+310, usage+904, close_stdout+6, emit_bug_reporting_address+90
000000000020c089         db  0x00 ; '.'
000000000020c08a         db  0x00 ; '.'
000000000020c08b         db  0x00 ; '.'
000000000020c08c         db  0x00 ; '.'
000000000020c08d         db  0x00 ; '.'
000000000020c08e         db  0x00 ; '.'
000000000020c08f         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
000000000020c090         db  0x00 ; '.'                                         ; DATA XREF=main+401, main+458
000000000020c091         db  0x00 ; '.'
000000000020c092         db  0x00 ; '.'
000000000020c093         db  0x00 ; '.'
000000000020c094         db  0x00 ; '.'
000000000020c095         db  0x00 ; '.'
000000000020c096         db  0x00 ; '.'
000000000020c097         db  0x00 ; '.'
                     optarg@@GLIBC_2.2.5:
000000000020c098         db  0x00 ; '.'                                         ; DATA XREF=main+224, main+304
000000000020c099         db  0x00 ; '.'
000000000020c09a         db  0x00 ; '.'
000000000020c09b         db  0x00 ; '.'
000000000020c09c         db  0x00 ; '.'
000000000020c09d         db  0x00 ; '.'
000000000020c09e         db  0x00 ; '.'
000000000020c09f         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
000000000020c0a0         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
000000000020c0a1         db  0x00 ; '.'
000000000020c0a2         db  0x00 ; '.'
000000000020c0a3         db  0x00 ; '.'
000000000020c0a4         db  0x00 ; '.'
000000000020c0a5         db  0x00 ; '.'
000000000020c0a6         db  0x00 ; '.'
000000000020c0a7         db  0x00 ; '.'
000000000020c0a8         db  0x00 ; '.'
000000000020c0a9         db  0x00 ; '.'
000000000020c0aa         db  0x00 ; '.'
000000000020c0ab         db  0x00 ; '.'
000000000020c0ac         db  0x00 ; '.'
000000000020c0ad         db  0x00 ; '.'
000000000020c0ae         db  0x00 ; '.'
000000000020c0af         db  0x00 ; '.'
000000000020c0b0         db  0x00 ; '.'
000000000020c0b1         db  0x00 ; '.'
000000000020c0b2         db  0x00 ; '.'
000000000020c0b3         db  0x00 ; '.'
000000000020c0b4         db  0x00 ; '.'
000000000020c0b5         db  0x00 ; '.'
000000000020c0b6         db  0x00 ; '.'
000000000020c0b7         db  0x00 ; '.'
000000000020c0b8         db  0x00 ; '.'
000000000020c0b9         db  0x00 ; '.'
000000000020c0ba         db  0x00 ; '.'
000000000020c0bb         db  0x00 ; '.'
000000000020c0bc         db  0x00 ; '.'
000000000020c0bd         db  0x00 ; '.'
000000000020c0be         db  0x00 ; '.'
000000000020c0bf         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
000000000020c0c0         db  0x00 ; '.'                                         ; DATA XREF=usage+61, close_stdout+44, set_program_name+125
000000000020c0c1         db  0x00 ; '.'
000000000020c0c2         db  0x00 ; '.'
000000000020c0c3         db  0x00 ; '.'
000000000020c0c4         db  0x00 ; '.'
000000000020c0c5         db  0x00 ; '.'
000000000020c0c6         db  0x00 ; '.'
000000000020c0c7         db  0x00 ; '.'
                     completed.7697:
000000000020c0c8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
000000000020c0c9         db  0x00 ; '.'
000000000020c0ca         db  0x00 ; '.'
000000000020c0cb         db  0x00 ; '.'
000000000020c0cc         db  0x00 ; '.'
000000000020c0cd         db  0x00 ; '.'
000000000020c0ce         db  0x00 ; '.'
000000000020c0cf         db  0x00 ; '.'
                     ignore_EPIPE:
000000000020c0d0         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
000000000020c0d1         db  0x00 ; '.'
000000000020c0d2         db  0x00 ; '.'
000000000020c0d3         db  0x00 ; '.'
000000000020c0d4         db  0x00 ; '.'
000000000020c0d5         db  0x00 ; '.'
000000000020c0d6         db  0x00 ; '.'
000000000020c0d7         db  0x00 ; '.'
                     file_name:
000000000020c0d8         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
000000000020c0d9         db  0x00 ; '.'
000000000020c0da         db  0x00 ; '.'
000000000020c0db         db  0x00 ; '.'
000000000020c0dc         db  0x00 ; '.'
000000000020c0dd         db  0x00 ; '.'
000000000020c0de         db  0x00 ; '.'
000000000020c0df         db  0x00 ; '.'
                     program_name:
000000000020c0e0         db  0x00 ; '.'                                         ; DATA XREF=usage+20, prog_fprintf+113, set_program_name+109
000000000020c0e1         db  0x00 ; '.'
000000000020c0e2         db  0x00 ; '.'
000000000020c0e3         db  0x00 ; '.'
000000000020c0e4         db  0x00 ; '.'
000000000020c0e5         db  0x00 ; '.'
000000000020c0e6         db  0x00 ; '.'
000000000020c0e7         db  0x00 ; '.'
000000000020c0e8         db  0x00 ; '.'
000000000020c0e9         db  0x00 ; '.'
000000000020c0ea         db  0x00 ; '.'
000000000020c0eb         db  0x00 ; '.'
000000000020c0ec         db  0x00 ; '.'
000000000020c0ed         db  0x00 ; '.'
000000000020c0ee         db  0x00 ; '.'
000000000020c0ef         db  0x00 ; '.'
000000000020c0f0         db  0x00 ; '.'
000000000020c0f1         db  0x00 ; '.'
000000000020c0f2         db  0x00 ; '.'
000000000020c0f3         db  0x00 ; '.'
000000000020c0f4         db  0x00 ; '.'
000000000020c0f5         db  0x00 ; '.'
000000000020c0f6         db  0x00 ; '.'
000000000020c0f7         db  0x00 ; '.'
000000000020c0f8         db  0x00 ; '.'
000000000020c0f9         db  0x00 ; '.'
000000000020c0fa         db  0x00 ; '.'
000000000020c0fb         db  0x00 ; '.'
000000000020c0fc         db  0x00 ; '.'
000000000020c0fd         db  0x00 ; '.'
000000000020c0fe         db  0x00 ; '.'
000000000020c0ff         db  0x00 ; '.'
                     slot0:
000000000020c100         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
000000000020c101         db  0x00 ; '.'
000000000020c102         db  0x00 ; '.'
000000000020c103         db  0x00 ; '.'
000000000020c104         db  0x00 ; '.'
000000000020c105         db  0x00 ; '.'
000000000020c106         db  0x00 ; '.'
000000000020c107         db  0x00 ; '.'
000000000020c108         db  0x00 ; '.'
000000000020c109         db  0x00 ; '.'
000000000020c10a         db  0x00 ; '.'
000000000020c10b         db  0x00 ; '.'
000000000020c10c         db  0x00 ; '.'
000000000020c10d         db  0x00 ; '.'
000000000020c10e         db  0x00 ; '.'
000000000020c10f         db  0x00 ; '.'
000000000020c110         db  0x00 ; '.'
000000000020c111         db  0x00 ; '.'
000000000020c112         db  0x00 ; '.'
000000000020c113         db  0x00 ; '.'
000000000020c114         db  0x00 ; '.'
000000000020c115         db  0x00 ; '.'
000000000020c116         db  0x00 ; '.'
000000000020c117         db  0x00 ; '.'
000000000020c118         db  0x00 ; '.'
000000000020c119         db  0x00 ; '.'
000000000020c11a         db  0x00 ; '.'
000000000020c11b         db  0x00 ; '.'
000000000020c11c         db  0x00 ; '.'
000000000020c11d         db  0x00 ; '.'
000000000020c11e         db  0x00 ; '.'
000000000020c11f         db  0x00 ; '.'
000000000020c120         db  0x00 ; '.'
000000000020c121         db  0x00 ; '.'
000000000020c122         db  0x00 ; '.'
000000000020c123         db  0x00 ; '.'
000000000020c124         db  0x00 ; '.'
000000000020c125         db  0x00 ; '.'
000000000020c126         db  0x00 ; '.'
000000000020c127         db  0x00 ; '.'
000000000020c128         db  0x00 ; '.'
000000000020c129         db  0x00 ; '.'
000000000020c12a         db  0x00 ; '.'
000000000020c12b         db  0x00 ; '.'
000000000020c12c         db  0x00 ; '.'
000000000020c12d         db  0x00 ; '.'
000000000020c12e         db  0x00 ; '.'
000000000020c12f         db  0x00 ; '.'
000000000020c130         db  0x00 ; '.'
000000000020c131         db  0x00 ; '.'
000000000020c132         db  0x00 ; '.'
000000000020c133         db  0x00 ; '.'
000000000020c134         db  0x00 ; '.'
000000000020c135         db  0x00 ; '.'
000000000020c136         db  0x00 ; '.'
000000000020c137         db  0x00 ; '.'
000000000020c138         db  0x00 ; '.'
000000000020c139         db  0x00 ; '.'
000000000020c13a         db  0x00 ; '.'
000000000020c13b         db  0x00 ; '.'
000000000020c13c         db  0x00 ; '.'
000000000020c13d         db  0x00 ; '.'
000000000020c13e         db  0x00 ; '.'
000000000020c13f         db  0x00 ; '.'
000000000020c140         db  0x00 ; '.'
000000000020c141         db  0x00 ; '.'
000000000020c142         db  0x00 ; '.'
000000000020c143         db  0x00 ; '.'
000000000020c144         db  0x00 ; '.'
000000000020c145         db  0x00 ; '.'
000000000020c146         db  0x00 ; '.'
000000000020c147         db  0x00 ; '.'
000000000020c148         db  0x00 ; '.'
000000000020c149         db  0x00 ; '.'
000000000020c14a         db  0x00 ; '.'
000000000020c14b         db  0x00 ; '.'
000000000020c14c         db  0x00 ; '.'
000000000020c14d         db  0x00 ; '.'
000000000020c14e         db  0x00 ; '.'
000000000020c14f         db  0x00 ; '.'
000000000020c150         db  0x00 ; '.'
000000000020c151         db  0x00 ; '.'
000000000020c152         db  0x00 ; '.'
000000000020c153         db  0x00 ; '.'
000000000020c154         db  0x00 ; '.'
000000000020c155         db  0x00 ; '.'
000000000020c156         db  0x00 ; '.'
000000000020c157         db  0x00 ; '.'
000000000020c158         db  0x00 ; '.'
000000000020c159         db  0x00 ; '.'
000000000020c15a         db  0x00 ; '.'
000000000020c15b         db  0x00 ; '.'
000000000020c15c         db  0x00 ; '.'
000000000020c15d         db  0x00 ; '.'
000000000020c15e         db  0x00 ; '.'
000000000020c15f         db  0x00 ; '.'
000000000020c160         db  0x00 ; '.'
000000000020c161         db  0x00 ; '.'
000000000020c162         db  0x00 ; '.'
000000000020c163         db  0x00 ; '.'
000000000020c164         db  0x00 ; '.'
000000000020c165         db  0x00 ; '.'
000000000020c166         db  0x00 ; '.'
000000000020c167         db  0x00 ; '.'
000000000020c168         db  0x00 ; '.'
000000000020c169         db  0x00 ; '.'
000000000020c16a         db  0x00 ; '.'
000000000020c16b         db  0x00 ; '.'
000000000020c16c         db  0x00 ; '.'
000000000020c16d         db  0x00 ; '.'
000000000020c16e         db  0x00 ; '.'
000000000020c16f         db  0x00 ; '.'
000000000020c170         db  0x00 ; '.'
000000000020c171         db  0x00 ; '.'
000000000020c172         db  0x00 ; '.'
000000000020c173         db  0x00 ; '.'
000000000020c174         db  0x00 ; '.'
000000000020c175         db  0x00 ; '.'
000000000020c176         db  0x00 ; '.'
000000000020c177         db  0x00 ; '.'
000000000020c178         db  0x00 ; '.'
000000000020c179         db  0x00 ; '.'
000000000020c17a         db  0x00 ; '.'
000000000020c17b         db  0x00 ; '.'
000000000020c17c         db  0x00 ; '.'
000000000020c17d         db  0x00 ; '.'
000000000020c17e         db  0x00 ; '.'
000000000020c17f         db  0x00 ; '.'
000000000020c180         db  0x00 ; '.'
000000000020c181         db  0x00 ; '.'
000000000020c182         db  0x00 ; '.'
000000000020c183         db  0x00 ; '.'
000000000020c184         db  0x00 ; '.'
000000000020c185         db  0x00 ; '.'
000000000020c186         db  0x00 ; '.'
000000000020c187         db  0x00 ; '.'
000000000020c188         db  0x00 ; '.'
000000000020c189         db  0x00 ; '.'
000000000020c18a         db  0x00 ; '.'
000000000020c18b         db  0x00 ; '.'
000000000020c18c         db  0x00 ; '.'
000000000020c18d         db  0x00 ; '.'
000000000020c18e         db  0x00 ; '.'
000000000020c18f         db  0x00 ; '.'
000000000020c190         db  0x00 ; '.'
000000000020c191         db  0x00 ; '.'
000000000020c192         db  0x00 ; '.'
000000000020c193         db  0x00 ; '.'
000000000020c194         db  0x00 ; '.'
000000000020c195         db  0x00 ; '.'
000000000020c196         db  0x00 ; '.'
000000000020c197         db  0x00 ; '.'
000000000020c198         db  0x00 ; '.'
000000000020c199         db  0x00 ; '.'
000000000020c19a         db  0x00 ; '.'
000000000020c19b         db  0x00 ; '.'
000000000020c19c         db  0x00 ; '.'
000000000020c19d         db  0x00 ; '.'
000000000020c19e         db  0x00 ; '.'
000000000020c19f         db  0x00 ; '.'
000000000020c1a0         db  0x00 ; '.'
000000000020c1a1         db  0x00 ; '.'
000000000020c1a2         db  0x00 ; '.'
000000000020c1a3         db  0x00 ; '.'
000000000020c1a4         db  0x00 ; '.'
000000000020c1a5         db  0x00 ; '.'
000000000020c1a6         db  0x00 ; '.'
000000000020c1a7         db  0x00 ; '.'
000000000020c1a8         db  0x00 ; '.'
000000000020c1a9         db  0x00 ; '.'
000000000020c1aa         db  0x00 ; '.'
000000000020c1ab         db  0x00 ; '.'
000000000020c1ac         db  0x00 ; '.'
000000000020c1ad         db  0x00 ; '.'
000000000020c1ae         db  0x00 ; '.'
000000000020c1af         db  0x00 ; '.'
000000000020c1b0         db  0x00 ; '.'
000000000020c1b1         db  0x00 ; '.'
000000000020c1b2         db  0x00 ; '.'
000000000020c1b3         db  0x00 ; '.'
000000000020c1b4         db  0x00 ; '.'
000000000020c1b5         db  0x00 ; '.'
000000000020c1b6         db  0x00 ; '.'
000000000020c1b7         db  0x00 ; '.'
000000000020c1b8         db  0x00 ; '.'
000000000020c1b9         db  0x00 ; '.'
000000000020c1ba         db  0x00 ; '.'
000000000020c1bb         db  0x00 ; '.'
000000000020c1bc         db  0x00 ; '.'
000000000020c1bd         db  0x00 ; '.'
000000000020c1be         db  0x00 ; '.'
000000000020c1bf         db  0x00 ; '.'
000000000020c1c0         db  0x00 ; '.'
000000000020c1c1         db  0x00 ; '.'
000000000020c1c2         db  0x00 ; '.'
000000000020c1c3         db  0x00 ; '.'
000000000020c1c4         db  0x00 ; '.'
000000000020c1c5         db  0x00 ; '.'
000000000020c1c6         db  0x00 ; '.'
000000000020c1c7         db  0x00 ; '.'
000000000020c1c8         db  0x00 ; '.'
000000000020c1c9         db  0x00 ; '.'
000000000020c1ca         db  0x00 ; '.'
000000000020c1cb         db  0x00 ; '.'
000000000020c1cc         db  0x00 ; '.'
000000000020c1cd         db  0x00 ; '.'
000000000020c1ce         db  0x00 ; '.'
000000000020c1cf         db  0x00 ; '.'
000000000020c1d0         db  0x00 ; '.'
000000000020c1d1         db  0x00 ; '.'
000000000020c1d2         db  0x00 ; '.'
000000000020c1d3         db  0x00 ; '.'
000000000020c1d4         db  0x00 ; '.'
000000000020c1d5         db  0x00 ; '.'
000000000020c1d6         db  0x00 ; '.'
000000000020c1d7         db  0x00 ; '.'
000000000020c1d8         db  0x00 ; '.'
000000000020c1d9         db  0x00 ; '.'
000000000020c1da         db  0x00 ; '.'
000000000020c1db         db  0x00 ; '.'
000000000020c1dc         db  0x00 ; '.'
000000000020c1dd         db  0x00 ; '.'
000000000020c1de         db  0x00 ; '.'
000000000020c1df         db  0x00 ; '.'
000000000020c1e0         db  0x00 ; '.'
000000000020c1e1         db  0x00 ; '.'
000000000020c1e2         db  0x00 ; '.'
000000000020c1e3         db  0x00 ; '.'
000000000020c1e4         db  0x00 ; '.'
000000000020c1e5         db  0x00 ; '.'
000000000020c1e6         db  0x00 ; '.'
000000000020c1e7         db  0x00 ; '.'
000000000020c1e8         db  0x00 ; '.'
000000000020c1e9         db  0x00 ; '.'
000000000020c1ea         db  0x00 ; '.'
000000000020c1eb         db  0x00 ; '.'
000000000020c1ec         db  0x00 ; '.'
000000000020c1ed         db  0x00 ; '.'
000000000020c1ee         db  0x00 ; '.'
000000000020c1ef         db  0x00 ; '.'
000000000020c1f0         db  0x00 ; '.'
000000000020c1f1         db  0x00 ; '.'
000000000020c1f2         db  0x00 ; '.'
000000000020c1f3         db  0x00 ; '.'
000000000020c1f4         db  0x00 ; '.'
000000000020c1f5         db  0x00 ; '.'
000000000020c1f6         db  0x00 ; '.'
000000000020c1f7         db  0x00 ; '.'
000000000020c1f8         db  0x00 ; '.'
000000000020c1f9         db  0x00 ; '.'
000000000020c1fa         db  0x00 ; '.'
000000000020c1fb         db  0x00 ; '.'
000000000020c1fc         db  0x00 ; '.'
000000000020c1fd         db  0x00 ; '.'
000000000020c1fe         db  0x00 ; '.'
000000000020c1ff         db  0x00 ; '.'
                     default_quoting_options:
000000000020c200         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
000000000020c201         db  0x00 ; '.'
000000000020c202         db  0x00 ; '.'
000000000020c203         db  0x00 ; '.'
000000000020c204         db  0x00 ; '.'
000000000020c205         db  0x00 ; '.'
000000000020c206         db  0x00 ; '.'
000000000020c207         db  0x00 ; '.'
000000000020c208         db  0x00 ; '.'
000000000020c209         db  0x00 ; '.'
000000000020c20a         db  0x00 ; '.'
000000000020c20b         db  0x00 ; '.'
000000000020c20c         db  0x00 ; '.'
000000000020c20d         db  0x00 ; '.'
000000000020c20e         db  0x00 ; '.'
000000000020c20f         db  0x00 ; '.'
000000000020c210         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
000000000020c211         db  0x00 ; '.'
000000000020c212         db  0x00 ; '.'
000000000020c213         db  0x00 ; '.'
000000000020c214         db  0x00 ; '.'
000000000020c215         db  0x00 ; '.'
000000000020c216         db  0x00 ; '.'
000000000020c217         db  0x00 ; '.'
000000000020c218         db  0x00 ; '.'
000000000020c219         db  0x00 ; '.'
000000000020c21a         db  0x00 ; '.'
000000000020c21b         db  0x00 ; '.'
000000000020c21c         db  0x00 ; '.'
000000000020c21d         db  0x00 ; '.'
000000000020c21e         db  0x00 ; '.'
000000000020c21f         db  0x00 ; '.'
000000000020c220         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
000000000020c221         db  0x00 ; '.'
000000000020c222         db  0x00 ; '.'
000000000020c223         db  0x00 ; '.'
000000000020c224         db  0x00 ; '.'
000000000020c225         db  0x00 ; '.'
000000000020c226         db  0x00 ; '.'
000000000020c227         db  0x00 ; '.'
000000000020c228         db  0x00 ; '.'
000000000020c229         db  0x00 ; '.'
000000000020c22a         db  0x00 ; '.'
000000000020c22b         db  0x00 ; '.'
000000000020c22c         db  0x00 ; '.'
000000000020c22d         db  0x00 ; '.'
000000000020c22e         db  0x00 ; '.'
000000000020c22f         db  0x00 ; '.'
                     qword_20c230:
000000000020c230         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
000000000020c231         db  0x00 ; '.'
000000000020c232         db  0x00 ; '.'
000000000020c233         db  0x00 ; '.'
000000000020c234         db  0x00 ; '.'
000000000020c235         db  0x00 ; '.'
000000000020c236         db  0x00 ; '.'
000000000020c237         db  0x00 ; '.'
                     have_dupfd_cloexec.3326:
000000000020c238         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+94, rpl_fcntl+143, rpl_fcntl+438, rpl_fcntl+574
000000000020c239         db  0x00 ; '.'
000000000020c23a         db  0x00 ; '.'
000000000020c23b         db  0x00 ; '.'
000000000020c23c         db  0x00 ; '.'
000000000020c23d         db  0x00 ; '.'
000000000020c23e         db  0x00 ; '.'
000000000020c23f         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x20c250; 0x20c670[ (1056 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x20c250; 0x4188c0[ (2147952 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     __snprintf_chk:
000000000020c250         extern function code                                   ; DATA XREF=__snprintf_chk@GOT
                     raise:
000000000020c258         extern function code                                   ; DATA XREF=raise@GOT
                     free:
000000000020c260         extern function code                                   ; DATA XREF=free@GOT
                     abort:
000000000020c268         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
000000000020c270         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
000000000020c278         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
000000000020c280         extern function code
                     _exit:
000000000020c288         extern function code                                   ; DATA XREF=_exit@GOT
                     __fpending:
000000000020c290         extern function code                                   ; DATA XREF=__fpending@GOT
                     mkdir:
000000000020c298         extern function code                                   ; DATA XREF=mkdir@GOT
                     fcntl:
000000000020c2a0         extern function code                                   ; DATA XREF=fcntl@GOT
                     textdomain:
000000000020c2a8         extern function code                                   ; DATA XREF=textdomain@GOT
                     __open_2:
000000000020c2b0         extern function code                                   ; DATA XREF=__open_2@GOT
                     fclose:
000000000020c2b8         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
000000000020c2c0         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
000000000020c2c8         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
000000000020c2d0         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
000000000020c2d8         extern function code                                   ; DATA XREF=strlen@GOT
                     chdir:
000000000020c2e0         extern function code                                   ; DATA XREF=chdir@GOT
                     __stack_chk_fail:
000000000020c2e8         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
000000000020c2f0         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
000000000020c2f8         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     __overflow:
000000000020c300         extern function code                                   ; DATA XREF=__overflow@GOT
                     strrchr:
000000000020c308         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
000000000020c310         extern function code                                   ; DATA XREF=lseek@GOT
                     __assert_fail:
000000000020c318         extern function code                                   ; DATA XREF=__assert_fail@GOT
                     memset:
000000000020c320         extern function code                                   ; DATA XREF=memset@GOT
                     close:
000000000020c328         extern function code                                   ; DATA XREF=close@GOT
                     __libc_start_main:
000000000020c330         extern function code
                     memcmp:
000000000020c338         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
000000000020c340         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
000000000020c348         extern function code                                   ; DATA XREF=calloc@GOT
                     __gmon_start__:
000000000020c350         extern function code
                     umask:
000000000020c358         extern function code                                   ; DATA XREF=umask@GOT
                     memcpy:
000000000020c360         extern function code                                   ; DATA XREF=memcpy@GOT
                     fileno:
000000000020c368         extern function code                                   ; DATA XREF=fileno@GOT
                     __xstat:
000000000020c370         extern function code                                   ; DATA XREF=__xstat@GOT
                     malloc:
000000000020c378         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
000000000020c380         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
000000000020c388         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __fxstat:
000000000020c390         extern function code                                   ; DATA XREF=__fxstat@GOT
                     lchown:
000000000020c398         extern function code                                   ; DATA XREF=lchown@GOT
                     __freading:
000000000020c3a0         extern function code                                   ; DATA XREF=__freading@GOT
                     fchdir:
000000000020c3a8         extern function code                                   ; DATA XREF=fchdir@GOT
                     fwrite_unlocked:
000000000020c3b0         extern function code                                   ; DATA XREF=fwrite_unlocked@GOT
                     chown:
000000000020c3b8         extern function code                                   ; DATA XREF=chown@GOT
                     realloc:
000000000020c3c0         extern function code                                   ; DATA XREF=realloc@GOT
                     setlocale:
000000000020c3c8         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
000000000020c3d0         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     fchmod:
000000000020c3d8         extern function code                                   ; DATA XREF=fchmod@GOT
                     chmod:
000000000020c3e0         extern function code                                   ; DATA XREF=chmod@GOT
                     error:
000000000020c3e8         extern function code                                   ; DATA XREF=error@GOT
                     waitpid:
000000000020c3f0         extern function code                                   ; DATA XREF=waitpid@GOT
                     open:
000000000020c3f8         extern function code                                   ; DATA XREF=open@GOT
                     fseeko:
000000000020c400         extern function code                                   ; DATA XREF=fseeko@GOT
                     fchown:
000000000020c408         extern function code                                   ; DATA XREF=fchown@GOT
                     __cxa_atexit:
000000000020c410         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     exit:
000000000020c418         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
000000000020c420         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
000000000020c428         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
000000000020c430         extern function code
                     mbsinit:
000000000020c438         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
000000000020c440         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
000000000020c448         extern function code
                     fork:
000000000020c450         extern function code                                   ; DATA XREF=fork@GOT
                     __ctype_b_loc:
000000000020c458         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     __snprintf_chk@@GLIBC_2.3.4:
000000000020c460         extern function code
                     raise@@GLIBC_2.2.5:
000000000020c468         extern function code
                     free@@GLIBC_2.2.5:
000000000020c470         extern function code
                     abort@@GLIBC_2.2.5:
000000000020c478         extern function code
                     __errno_location@@GLIBC_2.2.5:
000000000020c480         extern function code
                     strncmp@@GLIBC_2.2.5:
000000000020c488         extern function code
                     _ITM_deregisterTMCloneTable_20c490:        // _ITM_deregisterTMCloneTable
000000000020c490         extern function code
                     _exit@@GLIBC_2.2.5:
000000000020c498         extern function code
                     __fpending@@GLIBC_2.2.5:
000000000020c4a0         extern function code
                     mkdir@@GLIBC_2.2.5:
000000000020c4a8         extern function code
                     fcntl@@GLIBC_2.2.5:
000000000020c4b0         extern function code
                     textdomain@@GLIBC_2.2.5:
000000000020c4b8         extern function code
                     __open_2@@GLIBC_2.7:
000000000020c4c0         extern function code
                     fclose@@GLIBC_2.2.5:
000000000020c4c8         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
000000000020c4d0         extern function code
                     dcgettext@@GLIBC_2.2.5:
000000000020c4d8         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
000000000020c4e0         extern function code
                     strlen@@GLIBC_2.2.5:
000000000020c4e8         extern function code
                     chdir@@GLIBC_2.2.5:
000000000020c4f0         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
000000000020c4f8         extern function code
                     getopt_long@@GLIBC_2.2.5:
000000000020c500         extern function code
                     mbrtowc@@GLIBC_2.2.5:
000000000020c508         extern function code
                     __overflow@@GLIBC_2.2.5:
000000000020c510         extern function code
                     strrchr@@GLIBC_2.2.5:
000000000020c518         extern function code
                     lseek@@GLIBC_2.2.5:
000000000020c520         extern function code
                     __assert_fail@@GLIBC_2.2.5:
000000000020c528         extern function code
                     memset@@GLIBC_2.2.5:
000000000020c530         extern function code
                     close@@GLIBC_2.2.5:
000000000020c538         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
000000000020c540         extern function code
                     memcmp@@GLIBC_2.2.5:
000000000020c548         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
000000000020c550         extern function code
                     calloc@@GLIBC_2.2.5:
000000000020c558         extern function code
                     __gmon_start___20c560:        // __gmon_start__
000000000020c560         extern function code
                     umask@@GLIBC_2.2.5:
000000000020c568         extern function code
                     memcpy@@GLIBC_2.14:
000000000020c570         extern function code
                     fileno@@GLIBC_2.2.5:
000000000020c578         extern function code
                     __xstat@@GLIBC_2.2.5:
000000000020c580         extern function code
                     malloc@@GLIBC_2.2.5:
000000000020c588         extern function code
                     fflush@@GLIBC_2.2.5:
000000000020c590         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
000000000020c598         extern function code
                     __fxstat@@GLIBC_2.2.5:
000000000020c5a0         extern function code
                     lchown@@GLIBC_2.2.5:
000000000020c5a8         extern function code
                     __freading@@GLIBC_2.2.5:
000000000020c5b0         extern function code
                     fchdir@@GLIBC_2.2.5:
000000000020c5b8         extern function code
                     fwrite_unlocked@@GLIBC_2.2.5:
000000000020c5c0         extern function code
                     chown@@GLIBC_2.2.5:
000000000020c5c8         extern function code
                     realloc@@GLIBC_2.2.5:
000000000020c5d0         extern function code
                     setlocale@@GLIBC_2.2.5:
000000000020c5d8         extern function code
                     __printf_chk@@GLIBC_2.3.4:
000000000020c5e0         extern function code
                     fchmod@@GLIBC_2.2.5:
000000000020c5e8         extern function code
                     chmod@@GLIBC_2.2.5:
000000000020c5f0         extern function code
                     error@@GLIBC_2.2.5:
000000000020c5f8         extern function code
                     waitpid@@GLIBC_2.2.5:
000000000020c600         extern function code
                     open@@GLIBC_2.2.5:
000000000020c608         extern function code
                     fseeko@@GLIBC_2.2.5:
000000000020c610         extern function code
                     fchown@@GLIBC_2.2.5:
000000000020c618         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
000000000020c620         extern function code
                     exit@@GLIBC_2.2.5:
000000000020c628         extern function code
                     fwrite@@GLIBC_2.2.5:
000000000020c630         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
000000000020c638         extern function code
                     _ITM_registerTMCloneTable_20c640:        // _ITM_registerTMCloneTable
000000000020c640         extern function code
                     mbsinit@@GLIBC_2.2.5:
000000000020c648         extern function code
                     iswprint@@GLIBC_2.2.5:
000000000020c650         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
000000000020c658         extern function code
                     fork@@GLIBC_2.2.5:
000000000020c660         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
000000000020c668         extern function code
