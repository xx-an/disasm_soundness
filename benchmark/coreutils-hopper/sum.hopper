
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/sum
        UUID: AA95594A-FB66-E8B8-EB65-0CD18556BEBB
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0x82b8[ (33464 bytes)
        ; File offset : [0; 33464[ (33464 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0x30 ; '0'
0000000000000019         db  0x1b ; '.'
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0x30 ; '0'
0000000000000029         db  0xfa ; '.'
000000000000002a         db  0x02 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0xb8 ; '.'
00000000000000d1         db  0x82 ; '.'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0xb8 ; '.'
00000000000000d9         db  0x82 ; '.'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0x10 ; '.'
00000000000000f1         db  0x8b ; '.'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0x10 ; '.'
00000000000000f9         db  0x8b ; '.'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0x10 ; '.'                                         ; DATA XREF=human_readable+924, quotearg_free+87, rpl_fflush+18, slotvec0
0000000000000101         db  0x8b ; '.'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0x78 ; 'x'
0000000000000109         db  0x05 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0x48 ; 'H'
0000000000000111         db  0x07 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0x18 ; '.'
0000000000000129         db  0x8c ; '.'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0x18 ; '.'
0000000000000131         db  0x8c ; '.'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0x18 ; '.'
0000000000000139         db  0x8c ; '.'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'                                         ; DATA XREF=human_options+440
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0x94 ; '.'
0000000000000199         db  0x71 ; 'q'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0x94 ; '.'
00000000000001a1         db  0x71 ; 'q'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0x94 ; '.'
00000000000001a9         db  0x71 ; 'q'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0xb4 ; '.'
00000000000001b1         db  0x02 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0xb4 ; '.'
00000000000001b9         db  0x02 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'                                         ; DATA XREF=sysv_sum_file+214, human_options+288, human_options+293, human_options+385, xstrtoumax+573
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0x10 ; '.'
0000000000000209         db  0x8b ; '.'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0x10 ; '.'
0000000000000211         db  0x8b ; '.'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0x10 ; '.'
0000000000000219         db  0x8b ; '.'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0xf0 ; '.'
0000000000000221         db  0x04 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0xf0 ; '.'
0000000000000229         db  0x04 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0xaa ; '.'
0000000000000285         db  0x95 ; '.'
0000000000000286         db  0x59 ; 'Y'
0000000000000287         db  0x4a ; 'J'                                         ; DATA XREF=human_readable+189
0000000000000288         db  0xfb ; '.'
0000000000000289         db  0x66 ; 'f'
000000000000028a         db  0xe8 ; '.'
000000000000028b         db  0xb8 ; '.'
000000000000028c         db  0xeb ; '.'
000000000000028d         db  0x65 ; 'e'
000000000000028e         db  0x0c ; '.'
000000000000028f         db  0xd1 ; '.'
0000000000000290         db  0x85 ; '.'
0000000000000291         db  0x56 ; 'V'
0000000000000292         db  0xbe ; '.'
0000000000000293         db  0xbb ; '.'
0000000000000294         db  0x6a ; 'j'
0000000000000295         db  0xa0 ; '.'
0000000000000296         db  0x4c ; 'L'
0000000000000297         db  0x60 ; '`'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2dc[ (68 bytes)
        ; File offset : [664; 732[ (68 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x3d ; '='
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'                                         ; DATA XREF=bsd_sum_file+31, bsd_sum_file+331
00000000000002a9         db  0x49 ; 'I'
00000000000002aa         db  0x61 ; 'a'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0xa0 ; '.'
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x18 ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x3d ; '='
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x3e ; '>'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x44 ; 'D'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x66 ; 'f'
00000000000002c5         db  0x55 ; 'U'
00000000000002c6         db  0x61 ; 'a'
00000000000002c7         db  0x10 ; '.'
00000000000002c8         db  0x96 ; '.'
00000000000002c9         db  0xa0 ; '.'
00000000000002ca         db  0x89 ; '.'
00000000000002cb         db  0x97 ; '.'
00000000000002cc         db  0xce ; '.'
00000000000002cd         db  0x2c ; ','
00000000000002ce         db  0x63 ; 'c'
00000000000002cf         db  0x72 ; 'r'
00000000000002d0         db  0xe4 ; '.'
00000000000002d1         db  0x62 ; 'b'
00000000000002d2         db  0x41 ; 'A'
00000000000002d3         db  0xf5 ; '.'
00000000000002d4         db  0x39 ; '9'
00000000000002d5         db  0xf2 ; '.'
00000000000002d6         db  0x8b ; '.'
00000000000002d7         db  0x1c ; '.'
00000000000002d8         db  0x33 ; '3'
00000000000002d9         db  0xc4 ; '.'
00000000000002da         db  0xf7 ; '.'
00000000000002db         db  0x12 ; '.'
00000000000002dc         db  0x00 ; '.'
00000000000002dd         db  0x00 ; '.'
00000000000002de         db  0x00 ; '.'
00000000000002df         db  0x00 ; '.'


        ; Section .dynsym
        ; Range: [0x2e0; 0x958[ (1656 bytes)
        ; File offset : [736; 2392[ (1656 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0x52 ; 'R'
00000000000002f9         db  0x01 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x12 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x74 ; 't'
0000000000000311         db  0x01 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x12 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0x66 ; 'f'
0000000000000329         db  0x02 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x12 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0x80 ; '.'
0000000000000341         db  0x00 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x12 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0xfd ; '.'
0000000000000359         db  0x00 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x12 ; '.'
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0x37 ; '7'
0000000000000371         db  0x00 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x12 ; '.'
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0xca ; '.'
0000000000000389         db  0x02 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x20 ; ' '
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0x8c ; '.'
00000000000003a1         db  0x00 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x12 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0xb4 ; '.'
00000000000003b9         db  0x01 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x12 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0xf2 ; '.'
00000000000003d1         db  0x00 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x12 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0x15 ; '.'                                         ; DATA XREF=xstrtoumax+420
00000000000003e9         db  0x02 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x12 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0x3c ; '<'                                         ; DATA XREF=bsd_sum_file+220, human_readable+80, human_options+458, xstrtoumax+437, xstrtoumax+806, xstrtoumax+878
0000000000000401         db  0x01 ; '.'
0000000000000402         db  0x00 ; '.'
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x12 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'
0000000000000407         db  0x00 ; '.'
0000000000000408         db  0x00 ; '.'
0000000000000409         db  0x00 ; '.'
000000000000040a         db  0x00 ; '.'
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0x11 ; '.'
0000000000000419         db  0x02 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x12 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0x4e ; 'N'
0000000000000431         db  0x00 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x12 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0xb8 ; '.'
0000000000000449         db  0x00 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x12 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0xe4 ; '.'
0000000000000461         db  0x00 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x12 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x5e ; '^'
0000000000000479         db  0x00 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x12 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0x8d ; '.'
0000000000000491         db  0x01 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x12 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x29 ; ')'
00000000000004a9         db  0x00 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x12 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0xbf ; '.'
00000000000004c1         db  0x01 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x12 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x39 ; '9'
00000000000004d9         db  0x02 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x12 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0x46 ; 'F'
00000000000004f1         db  0x00 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x12 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0x2f ; '/'
0000000000000509         db  0x01 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x12 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0xaa ; '.'
0000000000000521         db  0x00 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x12 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0x44 ; 'D'
0000000000000539         db  0x02 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x12 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0xeb ; '.'
0000000000000551         db  0x00 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x12 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0x3d ; '='
0000000000000569         db  0x01 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x12 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0xcf ; '.'
0000000000000581         db  0x00 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x12 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0x0e ; '.'
0000000000000599         db  0x01 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x12 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0x20 ; ' '
00000000000005b1         db  0x02 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x12 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0x13 ; '.'
00000000000005c9         db  0x01 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x12 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0x57 ; 'W'
00000000000005e1         db  0x02 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x12 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0xdd ; '.'
00000000000005f9         db  0x00 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x12 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0xa7 ; '.'
0000000000000611         db  0x01 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x12 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0xe6 ; '.'
0000000000000629         db  0x02 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x20 ; ' '
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x35 ; '5'
0000000000000641         db  0x01 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x12 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x99 ; '.'
0000000000000659         db  0x01 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x12 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x43 ; 'C'
0000000000000671         db  0x01 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x12 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0x0b ; '.'
0000000000000689         db  0x00 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x12 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x5a ; 'Z'
00000000000006a1         db  0x01 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x12 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x7b ; '{'
00000000000006b9         db  0x01 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x12 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x78 ; 'x'
00000000000006d1         db  0x00 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x12 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0x1f ; '.'
00000000000006e9         db  0x00 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x12 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x12 ; '.'
0000000000000701         db  0x00 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x12 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0xf3 ; '.'
0000000000000719         db  0x01 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x12 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x09 ; '.'
0000000000000731         db  0x02 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x12 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0x58 ; 'X'
0000000000000749         db  0x00 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x12 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0x32 ; '2'
0000000000000761         db  0x00 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x12 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0x32 ; '2'
0000000000000779         db  0x02 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x12 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x31 ; '1'
0000000000000791         db  0x00 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x12 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0x86 ; '.'
00000000000007a9         db  0x02 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x12 ; '.'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x00 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0x8d ; '.'
00000000000007c1         db  0x00 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x12 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x00 ; '.'
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0xa0 ; '.'
00000000000007d9         db  0x01 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x12 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x00 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0x1a ; '.'
00000000000007f1         db  0x01 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x12 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x00 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x00 ; '.'
00000000000007f9         db  0x00 ; '.'
00000000000007fa         db  0x00 ; '.'
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x00 ; '.'
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0xf5 ; '.'
0000000000000809         db  0x02 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x20 ; ' '
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x00 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0x00 ; '.'
0000000000000811         db  0x00 ; '.'
0000000000000812         db  0x00 ; '.'
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x00 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0x4a ; 'J'
0000000000000821         db  0x01 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x12 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x00 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0x00 ; '.'
0000000000000829         db  0x00 ; '.'
000000000000082a         db  0x00 ; '.'
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x00 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x6f ; 'o'
0000000000000839         db  0x00 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x12 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x00 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0x00 ; '.'
0000000000000841         db  0x00 ; '.'
0000000000000842         db  0x00 ; '.'
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x00 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0xe4 ; '.'
0000000000000851         db  0x01 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x22 ; '"'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x00 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0x00 ; '.'
0000000000000859         db  0x00 ; '.'
000000000000085a         db  0x00 ; '.'
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x00 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0x66 ; 'f'
0000000000000869         db  0x01 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x12 ; '.'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x00 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0x00 ; '.'
0000000000000871         db  0x00 ; '.'
0000000000000872         db  0x00 ; '.'
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x00 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0xfb ; '.'
0000000000000881         db  0x01 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x12 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x00 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0x00 ; '.'
0000000000000889         db  0x00 ; '.'
000000000000088a         db  0x00 ; '.'
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x00 ; '.'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x00 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0x28 ; '('
0000000000000899         db  0x01 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x11 ; '.'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x19 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0xa8 ; '.'
00000000000008a1         db  0x90 ; '.'
00000000000008a2         db  0x20 ; ' '
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x00 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x08 ; '.'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x00 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x00 ; '.'
00000000000008b0         db  0x6b ; 'k'
00000000000008b1         db  0x02 ; '.'
00000000000008b2         db  0x00 ; '.'
00000000000008b3         db  0x00 ; '.'
00000000000008b4         db  0x11 ; '.'
00000000000008b5         db  0x00 ; '.'
00000000000008b6         db  0x19 ; '.'
00000000000008b7         db  0x00 ; '.'
00000000000008b8         db  0xa0 ; '.'
00000000000008b9         db  0x90 ; '.'
00000000000008ba         db  0x20 ; ' '
00000000000008bb         db  0x00 ; '.'
00000000000008bc         db  0x00 ; '.'
00000000000008bd         db  0x00 ; '.'
00000000000008be         db  0x00 ; '.'
00000000000008bf         db  0x00 ; '.'
00000000000008c0         db  0x08 ; '.'
00000000000008c1         db  0x00 ; '.'
00000000000008c2         db  0x00 ; '.'
00000000000008c3         db  0x00 ; '.'
00000000000008c4         db  0x00 ; '.'
00000000000008c5         db  0x00 ; '.'
00000000000008c6         db  0x00 ; '.'
00000000000008c7         db  0x00 ; '.'
00000000000008c8         db  0x86 ; '.'
00000000000008c9         db  0x00 ; '.'
00000000000008ca         db  0x00 ; '.'
00000000000008cb         db  0x00 ; '.'
00000000000008cc         db  0x11 ; '.'
00000000000008cd         db  0x00 ; '.'
00000000000008ce         db  0x19 ; '.'
00000000000008cf         db  0x00 ; '.'
00000000000008d0         db  0xb0 ; '.'
00000000000008d1         db  0x90 ; '.'
00000000000008d2         db  0x20 ; ' '
00000000000008d3         db  0x00 ; '.'
00000000000008d4         db  0x00 ; '.'
00000000000008d5         db  0x00 ; '.'
00000000000008d6         db  0x00 ; '.'
00000000000008d7         db  0x00 ; '.'
00000000000008d8         db  0x08 ; '.'
00000000000008d9         db  0x00 ; '.'
00000000000008da         db  0x00 ; '.'
00000000000008db         db  0x00 ; '.'
00000000000008dc         db  0x00 ; '.'
00000000000008dd         db  0x00 ; '.'
00000000000008de         db  0x00 ; '.'
00000000000008df         db  0x00 ; '.'
00000000000008e0         db  0x92 ; '.'
00000000000008e1         db  0x00 ; '.'
00000000000008e2         db  0x00 ; '.'
00000000000008e3         db  0x00 ; '.'
00000000000008e4         db  0x21 ; '!'
00000000000008e5         db  0x00 ; '.'
00000000000008e6         db  0x19 ; '.'
00000000000008e7         db  0x00 ; '.'
00000000000008e8         db  0xc0 ; '.'
00000000000008e9         db  0x90 ; '.'
00000000000008ea         db  0x20 ; ' '
00000000000008eb         db  0x00 ; '.'
00000000000008ec         db  0x00 ; '.'
00000000000008ed         db  0x00 ; '.'
00000000000008ee         db  0x00 ; '.'
00000000000008ef         db  0x00 ; '.'
00000000000008f0         db  0x08 ; '.'
00000000000008f1         db  0x00 ; '.'
00000000000008f2         db  0x00 ; '.'
00000000000008f3         db  0x00 ; '.'
00000000000008f4         db  0x00 ; '.'
00000000000008f5         db  0x00 ; '.'
00000000000008f6         db  0x00 ; '.'
00000000000008f7         db  0x00 ; '.'
00000000000008f8         db  0x76 ; 'v'
00000000000008f9         db  0x02 ; '.'
00000000000008fa         db  0x00 ; '.'
00000000000008fb         db  0x00 ; '.'
00000000000008fc         db  0x11 ; '.'
00000000000008fd         db  0x00 ; '.'
00000000000008fe         db  0x19 ; '.'
00000000000008ff         db  0x00 ; '.'
0000000000000900         db  0xc0 ; '.'
0000000000000901         db  0x90 ; '.'
0000000000000902         db  0x20 ; ' '
0000000000000903         db  0x00 ; '.'
0000000000000904         db  0x00 ; '.'
0000000000000905         db  0x00 ; '.'
0000000000000906         db  0x00 ; '.'
0000000000000907         db  0x00 ; '.'
0000000000000908         db  0x08 ; '.'
0000000000000909         db  0x00 ; '.'
000000000000090a         db  0x00 ; '.'
000000000000090b         db  0x00 ; '.'
000000000000090c         db  0x00 ; '.'
000000000000090d         db  0x00 ; '.'
000000000000090e         db  0x00 ; '.'
000000000000090f         db  0x00 ; '.'
0000000000000910         db  0xc6 ; '.'
0000000000000911         db  0x01 ; '.'
0000000000000912         db  0x00 ; '.'
0000000000000913         db  0x00 ; '.'
0000000000000914         db  0x21 ; '!'
0000000000000915         db  0x00 ; '.'
0000000000000916         db  0x19 ; '.'
0000000000000917         db  0x00 ; '.'
0000000000000918         db  0xa0 ; '.'
0000000000000919         db  0x90 ; '.'
000000000000091a         db  0x20 ; ' '
000000000000091b         db  0x00 ; '.'
000000000000091c         db  0x00 ; '.'
000000000000091d         db  0x00 ; '.'
000000000000091e         db  0x00 ; '.'
000000000000091f         db  0x00 ; '.'
0000000000000920         db  0x08 ; '.'
0000000000000921         db  0x00 ; '.'
0000000000000922         db  0x00 ; '.'
0000000000000923         db  0x00 ; '.'
0000000000000924         db  0x00 ; '.'
0000000000000925         db  0x00 ; '.'
0000000000000926         db  0x00 ; '.'
0000000000000927         db  0x00 ; '.'
0000000000000928         db  0x86 ; '.'
0000000000000929         db  0x01 ; '.'
000000000000092a         db  0x00 ; '.'
000000000000092b         db  0x00 ; '.'
000000000000092c         db  0x11 ; '.'
000000000000092d         db  0x00 ; '.'
000000000000092e         db  0x19 ; '.'
000000000000092f         db  0x00 ; '.'
0000000000000930         db  0xe0 ; '.'
0000000000000931         db  0x90 ; '.'
0000000000000932         db  0x20 ; ' '
0000000000000933         db  0x00 ; '.'
0000000000000934         db  0x00 ; '.'
0000000000000935         db  0x00 ; '.'
0000000000000936         db  0x00 ; '.'
0000000000000937         db  0x00 ; '.'
0000000000000938         db  0x08 ; '.'
0000000000000939         db  0x00 ; '.'
000000000000093a         db  0x00 ; '.'
000000000000093b         db  0x00 ; '.'
000000000000093c         db  0x00 ; '.'
000000000000093d         db  0x00 ; '.'
000000000000093e         db  0x00 ; '.'
000000000000093f         db  0x00 ; '.'
0000000000000940         db  0x3f ; '?'
0000000000000941         db  0x00 ; '.'
0000000000000942         db  0x00 ; '.'
0000000000000943         db  0x00 ; '.'
0000000000000944         db  0x11 ; '.'
0000000000000945         db  0x00 ; '.'
0000000000000946         db  0x19 ; '.'
0000000000000947         db  0x00 ; '.'
0000000000000948         db  0xb8 ; '.'
0000000000000949         db  0x90 ; '.'
000000000000094a         db  0x20 ; ' '
000000000000094b         db  0x00 ; '.'
000000000000094c         db  0x00 ; '.'
000000000000094d         db  0x00 ; '.'
000000000000094e         db  0x00 ; '.'
000000000000094f         db  0x00 ; '.'
0000000000000950         db  0x04 ; '.'
0000000000000951         db  0x00 ; '.'
0000000000000952         db  0x00 ; '.'
0000000000000953         db  0x00 ; '.'
0000000000000954         db  0x00 ; '.'
0000000000000955         db  0x00 ; '.'
0000000000000956         db  0x00 ; '.'
0000000000000957         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0x958; 0xc67[ (783 bytes)
        ; File offset : [2392; 3175[ (783 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

0000000000000958         db  0x00 ; '.'
0000000000000959         db  0x6c ; 'l'
000000000000095a         db  0x69 ; 'i'
000000000000095b         db  0x62 ; 'b'
000000000000095c         db  0x63 ; 'c'
000000000000095d         db  0x2e ; '.'
000000000000095e         db  0x73 ; 's'
000000000000095f         db  0x6f ; 'o'
0000000000000960         db  0x2e ; '.'
0000000000000961         db  0x36 ; '6'
0000000000000962         db  0x00 ; '.'
0000000000000963         db  0x66 ; 'f'
0000000000000964         db  0x66 ; 'f'
0000000000000965         db  0x6c ; 'l'
0000000000000966         db  0x75 ; 'u'
0000000000000967         db  0x73 ; 's'
0000000000000968         db  0x68 ; 'h'
0000000000000969         db  0x00 ; '.'
000000000000096a         db  0x5f ; '_'
000000000000096b         db  0x5f ; '_'
000000000000096c         db  0x70 ; 'p'
000000000000096d         db  0x72 ; 'r'
000000000000096e         db  0x69 ; 'i'
000000000000096f         db  0x6e ; 'n'
0000000000000970         db  0x74 ; 't'
0000000000000971         db  0x66 ; 'f'
0000000000000972         db  0x5f ; '_'
0000000000000973         db  0x63 ; 'c'
0000000000000974         db  0x68 ; 'h'
0000000000000975         db  0x6b ; 'k'
0000000000000976         db  0x00 ; '.'
0000000000000977         db  0x73 ; 's'
0000000000000978         db  0x65 ; 'e'
0000000000000979         db  0x74 ; 't'
000000000000097a         db  0x6c ; 'l'
000000000000097b         db  0x6f ; 'o'
000000000000097c         db  0x63 ; 'c'
000000000000097d         db  0x61 ; 'a'
000000000000097e         db  0x6c ; 'l'
000000000000097f         db  0x65 ; 'e'
0000000000000980         db  0x00 ; '.'
0000000000000981         db  0x6d ; 'm'
0000000000000982         db  0x62 ; 'b'
0000000000000983         db  0x72 ; 'r'
0000000000000984         db  0x74 ; 't'
0000000000000985         db  0x6f ; 'o'
0000000000000986         db  0x77 ; 'w'
0000000000000987         db  0x63 ; 'c'
0000000000000988         db  0x00 ; '.'
0000000000000989         db  0x66 ; 'f'
000000000000098a         db  0x6f ; 'o'
000000000000098b         db  0x70 ; 'p'
000000000000098c         db  0x65 ; 'e'
000000000000098d         db  0x6e ; 'n'
000000000000098e         db  0x00 ; '.'
000000000000098f         db  0x73 ; 's'
0000000000000990         db  0x74 ; 't'
0000000000000991         db  0x72 ; 'r'
0000000000000992         db  0x6e ; 'n'
0000000000000993         db  0x63 ; 'c'
0000000000000994         db  0x6d ; 'm'
0000000000000995         db  0x70 ; 'p'
0000000000000996         db  0x00 ; '.'
0000000000000997         db  0x6f ; 'o'
0000000000000998         db  0x70 ; 'p'
0000000000000999         db  0x74 ; 't'
000000000000099a         db  0x69 ; 'i'
000000000000099b         db  0x6e ; 'n'
000000000000099c         db  0x64 ; 'd'
000000000000099d         db  0x00 ; '.'
000000000000099e         db  0x73 ; 's'
000000000000099f         db  0x74 ; 't'
00000000000009a0         db  0x72 ; 'r'
00000000000009a1         db  0x72 ; 'r'
00000000000009a2         db  0x63 ; 'c'
00000000000009a3         db  0x68 ; 'h'
00000000000009a4         db  0x72 ; 'r'
00000000000009a5         db  0x00 ; '.'
00000000000009a6         db  0x64 ; 'd'
00000000000009a7         db  0x63 ; 'c'
00000000000009a8         db  0x67 ; 'g'
00000000000009a9         db  0x65 ; 'e'
00000000000009aa         db  0x74 ; 't'
00000000000009ab         db  0x74 ; 't'
00000000000009ac         db  0x65 ; 'e'
00000000000009ad         db  0x78 ; 'x'
00000000000009ae         db  0x74 ; 't'
00000000000009af         db  0x00 ; '.'
00000000000009b0         db  0x65 ; 'e'
00000000000009b1         db  0x72 ; 'r'
00000000000009b2         db  0x72 ; 'r'
00000000000009b3         db  0x6f ; 'o'
00000000000009b4         db  0x72 ; 'r'
00000000000009b5         db  0x00 ; '.'
00000000000009b6         db  0x5f ; '_'
00000000000009b7         db  0x5f ; '_'
00000000000009b8         db  0x73 ; 's'
00000000000009b9         db  0x74 ; 't'
00000000000009ba         db  0x61 ; 'a'
00000000000009bb         db  0x63 ; 'c'
00000000000009bc         db  0x6b ; 'k'
00000000000009bd         db  0x5f ; '_'
00000000000009be         db  0x63 ; 'c'
00000000000009bf         db  0x68 ; 'h'
00000000000009c0         db  0x6b ; 'k'
00000000000009c1         db  0x5f ; '_'
00000000000009c2         db  0x66 ; 'f'
00000000000009c3         db  0x61 ; 'a'
00000000000009c4         db  0x69 ; 'i'
00000000000009c5         db  0x6c ; 'l'
00000000000009c6         db  0x00 ; '.'
00000000000009c7         db  0x69 ; 'i'
00000000000009c8         db  0x73 ; 's'
00000000000009c9         db  0x77 ; 'w'
00000000000009ca         db  0x70 ; 'p'
00000000000009cb         db  0x72 ; 'r'
00000000000009cc         db  0x69 ; 'i'
00000000000009cd         db  0x6e ; 'n'
00000000000009ce         db  0x74 ; 't'
00000000000009cf         db  0x00 ; '.'
00000000000009d0         db  0x72 ; 'r'
00000000000009d1         db  0x65 ; 'e'
00000000000009d2         db  0x61 ; 'a'
00000000000009d3         db  0x6c ; 'l'
00000000000009d4         db  0x6c ; 'l'
00000000000009d5         db  0x6f ; 'o'
00000000000009d6         db  0x63 ; 'c'
00000000000009d7         db  0x00 ; '.'
00000000000009d8         db  0x61 ; 'a'
00000000000009d9         db  0x62 ; 'b'
00000000000009da         db  0x6f ; 'o'
00000000000009db         db  0x72 ; 'r'
00000000000009dc         db  0x74 ; 't'
00000000000009dd         db  0x00 ; '.'
00000000000009de         db  0x73 ; 's'
00000000000009df         db  0x74 ; 't'
00000000000009e0         db  0x64 ; 'd'
00000000000009e1         db  0x69 ; 'i'
00000000000009e2         db  0x6e ; 'n'
00000000000009e3         db  0x00 ; '.'
00000000000009e4         db  0x5f ; '_'
00000000000009e5         db  0x65 ; 'e'
00000000000009e6         db  0x78 ; 'x'
00000000000009e7         db  0x69 ; 'i'
00000000000009e8         db  0x74 ; 't'
00000000000009e9         db  0x00 ; '.'
00000000000009ea         db  0x70 ; 'p'
00000000000009eb         db  0x72 ; 'r'
00000000000009ec         db  0x6f ; 'o'
00000000000009ed         db  0x67 ; 'g'
00000000000009ee         db  0x72 ; 'r'
00000000000009ef         db  0x61 ; 'a'
00000000000009f0         db  0x6d ; 'm'
00000000000009f1         db  0x5f ; '_'
00000000000009f2         db  0x69 ; 'i'
00000000000009f3         db  0x6e ; 'n'
00000000000009f4         db  0x76 ; 'v'
00000000000009f5         db  0x6f ; 'o'
00000000000009f6         db  0x63 ; 'c'
00000000000009f7         db  0x61 ; 'a'
00000000000009f8         db  0x74 ; 't'
00000000000009f9         db  0x69 ; 'i'
00000000000009fa         db  0x6f ; 'o'
00000000000009fb         db  0x6e ; 'n'
00000000000009fc         db  0x5f ; '_'
00000000000009fd         db  0x6e ; 'n'
00000000000009fe         db  0x61 ; 'a'
00000000000009ff         db  0x6d ; 'm'
0000000000000a00         db  0x65 ; 'e'
0000000000000a01         db  0x00 ; '.'
0000000000000a02         db  0x5f ; '_'
0000000000000a03         db  0x5f ; '_'
0000000000000a04         db  0x61 ; 'a'
0000000000000a05         db  0x73 ; 's'
0000000000000a06         db  0x73 ; 's'
0000000000000a07         db  0x65 ; 'e'
0000000000000a08         db  0x72 ; 'r'
0000000000000a09         db  0x74 ; 't'
0000000000000a0a         db  0x5f ; '_'
0000000000000a0b         db  0x66 ; 'f'
0000000000000a0c         db  0x61 ; 'a'
0000000000000a0d         db  0x69 ; 'i'
0000000000000a0e         db  0x6c ; 'l'
0000000000000a0f         db  0x00 ; '.'
0000000000000a10         db  0x5f ; '_'
0000000000000a11         db  0x5f ; '_'
0000000000000a12         db  0x63 ; 'c'
0000000000000a13         db  0x74 ; 't'
0000000000000a14         db  0x79 ; 'y'
0000000000000a15         db  0x70 ; 'p'
0000000000000a16         db  0x65 ; 'e'
0000000000000a17         db  0x5f ; '_'
0000000000000a18         db  0x67 ; 'g'
0000000000000a19         db  0x65 ; 'e'
0000000000000a1a         db  0x74 ; 't'
0000000000000a1b         db  0x5f ; '_'
0000000000000a1c         db  0x6d ; 'm'
0000000000000a1d         db  0x62 ; 'b'
0000000000000a1e         db  0x5f ; '_'
0000000000000a1f         db  0x63 ; 'c'
0000000000000a20         db  0x75 ; 'u'
0000000000000a21         db  0x72 ; 'r'
0000000000000a22         db  0x5f ; '_'
0000000000000a23         db  0x6d ; 'm'
0000000000000a24         db  0x61 ; 'a'
0000000000000a25         db  0x78 ; 'x'
0000000000000a26         db  0x00 ; '.'
0000000000000a27         db  0x70 ; 'p'
0000000000000a28         db  0x6f ; 'o'
0000000000000a29         db  0x73 ; 's'
0000000000000a2a         db  0x69 ; 'i'
0000000000000a2b         db  0x78 ; 'x'
0000000000000a2c         db  0x5f ; '_'
0000000000000a2d         db  0x66 ; 'f'
0000000000000a2e         db  0x61 ; 'a'
0000000000000a2f         db  0x64 ; 'd'
0000000000000a30         db  0x76 ; 'v'
0000000000000a31         db  0x69 ; 'i'
0000000000000a32         db  0x73 ; 's'
0000000000000a33         db  0x65 ; 'e'
0000000000000a34         db  0x00 ; '.'
0000000000000a35         db  0x63 ; 'c'
0000000000000a36         db  0x61 ; 'a'
0000000000000a37         db  0x6c ; 'l'
0000000000000a38         db  0x6c ; 'l'
0000000000000a39         db  0x6f ; 'o'
0000000000000a3a         db  0x63 ; 'c'
0000000000000a3b         db  0x00 ; '.'
0000000000000a3c         db  0x73 ; 's'
0000000000000a3d         db  0x74 ; 't'
0000000000000a3e         db  0x72 ; 'r'
0000000000000a3f         db  0x6c ; 'l'
0000000000000a40         db  0x65 ; 'e'
0000000000000a41         db  0x6e ; 'n'
0000000000000a42         db  0x00 ; '.'
0000000000000a43         db  0x6d ; 'm'
0000000000000a44         db  0x65 ; 'e'
0000000000000a45         db  0x6d ; 'm'
0000000000000a46         db  0x73 ; 's'
0000000000000a47         db  0x65 ; 'e'
0000000000000a48         db  0x74 ; 't'
0000000000000a49         db  0x00 ; '.'
0000000000000a4a         db  0x6c ; 'l'
0000000000000a4b         db  0x6f ; 'o'
0000000000000a4c         db  0x63 ; 'c'
0000000000000a4d         db  0x61 ; 'a'
0000000000000a4e         db  0x6c ; 'l'
0000000000000a4f         db  0x65 ; 'e'
0000000000000a50         db  0x63 ; 'c'
0000000000000a51         db  0x6f ; 'o'
0000000000000a52         db  0x6e ; 'n'
0000000000000a53         db  0x76 ; 'v'
0000000000000a54         db  0x00 ; '.'
0000000000000a55         db  0x5f ; '_'
0000000000000a56         db  0x5f ; '_'
0000000000000a57         db  0x65 ; 'e'
0000000000000a58         db  0x72 ; 'r'
0000000000000a59         db  0x72 ; 'r'
0000000000000a5a         db  0x6e ; 'n'
0000000000000a5b         db  0x6f ; 'o'
0000000000000a5c         db  0x5f ; '_'
0000000000000a5d         db  0x6c ; 'l'
0000000000000a5e         db  0x6f ; 'o'
0000000000000a5f         db  0x63 ; 'c'
0000000000000a60         db  0x61 ; 'a'
0000000000000a61         db  0x74 ; 't'
0000000000000a62         db  0x69 ; 'i'
0000000000000a63         db  0x6f ; 'o'
0000000000000a64         db  0x6e ; 'n'
0000000000000a65         db  0x00 ; '.'
0000000000000a66         db  0x72 ; 'r'
0000000000000a67         db  0x65 ; 'e'
0000000000000a68         db  0x61 ; 'a'
0000000000000a69         db  0x64 ; 'd'
0000000000000a6a         db  0x00 ; '.'
0000000000000a6b         db  0x6d ; 'm'
0000000000000a6c         db  0x65 ; 'e'
0000000000000a6d         db  0x6d ; 'm'
0000000000000a6e         db  0x63 ; 'c'
0000000000000a6f         db  0x6d ; 'm'
0000000000000a70         db  0x70 ; 'p'
0000000000000a71         db  0x00 ; '.'
0000000000000a72         db  0x5f ; '_'
0000000000000a73         db  0x5f ; '_'
0000000000000a74         db  0x66 ; 'f'
0000000000000a75         db  0x70 ; 'p'
0000000000000a76         db  0x72 ; 'r'
0000000000000a77         db  0x69 ; 'i'
0000000000000a78         db  0x6e ; 'n'
0000000000000a79         db  0x74 ; 't'
0000000000000a7a         db  0x66 ; 'f'
0000000000000a7b         db  0x5f ; '_'
0000000000000a7c         db  0x63 ; 'c'
0000000000000a7d         db  0x68 ; 'h'
0000000000000a7e         db  0x6b ; 'k'
0000000000000a7f         db  0x00 ; '.'
0000000000000a80         db  0x73 ; 's'
0000000000000a81         db  0x74 ; 't'
0000000000000a82         db  0x64 ; 'd'
0000000000000a83         db  0x6f ; 'o'
0000000000000a84         db  0x75 ; 'u'
0000000000000a85         db  0x74 ; 't'
0000000000000a86         db  0x00 ; '.'
0000000000000a87         db  0x6c ; 'l'
0000000000000a88         db  0x73 ; 's'
0000000000000a89         db  0x65 ; 'e'
0000000000000a8a         db  0x65 ; 'e'
0000000000000a8b         db  0x6b ; 'k'
0000000000000a8c         db  0x00 ; '.'
0000000000000a8d         db  0x6d ; 'm'
0000000000000a8e         db  0x65 ; 'e'
0000000000000a8f         db  0x6d ; 'm'
0000000000000a90         db  0x63 ; 'c'
0000000000000a91         db  0x70 ; 'p'
0000000000000a92         db  0x79 ; 'y'
0000000000000a93         db  0x00 ; '.'
0000000000000a94         db  0x66 ; 'f'
0000000000000a95         db  0x63 ; 'c'
0000000000000a96         db  0x6c ; 'l'
0000000000000a97         db  0x6f ; 'o'
0000000000000a98         db  0x73 ; 's'
0000000000000a99         db  0x65 ; 'e'
0000000000000a9a         db  0x00 ; '.'
0000000000000a9b         db  0x6d ; 'm'
0000000000000a9c         db  0x61 ; 'a'
0000000000000a9d         db  0x6c ; 'l'
0000000000000a9e         db  0x6c ; 'l'
0000000000000a9f         db  0x6f ; 'o'
0000000000000aa0         db  0x63 ; 'c'
0000000000000aa1         db  0x00 ; '.'
0000000000000aa2         db  0x6d ; 'm'
0000000000000aa3         db  0x62 ; 'b'
0000000000000aa4         db  0x73 ; 's'
0000000000000aa5         db  0x69 ; 'i'
0000000000000aa6         db  0x6e ; 'n'
0000000000000aa7         db  0x69 ; 'i'
0000000000000aa8         db  0x74 ; 't'
0000000000000aa9         db  0x00 ; '.'
0000000000000aaa         db  0x5f ; '_'
0000000000000aab         db  0x5f ; '_'
0000000000000aac         db  0x75 ; 'u'
0000000000000aad         db  0x66 ; 'f'
0000000000000aae         db  0x6c ; 'l'
0000000000000aaf         db  0x6f ; 'o'
0000000000000ab0         db  0x77 ; 'w'
0000000000000ab1         db  0x00 ; '.'
0000000000000ab2         db  0x6e ; 'n'
0000000000000ab3         db  0x6c ; 'l'
0000000000000ab4         db  0x5f ; '_'
0000000000000ab5         db  0x6c ; 'l'
0000000000000ab6         db  0x61 ; 'a'
0000000000000ab7         db  0x6e ; 'n'
0000000000000ab8         db  0x67 ; 'g'
0000000000000ab9         db  0x69 ; 'i'
0000000000000aba         db  0x6e ; 'n'
0000000000000abb         db  0x66 ; 'f'
0000000000000abc         db  0x6f ; 'o'
0000000000000abd         db  0x00 ; '.'
0000000000000abe         db  0x5f ; '_'
0000000000000abf         db  0x5f ; '_'
0000000000000ac0         db  0x63 ; 'c'
0000000000000ac1         db  0x74 ; 't'
0000000000000ac2         db  0x79 ; 'y'
0000000000000ac3         db  0x70 ; 'p'
0000000000000ac4         db  0x65 ; 'e'
0000000000000ac5         db  0x5f ; '_'
0000000000000ac6         db  0x62 ; 'b'
0000000000000ac7         db  0x5f ; '_'
0000000000000ac8         db  0x6c ; 'l'
0000000000000ac9         db  0x6f ; 'o'
0000000000000aca         db  0x63 ; 'c'
0000000000000acb         db  0x00 ; '.'
0000000000000acc         db  0x67 ; 'g'
0000000000000acd         db  0x65 ; 'e'
0000000000000ace         db  0x74 ; 't'
0000000000000acf         db  0x65 ; 'e'
0000000000000ad0         db  0x6e ; 'n'
0000000000000ad1         db  0x76 ; 'v'
0000000000000ad2         db  0x00 ; '.'
0000000000000ad3         db  0x5f ; '_'
0000000000000ad4         db  0x5f ; '_'
0000000000000ad5         db  0x66 ; 'f'
0000000000000ad6         db  0x72 ; 'r'
0000000000000ad7         db  0x65 ; 'e'
0000000000000ad8         db  0x61 ; 'a'
0000000000000ad9         db  0x64 ; 'd'
0000000000000ada         db  0x69 ; 'i'
0000000000000adb         db  0x6e ; 'n'
0000000000000adc         db  0x67 ; 'g'
0000000000000add         db  0x00 ; '.'
0000000000000ade         db  0x73 ; 's'
0000000000000adf         db  0x74 ; 't'
0000000000000ae0         db  0x64 ; 'd'
0000000000000ae1         db  0x65 ; 'e'
0000000000000ae2         db  0x72 ; 'r'
0000000000000ae3         db  0x72 ; 'r'
0000000000000ae4         db  0x00 ; '.'
0000000000000ae5         db  0x67 ; 'g'
0000000000000ae6         db  0x65 ; 'e'
0000000000000ae7         db  0x74 ; 't'
0000000000000ae8         db  0x6f ; 'o'
0000000000000ae9         db  0x70 ; 'p'
0000000000000aea         db  0x74 ; 't'
0000000000000aeb         db  0x5f ; '_'
0000000000000aec         db  0x6c ; 'l'
0000000000000aed         db  0x6f ; 'o'
0000000000000aee         db  0x6e ; 'n'
0000000000000aef         db  0x67 ; 'g'
0000000000000af0         db  0x00 ; '.'
0000000000000af1         db  0x66 ; 'f'
0000000000000af2         db  0x69 ; 'i'
0000000000000af3         db  0x6c ; 'l'
0000000000000af4         db  0x65 ; 'e'
0000000000000af5         db  0x6e ; 'n'
0000000000000af6         db  0x6f ; 'o'
0000000000000af7         db  0x00 ; '.'
0000000000000af8         db  0x66 ; 'f'
0000000000000af9         db  0x77 ; 'w'
0000000000000afa         db  0x72 ; 'r'
0000000000000afb         db  0x69 ; 'i'
0000000000000afc         db  0x74 ; 't'
0000000000000afd         db  0x65 ; 'e'
0000000000000afe         db  0x00 ; '.'
0000000000000aff         db  0x5f ; '_'
                     aMemcpychk:
0000000000000b00         db         "_memcpy_chk", 0
0000000000000b0c         db  0x5f ; '_'
0000000000000b0d         db  0x5f ; '_'
0000000000000b0e         db  0x66 ; 'f'
0000000000000b0f         db  0x70 ; 'p'
0000000000000b10         db  0x65 ; 'e'
0000000000000b11         db  0x6e ; 'n'
0000000000000b12         db  0x64 ; 'd'
0000000000000b13         db  0x69 ; 'i'
0000000000000b14         db  0x6e ; 'n'
0000000000000b15         db  0x67 ; 'g'
0000000000000b16         db  0x00 ; '.'
0000000000000b17         db  0x73 ; 's'
0000000000000b18         db  0x74 ; 't'
0000000000000b19         db  0x72 ; 'r'
0000000000000b1a         db  0x63 ; 'c'
0000000000000b1b         db  0x68 ; 'h'
0000000000000b1c         db  0x72 ; 'r'
0000000000000b1d         db  0x00 ; '.'
0000000000000b1e         db  0x70 ; 'p'
0000000000000b1f         db  0x72 ; 'r'
0000000000000b20         db  0x6f ; 'o'
0000000000000b21         db  0x67 ; 'g'
0000000000000b22         db  0x72 ; 'r'
0000000000000b23         db  0x61 ; 'a'
0000000000000b24         db  0x6d ; 'm'
0000000000000b25         db  0x5f ; '_'
0000000000000b26         db  0x69 ; 'i'
0000000000000b27         db  0x6e ; 'n'
0000000000000b28         db  0x76 ; 'v'
0000000000000b29         db  0x6f ; 'o'
0000000000000b2a         db  0x63 ; 'c'
0000000000000b2b         db  0x61 ; 'a'
0000000000000b2c         db  0x74 ; 't'
0000000000000b2d         db  0x69 ; 'i'
0000000000000b2e         db  0x6f ; 'o'
0000000000000b2f         db  0x6e ; 'n'
0000000000000b30         db  0x5f ; '_'
0000000000000b31         db  0x73 ; 's'
0000000000000b32         db  0x68 ; 'h'
0000000000000b33         db  0x6f ; 'o'
0000000000000b34         db  0x72 ; 'r'
0000000000000b35         db  0x74 ; 't'
0000000000000b36         db  0x5f ; '_'
0000000000000b37         db  0x6e ; 'n'
0000000000000b38         db  0x61 ; 'a'
0000000000000b39         db  0x6d ; 'm'
0000000000000b3a         db  0x65 ; 'e'
0000000000000b3b         db  0x00 ; '.'
0000000000000b3c         db  0x5f ; '_'
0000000000000b3d         db  0x5f ; '_'
0000000000000b3e         db  0x63 ; 'c'
0000000000000b3f         db  0x78 ; 'x'
0000000000000b40         db  0x61 ; 'a'
                     aFinalize:
0000000000000b41         db         "_finalize", 0
0000000000000b4b         db  0x73 ; 's'
0000000000000b4c         db  0x65 ; 'e'
0000000000000b4d         db  0x74 ; 't'
0000000000000b4e         db  0x76 ; 'v'
0000000000000b4f         db  0x62 ; 'b'
0000000000000b50         db  0x75 ; 'u'
0000000000000b51         db  0x66 ; 'f'
0000000000000b52         db  0x00 ; '.'
0000000000000b53         db  0x5f ; '_'
0000000000000b54         db  0x5f ; '_'
0000000000000b55         db  0x73 ; 's'
0000000000000b56         db  0x70 ; 'p'
0000000000000b57         db  0x72 ; 'r'
0000000000000b58         db  0x69 ; 'i'
0000000000000b59         db  0x6e ; 'n'
0000000000000b5a         db  0x74 ; 't'
0000000000000b5b         db  0x66 ; 'f'
0000000000000b5c         db  0x5f ; '_'
0000000000000b5d         db  0x63 ; 'c'
0000000000000b5e         db  0x68 ; 'h'
0000000000000b5f         db  0x6b ; 'k'
0000000000000b60         db  0x00 ; '.'
0000000000000b61         db  0x6d ; 'm'
0000000000000b62         db  0x65 ; 'e'
0000000000000b63         db  0x6d ; 'm'
0000000000000b64         db  0x6d ; 'm'
0000000000000b65         db  0x6f ; 'o'
0000000000000b66         db  0x76 ; 'v'
0000000000000b67         db  0x65 ; 'e'
0000000000000b68         db  0x00 ; '.'
0000000000000b69         db  0x62 ; 'b'
0000000000000b6a         db  0x69 ; 'i'
0000000000000b6b         db  0x6e ; 'n'
0000000000000b6c         db  0x64 ; 'd'
0000000000000b6d         db  0x74 ; 't'
0000000000000b6e         db  0x65 ; 'e'
0000000000000b6f         db  0x78 ; 'x'
0000000000000b70         db  0x74 ; 't'
0000000000000b71         db  0x64 ; 'd'
0000000000000b72         db  0x6f ; 'o'
0000000000000b73         db  0x6d ; 'm'
0000000000000b74         db  0x61 ; 'a'
0000000000000b75         db  0x69 ; 'i'
0000000000000b76         db  0x6e ; 'n'
0000000000000b77         db  0x00 ; '.'
0000000000000b78         db  0x5f ; '_'
0000000000000b79         db  0x5f ; '_'
0000000000000b7a         db  0x6c ; 'l'
0000000000000b7b         db  0x69 ; 'i'
0000000000000b7c         db  0x62 ; 'b'
0000000000000b7d         db  0x63 ; 'c'
0000000000000b7e         db  0x5f ; '_'
0000000000000b7f         db  0x73 ; 's'
0000000000000b80         db  0x74 ; 't'
0000000000000b81         db  0x61 ; 'a'
0000000000000b82         db  0x72 ; 'r'
0000000000000b83         db  0x74 ; 't'
0000000000000b84         db  0x5f ; '_'
0000000000000b85         db  0x6d ; 'm'
0000000000000b86         db  0x61 ; 'a'
0000000000000b87         db  0x69 ; 'i'
0000000000000b88         db  0x6e ; 'n'
0000000000000b89         db  0x00 ; '.'
0000000000000b8a         db  0x66 ; 'f'
0000000000000b8b         db  0x73 ; 's'
0000000000000b8c         db  0x65 ; 'e'
0000000000000b8d         db  0x65 ; 'e'
0000000000000b8e         db  0x6b ; 'k'
0000000000000b8f         db  0x6f ; 'o'
0000000000000b90         db  0x00 ; '.'
0000000000000b91         db  0x5f ; '_'
0000000000000b92         db  0x5f ; '_'
0000000000000b93         db  0x6f ; 'o'
0000000000000b94         db  0x76 ; 'v'
0000000000000b95         db  0x65 ; 'e'
0000000000000b96         db  0x72 ; 'r'
0000000000000b97         db  0x66 ; 'f'
0000000000000b98         db  0x6c ; 'l'
0000000000000b99         db  0x6f ; 'o'
0000000000000b9a         db  0x77 ; 'w'
0000000000000b9b         db  0x00 ; '.'
0000000000000b9c         db  0x5f ; '_'
0000000000000b9d         db  0x5f ; '_'
0000000000000b9e         db  0x73 ; 's'
0000000000000b9f         db  0x74 ; 't'
0000000000000ba0         db  0x72 ; 'r'
0000000000000ba1         db  0x74 ; 't'
0000000000000ba2         db  0x6f ; 'o'
0000000000000ba3         db  0x75 ; 'u'
0000000000000ba4         db  0x6c ; 'l'
0000000000000ba5         db  0x5f ; '_'
0000000000000ba6         db  0x69 ; 'i'
0000000000000ba7         db  0x6e ; 'n'
0000000000000ba8         db  0x74 ; 't'
0000000000000ba9         db  0x65 ; 'e'
0000000000000baa         db  0x72 ; 'r'
0000000000000bab         db  0x6e ; 'n'
0000000000000bac         db  0x61 ; 'a'
0000000000000bad         db  0x6c ; 'l'
0000000000000bae         db  0x00 ; '.'
0000000000000baf         db  0x66 ; 'f'
0000000000000bb0         db  0x70 ; 'p'
0000000000000bb1         db  0x75 ; 'u'
0000000000000bb2         db  0x74 ; 't'
0000000000000bb3         db  0x73 ; 's'
0000000000000bb4         db  0x5f ; '_'
0000000000000bb5         db  0x75 ; 'u'
0000000000000bb6         db  0x6e ; 'n'
0000000000000bb7         db  0x6c ; 'l'
0000000000000bb8         db  0x6f ; 'o'
0000000000000bb9         db  0x63 ; 'c'
0000000000000bba         db  0x6b ; 'k'
0000000000000bbb         db  0x65 ; 'e'
0000000000000bbc         db  0x64 ; 'd'
0000000000000bbd         db  0x00 ; '.'
0000000000000bbe         db  0x66 ; 'f'
0000000000000bbf         db  0x72 ; 'r'
0000000000000bc0         db  0x65 ; 'e'
0000000000000bc1         db  0x65 ; 'e'
0000000000000bc2         db  0x00 ; '.'
0000000000000bc3         db  0x5f ; '_'
0000000000000bc4         db  0x5f ; '_'
0000000000000bc5         db  0x70 ; 'p'
0000000000000bc6         db  0x72 ; 'r'
0000000000000bc7         db  0x6f ; 'o'
0000000000000bc8         db  0x67 ; 'g'
0000000000000bc9         db  0x6e ; 'n'
0000000000000bca         db  0x61 ; 'a'
0000000000000bcb         db  0x6d ; 'm'
0000000000000bcc         db  0x65 ; 'e'
0000000000000bcd         db  0x00 ; '.'
0000000000000bce         db  0x5f ; '_'
0000000000000bcf         db  0x5f ; '_'
0000000000000bd0         db  0x70 ; 'p'
0000000000000bd1         db  0x72 ; 'r'
0000000000000bd2         db  0x6f ; 'o'
0000000000000bd3         db  0x67 ; 'g'
0000000000000bd4         db  0x6e ; 'n'
0000000000000bd5         db  0x61 ; 'a'
0000000000000bd6         db  0x6d ; 'm'
0000000000000bd7         db  0x65 ; 'e'
0000000000000bd8         db  0x5f ; '_'
0000000000000bd9         db  0x66 ; 'f'
0000000000000bda         db  0x75 ; 'u'
0000000000000bdb         db  0x6c ; 'l'
0000000000000bdc         db  0x6c ; 'l'
0000000000000bdd         db  0x00 ; '.'
0000000000000bde         db  0x5f ; '_'
0000000000000bdf         db  0x5f ; '_'
0000000000000be0         db  0x63 ; 'c'
0000000000000be1         db  0x78 ; 'x'
0000000000000be2         db  0x61 ; 'a'
0000000000000be3         db  0x5f ; '_'
0000000000000be4         db  0x61 ; 'a'
0000000000000be5         db  0x74 ; 't'
0000000000000be6         db  0x65 ; 'e'
0000000000000be7         db  0x78 ; 'x'
0000000000000be8         db  0x69 ; 'i'
0000000000000be9         db  0x74 ; 't'
0000000000000bea         db  0x00 ; '.'
0000000000000beb         db  0x47 ; 'G'
0000000000000bec         db  0x4c ; 'L'
0000000000000bed         db  0x49 ; 'I'
0000000000000bee         db  0x42 ; 'B'
0000000000000bef         db  0x43 ; 'C'
0000000000000bf0         db  0x5f ; '_'
0000000000000bf1         db  0x32 ; '2'
0000000000000bf2         db  0x2e ; '.'
0000000000000bf3         db  0x33 ; '3'
0000000000000bf4         db  0x00 ; '.'
0000000000000bf5         db  0x47 ; 'G'
0000000000000bf6         db  0x4c ; 'L'
0000000000000bf7         db  0x49 ; 'I'
0000000000000bf8         db  0x42 ; 'B'
0000000000000bf9         db  0x43 ; 'C'
0000000000000bfa         db  0x5f ; '_'
0000000000000bfb         db  0x32 ; '2'
0000000000000bfc         db  0x2e ; '.'
0000000000000bfd         db  0x31 ; '1'
0000000000000bfe         db  0x34 ; '4'
0000000000000bff         db  0x00 ; '.'
                     aGlibc234:
0000000000000c00         db         "GLIBC_2.3.4", 0
0000000000000c0c         db  0x47 ; 'G'
0000000000000c0d         db  0x4c ; 'L'
0000000000000c0e         db  0x49 ; 'I'
0000000000000c0f         db  0x42 ; 'B'
0000000000000c10         db  0x43 ; 'C'
0000000000000c11         db  0x5f ; '_'
0000000000000c12         db  0x32 ; '2'
0000000000000c13         db  0x2e ; '.'
0000000000000c14         db  0x34 ; '4'
0000000000000c15         db  0x00 ; '.'
0000000000000c16         db  0x47 ; 'G'
0000000000000c17         db  0x4c ; 'L'
0000000000000c18         db  0x49 ; 'I'
0000000000000c19         db  0x42 ; 'B'
0000000000000c1a         db  0x43 ; 'C'
0000000000000c1b         db  0x5f ; '_'
0000000000000c1c         db  0x32 ; '2'
0000000000000c1d         db  0x2e ; '.'
0000000000000c1e         db  0x32 ; '2'
0000000000000c1f         db  0x2e ; '.'
0000000000000c20         db  0x35 ; '5'
0000000000000c21         db  0x00 ; '.'
0000000000000c22         db  0x5f ; '_'
0000000000000c23         db  0x49 ; 'I'
0000000000000c24         db  0x54 ; 'T'
0000000000000c25         db  0x4d ; 'M'
0000000000000c26         db  0x5f ; '_'
0000000000000c27         db  0x64 ; 'd'
0000000000000c28         db  0x65 ; 'e'
0000000000000c29         db  0x72 ; 'r'
0000000000000c2a         db  0x65 ; 'e'
0000000000000c2b         db  0x67 ; 'g'
0000000000000c2c         db  0x69 ; 'i'
0000000000000c2d         db  0x73 ; 's'
0000000000000c2e         db  0x74 ; 't'
0000000000000c2f         db  0x65 ; 'e'
0000000000000c30         db  0x72 ; 'r'
0000000000000c31         db  0x54 ; 'T'
0000000000000c32         db  0x4d ; 'M'
0000000000000c33         db  0x43 ; 'C'
0000000000000c34         db  0x6c ; 'l'
0000000000000c35         db  0x6f ; 'o'
0000000000000c36         db  0x6e ; 'n'
0000000000000c37         db  0x65 ; 'e'
0000000000000c38         db  0x54 ; 'T'
0000000000000c39         db  0x61 ; 'a'
0000000000000c3a         db  0x62 ; 'b'
0000000000000c3b         db  0x6c ; 'l'
0000000000000c3c         db  0x65 ; 'e'
0000000000000c3d         db  0x00 ; '.'
0000000000000c3e         db  0x5f ; '_'
0000000000000c3f         db  0x5f ; '_'
0000000000000c40         db  0x67 ; 'g'
0000000000000c41         db  0x6d ; 'm'
0000000000000c42         db  0x6f ; 'o'
0000000000000c43         db  0x6e ; 'n'
0000000000000c44         db  0x5f ; '_'
0000000000000c45         db  0x73 ; 's'
0000000000000c46         db  0x74 ; 't'
0000000000000c47         db  0x61 ; 'a'
0000000000000c48         db  0x72 ; 'r'
0000000000000c49         db  0x74 ; 't'
0000000000000c4a         db  0x5f ; '_'
0000000000000c4b         db  0x5f ; '_'
0000000000000c4c         db  0x00 ; '.'
0000000000000c4d         db  0x5f ; '_'
0000000000000c4e         db  0x49 ; 'I'
0000000000000c4f         db  0x54 ; 'T'
0000000000000c50         db  0x4d ; 'M'
0000000000000c51         db  0x5f ; '_'
0000000000000c52         db  0x72 ; 'r'
0000000000000c53         db  0x65 ; 'e'
0000000000000c54         db  0x67 ; 'g'
0000000000000c55         db  0x69 ; 'i'
0000000000000c56         db  0x73 ; 's'
0000000000000c57         db  0x74 ; 't'
0000000000000c58         db  0x65 ; 'e'
0000000000000c59         db  0x72 ; 'r'
0000000000000c5a         db  0x54 ; 'T'
0000000000000c5b         db  0x4d ; 'M'
0000000000000c5c         db  0x43 ; 'C'
0000000000000c5d         db  0x6c ; 'l'
0000000000000c5e         db  0x6f ; 'o'
0000000000000c5f         db  0x6e ; 'n'
0000000000000c60         db  0x65 ; 'e'
0000000000000c61         db  0x54 ; 'T'
0000000000000c62         db  0x61 ; 'a'
0000000000000c63         db  0x62 ; 'b'
0000000000000c64         db  0x6c ; 'l'
0000000000000c65         db  0x65 ; 'e'
0000000000000c66         db  0x00 ; '.'
0000000000000c67         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xc68; 0xcf2[ (138 bytes)
        ; File offset : [3176; 3314[ (138 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000c68         db  0x00 ; '.'
0000000000000c69         db  0x00 ; '.'
0000000000000c6a         db  0x02 ; '.'
0000000000000c6b         db  0x00 ; '.'
0000000000000c6c         db  0x02 ; '.'
0000000000000c6d         db  0x00 ; '.'
0000000000000c6e         db  0x02 ; '.'
0000000000000c6f         db  0x00 ; '.'
0000000000000c70         db  0x02 ; '.'
0000000000000c71         db  0x00 ; '.'
0000000000000c72         db  0x02 ; '.'
0000000000000c73         db  0x00 ; '.'
0000000000000c74         db  0x02 ; '.'
0000000000000c75         db  0x00 ; '.'
0000000000000c76         db  0x00 ; '.'
0000000000000c77         db  0x00 ; '.'
0000000000000c78         db  0x02 ; '.'
0000000000000c79         db  0x00 ; '.'
0000000000000c7a         db  0x02 ; '.'
0000000000000c7b         db  0x00 ; '.'
0000000000000c7c         db  0x02 ; '.'
0000000000000c7d         db  0x00 ; '.'
0000000000000c7e         db  0x02 ; '.'
0000000000000c7f         db  0x00 ; '.'
0000000000000c80         db  0x02 ; '.'
0000000000000c81         db  0x00 ; '.'
0000000000000c82         db  0x02 ; '.'
0000000000000c83         db  0x00 ; '.'
0000000000000c84         db  0x02 ; '.'
0000000000000c85         db  0x00 ; '.'
0000000000000c86         db  0x02 ; '.'
0000000000000c87         db  0x00 ; '.'
0000000000000c88         db  0x02 ; '.'
0000000000000c89         db  0x00 ; '.'
0000000000000c8a         db  0x03 ; '.'
0000000000000c8b         db  0x00 ; '.'
0000000000000c8c         db  0x02 ; '.'
0000000000000c8d         db  0x00 ; '.'
0000000000000c8e         db  0x02 ; '.'
0000000000000c8f         db  0x00 ; '.'
0000000000000c90         db  0x02 ; '.'
0000000000000c91         db  0x00 ; '.'
0000000000000c92         db  0x02 ; '.'
0000000000000c93         db  0x00 ; '.'
0000000000000c94         db  0x02 ; '.'
0000000000000c95         db  0x00 ; '.'
0000000000000c96         db  0x02 ; '.'
0000000000000c97         db  0x00 ; '.'
0000000000000c98         db  0x02 ; '.'
0000000000000c99         db  0x00 ; '.'
0000000000000c9a         db  0x02 ; '.'
0000000000000c9b         db  0x00 ; '.'
0000000000000c9c         db  0x02 ; '.'
0000000000000c9d         db  0x00 ; '.'
0000000000000c9e         db  0x02 ; '.'
0000000000000c9f         db  0x00 ; '.'
0000000000000ca0         db  0x02 ; '.'
0000000000000ca1         db  0x00 ; '.'
0000000000000ca2         db  0x02 ; '.'
0000000000000ca3         db  0x00 ; '.'
0000000000000ca4         db  0x02 ; '.'
0000000000000ca5         db  0x00 ; '.'
0000000000000ca6         db  0x02 ; '.'
0000000000000ca7         db  0x00 ; '.'
0000000000000ca8         db  0x02 ; '.'
0000000000000ca9         db  0x00 ; '.'
0000000000000caa         db  0x02 ; '.'
0000000000000cab         db  0x00 ; '.'
0000000000000cac         db  0x04 ; '.'
0000000000000cad         db  0x00 ; '.'
0000000000000cae         db  0x00 ; '.'
0000000000000caf         db  0x00 ; '.'
0000000000000cb0         db  0x05 ; '.'
0000000000000cb1         db  0x00 ; '.'
0000000000000cb2         db  0x02 ; '.'
0000000000000cb3         db  0x00 ; '.'
0000000000000cb4         db  0x02 ; '.'
0000000000000cb5         db  0x00 ; '.'
0000000000000cb6         db  0x02 ; '.'
0000000000000cb7         db  0x00 ; '.'
0000000000000cb8         db  0x02 ; '.'
0000000000000cb9         db  0x00 ; '.'
0000000000000cba         db  0x02 ; '.'
0000000000000cbb         db  0x00 ; '.'
0000000000000cbc         db  0x02 ; '.'
0000000000000cbd         db  0x00 ; '.'
0000000000000cbe         db  0x02 ; '.'
0000000000000cbf         db  0x00 ; '.'
0000000000000cc0         db  0x04 ; '.'
0000000000000cc1         db  0x00 ; '.'
0000000000000cc2         db  0x02 ; '.'
0000000000000cc3         db  0x00 ; '.'
0000000000000cc4         db  0x02 ; '.'
0000000000000cc5         db  0x00 ; '.'
0000000000000cc6         db  0x02 ; '.'
0000000000000cc7         db  0x00 ; '.'
0000000000000cc8         db  0x02 ; '.'
0000000000000cc9         db  0x00 ; '.'
0000000000000cca         db  0x02 ; '.'
0000000000000ccb         db  0x00 ; '.'
0000000000000ccc         db  0x02 ; '.'
0000000000000ccd         db  0x00 ; '.'
0000000000000cce         db  0x02 ; '.'
0000000000000ccf         db  0x00 ; '.'
0000000000000cd0         db  0x02 ; '.'
0000000000000cd1         db  0x00 ; '.'
0000000000000cd2         db  0x02 ; '.'
0000000000000cd3         db  0x00 ; '.'
0000000000000cd4         db  0x04 ; '.'
0000000000000cd5         db  0x00 ; '.'
0000000000000cd6         db  0x00 ; '.'
0000000000000cd7         db  0x00 ; '.'
0000000000000cd8         db  0x02 ; '.'
0000000000000cd9         db  0x00 ; '.'
0000000000000cda         db  0x02 ; '.'
0000000000000cdb         db  0x00 ; '.'
0000000000000cdc         db  0x02 ; '.'
0000000000000cdd         db  0x00 ; '.'
0000000000000cde         db  0x06 ; '.'
0000000000000cdf         db  0x00 ; '.'
0000000000000ce0         db  0x04 ; '.'
0000000000000ce1         db  0x00 ; '.'
0000000000000ce2         db  0x02 ; '.'
0000000000000ce3         db  0x00 ; '.'
0000000000000ce4         db  0x02 ; '.'
0000000000000ce5         db  0x00 ; '.'
0000000000000ce6         db  0x02 ; '.'
0000000000000ce7         db  0x00 ; '.'
0000000000000ce8         db  0x02 ; '.'
0000000000000ce9         db  0x00 ; '.'
0000000000000cea         db  0x02 ; '.'
0000000000000ceb         db  0x00 ; '.'
0000000000000cec         db  0x02 ; '.'
0000000000000ced         db  0x00 ; '.'
0000000000000cee         db  0x02 ; '.'
0000000000000cef         db  0x00 ; '.'
0000000000000cf0         db  0x02 ; '.'
0000000000000cf1         db  0x00 ; '.'
0000000000000cf2         db  0x00 ; '.'
0000000000000cf3         db  0x00 ; '.'
0000000000000cf4         db  0x00 ; '.'
0000000000000cf5         db  0x00 ; '.'
0000000000000cf6         db  0x00 ; '.'
0000000000000cf7         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xcf8; 0xd58[ (96 bytes)
        ; File offset : [3320; 3416[ (96 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000cf8         db  0x01 ; '.'
0000000000000cf9         db  0x00 ; '.'
0000000000000cfa         db  0x05 ; '.'
0000000000000cfb         db  0x00 ; '.'
0000000000000cfc         db  0x01 ; '.'
0000000000000cfd         db  0x00 ; '.'
0000000000000cfe         db  0x00 ; '.'
0000000000000cff         db  0x00 ; '.'
0000000000000d00         db  0x10 ; '.'
0000000000000d01         db  0x00 ; '.'
0000000000000d02         db  0x00 ; '.'
0000000000000d03         db  0x00 ; '.'
0000000000000d04         db  0x00 ; '.'
0000000000000d05         db  0x00 ; '.'
0000000000000d06         db  0x00 ; '.'
0000000000000d07         db  0x00 ; '.'
0000000000000d08         db  0x13 ; '.'
0000000000000d09         db  0x69 ; 'i'
0000000000000d0a         db  0x69 ; 'i'
0000000000000d0b         db  0x0d ; '.'
0000000000000d0c         db  0x00 ; '.'
0000000000000d0d         db  0x00 ; '.'
0000000000000d0e         db  0x06 ; '.'
0000000000000d0f         db  0x00 ; '.'
0000000000000d10         db  0x93 ; '.'
0000000000000d11         db  0x02 ; '.'
0000000000000d12         db  0x00 ; '.'
0000000000000d13         db  0x00 ; '.'
0000000000000d14         db  0x10 ; '.'
0000000000000d15         db  0x00 ; '.'
0000000000000d16         db  0x00 ; '.'
0000000000000d17         db  0x00 ; '.'
0000000000000d18         db  0x94 ; '.'
0000000000000d19         db  0x91 ; '.'
0000000000000d1a         db  0x96 ; '.'
0000000000000d1b         db  0x06 ; '.'
0000000000000d1c         db  0x00 ; '.'
0000000000000d1d         db  0x00 ; '.'
0000000000000d1e         db  0x05 ; '.'
0000000000000d1f         db  0x00 ; '.'
0000000000000d20         db  0x9d ; '.'
0000000000000d21         db  0x02 ; '.'
0000000000000d22         db  0x00 ; '.'
0000000000000d23         db  0x00 ; '.'
0000000000000d24         db  0x10 ; '.'
0000000000000d25         db  0x00 ; '.'
0000000000000d26         db  0x00 ; '.'
0000000000000d27         db  0x00 ; '.'
0000000000000d28         db  0x74 ; 't'
0000000000000d29         db  0x19 ; '.'
0000000000000d2a         db  0x69 ; 'i'
0000000000000d2b         db  0x09 ; '.'
0000000000000d2c         db  0x00 ; '.'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x04 ; '.'
0000000000000d2f         db  0x00 ; '.'
0000000000000d30         db  0xa8 ; '.'
0000000000000d31         db  0x02 ; '.'
0000000000000d32         db  0x00 ; '.'
0000000000000d33         db  0x00 ; '.'
0000000000000d34         db  0x10 ; '.'
0000000000000d35         db  0x00 ; '.'
0000000000000d36         db  0x00 ; '.'
0000000000000d37         db  0x00 ; '.'
0000000000000d38         db  0x14 ; '.'
0000000000000d39         db  0x69 ; 'i'
0000000000000d3a         db  0x69 ; 'i'
0000000000000d3b         db  0x0d ; '.'
0000000000000d3c         db  0x00 ; '.'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x03 ; '.'
0000000000000d3f         db  0x00 ; '.'
0000000000000d40         db  0xb4 ; '.'
0000000000000d41         db  0x02 ; '.'
0000000000000d42         db  0x00 ; '.'
0000000000000d43         db  0x00 ; '.'
0000000000000d44         db  0x10 ; '.'
0000000000000d45         db  0x00 ; '.'
0000000000000d46         db  0x00 ; '.'
0000000000000d47         db  0x00 ; '.'
0000000000000d48         db  0x75 ; 'u'
0000000000000d49         db  0x1a ; '.'
0000000000000d4a         db  0x69 ; 'i'
0000000000000d4b         db  0x09 ; '.'
0000000000000d4c         db  0x00 ; '.'
0000000000000d4d         db  0x00 ; '.'
0000000000000d4e         db  0x02 ; '.'
0000000000000d4f         db  0x00 ; '.'
0000000000000d50         db  0xbe ; '.'
0000000000000d51         db  0x02 ; '.'
0000000000000d52         db  0x00 ; '.'
0000000000000d53         db  0x00 ; '.'
0000000000000d54         db  0x00 ; '.'
0000000000000d55         db  0x00 ; '.'
0000000000000d56         db  0x00 ; '.'
0000000000000d57         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xd58; 0x1070[ (792 bytes)
        ; File offset : [3416; 4208[ (792 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000d58         db  0x10 ; '.'
0000000000000d59         db  0x8b ; '.'
0000000000000d5a         db  0x20 ; ' '
0000000000000d5b         db  0x00 ; '.'
0000000000000d5c         db  0x00 ; '.'
0000000000000d5d         db  0x00 ; '.'
0000000000000d5e         db  0x00 ; '.'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0x08 ; '.'
0000000000000d61         db  0x00 ; '.'
0000000000000d62         db  0x00 ; '.'
0000000000000d63         db  0x00 ; '.'
0000000000000d64         db  0x00 ; '.'
0000000000000d65         db  0x00 ; '.'
0000000000000d66         db  0x00 ; '.'
0000000000000d67         db  0x00 ; '.'
0000000000000d68         db  0x30 ; '0'
0000000000000d69         db  0x1c ; '.'
0000000000000d6a         db  0x00 ; '.'
0000000000000d6b         db  0x00 ; '.'
0000000000000d6c         db  0x00 ; '.'
0000000000000d6d         db  0x00 ; '.'
0000000000000d6e         db  0x00 ; '.'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0x18 ; '.'
0000000000000d71         db  0x8b ; '.'
0000000000000d72         db  0x20 ; ' '
0000000000000d73         db  0x00 ; '.'
0000000000000d74         db  0x00 ; '.'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x00 ; '.'
0000000000000d77         db  0x00 ; '.'
0000000000000d78         db  0x08 ; '.'
0000000000000d79         db  0x00 ; '.'
0000000000000d7a         db  0x00 ; '.'
0000000000000d7b         db  0x00 ; '.'
0000000000000d7c         db  0x00 ; '.'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x00 ; '.'
0000000000000d7f         db  0x00 ; '.'
0000000000000d80         db  0xf0 ; '.'
0000000000000d81         db  0x1b ; '.'
0000000000000d82         db  0x00 ; '.'
0000000000000d83         db  0x00 ; '.'
0000000000000d84         db  0x00 ; '.'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x00 ; '.'
0000000000000d87         db  0x00 ; '.'
0000000000000d88         db  0x20 ; ' '
0000000000000d89         db  0x8b ; '.'
0000000000000d8a         db  0x20 ; ' '
0000000000000d8b         db  0x00 ; '.'
0000000000000d8c         db  0x00 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x00 ; '.'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0x08 ; '.'
0000000000000d91         db  0x00 ; '.'
0000000000000d92         db  0x00 ; '.'
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x00 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x00 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0x73 ; 's'
0000000000000d99         db  0x64 ; 'd'
0000000000000d9a         db  0x00 ; '.'
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x00 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x00 ; '.'
0000000000000d9f         db  0x00 ; '.'
0000000000000da0         db  0x40 ; '@'
0000000000000da1         db  0x8b ; '.'
0000000000000da2         db  0x20 ; ' '
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x00 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x00 ; '.'
0000000000000da7         db  0x00 ; '.'
0000000000000da8         db  0x08 ; '.'
0000000000000da9         db  0x00 ; '.'
0000000000000daa         db  0x00 ; '.'
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x00 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x00 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0x78 ; 'x'
0000000000000db1         db  0x64 ; 'd'
0000000000000db2         db  0x00 ; '.'
0000000000000db3         db  0x00 ; '.'
0000000000000db4         db  0x00 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x00 ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0x60 ; '`'
0000000000000db9         db  0x8b ; '.'
0000000000000dba         db  0x20 ; ' '
0000000000000dbb         db  0x00 ; '.'
0000000000000dbc         db  0x00 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x00 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0x08 ; '.'
0000000000000dc1         db  0x00 ; '.'
0000000000000dc2         db  0x00 ; '.'
0000000000000dc3         db  0x00 ; '.'
0000000000000dc4         db  0x00 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x00 ; '.'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0x7d ; '}'
0000000000000dc9         db  0x64 ; 'd'
0000000000000dca         db  0x00 ; '.'
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x00 ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x00 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0xa0 ; '.'
0000000000000dd1         db  0x8b ; '.'
0000000000000dd2         db  0x20 ; ' '
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x00 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x00 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0x08 ; '.'
0000000000000dd9         db  0x00 ; '.'
0000000000000dda         db  0x00 ; '.'
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x00 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x00 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0x28 ; '('
0000000000000de1         db  0x67 ; 'g'
0000000000000de2         db  0x00 ; '.'
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x00 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x00 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0xa8 ; '.'
0000000000000de9         db  0x8b ; '.'
0000000000000dea         db  0x20 ; ' '
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x00 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x00 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0x08 ; '.'
0000000000000df1         db  0x00 ; '.'
0000000000000df2         db  0x00 ; '.'
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x00 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x00 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0x37 ; '7'
0000000000000df9         db  0x67 ; 'g'
0000000000000dfa         db  0x00 ; '.'
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x00 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x00 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0xc0 ; '.'
0000000000000e01         db  0x8b ; '.'
0000000000000e02         db  0x20 ; ' '
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x00 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x00 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0x08 ; '.'
0000000000000e09         db  0x00 ; '.'
0000000000000e0a         db  0x00 ; '.'
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x00 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x00 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0xc9 ; '.'
0000000000000e11         db  0x67 ; 'g'
0000000000000e12         db  0x00 ; '.'
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x00 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x00 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0xc8 ; '.'
0000000000000e19         db  0x8b ; '.'
0000000000000e1a         db  0x20 ; ' '
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x00 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x00 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0x08 ; '.'
0000000000000e21         db  0x00 ; '.'
0000000000000e22         db  0x00 ; '.'
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x00 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x00 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0xd1 ; '.'
0000000000000e29         db  0x67 ; 'g'
0000000000000e2a         db  0x00 ; '.'
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x00 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x00 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0xd0 ; '.'
0000000000000e31         db  0x8b ; '.'
0000000000000e32         db  0x20 ; ' '
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0x08 ; '.'
0000000000000e39         db  0x00 ; '.'
0000000000000e3a         db  0x00 ; '.'
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x00 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x00 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0xd7 ; '.'
0000000000000e41         db  0x67 ; 'g'
0000000000000e42         db  0x00 ; '.'
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x00 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0xd8 ; '.'
0000000000000e49         db  0x8b ; '.'
0000000000000e4a         db  0x20 ; ' '
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x00 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0x08 ; '.'
0000000000000e51         db  0x00 ; '.'
0000000000000e52         db  0x00 ; '.'
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x00 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x00 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0xe4 ; '.'
0000000000000e59         db  0x67 ; 'g'
0000000000000e5a         db  0x00 ; '.'
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x00 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x00 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0xe0 ; '.'
0000000000000e61         db  0x8b ; '.'
0000000000000e62         db  0x20 ; ' '
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x00 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0x08 ; '.'
0000000000000e69         db  0x00 ; '.'
0000000000000e6a         db  0x00 ; '.'
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x00 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x00 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0xf1 ; '.'
0000000000000e71         db  0x67 ; 'g'
0000000000000e72         db  0x00 ; '.'
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x00 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0xe8 ; '.'
0000000000000e79         db  0x8b ; '.'
0000000000000e7a         db  0x20 ; ' '
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x00 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0x08 ; '.'
0000000000000e81         db  0x00 ; '.'
0000000000000e82         db  0x00 ; '.'
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x00 ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0x05 ; '.'
0000000000000e89         db  0x68 ; 'h'
0000000000000e8a         db  0x00 ; '.'
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x00 ; '.'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0xf0 ; '.'
0000000000000e91         db  0x8b ; '.'
0000000000000e92         db  0x20 ; ' '
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'
0000000000000e98         db  0x08 ; '.'
0000000000000e99         db  0x00 ; '.'
0000000000000e9a         db  0x00 ; '.'
0000000000000e9b         db  0x00 ; '.'
0000000000000e9c         db  0x00 ; '.'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x00 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0x07 ; '.'
0000000000000ea1         db  0x68 ; 'h'
0000000000000ea2         db  0x00 ; '.'
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x00 ; '.'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0xf8 ; '.'
0000000000000ea9         db  0x8b ; '.'
0000000000000eaa         db  0x20 ; ' '
0000000000000eab         db  0x00 ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x00 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0x08 ; '.'
0000000000000eb1         db  0x00 ; '.'
0000000000000eb2         db  0x00 ; '.'
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x00 ; '.'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0xea ; '.'
0000000000000eb9         db  0x67 ; 'g'
0000000000000eba         db  0x00 ; '.'
0000000000000ebb         db  0x00 ; '.'
0000000000000ebc         db  0x00 ; '.'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x00 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0x00 ; '.'
0000000000000ec1         db  0x8c ; '.'
0000000000000ec2         db  0x20 ; ' '
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x00 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0x08 ; '.'
0000000000000ec9         db  0x00 ; '.'
0000000000000eca         db  0x00 ; '.'
0000000000000ecb         db  0x00 ; '.'
0000000000000ecc         db  0x00 ; '.'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0x47 ; 'G'
0000000000000ed1         db  0x64 ; 'd'
0000000000000ed2         db  0x00 ; '.'
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x00 ; '.'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0x08 ; '.'
0000000000000ed9         db  0x8c ; '.'
0000000000000eda         db  0x20 ; ' '
0000000000000edb         db  0x00 ; '.'
0000000000000edc         db  0x00 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0x08 ; '.'
0000000000000ee1         db  0x00 ; '.'
0000000000000ee2         db  0x00 ; '.'
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x00 ; '.'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0x0f ; '.'
0000000000000ee9         db  0x68 ; 'h'
0000000000000eea         db  0x00 ; '.'
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x00 ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x00 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0x08 ; '.'
0000000000000ef1         db  0x90 ; '.'
0000000000000ef2         db  0x20 ; ' '
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0x08 ; '.'
0000000000000ef9         db  0x00 ; '.'
0000000000000efa         db  0x00 ; '.'
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x00 ; '.'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0x08 ; '.'
0000000000000f01         db  0x90 ; '.'
0000000000000f02         db  0x20 ; ' '
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x00 ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0x10 ; '.'
0000000000000f09         db  0x90 ; '.'
0000000000000f0a         db  0x20 ; ' '
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x00 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0x08 ; '.'
0000000000000f11         db  0x00 ; '.'
0000000000000f12         db  0x00 ; '.'
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x00 ; '.'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0xcb ; '.'
0000000000000f19         db  0x66 ; 'f'
0000000000000f1a         db  0x00 ; '.'
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x00 ; '.'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0x60 ; '`'
0000000000000f21         db  0x90 ; '.'
0000000000000f22         db  0x20 ; ' '
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x00 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0x08 ; '.'
0000000000000f29         db  0x00 ; '.'
0000000000000f2a         db  0x00 ; '.'
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x00 ; '.'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0x70 ; 'p'
0000000000000f31         db  0x90 ; '.'
0000000000000f32         db  0x20 ; ' '
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x00 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0x78 ; 'x'
0000000000000f39         db  0x90 ; '.'
0000000000000f3a         db  0x20 ; ' '
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x00 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0x08 ; '.'
0000000000000f41         db  0x00 ; '.'
0000000000000f42         db  0x00 ; '.'
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x00 ; '.'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0x20 ; ' '
0000000000000f49         db  0x91 ; '.'
0000000000000f4a         db  0x20 ; ' '
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x00 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0x80 ; '.'
0000000000000f51         db  0x90 ; '.'
0000000000000f52         db  0x20 ; ' '
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0x08 ; '.'
0000000000000f59         db  0x00 ; '.'
0000000000000f5a         db  0x00 ; '.'
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x00 ; '.'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0x30 ; '0'
0000000000000f61         db  0x5e ; '^'
0000000000000f62         db  0x00 ; '.'
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x00 ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0xd8 ; '.'
0000000000000f69         db  0x8f ; '.'
0000000000000f6a         db  0x20 ; ' '
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0x06 ; '.'
0000000000000f71         db  0x00 ; '.'
0000000000000f72         db  0x00 ; '.'
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x07 ; '.'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0x00 ; '.'
0000000000000f79         db  0x00 ; '.'
0000000000000f7a         db  0x00 ; '.'
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x00 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0xe0 ; '.'
0000000000000f81         db  0x8f ; '.'
0000000000000f82         db  0x20 ; ' '
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x00 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0x06 ; '.'
0000000000000f89         db  0x00 ; '.'
0000000000000f8a         db  0x00 ; '.'
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x1e ; '.'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0x00 ; '.'
0000000000000f91         db  0x00 ; '.'
0000000000000f92         db  0x00 ; '.'
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x00 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0xe8 ; '.'
0000000000000f99         db  0x8f ; '.'
0000000000000f9a         db  0x20 ; ' '
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'
0000000000000fa0         db  0x06 ; '.'
0000000000000fa1         db  0x00 ; '.'
0000000000000fa2         db  0x00 ; '.'
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x23 ; '#'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0x00 ; '.'
0000000000000fa9         db  0x00 ; '.'
0000000000000faa         db  0x00 ; '.'
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x00 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0xf0 ; '.'
0000000000000fb1         db  0x8f ; '.'
0000000000000fb2         db  0x20 ; ' '
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x00 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0x06 ; '.'
0000000000000fb9         db  0x00 ; '.'
0000000000000fba         db  0x00 ; '.'
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x37 ; '7'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0x00 ; '.'
0000000000000fc1         db  0x00 ; '.'
0000000000000fc2         db  0x00 ; '.'
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x00 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0xf8 ; '.'
0000000000000fc9         db  0x8f ; '.'
0000000000000fca         db  0x20 ; ' '
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0x06 ; '.'
0000000000000fd1         db  0x00 ; '.'
0000000000000fd2         db  0x00 ; '.'
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x3a ; ':'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x00 ; '.'
0000000000000fd9         db  0x00 ; '.'
0000000000000fda         db  0x00 ; '.'
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x00 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0xa0 ; '.'
0000000000000fe1         db  0x90 ; '.'
0000000000000fe2         db  0x20 ; ' '
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x00 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0x05 ; '.'
0000000000000fe9         db  0x00 ; '.'
0000000000000fea         db  0x00 ; '.'
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x3e ; '>'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x00 ; '.'
0000000000000ff1         db  0x00 ; '.'
0000000000000ff2         db  0x00 ; '.'
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x00 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0xa8 ; '.'
0000000000000ff9         db  0x90 ; '.'
0000000000000ffa         db  0x20 ; ' '
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'
0000000000001000         db  0x05 ; '.'
0000000000001001         db  0x00 ; '.'
0000000000001002         db  0x00 ; '.'
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x3d ; '='
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x00 ; '.'
0000000000001009         db  0x00 ; '.'
000000000000100a         db  0x00 ; '.'
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x00 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0xb0 ; '.'
0000000000001011         db  0x90 ; '.'
0000000000001012         db  0x20 ; ' '
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0x05 ; '.'
0000000000001019         db  0x00 ; '.'
000000000000101a         db  0x00 ; '.'
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x3f ; '?'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x00 ; '.'
0000000000001021         db  0x00 ; '.'
0000000000001022         db  0x00 ; '.'
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x00 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0xb8 ; '.'
0000000000001029         db  0x90 ; '.'
000000000000102a         db  0x20 ; ' '
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x00 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0x05 ; '.'
0000000000001031         db  0x00 ; '.'
0000000000001032         db  0x00 ; '.'
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x44 ; 'D'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x00 ; '.'
0000000000001039         db  0x00 ; '.'
000000000000103a         db  0x00 ; '.'
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x00 ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0xc0 ; '.'
0000000000001041         db  0x90 ; '.'
0000000000001042         db  0x20 ; ' '
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x00 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0x05 ; '.'
0000000000001049         db  0x00 ; '.'
000000000000104a         db  0x00 ; '.'
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x41 ; 'A'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x00 ; '.'
0000000000001051         db  0x00 ; '.'
0000000000001052         db  0x00 ; '.'
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x00 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0xe0 ; '.'
0000000000001059         db  0x90 ; '.'
000000000000105a         db  0x20 ; ' '
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0x05 ; '.'
0000000000001061         db  0x00 ; '.'
0000000000001062         db  0x00 ; '.'
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x43 ; 'C'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x00 ; '.'
0000000000001069         db  0x00 ; '.'
000000000000106a         db  0x00 ; '.'
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x00 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0x1070; 0x1598[ (1320 bytes)
        ; File offset : [4208; 5528[ (1320 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000001070         db  0x20 ; ' '
0000000000001071         db  0x8e ; '.'
0000000000001072         db  0x20 ; ' '
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x00 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0x07 ; '.'
0000000000001079         db  0x00 ; '.'
000000000000107a         db  0x00 ; '.'
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x01 ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x00 ; '.'
0000000000001081         db  0x00 ; '.'
0000000000001082         db  0x00 ; '.'
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x00 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0x28 ; '('
0000000000001089         db  0x8e ; '.'
000000000000108a         db  0x20 ; ' '
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x00 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0x07 ; '.'
0000000000001091         db  0x00 ; '.'
0000000000001092         db  0x00 ; '.'
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x02 ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x00 ; '.'
0000000000001099         db  0x00 ; '.'
000000000000109a         db  0x00 ; '.'
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x00 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0x30 ; '0'
00000000000010a1         db  0x8e ; '.'
00000000000010a2         db  0x20 ; ' '
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x00 ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0x07 ; '.'
00000000000010a9         db  0x00 ; '.'
00000000000010aa         db  0x00 ; '.'
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x03 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x00 ; '.'
00000000000010b1         db  0x00 ; '.'
00000000000010b2         db  0x00 ; '.'
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x00 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0x38 ; '8'
00000000000010b9         db  0x8e ; '.'
00000000000010ba         db  0x20 ; ' '
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x00 ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0x07 ; '.'
00000000000010c1         db  0x00 ; '.'
00000000000010c2         db  0x00 ; '.'
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x04 ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x00 ; '.'
00000000000010c9         db  0x00 ; '.'
00000000000010ca         db  0x00 ; '.'
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x00 ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0x40 ; '@'
00000000000010d1         db  0x8e ; '.'
00000000000010d2         db  0x20 ; ' '
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x00 ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0x07 ; '.'
00000000000010d9         db  0x00 ; '.'
00000000000010da         db  0x00 ; '.'
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x05 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x00 ; '.'
00000000000010e1         db  0x00 ; '.'
00000000000010e2         db  0x00 ; '.'
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x00 ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0x48 ; 'H'
00000000000010e9         db  0x8e ; '.'
00000000000010ea         db  0x20 ; ' '
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x00 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0x07 ; '.'
00000000000010f1         db  0x00 ; '.'
00000000000010f2         db  0x00 ; '.'
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x06 ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0x00 ; '.'
00000000000010f9         db  0x00 ; '.'
00000000000010fa         db  0x00 ; '.'
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x00 ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0x50 ; 'P'
0000000000001101         db  0x8e ; '.'
0000000000001102         db  0x20 ; ' '
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x00 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0x07 ; '.'
0000000000001109         db  0x00 ; '.'
000000000000110a         db  0x00 ; '.'
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x08 ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0x00 ; '.'
0000000000001111         db  0x00 ; '.'
0000000000001112         db  0x00 ; '.'
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x00 ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0x58 ; 'X'
0000000000001119         db  0x8e ; '.'
000000000000111a         db  0x20 ; ' '
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x00 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x07 ; '.'
0000000000001121         db  0x00 ; '.'
0000000000001122         db  0x00 ; '.'
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x09 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0x00 ; '.'
0000000000001129         db  0x00 ; '.'
000000000000112a         db  0x00 ; '.'
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x00 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0x60 ; '`'
0000000000001131         db  0x8e ; '.'
0000000000001132         db  0x20 ; ' '
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x00 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x07 ; '.'
0000000000001139         db  0x00 ; '.'
000000000000113a         db  0x00 ; '.'
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x0a ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0x00 ; '.'
0000000000001141         db  0x00 ; '.'
0000000000001142         db  0x00 ; '.'
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x00 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0x68 ; 'h'
0000000000001149         db  0x8e ; '.'
000000000000114a         db  0x20 ; ' '
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x00 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x07 ; '.'
0000000000001151         db  0x00 ; '.'
0000000000001152         db  0x00 ; '.'
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x0b ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0x00 ; '.'
0000000000001159         db  0x00 ; '.'
000000000000115a         db  0x00 ; '.'
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x00 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0x70 ; 'p'
0000000000001161         db  0x8e ; '.'
0000000000001162         db  0x20 ; ' '
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x00 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x07 ; '.'
0000000000001169         db  0x00 ; '.'
000000000000116a         db  0x00 ; '.'
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x0c ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0x00 ; '.'
0000000000001171         db  0x00 ; '.'
0000000000001172         db  0x00 ; '.'
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x00 ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0x78 ; 'x'
0000000000001179         db  0x8e ; '.'
000000000000117a         db  0x20 ; ' '
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x00 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x07 ; '.'
0000000000001181         db  0x00 ; '.'
0000000000001182         db  0x00 ; '.'
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x0d ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x00 ; '.'
0000000000001189         db  0x00 ; '.'
000000000000118a         db  0x00 ; '.'
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x00 ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0x80 ; '.'
0000000000001191         db  0x8e ; '.'
0000000000001192         db  0x20 ; ' '
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x00 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0x07 ; '.'
0000000000001199         db  0x00 ; '.'
000000000000119a         db  0x00 ; '.'
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x0e ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x00 ; '.'
00000000000011a1         db  0x00 ; '.'
00000000000011a2         db  0x00 ; '.'
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x00 ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0x88 ; '.'
00000000000011a9         db  0x8e ; '.'
00000000000011aa         db  0x20 ; ' '
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x00 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0x07 ; '.'
00000000000011b1         db  0x00 ; '.'
00000000000011b2         db  0x00 ; '.'
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x0f ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x00 ; '.'
00000000000011b9         db  0x00 ; '.'
00000000000011ba         db  0x00 ; '.'
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x00 ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0x90 ; '.'
00000000000011c1         db  0x8e ; '.'
00000000000011c2         db  0x20 ; ' '
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x00 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0x07 ; '.'
00000000000011c9         db  0x00 ; '.'
00000000000011ca         db  0x00 ; '.'
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x10 ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x00 ; '.'
00000000000011d1         db  0x00 ; '.'
00000000000011d2         db  0x00 ; '.'
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x00 ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0x98 ; '.'
00000000000011d9         db  0x8e ; '.'
00000000000011da         db  0x20 ; ' '
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x00 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0x07 ; '.'
00000000000011e1         db  0x00 ; '.'
00000000000011e2         db  0x00 ; '.'
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x11 ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x00 ; '.'
00000000000011e9         db  0x00 ; '.'
00000000000011ea         db  0x00 ; '.'
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x00 ; '.'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0xa0 ; '.'
00000000000011f1         db  0x8e ; '.'
00000000000011f2         db  0x20 ; ' '
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x00 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0x07 ; '.'
00000000000011f9         db  0x00 ; '.'
00000000000011fa         db  0x00 ; '.'
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x12 ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x00 ; '.'
0000000000001201         db  0x00 ; '.'
0000000000001202         db  0x00 ; '.'
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x00 ; '.'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0xa8 ; '.'
0000000000001209         db  0x8e ; '.'
000000000000120a         db  0x20 ; ' '
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x00 ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0x07 ; '.'
0000000000001211         db  0x00 ; '.'
0000000000001212         db  0x00 ; '.'
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x13 ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x00 ; '.'
0000000000001219         db  0x00 ; '.'
000000000000121a         db  0x00 ; '.'
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x00 ; '.'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0xb0 ; '.'
0000000000001221         db  0x8e ; '.'
0000000000001222         db  0x20 ; ' '
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x00 ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0x07 ; '.'
0000000000001229         db  0x00 ; '.'
000000000000122a         db  0x00 ; '.'
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x14 ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x00 ; '.'
0000000000001231         db  0x00 ; '.'
0000000000001232         db  0x00 ; '.'
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x00 ; '.'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0xb8 ; '.'
0000000000001239         db  0x8e ; '.'
000000000000123a         db  0x20 ; ' '
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x00 ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x07 ; '.'
0000000000001241         db  0x00 ; '.'
0000000000001242         db  0x00 ; '.'
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x15 ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x00 ; '.'
0000000000001249         db  0x00 ; '.'
000000000000124a         db  0x00 ; '.'
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x00 ; '.'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0xc0 ; '.'
0000000000001251         db  0x8e ; '.'
0000000000001252         db  0x20 ; ' '
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x00 ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0x07 ; '.'
0000000000001259         db  0x00 ; '.'
000000000000125a         db  0x00 ; '.'
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x16 ; '.'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x00 ; '.'
0000000000001261         db  0x00 ; '.'
0000000000001262         db  0x00 ; '.'
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x00 ; '.'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0xc8 ; '.'
0000000000001269         db  0x8e ; '.'
000000000000126a         db  0x20 ; ' '
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x00 ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x07 ; '.'
0000000000001271         db  0x00 ; '.'
0000000000001272         db  0x00 ; '.'
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x17 ; '.'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x00 ; '.'
0000000000001279         db  0x00 ; '.'
000000000000127a         db  0x00 ; '.'
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x00 ; '.'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0xd0 ; '.'
0000000000001281         db  0x8e ; '.'
0000000000001282         db  0x20 ; ' '
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x00 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0x07 ; '.'
0000000000001289         db  0x00 ; '.'
000000000000128a         db  0x00 ; '.'
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x18 ; '.'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x00 ; '.'
0000000000001291         db  0x00 ; '.'
0000000000001292         db  0x00 ; '.'
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x00 ; '.'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0xd8 ; '.'
0000000000001299         db  0x8e ; '.'
000000000000129a         db  0x20 ; ' '
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x00 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0x07 ; '.'
00000000000012a1         db  0x00 ; '.'
00000000000012a2         db  0x00 ; '.'
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x19 ; '.'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x00 ; '.'
00000000000012a9         db  0x00 ; '.'
00000000000012aa         db  0x00 ; '.'
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x00 ; '.'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0xe0 ; '.'
00000000000012b1         db  0x8e ; '.'
00000000000012b2         db  0x20 ; ' '
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x00 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0x07 ; '.'
00000000000012b9         db  0x00 ; '.'
00000000000012ba         db  0x00 ; '.'
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x1a ; '.'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x00 ; '.'
00000000000012c1         db  0x00 ; '.'
00000000000012c2         db  0x00 ; '.'
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x00 ; '.'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0xe8 ; '.'
00000000000012c9         db  0x8e ; '.'
00000000000012ca         db  0x20 ; ' '
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x00 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0x07 ; '.'
00000000000012d1         db  0x00 ; '.'
00000000000012d2         db  0x00 ; '.'
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x1b ; '.'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x00 ; '.'
00000000000012d9         db  0x00 ; '.'
00000000000012da         db  0x00 ; '.'
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x00 ; '.'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0xf0 ; '.'
00000000000012e1         db  0x8e ; '.'
00000000000012e2         db  0x20 ; ' '
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x00 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0x07 ; '.'
00000000000012e9         db  0x00 ; '.'
00000000000012ea         db  0x00 ; '.'
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x1c ; '.'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x00 ; '.'
00000000000012f1         db  0x00 ; '.'
00000000000012f2         db  0x00 ; '.'
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x00 ; '.'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0xf8 ; '.'
00000000000012f9         db  0x8e ; '.'
00000000000012fa         db  0x20 ; ' '
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x00 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0x07 ; '.'
0000000000001301         db  0x00 ; '.'
0000000000001302         db  0x00 ; '.'
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x1d ; '.'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x00 ; '.'
0000000000001309         db  0x00 ; '.'
000000000000130a         db  0x00 ; '.'
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x00 ; '.'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0x00 ; '.'
0000000000001311         db  0x8f ; '.'
0000000000001312         db  0x20 ; ' '
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x00 ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0x07 ; '.'
0000000000001319         db  0x00 ; '.'
000000000000131a         db  0x00 ; '.'
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x1f ; '.'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x00 ; '.'
0000000000001321         db  0x00 ; '.'
0000000000001322         db  0x00 ; '.'
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x00 ; '.'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0x08 ; '.'
0000000000001329         db  0x8f ; '.'
000000000000132a         db  0x20 ; ' '
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x00 ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0x07 ; '.'
0000000000001331         db  0x00 ; '.'
0000000000001332         db  0x00 ; '.'
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x20 ; ' '
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x00 ; '.'
0000000000001339         db  0x00 ; '.'
000000000000133a         db  0x00 ; '.'
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x00 ; '.'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0x10 ; '.'
0000000000001341         db  0x8f ; '.'
0000000000001342         db  0x20 ; ' '
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x00 ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0x07 ; '.'
0000000000001349         db  0x00 ; '.'
000000000000134a         db  0x00 ; '.'
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x21 ; '!'
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x00 ; '.'
0000000000001351         db  0x00 ; '.'
0000000000001352         db  0x00 ; '.'
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x00 ; '.'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0x18 ; '.'
0000000000001359         db  0x8f ; '.'
000000000000135a         db  0x20 ; ' '
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x00 ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0x07 ; '.'
0000000000001361         db  0x00 ; '.'
0000000000001362         db  0x00 ; '.'
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x22 ; '"'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0x00 ; '.'
0000000000001369         db  0x00 ; '.'
000000000000136a         db  0x00 ; '.'
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x00 ; '.'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0x20 ; ' '
0000000000001371         db  0x8f ; '.'
0000000000001372         db  0x20 ; ' '
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x00 ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x07 ; '.'
0000000000001379         db  0x00 ; '.'
000000000000137a         db  0x00 ; '.'
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x24 ; '$'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0x00 ; '.'
0000000000001381         db  0x00 ; '.'
0000000000001382         db  0x00 ; '.'
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x00 ; '.'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0x28 ; '('
0000000000001389         db  0x8f ; '.'
000000000000138a         db  0x20 ; ' '
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x00 ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x07 ; '.'
0000000000001391         db  0x00 ; '.'
0000000000001392         db  0x00 ; '.'
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x25 ; '%'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0x00 ; '.'
0000000000001399         db  0x00 ; '.'
000000000000139a         db  0x00 ; '.'
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x00 ; '.'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0x30 ; '0'
00000000000013a1         db  0x8f ; '.'
00000000000013a2         db  0x20 ; ' '
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x00 ; '.'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x07 ; '.'
00000000000013a9         db  0x00 ; '.'
00000000000013aa         db  0x00 ; '.'
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x26 ; '&'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x00 ; '.'
00000000000013b1         db  0x00 ; '.'
00000000000013b2         db  0x00 ; '.'
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x00 ; '.'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'
00000000000013b8         db  0x38 ; '8'
00000000000013b9         db  0x8f ; '.'
00000000000013ba         db  0x20 ; ' '
00000000000013bb         db  0x00 ; '.'
00000000000013bc         db  0x00 ; '.'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x00 ; '.'
00000000000013bf         db  0x00 ; '.'
00000000000013c0         db  0x07 ; '.'
00000000000013c1         db  0x00 ; '.'
00000000000013c2         db  0x00 ; '.'
00000000000013c3         db  0x00 ; '.'
00000000000013c4         db  0x27 ; '''
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x00 ; '.'
00000000000013c7         db  0x00 ; '.'
00000000000013c8         db  0x00 ; '.'
00000000000013c9         db  0x00 ; '.'
00000000000013ca         db  0x00 ; '.'
00000000000013cb         db  0x00 ; '.'
00000000000013cc         db  0x00 ; '.'
00000000000013cd         db  0x00 ; '.'
00000000000013ce         db  0x00 ; '.'
00000000000013cf         db  0x00 ; '.'
00000000000013d0         db  0x40 ; '@'
00000000000013d1         db  0x8f ; '.'
00000000000013d2         db  0x20 ; ' '
00000000000013d3         db  0x00 ; '.'
00000000000013d4         db  0x00 ; '.'
00000000000013d5         db  0x00 ; '.'
00000000000013d6         db  0x00 ; '.'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0x07 ; '.'
00000000000013d9         db  0x00 ; '.'
00000000000013da         db  0x00 ; '.'
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x28 ; '('
00000000000013dd         db  0x00 ; '.'
00000000000013de         db  0x00 ; '.'
00000000000013df         db  0x00 ; '.'
00000000000013e0         db  0x00 ; '.'
00000000000013e1         db  0x00 ; '.'
00000000000013e2         db  0x00 ; '.'
00000000000013e3         db  0x00 ; '.'
00000000000013e4         db  0x00 ; '.'
00000000000013e5         db  0x00 ; '.'
00000000000013e6         db  0x00 ; '.'
00000000000013e7         db  0x00 ; '.'
00000000000013e8         db  0x48 ; 'H'
00000000000013e9         db  0x8f ; '.'
00000000000013ea         db  0x20 ; ' '
00000000000013eb         db  0x00 ; '.'
00000000000013ec         db  0x00 ; '.'
00000000000013ed         db  0x00 ; '.'
00000000000013ee         db  0x00 ; '.'
00000000000013ef         db  0x00 ; '.'
00000000000013f0         db  0x07 ; '.'
00000000000013f1         db  0x00 ; '.'
00000000000013f2         db  0x00 ; '.'
00000000000013f3         db  0x00 ; '.'
00000000000013f4         db  0x29 ; ')'
00000000000013f5         db  0x00 ; '.'
00000000000013f6         db  0x00 ; '.'
00000000000013f7         db  0x00 ; '.'
00000000000013f8         db  0x00 ; '.'
00000000000013f9         db  0x00 ; '.'
00000000000013fa         db  0x00 ; '.'
00000000000013fb         db  0x00 ; '.'
00000000000013fc         db  0x00 ; '.'
00000000000013fd         db  0x00 ; '.'
00000000000013fe         db  0x00 ; '.'
00000000000013ff         db  0x00 ; '.'
0000000000001400         db  0x50 ; 'P'
0000000000001401         db  0x8f ; '.'
0000000000001402         db  0x20 ; ' '
0000000000001403         db  0x00 ; '.'
0000000000001404         db  0x00 ; '.'
0000000000001405         db  0x00 ; '.'
0000000000001406         db  0x00 ; '.'
0000000000001407         db  0x00 ; '.'
0000000000001408         db  0x07 ; '.'
0000000000001409         db  0x00 ; '.'
000000000000140a         db  0x00 ; '.'
000000000000140b         db  0x00 ; '.'
000000000000140c         db  0x2a ; '*'
000000000000140d         db  0x00 ; '.'
000000000000140e         db  0x00 ; '.'
000000000000140f         db  0x00 ; '.'
0000000000001410         db  0x00 ; '.'
0000000000001411         db  0x00 ; '.'
0000000000001412         db  0x00 ; '.'
0000000000001413         db  0x00 ; '.'
0000000000001414         db  0x00 ; '.'
0000000000001415         db  0x00 ; '.'
0000000000001416         db  0x00 ; '.'
0000000000001417         db  0x00 ; '.'
0000000000001418         db  0x58 ; 'X'
0000000000001419         db  0x8f ; '.'
000000000000141a         db  0x20 ; ' '
000000000000141b         db  0x00 ; '.'
000000000000141c         db  0x00 ; '.'
000000000000141d         db  0x00 ; '.'
000000000000141e         db  0x00 ; '.'
000000000000141f         db  0x00 ; '.'
0000000000001420         db  0x07 ; '.'
0000000000001421         db  0x00 ; '.'
0000000000001422         db  0x00 ; '.'
0000000000001423         db  0x00 ; '.'
0000000000001424         db  0x2b ; '+'
0000000000001425         db  0x00 ; '.'
0000000000001426         db  0x00 ; '.'
0000000000001427         db  0x00 ; '.'
0000000000001428         db  0x00 ; '.'
0000000000001429         db  0x00 ; '.'
000000000000142a         db  0x00 ; '.'
000000000000142b         db  0x00 ; '.'
000000000000142c         db  0x00 ; '.'
000000000000142d         db  0x00 ; '.'
000000000000142e         db  0x00 ; '.'
000000000000142f         db  0x00 ; '.'
0000000000001430         db  0x60 ; '`'
0000000000001431         db  0x8f ; '.'
0000000000001432         db  0x20 ; ' '
0000000000001433         db  0x00 ; '.'
0000000000001434         db  0x00 ; '.'
0000000000001435         db  0x00 ; '.'
0000000000001436         db  0x00 ; '.'
0000000000001437         db  0x00 ; '.'
0000000000001438         db  0x07 ; '.'
0000000000001439         db  0x00 ; '.'
000000000000143a         db  0x00 ; '.'
000000000000143b         db  0x00 ; '.'
000000000000143c         db  0x2c ; ','
000000000000143d         db  0x00 ; '.'
000000000000143e         db  0x00 ; '.'
000000000000143f         db  0x00 ; '.'
0000000000001440         db  0x00 ; '.'
0000000000001441         db  0x00 ; '.'
0000000000001442         db  0x00 ; '.'
0000000000001443         db  0x00 ; '.'
0000000000001444         db  0x00 ; '.'
0000000000001445         db  0x00 ; '.'
0000000000001446         db  0x00 ; '.'
0000000000001447         db  0x00 ; '.'
0000000000001448         db  0x68 ; 'h'
0000000000001449         db  0x8f ; '.'
000000000000144a         db  0x20 ; ' '
000000000000144b         db  0x00 ; '.'
000000000000144c         db  0x00 ; '.'
000000000000144d         db  0x00 ; '.'
000000000000144e         db  0x00 ; '.'
000000000000144f         db  0x00 ; '.'
0000000000001450         db  0x07 ; '.'
0000000000001451         db  0x00 ; '.'
0000000000001452         db  0x00 ; '.'
0000000000001453         db  0x00 ; '.'
0000000000001454         db  0x2d ; '-'
0000000000001455         db  0x00 ; '.'
0000000000001456         db  0x00 ; '.'
0000000000001457         db  0x00 ; '.'
0000000000001458         db  0x00 ; '.'
0000000000001459         db  0x00 ; '.'
000000000000145a         db  0x00 ; '.'
000000000000145b         db  0x00 ; '.'
000000000000145c         db  0x00 ; '.'
000000000000145d         db  0x00 ; '.'
000000000000145e         db  0x00 ; '.'
000000000000145f         db  0x00 ; '.'
0000000000001460         db  0x70 ; 'p'
0000000000001461         db  0x8f ; '.'
0000000000001462         db  0x20 ; ' '
0000000000001463         db  0x00 ; '.'
0000000000001464         db  0x00 ; '.'
0000000000001465         db  0x00 ; '.'
0000000000001466         db  0x00 ; '.'
0000000000001467         db  0x00 ; '.'
0000000000001468         db  0x07 ; '.'
0000000000001469         db  0x00 ; '.'
000000000000146a         db  0x00 ; '.'
000000000000146b         db  0x00 ; '.'
000000000000146c         db  0x2e ; '.'
000000000000146d         db  0x00 ; '.'
000000000000146e         db  0x00 ; '.'
000000000000146f         db  0x00 ; '.'
0000000000001470         db  0x00 ; '.'
0000000000001471         db  0x00 ; '.'
0000000000001472         db  0x00 ; '.'
0000000000001473         db  0x00 ; '.'
0000000000001474         db  0x00 ; '.'
0000000000001475         db  0x00 ; '.'
0000000000001476         db  0x00 ; '.'
0000000000001477         db  0x00 ; '.'
0000000000001478         db  0x78 ; 'x'
0000000000001479         db  0x8f ; '.'
000000000000147a         db  0x20 ; ' '
000000000000147b         db  0x00 ; '.'
000000000000147c         db  0x00 ; '.'
000000000000147d         db  0x00 ; '.'
000000000000147e         db  0x00 ; '.'
000000000000147f         db  0x00 ; '.'
0000000000001480         db  0x07 ; '.'
0000000000001481         db  0x00 ; '.'
0000000000001482         db  0x00 ; '.'
0000000000001483         db  0x00 ; '.'
0000000000001484         db  0x2f ; '/'
0000000000001485         db  0x00 ; '.'
0000000000001486         db  0x00 ; '.'
0000000000001487         db  0x00 ; '.'
0000000000001488         db  0x00 ; '.'
0000000000001489         db  0x00 ; '.'
000000000000148a         db  0x00 ; '.'
000000000000148b         db  0x00 ; '.'
000000000000148c         db  0x00 ; '.'
000000000000148d         db  0x00 ; '.'
000000000000148e         db  0x00 ; '.'
000000000000148f         db  0x00 ; '.'
0000000000001490         db  0x80 ; '.'
0000000000001491         db  0x8f ; '.'
0000000000001492         db  0x20 ; ' '
0000000000001493         db  0x00 ; '.'
0000000000001494         db  0x00 ; '.'
0000000000001495         db  0x00 ; '.'
0000000000001496         db  0x00 ; '.'
0000000000001497         db  0x00 ; '.'
0000000000001498         db  0x07 ; '.'
0000000000001499         db  0x00 ; '.'
000000000000149a         db  0x00 ; '.'
000000000000149b         db  0x00 ; '.'
000000000000149c         db  0x30 ; '0'
000000000000149d         db  0x00 ; '.'
000000000000149e         db  0x00 ; '.'
000000000000149f         db  0x00 ; '.'
00000000000014a0         db  0x00 ; '.'
00000000000014a1         db  0x00 ; '.'
00000000000014a2         db  0x00 ; '.'
00000000000014a3         db  0x00 ; '.'
00000000000014a4         db  0x00 ; '.'
00000000000014a5         db  0x00 ; '.'
00000000000014a6         db  0x00 ; '.'
00000000000014a7         db  0x00 ; '.'
00000000000014a8         db  0x88 ; '.'
00000000000014a9         db  0x8f ; '.'
00000000000014aa         db  0x20 ; ' '
00000000000014ab         db  0x00 ; '.'
00000000000014ac         db  0x00 ; '.'
00000000000014ad         db  0x00 ; '.'
00000000000014ae         db  0x00 ; '.'
00000000000014af         db  0x00 ; '.'
00000000000014b0         db  0x07 ; '.'
00000000000014b1         db  0x00 ; '.'
00000000000014b2         db  0x00 ; '.'
00000000000014b3         db  0x00 ; '.'
00000000000014b4         db  0x31 ; '1'
00000000000014b5         db  0x00 ; '.'
00000000000014b6         db  0x00 ; '.'
00000000000014b7         db  0x00 ; '.'
00000000000014b8         db  0x00 ; '.'
00000000000014b9         db  0x00 ; '.'
00000000000014ba         db  0x00 ; '.'
00000000000014bb         db  0x00 ; '.'
00000000000014bc         db  0x00 ; '.'
00000000000014bd         db  0x00 ; '.'
00000000000014be         db  0x00 ; '.'
00000000000014bf         db  0x00 ; '.'
00000000000014c0         db  0x90 ; '.'
00000000000014c1         db  0x8f ; '.'
00000000000014c2         db  0x20 ; ' '
00000000000014c3         db  0x00 ; '.'
00000000000014c4         db  0x00 ; '.'
00000000000014c5         db  0x00 ; '.'
00000000000014c6         db  0x00 ; '.'
00000000000014c7         db  0x00 ; '.'
00000000000014c8         db  0x07 ; '.'
00000000000014c9         db  0x00 ; '.'
00000000000014ca         db  0x00 ; '.'
00000000000014cb         db  0x00 ; '.'
00000000000014cc         db  0x32 ; '2'
00000000000014cd         db  0x00 ; '.'
00000000000014ce         db  0x00 ; '.'
00000000000014cf         db  0x00 ; '.'
00000000000014d0         db  0x00 ; '.'
00000000000014d1         db  0x00 ; '.'
00000000000014d2         db  0x00 ; '.'
00000000000014d3         db  0x00 ; '.'
00000000000014d4         db  0x00 ; '.'
00000000000014d5         db  0x00 ; '.'
00000000000014d6         db  0x00 ; '.'
00000000000014d7         db  0x00 ; '.'
00000000000014d8         db  0x98 ; '.'
00000000000014d9         db  0x8f ; '.'
00000000000014da         db  0x20 ; ' '
00000000000014db         db  0x00 ; '.'
00000000000014dc         db  0x00 ; '.'
00000000000014dd         db  0x00 ; '.'
00000000000014de         db  0x00 ; '.'
00000000000014df         db  0x00 ; '.'
00000000000014e0         db  0x07 ; '.'
00000000000014e1         db  0x00 ; '.'
00000000000014e2         db  0x00 ; '.'
00000000000014e3         db  0x00 ; '.'
00000000000014e4         db  0x33 ; '3'
00000000000014e5         db  0x00 ; '.'
00000000000014e6         db  0x00 ; '.'
00000000000014e7         db  0x00 ; '.'
00000000000014e8         db  0x00 ; '.'
00000000000014e9         db  0x00 ; '.'
00000000000014ea         db  0x00 ; '.'
00000000000014eb         db  0x00 ; '.'
00000000000014ec         db  0x00 ; '.'
00000000000014ed         db  0x00 ; '.'
00000000000014ee         db  0x00 ; '.'
00000000000014ef         db  0x00 ; '.'
00000000000014f0         db  0xa0 ; '.'
00000000000014f1         db  0x8f ; '.'
00000000000014f2         db  0x20 ; ' '
00000000000014f3         db  0x00 ; '.'
00000000000014f4         db  0x00 ; '.'
00000000000014f5         db  0x00 ; '.'
00000000000014f6         db  0x00 ; '.'
00000000000014f7         db  0x00 ; '.'
00000000000014f8         db  0x07 ; '.'
00000000000014f9         db  0x00 ; '.'
00000000000014fa         db  0x00 ; '.'
00000000000014fb         db  0x00 ; '.'
00000000000014fc         db  0x34 ; '4'
00000000000014fd         db  0x00 ; '.'
00000000000014fe         db  0x00 ; '.'
00000000000014ff         db  0x00 ; '.'
0000000000001500         db  0x00 ; '.'
0000000000001501         db  0x00 ; '.'
0000000000001502         db  0x00 ; '.'
0000000000001503         db  0x00 ; '.'
0000000000001504         db  0x00 ; '.'
0000000000001505         db  0x00 ; '.'
0000000000001506         db  0x00 ; '.'
0000000000001507         db  0x00 ; '.'
0000000000001508         db  0xa8 ; '.'
0000000000001509         db  0x8f ; '.'
000000000000150a         db  0x20 ; ' '
000000000000150b         db  0x00 ; '.'
000000000000150c         db  0x00 ; '.'
000000000000150d         db  0x00 ; '.'
000000000000150e         db  0x00 ; '.'
000000000000150f         db  0x00 ; '.'
0000000000001510         db  0x07 ; '.'
0000000000001511         db  0x00 ; '.'
0000000000001512         db  0x00 ; '.'
0000000000001513         db  0x00 ; '.'
0000000000001514         db  0x35 ; '5'
0000000000001515         db  0x00 ; '.'
0000000000001516         db  0x00 ; '.'
0000000000001517         db  0x00 ; '.'
0000000000001518         db  0x00 ; '.'
0000000000001519         db  0x00 ; '.'
000000000000151a         db  0x00 ; '.'
000000000000151b         db  0x00 ; '.'
000000000000151c         db  0x00 ; '.'
000000000000151d         db  0x00 ; '.'
000000000000151e         db  0x00 ; '.'
000000000000151f         db  0x00 ; '.'
0000000000001520         db  0xb0 ; '.'
0000000000001521         db  0x8f ; '.'
0000000000001522         db  0x20 ; ' '
0000000000001523         db  0x00 ; '.'
0000000000001524         db  0x00 ; '.'
0000000000001525         db  0x00 ; '.'
0000000000001526         db  0x00 ; '.'
0000000000001527         db  0x00 ; '.'
0000000000001528         db  0x07 ; '.'
0000000000001529         db  0x00 ; '.'
000000000000152a         db  0x00 ; '.'
000000000000152b         db  0x00 ; '.'
000000000000152c         db  0x36 ; '6'
000000000000152d         db  0x00 ; '.'
000000000000152e         db  0x00 ; '.'
000000000000152f         db  0x00 ; '.'
0000000000001530         db  0x00 ; '.'
0000000000001531         db  0x00 ; '.'
0000000000001532         db  0x00 ; '.'
0000000000001533         db  0x00 ; '.'
0000000000001534         db  0x00 ; '.'
0000000000001535         db  0x00 ; '.'
0000000000001536         db  0x00 ; '.'
0000000000001537         db  0x00 ; '.'
0000000000001538         db  0xb8 ; '.'
0000000000001539         db  0x8f ; '.'
000000000000153a         db  0x20 ; ' '
000000000000153b         db  0x00 ; '.'
000000000000153c         db  0x00 ; '.'
000000000000153d         db  0x00 ; '.'
000000000000153e         db  0x00 ; '.'
000000000000153f         db  0x00 ; '.'
0000000000001540         db  0x07 ; '.'
0000000000001541         db  0x00 ; '.'
0000000000001542         db  0x00 ; '.'
0000000000001543         db  0x00 ; '.'
0000000000001544         db  0x38 ; '8'
0000000000001545         db  0x00 ; '.'
0000000000001546         db  0x00 ; '.'
0000000000001547         db  0x00 ; '.'
0000000000001548         db  0x00 ; '.'
0000000000001549         db  0x00 ; '.'
000000000000154a         db  0x00 ; '.'
000000000000154b         db  0x00 ; '.'
000000000000154c         db  0x00 ; '.'
000000000000154d         db  0x00 ; '.'
000000000000154e         db  0x00 ; '.'
000000000000154f         db  0x00 ; '.'
0000000000001550         db  0xc0 ; '.'
0000000000001551         db  0x8f ; '.'
0000000000001552         db  0x20 ; ' '
0000000000001553         db  0x00 ; '.'
0000000000001554         db  0x00 ; '.'
0000000000001555         db  0x00 ; '.'
0000000000001556         db  0x00 ; '.'
0000000000001557         db  0x00 ; '.'
0000000000001558         db  0x07 ; '.'
0000000000001559         db  0x00 ; '.'
000000000000155a         db  0x00 ; '.'
000000000000155b         db  0x00 ; '.'
000000000000155c         db  0x39 ; '9'
000000000000155d         db  0x00 ; '.'
000000000000155e         db  0x00 ; '.'
000000000000155f         db  0x00 ; '.'
0000000000001560         db  0x00 ; '.'
0000000000001561         db  0x00 ; '.'
0000000000001562         db  0x00 ; '.'
0000000000001563         db  0x00 ; '.'
0000000000001564         db  0x00 ; '.'
0000000000001565         db  0x00 ; '.'
0000000000001566         db  0x00 ; '.'
0000000000001567         db  0x00 ; '.'
0000000000001568         db  0xc8 ; '.'
0000000000001569         db  0x8f ; '.'
000000000000156a         db  0x20 ; ' '
000000000000156b         db  0x00 ; '.'
000000000000156c         db  0x00 ; '.'
000000000000156d         db  0x00 ; '.'
000000000000156e         db  0x00 ; '.'
000000000000156f         db  0x00 ; '.'
0000000000001570         db  0x07 ; '.'
0000000000001571         db  0x00 ; '.'
0000000000001572         db  0x00 ; '.'
0000000000001573         db  0x00 ; '.'
0000000000001574         db  0x3b ; ';'
0000000000001575         db  0x00 ; '.'
0000000000001576         db  0x00 ; '.'
0000000000001577         db  0x00 ; '.'
0000000000001578         db  0x00 ; '.'
0000000000001579         db  0x00 ; '.'
000000000000157a         db  0x00 ; '.'
000000000000157b         db  0x00 ; '.'
000000000000157c         db  0x00 ; '.'
000000000000157d         db  0x00 ; '.'
000000000000157e         db  0x00 ; '.'
000000000000157f         db  0x00 ; '.'
0000000000001580         db  0xd0 ; '.'
0000000000001581         db  0x8f ; '.'
0000000000001582         db  0x20 ; ' '
0000000000001583         db  0x00 ; '.'
0000000000001584         db  0x00 ; '.'
0000000000001585         db  0x00 ; '.'
0000000000001586         db  0x00 ; '.'
0000000000001587         db  0x00 ; '.'
0000000000001588         db  0x07 ; '.'
0000000000001589         db  0x00 ; '.'
000000000000158a         db  0x00 ; '.'
000000000000158b         db  0x00 ; '.'
000000000000158c         db  0x3c ; '<'
000000000000158d         db  0x00 ; '.'
000000000000158e         db  0x00 ; '.'
000000000000158f         db  0x00 ; '.'
0000000000001590         db  0x00 ; '.'
0000000000001591         db  0x00 ; '.'
0000000000001592         db  0x00 ; '.'
0000000000001593         db  0x00 ; '.'
0000000000001594         db  0x00 ; '.'
0000000000001595         db  0x00 ; '.'
0000000000001596         db  0x00 ; '.'
0000000000001597         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x1598; 0x15af[ (23 bytes)
        ; File offset : [5528; 5551[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
0000000000001598         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
000000000000159c         mov        rax, qword [qword_208fe8]                   ; qword_208fe8
00000000000015a3         test       rax, rax
00000000000015a6         je         loc_15aa

00000000000015a8         call       rax

                     loc_15aa:
00000000000015aa         add        rsp, 0x8                                    ; CODE XREF=_init+14
00000000000015ae         ret
                        ; endp
00000000000015af         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x15b0; 0x1930[ (896 bytes)
        ; File offset : [5552; 6448[ (896 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_15b0:
00000000000015b0         push       qword [qword_208e10]                        ; Begin of unwind block (FDE at 0x7494), qword_208e10, CODE XREF=sub_15c6+5
00000000000015b6         jmp        qword [qword_208e10+8]                      ; 0x208e18
                        ; endp
00000000000015bc         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___uflow:        // __uflow
00000000000015c0         jmp        qword [__uflow@GOT]                         ; __uflow, __uflow@GOT, CODE XREF=bsd_sum_file+171
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15c6:
00000000000015c6         push       0x0
00000000000015cb         jmp        loc_15b0


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getenv:        // getenv
00000000000015d0         jmp        qword [getenv@GOT]                          ; getenv, getenv@GOT, CODE XREF=human_options+276, human_options+327, human_options+351, human_options+375
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15d6:
00000000000015d6         push       0x1
00000000000015db         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
00000000000015e0         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=quotearg_n_options+277, quotearg_free+55, quotearg_free+82, quotearg_free+120, xrealloc+40
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15e6:
00000000000015e6         push       0x2
00000000000015eb         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
00000000000015f0         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=set_program_name+154, sub_3af0+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15f6:
00000000000015f6         push       0x3
00000000000015fb         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
0000000000001600         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=main+395, sysv_sum_file+386, sysv_sum_file+473, bsd_sum_file+429, bsd_sum_file+482, close_stdout+22, quotearg_n_options+28, clone_quoting_options+7, quotearg_buffer+45, quotearg_alloc_mem+42, safe_read+46
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1606:
0000000000001606         push       0x4
000000000000160b         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
0000000000001610         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+588, usage+781, argmatch+162
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1616:
0000000000001616         push       0x5
000000000000161b         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
0000000000001620         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1626:
0000000000001626         push       0x6
000000000000162b         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
0000000000001630         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1636:
0000000000001636         push       0x7
000000000000163b         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_localeconv:        // localeconv
0000000000001640         jmp        qword [localeconv@GOT]                      ; localeconv, localeconv@GOT, CODE XREF=human_readable+89
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1646:
0000000000001646         push       0x8
000000000000164b         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
0000000000001650         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+94
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1656:
0000000000001656         push       0x9
000000000000165b         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
0000000000001660         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1666:
0000000000001666         push       0xa
000000000000166b         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
0000000000001670         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+82
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1676:
0000000000001676         push       0xb
000000000000167b         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
0000000000001680         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=usage+56, usage+102, usage+146, usage+183, usage+220, usage+257, usage+294, usage+522, usage+615, usage+684, usage+715
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1686:
0000000000001686         push       0xc
000000000000168b         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
0000000000001690         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1696:
0000000000001696         push       0xd
000000000000169b         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
00000000000016a0         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=human_readable+103, human_readable+155, human_readable+457, human_readable+831, human_readable+1149, human_readable+1826, human_readable+1907, quotearg_buffer_restyled+343, sub_3af0+411, sub_3af0+1742, xstrdup+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16a6:
00000000000016a6         push       0xe
00000000000016ab         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
00000000000016b0         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=sysv_sum_file+553, bsd_sum_file+551, human_readable+2491, human_options+481, sub_3af0+2739, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137, quotearg_n_custom_mem+140, version_etc_va+101
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16b6:
00000000000016b6         push       0xf
00000000000016bb         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
00000000000016c0         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+153
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16c6:
00000000000016c6         push       0x10
00000000000016cb         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
00000000000016d0         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16d6:
00000000000016d6         push       0x11
00000000000016db         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strchr:        // strchr
00000000000016e0         jmp        qword [strchr@GOT]                          ; strchr, strchr@GOT, CODE XREF=xstrtoumax+291, xstrtoumax+323, xstrtoumax+380
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16e6:
00000000000016e6         push       0x12
00000000000016eb         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___overflow:        // __overflow
00000000000016f0         jmp        qword [__overflow@GOT]                      ; __overflow, __overflow@GOT, CODE XREF=sysv_sum_file+543, bsd_sum_file+541, argmatch_valid+283
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16f6:
00000000000016f6         push       0x13
00000000000016fb         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
0000000000001700         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1706:
0000000000001706         push       0x14
000000000000170b         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
0000000000001710         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1716:
0000000000001716         push       0x15
000000000000171b         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___assert_fail:        // __assert_fail
0000000000001720         jmp        qword [__assert_fail@GOT]                   ; __assert_fail, __assert_fail@GOT, CODE XREF=xstrtoumax+927
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1726:
0000000000001726         push       0x16
000000000000172b         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___strtoul_internal:        // __strtoul_internal
0000000000001730         jmp        qword [__strtoul_internal@GOT]              ; __strtoul_internal, __strtoul_internal@GOT, CODE XREF=xstrtoumax+142
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1736:
0000000000001736         push       0x17
000000000000173b         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
0000000000001740         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1746:
0000000000001746         push       0x18
000000000000174b         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_close:        // close
0000000000001750         jmp        qword [close@GOT]                           ; close, close@GOT, CODE XREF=sysv_sum_file+183, sysv_sum_file+421
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1756:
0000000000001756         push       0x19
000000000000175b         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_posix_fadvise:        // posix_fadvise
0000000000001760         jmp        qword [posix_fadvise@GOT]                   ; posix_fadvise, posix_fadvise@GOT, CODE XREF=fdadvise, fadvise+22
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1766:
0000000000001766         push       0x1a
000000000000176b         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_read:        // read
0000000000001770         jmp        qword [read@GOT]                            ; read, read@GOT, CODE XREF=safe_read+33
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1776:
0000000000001776         push       0x1b
000000000000177b         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
0000000000001780         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=quotearg_buffer_restyled+410, argmatch+111, argmatch_valid+150, argmatch_to_argument+56
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1786:
0000000000001786         push       0x1c
000000000000178b         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
0000000000001790         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+157, usage+194, usage+231, usage+268, usage+312, usage+896, version_etc_arn+135, emit_bug_reporting_address+123, argmatch_valid+55
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1796:
0000000000001796         push       0x1d
000000000000179b         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
00000000000017a0         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17a6:
00000000000017a6         push       0x1e
00000000000017ab         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___memcpy_chk:        // __memcpy_chk
00000000000017b0         jmp        qword [__memcpy_chk@GOT]                    ; __memcpy_chk, __memcpy_chk@GOT, CODE XREF=human_readable+1180
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17b6:
00000000000017b6         push       0x1f
00000000000017bb         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
00000000000017c0         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=human_readable+1245, human_readable+1274, human_readable+1338, xmemdup+35
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17c6:
00000000000017c6         push       0x20
00000000000017cb         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
00000000000017d0         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=fadvise+8, rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17d6:
00000000000017d6         push       0x21
00000000000017db         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
00000000000017e0         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=xmalloc+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17e6:
00000000000017e6         push       0x22
00000000000017eb         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
00000000000017f0         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17f6:
00000000000017f6         push       0x23
00000000000017fb         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
0000000000001800         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1806:
0000000000001806         push       0x24
000000000000180b         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
0000000000001810         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1816:
0000000000001816         push       0x25
000000000000181b         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
0000000000001820         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1826:
0000000000001826         push       0x26
000000000000182b         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
0000000000001830         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+63, usage+563, usage+756, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1836:
0000000000001836         push       0x27
000000000000183b         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
0000000000001840         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=sysv_sum_file+264, sysv_sum_file+523, bsd_sum_file+258, bsd_sum_file+369, usage+120, usage+551, usage+644, usage+705, usage+744, usage+847, emit_bug_reporting_address+37
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1846:
0000000000001846         push       0x28
000000000000184b         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setvbuf:        // setvbuf
0000000000001850         jmp        qword [setvbuf@GOT]                         ; setvbuf, setvbuf@GOT, CODE XREF=main+127
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1856:
0000000000001856         push       0x29
000000000000185b         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memmove:        // memmove
0000000000001860         jmp        qword [memmove@GOT]                         ; memmove, memmove@GOT, CODE XREF=human_readable+885
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1866:
0000000000001866         push       0x2a
000000000000186b         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
0000000000001870         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+419, sysv_sum_file+409, sysv_sum_file+496, bsd_sum_file+452, bsd_sum_file+505, close_stdout+125, close_stdout+157, xalloc_die+43, argmatch_invalid+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1876:
0000000000001876         push       0x2b
000000000000187b         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_open:        // open
0000000000001880         jmp        qword [open@GOT]                            ; open, open@GOT, CODE XREF=sysv_sum_file+439
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1886:
0000000000001886         push       0x2c
000000000000188b         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
0000000000001890         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1896:
0000000000001896         push       0x2d
000000000000189b         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fopen:        // fopen
00000000000018a0         jmp        qword [fopen@GOT]                           ; fopen, fopen@GOT, CODE XREF=bsd_sum_file+394
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18a6:
00000000000018a6         push       0x2e
00000000000018ab         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
00000000000018b0         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18b6:
00000000000018b6         push       0x2f
00000000000018bb         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
00000000000018c0         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+276, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18c6:
00000000000018c6         push       0x30
00000000000018cb         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
00000000000018d0         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18d6:
00000000000018d6         push       0x31
00000000000018db         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
00000000000018e0         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642, version_etc_arn+718, version_etc_arn+872, argmatch_valid+122
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18e6:
00000000000018e6         push       0x32
00000000000018eb         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
00000000000018f0         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_3af0+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18f6:
00000000000018f6         push       0x33
00000000000018fb         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
0000000000001900         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_3af0+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1906:
0000000000001906         push       0x34
000000000000190b         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
0000000000001910         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=sub_3890+51, xstrtoumax+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1916:
0000000000001916         push       0x35
000000000000191b         jmp        0x15b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___sprintf_chk:        // __sprintf_chk
0000000000001920         jmp        qword [__sprintf_chk@GOT]                   ; __sprintf_chk, __sprintf_chk@GOT, CODE XREF=human_readable+449, human_readable+818, human_readable+1818, human_readable+1899
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1926:
0000000000001926         push       0x36
000000000000192b         jmp        0x15b0
                        ; endp


        ; Section .plt.got
        ; Range: [0x1930; 0x1938[ (8 bytes)
        ; File offset : [6448; 6456[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_208ff8:        // qword_208ff8
0000000000001930         jmp        qword [qword_208ff8]                        ; qword, End of unwind block (FDE at 0x7494), Begin of unwind block (FDE at 0x74bc), qword_208ff8, CODE XREF=__do_global_dtors_aux+30
                        ; endp
0000000000001936         align      8
0000000000001938         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x74bc)
0000000000001939         db  0x00 ; '.'
000000000000193a         db  0x00 ; '.'
000000000000193b         db  0x00 ; '.'
000000000000193c         db  0x00 ; '.'
000000000000193d         db  0x00 ; '.'
000000000000193e         db  0x00 ; '.'
000000000000193f         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x1940; 0x636e[ (18990 bytes)
        ; File offset : [6464; 25454[ (18990 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     main:
0000000000001940         push       r15                                         ; Begin of unwind block (FDE at 0x75a0), DATA XREF=_start+29
0000000000001942         push       r14
0000000000001944         lea        r14, qword [longopts]                       ; longopts
000000000000194b         push       r13
000000000000194d         push       r12
000000000000194f         lea        r12, qword [bsd_sum_file]                   ; bsd_sum_file
0000000000001956         push       rbp
0000000000001957         push       rbx
0000000000001958         mov        ebp, edi
000000000000195a         mov        rbx, rsi
000000000000195d         lea        r13, qword [aKayvanAghaiepo+18]             ; 0x6470
0000000000001964         mov        r15, r12
0000000000001967         sub        rsp, 0x8
000000000000196b         mov        rdi, qword [rsi]
000000000000196e         call       set_program_name                            ; set_program_name
0000000000001973         lea        rsi, qword [aWrittenBySSAnd+27]             ; argument "__locale" for method j_setlocale, 0x6ce1
000000000000197a         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
000000000000197f         call       j_setlocale                                 ; setlocale
0000000000001984         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
000000000000198b         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
0000000000001992         call       j_bindtextdomain                            ; bindtextdomain
0000000000001997         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
000000000000199e         call       j_textdomain                                ; textdomain
00000000000019a3         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
00000000000019aa         call       atexit                                      ; atexit
00000000000019af         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_setvbuf, stdout@@GLIBC_2.2.5
00000000000019b6         xor        ecx, ecx                                    ; argument "__n" for method j_setvbuf
00000000000019b8         mov        edx, 0x1                                    ; argument "__modes" for method j_setvbuf
00000000000019bd         xor        esi, esi                                    ; argument "__buf" for method j_setvbuf
00000000000019bf         call       j_setvbuf                                   ; setvbuf
00000000000019c4         mov        byte [have_read_stdin], 0x0                 ; have_read_stdin

                     loc_19cb:
00000000000019cb         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long, CODE XREF=main+201, main+291
00000000000019ce         mov        rcx, r14                                    ; argument "__longopts" for method j_getopt_long
00000000000019d1         mov        rdx, r13                                    ; argument "__shortopts" for method j_getopt_long
00000000000019d4         mov        rsi, rbx                                    ; argument "___argv" for method j_getopt_long
00000000000019d7         mov        edi, ebp                                    ; argument "___argc" for method j_getopt_long
00000000000019d9         call       j_getopt_long                               ; getopt_long
00000000000019de         cmp        eax, 0xffffffff
00000000000019e1         je         loc_1a68

00000000000019e7         cmp        eax, 0xffffff7e
00000000000019ec         je         loc_1b1e

00000000000019f2         jle        loc_1a10

00000000000019f4         cmp        eax, 0x72
00000000000019f7         je         loc_1a60

00000000000019f9         cmp        eax, 0x73
00000000000019fc         jne        loc_1b14

0000000000001a02         lea        r12, qword [sysv_sum_file]                  ; sysv_sum_file
0000000000001a09         jmp        loc_19cb
0000000000001a0b         align      16

                     loc_1a10:
0000000000001a10         cmp        eax, 0xffffff7d                             ; CODE XREF=main+178
0000000000001a15         jne        loc_1b14

0000000000001a1b         sub        rsp, 0x8
0000000000001a1f         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001a26         mov        rcx, qword [Version]                        ; Version
0000000000001a2d         push       0x0
0000000000001a2f         lea        r9, qword [aDavidMackenzie]                 ; "David MacKenzie"
0000000000001a36         lea        r8, qword [aKayvanAghaiepo]                 ; "Kayvan Aghaiepour"
0000000000001a3d         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6409
0000000000001a44         lea        rsi, qword [aSha512sum+6]                   ; 0x63ee
0000000000001a4b         xor        eax, eax
0000000000001a4d         call       version_etc                                 ; version_etc
0000000000001a52         xor        edi, edi                                    ; argument "__status" for method j_exit
0000000000001a54         call       j_exit                                      ; exit
                        ; endp
0000000000001a59         align      32

                     loc_1a60:
0000000000001a60         mov        r12, r15                                    ; CODE XREF=main+183
0000000000001a63         jmp        loc_19cb

                     loc_1a68:
0000000000001a68         mov        r14d, ebp                                   ; CODE XREF=main+161
0000000000001a6b         sub        r14d, dword [optind@@GLIBC_2.2.5]           ; optind@@GLIBC_2.2.5
0000000000001a72         test       r14d, r14d
0000000000001a75         jg         loc_1ae8

0000000000001a77         mov        esi, r14d
0000000000001a7a         lea        rdi, qword [aLibs+10]                       ; 0x67b2
0000000000001a81         call       r12                                         ; Jumps to 0x1e70 (bsd_sum_file), bsd_sum_file
0000000000001a84         mov        r13d, eax

                     loc_1a87:
0000000000001a87         cmp        byte [have_read_stdin], 0x0                 ; have_read_stdin, CODE XREF=main+463
0000000000001a8e         jne        loc_1aa4

                     loc_1a90:
0000000000001a90         xor        r13d, 0x1                                   ; CODE XREF=main+371
0000000000001a94         pop        rdx
0000000000001a95         movzx      eax, r13b
0000000000001a99         pop        rbx
0000000000001a9a         pop        rbp
0000000000001a9b         pop        r12
0000000000001a9d         pop        r13
0000000000001a9f         pop        r14
0000000000001aa1         pop        r15
0000000000001aa3         ret
                        ; endp

                     loc_1aa4:
0000000000001aa4         mov        rdi, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5, CODE XREF=main+334
0000000000001aab         call       rpl_fclose                                  ; rpl_fclose
0000000000001ab0         add        eax, 0x1
0000000000001ab3         jne        loc_1a90

0000000000001ab5         lea        rdx, qword [aLibs+10]                       ; 0x67b2
0000000000001abc         mov        esi, 0x3
0000000000001ac1         xor        edi, edi
0000000000001ac3         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000001ac8         mov        rbx, rax
0000000000001acb         call       j___errno_location                          ; __errno_location
0000000000001ad0         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001ad2         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0x7182
0000000000001ad9         mov        rcx, rbx
0000000000001adc         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001ae1         xor        eax, eax
0000000000001ae3         call       j_error                                     ; error

                     loc_1ae8:
0000000000001ae8         mov        r13d, 0x1                                   ; CODE XREF=main+309
0000000000001aee         jmp        loc_1b04

                     loc_1af0:
0000000000001af0         mov        rdi, qword [rbx+rax*8]                      ; CODE XREF=main+461
0000000000001af4         mov        esi, r14d
0000000000001af7         call       r12                                         ; Jumps to 0x1e70 (bsd_sum_file), bsd_sum_file
0000000000001afa         add        dword [optind@@GLIBC_2.2.5], 0x1            ; optind@@GLIBC_2.2.5
0000000000001b01         and        r13d, eax

                     loc_1b04:
0000000000001b04         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+430
0000000000001b0b         cmp        eax, ebp
0000000000001b0d         jl         loc_1af0

0000000000001b0f         jmp        loc_1a87

                     loc_1b14:
0000000000001b14         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=main+188, main+213
0000000000001b19         call       usage                                       ; usage

                     loc_1b1e:
0000000000001b1e         xor        edi, edi                                    ; argument #1 for method usage, CODE XREF=main+172
0000000000001b20         call       usage                                       ; usage
0000000000001b25         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x75a0)
0000000000001b2f         nop
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
0000000000001b30         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x7464)
0000000000001b32         mov        r9, rdx
0000000000001b35         pop        rsi
0000000000001b36         mov        rdx, rsp
0000000000001b39         and        rsp, 0xfffffffffffffff0
0000000000001b3d         push       rax
0000000000001b3e         push       rsp
0000000000001b3f         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
0000000000001b46         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
0000000000001b4d         lea        rdi, qword [main]                           ; main
0000000000001b54         call       qword [qword_208fd8+8]                      ; 0x208fe0
0000000000001b5a         hlt
                        ; endp
0000000000001b5b         align      32                                          ; End of unwind block (FDE at 0x7464)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000001b60         lea        rdi, qword [__TMC_END__]                    ; __TMC_END__, CODE XREF=__do_global_dtors_aux+35
0000000000001b67         push       rbp
0000000000001b68         lea        rax, qword [__TMC_END__]                    ; __TMC_END__
0000000000001b6f         cmp        rax, rdi
0000000000001b72         mov        rbp, rsp
0000000000001b75         je         loc_1b90

0000000000001b77         mov        rax, qword [qword_208fd8]                   ; qword_208fd8
0000000000001b7e         test       rax, rax
0000000000001b81         je         loc_1b90

0000000000001b83         pop        rbp
0000000000001b84         jmp        rax
                        ; endp
0000000000001b86         align      16

                     loc_1b90:
0000000000001b90         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
0000000000001b91         ret
                        ; endp
0000000000001b92         align      32

                     register_tm_clones:
0000000000001ba0         lea        rdi, qword [__TMC_END__]                    ; __TMC_END__, CODE XREF=frame_dummy+5
0000000000001ba7         lea        rsi, qword [__TMC_END__]                    ; __TMC_END__
0000000000001bae         push       rbp
0000000000001baf         sub        rsi, rdi
0000000000001bb2         mov        rbp, rsp
0000000000001bb5         sar        rsi, 0x3
0000000000001bb9         mov        rax, rsi
0000000000001bbc         shr        rax, 0x3f
0000000000001bc0         add        rsi, rax
0000000000001bc3         sar        rsi, 0x1
0000000000001bc6         je         loc_1be0

0000000000001bc8         mov        rax, qword [qword_208ff0]                   ; qword_208ff0
0000000000001bcf         test       rax, rax
0000000000001bd2         je         loc_1be0

0000000000001bd4         pop        rbp
0000000000001bd5         jmp        rax
                        ; endp
0000000000001bd7         align      32

                     loc_1be0:
0000000000001be0         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000001be1         ret
                        ; endp
0000000000001be2         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
0000000000001bf0         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
0000000000001bf7         jne        loc_1c28

0000000000001bf9         cmp        qword [qword_208ff8], 0x0                   ; qword_208ff8
0000000000001c01         push       rbp
0000000000001c02         mov        rbp, rsp
0000000000001c05         je         loc_1c13

0000000000001c07         mov        rdi, qword [__dso_handle]                   ; __dso_handle
0000000000001c0e         call       j_qword_208ff8                              ; qword_208ff8

                     loc_1c13:
0000000000001c13         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
0000000000001c18         mov        byte [completed.7697], 0x1                  ; completed.7697
0000000000001c1f         pop        rbp
0000000000001c20         ret
                        ; endp
0000000000001c21         align      8

                     loc_1c28:
0000000000001c28         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
0000000000001c2a         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000001c30         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000001c31         mov        rbp, rsp
0000000000001c34         pop        rbp
0000000000001c35         jmp        register_tm_clones                          ; register_tm_clones
0000000000001c3a         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_2048: int8_t, -8264
        ;    var_22D8: int8_t, -8920
        ;    var_22DC: int32_t, -8924


                     sysv_sum_file:
0000000000001c40         push       r15                                         ; Begin of unwind block (FDE at 0x74d4), DATA XREF=main+194
0000000000001c42         push       r14
0000000000001c44         mov        ecx, 0x2
0000000000001c49         push       r13
0000000000001c4b         push       r12
0000000000001c4d         mov        r13, rdi
0000000000001c50         push       rbp
0000000000001c51         push       rbx
0000000000001c52         lea        rdi, qword [aLibs+10]                       ; 0x67b2
0000000000001c59         sub        rsp, 0x22b8
0000000000001c60         mov        dword [rsp+0x22e8+var_22DC], esi
0000000000001c64         mov        rsi, r13
0000000000001c67         mov        rax, qword [fs:0x28]
0000000000001c70         mov        qword [rsp+0x22e8+var_40], rax
0000000000001c78         xor        eax, eax
0000000000001c7a         rep  cmpsb byte [rsi], byte [rdi]
0000000000001c7c         seta       r12b
0000000000001c80         sbb        r12b, 0x0
0000000000001c84         movsx      r12d, r12b
0000000000001c88         test       r12d, r12d
0000000000001c8b         jne        loc_1df0

0000000000001c91         mov        byte [have_read_stdin], 0x1                 ; have_read_stdin
0000000000001c98         xor        ebp, ebp

                     loc_1c9a:
0000000000001c9a         lea        r14, qword [rsp+0x22e8+var_2048]            ; CODE XREF=sysv_sum_file+449
0000000000001ca2         xor        r15d, r15d
0000000000001ca5         xor        ebx, ebx
0000000000001ca7         nop        word [rax+rax]

                     loc_1cb0:
0000000000001cb0         mov        edx, 0x2000                                 ; CODE XREF=sysv_sum_file+170
0000000000001cb5         mov        rsi, r14
0000000000001cb8         mov        edi, ebp
0000000000001cba         call       safe_read                                   ; safe_read
0000000000001cbf         test       rax, rax
0000000000001cc2         je         loc_1cf0

0000000000001cc4         cmp        rax, 0xffffffffffffffff
0000000000001cc8         je         loc_1db0

0000000000001cce         lea        rsi, qword [r14+rax]
0000000000001cd2         mov        rdx, r14
0000000000001cd5         nop        dword [rax]

                     loc_1cd8:
0000000000001cd8         movzx      ecx, byte [rdx]                             ; CODE XREF=sysv_sum_file+165
0000000000001cdb         add        rdx, 0x1
0000000000001cdf         add        r15d, ecx
0000000000001ce2         cmp        rsi, rdx
0000000000001ce5         jne        loc_1cd8

0000000000001ce7         add        rbx, rax
0000000000001cea         jmp        loc_1cb0
0000000000001cec         align      16

                     loc_1cf0:
0000000000001cf0         test       r12d, r12d                                  ; CODE XREF=sysv_sum_file+130
0000000000001cf3         je         loc_1d04

0000000000001cf5         mov        edi, ebp                                    ; argument "__fd" for method j_close
0000000000001cf7         call       j_close                                     ; close
0000000000001cfc         test       eax, eax
0000000000001cfe         jne        loc_1e07

                     loc_1d04:
0000000000001d04         movzx      eax, r15w                                   ; CODE XREF=sysv_sum_file+179
0000000000001d08         shr        r15d, 0x10
0000000000001d0c         lea        rsi, qword [rsp+0x22e8+var_22D8]
0000000000001d11         add        r15d, eax
0000000000001d14         xor        edx, edx
0000000000001d16         mov        r8d, 0x200
0000000000001d1c         movzx      eax, r15w
0000000000001d20         mov        ecx, 0x1
0000000000001d25         sar        r15d, 0x10
0000000000001d29         mov        rdi, rbx
0000000000001d2c         add        r15d, eax
0000000000001d2f         call       human_readable                              ; human_readable
0000000000001d34         lea        rsi, qword [aDS]                            ; "%d %s"
0000000000001d3b         mov        rcx, rax
0000000000001d3e         mov        edx, r15d
0000000000001d41         xor        eax, eax
0000000000001d43         mov        edi, 0x1
0000000000001d48         call       j___printf_chk                              ; __printf_chk
0000000000001d4d         mov        eax, dword [rsp+0x22e8+var_22DC]
0000000000001d51         test       eax, eax
0000000000001d53         jne        loc_1e3a

                     loc_1d59:
0000000000001d59         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=sysv_sum_file+528
0000000000001d60         mov        rax, qword [rdi+0x28]
0000000000001d64         cmp        rax, qword [rdi+0x30]
0000000000001d68         jae        loc_1e55

0000000000001d6e         lea        rdx, qword [rax+1]
0000000000001d72         mov        ebx, 0x1
0000000000001d77         mov        qword [rdi+0x28], rdx
0000000000001d7b         mov        byte [rax], 0xa

                     loc_1d7e:
0000000000001d7e         mov        eax, ebx                                    ; CODE XREF=sysv_sum_file+417, sysv_sum_file+426, sysv_sum_file+501, sysv_sum_file+548
0000000000001d80         mov        rbx, qword [rsp+0x22e8+var_40]
0000000000001d88         xor        rbx, qword [fs:0x28]
0000000000001d91         jne        loc_1e69

0000000000001d97         add        rsp, 0x22b8
0000000000001d9e         pop        rbx
0000000000001d9f         pop        rbp
0000000000001da0         pop        r12
0000000000001da2         pop        r13
0000000000001da4         pop        r14
0000000000001da6         pop        r15
0000000000001da8         ret
                        ; endp
0000000000001da9         align      16

                     loc_1db0:
0000000000001db0         xor        edi, edi                                    ; CODE XREF=sysv_sum_file+136
0000000000001db2         mov        rdx, r13
0000000000001db5         mov        esi, 0x3
0000000000001dba         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000001dbf         mov        rbx, rax
0000000000001dc2         call       j___errno_location                          ; __errno_location
0000000000001dc7         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001dc9         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0x7182
0000000000001dd0         mov        rcx, rbx
0000000000001dd3         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001dd5         xor        eax, eax
0000000000001dd7         xor        ebx, ebx
0000000000001dd9         call       j_error                                     ; error
0000000000001dde         test       r12d, r12d
0000000000001de1         je         loc_1d7e

0000000000001de3         mov        edi, ebp                                    ; argument "__fd" for method j_close
0000000000001de5         call       j_close                                     ; close
0000000000001dea         jmp        loc_1d7e
0000000000001dec         align      16

                     loc_1df0:
0000000000001df0         xor        esi, esi                                    ; argument "__oflag" for method j_open, CODE XREF=sysv_sum_file+75
0000000000001df2         xor        eax, eax
0000000000001df4         mov        rdi, r13                                    ; argument "__file" for method j_open
0000000000001df7         call       j_open                                      ; open
0000000000001dfc         cmp        eax, 0xffffffff
0000000000001dff         mov        ebp, eax
0000000000001e01         jne        loc_1c9a

                     loc_1e07:
0000000000001e07         mov        rdx, r13                                    ; CODE XREF=sysv_sum_file+190
0000000000001e0a         mov        esi, 0x3
0000000000001e0f         xor        edi, edi
0000000000001e11         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000001e16         mov        rbx, rax
0000000000001e19         call       j___errno_location                          ; __errno_location
0000000000001e1e         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001e20         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0x7182
0000000000001e27         mov        rcx, rbx
0000000000001e2a         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001e2c         xor        eax, eax
0000000000001e2e         xor        ebx, ebx
0000000000001e30         call       j_error                                     ; error
0000000000001e35         jmp        loc_1d7e

                     loc_1e3a:
0000000000001e3a         lea        rsi, qword [aNS+9]                          ; 0x7181, CODE XREF=sysv_sum_file+275
0000000000001e41         mov        rdx, r13
0000000000001e44         mov        edi, 0x1
0000000000001e49         xor        eax, eax
0000000000001e4b         call       j___printf_chk                              ; __printf_chk
0000000000001e50         jmp        loc_1d59

                     loc_1e55:
0000000000001e55         mov        esi, 0xa                                    ; argument #2 for method j___overflow, CODE XREF=sysv_sum_file+296
0000000000001e5a         mov        ebx, 0x1
0000000000001e5f         call       j___overflow                                ; __overflow
0000000000001e64         jmp        loc_1d7e

                     loc_1e69:
0000000000001e69         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sysv_sum_file+337
                        ; endp
0000000000001e6e         align      16                                          ; End of unwind block (FDE at 0x74d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     bsd_sum_file:
0000000000001e70         push       r15                                         ; Begin of unwind block (FDE at 0x7524), CODE XREF=main+321, main+439, DATA XREF=main+15
0000000000001e72         push       r14
0000000000001e74         mov        ecx, 0x2
0000000000001e79         push       r13
0000000000001e7b         push       r12
0000000000001e7d         mov        r12, rdi
0000000000001e80         push       rbp
0000000000001e81         push       rbx
0000000000001e82         lea        rdi, qword [aLibs+10]                       ; 0x67b2
0000000000001e89         mov        r13d, esi
0000000000001e8c         mov        rsi, r12
0000000000001e8f         sub        rsp, 0x2a8
0000000000001e96         mov        rax, qword [fs:0x28]
0000000000001e9f         mov        qword [rsp+0x2d8+var_40], rax
0000000000001ea7         xor        eax, eax
0000000000001ea9         rep  cmpsb byte [rsi], byte [rdi]
0000000000001eab         seta       bpl
0000000000001eaf         sbb        bpl, 0x0
0000000000001eb3         movsx      ebp, bpl
0000000000001eb7         test       ebp, ebp
0000000000001eb9         jne        loc_1ff0

0000000000001ebf         mov        r15, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5
0000000000001ec6         mov        byte [have_read_stdin], 0x1                 ; have_read_stdin

                     loc_1ecd:
0000000000001ecd         mov        esi, 0x2                                    ; CODE XREF=bsd_sum_file+405
0000000000001ed2         mov        rdi, r15
0000000000001ed5         xor        r14d, r14d
0000000000001ed8         call       fadvise                                     ; fadvise
0000000000001edd         xor        ebx, ebx
0000000000001edf         mov        rsi, qword [r15+0x10]
0000000000001ee3         mov        rax, qword [r15+8]
0000000000001ee7         jmp        loc_1f13
0000000000001ee9         align      16

                     loc_1ef0:
0000000000001ef0         lea        rcx, qword [rax+1]                          ; CODE XREF=bsd_sum_file+166
0000000000001ef4         mov        qword [r15+8], rcx
0000000000001ef8         movzx      eax, byte [rax]

                     loc_1efb:
0000000000001efb         mov        edx, ebx                                    ; CODE XREF=bsd_sum_file+564
0000000000001efd         shl        ebx, 0xf
0000000000001f00         add        r14, 0x1
0000000000001f04         sar        edx, 0x1
0000000000001f06         movzx      ebx, bx
0000000000001f09         add        ebx, edx
0000000000001f0b         add        ebx, eax
0000000000001f0d         mov        rax, rcx
0000000000001f10         movzx      ebx, bx

                     loc_1f13:
0000000000001f13         cmp        rsi, rax                                    ; CODE XREF=bsd_sum_file+119
0000000000001f16         ja         loc_1ef0

0000000000001f18         mov        rdi, r15                                    ; argument #1 for method j___uflow
0000000000001f1b         call       j___uflow                                   ; __uflow
0000000000001f20         cmp        eax, 0xffffffff
0000000000001f23         jne        loc_209c

0000000000001f29         test       byte [r15], 0x20
0000000000001f2d         jne        loc_2040

0000000000001f33         test       ebp, ebp
0000000000001f35         je         loc_1f47

0000000000001f37         mov        rdi, r15
0000000000001f3a         call       rpl_fclose                                  ; rpl_fclose
0000000000001f3f         test       eax, eax
0000000000001f41         jne        loc_200b

                     loc_1f47:
0000000000001f47         xor        edx, edx                                    ; CODE XREF=bsd_sum_file+197
0000000000001f49         mov        rsi, rsp
0000000000001f4c         mov        r8d, 0x400
0000000000001f52         mov        ecx, 0x1
0000000000001f57         mov        rdi, r14
0000000000001f5a         call       human_readable                              ; human_readable
0000000000001f5f         lea        rsi, qword [a05d5s]                         ; "%05d %5s"
0000000000001f66         mov        rcx, rax
0000000000001f69         mov        edx, ebx
0000000000001f6b         xor        eax, eax
0000000000001f6d         mov        edi, 0x1
0000000000001f72         call       j___printf_chk                              ; __printf_chk
0000000000001f77         cmp        r13d, 0x1
0000000000001f7b         jg         loc_1fd0

                     loc_1f7d:
0000000000001f7d         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=bsd_sum_file+374
0000000000001f84         mov        rax, qword [rdi+0x28]
0000000000001f88         cmp        rax, qword [rdi+0x30]
0000000000001f8c         jae        loc_2083

0000000000001f92         lea        rdx, qword [rax+1]
0000000000001f96         mov        ebx, 0x1
0000000000001f9b         mov        qword [rdi+0x28], rdx
0000000000001f9f         mov        byte [rax], 0xa

                     loc_1fa2:
0000000000001fa2         mov        rdi, qword [rsp+0x2d8+var_40]               ; CODE XREF=bsd_sum_file+457, bsd_sum_file+512, bsd_sum_file+526, bsd_sum_file+546
0000000000001faa         xor        rdi, qword [fs:0x28]
0000000000001fb3         mov        eax, ebx
0000000000001fb5         jne        loc_2097

0000000000001fbb         add        rsp, 0x2a8
0000000000001fc2         pop        rbx
0000000000001fc3         pop        rbp
0000000000001fc4         pop        r12
0000000000001fc6         pop        r13
0000000000001fc8         pop        r14
0000000000001fca         pop        r15
0000000000001fcc         ret
                        ; endp
0000000000001fcd         align      16

                     loc_1fd0:
0000000000001fd0         lea        rsi, qword [aNS+9]                          ; 0x7181, CODE XREF=bsd_sum_file+267
0000000000001fd7         mov        rdx, r12
0000000000001fda         mov        edi, 0x1
0000000000001fdf         xor        eax, eax
0000000000001fe1         call       j___printf_chk                              ; __printf_chk
0000000000001fe6         jmp        loc_1f7d
0000000000001fe8         align      16

                     loc_1ff0:
0000000000001ff0         lea        rsi, qword [aWriteError+10]                 ; argument "__modes" for method j_fopen, 0x66da, CODE XREF=bsd_sum_file+73
0000000000001ff7         mov        rdi, r12                                    ; argument "__filename" for method j_fopen
0000000000001ffa         call       j_fopen                                     ; fopen
0000000000001fff         test       rax, rax
0000000000002002         mov        r15, rax
0000000000002005         jne        loc_1ecd

                     loc_200b:
000000000000200b         mov        rdx, r12                                    ; CODE XREF=bsd_sum_file+209
000000000000200e         mov        esi, 0x3
0000000000002013         xor        edi, edi
0000000000002015         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
000000000000201a         mov        rbx, rax
000000000000201d         call       j___errno_location                          ; __errno_location
0000000000002022         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002024         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0x7182
000000000000202b         mov        rcx, rbx
000000000000202e         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002030         xor        eax, eax
0000000000002032         xor        ebx, ebx
0000000000002034         call       j_error                                     ; error
0000000000002039         jmp        loc_1fa2
000000000000203e         align      64

                     loc_2040:
0000000000002040         xor        edi, edi                                    ; CODE XREF=bsd_sum_file+189
0000000000002042         mov        rdx, r12
0000000000002045         mov        esi, 0x3
000000000000204a         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
000000000000204f         mov        rbx, rax
0000000000002052         call       j___errno_location                          ; __errno_location
0000000000002057         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002059         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0x7182
0000000000002060         mov        rcx, rbx
0000000000002063         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002065         xor        eax, eax
0000000000002067         xor        ebx, ebx
0000000000002069         call       j_error                                     ; error
000000000000206e         test       ebp, ebp
0000000000002070         je         loc_1fa2

0000000000002076         mov        rdi, r15
0000000000002079         call       rpl_fclose                                  ; rpl_fclose
000000000000207e         jmp        loc_1fa2

                     loc_2083:
0000000000002083         mov        esi, 0xa                                    ; argument #2 for method j___overflow, CODE XREF=bsd_sum_file+284
0000000000002088         mov        ebx, 0x1
000000000000208d         call       j___overflow                                ; __overflow
0000000000002092         jmp        loc_1fa2

                     loc_2097:
0000000000002097         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=bsd_sum_file+325
                        ; endp

                     loc_209c:
000000000000209c         mov        rsi, qword [r15+0x10]                       ; CODE XREF=bsd_sum_file+179
00000000000020a0         mov        rcx, qword [r15+8]
00000000000020a4         jmp        loc_1efb
00000000000020a9         align      16                                          ; End of unwind block (FDE at 0x7524)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
00000000000020b0         push       r13                                         ; Begin of unwind block (FDE at 0x7574), CODE XREF=main+473, main+480, __argmatch_die+5
00000000000020b2         push       r12
00000000000020b4         mov        edx, 0x5
00000000000020b9         push       rbp
00000000000020ba         push       rbx
00000000000020bb         mov        ebp, edi
00000000000020bd         sub        rsp, 0x88
00000000000020c4         mov        rbx, qword [program_name]                   ; program_name
00000000000020cb         mov        rax, qword [fs:0x28]
00000000000020d4         mov        qword [rsp+0xa8+var_30], rax
00000000000020d9         xor        eax, eax
00000000000020db         test       edi, edi
00000000000020dd         je         loc_210d

00000000000020df         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
00000000000020e6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000020e8         call       j_dcgettext                                 ; dcgettext
00000000000020ed         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
00000000000020f4         mov        rdx, rax
00000000000020f7         mov        rcx, rbx
00000000000020fa         mov        esi, 0x1
00000000000020ff         xor        eax, eax
0000000000002101         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_2106:
0000000000002106         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+710
0000000000002108         call       j_exit                                      ; exit
                        ; endp

                     loc_210d:
000000000000210d         lea        rsi, qword [aUsageSOptionFi]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... [FILE]...\\n", CODE XREF=usage+45
0000000000002114         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002116         call       j_dcgettext                                 ; dcgettext
000000000000211b         mov        rdx, rbx
000000000000211e         mov        rsi, rax
0000000000002121         mov        edi, 0x1
0000000000002126         xor        eax, eax
0000000000002128         call       j___printf_chk                              ; __printf_chk
000000000000212d         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002134         lea        rsi, qword [aPrintChecksumA]                ; argument "msgid" for method j_dcgettext, "Print checksum and block counts for each FILE.\\n"
000000000000213b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002140         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002142         call       j_dcgettext                                 ; dcgettext
0000000000002147         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000214a         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000214d         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002152         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002159         lea        rsi, qword [aNwithNoFileOrW]                ; argument "msgid" for method j_dcgettext, "\\nWith no FILE, or when FILE is -, read standard input.\\n"
0000000000002160         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002165         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002167         call       j_dcgettext                                 ; dcgettext
000000000000216c         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000216f         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002172         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002177         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000217e         lea        rsi, qword [aNRUseBsdSumAlg]                ; argument "msgid" for method j_dcgettext, "\\n  -r              use BSD sum algorithm, use 1K blocks\\n  -s, --sysv      use System V sum algorithm, use 512 bytes blocks\\n"
0000000000002185         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000218a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000218c         call       j_dcgettext                                 ; dcgettext
0000000000002191         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002194         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002197         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000219c         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000021a3         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
00000000000021aa         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000021af         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000021b1         call       j_dcgettext                                 ; dcgettext
00000000000021b6         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000021b9         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000021bc         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000021c1         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000021c8         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
00000000000021cf         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000021d4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000021d6         call       j_dcgettext                                 ; dcgettext
00000000000021db         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000021de         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000021e1         lea        rbx, qword [aSha512sum+6]                   ; 0x63ee
00000000000021e8         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000021ed         lea        rax, qword [a05d5s+9]                       ; 0x6393
00000000000021f4         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
00000000000021fb         mov        qword [rsp+0xa8+var_48], 0x0
0000000000002204         mov        qword [rsp+0xa8+var_40], 0x0
000000000000220d         mov        rdx, rsp
0000000000002210         mov        qword [rsp+0xa8+var_A8], rax
0000000000002214         lea        rax, qword [aTestInvocation]                ; "test invocation"
000000000000221b         mov        qword [rsp+0xa8+var_78], rcx
0000000000002220         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
0000000000002227         mov        qword [rsp+0xa8+var_A0], rax
000000000000222c         lea        rax, qword [aCoreutils]                     ; "coreutils"
0000000000002233         mov        qword [rsp+0xa8+var_68], rcx
0000000000002238         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
000000000000223f         mov        qword [rsp+0xa8+var_98], rax
0000000000002244         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
000000000000224b         mov        qword [rsp+0xa8+var_58], rcx
0000000000002250         mov        qword [rsp+0xa8+var_90], rax
0000000000002255         lea        rax, qword [aSha224sum]                     ; "sha224sum"
000000000000225c         mov        qword [rsp+0xa8+var_88], rax
0000000000002261         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
0000000000002268         mov        qword [rsp+0xa8+var_80], rax
000000000000226d         mov        qword [rsp+0xa8+var_70], rax
0000000000002272         mov        qword [rsp+0xa8+var_60], rax
0000000000002277         mov        qword [rsp+0xa8+var_50], rax
000000000000227c         nop        dword [rax]

                     loc_2280:
0000000000002280         add        rdx, 0x10                                   ; CODE XREF=usage+493
0000000000002284         mov        rdi, qword [rdx]
0000000000002287         test       rdi, rdi
000000000000228a         je         loc_229f

000000000000228c         mov        ecx, 0x4
0000000000002291         mov        rsi, rbx
0000000000002294         rep  cmpsb byte [rsi], byte [rdi]
0000000000002296         seta       al
0000000000002299         sbb        al, 0x0
000000000000229b         test       al, al
000000000000229d         jne        loc_2280

                     loc_229f:
000000000000229f         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+474
00000000000022a3         xor        edi, edi
00000000000022a5         mov        edx, 0x5
00000000000022aa         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
00000000000022b1         test       r12, r12
00000000000022b4         je         loc_237b

00000000000022ba         call       j_dcgettext                                 ; dcgettext
00000000000022bf         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000022c6         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6409
00000000000022cd         mov        rsi, rax
00000000000022d0         mov        edi, 0x1
00000000000022d5         xor        eax, eax
00000000000022d7         call       j___printf_chk                              ; __printf_chk
00000000000022dc         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
00000000000022de         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
00000000000022e3         call       j_setlocale                                 ; setlocale
00000000000022e8         test       rax, rax
00000000000022eb         je         loc_2309

00000000000022ed         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x6417
00000000000022f4         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
00000000000022f9         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
00000000000022fc         call       j_strncmp                                   ; strncmp
0000000000002301         test       eax, eax
0000000000002303         jne        loc_2410

                     loc_2309:
0000000000002309         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+571, usage+901
0000000000002310         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002312         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002317         call       j_dcgettext                                 ; dcgettext
000000000000231c         lea        rcx, qword [aSha512sum+6]                   ; 0x63ee
0000000000002323         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
000000000000232a         mov        rsi, rax
000000000000232d         mov        edi, 0x1
0000000000002332         xor        eax, eax
0000000000002334         call       j___printf_chk                              ; __printf_chk
0000000000002339         cmp        r12, rbx
000000000000233c         lea        rcx, qword [aMulticallInvoc+10]             ; 0x63af
0000000000002343         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0x6ce1
000000000000234a         cmove      rbx, rcx

                     loc_234e:
000000000000234e         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+852
0000000000002355         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002357         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000235c         call       j_dcgettext                                 ; dcgettext
0000000000002361         mov        rcx, rbx
0000000000002364         mov        rsi, rax
0000000000002367         mov        rdx, r12
000000000000236a         mov        edi, 0x1
000000000000236f         xor        eax, eax
0000000000002371         call       j___printf_chk                              ; __printf_chk
0000000000002376         jmp        loc_2106

                     loc_237b:
000000000000237b         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+516
0000000000002380         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002387         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6409
000000000000238e         mov        rsi, rax
0000000000002391         mov        edi, 0x1
0000000000002396         xor        eax, eax
0000000000002398         call       j___printf_chk                              ; __printf_chk
000000000000239d         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000239f         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
00000000000023a4         call       j_setlocale                                 ; setlocale
00000000000023a9         test       rax, rax
00000000000023ac         je         loc_23c6

00000000000023ae         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x6417
00000000000023b5         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
00000000000023ba         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
00000000000023bd         call       j_strncmp                                   ; strncmp
00000000000023c2         test       eax, eax
00000000000023c4         jne        loc_2409

                     loc_23c6:
00000000000023c6         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+764
00000000000023cd         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000023d2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000023d4         lea        r12, qword [aSha512sum+6]                   ; 0x63ee
00000000000023db         lea        rbx, qword [aMulticallInvoc+10]             ; 0x63af
00000000000023e2         call       j_dcgettext                                 ; dcgettext
00000000000023e7         lea        rcx, qword [aSha512sum+6]                   ; 0x63ee
00000000000023ee         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000023f5         mov        rsi, rax
00000000000023f8         mov        edi, 0x1
00000000000023fd         xor        eax, eax
00000000000023ff         call       j___printf_chk                              ; __printf_chk
0000000000002404         jmp        loc_234e

                     loc_2409:
0000000000002409         lea        r12, qword [aSha512sum+6]                   ; 0x63ee, CODE XREF=usage+788

                     loc_2410:
0000000000002410         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+595
0000000000002417         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
000000000000241e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002420         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002425         call       j_dcgettext                                 ; dcgettext
000000000000242a         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
000000000000242d         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002430         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002435         jmp        loc_2309
000000000000243a         align      64                                          ; End of unwind block (FDE at 0x7574)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
0000000000002440         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0x75f4), file_name
0000000000002447         ret
                        ; endp
0000000000002448         align      16                                          ; End of unwind block (FDE at 0x75f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
0000000000002450         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x7608), ignore_EPIPE
0000000000002457         ret
                        ; endp
0000000000002458         align      32                                          ; End of unwind block (FDE at 0x7608)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
0000000000002460         push       rbp                                         ; Begin of unwind block (FDE at 0x761c), DATA XREF=main+99
0000000000002461         push       rbx
0000000000002462         sub        rsp, 0x8
0000000000002466         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000246d         call       close_stream                                ; close_stream
0000000000002472         test       eax, eax
0000000000002474         je         loc_248c

0000000000002476         call       j___errno_location                          ; __errno_location
000000000000247b         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
0000000000002482         mov        rbx, rax
0000000000002485         je         loc_24a3

0000000000002487         cmp        dword [rax], 0x20
000000000000248a         jne        loc_24a3

                     loc_248c:
000000000000248c         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
0000000000002493         call       close_stream                                ; close_stream
0000000000002498         test       eax, eax
000000000000249a         jne        loc_24e2

000000000000249c         add        rsp, 0x8
00000000000024a0         pop        rbx
00000000000024a1         pop        rbp
00000000000024a2         ret
                        ; endp

                     loc_24a3:
00000000000024a3         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
00000000000024aa         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000024ac         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000024b1         call       j_dcgettext                                 ; dcgettext
00000000000024b6         mov        rdi, qword [file_name]                      ; file_name
00000000000024bd         mov        rbp, rax
00000000000024c0         test       rdi, rdi
00000000000024c3         je         loc_24ed

00000000000024c5         call       quotearg_colon                              ; quotearg_colon
00000000000024ca         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
00000000000024cc         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
00000000000024d3         mov        rcx, rax
00000000000024d6         mov        r8, rbp
00000000000024d9         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000024db         xor        eax, eax
00000000000024dd         call       j_error                                     ; error

                     loc_24e2:
00000000000024e2         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
00000000000024e8         call       j__exit                                     ; _exit
                        ; endp

                     loc_24ed:
00000000000024ed         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
00000000000024ef         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0x7182
00000000000024f6         mov        rcx, rax
00000000000024f9         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000024fb         xor        eax, eax
00000000000024fd         call       j_error                                     ; error
0000000000002502         jmp        loc_24e2
0000000000002504         align      16                                          ; End of unwind block (FDE at 0x761c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fdadvise:
0000000000002510         jmp        j_posix_fadvise                             ; posix_fadvise, Begin of unwind block (FDE at 0x764c)
                        ; endp
0000000000002515         align      32                                          ; End of unwind block (FDE at 0x764c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fadvise:
0000000000002520         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7660), CODE XREF=bsd_sum_file+104
0000000000002523         je         loc_2540

0000000000002525         push       rbx
0000000000002526         mov        ebx, esi
0000000000002528         call       j_fileno                                    ; fileno
000000000000252d         mov        ecx, ebx                                    ; argument "__advise" for method j_posix_fadvise
000000000000252f         xor        edx, edx                                    ; argument "__len" for method j_posix_fadvise
0000000000002531         xor        esi, esi                                    ; argument "__offset" for method j_posix_fadvise
0000000000002533         pop        rbx
0000000000002534         mov        edi, eax                                    ; argument "__fd" for method j_posix_fadvise
0000000000002536         jmp        j_posix_fadvise                             ; posix_fadvise
                        ; endp
000000000000253b         align      64

                     loc_2540:
0000000000002540         ret                                                    ; CODE XREF=fadvise+3
                        ; endp
0000000000002542         align      16                                          ; End of unwind block (FDE at 0x7660)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_A: int16_t, -10
        ;    var_C: int16_t, -12
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32


                     adjust_value.part.0:
0000000000002550         fld        dword [dword_6754]                          ; Begin of unwind block (FDE at 0x767c), dword_6754, CODE XREF=human_readable+1400, human_readable+1434, human_readable+1960
0000000000002556         fld        tword [rsp+arg_0]
000000000000255a         fucomi     st1
000000000000255c         jae        loc_25d0

000000000000255e         fstp       st1
0000000000002560         fnstcw     word [rsp+var_A]
0000000000002564         movzx      eax, word [rsp+var_A]
0000000000002569         or         ah, 0xc
000000000000256c         mov        word [rsp+var_C], ax
0000000000002571         fld        st0
0000000000002573         fldcw      word [rsp+var_C]
0000000000002577         fistp      qword [rsp+var_18]
000000000000257b         fldcw      word [rsp+var_A]
000000000000257f         mov        rax, qword [rsp+var_18]

                     loc_2584:
0000000000002584         mov        qword [rsp+var_20], rax                     ; CODE XREF=adjust_value.part.0+179
0000000000002589         test       rax, rax
000000000000258c         fild       qword [rsp+var_20]
0000000000002590         jns        loc_2598

0000000000002592         fadd       dword [dword_6758]                          ; dword_6758

                     loc_2598:
0000000000002598         test       edi, edi                                    ; CODE XREF=adjust_value.part.0+64
000000000000259a         jne        loc_25c8

000000000000259c         fxch       st1
000000000000259e         fucomip    st1
00000000000025a0         jp         loc_25a8

00000000000025a2         je         loc_25ca

00000000000025a4         fstp       st0
00000000000025a6         jmp        loc_25b0

                     loc_25a8:
00000000000025a8         fstp       st0                                         ; CODE XREF=adjust_value.part.0+80
00000000000025aa         nop        word [rax+rax]

                     loc_25b0:
00000000000025b0         add        rax, 0x1                                    ; CODE XREF=adjust_value.part.0+86
00000000000025b4         mov        qword [rsp+var_20], rax
00000000000025b9         test       rax, rax
00000000000025bc         fild       qword [rsp+var_20]
00000000000025c0         js         loc_2610

00000000000025c2         jmp        loc_25ca
00000000000025c4         align      8

                     loc_25c8:
00000000000025c8         fstp       st1                                         ; CODE XREF=adjust_value.part.0+74

                     loc_25ca:
00000000000025ca         ret                                                    ; CODE XREF=adjust_value.part.0+82, adjust_value.part.0+114
                        ; endp
00000000000025cc         align      16

                     loc_25d0:
00000000000025d0         fnstcw     word [rsp+var_A]                            ; CODE XREF=adjust_value.part.0+12
00000000000025d4         movzx      eax, word [rsp+var_A]
00000000000025d9         fsubr      st1, st0
00000000000025db         fxch       st1
00000000000025dd         movabs     rdx, 0x8000000000000000
00000000000025e7         or         ah, 0xc
00000000000025ea         mov        word [rsp+var_C], ax
00000000000025ef         fldcw      word [rsp+var_C]
00000000000025f3         fistp      qword [rsp+var_18]
00000000000025f7         fldcw      word [rsp+var_A]
00000000000025fb         mov        rax, qword [rsp+var_18]
0000000000002600         xor        rax, rdx
0000000000002603         jmp        loc_2584
0000000000002608         align      16

                     loc_2610:
0000000000002610         fadd       dword [dword_6758]                          ; dword_6758, CODE XREF=adjust_value.part.0+112
0000000000002616         ret
                        ; endp
0000000000002617         align      32                                          ; End of unwind block (FDE at 0x767c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_78: int8_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_94: int32_t, -148
        ;    var_98: int32_t, -152
        ;    var_A8: int32_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D8: -216


                     human_readable:
0000000000002620         push       r15                                         ; Begin of unwind block (FDE at 0x7690), CODE XREF=sysv_sum_file+239, bsd_sum_file+234
0000000000002622         push       r14
0000000000002624         mov        eax, edx
0000000000002626         push       r13
0000000000002628         push       r12
000000000000262a         mov        r15d, edx
000000000000262d         push       rbp
000000000000262e         push       rbx
000000000000262f         and        eax, 0x20
0000000000002632         and        r15d, 0x3
0000000000002636         mov        r12d, edx
0000000000002639         mov        rbx, rdi
000000000000263c         sub        rsp, 0x98
0000000000002643         mov        qword [rsp+0xc8+var_B0], rcx
0000000000002648         mov        dword [rsp+0xc8+var_98], eax
000000000000264c         mov        rcx, qword [fs:0x28]
0000000000002655         mov        qword [rsp+0xc8+var_40], rcx
000000000000265d         xor        ecx, ecx
000000000000265f         cmp        eax, 0x1
0000000000002662         mov        qword [rsp+0xc8+var_C8], rsi
0000000000002666         mov        qword [rsp+0xc8+var_B8], r8
000000000000266b         sbb        eax, eax
000000000000266d         and        eax, 0xffffffe8
0000000000002670         add        eax, 0x400
0000000000002675         mov        dword [rsp+0xc8+var_94], eax
0000000000002679         call       j_localeconv                                ; localeconv
000000000000267e         mov        r14, qword [rax]
0000000000002681         mov        r13, rax
0000000000002684         mov        rdi, r14                                    ; argument "__s" for method j_strlen
0000000000002687         call       j_strlen                                    ; strlen
000000000000268c         mov        rcx, qword [r13+0x10]
0000000000002690         mov        r13, qword [r13+8]
0000000000002694         mov        rbp, rax
0000000000002697         sub        rax, 0x1
000000000000269b         mov        edx, 0x1
00000000000026a0         cmp        rax, 0x10
00000000000026a4         lea        rax, qword [aSS+7]                          ; 0x66e3
00000000000026ab         mov        rdi, r13                                    ; argument "__s" for method j_strlen
00000000000026ae         cmovae     rbp, rdx
00000000000026b2         mov        qword [rsp+0xc8+var_90], rcx
00000000000026b7         cmovae     r14, rax
00000000000026bb         call       j_strlen                                    ; strlen
00000000000026c0         cmp        rax, 0x11
00000000000026c4         lea        rax, qword [aWrittenBySSAnd+27]             ; 0x6ce1
00000000000026cb         mov        rdi, qword [rsp+0xc8+var_B8]
00000000000026d0         mov        rcx, qword [rsp+0xc8+var_B0]
00000000000026d5         cmovae     r13, rax
00000000000026d9         mov        rax, qword [rsp+0xc8+var_C8]
00000000000026dd         add        rax, 0x287
00000000000026e3         cmp        rdi, rcx
00000000000026e6         mov        qword [rsp+0xc8+var_C0], rax
00000000000026eb         ja         loc_2838

00000000000026f1         xor        edx, edx
00000000000026f3         mov        rax, rcx
00000000000026f6         div        rdi
00000000000026f9         test       rdx, rdx
00000000000026fc         mov        rdi, rax
00000000000026ff         je         loc_2a60

                     loc_2705:
0000000000002705         mov        qword [rsp+0xc8+var_B0], rcx                ; CODE XREF=human_readable+539, human_readable+561, human_readable+1106
000000000000270a         test       rcx, rcx
000000000000270d         fild       qword [rsp+0xc8+var_B0]
0000000000002711         jns        loc_2719

0000000000002713         fadd       dword [dword_6758]                          ; dword_6758

                     loc_2719:
0000000000002719         mov        rax, qword [rsp+0xc8+var_B8]                ; CODE XREF=human_readable+241
000000000000271e         mov        qword [rsp+0xc8+var_B0], rax
0000000000002723         test       rax, rax
0000000000002726         fild       qword [rsp+0xc8+var_B0]
000000000000272a         jns        loc_2732

000000000000272c         fadd       dword [dword_6758]                          ; dword_6758

                     loc_2732:
0000000000002732         fdivp      st1                                         ; CODE XREF=human_readable+266
0000000000002734         mov        qword [rsp+0xc8+var_B0], rbx
0000000000002739         test       rbx, rbx
000000000000273c         fild       qword [rsp+0xc8+var_B0]
0000000000002740         jns        loc_2748

0000000000002742         fadd       dword [dword_6758]                          ; dword_6758

                     loc_2748:
0000000000002748         test       r12b, 0x10                                  ; CODE XREF=human_readable+288
000000000000274c         fmulp      st1
000000000000274e         je         loc_2918

0000000000002754         fild       dword [rsp+0xc8+var_94]
0000000000002758         xor        ebx, ebx
000000000000275a         fld        st0
000000000000275c         jmp        loc_2764
000000000000275e         align      32

                     loc_2760:
0000000000002760         fstp       st1                                         ; CODE XREF=human_readable+340
0000000000002762         fxch       st2

                     loc_2764:
0000000000002764         fld        st0                                         ; CODE XREF=human_readable+316
0000000000002766         add        ebx, 0x1
0000000000002769         fmul       st2
000000000000276b         fxch       st3
000000000000276d         fucomi     st3
000000000000276f         jb         loc_2780

0000000000002771         cmp        ebx, 0x8
0000000000002774         jne        loc_2760

0000000000002776         fstp       st2
0000000000002778         fstp       st2
000000000000277a         jmp        loc_2784
000000000000277c         align      128

                     loc_2780:
0000000000002780         fstp       st2                                         ; CODE XREF=human_readable+335
0000000000002782         fstp       st2

                     loc_2784:
0000000000002784         mov        ecx, dword [rsp+0xc8+var_98]                ; CODE XREF=human_readable+346
0000000000002788         add        rbp, 0x1
000000000000278c         xor        eax, eax
000000000000278e         fdivrp     st1
0000000000002790         test       ecx, ecx
0000000000002792         sete       al
0000000000002795         cmp        r15d, 0x1
0000000000002799         lea        rax, qword [rbp+rax+1]
000000000000279e         mov        qword [rsp+0xc8+var_B0], rax
00000000000027a3         je         loc_2d10

00000000000027a9         fld        tword [dword_675c+4]                        ; 0x6760
00000000000027af         fucomip    st1
00000000000027b1         ja         loc_2b88

00000000000027b7         fld        st0

                     loc_27b9:
00000000000027b9         fstp       tword [rsp+0xc8+var_A8]                     ; CODE XREF=human_readable+1411
00000000000027bd         sub        rsp, 0x10
00000000000027c1         lea        rcx, qword [a1lf]                           ; "%.1Lf"
00000000000027c8         mov        esi, 0x1
00000000000027cd         mov        rdx, 0xffffffffffffffff
00000000000027d4         xor        eax, eax
00000000000027d6         mov        r14, qword [rsp+0xd8+var_C8]
00000000000027db         mov        rdi, r14
00000000000027de         fstp       tword [rsp+0xd8+var_D8]
00000000000027e1         call       j___sprintf_chk                             ; __sprintf_chk
00000000000027e6         mov        rdi, r14                                    ; argument "__s" for method j_strlen
00000000000027e9         call       j_strlen                                    ; strlen
00000000000027ee         pop        rcx
00000000000027ef         pop        rsi
00000000000027f0         cmp        rax, qword [rsp+0xc8+var_B0]
00000000000027f5         mov        r14, rax
00000000000027f8         fld        tword [rsp+0xc8+var_A8]
00000000000027fc         ja         loc_2da8

                     loc_2802:
0000000000002802         test       r12b, 0x8                                   ; CODE XREF=human_readable+1845
0000000000002806         je         loc_2970

000000000000280c         mov        rax, qword [rsp+0xc8+var_C8]
0000000000002810         cmp        byte [rax+r14-1], 0x30
0000000000002816         jne        loc_2978

000000000000281c         fld        dword [dword_675c]                          ; dword_675c
0000000000002822         cmp        r15d, 0x1
0000000000002826         fmul       st1, st0
0000000000002828         jne        loc_2db0

000000000000282e         jmp        loc_2d63
0000000000002833         align      8

                     loc_2838:
0000000000002838         test       rcx, rcx                                    ; CODE XREF=human_readable+203
000000000000283b         je         loc_2705

0000000000002841         mov        rax, qword [rsp+0xc8+var_B8]
0000000000002846         xor        edx, edx
0000000000002848         div        rcx
000000000000284b         test       rdx, rdx
000000000000284e         mov        r8, rax
0000000000002851         jne        loc_2705

0000000000002857         mov        rax, rbx
000000000000285a         xor        edx, edx
000000000000285c         div        r8
000000000000285f         mov        rbx, rax
0000000000002862         lea        rax, qword [rdx+rdx*4]
0000000000002866         xor        edx, edx
0000000000002868         mov        rsi, rbx
000000000000286b         add        rax, rax
000000000000286e         div        r8
0000000000002871         add        rdx, rdx
0000000000002874         mov        r9d, eax
0000000000002877         cmp        r8, rdx
000000000000287a         jbe        loc_2e08

0000000000002880         xor        edi, edi
0000000000002882         test       rdx, rdx
0000000000002885         setne      dil

                     loc_2889:
0000000000002889         mov        ecx, r12d                                   ; CODE XREF=human_readable+1117, human_readable+2035
000000000000288c         mov        r8, qword [rsp+0xc8+var_C0]
0000000000002891         mov        ebx, 0xffffffff
0000000000002896         and        ecx, 0x10
0000000000002899         je         loc_2c60

000000000000289f         mov        r8d, dword [rsp+0xc8+var_94]
00000000000028a4         cmp        r8, rsi
00000000000028a7         mov        r11, r8
00000000000028aa         ja         loc_2e20

00000000000028b0         xor        ebx, ebx
00000000000028b2         jmp        loc_28d7
00000000000028b4         align      8

                     loc_28b8:
00000000000028b8         test       edi, edi                                    ; CODE XREF=human_readable+736
00000000000028ba         setne      dil
00000000000028be         movzx      edi, dil

                     loc_28c2:
00000000000028c2         add        ebx, 0x1                                    ; CODE XREF=human_readable+752
00000000000028c5         cmp        r8, r10
00000000000028c8         ja         loc_2bdd

00000000000028ce         cmp        ebx, 0x8
00000000000028d1         je         loc_2e78

                     loc_28d7:
00000000000028d7         mov        rax, rsi                                    ; CODE XREF=human_readable+658
00000000000028da         xor        edx, edx
00000000000028dc         mov        esi, edi
00000000000028de         div        r8
00000000000028e1         sar        esi, 0x1
00000000000028e3         mov        r10, rax
00000000000028e6         lea        eax, dword [rdx+rdx*4]
00000000000028e9         xor        edx, edx
00000000000028eb         lea        eax, dword [r9+rax*2]
00000000000028ef         div        r11d
00000000000028f2         lea        edx, dword [rsi+rdx*2]
00000000000028f5         mov        r9d, eax
00000000000028f8         mov        rsi, r10
00000000000028fb         add        edi, edx
00000000000028fd         cmp        r11d, edx
0000000000002900         ja         loc_28b8

0000000000002902         cmp        r11d, edi
0000000000002905         setb       dil
0000000000002909         movzx      edi, dil
000000000000290d         add        edi, 0x2
0000000000002910         jmp        loc_28c2
0000000000002912         align      8

                     loc_2918:
0000000000002918         cmp        r15d, 0x1                                   ; CODE XREF=human_readable+302
000000000000291c         je         loc_292c

000000000000291e         fld        tword [dword_675c+4]                        ; 0x6760
0000000000002924         fucomip    st1
0000000000002926         ja         loc_2bb0

                     loc_292c:
000000000000292c         sub        rsp, 0x10                                   ; CODE XREF=human_readable+764, human_readable+1443
0000000000002930         lea        rcx, qword [a0lf]                           ; "%.0Lf"
0000000000002937         mov        esi, 0x1
000000000000293c         mov        rbx, qword [rsp+0xd8+var_C8]
0000000000002941         mov        rdx, 0xffffffffffffffff
0000000000002948         xor        eax, eax
000000000000294a         fstp       tword [rsp+0xd8+var_D8]
000000000000294d         xor        ebp, ebp
000000000000294f         mov        rdi, rbx
0000000000002952         call       j___sprintf_chk                             ; __sprintf_chk
0000000000002957         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
000000000000295a         mov        ebx, 0xffffffff
000000000000295f         call       j_strlen                                    ; strlen
0000000000002964         pop        rsi
0000000000002965         pop        rdi
0000000000002966         mov        r14, rax
0000000000002969         jmp        loc_2980
000000000000296b         align      16

                     loc_2970:
0000000000002970         fstp       st0                                         ; CODE XREF=human_readable+486
0000000000002972         jmp        loc_2980
0000000000002974         align      8

                     loc_2978:
0000000000002978         fstp       st0                                         ; CODE XREF=human_readable+502
000000000000297a         nop        word [rax+rax]

                     loc_2980:
0000000000002980         mov        r15, qword [rsp+0xc8+var_C0]                ; CODE XREF=human_readable+841, human_readable+850, human_readable+1919
0000000000002985         mov        rsi, qword [rsp+0xc8+var_C8]                ; argument "__src" for method j_memmove
0000000000002989         mov        rdx, r14                                    ; argument "__n" for method j_memmove
000000000000298c         sub        r15, r14
000000000000298f         sub        r14, rbp
0000000000002992         mov        rdi, r15                                    ; argument "__dest" for method j_memmove
0000000000002995         call       j_memmove                                   ; memmove
000000000000299a         mov        r8, r14
000000000000299d         add        r8, r15

                     loc_29a0:
00000000000029a0         test       r12b, 0x4                                   ; CODE XREF=human_readable+1702, human_readable+2127
00000000000029a4         jne        loc_2a88

                     loc_29aa:
00000000000029aa         test       r12b, 0x80                                  ; CODE XREF=human_readable+1343, human_readable+2562
00000000000029ae         je         loc_2a27

00000000000029b0         cmp        ebx, 0xffffffff
00000000000029b3         je         loc_2cd0

                     loc_29b9:
00000000000029b9         mov        eax, r12d                                   ; CODE XREF=human_readable+1748, human_readable+1762, human_readable+2148
00000000000029bc         and        eax, 0x100
00000000000029c1         mov        ecx, eax
00000000000029c3         or         ecx, ebx
00000000000029c5         je         loc_2a27

00000000000029c7         and        r12d, 0x40
00000000000029cb         jne        loc_2b68

                     loc_29d1:
00000000000029d1         test       ebx, ebx                                    ; CODE XREF=human_readable+1375
00000000000029d3         je         loc_3006

00000000000029d9         cmp        ebx, 0x1
00000000000029dc         jne        loc_29ec

00000000000029de         mov        r9d, dword [rsp+0xc8+var_98]
00000000000029e3         test       r9d, r9d
00000000000029e6         je         loc_2e30

                     loc_29ec:
00000000000029ec         lea        rcx, qword [power_letter]                   ; power_letter, CODE XREF=human_readable+956
00000000000029f3         movsxd     rbx, ebx
00000000000029f6         mov        rdi, qword [rsp+0xc8+var_C0]
00000000000029fb         test       eax, eax
00000000000029fd         movzx      ecx, byte [rcx+rbx]
0000000000002a01         lea        rdx, qword [rdi+1]
0000000000002a05         mov        byte [rdi], cl
0000000000002a07         je         loc_2e44

0000000000002a0d         mov        r8d, dword [rsp+0xc8+var_98]
0000000000002a12         test       r8d, r8d
0000000000002a15         jne        loc_2bd0

                     loc_2a1b:
0000000000002a1b         lea        rax, qword [rdx+1]                          ; CODE XREF=human_readable+1464, human_readable+2078, human_readable+2541
0000000000002a1f         mov        byte [rdx], 0x42
0000000000002a22         mov        qword [rsp+0xc8+var_C0], rax

                     loc_2a27:
0000000000002a27         mov        rax, qword [rsp+0xc8+var_C0]                ; CODE XREF=human_readable+910, human_readable+933, human_readable+2089, human_readable+2547
0000000000002a2c         mov        rcx, qword [rsp+0xc8+var_40]
0000000000002a34         xor        rcx, qword [fs:0x28]
0000000000002a3d         mov        byte [rax], 0x0
0000000000002a40         mov        rax, r15
0000000000002a43         jne        loc_2fdb

0000000000002a49         add        rsp, 0x98
0000000000002a50         pop        rbx
0000000000002a51         pop        rbp
0000000000002a52         pop        r12
0000000000002a54         pop        r13
0000000000002a56         pop        r14
0000000000002a58         pop        r15
0000000000002a5a         ret
                        ; endp
0000000000002a5b         align      32

                     loc_2a60:
0000000000002a60         mov        rsi, rbx                                    ; CODE XREF=human_readable+223
0000000000002a63         xor        edx, edx
0000000000002a65         imul       rsi, rax
0000000000002a69         mov        rax, rsi
0000000000002a6c         div        rdi
0000000000002a6f         cmp        rax, rbx
0000000000002a72         jne        loc_2705

0000000000002a78         xor        edi, edi
0000000000002a7a         xor        r9d, r9d
0000000000002a7d         jmp        loc_2889
0000000000002a82         align      8

                     loc_2a88:
0000000000002a88         mov        r14, r8                                     ; CODE XREF=human_readable+900
0000000000002a8b         mov        rdi, r13                                    ; argument "__s" for method j_strlen
0000000000002a8e         mov        qword [rsp+0xc8+var_80], r8
0000000000002a93         sub        r14, r15
0000000000002a96         mov        rbp, 0xffffffffffffffff
0000000000002a9d         call       j_strlen                                    ; strlen
0000000000002aa2         lea        rdi, qword [rsp+0xc8+var_78]
0000000000002aa7         mov        ecx, 0x29
0000000000002aac         mov        rdx, r14
0000000000002aaf         mov        rsi, r15
0000000000002ab2         mov        qword [rsp+0xc8+var_88], rax
0000000000002ab7         mov        qword [rsp+0xc8+var_B0], rdi
0000000000002abc         call       j___memcpy_chk                              ; __memcpy_chk
0000000000002ac1         mov        ecx, r12d
0000000000002ac4         mov        dword [rsp+0xc8+var_A8], ebx
0000000000002ac8         mov        r12, r14
0000000000002acb         mov        rbx, r13
0000000000002ace         mov        r8, qword [rsp+0xc8+var_80]
0000000000002ad3         mov        r15, qword [rsp+0xc8+var_90]
0000000000002ad8         mov        r13, qword [rsp+0xc8+var_88]
0000000000002add         mov        r14d, ecx
0000000000002ae0         jmp        loc_2b22
0000000000002ae2         align      8

                     loc_2ae8:
0000000000002ae8         mov        rax, qword [rsp+0xc8+var_B0]                ; CODE XREF=human_readable+1306
0000000000002aed         sub        r12, rbp
0000000000002af0         sub        r8, rbp
0000000000002af3         mov        rdi, r8                                     ; argument "__dest" for method j_memcpy
0000000000002af6         mov        rdx, rbp                                    ; argument "__n" for method j_memcpy
0000000000002af9         lea        rsi, qword [rax+r12]                        ; argument "__src" for method j_memcpy
0000000000002afd         call       j_memcpy                                    ; memcpy
0000000000002b02         test       r12, r12
0000000000002b05         mov        r8, rax
0000000000002b08         je         loc_3018

0000000000002b0e         sub        r8, r13
0000000000002b11         mov        rdx, r13                                    ; argument "__n" for method j_memcpy
0000000000002b14         mov        rsi, rbx                                    ; argument "__src" for method j_memcpy
0000000000002b17         mov        rdi, r8                                     ; argument "__dest" for method j_memcpy
0000000000002b1a         call       j_memcpy                                    ; memcpy
0000000000002b1f         mov        r8, rax

                     loc_2b22:
0000000000002b22         movzx      eax, byte [r15]                             ; CODE XREF=human_readable+1216
0000000000002b26         test       al, al
0000000000002b28         je         loc_2b37

0000000000002b2a         cmp        al, 0x7f
0000000000002b2c         movzx      ebp, al
0000000000002b2f         cmovae     rbp, r12
0000000000002b33         add        r15, 0x1

                     loc_2b37:
0000000000002b37         cmp        rbp, r12                                    ; CODE XREF=human_readable+1288
0000000000002b3a         jbe        loc_2ae8

0000000000002b3c         mov        eax, r14d
0000000000002b3f         mov        r15, r8
0000000000002b42         mov        r14, r12
0000000000002b45         mov        rsi, qword [rsp+0xc8+var_B0]                ; argument "__src" for method j_memcpy
0000000000002b4a         sub        r15, r14
0000000000002b4d         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
0000000000002b50         mov        rdi, r15                                    ; argument "__dest" for method j_memcpy
0000000000002b53         mov        ebx, dword [rsp+0xc8+var_A8]
0000000000002b57         mov        r12d, eax
0000000000002b5a         call       j_memcpy                                    ; memcpy
0000000000002b5f         jmp        loc_29aa
0000000000002b64         align      8

                     loc_2b68:
0000000000002b68         mov        rcx, qword [rsp+0xc8+var_C8]                ; CODE XREF=human_readable+939
0000000000002b6c         lea        rdi, qword [rcx+0x288]
0000000000002b73         mov        byte [rcx+0x287], 0x20
0000000000002b7a         mov        qword [rsp+0xc8+var_C0], rdi
0000000000002b7f         jmp        loc_29d1
0000000000002b84         align      8

                     loc_2b88:
0000000000002b88         sub        rsp, 0x10                                   ; CODE XREF=human_readable+401
0000000000002b8c         mov        edi, r15d
0000000000002b8f         fld        st0
0000000000002b91         fstp       tword [rsp+0xd8+var_D8]
0000000000002b94         fstp       tword [rsp+0xd8+var_A8]
0000000000002b98         call       adjust_value.part.0                         ; adjust_value.part.0
0000000000002b9d         pop        rax
0000000000002b9e         pop        rdx
0000000000002b9f         fld        tword [rsp+0xc8+var_A8]
0000000000002ba3         jmp        loc_27b9
0000000000002ba8         align      16

                     loc_2bb0:
0000000000002bb0         sub        rsp, 0x10                                   ; CODE XREF=human_readable+774
0000000000002bb4         mov        edi, r15d
0000000000002bb7         fstp       tword [rsp+0xd8+var_D8]
0000000000002bba         call       adjust_value.part.0                         ; adjust_value.part.0
0000000000002bbf         pop        r8
0000000000002bc1         pop        r9
0000000000002bc3         jmp        loc_292c
0000000000002bc8         align      16

                     loc_2bd0:
0000000000002bd0         lea        rdx, qword [rdi+2]                          ; CODE XREF=human_readable+1013
0000000000002bd4         mov        byte [rdi+1], 0x69
0000000000002bd8         jmp        loc_2a1b

                     loc_2bdd:
0000000000002bdd         cmp        r10, 0x9                                    ; CODE XREF=human_readable+680
0000000000002be1         ja         loc_2e78

0000000000002be7         cmp        r15d, 0x1
0000000000002beb         je         loc_2ea2

0000000000002bf1         test       r15d, r15d
0000000000002bf4         sete       dl
0000000000002bf7         test       edi, edi
0000000000002bf9         setg       r8b
0000000000002bfd         and        edx, r8d

                     loc_2c00:
0000000000002c00         test       dl, dl                                      ; CODE XREF=human_readable+2191
0000000000002c02         je         loc_2e89

0000000000002c08         lea        r9d, dword [rax+1]
0000000000002c0c         cmp        r9d, 0xa
0000000000002c10         je         loc_2f11

                     loc_2c16:
0000000000002c16         add        r9d, 0x30                                   ; CODE XREF=human_readable+2155

                     loc_2c1a:
0000000000002c1a         mov        rax, qword [rsp+0xc8+var_C8]                ; CODE XREF=human_readable+2173
0000000000002c1e         lea        r8, qword [rax+0x286]
0000000000002c25         mov        byte [rax+0x286], r9b
0000000000002c2c         mov        eax, ebp
0000000000002c2e         sub        r8, rbp
0000000000002c31         cmp        ebp, 0x8
0000000000002c34         jae        loc_2ec1

0000000000002c3a         test       bpl, 0x4
0000000000002c3e         jne        loc_2fc6

0000000000002c44         test       eax, eax
0000000000002c46         je         loc_2c57

0000000000002c48         movzx      edx, byte [r14]
0000000000002c4c         test       al, 0x2
0000000000002c4e         mov        byte [r8], dl
0000000000002c51         jne        loc_2fe0

                     loc_2c57:
0000000000002c57         xor        edi, edi                                    ; CODE XREF=human_readable+1574, human_readable+2255, human_readable+2284, human_readable+2389, human_readable+2486, human_readable+2508
0000000000002c59         xor        r9d, r9d
0000000000002c5c         nop        dword [rax]

                     loc_2c60:
0000000000002c60         cmp        r15d, 0x1                                   ; CODE XREF=human_readable+633, human_readable+2055, human_readable+2141, human_readable+2204
0000000000002c64         je         loc_2de0

0000000000002c6a         test       r15d, r15d
0000000000002c6d         jne        loc_2c90

0000000000002c6f         add        edi, r9d
0000000000002c72         test       edi, edi
0000000000002c74         jle        loc_2c90

                     loc_2c76:
0000000000002c76         add        rsi, 0x1                                    ; CODE XREF=human_readable+2009
0000000000002c7a         test       ecx, ecx
0000000000002c7c         je         loc_2c90

0000000000002c7e         mov        eax, dword [rsp+0xc8+var_94]
0000000000002c82         cmp        rax, rsi
0000000000002c85         je         loc_2e50

0000000000002c8b         nop        dword [rax+rax]

                     loc_2c90:
0000000000002c90         mov        r15, r8                                     ; CODE XREF=human_readable+1613, human_readable+1620, human_readable+1628, human_readable+2015, human_readable+2099
0000000000002c93         movabs     rcx, 0xcccccccccccccccd
0000000000002c9d         nop        dword [rax]

                     loc_2ca0:
0000000000002ca0         mov        rax, rsi                                    ; CODE XREF=human_readable+1700
0000000000002ca3         sub        r15, 0x1
0000000000002ca7         mul        rcx
0000000000002caa         shr        rdx, 0x3
0000000000002cae         lea        rax, qword [rdx+rdx*4]
0000000000002cb2         add        rax, rax
0000000000002cb5         sub        rsi, rax
0000000000002cb8         add        esi, 0x30
0000000000002cbb         test       rdx, rdx
0000000000002cbe         mov        byte [r15], sil
0000000000002cc1         mov        rsi, rdx
0000000000002cc4         jne        loc_2ca0

0000000000002cc6         jmp        loc_29a0
0000000000002ccb         align      16

                     loc_2cd0:
0000000000002cd0         mov        rcx, qword [rsp+0xc8+var_B8]                ; CODE XREF=human_readable+915
0000000000002cd5         cmp        rcx, 0x1
0000000000002cd9         jbe        loc_2e82

0000000000002cdf         mov        edx, dword [rsp+0xc8+var_94]
0000000000002ce3         mov        ebx, 0x1
0000000000002ce8         mov        eax, 0x1

                     loc_2ced:
0000000000002ced         imul       rax, rdx                                    ; CODE XREF=human_readable+1760
0000000000002cf1         cmp        rcx, rax
0000000000002cf4         jbe        loc_29b9

0000000000002cfa         add        ebx, 0x1
0000000000002cfd         cmp        ebx, 0x8
0000000000002d00         jne        loc_2ced

0000000000002d02         jmp        loc_29b9
0000000000002d07         align      16

                     loc_2d10:
0000000000002d10         sub        rsp, 0x10                                   ; CODE XREF=human_readable+387
0000000000002d14         lea        rcx, qword [a1lf]                           ; "%.1Lf"
0000000000002d1b         mov        rdx, 0xffffffffffffffff
0000000000002d22         fld        st0
0000000000002d24         fstp       tword [rsp+0xd8+var_D8]
0000000000002d27         mov        r14, qword [rsp+0xd8+var_C8]
0000000000002d2c         mov        esi, 0x1
0000000000002d31         xor        eax, eax
0000000000002d33         mov        rdi, r14
0000000000002d36         fstp       tword [rsp+0xd8+var_A8]
0000000000002d3a         call       j___sprintf_chk                             ; __sprintf_chk
0000000000002d3f         mov        rdi, r14                                    ; argument "__s" for method j_strlen
0000000000002d42         call       j_strlen                                    ; strlen
0000000000002d47         mov        r14, rax
0000000000002d4a         pop        rax
0000000000002d4b         pop        rdx
0000000000002d4c         cmp        r14, qword [rsp+0xc8+var_B0]
0000000000002d51         fld        tword [rsp+0xc8+var_A8]
0000000000002d55         jbe        loc_2802

0000000000002d5b         fld        dword [dword_675c]                          ; dword_675c
0000000000002d61         fmul       st1, st0

                     loc_2d63:
0000000000002d63         fdivp      st1                                         ; CODE XREF=human_readable+526, human_readable+1944, human_readable+1972
0000000000002d65         sub        rsp, 0x10
0000000000002d69         lea        rcx, qword [a0lf]                           ; "%.0Lf"
0000000000002d70         mov        r14, qword [rsp+0xd8+var_C8]
0000000000002d75         mov        rdx, 0xffffffffffffffff
0000000000002d7c         mov        esi, 0x1
0000000000002d81         xor        eax, eax
0000000000002d83         xor        ebp, ebp
0000000000002d85         mov        rdi, r14
0000000000002d88         fstp       tword [rsp+0xd8+var_D8]
0000000000002d8b         call       j___sprintf_chk                             ; __sprintf_chk
0000000000002d90         mov        rdi, r14                                    ; argument "__s" for method j_strlen
0000000000002d93         call       j_strlen                                    ; strlen
0000000000002d98         pop        r10
0000000000002d9a         mov        r14, rax
0000000000002d9d         pop        r11
0000000000002d9f         jmp        loc_2980
0000000000002da4         align      8

                     loc_2da8:
0000000000002da8         fld        dword [dword_675c]                          ; dword_675c, CODE XREF=human_readable+476
0000000000002dae         fmul       st1, st0

                     loc_2db0:
0000000000002db0         fld        tword [dword_675c+4]                        ; 0x6760, CODE XREF=human_readable+520
0000000000002db6         fucomip    st2
0000000000002db8         jbe        loc_2d63

0000000000002dba         fstp       dword [rsp+0xc8+var_B0]
0000000000002dbe         sub        rsp, 0x10
0000000000002dc2         mov        edi, r15d
0000000000002dc5         fstp       tword [rsp+0xd8+var_D8]
0000000000002dc8         call       adjust_value.part.0                         ; adjust_value.part.0
0000000000002dcd         pop        rbp
0000000000002dce         pop        r14
0000000000002dd0         fld        dword [rsp+0xc8+var_B0]
0000000000002dd4         jmp        loc_2d63
0000000000002dd6         align      32

                     loc_2de0:
0000000000002de0         mov        rax, rsi                                    ; CODE XREF=human_readable+1604
0000000000002de3         movsxd     rdi, edi
0000000000002de6         and        eax, 0x1
0000000000002de9         add        rax, rdi
0000000000002dec         setne      al
0000000000002def         movzx      eax, al
0000000000002df2         add        r9d, eax
0000000000002df5         cmp        r9d, 0x5
0000000000002df9         jg         loc_2c76

0000000000002dff         jmp        loc_2c90
0000000000002e04         align      8

                     loc_2e08:
0000000000002e08         setb       dil                                         ; CODE XREF=human_readable+602
0000000000002e0c         movzx      edi, dil
0000000000002e10         add        edi, 0x2
0000000000002e13         jmp        loc_2889
0000000000002e18         align      32

                     loc_2e20:
0000000000002e20         mov        r8, qword [rsp+0xc8+var_C0]                 ; CODE XREF=human_readable+650
0000000000002e25         xor        ebx, ebx
0000000000002e27         jmp        loc_2c60
0000000000002e2c         align      16

                     loc_2e30:
0000000000002e30         mov        rbx, qword [rsp+0xc8+var_C0]                ; CODE XREF=human_readable+966
0000000000002e35         test       eax, eax
0000000000002e37         lea        rdx, qword [rbx+1]
0000000000002e3b         mov        byte [rbx], 0x6b
0000000000002e3e         jne        loc_2a1b

                     loc_2e44:
0000000000002e44         mov        qword [rsp+0xc8+var_C0], rdx                ; CODE XREF=human_readable+999
0000000000002e49         jmp        loc_2a27
0000000000002e4e         align      16

                     loc_2e50:
0000000000002e50         cmp        ebx, 0x8                                    ; CODE XREF=human_readable+1637
0000000000002e53         je         loc_2c90

0000000000002e59         add        ebx, 0x1
0000000000002e5c         test       r12b, 0x8
0000000000002e60         je         loc_2f22

                     loc_2e66:
0000000000002e66         lea        r15, qword [r8-1]                           ; CODE XREF=human_readable+2338, human_readable+2353, human_readable+2371, human_readable+2437, human_readable+2465, human_readable+2529
0000000000002e6a         mov        byte [r8-1], 0x31
0000000000002e6f         jmp        loc_29a0
0000000000002e74         align      8

                     loc_2e78:
0000000000002e78         mov        r8, qword [rsp+0xc8+var_C0]                 ; CODE XREF=human_readable+689, human_readable+1473
0000000000002e7d         jmp        loc_2c60

                     loc_2e82:
0000000000002e82         xor        ebx, ebx                                    ; CODE XREF=human_readable+1721
0000000000002e84         jmp        loc_29b9

                     loc_2e89:
0000000000002e89         test       eax, eax                                    ; CODE XREF=human_readable+1506
0000000000002e8b         jne        loc_2c16

                     loc_2e91:
0000000000002e91         test       r12b, 0x8                                   ; CODE XREF=human_readable+2301
0000000000002e95         jne        loc_2eb4

0000000000002e97         mov        r9d, 0x30
0000000000002e9d         jmp        loc_2c1a

                     loc_2ea2:
0000000000002ea2         mov        edx, eax                                    ; CODE XREF=human_readable+1483
0000000000002ea4         and        edx, 0x1
0000000000002ea7         add        edx, edi
0000000000002ea9         cmp        edx, 0x2
0000000000002eac         setg       dl
0000000000002eaf         jmp        loc_2c00

                     loc_2eb4:
0000000000002eb4         mov        r8, qword [rsp+0xc8+var_C0]                 ; CODE XREF=human_readable+2165
0000000000002eb9         xor        r9d, r9d
0000000000002ebc         jmp        loc_2c60

                     loc_2ec1:
0000000000002ec1         mov        rax, qword [r14]                            ; CODE XREF=human_readable+1556
0000000000002ec4         mov        r9, r14
0000000000002ec7         mov        qword [r8], rax
0000000000002eca         mov        eax, ebp
0000000000002ecc         mov        rdx, qword [r14+rax-8]
0000000000002ed1         mov        qword [r8+rax-8], rdx
0000000000002ed6         lea        rdx, qword [r8+8]
0000000000002eda         mov        rax, r8
0000000000002edd         and        rdx, 0xfffffffffffffff8
0000000000002ee1         sub        rax, rdx
0000000000002ee4         sub        r9, rax
0000000000002ee7         add        eax, ebp
0000000000002ee9         and        eax, 0xfffffff8
0000000000002eec         cmp        eax, 0x8
0000000000002eef         jb         loc_2c57

0000000000002ef5         and        eax, 0xfffffff8
0000000000002ef8         xor        edi, edi

                     loc_2efa:
0000000000002efa         mov        r10d, edi                                   ; CODE XREF=human_readable+2282
0000000000002efd         add        edi, 0x8
0000000000002f00         mov        r11, qword [r9+r10]
0000000000002f04         cmp        edi, eax
0000000000002f06         mov        qword [rdx+r10], r11
0000000000002f0a         jb         loc_2efa

0000000000002f0c         jmp        loc_2c57

                     loc_2f11:
0000000000002f11         lea        rsi, qword [r10+1]                          ; CODE XREF=human_readable+1520
0000000000002f15         cmp        rsi, 0xa
0000000000002f19         je         loc_2f70

0000000000002f1b         xor        edi, edi
0000000000002f1d         jmp        loc_2e91

                     loc_2f22:
0000000000002f22         mov        rax, rbp                                    ; CODE XREF=human_readable+2112
0000000000002f25         mov        byte [r8-1], 0x30
0000000000002f2a         not        rax
0000000000002f2d         add        r8, rax
0000000000002f30         cmp        ebp, 0x8
0000000000002f33         mov        eax, ebp
0000000000002f35         jae        loc_2f7a

0000000000002f37         and        ebp, 0x4
0000000000002f3a         jne        loc_2ff1

0000000000002f40         test       eax, eax
0000000000002f42         je         loc_2e66

0000000000002f48         movzx      edx, byte [r14]
0000000000002f4c         test       al, 0x2
0000000000002f4e         mov        byte [r8], dl
0000000000002f51         je         loc_2e66

0000000000002f57         movzx      edx, word [r14+rax-2]
0000000000002f5d         mov        word [r8+rax-2], dx
0000000000002f63         jmp        loc_2e66
0000000000002f68         align      16

                     loc_2f70:
0000000000002f70         mov        r8, qword [rsp+0xc8+var_C0]                 ; CODE XREF=human_readable+2297
0000000000002f75         jmp        loc_2c57

                     loc_2f7a:
0000000000002f7a         mov        rax, qword [r14]                            ; CODE XREF=human_readable+2325
0000000000002f7d         lea        rcx, qword [r8+8]
0000000000002f81         and        rcx, 0xfffffffffffffff8
0000000000002f85         mov        qword [r8], rax
0000000000002f88         mov        eax, ebp
0000000000002f8a         mov        rdx, qword [r14+rax-8]
0000000000002f8f         mov        qword [r8+rax-8], rdx
0000000000002f94         mov        rax, r8
0000000000002f97         sub        rax, rcx
0000000000002f9a         sub        r14, rax
0000000000002f9d         add        eax, ebp
0000000000002f9f         and        eax, 0xfffffff8
0000000000002fa2         cmp        eax, 0x8
0000000000002fa5         jb         loc_2e66

0000000000002fab         and        eax, 0xfffffff8
0000000000002fae         xor        edx, edx

                     loc_2fb0:
0000000000002fb0         mov        esi, edx                                    ; CODE XREF=human_readable+2463
0000000000002fb2         add        edx, 0x8
0000000000002fb5         mov        rdi, qword [r14+rsi]
0000000000002fb9         cmp        edx, eax
0000000000002fbb         mov        qword [rcx+rsi], rdi
0000000000002fbf         jb         loc_2fb0

0000000000002fc1         jmp        loc_2e66

                     loc_2fc6:
0000000000002fc6         mov        edx, dword [r14]                            ; CODE XREF=human_readable+1566
0000000000002fc9         mov        dword [r8], edx
0000000000002fcc         mov        edx, dword [r14+rax-4]
0000000000002fd1         mov        dword [r8+rax-4], edx
0000000000002fd6         jmp        loc_2c57

                     loc_2fdb:
0000000000002fdb         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=human_readable+1059
                        ; endp

                     loc_2fe0:
0000000000002fe0         movzx      edx, word [r14+rax-2]                       ; CODE XREF=human_readable+1585
0000000000002fe6         mov        word [r8+rax-2], dx
0000000000002fec         jmp        loc_2c57

                     loc_2ff1:
0000000000002ff1         mov        edx, dword [r14]                            ; CODE XREF=human_readable+2330
0000000000002ff4         mov        dword [r8], edx
0000000000002ff7         mov        edx, dword [r14+rax-4]
0000000000002ffc         mov        dword [r8+rax-4], edx
0000000000003001         jmp        loc_2e66

                     loc_3006:
0000000000003006         test       eax, eax                                    ; CODE XREF=human_readable+947
0000000000003008         mov        rdx, qword [rsp+0xc8+var_C0]
000000000000300d         jne        loc_2a1b

0000000000003013         jmp        loc_2a27

                     loc_3018:
0000000000003018         mov        ebx, dword [rsp+0xc8+var_A8]                ; CODE XREF=human_readable+1256
000000000000301c         mov        r15, rax
000000000000301f         mov        r12d, r14d
0000000000003022         jmp        loc_29aa
0000000000003027         align      16                                          ; End of unwind block (FDE at 0x7690)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56


                     human_options:
0000000000003030         push       r13                                         ; Begin of unwind block (FDE at 0x7738)
0000000000003032         push       r12
0000000000003034         mov        r13, rsi
0000000000003037         push       rbp
0000000000003038         push       rbx
0000000000003039         mov        r12, rdx
000000000000303c         mov        rbx, rdi
000000000000303f         sub        rsp, 0x18
0000000000003043         mov        rax, qword [fs:0x28]
000000000000304c         mov        qword [rsp+0x38+var_30], rax
0000000000003051         xor        eax, eax
0000000000003053         test       rdi, rdi
0000000000003056         je         loc_3170

                     loc_305c:
000000000000305c         xor        ebp, ebp                                    ; CODE XREF=human_options+338, human_options+362
000000000000305e         cmp        byte [rbx], 0x27
0000000000003061         jne        loc_306c

0000000000003063         add        rbx, 0x1
0000000000003067         mov        ebp, 0x4

                     loc_306c:
000000000000306c         lea        rdx, qword [block_size_opts]                ; block_size_opts, CODE XREF=human_options+49
0000000000003073         lea        rsi, qword [block_size_args]                ; block_size_args
000000000000307a         mov        ecx, 0x4
000000000000307f         mov        rdi, rbx
0000000000003082         call       argmatch                                    ; argmatch
0000000000003087         test       eax, eax
0000000000003089         js         loc_30c8

000000000000308b         lea        rdx, qword [block_size_opts]                ; block_size_opts
0000000000003092         cdqe
0000000000003094         mov        qword [r12], 0x1
000000000000309c         or         ebp, dword [rdx+rax*4]
000000000000309f         xor        eax, eax
00000000000030a1         mov        dword [r13], ebp

                     loc_30a5:
00000000000030a5         mov        rcx, qword [rsp+0x38+var_30]                ; CODE XREF=human_options+263, human_options+308, human_options+403, human_options+476
00000000000030aa         xor        rcx, qword [fs:0x28]
00000000000030b3         jne        loc_3211

00000000000030b9         add        rsp, 0x18
00000000000030bd         pop        rbx
00000000000030be         pop        rbp
00000000000030bf         pop        r12
00000000000030c1         pop        r13
00000000000030c3         ret
                        ; endp
00000000000030c4         align      8

                     loc_30c8:
00000000000030c8         lea        r8, qword [aEeggkkmmppttyy]                 ; "eEgGkKmMpPtTyYzZ0", CODE XREF=human_options+89
00000000000030cf         xor        edx, edx
00000000000030d1         mov        rsi, rsp
00000000000030d4         mov        rcx, r12
00000000000030d7         mov        rdi, rbx
00000000000030da         call       xstrtoumax                                  ; xstrtoumax
00000000000030df         test       eax, eax
00000000000030e1         jne        loc_3128

00000000000030e3         movzx      esi, byte [rbx]
00000000000030e6         lea        edx, dword [rsi-0x30]
00000000000030e9         cmp        dl, 0x9
00000000000030ec         jbe        loc_3118

00000000000030ee         mov        rcx, qword [rsp+0x38+var_38]
00000000000030f2         cmp        rbx, rcx
00000000000030f5         jne        loc_3109

00000000000030f7         jmp        loc_31d0
00000000000030fc         align      256

                     loc_3100:
0000000000003100         cmp        rbx, rcx                                    ; CODE XREF=human_options+230
0000000000003103         je         loc_31d0

                     loc_3109:
0000000000003109         add        rbx, 0x1                                    ; CODE XREF=human_options+197
000000000000310d         movzx      edi, byte [rbx]
0000000000003110         lea        edx, dword [rdi-0x30]
0000000000003113         cmp        dl, 0x9
0000000000003116         ja         loc_3100

                     loc_3118:
0000000000003118         mov        rdx, qword [r12]                            ; CODE XREF=human_options+188, human_options+429, human_options+450
000000000000311c         mov        dword [r13], ebp
0000000000003120         jmp        loc_3134
0000000000003122         align      8

                     loc_3128:
0000000000003128         mov        rdx, qword [r12]                            ; CODE XREF=human_options+177
000000000000312c         mov        dword [r13], 0x0

                     loc_3134:
0000000000003134         test       rdx, rdx                                    ; CODE XREF=human_options+240
0000000000003137         jne        loc_30a5

000000000000313d         lea        rdi, qword [aPosixlycorrect]                ; argument "__name" for method j_getenv, "POSIXLY_CORRECT"
0000000000003144         call       j_getenv                                    ; getenv
0000000000003149         cmp        rax, 0x1
000000000000314d         sbb        rax, rax
0000000000003150         and        eax, 0x200
0000000000003155         add        rax, 0x200
000000000000315b         mov        qword [r12], rax
000000000000315f         mov        eax, 0x4
0000000000003164         jmp        loc_30a5
0000000000003169         align      16

                     loc_3170:
0000000000003170         lea        rdi, qword [aBlocksize]                     ; argument "__name" for method j_getenv, "BLOCK_SIZE", CODE XREF=human_options+38
0000000000003177         call       j_getenv                                    ; getenv
000000000000317c         test       rax, rax
000000000000317f         mov        rbx, rax
0000000000003182         jne        loc_305c

0000000000003188         lea        rdi, qword [aBlocksize_66fc]                ; argument "__name" for method j_getenv, "BLOCKSIZE"
000000000000318f         call       j_getenv                                    ; getenv
0000000000003194         test       rax, rax
0000000000003197         mov        rbx, rax
000000000000319a         jne        loc_305c

00000000000031a0         lea        rdi, qword [aPosixlycorrect]                ; argument "__name" for method j_getenv, "POSIXLY_CORRECT"
00000000000031a7         call       j_getenv                                    ; getenv
00000000000031ac         test       rax, rax
00000000000031af         je         loc_31fa

00000000000031b1         mov        qword [r12], 0x200
00000000000031b9         xor        eax, eax
00000000000031bb         mov        dword [r13], 0x0
00000000000031c3         jmp        loc_30a5
00000000000031c8         align      16

                     loc_31d0:
00000000000031d0         cmp        byte [rcx-1], 0x42                          ; CODE XREF=human_options+199, human_options+211
00000000000031d4         je         loc_31e8

00000000000031d6         or         bpl, 0x80

                     loc_31da:
00000000000031da         or         ebp, 0x20                                   ; CODE XREF=human_options+456
00000000000031dd         jmp        loc_3118
00000000000031e2         align      8

                     loc_31e8:
00000000000031e8         or         ebp, 0x180                                  ; CODE XREF=human_options+420
00000000000031ee         cmp        byte [rcx-2], 0x69
00000000000031f2         jne        loc_3118

00000000000031f8         jmp        loc_31da

                     loc_31fa:
00000000000031fa         mov        qword [r12], 0x400                          ; CODE XREF=human_options+383
0000000000003202         xor        eax, eax
0000000000003204         mov        dword [r13], 0x0
000000000000320c         jmp        loc_30a5

                     loc_3211:
0000000000003211         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=human_options+131
                        ; endp
0000000000003216         align      32                                          ; End of unwind block (FDE at 0x7738)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000003220         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7774), CODE XREF=main+46
0000000000003223         push       rbx
0000000000003224         je         loc_329d

0000000000003226         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
000000000000322b         mov        rbx, rdi
000000000000322e         call       j_strrchr                                   ; strrchr
0000000000003233         test       rax, rax
0000000000003236         je         loc_328d

0000000000003238         lea        r8, qword [rax+1]
000000000000323c         mov        rdx, r8
000000000000323f         sub        rdx, rbx
0000000000003242         cmp        rdx, 0x6
0000000000003246         jle        loc_328d

0000000000003248         lea        rsi, qword [rax-6]
000000000000324c         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000003253         mov        ecx, 0x7
0000000000003258         rep  cmpsb byte [rsi], byte [rdi]
000000000000325a         seta       dl
000000000000325d         sbb        dl, 0x0
0000000000003260         test       dl, dl
0000000000003262         jne        loc_328d

0000000000003264         lea        rdi, qword [aLibs+8]                        ; 0x67b0
000000000000326b         mov        ecx, 0x3
0000000000003270         mov        rsi, r8
0000000000003273         mov        rbx, r8
0000000000003276         rep  cmpsb byte [rsi], byte [rdi]
0000000000003278         seta       dl
000000000000327b         sbb        dl, 0x0
000000000000327e         test       dl, dl
0000000000003280         jne        loc_328d

0000000000003282         lea        rbx, qword [rax+4]
0000000000003286         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_328d:
000000000000328d         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
0000000000003294         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
000000000000329b         pop        rbx
000000000000329c         ret
                        ; endp

                     loc_329d:
000000000000329d         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
00000000000032a4         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
00000000000032ab         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
00000000000032b0         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
00000000000032b5         call       j_fwrite                                    ; fwrite
00000000000032ba         call       j_abort                                     ; abort
                        ; endp
00000000000032bf         align      64                                          ; End of unwind block (FDE at 0x7774)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
00000000000032c0         push       rbp                                         ; Begin of unwind block (FDE at 0x7794), CODE XREF=sub_3af0+2597, sub_3af0+2619
00000000000032c1         push       rbx
00000000000032c2         mov        rbp, rdi
00000000000032c5         mov        ebx, esi
00000000000032c7         sub        rsp, 0x8
00000000000032cb         call       locale_charset                              ; locale_charset
00000000000032d0         movzx      edx, byte [rax]
00000000000032d3         and        edx, 0xffffffdf
00000000000032d6         cmp        dl, 0x55
00000000000032d9         je         loc_3350

00000000000032db         cmp        dl, 0x47
00000000000032de         je         loc_3300

                     loc_32e0:
00000000000032e0         lea        rax, qword [aLibs+27]                       ; 0x67c3, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
00000000000032e7         lea        rdx, qword [aLibs+29]                       ; 0x67c5
00000000000032ee         cmp        ebx, 0x9
00000000000032f1         cmovne     rax, rdx
00000000000032f5         add        rsp, 0x8
00000000000032f9         pop        rbx
00000000000032fa         pop        rbp
00000000000032fb         ret
                        ; endp
00000000000032fc         align      256

                     loc_3300:
0000000000003300         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
0000000000003304         and        edx, 0xffffffdf
0000000000003307         cmp        dl, 0x42
000000000000330a         jne        loc_32e0

000000000000330c         cmp        byte [rax+2], 0x31
0000000000003310         jne        loc_32e0

0000000000003312         cmp        byte [rax+3], 0x38
0000000000003316         jne        loc_32e0

0000000000003318         cmp        byte [rax+4], 0x30
000000000000331c         jne        loc_32e0

000000000000331e         cmp        byte [rax+5], 0x33
0000000000003322         jne        loc_32e0

0000000000003324         cmp        byte [rax+6], 0x30
0000000000003328         jne        loc_32e0

000000000000332a         cmp        byte [rax+7], 0x0
000000000000332e         jne        loc_32e0

0000000000003330         cmp        byte [rbp], 0x60
0000000000003334         lea        rax, qword [aLibs+20]                       ; 0x67bc
000000000000333b         lea        rdx, qword [aLibs+24]                       ; 0x67c0
0000000000003342         cmovne     rax, rdx
0000000000003346         add        rsp, 0x8
000000000000334a         pop        rbx
000000000000334b         pop        rbp
000000000000334c         ret
                        ; endp
000000000000334d         align      16

                     loc_3350:
0000000000003350         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
0000000000003354         and        edx, 0xffffffdf
0000000000003357         cmp        dl, 0x54
000000000000335a         jne        loc_32e0

000000000000335c         movzx      edx, byte [rax+2]
0000000000003360         and        edx, 0xffffffdf
0000000000003363         cmp        dl, 0x46
0000000000003366         jne        loc_32e0

000000000000336c         cmp        byte [rax+3], 0x2d
0000000000003370         jne        loc_32e0

0000000000003376         cmp        byte [rax+4], 0x38
000000000000337a         jne        loc_32e0

0000000000003380         cmp        byte [rax+5], 0x0
0000000000003384         jne        loc_32e0

000000000000338a         cmp        byte [rbp], 0x60
000000000000338e         lea        rax, qword [aLibs+12]                       ; 0x67b4
0000000000003395         lea        rdx, qword [aLibs+16]                       ; 0x67b8
000000000000339c         cmovne     rax, rdx
00000000000033a0         add        rsp, 0x8
00000000000033a4         pop        rbx
00000000000033a5         pop        rbp
00000000000033a6         ret
                        ; endp
00000000000033a7         align      16                                          ; End of unwind block (FDE at 0x7794)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
00000000000033b0         push       r15                                         ; Begin of unwind block (FDE at 0x77d8), CODE XREF=sub_3af0+1165, sub_3af0+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
00000000000033b2         push       r14
00000000000033b4         mov        r15d, r8d
00000000000033b7         push       r13
00000000000033b9         push       r12
00000000000033bb         mov        r14, rdi
00000000000033be         push       rbp
00000000000033bf         push       rbx
00000000000033c0         mov        ebx, r9d
00000000000033c3         mov        r13, rsi
00000000000033c6         mov        rbp, rcx
00000000000033c9         and        ebx, 0x2
00000000000033cc         sub        rsp, 0xb8
00000000000033d3         mov        rax, qword [rsp+0xe8+arg_0]
00000000000033db         mov        qword [rsp+0xe8+var_D8], rdx
00000000000033e0         mov        dword [rsp+0xe8+var_E0], r8d
00000000000033e5         mov        dword [rsp+0xe8+var_70], r9d
00000000000033ea         mov        qword [rsp+0xe8+var_C8], rax
00000000000033ef         mov        rax, qword [rsp+0xe8+arg_8]
00000000000033f7         mov        qword [rsp+0xe8+var_80], rax
00000000000033fc         mov        rax, qword [rsp+0xe8+arg_10]
0000000000003404         mov        qword [rsp+0xe8+var_88], rax
0000000000003409         mov        rax, qword [fs:0x28]
0000000000003412         mov        qword [rsp+0xe8+var_40], rax
000000000000341a         xor        eax, eax
000000000000341c         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000003421         cmp        r15d, 0xa
0000000000003425         mov        qword [rsp+0xe8+var_90], rax
000000000000342a         ja         loc_45df

0000000000003430         lea        rcx, qword [switch_table_6820]              ; switch_table_6820
0000000000003437         mov        edx, r15d
000000000000343a         movsxd     rax, dword [rcx+rdx*4]
000000000000343e         add        rax, rcx
0000000000003441         jmp        rax                                         ; switch statement using table at 0x6820, with 11 cases, 0x3443,0x4014,0x4070,0x40c5,0x410a,0x4144,0x41ea,0x4224,0x4418

                     loc_3443:
0000000000003443         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_3af0+1318
0000000000003448         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000344d         xor        r12d, r12d
0000000000003450         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003459         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000345e         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_3463:
0000000000003463         lea        rax, qword [aLibs+29]                       ; 0x67c5, CODE XREF=sub_3af0+1876
000000000000346a         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003473         xor        r15d, r15d
0000000000003476         mov        dword [rsp+0xe8+var_E0], 0x2
000000000000347e         mov        qword [rsp+0xe8+var_A0], rax

                     loc_3483:
0000000000003483         xor        r11d, r11d                                  ; CODE XREF=sub_3af0+180, sub_3af0+1400, sub_3af0+1488, sub_3af0+1557, sub_3af0+1615, sub_3af0+1781, sub_3af0+1839, sub_3af0+2408, sub_3af0+2485
0000000000003486         mov        rax, rbp
0000000000003489         mov        r8d, r12d
000000000000348c         mov        rbp, r11
000000000000348f         mov        r11, rax
0000000000003492         nop        word [rax+rax]

                     loc_3498:
0000000000003498         cmp        r11, rbp                                    ; CODE XREF=sub_35a0+194
000000000000349b         setne      r12b
000000000000349f         cmp        r11, 0xffffffffffffffff
00000000000034a3         jne        loc_34b2

00000000000034a5         mov        rax, qword [rsp+0xe8+var_D8]
00000000000034aa         cmp        byte [rax+rbp], 0x0
00000000000034ae         setne      r12b

                     loc_34b2:
00000000000034b2         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
00000000000034b5         je         loc_3b10

00000000000034bb         cmp        dword [rsp+0xe8+var_E0], 0x2
00000000000034c0         mov        rdi, qword [rsp+0xe8+var_D8]
00000000000034c5         lea        r9, qword [rdi+rbp]
00000000000034c9         setne      al
00000000000034cc         and        al, byte [rsp+0xe8+var_DB]
00000000000034d0         mov        r10d, eax
00000000000034d3         je         loc_3580

00000000000034d9         mov        rax, qword [rsp+0xe8+var_D0]
00000000000034de         test       rax, rax
00000000000034e1         je         loc_3910

00000000000034e7         cmp        r11, 0xffffffffffffffff
00000000000034eb         lea        rbx, qword [rbp+rax]
00000000000034f0         jne        loc_3520

00000000000034f2         cmp        rax, 0x1
00000000000034f6         jbe        loc_3520

00000000000034f8         mov        byte [rsp+0xe8+var_B0], r8b
00000000000034fd         mov        byte [rsp+0xe8+var_B8], r10b
0000000000003502         mov        qword [rsp+0xe8+var_C0], r9
0000000000003507         call       j_strlen                                    ; strlen
000000000000350c         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000003512         movzx      r10d, byte [rsp+0xe8+var_B8]
0000000000003518         mov        r11, rax
000000000000351b         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_3520:
0000000000003520         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
0000000000003523         mov        byte [rsp+0xe8+var_C0], r10b
0000000000003528         ja         loc_3ae0

000000000000352e         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
0000000000003533         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
0000000000003538         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
000000000000353b         mov        qword [rsp+0xe8+var_A8], r11
0000000000003540         mov        byte [rsp+0xe8+var_B0], r8b
0000000000003545         mov        qword [rsp+0xe8+var_B8], r9
000000000000354a         call       j_memcmp                                    ; memcmp
000000000000354f         test       eax, eax
0000000000003551         mov        r9, qword [rsp+0xe8+var_B8]
0000000000003556         movzx      r8d, byte [rsp+0xe8+var_B0]
000000000000355c         mov        r11, qword [rsp+0xe8+var_A8]
0000000000003561         jne        loc_3ae0

0000000000003567         cmp        byte [rsp+0xe8+var_D9], 0x0
000000000000356c         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000003572         jne        loc_44f5

0000000000003578         nop        dword [rax+rax]

                     loc_3580:
0000000000003580         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_3ad0+19
0000000000003584         cmp        bl, 0x7e
0000000000003587         ja         loc_38a8

000000000000358d         lea        rcx, qword [switch_table_6820+44]           ; 0x684c
0000000000003594         movzx      edx, bl
0000000000003597         movsxd     rax, dword [rcx+rdx*4]
000000000000359b         add        rax, rcx
000000000000359e         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_35a0:
00000000000035a0         xor        r10d, r10d
00000000000035a3         cmp        r11, 0x1
00000000000035a7         setne      al
00000000000035aa         cmp        r11, 0xffffffffffffffff
00000000000035ae         jne        loc_35bc

00000000000035b0         mov        rax, qword [rsp+arg_8]
00000000000035b5         cmp        byte [rax+1], 0x0
00000000000035b9         setne      al

                     loc_35bc:
00000000000035bc         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_35a0+14
00000000000035c1         sete       dl
00000000000035c4         test       al, al
00000000000035c6         je         loc_3818

                     loc_35cc:
00000000000035cc         xor        r12d, r12d                                  ; CODE XREF=sub_3810+11
00000000000035cf         xor        eax, eax
00000000000035d1         nop        dword [rax]
                        ; endp

                     loc_35d8:
00000000000035d8         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_37c0+50, sub_3890+119
00000000000035dd         jne        loc_36f2

00000000000035e3         test       dl, dl
00000000000035e5         jne        loc_36f2

                     loc_35eb:
00000000000035eb         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_36a0+87
00000000000035f0         test       rsi, rsi
00000000000035f3         je         loc_3609

00000000000035f5         mov        edx, ebx
00000000000035f7         shr        dl, 0x5
00000000000035fa         movzx      edx, dl
00000000000035fd         mov        edx, dword [rsi+rdx*4]
0000000000003600         bt         edx, ebx
0000000000003603         jb         loc_3753

                     loc_3609:
0000000000003609         test       r10b, r10b                                  ; CODE XREF=sub_35a0+83, sub_36a0+93
000000000000360c         jne        loc_3753

0000000000003612         xor        eax, 0x1
0000000000003615         add        rbp, 0x1
0000000000003619         and        eax, r8d

                     loc_361c:
000000000000361c         test       al, al                                      ; CODE XREF=sub_3af0+936
000000000000361e         je         loc_3640

0000000000003620         cmp        r13, r15
0000000000003623         jbe        loc_362a

0000000000003625         mov        byte [r14+r15], 0x27

                     loc_362a:
000000000000362a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_35a0+131
000000000000362e         cmp        r13, rax
0000000000003631         jbe        loc_3639

0000000000003633         mov        byte [r14+r15+1], 0x27

                     loc_3639:
0000000000003639         add        r15, 0x2                                    ; CODE XREF=sub_35a0+145
000000000000363d         xor        r8d, r8d

                     loc_3640:
0000000000003640         cmp        r15, r13                                    ; CODE XREF=sub_35a0+126, sub_36a0+275, sub_3af0+869
0000000000003643         jae        loc_3649

0000000000003645         mov        byte [r14+r15], bl

                     loc_3649:
0000000000003649         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_35a0+163
000000000000364e         add        r15, 0x1
0000000000003652         mov        eax, 0x0
0000000000003657         test       r12b, r12b
000000000000365a         cmove      edi, eax
000000000000365d         mov        byte [rsp+0xe8+var_DA], dil
0000000000003662         jmp        loc_3498
0000000000003667         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3670:
0000000000003670         xor        r10d, r10d
0000000000003673         mov        eax, dword [rsp+arg_0]
0000000000003677         cmp        eax, 0x2
000000000000367a         je         loc_3c38

0000000000003680         cmp        eax, 0x5
0000000000003683         je         loc_3bf8

0000000000003689         cmp        eax, 0x2
000000000000368c         mov        ebx, 0x3f
0000000000003691         sete       dl
0000000000003694         xor        r12d, r12d
0000000000003697         xor        eax, eax
0000000000003699         jmp        sub_35a0+56
                        ; endp
000000000000369e         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_36a0:
00000000000036a0         xor        r10d, r10d
00000000000036a3         cmp        dword [rsp+arg_0], 0x2
00000000000036a8         je         loc_3bb0

00000000000036ae         mov        byte [rsp+arg_74], r12b
00000000000036b3         xor        edx, edx
00000000000036b5         xor        eax, eax
00000000000036b7         mov        ebx, 0x27
00000000000036bc         jmp        sub_35a0+56
                        ; endp
00000000000036c1         nop        dword [rax]
00000000000036c8         mov        edx, 0x9
00000000000036cd         mov        ebx, 0x74

                     loc_36d2:
00000000000036d2         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3860+10, sub_3950+37, sub_3a90+53
00000000000036d7         sete       al
00000000000036da         and        al, byte [rsp+arg_7]
00000000000036de         jne        sub_3810+30

00000000000036e4         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_36a0+114
00000000000036e9         jne        loc_3750

                     loc_36eb:
00000000000036eb         mov        ebx, edx                                    ; CODE XREF=sub_37c0+18
00000000000036ed         xor        r12d, r12d
00000000000036f0         xor        eax, eax
                        ; endp

                     loc_36f2:
00000000000036f2         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_35a0+61, sub_35a0+69
00000000000036f7         jne        loc_35eb

00000000000036fd         jmp        loc_3609
0000000000003702         nop        word [rax+rax]
0000000000003708         mov        edx, 0x8
000000000000370d         mov        ebx, 0x62
0000000000003712         jmp        sub_36a0+68
0000000000003714         nop        dword [rax]
0000000000003718         cmp        dword [rsp+8], 0x2
000000000000371d         je         sub_3af0                                    ; sub_3af0
0000000000003723         cmp        byte [rsp+0xd], 0x0
0000000000003728         je         sub_3930+16

                     loc_372e:
000000000000372e         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3930+8
0000000000003733         je         loc_3940

0000000000003739         cmp        qword [rsp+arg_10], 0x0
000000000000373f         jne        loc_3afb

0000000000003745         mov        ebx, 0x5c
000000000000374a         nop        word [rax+rax]
                        ; endp

                     loc_3750:
0000000000003750         xor        r12d, r12d                                  ; CODE XREF=sub_36a0+73, sub_3a90+29
                        ; endp

                     loc_3753:
0000000000003753         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_35a0+99, sub_35a0+108
0000000000003758         sete       dl
000000000000375b         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000003760         mov        eax, edx
0000000000003762         jne        loc_3fb8

0000000000003768         mov        eax, r8d
000000000000376b         xor        eax, 0x1
000000000000376e         and        al, dl
0000000000003770         je         loc_37a1

0000000000003772         cmp        r13, r15
0000000000003775         jbe        loc_377c

0000000000003777         mov        byte [r14+r15], 0x27

                     loc_377c:
000000000000377c         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_36a0+213
0000000000003780         cmp        r13, rdx
0000000000003783         jbe        loc_378b

0000000000003785         mov        byte [r14+r15+1], 0x24

                     loc_378b:
000000000000378b         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_36a0+227
000000000000378f         cmp        r13, rdx
0000000000003792         jbe        loc_379a

0000000000003794         mov        byte [r14+r15+2], 0x27

                     loc_379a:
000000000000379a         add        r15, 0x3                                    ; CODE XREF=sub_36a0+242
000000000000379e         mov        r8d, eax

                     loc_37a1:
00000000000037a1         cmp        r13, r15                                    ; CODE XREF=sub_36a0+208
00000000000037a4         jbe        loc_37ab

00000000000037a6         mov        byte [r14+r15], 0x5c

                     loc_37ab:
00000000000037ab         add        r15, 0x1                                    ; CODE XREF=sub_36a0+260
00000000000037af         add        rbp, 0x1
00000000000037b3         jmp        loc_3640
00000000000037b8         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_37c0:
00000000000037c0         cmp        byte [rsp+arg_5], 0x0
00000000000037c5         jne        loc_3993

00000000000037cb         xor        edx, edx
00000000000037cd         test       byte [rsp+arg_70], 0x1
00000000000037d2         je         loc_36eb

00000000000037d8         add        rbp, 0x1
00000000000037dc         jmp        quotearg_buffer_restyled+232
                        ; endp
00000000000037e1         nop        dword [rax]
00000000000037e8         cmp        dword [rsp+8], 0x2
00000000000037ed         sete       dl
00000000000037f0         xor        eax, eax
00000000000037f2         jmp        sub_35a0+56
00000000000037f7         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3800:
0000000000003800         mov        edx, 0x7
0000000000003805         mov        ebx, 0x61
000000000000380a         jmp        sub_36a0+68
                        ; endp
000000000000380f         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3810:
0000000000003810         cmp        dword [rsp+8], 0x2
0000000000003815         sete       dl
                        ; endp

                     loc_3818:
0000000000003818         test       rbp, rbp                                    ; CODE XREF=sub_35a0+38, sub_3a30+35
000000000000381b         jne        loc_35cc

0000000000003821         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_3a60+43
0000000000003826         and        al, dl
0000000000003828         je         sub_35a0+56

000000000000382e         mov        rbp, r11
0000000000003831         mov        dword [rsp+arg_0], 0x2
0000000000003839         jmp        sub_3af0+1097
                        ; endp
000000000000383e         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3840:
0000000000003840         cmp        dword [rsp+arg_0], 0x2
0000000000003845         sete       dl
0000000000003848         xor        r12d, r12d
000000000000384b         jmp        sub_3810+17
                        ; endp
000000000000384d         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3850:
0000000000003850         cmp        dword [rsp+arg_0], 0x2
0000000000003855         mov        ebx, 0x20
000000000000385a         sete       dl
000000000000385d         jmp        sub_3810+17
                        ; endp
000000000000385f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3860:
0000000000003860         mov        edx, 0xd
0000000000003865         mov        ebx, 0x72
000000000000386a         jmp        loc_36d2
000000000000386f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3870:
0000000000003870         mov        edx, 0xc
0000000000003875         mov        ebx, 0x66
000000000000387a         jmp        sub_36a0+68
                        ; endp
000000000000387f         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3880:
0000000000003880         mov        edx, 0xb
0000000000003885         mov        ebx, 0x76
000000000000388a         jmp        sub_36a0+68
                        ; endp
000000000000388f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3890:
0000000000003890         mov        edx, 0xa
0000000000003895         mov        ebx, 0x6e
000000000000389a         jmp        sub_36a0+50
                        ; endp
000000000000389f         align      32

                     loc_38a0:
00000000000038a0         xor        r10d, r10d                                  ; CODE XREF=sub_3890+135
00000000000038a3         nop        dword [rax+rax]

                     loc_38a8:
00000000000038a8         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
00000000000038ae         jne        loc_3c58

00000000000038b4         mov        qword [rsp+0xe8+var_B0], r11
00000000000038b9         mov        byte [rsp+0xe8+var_B8], r8b
00000000000038be         mov        byte [rsp+0xe8+var_C0], r10b
00000000000038c3         call       j___ctype_b_loc                             ; __ctype_b_loc
00000000000038c8         mov        rcx, qword [rax]
00000000000038cb         movzx      edx, bl
00000000000038ce         movzx      r10d, byte [rsp+0xe8+var_C0]
00000000000038d4         movzx      r8d, byte [rsp+0xe8+var_B8]
00000000000038da         mov        r11, qword [rsp+0xe8+var_B0]
00000000000038df         mov        edi, 0x1
00000000000038e4         movzx      eax, word [rcx+rdx*2]
00000000000038e8         and        ax, 0x4000
00000000000038ec         setne      r12b
00000000000038f0         sete       al
00000000000038f3         and        al, byte [rsp+0xe8+var_DB]

                     loc_38f7:
00000000000038f7         test       al, al                                      ; CODE XREF=sub_3af0+2221
00000000000038f9         jne        loc_4291

00000000000038ff         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000003904         sete       dl
0000000000003907         jmp        loc_35d8
000000000000390c         align      16

                     loc_3910:
0000000000003910         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
0000000000003914         cmp        bl, 0x7e
0000000000003917         ja         loc_38a0

0000000000003919         lea        rcx, qword [switch_table_6820+552]          ; 0x6a48
0000000000003920         movzx      edx, bl
0000000000003923         movsxd     rax, dword [rcx+rdx*4]
0000000000003927         add        rax, rcx
000000000000392a         jmp        rax
                        ; endp
000000000000392c         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3930:
0000000000003930         xor        r10d, r10d
0000000000003933         cmp        byte [rsp+arg_5], 0x0
0000000000003938         jne        loc_372e

000000000000393e         nop

                     loc_3940:
0000000000003940         mov        edx, 0x5c                                   ; CODE XREF=sub_36a0+136, sub_36a0+147
0000000000003945         mov        ebx, 0x5c
000000000000394a         jmp        sub_36a0+68
                        ; endp
000000000000394f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3950:
0000000000003950         mov        edx, 0xc
0000000000003955         xor        r10d, r10d
0000000000003958         mov        ebx, 0x66
000000000000395d         jmp        sub_36a0+68
                        ; endp
0000000000003962         nop        word [rax+rax]
0000000000003968         mov        edx, 0xa
000000000000396d         xor        r10d, r10d
0000000000003970         mov        ebx, 0x6e
0000000000003975         jmp        sub_36a0+50
000000000000397a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3980:
0000000000003980         mov        ebx, 0x61
0000000000003985         jmp        sub_36a0+176
                        ; endp
000000000000398a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3990:
0000000000003990         xor        r10d, r10d
                        ; endp

                     loc_3993:
0000000000003993         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_37c0+5
0000000000003998         sete       dl
000000000000399b         cmp        byte [rsp+arg_7], 0x0
00000000000039a0         jne        loc_453a

00000000000039a6         mov        eax, r8d
00000000000039a9         mov        rcx, r15
00000000000039ac         xor        eax, 0x1
00000000000039af         and        al, dl
00000000000039b1         je         loc_39e0

00000000000039b3         cmp        r13, r15
00000000000039b6         jbe        loc_39bd

00000000000039b8         mov        byte [r14+r15], 0x27

                     loc_39bd:
00000000000039bd         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_3990+38
00000000000039c1         cmp        r13, rcx
00000000000039c4         jbe        loc_39cc

00000000000039c6         mov        byte [r14+r15+1], 0x24

                     loc_39cc:
00000000000039cc         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_3990+52
00000000000039d0         cmp        r13, rcx
00000000000039d3         ja         loc_4009

                     loc_39d9:
00000000000039d9         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_3af0+1311
00000000000039dd         mov        r8d, eax

                     loc_39e0:
00000000000039e0         cmp        r13, rcx                                    ; CODE XREF=sub_3990+33
00000000000039e3         jbe        loc_39ea

00000000000039e5         mov        byte [r14+rcx], 0x5c

                     loc_39ea:
00000000000039ea         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3990+83
00000000000039ef         lea        r15, qword [rcx+1]
00000000000039f3         je         loc_3ff9

00000000000039f9         lea        rax, qword [rbp+1]
00000000000039fd         cmp        rax, r11
0000000000003a00         jae        loc_3a1b

0000000000003a02         mov        rax, qword [rsp+arg_8]
0000000000003a07         movzx      eax, byte [rax+rbp+1]
0000000000003a0c         mov        byte [rsp+arg_20], al
0000000000003a10         sub        eax, 0x30
0000000000003a13         cmp        al, 0x9
0000000000003a15         jbe        loc_4249

                     loc_3a1b:
0000000000003a1b         mov        eax, r12d                                   ; CODE XREF=sub_3990+112
0000000000003a1e         mov        ebx, 0x30
0000000000003a23         xor        r12d, r12d
0000000000003a26         jmp        sub_35a0+56
                        ; endp
0000000000003a2b         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3a30:
0000000000003a30         cmp        dword [rsp+arg_0], 0x2
0000000000003a35         mov        r12d, r10d
0000000000003a38         sete       dl
0000000000003a3b         xor        r10d, r10d
0000000000003a3e         xor        eax, eax
0000000000003a40         jmp        sub_35a0+56
                        ; endp
0000000000003a45         nop        dword [rax]
0000000000003a48         cmp        dword [rsp+8], 0x2
0000000000003a4d         sete       dl
0000000000003a50         xor        r10d, r10d
0000000000003a53         jmp        sub_3810+8
0000000000003a58         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3a60:
0000000000003a60         cmp        dword [rsp+8], 0x2
0000000000003a65         sete       dl
0000000000003a68         xor        r10d, r10d
0000000000003a6b         xor        r12d, r12d
0000000000003a6e         jmp        sub_3810+17
                        ; endp
0000000000003a73         nop        dword [rax+rax]
0000000000003a78         cmp        dword [rsp+8], 0x2
0000000000003a7d         mov        r12d, r10d
0000000000003a80         mov        ebx, 0x20
0000000000003a85         sete       dl
0000000000003a88         xor        r10d, r10d
0000000000003a8b         jmp        sub_3810+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3a90:
0000000000003a90         mov        edx, 0xd
0000000000003a95         xor        r10d, r10d
0000000000003a98         mov        ebx, 0x72
0000000000003a9d         jmp        sub_36a0+50
                        ; endp
0000000000003aa2         nop        word [rax+rax]
0000000000003aa8         mov        ebx, 0x76
0000000000003aad         jmp        sub_36a0+176
0000000000003ab2         nop        word [rax+rax]
0000000000003ab8         mov        edx, 0x9
0000000000003abd         xor        r10d, r10d
0000000000003ac0         mov        ebx, 0x74
0000000000003ac5         jmp        sub_36a0+50
0000000000003aca         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3ad0:
0000000000003ad0         mov        ebx, 0x62
0000000000003ad5         jmp        sub_36a0+176
                        ; endp
0000000000003ada         nop        word [rax+rax]

                     loc_3ae0:
0000000000003ae0         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
0000000000003ae3         jmp        loc_3580
0000000000003ae8         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_3af0:
0000000000003af0         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_36a0+125
0000000000003af5         jne        sub_3af0+2416
                        ; endp

                     loc_3afb:
0000000000003afb         add        rbp, 0x1                                    ; CODE XREF=sub_36a0+159
0000000000003aff         mov        eax, r8d
0000000000003b02         xor        r12d, r12d
0000000000003b05         mov        ebx, 0x5c
0000000000003b0a         jmp        sub_35a0+124
                        ; endp
0000000000003b0f         align      16

                     loc_3b10:
0000000000003b10         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
0000000000003b15         movzx      ebx, byte [rsp+0xe8+var_D9]
0000000000003b1a         mov        r12d, r8d
0000000000003b1d         mov        rbp, r11
0000000000003b20         sete       dl
0000000000003b23         mov        eax, ebx
0000000000003b25         test       r15, r15
0000000000003b28         sete       cl
0000000000003b2b         and        eax, edx
0000000000003b2d         and        al, cl
0000000000003b2f         jne        loc_4596

0000000000003b35         mov        eax, ebx
0000000000003b37         xor        eax, 0x1
0000000000003b3a         and        dl, al
0000000000003b3c         je         loc_44ac

0000000000003b42         cmp        byte [rsp+0xe8+var_6C], 0x0
0000000000003b47         je         loc_44aa

0000000000003b4d         cmp        byte [rsp+0xe8+var_DA], 0x0
0000000000003b52         jne        loc_454d

0000000000003b58         test       r13, r13
0000000000003b5b         sete       al
0000000000003b5e         cmp        qword [rsp+0xe8+var_98], 0x0
0000000000003b64         setne      dl
0000000000003b67         and        al, dl
0000000000003b69         je         loc_458c

0000000000003b6f         mov        r13, qword [rsp+0xe8+var_98]

                     loc_3b74:
0000000000003b74         lea        rbx, qword [aLibs+29]                       ; 0x67c5, CODE XREF=sub_3af0+2781
0000000000003b7b         mov        byte [r14], 0x27
0000000000003b7f         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000003b87         mov        r15d, 0x1
0000000000003b8d         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003b96         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003b9b         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003ba0         mov        byte [rsp+0xe8+var_6C], al
0000000000003ba4         jmp        loc_3483
0000000000003ba9         align      16

                     loc_3bb0:
0000000000003bb0         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_36a0+8
0000000000003bb5         jne        sub_3af0+2416

0000000000003bbb         test       r13, r13
0000000000003bbe         je         loc_3fc0

0000000000003bc4         xor        edx, edx
0000000000003bc6         cmp        qword [rsp+arg_48], 0x0
0000000000003bcc         jne        loc_3fc0

                     loc_3bd2:
0000000000003bd2         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_3af0+1284, sub_3af0+2794
0000000000003bd7         add        r15, 0x3
0000000000003bdb         xor        eax, eax
0000000000003bdd         mov        byte [rsp+arg_74], r12b
0000000000003be2         xor        r8d, r8d
0000000000003be5         mov        r13, rdx
0000000000003be8         mov        ebx, 0x27
0000000000003bed         jmp        sub_35a0+105
                        ; endp
0000000000003bf2         align      8

                     loc_3bf8:
0000000000003bf8         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_3670+19
0000000000003bfd         je         loc_3c20

0000000000003bff         lea        rcx, qword [rbp+2]
0000000000003c03         cmp        rcx, r11
0000000000003c06         jae        loc_3c20

0000000000003c08         mov        rax, qword [rsp+arg_8]
0000000000003c0d         cmp        byte [rax+rbp+1], 0x3f
0000000000003c12         je         loc_43a2

0000000000003c18         nop        dword [rax+rax]

                     loc_3c20:
0000000000003c20         xor        edx, edx                                    ; CODE XREF=sub_3af0+269, sub_3af0+278, sub_3af0+2233, sub_3af0+2253
0000000000003c22         xor        r12d, r12d
0000000000003c25         xor        eax, eax
0000000000003c27         mov        ebx, 0x3f
0000000000003c2c         jmp        sub_35a0+56
                        ; endp
0000000000003c31         align      8

                     loc_3c38:
0000000000003c38         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3670+10
0000000000003c3d         jne        loc_4460

0000000000003c43         xor        r12d, r12d
0000000000003c46         xor        eax, eax
0000000000003c48         mov        ebx, 0x3f
0000000000003c4d         jmp        sub_35a0+105
                        ; endp
0000000000003c52         align      8

                     loc_3c58:
0000000000003c58         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_3890+30
0000000000003c60         cmp        r11, 0xffffffffffffffff
0000000000003c64         mov        qword [rsp+0xe8+var_48], 0x0
0000000000003c70         mov        qword [rsp+0xe8+var_C0], rax
0000000000003c75         jne        loc_3ca4

0000000000003c77         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
0000000000003c7c         mov        byte [rsp+0xe8+var_A8], r8b
0000000000003c81         mov        byte [rsp+0xe8+var_B0], r10b
0000000000003c86         mov        qword [rsp+0xe8+var_B8], r9
0000000000003c8b         call       j_strlen                                    ; strlen
0000000000003c90         movzx      r8d, byte [rsp+0xe8+var_A8]
0000000000003c96         movzx      r10d, byte [rsp+0xe8+var_B0]
0000000000003c9c         mov        r11, rax
0000000000003c9f         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_3ca4:
0000000000003ca4         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_3af0+389
0000000000003cac         xor        ecx, ecx
0000000000003cae         mov        byte [rsp+0xe8+var_6A], bl
0000000000003cb2         mov        byte [rsp+0xe8+var_6B], r8b
0000000000003cb7         mov        rbx, rcx
0000000000003cba         mov        qword [rsp+0xe8+var_60], r9
0000000000003cc2         mov        qword [rsp+0xe8+var_B0], rax
0000000000003cc7         mov        byte [rsp+0xe8+var_69], r10b
0000000000003ccc         mov        qword [rsp+0xe8+var_68], r15
0000000000003cd4         mov        qword [rsp+0xe8+var_A8], r14
0000000000003cd9         mov        qword [rsp+0xe8+var_78], r13
0000000000003cde         mov        qword [rsp+0xe8+var_B8], r11

                     loc_3ce3:
0000000000003ce3         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_3af0+623
0000000000003ce8         lea        r14, qword [rbp+rbx]
0000000000003ced         mov        rdx, qword [rsp+0xe8+var_B8]
0000000000003cf2         mov        rcx, qword [rsp+0xe8+var_C0]
0000000000003cf7         mov        rdi, qword [rsp+0xe8+var_B0]
0000000000003cfc         lea        r13, qword [rax+r14]
0000000000003d00         sub        rdx, r14
0000000000003d03         mov        rsi, r13
0000000000003d06         call       rpl_mbrtowc                                 ; rpl_mbrtowc
0000000000003d0b         test       rax, rax
0000000000003d0e         mov        r15, rax
0000000000003d11         je         loc_3d61

0000000000003d13         cmp        rax, 0xffffffffffffffff
0000000000003d17         je         loc_4335

0000000000003d1d         cmp        rax, 0xfffffffffffffffe
0000000000003d21         je         loc_42c1

0000000000003d27         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000003d2c         sete       al
0000000000003d2f         and        al, byte [rsp+0xe8+var_D9]
0000000000003d33         jne        loc_3ed0

                     loc_3d39:
0000000000003d39         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_3af0+996, sub_3af0+1031
0000000000003d40         call       j_iswprint                                  ; iswprint
0000000000003d45         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
0000000000003d4a         test       eax, eax
0000000000003d4c         mov        eax, 0x0
0000000000003d51         cmove      r12d, eax
0000000000003d55         add        rbx, r15
0000000000003d58         call       j_mbsinit                                   ; mbsinit
0000000000003d5d         test       eax, eax
0000000000003d5f         je         loc_3ce3

                     loc_3d61:
0000000000003d61         mov        edx, r12d                                   ; CODE XREF=sub_3af0+545
0000000000003d64         mov        rdi, rbx
0000000000003d67         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000003d6d         xor        edx, 0x1
0000000000003d70         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003d75         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000003d7b         and        dl, byte [rsp+0xe8+var_DB]
0000000000003d7f         mov        r15, qword [rsp+0xe8+var_68]
0000000000003d87         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003d8c         mov        r13, qword [rsp+0xe8+var_78]
0000000000003d91         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_3d96:
0000000000003d96         cmp        rdi, 0x1                                    ; CODE XREF=sub_3af0+2112, sub_3af0+2168
0000000000003d9a         jbe        loc_439b

                     loc_3da0:
0000000000003da0         mov        rcx, rdi                                    ; CODE XREF=sub_3af0+1961
0000000000003da3         xor        esi, esi
0000000000003da5         movzx      r9d, byte [rsp+0xe8+var_D9]
0000000000003dab         add        rcx, rbp
0000000000003dae         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000003db3         jmp        loc_3e6e
0000000000003db8         align      64

                     loc_3dc0:
0000000000003dc0         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3af0+896
0000000000003dc5         sete       al
0000000000003dc8         test       r9b, r9b
0000000000003dcb         jne        loc_4280

0000000000003dd1         mov        esi, r8d
0000000000003dd4         xor        esi, 0x1
0000000000003dd7         and        al, sil
0000000000003dda         je         loc_3e0b

0000000000003ddc         cmp        r13, r15
0000000000003ddf         jbe        loc_3de6

0000000000003de1         mov        byte [r14+r15], 0x27

                     loc_3de6:
0000000000003de6         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_3af0+751
0000000000003dea         cmp        r13, rsi
0000000000003ded         jbe        loc_3df5

0000000000003def         mov        byte [r14+r15+1], 0x24

                     loc_3df5:
0000000000003df5         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_3af0+765
0000000000003df9         cmp        r13, rsi
0000000000003dfc         jbe        loc_3e04

0000000000003dfe         mov        byte [r14+r15+2], 0x27

                     loc_3e04:
0000000000003e04         add        r15, 0x3                                    ; CODE XREF=sub_3af0+780
0000000000003e08         mov        r8d, eax

                     loc_3e0b:
0000000000003e0b         cmp        r13, r15                                    ; CODE XREF=sub_3af0+746
0000000000003e0e         jbe        loc_3e15

0000000000003e10         mov        byte [r14+r15], 0x5c

                     loc_3e15:
0000000000003e15         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3af0+798
0000000000003e19         cmp        r13, rax
0000000000003e1c         jbe        loc_3e2b

0000000000003e1e         mov        eax, ebx
0000000000003e20         shr        al, 0x6
0000000000003e23         add        eax, 0x30
0000000000003e26         mov        byte [r14+r15+1], al

                     loc_3e2b:
0000000000003e2b         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3af0+812
0000000000003e2f         cmp        r13, rax
0000000000003e32         jbe        loc_3e44

0000000000003e34         mov        eax, ebx
0000000000003e36         shr        al, 0x3
0000000000003e39         and        eax, 0x7
0000000000003e3c         add        eax, 0x30
0000000000003e3f         mov        byte [r14+r15+2], al

                     loc_3e44:
0000000000003e44         and        ebx, 0x7                                    ; CODE XREF=sub_3af0+834
0000000000003e47         add        rbp, 0x1
0000000000003e4b         add        r15, 0x3
0000000000003e4f         add        ebx, 0x30
0000000000003e52         cmp        rbp, rcx
0000000000003e55         jae        loc_3640

0000000000003e5b         mov        esi, edx

                     loc_3e5d:
0000000000003e5d         cmp        r13, r15                                    ; CODE XREF=sub_3af0+985, sub_3af0+1969
0000000000003e60         jbe        loc_3e66

0000000000003e62         mov        byte [r14+r15], bl

                     loc_3e66:
0000000000003e66         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_3af0+880
0000000000003e6a         add        r15, 0x1

                     loc_3e6e:
0000000000003e6e         test       dl, dl                                      ; CODE XREF=sub_3af0+707
0000000000003e70         jne        loc_3dc0

0000000000003e76         mov        eax, esi
0000000000003e78         xor        eax, 0x1
0000000000003e7b         and        eax, r8d
0000000000003e7e         test       r10b, r10b
0000000000003e81         je         loc_3e91

0000000000003e83         cmp        r13, r15
0000000000003e86         jbe        loc_3e8d

0000000000003e88         mov        byte [r14+r15], 0x5c

                     loc_3e8d:
0000000000003e8d         add        r15, 0x1                                    ; CODE XREF=sub_3af0+918

                     loc_3e91:
0000000000003e91         add        rbp, 0x1                                    ; CODE XREF=sub_3af0+913
0000000000003e95         cmp        rbp, rcx
0000000000003e98         jae        loc_361c

0000000000003e9e         test       al, al
0000000000003ea0         je         loc_429e

0000000000003ea6         cmp        r13, r15
0000000000003ea9         jbe        loc_3eb0

0000000000003eab         mov        byte [r14+r15], 0x27

                     loc_3eb0:
0000000000003eb0         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3af0+953
0000000000003eb4         cmp        r13, rax
0000000000003eb7         jbe        loc_3ebf

0000000000003eb9         mov        byte [r14+r15+1], 0x27

                     loc_3ebf:
0000000000003ebf         add        r15, 0x2                                    ; CODE XREF=sub_3af0+967
0000000000003ec3         xor        r10d, r10d
0000000000003ec6         xor        r8d, r8d
0000000000003ec9         jmp        loc_3e5d
0000000000003ecb         align      16

                     loc_3ed0:
0000000000003ed0         cmp        r15, 0x1                                    ; CODE XREF=sub_3af0+579
0000000000003ed4         je         loc_3d39

0000000000003eda         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000003edf         lea        rcx, qword [rdi+r15]
0000000000003ee3         lea        rdx, qword [rdi+r14+1]
0000000000003ee8         lea        r8, qword [rcx+r14]
0000000000003eec         jmp        loc_3efd
0000000000003eee         align      16

                     loc_3ef0:
0000000000003ef0         add        rdx, 0x1                                    ; CODE XREF=sub_3af0+1046, sub_3af0+1072
0000000000003ef4         cmp        r8, rdx
0000000000003ef7         je         loc_3d39

                     loc_3efd:
0000000000003efd         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_3af0+1020
0000000000003f00         sub        ecx, 0x5b
0000000000003f03         cmp        cl, 0x21
0000000000003f06         ja         loc_3ef0

0000000000003f08         mov        esi, 0x1
0000000000003f0d         shl        rsi, cl
0000000000003f10         mov        rcx, rsi
0000000000003f13         movabs     rsi, 0x20000002b
0000000000003f1d         test       rcx, rsi
0000000000003f20         je         loc_3ef0

0000000000003f22         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003f27         mov        r13, qword [rsp+0xe8+var_78]
0000000000003f2c         mov        rbp, qword [rsp+0xe8+var_B8]
0000000000003f31         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_3f39:
0000000000003f39         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_3af0+1227, sub_3af0+1948, sub_3af0+2585, sub_3af0+2734
0000000000003f3e         je         loc_3f50

0000000000003f40         test       al, al
0000000000003f42         mov        eax, 0x4
0000000000003f47         cmove      eax, dword [rsp+0xe8+var_E0]
0000000000003f4c         mov        dword [rsp+0xe8+var_E0], eax

                     loc_3f50:
0000000000003f50         sub        rsp, 0x8                                    ; CODE XREF=sub_3af0+1102
0000000000003f54         mov        rcx, rbp
0000000000003f57         mov        rsi, r13
0000000000003f5a         push       qword [rsp+0xf0+var_88]
0000000000003f5e         push       qword [rsp+0xf8+var_80]
0000000000003f62         mov        rdi, r14
0000000000003f65         push       0x0
0000000000003f67         mov        r9d, dword [rsp+0x108+var_70]
0000000000003f6f         mov        r8d, dword [rsp+0x108+var_E0]
0000000000003f74         mov        rdx, qword [rsp+0x108+var_D8]
0000000000003f79         and        r9d, 0xfffffffd
0000000000003f7d         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003f82         add        rsp, 0x20
0000000000003f86         mov        r15, rax

                     loc_3f89:
0000000000003f89         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_3af0+2549, sub_3af0+2560, sub_3af0+2711
0000000000003f91         xor        rbx, qword [fs:0x28]
0000000000003f9a         mov        rax, r15
0000000000003f9d         jne        loc_45a3

0000000000003fa3         add        rsp, 0xb8
0000000000003faa         pop        rbx
0000000000003fab         pop        rbp
0000000000003fac         pop        r12
0000000000003fae         pop        r13
0000000000003fb0         pop        r14
0000000000003fb2         pop        r15
0000000000003fb4         ret
                        ; endp
0000000000003fb5         align      8

                     loc_3fb8:
0000000000003fb8         mov        rbp, r11                                    ; CODE XREF=sub_36a0+194
0000000000003fbb         jmp        loc_3f39

                     loc_3fc0:
0000000000003fc0         cmp        r13, r15                                    ; CODE XREF=sub_3af0+206, sub_3af0+220
0000000000003fc3         jbe        loc_3fca

0000000000003fc5         mov        byte [r14+r15], 0x27

                     loc_3fca:
0000000000003fca         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3af0+1235
0000000000003fce         cmp        r13, rax
0000000000003fd1         jbe        loc_3fd9

0000000000003fd3         mov        byte [r14+r15+1], 0x5c

                     loc_3fd9:
0000000000003fd9         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3af0+1249
0000000000003fdd         cmp        r13, rax
0000000000003fe0         jbe        loc_45d2

0000000000003fe6         mov        rdx, r13
0000000000003fe9         mov        byte [r14+r15+2], 0x27
0000000000003fef         mov        r13, qword [rsp+arg_48]
0000000000003ff4         jmp        loc_3bd2

                     loc_3ff9:
0000000000003ff9         mov        eax, r12d                                   ; CODE XREF=sub_3990+99
0000000000003ffc         mov        ebx, 0x30
0000000000004001         xor        r12d, r12d
0000000000004004         jmp        sub_35a0+105
                        ; endp

                     loc_4009:
0000000000004009         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_3990+67
000000000000400f         jmp        loc_39d9

                     loc_4014:
0000000000004014         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
0000000000004016         jne        loc_3443

000000000000401c         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_4021:
0000000000004021         test       r13, r13                                    ; CODE XREF=sub_3af0+2749
0000000000004024         jne        loc_45ba

000000000000402a         lea        rax, qword [aLibs+29]                       ; 0x67c5
0000000000004031         mov        qword [rsp+0xe8+var_98], 0x0
000000000000403a         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000403f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004044         xor        r12d, r12d
0000000000004047         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000404c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004055         mov        qword [rsp+0xe8+var_A0], rax
000000000000405a         mov        r15d, 0x1
0000000000004060         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000004068         jmp        loc_3483
000000000000406d         align      16

                     loc_4070:
0000000000004070         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
0000000000004072         jne        loc_446d

0000000000004078         test       r13, r13
000000000000407b         je         loc_42a6

0000000000004081         mov        byte [r14], 0x22
0000000000004085         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000408a         xor        r12d, r12d
000000000000408d         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004092         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_409b:
000000000000409b         lea        rax, qword [aLibs+27]                       ; 0x67c3, CODE XREF=sub_3af0+1996
00000000000040a2         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000040a7         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000040ac         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000040b5         mov        r15d, 0x1
00000000000040bb         mov        qword [rsp+0xe8+var_A0], rax
00000000000040c0         jmp        loc_3483

                     loc_40c5:
00000000000040c5         lea        rax, qword [aLibs+27]                       ; case 6, 0x67c3, CODE XREF=quotearg_buffer_restyled+145
00000000000040cc         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000040d1         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000040d6         xor        r12d, r12d
00000000000040d9         mov        qword [rsp+0xe8+var_98], 0x0
00000000000040e2         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000040e7         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000040ec         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000040f5         xor        r15d, r15d
00000000000040f8         mov        qword [rsp+0xe8+var_A0], rax
00000000000040fd         mov        dword [rsp+0xe8+var_E0], 0x5
0000000000004105         jmp        loc_3483

                     loc_410a:
000000000000410a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
000000000000410f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004114         xor        r12d, r12d
0000000000004117         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004120         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000004125         xor        r15d, r15d
0000000000004128         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000412d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000004136         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000413f         jmp        loc_3483

                     loc_4144:
0000000000004144         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
0000000000004149         je         loc_41a1

000000000000414b         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0x67c7
0000000000004152         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004154         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004159         call       j_dcgettext                                 ; dcgettext
000000000000415e         mov        rcx, rax
0000000000004161         mov        qword [rsp+0xe8+var_80], rax
0000000000004166         lea        rax, qword [aLibs+31]                       ; 0x67c7
000000000000416d         cmp        rcx, rax
0000000000004170         je         loc_450e

                     loc_4176:
0000000000004176         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x67c5, CODE XREF=sub_3af0+2607
000000000000417d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000417f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004184         call       j_dcgettext                                 ; dcgettext
0000000000004189         mov        rcx, rax
000000000000418c         mov        qword [rsp+0xe8+var_88], rax
0000000000004191         lea        rax, qword [aLibs+29]                       ; 0x67c5
0000000000004198         cmp        rcx, rax
000000000000419b         je         loc_4524

                     loc_41a1:
00000000000041a1         xor        r15d, r15d                                  ; CODE XREF=sub_3af0+1625, sub_3af0+2629
00000000000041a4         test       ebx, ebx
00000000000041a6         je         loc_436d

                     loc_41ac:
00000000000041ac         test       ebx, ebx                                    ; CODE XREF=sub_3af0+2183, sub_3af0+2214
00000000000041ae         mov        rbx, qword [rsp+0xe8+var_88]
00000000000041b3         setne      byte [rsp+0xe8+var_D9]
00000000000041b8         xor        r12d, r12d
00000000000041bb         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
00000000000041be         call       j_strlen                                    ; strlen
00000000000041c3         mov        qword [rsp+0xe8+var_A0], rbx
00000000000041c8         mov        qword [rsp+0xe8+var_D0], rax
00000000000041cd         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000041d2         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000041d7         mov        qword [rsp+0xe8+var_98], 0x0
00000000000041e0         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000041e5         jmp        loc_3483

                     loc_41ea:
00000000000041ea         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
00000000000041ef         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000041f4         xor        r12d, r12d
00000000000041f7         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004200         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000004205         xor        r15d, r15d
0000000000004208         mov        byte [rsp+0xe8+var_DB], 0x0
000000000000420d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000004216         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000421f         jmp        loc_3483

                     loc_4224:
0000000000004224         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000004229         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000422e         xor        r12d, r12d
0000000000004231         mov        qword [rsp+0xe8+var_98], 0x0
000000000000423a         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000423f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004244         jmp        loc_3463

                     loc_4249:
0000000000004249         cmp        r13, r15                                    ; CODE XREF=sub_3990+133
000000000000424c         jbe        loc_4253

000000000000424e         mov        byte [r14+r15], 0x30

                     loc_4253:
0000000000004253         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_3af0+1884
0000000000004257         cmp        r13, rax
000000000000425a         jbe        loc_4262

000000000000425c         mov        byte [r14+rcx+2], 0x30

                     loc_4262:
0000000000004262         mov        eax, r12d                                   ; CODE XREF=sub_3af0+1898
0000000000004265         lea        r15, qword [rcx+3]
0000000000004269         xor        r12d, r12d
000000000000426c         mov        ebx, 0x30
0000000000004271         jmp        sub_35a0+56
                        ; endp
0000000000004276         align      128

                     loc_4280:
0000000000004280         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_3af0+731
0000000000004285         mov        rbp, r11
0000000000004288         mov        byte [rsp+0xe8+var_DB], bl
000000000000428c         jmp        loc_3f39

                     loc_4291:
0000000000004291         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_3890+105
0000000000004296         xor        r12d, r12d
0000000000004299         jmp        loc_3da0

                     loc_429e:
000000000000429e         xor        r10d, r10d                                  ; CODE XREF=sub_3af0+944
00000000000042a1         jmp        loc_3e5d

                     loc_42a6:
00000000000042a6         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_3af0+1419
00000000000042af         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000042b4         xor        r12d, r12d
00000000000042b7         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000042bc         jmp        loc_409b

                     loc_42c1:
00000000000042c1         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_3af0+561
00000000000042c6         mov        rsi, r14
00000000000042c9         mov        rcx, r13
00000000000042cc         mov        rax, rbx
00000000000042cf         mov        rdi, rbx
00000000000042d2         movzx      r8d, byte [rsp+0xe8+var_6B]
00000000000042d8         movzx      ebx, byte [rsp+0xe8+var_6A]
00000000000042dd         mov        r9, qword [rsp+0xe8+var_60]
00000000000042e5         cmp        rsi, r11
00000000000042e8         movzx      r10d, byte [rsp+0xe8+var_69]
00000000000042ee         mov        r15, qword [rsp+0xe8+var_68]
00000000000042f6         mov        r14, qword [rsp+0xe8+var_A8]
00000000000042fb         mov        r13, qword [rsp+0xe8+var_78]
0000000000004300         jae        loc_4328

0000000000004302         cmp        byte [rcx], 0x0
0000000000004305         jne        loc_4317

0000000000004307         jmp        loc_4328
0000000000004309         align      16

                     loc_4310:
0000000000004310         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_3af0+2099
0000000000004315         je         loc_4325

                     loc_4317:
0000000000004317         add        rax, 0x1                                    ; CODE XREF=sub_3af0+2069
000000000000431b         lea        rdx, qword [rbp+rax]
0000000000004320         cmp        r11, rdx
0000000000004323         ja         loc_4310

                     loc_4325:
0000000000004325         mov        rdi, rax                                    ; CODE XREF=sub_3af0+2085

                     loc_4328:
0000000000004328         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_3af0+2064, sub_3af0+2071
000000000000432d         xor        r12d, r12d
0000000000004330         jmp        loc_3d96

                     loc_4335:
0000000000004335         mov        rdi, rbx                                    ; CODE XREF=sub_3af0+551
0000000000004338         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000433e         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000004343         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000004349         mov        r15, qword [rsp+0xe8+var_68]
0000000000004351         xor        r12d, r12d
0000000000004354         mov        r14, qword [rsp+0xe8+var_A8]
0000000000004359         mov        r13, qword [rsp+0xe8+var_78]
000000000000435e         mov        r11, qword [rsp+0xe8+var_B8]
0000000000004363         movzx      edx, byte [rsp+0xe8+var_DB]
0000000000004368         jmp        loc_3d96

                     loc_436d:
000000000000436d         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_3af0+1718
0000000000004372         movzx      eax, byte [rdx]
0000000000004375         test       al, al
0000000000004377         je         loc_41ac

000000000000437d         nop        dword [rax]

                     loc_4380:
0000000000004380         cmp        r13, r15                                    ; CODE XREF=sub_3af0+2212
0000000000004383         jbe        loc_4389

0000000000004385         mov        byte [r14+r15], al

                     loc_4389:
0000000000004389         add        r15, 0x1                                    ; CODE XREF=sub_3af0+2195
000000000000438d         movzx      eax, byte [rdx+r15]
0000000000004392         test       al, al
0000000000004394         jne        loc_4380

0000000000004396         jmp        loc_41ac

                     loc_439b:
000000000000439b         mov        eax, edx                                    ; CODE XREF=sub_3af0+682
000000000000439d         jmp        loc_38f7

                     loc_43a2:
00000000000043a2         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_3af0+290
00000000000043a6         cmp        bl, 0x3e
00000000000043a9         ja         loc_3c20

00000000000043af         movabs     rax, 0x7000a38200000000
00000000000043b9         bt         rax, rbx
00000000000043bd         jae        loc_3c20

00000000000043c3         cmp        byte [rsp+arg_7], 0x0
00000000000043c8         jne        loc_45b2

00000000000043ce         cmp        r13, r15
00000000000043d1         jbe        loc_43d8

00000000000043d3         mov        byte [r14+r15], 0x3f

                     loc_43d8:
00000000000043d8         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3af0+2273
00000000000043dc         cmp        r13, rax
00000000000043df         jbe        loc_43e7

00000000000043e1         mov        byte [r14+r15+1], 0x22

                     loc_43e7:
00000000000043e7         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3af0+2287
00000000000043eb         cmp        r13, rax
00000000000043ee         jbe        loc_43f6

00000000000043f0         mov        byte [r14+r15+2], 0x22

                     loc_43f6:
00000000000043f6         lea        rax, qword [r15+3]                          ; CODE XREF=sub_3af0+2302
00000000000043fa         cmp        r13, rax
00000000000043fd         jbe        loc_4405

00000000000043ff         mov        byte [r14+r15+3], 0x3f

                     loc_4405:
0000000000004405         add        r15, 0x4                                    ; CODE XREF=sub_3af0+2317
0000000000004409         xor        edx, edx
000000000000440b         xor        r12d, r12d
000000000000440e         xor        eax, eax
0000000000004410         mov        rbp, rcx
0000000000004413         jmp        sub_35a0+56
                        ; endp

                     loc_4418:
0000000000004418         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
000000000000441a         je         loc_45a8

0000000000004420         lea        rax, qword [aLibs+29]                       ; 0x67c5
0000000000004427         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000442c         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004431         xor        r12d, r12d
0000000000004434         mov        qword [rsp+0xe8+var_98], 0x0
000000000000443d         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000004442         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000004447         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004450         xor        r15d, r15d
0000000000004453         mov        qword [rsp+0xe8+var_A0], rax
0000000000004458         jmp        loc_3483
000000000000445d         align      32

                     loc_4460:
0000000000004460         mov        rbp, r11                                    ; CODE XREF=sub_3af0+333
0000000000004463         movzx      eax, byte [rsp+arg_7]
0000000000004468         jmp        sub_3af0+1097
                        ; endp

                     loc_446d:
000000000000446d         lea        rax, qword [aLibs+27]                       ; 0x67c3, CODE XREF=sub_3af0+1410
0000000000004474         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004479         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000447e         xor        r12d, r12d
0000000000004481         mov        qword [rsp+0xe8+var_98], 0x0
000000000000448a         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000448f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004494         mov        qword [rsp+0xe8+var_D0], 0x1
000000000000449d         xor        r15d, r15d
00000000000044a0         mov        qword [rsp+0xe8+var_A0], rax
00000000000044a5         jmp        loc_3483

                     loc_44aa:
00000000000044aa         mov        eax, edx                                    ; CODE XREF=sub_3af0+87

                     loc_44ac:
00000000000044ac         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_3af0+76, sub_3af0+2721
00000000000044b1         test       rbx, rbx
00000000000044b4         je         loc_44e2

00000000000044b6         test       al, al
00000000000044b8         je         loc_44e2

00000000000044ba         movzx      ecx, byte [rbx]
00000000000044bd         mov        rax, rbx
00000000000044c0         test       cl, cl
00000000000044c2         je         loc_44e2

00000000000044c4         mov        rdx, r15
00000000000044c7         sub        rax, r15

                     loc_44ca:
00000000000044ca         cmp        r13, rdx                                    ; CODE XREF=sub_3af0+2541
00000000000044cd         jbe        loc_44d3

00000000000044cf         mov        byte [r14+rdx], cl

                     loc_44d3:
00000000000044d3         add        rdx, 0x1                                    ; CODE XREF=sub_3af0+2525
00000000000044d7         movzx      ecx, byte [rax+rdx]
00000000000044db         test       cl, cl
00000000000044dd         jne        loc_44ca

00000000000044df         mov        r15, rdx

                     loc_44e2:
00000000000044e2         cmp        r13, r15                                    ; CODE XREF=sub_3af0+2500, sub_3af0+2504, sub_3af0+2514
00000000000044e5         jbe        loc_3f89

00000000000044eb         mov        byte [r14+r15], 0x0
00000000000044f0         jmp        loc_3f89

                     loc_44f5:
00000000000044f5         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
00000000000044fa         movzx      ebx, byte [rsp+0xe8+var_D9]
00000000000044ff         mov        rbp, r11
0000000000004502         sete       al
0000000000004505         mov        byte [rsp+0xe8+var_DB], bl
0000000000004509         jmp        loc_3f39

                     loc_450e:
000000000000450e         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_3af0+1664
0000000000004512         mov        rdi, rcx
0000000000004515         call       gettext_quote.part.1                        ; gettext_quote.part.1
000000000000451a         mov        qword [rsp+0xe8+var_80], rax
000000000000451f         jmp        loc_4176

                     loc_4524:
0000000000004524         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_3af0+1707
0000000000004528         mov        rdi, rcx
000000000000452b         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000004530         mov        qword [rsp+0xe8+var_88], rax
0000000000004535         jmp        loc_41a1

                     loc_453a:
000000000000453a         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_3990+16
000000000000453f         mov        rbp, r11
0000000000004542         mov        eax, edx
0000000000004544         mov        byte [rsp+arg_5], bl
0000000000004548         jmp        sub_3af0+1097
                        ; endp

                     loc_454d:
000000000000454d         sub        rsp, 0x8                                    ; CODE XREF=sub_3af0+98
0000000000004551         mov        r8d, 0x5
0000000000004557         mov        rcx, r11
000000000000455a         push       qword [rsp+0xf0+var_88]
000000000000455e         push       qword [rsp+0xf8+var_80]
0000000000004562         mov        rdi, r14
0000000000004565         push       qword [rsp+0x100+var_C8]
0000000000004569         mov        r9d, dword [rsp+0x108+var_70]
0000000000004571         mov        rdx, qword [rsp+0x108+var_D8]
0000000000004576         mov        rsi, qword [rsp+0x108+var_98]
000000000000457b         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004580         add        rsp, 0x20
0000000000004584         mov        r15, rax
0000000000004587         jmp        loc_3f89

                     loc_458c:
000000000000458c         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_3af0+121
0000000000004591         jmp        loc_44ac

                     loc_4596:
0000000000004596         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3af0+63
000000000000459e         jmp        loc_3f39

                     loc_45a3:
00000000000045a3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_3af0+1197
                        ; endp

                     loc_45a8:
00000000000045a8         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_3af0+2346
00000000000045ad         jmp        loc_4021

                     loc_45b2:
00000000000045b2         mov        rbp, r11                                    ; CODE XREF=sub_3af0+2264
00000000000045b5         jmp        sub_3af0+1120
                        ; endp

                     loc_45ba:
00000000000045ba         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_3af0+1332
00000000000045bf         xor        eax, eax
00000000000045c1         xor        r12d, r12d
00000000000045c4         mov        qword [rsp+0xe8+var_98], 0x0
00000000000045cd         jmp        loc_3b74

                     loc_45d2:
00000000000045d2         mov        rdx, r13                                    ; CODE XREF=sub_3af0+1264
00000000000045d5         mov        r13, qword [rsp+arg_48]
00000000000045da         jmp        loc_3bd2

                     loc_45df:
00000000000045df         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
00000000000045e4         align      16                                          ; End of unwind block (FDE at 0x77d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
00000000000045f0         push       r15                                         ; Begin of unwind block (FDE at 0x7850), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
00000000000045f2         push       r14
00000000000045f4         movsxd     r15, edi
00000000000045f7         push       r13
00000000000045f9         push       r12
00000000000045fb         mov        r14, rdx
00000000000045fe         push       rbp
00000000000045ff         push       rbx
0000000000004600         mov        rbp, rcx
0000000000004603         sub        rsp, 0x28
0000000000004607         mov        qword [rsp+0x58+var_50], rsi
000000000000460c         call       j___errno_location                          ; __errno_location
0000000000004611         mov        r13, rax
0000000000004614         mov        eax, dword [rax]
0000000000004616         test       r15d, r15d
0000000000004619         mov        rbx, qword [slotvec]                        ; slotvec
0000000000004620         mov        dword [rsp+0x58+var_40], eax
0000000000004624         js         loc_4791

000000000000462a         cmp        dword [nslots], r15d                        ; nslots
0000000000004631         jg         loc_4695

0000000000004633         cmp        r15d, 0x7fffffff
000000000000463a         je         loc_4796

0000000000004640         lea        r12d, dword [r15+1]
0000000000004644         lea        rax, qword [slotvec0]                       ; slotvec0
000000000000464b         movsxd     rsi, r12d
000000000000464e         shl        rsi, 0x4
0000000000004652         cmp        rbx, rax
0000000000004655         je         loc_4770

000000000000465b         mov        rdi, rbx                                    ; argument #1 for method xrealloc
000000000000465e         call       xrealloc                                    ; xrealloc
0000000000004663         mov        rbx, rax
0000000000004666         mov        qword [slotvec], rax                        ; slotvec

                     loc_466d:
000000000000466d         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
0000000000004674         mov        edx, r12d
0000000000004677         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000004679         sub        edx, edi
000000000000467b         shl        rdi, 0x4
000000000000467f         movsxd     rdx, edx
0000000000004682         add        rdi, rbx                                    ; argument "__s" for method j_memset
0000000000004685         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
0000000000004689         call       j_memset                                    ; memset
000000000000468e         mov        dword [nslots], r12d                        ; nslots

                     loc_4695:
0000000000004695         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
0000000000004698         shl        r15, 0x4
000000000000469c         sub        rsp, 0x8
00000000000046a0         add        rbx, r15
00000000000046a3         lea        r15, qword [rbp+8]
00000000000046a7         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
00000000000046ab         mov        r11, qword [rbx]
00000000000046ae         mov        r12, qword [rbx+8]
00000000000046b2         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
00000000000046b5         or         eax, 0x1
00000000000046b8         mov        dword [rsp+0x60+var_3C], eax
00000000000046bc         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
00000000000046bf         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
00000000000046c2         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
00000000000046c5         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
00000000000046c7         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
00000000000046ca         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
00000000000046cf         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
00000000000046d2         mov        qword [rsp+0x78+var_48], r11
00000000000046d7         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000046dc         add        rsp, 0x20
00000000000046e0         mov        r11, qword [rsp+0x58+var_48]
00000000000046e5         cmp        r11, rax
00000000000046e8         ja         loc_4751

00000000000046ea         lea        rsi, qword [rax+1]
00000000000046ee         lea        rax, qword [slot0]                          ; slot0
00000000000046f5         cmp        r12, rax
00000000000046f8         mov        qword [rbx], rsi
00000000000046fb         je         loc_470f

00000000000046fd         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000004700         mov        qword [rsp+0x58+var_48], rsi
0000000000004705         call       j_free                                      ; free
000000000000470a         mov        rsi, qword [rsp+0x58+var_48]

                     loc_470f:
000000000000470f         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
0000000000004712         mov        qword [rsp+0x58+var_48], rsi
0000000000004717         call       xmalloc                                     ; xmalloc
000000000000471c         sub        rsp, 0x8
0000000000004720         mov        qword [rbx+8], rax
0000000000004724         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000004728         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
000000000000472b         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
000000000000472e         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000004731         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000004733         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
0000000000004738         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
000000000000473b         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000004740         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
0000000000004745         mov        r12, rax
0000000000004748         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000474d         add        rsp, 0x20

                     loc_4751:
0000000000004751         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
0000000000004755         mov        dword [r13], eax
0000000000004759         add        rsp, 0x28
000000000000475d         mov        rax, r12
0000000000004760         pop        rbx
0000000000004761         pop        rbp
0000000000004762         pop        r12
0000000000004764         pop        r13
0000000000004766         pop        r14
0000000000004768         pop        r15
000000000000476a         ret
                        ; endp
000000000000476b         align      16

                     loc_4770:
0000000000004770         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
0000000000004772         call       xrealloc                                    ; xrealloc
0000000000004777         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
000000000000477f         mov        rbx, rax
0000000000004782         mov        qword [slotvec], rax                        ; slotvec
0000000000004789         movups     xmmword [rax], xmm0
000000000000478c         jmp        loc_466d

                     loc_4791:
0000000000004791         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_4796:
0000000000004796         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_479b:
000000000000479b         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x7850)
                     clone_quoting_options:
00000000000047a0         push       r12                                         ; Begin of unwind block (FDE at 0x78bc)
00000000000047a2         push       rbp
00000000000047a3         push       rbx
00000000000047a4         mov        rbx, rdi
00000000000047a7         call       j___errno_location                          ; __errno_location
00000000000047ac         mov        r12d, dword [rax]
00000000000047af         mov        rbp, rax
00000000000047b2         lea        rax, qword [default_quoting_options]        ; default_quoting_options
00000000000047b9         test       rbx, rbx
00000000000047bc         mov        esi, 0x38                                   ; argument #2 for method xmemdup
00000000000047c1         cmove      rbx, rax
00000000000047c5         mov        rdi, rbx                                    ; argument #1 for method xmemdup
00000000000047c8         call       xmemdup                                     ; xmemdup
00000000000047cd         mov        dword [rbp], r12d
00000000000047d1         pop        rbx
00000000000047d2         pop        rbp
00000000000047d3         pop        r12
00000000000047d5         ret
                        ; endp
00000000000047d6         align      32                                          ; End of unwind block (FDE at 0x78bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
00000000000047e0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x78e8), default_quoting_options
00000000000047e7         test       rdi, rdi
00000000000047ea         cmove      rdi, rax
00000000000047ee         mov        eax, dword [rdi]
00000000000047f0         ret
                        ; endp
00000000000047f1         align      2048                                        ; End of unwind block (FDE at 0x78e8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
0000000000004800         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x78fc), default_quoting_options
0000000000004807         test       rdi, rdi
000000000000480a         cmove      rdi, rax
000000000000480e         mov        dword [rdi], esi
0000000000004810         ret
                        ; endp
0000000000004811         align      32                                          ; End of unwind block (FDE at 0x78fc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
0000000000004820         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7910), default_quoting_options
0000000000004827         test       rdi, rdi
000000000000482a         mov        ecx, esi
000000000000482c         cmove      rdi, rax
0000000000004830         mov        eax, esi
0000000000004832         and        ecx, 0x1f
0000000000004835         shr        al, 0x5
0000000000004838         movzx      eax, al
000000000000483b         lea        rdi, qword [rdi+rax*4+8]
0000000000004840         mov        esi, dword [rdi]
0000000000004842         mov        eax, esi
0000000000004844         shr        eax, cl
0000000000004846         xor        edx, eax
0000000000004848         and        eax, 0x1
000000000000484b         and        edx, 0x1
000000000000484e         shl        edx, cl
0000000000004850         xor        edx, esi
0000000000004852         mov        dword [rdi], edx
0000000000004854         ret
                        ; endp
0000000000004855         align      32                                          ; End of unwind block (FDE at 0x7910)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
0000000000004860         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7924), default_quoting_options
0000000000004867         test       rdi, rdi
000000000000486a         cmove      rdi, rax
000000000000486e         mov        eax, dword [rdi+4]
0000000000004871         mov        dword [rdi+4], esi
0000000000004874         ret
                        ; endp
0000000000004875         align      128                                         ; End of unwind block (FDE at 0x7924)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
0000000000004880         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7938), default_quoting_options
0000000000004887         test       rdi, rdi
000000000000488a         cmove      rdi, rax
000000000000488e         test       rsi, rsi
0000000000004891         mov        dword [rdi], 0xa
0000000000004897         je         loc_48a7

0000000000004899         test       rdx, rdx
000000000000489c         je         loc_48a7

000000000000489e         mov        qword [rdi+0x28], rsi
00000000000048a2         mov        qword [rdi+0x30], rdx
00000000000048a6         ret
                        ; endp

                     loc_48a7:
00000000000048a7         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
00000000000048ab         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
00000000000048b0         push       r15                                         ; End of unwind block (FDE at 0x7938), Begin of unwind block (FDE at 0x794c)
00000000000048b2         push       r14
00000000000048b4         lea        rax, qword [default_quoting_options]        ; default_quoting_options
00000000000048bb         push       r13
00000000000048bd         push       r12
00000000000048bf         mov        r13, rdi
00000000000048c2         push       rbp
00000000000048c3         push       rbx
00000000000048c4         mov        rbx, r8
00000000000048c7         mov        r14, rsi
00000000000048ca         mov        r15, rdx
00000000000048cd         sub        rsp, 0x18
00000000000048d1         test       r8, r8
00000000000048d4         cmove      rbx, rax
00000000000048d8         mov        qword [rsp+0x48+var_40], rcx
00000000000048dd         call       j___errno_location                          ; __errno_location
00000000000048e2         mov        r12d, dword [rax]
00000000000048e5         mov        rbp, rax
00000000000048e8         lea        rax, qword [rbx+8]
00000000000048ec         sub        rsp, 0x8
00000000000048f0         mov        r9d, dword [rbx+4]
00000000000048f4         push       qword [rbx+0x30]
00000000000048f7         mov        r8d, dword [rbx]
00000000000048fa         push       qword [rbx+0x28]
00000000000048fd         mov        rdx, r15
0000000000004900         push       rax
0000000000004901         mov        rcx, qword [rsp+0x68+var_40]
0000000000004906         mov        rsi, r14
0000000000004909         mov        rdi, r13
000000000000490c         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004911         mov        dword [rbp], r12d
0000000000004915         add        rsp, 0x38
0000000000004919         pop        rbx
000000000000491a         pop        rbp
000000000000491b         pop        r12
000000000000491d         pop        r13
000000000000491f         pop        r14
0000000000004921         pop        r15
0000000000004923         ret
                        ; endp
0000000000004924         align      16                                          ; End of unwind block (FDE at 0x794c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
0000000000004930         push       r15                                         ; Begin of unwind block (FDE at 0x79a0), CODE XREF=quotearg_alloc+5
0000000000004932         push       r14
0000000000004934         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000493b         push       r13
000000000000493d         push       r12
000000000000493f         mov        r12, rdx
0000000000004942         push       rbp
0000000000004943         push       rbx
0000000000004944         mov        rbx, rcx
0000000000004947         mov        r14, rdi
000000000000494a         mov        r15, rsi
000000000000494d         sub        rsp, 0x38
0000000000004951         test       rcx, rcx
0000000000004954         cmove      rbx, rax
0000000000004958         xor        ebp, ebp
000000000000495a         call       j___errno_location                          ; __errno_location
000000000000495f         test       r12, r12
0000000000004962         mov        r13, rax
0000000000004965         mov        eax, dword [rax]
0000000000004967         sete       bpl
000000000000496b         or         ebp, dword [rbx+4]
000000000000496e         lea        r10, qword [rbx+8]
0000000000004972         sub        rsp, 0x8
0000000000004976         mov        r8d, dword [rbx]
0000000000004979         mov        rcx, r15
000000000000497c         mov        dword [rsp+0x70+var_5C], eax
0000000000004980         push       qword [rbx+0x30]
0000000000004983         mov        rdx, r14
0000000000004986         push       qword [rbx+0x28]
0000000000004989         push       r10
000000000000498b         xor        esi, esi
000000000000498d         mov        r9d, ebp
0000000000004990         xor        edi, edi
0000000000004992         mov        qword [rsp+0x88+var_48], r10
0000000000004997         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000499c         lea        rsi, qword [rax+1]
00000000000049a0         mov        qword [rsp+0x88+var_40], rax
00000000000049a5         add        rsp, 0x20
00000000000049a9         mov        rdi, rsi
00000000000049ac         mov        qword [rsp+0x68+var_50], rsi
00000000000049b1         call       xmalloc                                     ; xmalloc
00000000000049b6         mov        qword [rsp+0x68+var_58], rax
00000000000049bb         sub        rsp, 0x8
00000000000049bf         push       qword [rbx+0x30]
00000000000049c2         push       qword [rbx+0x28]
00000000000049c5         mov        r10, qword [rsp+0x80+var_48]
00000000000049ca         mov        r9d, ebp
00000000000049cd         mov        r8d, dword [rbx]
00000000000049d0         mov        rcx, r15
00000000000049d3         mov        rdx, r14
00000000000049d6         mov        rdi, rax
00000000000049d9         push       r10
00000000000049db         mov        rsi, qword [rsp+0x88+var_50]
00000000000049e0         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000049e5         mov        eax, dword [rsp+0x88+var_5C]
00000000000049e9         add        rsp, 0x20
00000000000049ed         test       r12, r12
00000000000049f0         mov        dword [r13], eax
00000000000049f4         je         loc_49ff

00000000000049f6         mov        r11, qword [rsp+0x68+var_40]
00000000000049fb         mov        qword [r12], r11

                     loc_49ff:
00000000000049ff         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
0000000000004a04         add        rsp, 0x38
0000000000004a08         pop        rbx
0000000000004a09         pop        rbp
0000000000004a0a         pop        r12
0000000000004a0c         pop        r13
0000000000004a0e         pop        r14
0000000000004a10         pop        r15
0000000000004a12         ret
                        ; endp
0000000000004a13         align      32                                          ; End of unwind block (FDE at 0x79a0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
0000000000004a20         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x7a0c)
0000000000004a23         xor        edx, edx
0000000000004a25         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
0000000000004a2a         align      16                                          ; End of unwind block (FDE at 0x7a0c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
0000000000004a30         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0x7a20), nslots
0000000000004a36         push       r12
0000000000004a38         mov        r12, qword [slotvec]                        ; slotvec
0000000000004a3f         push       rbp
0000000000004a40         push       rbx
0000000000004a41         cmp        eax, 0x1
0000000000004a44         jle        loc_4a71

0000000000004a46         sub        eax, 0x2
0000000000004a49         lea        rbx, qword [r12+0x18]
0000000000004a4e         shl        rax, 0x4
0000000000004a52         lea        rbp, qword [r12+rax+0x28]
0000000000004a57         nop        word [rax+rax]

                     loc_4a60:
0000000000004a60         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
0000000000004a63         add        rbx, 0x10
0000000000004a67         call       j_free                                      ; free
0000000000004a6c         cmp        rbx, rbp
0000000000004a6f         jne        loc_4a60

                     loc_4a71:
0000000000004a71         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
0000000000004a76         lea        rbx, qword [slot0]                          ; slot0
0000000000004a7d         cmp        rdi, rbx
0000000000004a80         je         loc_4a99

0000000000004a82         call       j_free                                      ; free
0000000000004a87         mov        qword [slotvec0], 0x100                     ; slotvec0
0000000000004a92         mov        qword [slotvec0+8], rbx                     ; 0x209078

                     loc_4a99:
0000000000004a99         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
0000000000004aa0         cmp        r12, rbx
0000000000004aa3         je         loc_4ab4

0000000000004aa5         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000004aa8         call       j_free                                      ; free
0000000000004aad         mov        qword [slotvec], rbx                        ; slotvec

                     loc_4ab4:
0000000000004ab4         pop        rbx                                         ; CODE XREF=quotearg_free+115
0000000000004ab5         mov        dword [nslots], 0x1                         ; nslots
0000000000004abf         pop        rbp
0000000000004ac0         pop        r12
0000000000004ac2         ret
                        ; endp
0000000000004ac3         align      16                                          ; End of unwind block (FDE at 0x7a20)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
0000000000004ad0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7a4c), default_quoting_options
0000000000004ad7         mov        rdx, 0xffffffffffffffff
0000000000004ade         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004ae3         align      16                                          ; End of unwind block (FDE at 0x7a4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
0000000000004af0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7a60), default_quoting_options
0000000000004af7         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004afc         align      256                                         ; End of unwind block (FDE at 0x7a60)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
0000000000004b00         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7a74), default_quoting_options
0000000000004b07         mov        rsi, rdi
0000000000004b0a         mov        rdx, 0xffffffffffffffff
0000000000004b11         xor        edi, edi
0000000000004b13         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004b18         align      32                                          ; End of unwind block (FDE at 0x7a74)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
0000000000004b20         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7a88), default_quoting_options
0000000000004b27         mov        rdx, rsi
0000000000004b2a         mov        rsi, rdi
0000000000004b2d         xor        edi, edi
0000000000004b2f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004b34         align      64                                          ; End of unwind block (FDE at 0x7a88)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
0000000000004b40         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x7a9c), CODE XREF=argmatch_invalid+64
0000000000004b44         mov        rax, rdx
0000000000004b47         mov        rdx, qword [fs:0x28]
0000000000004b50         mov        qword [rsp+0x48+var_10], rdx
0000000000004b55         xor        edx, edx
0000000000004b57         cmp        esi, 0xa
0000000000004b5a         je         loc_4bc4

0000000000004b5c         mov        dword [rsp+0x48+var_48], esi
0000000000004b5f         mov        rcx, rsp
0000000000004b62         mov        rdx, 0xffffffffffffffff
0000000000004b69         mov        rsi, rax
0000000000004b6c         mov        qword [rsp+0x48+var_44], 0x0
0000000000004b75         mov        qword [rsp+0x48+var_3C], 0x0
0000000000004b7e         mov        qword [rsp+0x48+var_34], 0x0
0000000000004b87         mov        qword [rsp+0x48+var_2C], 0x0
0000000000004b90         mov        qword [rsp+0x48+var_24], 0x0
0000000000004b99         mov        qword [rsp+0x48+var_1C], 0x0
0000000000004ba2         mov        dword [rsp+0x48+var_14], 0x0
0000000000004baa         call       quotearg_n_options                          ; quotearg_n_options
0000000000004baf         mov        rcx, qword [rsp+0x48+var_10]
0000000000004bb4         xor        rcx, qword [fs:0x28]
0000000000004bbd         jne        loc_4bc9

0000000000004bbf         add        rsp, 0x48
0000000000004bc3         ret
                        ; endp

                     loc_4bc4:
0000000000004bc4         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_4bc9:
0000000000004bc9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
0000000000004bce         align      16                                          ; End of unwind block (FDE at 0x7a9c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
0000000000004bd0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x7ab8), CODE XREF=quotearg_style_mem+10
0000000000004bd4         mov        rax, rdx
0000000000004bd7         mov        rdx, rcx
0000000000004bda         mov        rcx, qword [fs:0x28]
0000000000004be3         mov        qword [rsp+0x48+var_10], rcx
0000000000004be8         xor        ecx, ecx
0000000000004bea         cmp        esi, 0xa
0000000000004bed         je         loc_4c50

0000000000004bef         mov        dword [rsp+0x48+var_48], esi
0000000000004bf2         mov        rcx, rsp
0000000000004bf5         mov        rsi, rax
0000000000004bf8         mov        qword [rsp+0x48+var_44], 0x0
0000000000004c01         mov        qword [rsp+0x48+var_3C], 0x0
0000000000004c0a         mov        qword [rsp+0x48+var_34], 0x0
0000000000004c13         mov        qword [rsp+0x48+var_2C], 0x0
0000000000004c1c         mov        qword [rsp+0x48+var_24], 0x0
0000000000004c25         mov        qword [rsp+0x48+var_1C], 0x0
0000000000004c2e         mov        dword [rsp+0x48+var_14], 0x0
0000000000004c36         call       quotearg_n_options                          ; quotearg_n_options
0000000000004c3b         mov        rdx, qword [rsp+0x48+var_10]
0000000000004c40         xor        rdx, qword [fs:0x28]
0000000000004c49         jne        loc_4c55

0000000000004c4b         add        rsp, 0x48
0000000000004c4f         ret
                        ; endp

                     loc_4c50:
0000000000004c50         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_4c55:
0000000000004c55         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
0000000000004c5a         align      32                                          ; End of unwind block (FDE at 0x7ab8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
0000000000004c60         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x7ad4)
0000000000004c63         mov        esi, edi
0000000000004c65         xor        edi, edi
0000000000004c67         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
0000000000004c6c         align      16                                          ; End of unwind block (FDE at 0x7ad4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
0000000000004c70         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x7ae8)
0000000000004c73         mov        rdx, rsi
0000000000004c76         mov        esi, edi
0000000000004c78         xor        edi, edi
0000000000004c7a         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
0000000000004c7f         align      128                                         ; End of unwind block (FDE at 0x7ae8)

                     quotearg_char_mem:
0000000000004c80         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x7afc), CODE XREF=quotearg_char+11
0000000000004c84         mov        ecx, edx
0000000000004c86         mov        rax, qword [fs:0x28]
0000000000004c8f         mov        qword [rsp+0x48+var_10], rax
0000000000004c94         xor        eax, eax
0000000000004c96         mov        rax, qword [qword_209250]                   ; qword_209250
0000000000004c9d         mov        r8, rsp
0000000000004ca0         and        ecx, 0x1f
0000000000004ca3         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000004cab         mov        qword [rsp+0x48+var_18], rax
0000000000004cb0         mov        eax, edx
0000000000004cb2         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000004cb6         shr        al, 0x5
0000000000004cb9         movzx      eax, al
0000000000004cbc         lea        r9, qword [r8+rax*4+8]
0000000000004cc1         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x209230
0000000000004cc9         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000004cce         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x209240
0000000000004cd6         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000004cdb         mov        edx, dword [r9]
0000000000004cde         mov        eax, edx
0000000000004ce0         shr        eax, cl
0000000000004ce2         not        eax
0000000000004ce4         and        eax, 0x1
0000000000004ce7         shl        eax, cl
0000000000004ce9         mov        rcx, r8
0000000000004cec         xor        eax, edx
0000000000004cee         mov        rdx, rsi
0000000000004cf1         mov        rsi, rdi
0000000000004cf4         mov        dword [r9], eax
0000000000004cf7         xor        edi, edi
0000000000004cf9         call       quotearg_n_options                          ; quotearg_n_options
0000000000004cfe         mov        rsi, qword [rsp+0x48+var_10]
0000000000004d03         xor        rsi, qword [fs:0x28]
0000000000004d0c         jne        loc_4d13

0000000000004d0e         add        rsp, 0x48
0000000000004d12         ret
                        ; endp

                     loc_4d13:
0000000000004d13         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
0000000000004d18         align      32                                          ; End of unwind block (FDE at 0x7afc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
0000000000004d20         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0x7b18)
0000000000004d24         mov        rsi, 0xffffffffffffffff
0000000000004d2b         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
0000000000004d30         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0x7b18), Begin of unwind block (FDE at 0x7b2c), CODE XREF=close_stdout+101
0000000000004d35         mov        rsi, 0xffffffffffffffff
0000000000004d3c         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000004d41         align      16                                          ; End of unwind block (FDE at 0x7b2c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
0000000000004d50         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0x7b40)
0000000000004d55         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000004d5a         align      32                                          ; End of unwind block (FDE at 0x7b40)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
0000000000004d60         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x7b54), CODE XREF=main+387, sysv_sum_file+378, sysv_sum_file+465, bsd_sum_file+421, bsd_sum_file+474
0000000000004d64         mov        rax, rdx
0000000000004d67         mov        rdx, qword [fs:0x28]
0000000000004d70         mov        qword [rsp+0x48+var_10], rdx
0000000000004d75         xor        edx, edx
0000000000004d77         cmp        esi, 0xa
0000000000004d7a         je         loc_4de4

0000000000004d7c         mov        dword [rsp+0x48+var_48], esi
0000000000004d7f         mov        rcx, rsp
0000000000004d82         mov        rdx, 0xffffffffffffffff
0000000000004d89         mov        rsi, rax
0000000000004d8c         mov        qword [rsp+0x48+var_44], 0x0
0000000000004d95         mov        qword [rsp+0x48+var_3C], 0x4000000
0000000000004d9e         mov        qword [rsp+0x48+var_34], 0x0
0000000000004da7         mov        qword [rsp+0x48+var_2C], 0x0
0000000000004db0         mov        qword [rsp+0x48+var_24], 0x0
0000000000004db9         mov        qword [rsp+0x48+var_1C], 0x0
0000000000004dc2         mov        dword [rsp+0x48+var_14], 0x0
0000000000004dca         call       quotearg_n_options                          ; quotearg_n_options
0000000000004dcf         mov        rcx, qword [rsp+0x48+var_10]
0000000000004dd4         xor        rcx, qword [fs:0x28]
0000000000004ddd         jne        loc_4de9

0000000000004ddf         add        rsp, 0x48
0000000000004de3         ret
                        ; endp

                     loc_4de4:
0000000000004de4         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_4de9:
0000000000004de9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
0000000000004dee         align      16                                          ; End of unwind block (FDE at 0x7b54)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom_mem:
0000000000004df0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x7b70), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
0000000000004df4         mov        r9, rcx
0000000000004df7         mov        rcx, qword [qword_209250]                   ; qword_209250
0000000000004dfe         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000004e06         mov        rax, qword [fs:0x28]
0000000000004e0f         mov        qword [rsp+0x48+var_10], rax
0000000000004e14         xor        eax, eax
0000000000004e16         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000004e1a         test       rsi, rsi
0000000000004e1d         mov        qword [rsp+0x48+var_18], rcx
0000000000004e22         mov        dword [rsp+0x48+var_48], 0xa
0000000000004e29         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x209230
0000000000004e31         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000004e36         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x209240
0000000000004e3e         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000004e43         je         loc_4e77

0000000000004e45         test       rdx, rdx
0000000000004e48         je         loc_4e77

0000000000004e4a         mov        qword [rsp+0x48+var_20], rsi
0000000000004e4f         mov        qword [rsp+0x48+var_18], rdx
0000000000004e54         mov        rcx, rsp
0000000000004e57         mov        rdx, r8
0000000000004e5a         mov        rsi, r9
0000000000004e5d         call       quotearg_n_options                          ; quotearg_n_options
0000000000004e62         mov        rdi, qword [rsp+0x48+var_10]
0000000000004e67         xor        rdi, qword [fs:0x28]
0000000000004e70         jne        loc_4e7c

0000000000004e72         add        rsp, 0x48
0000000000004e76         ret
                        ; endp

                     loc_4e77:
0000000000004e77         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_4e7c:
0000000000004e7c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
0000000000004e81         align      16                                          ; End of unwind block (FDE at 0x7b70)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_custom:
0000000000004e90         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0x7b8c)
0000000000004e97         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004e9c         align      32                                          ; End of unwind block (FDE at 0x7b8c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
0000000000004ea0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x7ba0)
0000000000004ea3         mov        r8, 0xffffffffffffffff
0000000000004eaa         mov        rdx, rsi
0000000000004ead         mov        rsi, rdi
0000000000004eb0         xor        edi, edi
0000000000004eb2         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004eb7         align      64                                          ; End of unwind block (FDE at 0x7ba0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
0000000000004ec0         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0x7bb4)
0000000000004ec3         mov        rcx, rdx
0000000000004ec6         mov        rdx, rsi
0000000000004ec9         mov        rsi, rdi
0000000000004ecc         xor        edi, edi
0000000000004ece         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004ed3         align      32                                          ; End of unwind block (FDE at 0x7bb4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
0000000000004ee0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x7bc8), quote_quoting_options
0000000000004ee7         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004eec         align      16                                          ; End of unwind block (FDE at 0x7bc8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
0000000000004ef0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x7bdc), quote_quoting_options
0000000000004ef7         mov        rdx, rsi
0000000000004efa         mov        rsi, rdi
0000000000004efd         xor        edi, edi
0000000000004eff         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004f04         align      16                                          ; End of unwind block (FDE at 0x7bdc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
0000000000004f10         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x7bf0), quote_quoting_options, CODE XREF=argmatch_invalid+46
0000000000004f17         mov        rdx, 0xffffffffffffffff
0000000000004f1e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004f23         align      16                                          ; End of unwind block (FDE at 0x7bf0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
0000000000004f30         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x7c04), quote_quoting_options, CODE XREF=argmatch_valid+90, argmatch_valid+169
0000000000004f37         mov        rsi, rdi
0000000000004f3a         mov        rdx, 0xffffffffffffffff
0000000000004f41         xor        edi, edi
0000000000004f43         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004f48         align      16                                          ; End of unwind block (FDE at 0x7c04)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     safe_read:
0000000000004f50         push       r13                                         ; Begin of unwind block (FDE at 0x7c1c), CODE XREF=sysv_sum_file+122
0000000000004f52         push       r12
0000000000004f54         mov        r13d, edi
0000000000004f57         push       rbp
0000000000004f58         push       rbx
0000000000004f59         mov        r12, rsi
0000000000004f5c         mov        rbx, rdx
0000000000004f5f         sub        rsp, 0x8
0000000000004f63         nop        dword [rax+rax]

                     loc_4f68:
0000000000004f68         mov        rdx, rbx                                    ; argument "__nbytes" for method j_read, CODE XREF=safe_read+56, safe_read+77
0000000000004f6b         mov        rsi, r12                                    ; argument "__buf" for method j_read
0000000000004f6e         mov        edi, r13d                                   ; argument "__fd" for method j_read
0000000000004f71         call       j_read                                      ; read
0000000000004f76         test       rax, rax
0000000000004f79         mov        rbp, rax
0000000000004f7c         jns        loc_4fa0

0000000000004f7e         call       j___errno_location                          ; __errno_location
0000000000004f83         mov        eax, dword [rax]
0000000000004f85         cmp        eax, 0x4
0000000000004f88         je         loc_4f68

0000000000004f8a         cmp        rbx, 0x7ff00000
0000000000004f91         jbe        loc_4fa0

0000000000004f93         cmp        eax, 0x16
0000000000004f96         jne        loc_4fa0

0000000000004f98         mov        ebx, 0x7ff00000
0000000000004f9d         jmp        loc_4f68
0000000000004f9f         align      32

                     loc_4fa0:
0000000000004fa0         add        rsp, 0x8                                    ; CODE XREF=safe_read+44, safe_read+65, safe_read+70
0000000000004fa4         mov        rax, rbp
0000000000004fa7         pop        rbx
0000000000004fa8         pop        rbp
0000000000004fa9         pop        r12
0000000000004fab         pop        r13
0000000000004fad         ret
                        ; endp
0000000000004fae         align      16                                          ; End of unwind block (FDE at 0x7c1c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
0000000000004fb0         push       r15                                         ; Begin of unwind block (FDE at 0x7c54), CODE XREF=j_version_etc_arn, version_etc_va+75, version_etc+161
0000000000004fb2         push       r14
0000000000004fb4         push       r13
0000000000004fb6         push       r12
0000000000004fb8         mov        r12, r9
0000000000004fbb         push       rbp
0000000000004fbc         push       rbx
0000000000004fbd         mov        rbp, rdi
0000000000004fc0         mov        rbx, r8
0000000000004fc3         sub        rsp, 0x28
0000000000004fc7         test       rsi, rsi
0000000000004fca         je         loc_50e8

0000000000004fd0         mov        r8, rdx
0000000000004fd3         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
0000000000004fda         mov        r9, rcx
0000000000004fdd         xor        eax, eax
0000000000004fdf         mov        rcx, rsi
0000000000004fe2         mov        esi, 0x1
0000000000004fe7         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_4fec:
0000000000004fec         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0x6c9b, CODE XREF=version_etc_arn+337
0000000000004ff3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004ff5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004ffa         call       j_dcgettext                                 ; dcgettext
0000000000004fff         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000005006         mov        rcx, rax
0000000000005009         mov        r8d, 0x7e3
000000000000500f         mov        esi, 0x1
0000000000005014         mov        rdi, rbp
0000000000005017         xor        eax, eax
0000000000005019         call       j___fprintf_chk                             ; __fprintf_chk
000000000000501e         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000005025         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005027         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000502c         call       j_dcgettext                                 ; dcgettext
0000000000005031         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
0000000000005034         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000005037         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000503c         cmp        r12, 0x9
0000000000005040         ja         loc_5380

0000000000005046         lea        rdx, qword [switch_table_6f84]              ; switch_table_6f84
000000000000504d         movsxd     rax, dword [rdx+r12*4]
0000000000005051         add        rax, rdx
0000000000005054         jmp        rax                                         ; switch statement using table at 0x6f84, with 10 cases, 0x5060,0x50d6,0x5110,0x5168,0x51a8,0x51f0,0x5240,0x5298,0x52c8,0x5330
0000000000005056         align      32

                     loc_5060:
0000000000005060         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
0000000000005064         mov        rax, qword [rbx+0x10]
0000000000005068         lea        rsi, qword [aWrittenBySSSns_6e98]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
000000000000506f         mov        r8, qword [rbx+8]
0000000000005073         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005078         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000507a         mov        r13, qword [rbx+0x30]
000000000000507e         mov        r12, qword [rbx+0x28]
0000000000005082         mov        qword [rsp+0x58+var_48], r9
0000000000005087         mov        r15, qword [rbx+0x20]
000000000000508b         mov        r14, qword [rbx+0x18]
000000000000508f         mov        qword [rsp+0x58+var_58], rax
0000000000005093         mov        qword [rsp+0x58+var_50], r8
0000000000005098         mov        rbx, qword [rbx]
000000000000509b         call       j_dcgettext                                 ; dcgettext
00000000000050a0         sub        rsp, 0x8

                     loc_50a4:
00000000000050a4         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
00000000000050a9         mov        rdx, rax
00000000000050ac         mov        rcx, rbx
00000000000050af         mov        esi, 0x1
00000000000050b4         mov        rdi, rbp
00000000000050b7         xor        eax, eax
00000000000050b9         push       r9
00000000000050bb         push       r13
00000000000050bd         push       r12
00000000000050bf         push       r15
00000000000050c1         push       r14
00000000000050c3         mov        r9, qword [rsp+0x88+var_58]
00000000000050c8         mov        r8, qword [rsp+0x88+var_50]
00000000000050cd         call       j___fprintf_chk                             ; __fprintf_chk
00000000000050d2         add        rsp, 0x30

                     loc_50d6:
00000000000050d6         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
00000000000050da         pop        rbx
00000000000050db         pop        rbp
00000000000050dc         pop        r12
00000000000050de         pop        r13
00000000000050e0         pop        r14
00000000000050e2         pop        r15
00000000000050e4         ret
                        ; endp
00000000000050e5         align      8

                     loc_50e8:
00000000000050e8         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
00000000000050eb         mov        rcx, rdx
00000000000050ee         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
00000000000050f5         mov        esi, 0x1
00000000000050fa         xor        eax, eax
00000000000050fc         call       j___fprintf_chk                             ; __fprintf_chk
0000000000005101         jmp        loc_4fec
0000000000005106         align      16

                     loc_5110:
0000000000005110         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
0000000000005114         mov        r9, qword [rbx+0x38]
0000000000005118         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
000000000000511f         mov        rax, qword [rbx+0x10]
0000000000005123         mov        r8, qword [rbx+8]
0000000000005127         mov        edx, 0x5
000000000000512c         mov        r13, qword [rbx+0x30]
0000000000005130         mov        r12, qword [rbx+0x28]
0000000000005134         mov        r15, qword [rbx+0x20]
0000000000005138         mov        r14, qword [rbx+0x18]
000000000000513c         mov        rbx, qword [rbx]
000000000000513f         mov        qword [rsp+0x58+var_40], r10
0000000000005144         mov        qword [rsp+0x58+var_48], r9
0000000000005149         mov        qword [rsp+0x58+var_58], rax
000000000000514d         mov        qword [rsp+0x58+var_50], r8

                     loc_5152:
0000000000005152         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
0000000000005154         call       j_dcgettext                                 ; dcgettext
0000000000005159         mov        r10, qword [rsp+0x58+var_40]
000000000000515e         push       r10
0000000000005160         jmp        loc_50a4
0000000000005165         align      8

                     loc_5168:
0000000000005168         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
000000000000516b         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
0000000000005172         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005177         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005179         call       j_dcgettext                                 ; dcgettext
000000000000517e         add        rsp, 0x28
0000000000005182         mov        rcx, rbx
0000000000005185         mov        rdi, rbp
0000000000005188         pop        rbx
0000000000005189         pop        rbp
000000000000518a         pop        r12
000000000000518c         pop        r13
000000000000518e         pop        r14
0000000000005190         pop        r15
0000000000005192         mov        rdx, rax
0000000000005195         mov        esi, 0x1
000000000000519a         xor        eax, eax
000000000000519c         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
00000000000051a1         align      8

                     loc_51a8:
00000000000051a8         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
00000000000051ac         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
00000000000051b3         mov        rbx, qword [rbx]
00000000000051b6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000051bb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000051bd         call       j_dcgettext                                 ; dcgettext
00000000000051c2         add        rsp, 0x28
00000000000051c6         mov        r8, r12
00000000000051c9         mov        rcx, rbx
00000000000051cc         mov        rdi, rbp
00000000000051cf         mov        rdx, rax
00000000000051d2         mov        esi, 0x1
00000000000051d7         pop        rbx
00000000000051d8         pop        rbp
00000000000051d9         pop        r12
00000000000051db         pop        r13
00000000000051dd         pop        r14
00000000000051df         pop        r15
00000000000051e1         xor        eax, eax
00000000000051e3         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
00000000000051e8         align      16

                     loc_51f0:
00000000000051f0         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
00000000000051f4         mov        r12, qword [rbx+8]
00000000000051f8         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
00000000000051ff         mov        rbx, qword [rbx]
0000000000005202         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005207         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005209         call       j_dcgettext                                 ; dcgettext
000000000000520e         add        rsp, 0x28
0000000000005212         mov        r9, r13
0000000000005215         mov        r8, r12
0000000000005218         mov        rcx, rbx
000000000000521b         mov        rdi, rbp
000000000000521e         mov        rdx, rax
0000000000005221         pop        rbx
0000000000005222         pop        rbp
0000000000005223         pop        r12
0000000000005225         pop        r13
0000000000005227         pop        r14
0000000000005229         pop        r15
000000000000522b         mov        esi, 0x1
0000000000005230         xor        eax, eax
0000000000005232         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000005237         align      64

                     loc_5240:
0000000000005240         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
0000000000005247         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000524c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000524e         mov        r14, qword [rbx+0x18]
0000000000005252         mov        r13, qword [rbx+0x10]
0000000000005256         mov        r12, qword [rbx+8]
000000000000525a         mov        rbx, qword [rbx]
000000000000525d         call       j_dcgettext                                 ; dcgettext
0000000000005262         sub        rsp, 0x8

                     loc_5266:
0000000000005266         push       r14                                         ; CODE XREF=version_etc_arn+784
0000000000005268         mov        rdx, rax
000000000000526b         mov        r9, r13
000000000000526e         mov        r8, r12
0000000000005271         mov        rcx, rbx
0000000000005274         mov        rdi, rbp
0000000000005277         mov        esi, 0x1
000000000000527c         xor        eax, eax
000000000000527e         call       j___fprintf_chk                             ; __fprintf_chk
0000000000005283         pop        rax
0000000000005284         pop        rdx
0000000000005285         add        rsp, 0x28
0000000000005289         pop        rbx
000000000000528a         pop        rbp
000000000000528b         pop        r12
000000000000528d         pop        r13
000000000000528f         pop        r14
0000000000005291         pop        r15
0000000000005293         ret
                        ; endp
0000000000005294         align      8

                     loc_5298:
0000000000005298         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
000000000000529c         lea        rsi, qword [aWrittenBySSSns_6e18]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
00000000000052a3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000052a8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000052aa         mov        r14, qword [rbx+0x18]
00000000000052ae         mov        r13, qword [rbx+0x10]
00000000000052b2         mov        r12, qword [rbx+8]
00000000000052b6         mov        rbx, qword [rbx]
00000000000052b9         call       j_dcgettext                                 ; dcgettext
00000000000052be         push       r15
00000000000052c0         jmp        loc_5266
00000000000052c2         align      8

                     loc_52c8:
00000000000052c8         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
00000000000052cc         mov        r12, qword [rbx+0x28]
00000000000052d0         lea        rsi, qword [aWrittenBySSSns_6e40]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
00000000000052d7         mov        r15, qword [rbx+0x20]
00000000000052db         mov        r14, qword [rbx+0x18]
00000000000052df         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000052e4         mov        r13, qword [rbx+0x10]
00000000000052e8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000052ea         mov        rbx, qword [rbx]
00000000000052ed         mov        qword [rsp+0x58+var_58], r8
00000000000052f1         call       j_dcgettext                                 ; dcgettext
00000000000052f6         sub        rsp, 0x8
00000000000052fa         mov        r9, r13
00000000000052fd         push       r12
00000000000052ff         push       r15
0000000000005301         push       r14

                     loc_5303:
0000000000005303         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
0000000000005308         mov        rcx, rbx
000000000000530b         mov        rdx, rax
000000000000530e         mov        rdi, rbp
0000000000005311         mov        esi, 0x1
0000000000005316         xor        eax, eax
0000000000005318         call       j___fprintf_chk                             ; __fprintf_chk
000000000000531d         add        rsp, 0x20
0000000000005321         add        rsp, 0x28
0000000000005325         pop        rbx
0000000000005326         pop        rbp
0000000000005327         pop        r12
0000000000005329         pop        r13
000000000000532b         pop        r14
000000000000532d         pop        r15
000000000000532f         ret
                        ; endp

                     loc_5330:
0000000000005330         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
0000000000005334         mov        r13, qword [rbx+0x30]
0000000000005338         lea        rsi, qword [aWrittenBySSSns_6e68]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
000000000000533f         mov        r12, qword [rbx+0x28]
0000000000005343         mov        r15, qword [rbx+0x20]
0000000000005347         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000534c         mov        r14, qword [rbx+0x18]
0000000000005350         mov        r8, qword [rbx+8]
0000000000005354         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005356         mov        qword [rsp+0x58+var_50], r9
000000000000535b         mov        rbx, qword [rbx]
000000000000535e         mov        qword [rsp+0x58+var_58], r8
0000000000005362         call       j_dcgettext                                 ; dcgettext
0000000000005367         push       r13
0000000000005369         push       r12
000000000000536b         push       r15
000000000000536d         push       r14
000000000000536f         mov        r9, qword [rsp+0x78+var_50]
0000000000005374         jmp        loc_5303
0000000000005376         align      128

                     loc_5380:
0000000000005380         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
0000000000005384         mov        r9, qword [rbx+0x38]
0000000000005388         mov        edx, 0x5
000000000000538d         mov        rax, qword [rbx+0x10]
0000000000005391         mov        r8, qword [rbx+8]
0000000000005395         lea        rsi, qword [aWrittenBySSSns_6f00]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
000000000000539c         mov        r13, qword [rbx+0x30]
00000000000053a0         mov        r12, qword [rbx+0x28]
00000000000053a4         mov        r15, qword [rbx+0x20]
00000000000053a8         mov        r14, qword [rbx+0x18]
00000000000053ac         mov        qword [rsp+0x58+var_40], r10
00000000000053b1         mov        qword [rsp+0x58+var_48], r9
00000000000053b6         mov        qword [rsp+0x58+var_58], rax
00000000000053ba         mov        qword [rsp+0x58+var_50], r8
00000000000053bf         mov        rbx, qword [rbx]
00000000000053c2         jmp        loc_5152
00000000000053c7         align      16                                          ; End of unwind block (FDE at 0x7c54)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
00000000000053d0         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0x7d68)
00000000000053d3         cmp        qword [r8], 0x0
00000000000053d7         je         j_version_etc_arn                           ; version_etc_arn

00000000000053d9         nop        dword [rax]

                     loc_53e0:
00000000000053e0         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
00000000000053e4         cmp        qword [r8+r9*8], 0x0
00000000000053e9         jne        loc_53e0

                     j_version_etc_arn:        // version_etc_arn
00000000000053eb         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
00000000000053f0         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0x7d68), Begin of unwind block (FDE at 0x7d7c)
00000000000053f4         mov        r10, r8
00000000000053f7         xor        r9d, r9d
00000000000053fa         mov        rax, qword [fs:0x28]
0000000000005403         mov        qword [rsp+0x68+var_10], rax
0000000000005408         xor        eax, eax
000000000000540a         mov        r8, rsp
000000000000540d         nop        dword [rax]

                     loc_5410:
0000000000005410         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000005413         cmp        eax, 0x2f
0000000000005416         ja         loc_545a

0000000000005418         mov        r11d, eax
000000000000541b         add        r11, qword [r10+0x10]
000000000000541f         add        eax, 0x8
0000000000005422         mov        dword [r10], eax

                     loc_5425:
0000000000005425         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000005428         test       rax, rax
000000000000542b         mov        qword [r8+r9*8], rax
000000000000542f         je         loc_543b

0000000000005431         add        r9, 0x1
0000000000005435         cmp        r9, 0xa
0000000000005439         jne        loc_5410

                     loc_543b:
000000000000543b         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
0000000000005440         mov        rax, qword [rsp+0x68+var_10]
0000000000005445         xor        rax, qword [fs:0x28]
000000000000544e         jne        loc_5455

0000000000005450         add        rsp, 0x68
0000000000005454         ret
                        ; endp

                     loc_5455:
0000000000005455         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_545a:
000000000000545a         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
000000000000545e         lea        rax, qword [r11+8]
0000000000005462         mov        qword [r10+8], rax
0000000000005466         jmp        loc_5425
0000000000005468         align      16                                          ; End of unwind block (FDE at 0x7d7c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
0000000000005470         push       rbp                                         ; Begin of unwind block (FDE at 0x7d98), CODE XREF=main+269
0000000000005471         push       rbx
0000000000005472         mov        r10d, 0x20
0000000000005478         xor        r11d, r11d
000000000000547b         sub        rsp, 0xb8
0000000000005482         mov        rax, qword [fs:0x28]
000000000000548b         mov        qword [rsp+0xc8+var_50], rax
0000000000005490         xor        eax, eax
0000000000005492         lea        rax, qword [rsp+0xc8+arg_0]
000000000000549a         mov        qword [rsp+0xc8+var_28], r8
00000000000054a2         lea        rbx, qword [rsp+0xc8+arg_0]
00000000000054aa         lea        r8, qword [rsp+0xc8+var_A8]
00000000000054af         mov        qword [rsp+0xc8+var_20], r9
00000000000054b7         mov        dword [rsp+0xc8+var_C0], 0x20
00000000000054bf         mov        qword [rsp+0xc8+var_B8], rax
00000000000054c4         lea        rax, qword [rsp+0xc8+var_48]
00000000000054cc         xor        r9d, r9d
00000000000054cf         mov        qword [rsp+0xc8+var_B0], rax
00000000000054d4         mov        rbp, rax
00000000000054d7         nop        word [rax+rax]

                     loc_54e0:
00000000000054e0         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
00000000000054e4         ja         loc_553c

00000000000054e6         mov        eax, r10d
00000000000054e9         mov        r11d, 0x1
00000000000054ef         add        r10d, 0x8
00000000000054f3         add        rax, rbp

                     loc_54f6:
00000000000054f6         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
00000000000054f9         test       rax, rax
00000000000054fc         mov        qword [r8+r9*8], rax
0000000000005500         je         loc_550c

0000000000005502         add        r9, 0x1
0000000000005506         cmp        r9, 0xa
000000000000550a         jne        loc_54e0

                     loc_550c:
000000000000550c         test       r11b, r11b                                  ; CODE XREF=version_etc+144
000000000000550f         jne        loc_5535

                     loc_5511:
0000000000005511         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000005516         mov        rax, qword [rsp+0xc8+var_50]
000000000000551b         xor        rax, qword [fs:0x28]
0000000000005524         jne        loc_5530

0000000000005526         add        rsp, 0xb8
000000000000552d         pop        rbx
000000000000552e         pop        rbp
000000000000552f         ret
                        ; endp

                     loc_5530:
0000000000005530         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_5535:
0000000000005535         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
000000000000553a         jmp        loc_5511

                     loc_553c:
000000000000553c         mov        rax, rbx                                    ; CODE XREF=version_etc+116
000000000000553f         add        rbx, 0x8
0000000000005543         jmp        loc_54f6
0000000000005545         align      16                                          ; End of unwind block (FDE at 0x7d98)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
0000000000005550         push       rbx                                         ; Begin of unwind block (FDE at 0x7dc4)
0000000000005551         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
0000000000005558         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000555d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000555f         call       j_dcgettext                                 ; dcgettext
0000000000005564         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
000000000000556b         mov        rsi, rax
000000000000556e         mov        edi, 0x1
0000000000005573         xor        eax, eax
0000000000005575         call       j___printf_chk                              ; __printf_chk
000000000000557a         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
0000000000005581         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005586         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005588         call       j_dcgettext                                 ; dcgettext
000000000000558d         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000005594         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6409
000000000000559b         mov        rsi, rax
000000000000559e         mov        edi, 0x1
00000000000055a3         xor        eax, eax
00000000000055a5         call       j___printf_chk                              ; __printf_chk
00000000000055aa         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000055b1         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
00000000000055b8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000055ba         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000055bf         call       j_dcgettext                                 ; dcgettext
00000000000055c4         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000055c7         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000055ca         pop        rbx
00000000000055cb         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
00000000000055d0         push       rbx                                         ; End of unwind block (FDE at 0x7dc4), Begin of unwind block (FDE at 0x7de4), CODE XREF=quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15
00000000000055d1         mov        rbx, rdi
00000000000055d4         call       j_malloc                                    ; malloc
00000000000055d9         test       rax, rax
00000000000055dc         jne        loc_55e3

00000000000055de         test       rbx, rbx
00000000000055e1         jne        loc_55e5

                     loc_55e3:
00000000000055e3         pop        rbx                                         ; CODE XREF=xmalloc+12
00000000000055e4         ret
                        ; endp

                     loc_55e5:
00000000000055e5         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_55ea:
00000000000055ea         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x7de4)
                     xnmalloc:
00000000000055f0         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x7e00)
00000000000055f3         mul        rsi
00000000000055f6         mov        rdi, rax
00000000000055f9         seto       al
00000000000055fc         test       rdi, rdi
00000000000055ff         js         loc_560b

0000000000005601         movzx      eax, al
0000000000005604         test       rax, rax
0000000000005607         jne        loc_560b

0000000000005609         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_560b:
000000000000560b         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
000000000000560f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5614:
0000000000005614         nop                                                    ; End of unwind block (FDE at 0x7e00)
0000000000005616         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000005620         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0x7e14)
                        ; endp
0000000000005622         align      16                                          ; End of unwind block (FDE at 0x7e14)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000005630         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x7e28), CODE XREF=quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
0000000000005633         push       rbx
0000000000005634         mov        rbx, rsi
0000000000005637         jne        loc_563e

0000000000005639         test       rdi, rdi
000000000000563c         jne        loc_5658

                     loc_563e:
000000000000563e         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000005641         call       j_realloc                                   ; realloc
0000000000005646         test       rax, rax
0000000000005649         jne        loc_5650

000000000000564b         test       rbx, rbx
000000000000564e         jne        loc_5661

                     loc_5650:
0000000000005650         pop        rbx                                         ; CODE XREF=xrealloc+25
0000000000005651         ret
                        ; endp
0000000000005652         align      8

                     loc_5658:
0000000000005658         call       j_free                                      ; free, CODE XREF=xrealloc+12
000000000000565d         xor        eax, eax
000000000000565f         pop        rbx
0000000000005660         ret
                        ; endp

                     loc_5661:
0000000000005661         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5666:
0000000000005666         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x7e28)
                     xnrealloc:
0000000000005670         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x7e4c)
0000000000005673         mul        rdx
0000000000005676         mov        rsi, rax
0000000000005679         seto       al
000000000000567c         test       rsi, rsi
000000000000567f         js         loc_568b

0000000000005681         movzx      eax, al
0000000000005684         test       rax, rax
0000000000005687         jne        loc_568b

0000000000005689         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_568b:
000000000000568b         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
000000000000568f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5694:
0000000000005694         nop                                                    ; End of unwind block (FDE at 0x7e4c)
0000000000005696         nop        word [cs:rax+rax]
                     x2nrealloc:
00000000000056a0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7e60)
00000000000056a3         mov        r9, rdx
00000000000056a6         mov        rcx, qword [rsi]
00000000000056a9         je         loc_56e0

00000000000056ab         xor        edx, edx
00000000000056ad         movabs     rax, 0x5555555555555554
00000000000056b7         div        r9
00000000000056ba         cmp        rax, rcx
00000000000056bd         jbe        loc_56fb

00000000000056bf         mov        rax, rcx
00000000000056c2         shr        rax, 0x1
00000000000056c5         lea        rcx, qword [rax+rcx+1]

                     loc_56ca:
00000000000056ca         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
00000000000056cd         imul       rcx, r9                                     ; argument #4 for method xrealloc
00000000000056d1         mov        rsi, rcx                                    ; argument #2 for method xrealloc
00000000000056d4         jmp        xrealloc                                    ; xrealloc
                        ; endp
00000000000056d9         align      32

                     loc_56e0:
00000000000056e0         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
00000000000056e3         je         loc_5708

                     loc_56e5:
00000000000056e5         mov        rax, rcx                                    ; CODE XREF=sub_5704+28
00000000000056e8         mul        r9
00000000000056eb         seto       dl
00000000000056ee         test       rax, rax
00000000000056f1         movzx      edx, dl
00000000000056f4         js         loc_56fb

00000000000056f6         test       rdx, rdx
00000000000056f9         je         loc_56ca

                     loc_56fb:
00000000000056fb         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
00000000000056ff         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5704:
0000000000005704         nop        dword [rax]
                        ; endp

                     loc_5708:
0000000000005708         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
000000000000570a         mov        eax, 0x80
000000000000570f         xor        r8d, r8d
0000000000005712         div        r9
0000000000005715         test       rax, rax
0000000000005718         sete       r8b
000000000000571c         lea        rcx, qword [r8+rax]
0000000000005720         jmp        loc_56e5
0000000000005722         align      16                                          ; End of unwind block (FDE at 0x7e60)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000005730         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7e78)
0000000000005733         mov        rax, qword [rsi]
0000000000005736         je         loc_5760

0000000000005738         movabs     rdx, 0x5555555555555553
0000000000005742         cmp        rax, rdx
0000000000005745         ja         loc_5771

0000000000005747         mov        rdx, rax
000000000000574a         shr        rdx, 0x1
000000000000574d         lea        rax, qword [rdx+rax+1]

                     loc_5752:
0000000000005752         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
0000000000005755         mov        rsi, rax                                    ; argument #2 for method xrealloc
0000000000005758         jmp        xrealloc                                    ; xrealloc
                        ; endp
000000000000575d         align      32

                     loc_5760:
0000000000005760         test       rax, rax                                    ; CODE XREF=x2realloc+6
0000000000005763         mov        edx, 0x80
0000000000005768         cmove      rax, rdx
000000000000576c         test       rax, rax
000000000000576f         jns        loc_5752

                     loc_5771:
0000000000005771         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
0000000000005775         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_577a:
000000000000577a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x7e78)
                     xzalloc:
0000000000005780         push       rbx                                         ; Begin of unwind block (FDE at 0x7e90)
0000000000005781         mov        rbx, rdi
0000000000005784         call       xmalloc                                     ; xmalloc
0000000000005789         mov        rdx, rbx                                    ; argument "__n" for method j_memset
000000000000578c         xor        esi, esi                                    ; argument "__c" for method j_memset
000000000000578e         mov        rdi, rax                                    ; argument "__s" for method j_memset
0000000000005791         pop        rbx
0000000000005792         jmp        j_memset                                    ; memset
                        ; endp
0000000000005797         align      32                                          ; End of unwind block (FDE at 0x7e90)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
00000000000057a0         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x7eac)
00000000000057a3         sub        rsp, 0x8
00000000000057a7         mul        rsi
00000000000057aa         seto       dl
00000000000057ad         test       rax, rax
00000000000057b0         js         loc_57c9

00000000000057b2         movzx      edx, dl
00000000000057b5         test       rdx, rdx
00000000000057b8         jne        loc_57c9

00000000000057ba         call       j_calloc                                    ; calloc
00000000000057bf         test       rax, rax
00000000000057c2         je         loc_57c9

00000000000057c4         add        rsp, 0x8
00000000000057c8         ret
                        ; endp

                     loc_57c9:
00000000000057c9         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_57ce:
00000000000057ce         nop                                                    ; End of unwind block (FDE at 0x7eac)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmemdup:
00000000000057d0         push       rbp                                         ; Begin of unwind block (FDE at 0x7ec8), CODE XREF=clone_quoting_options+40
00000000000057d1         push       rbx
00000000000057d2         mov        rbp, rdi
00000000000057d5         mov        rdi, rsi
00000000000057d8         mov        rbx, rsi
00000000000057db         sub        rsp, 0x8
00000000000057df         call       xmalloc                                     ; xmalloc
00000000000057e4         add        rsp, 0x8
00000000000057e8         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
00000000000057eb         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
00000000000057ee         pop        rbx
00000000000057ef         pop        rbp
00000000000057f0         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
00000000000057f3         jmp        j_memcpy                                    ; memcpy
                        ; endp
00000000000057f8         align      2048                                        ; End of unwind block (FDE at 0x7ec8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000005800         push       rbx                                         ; Begin of unwind block (FDE at 0x7ef0)
0000000000005801         mov        rbx, rdi
0000000000005804         call       j_strlen                                    ; strlen
0000000000005809         mov        rdi, rbx
000000000000580c         lea        rsi, qword [rax+1]
0000000000005810         pop        rbx
0000000000005811         jmp        xmemdup                                     ; xmemdup
                        ; endp
0000000000005813         align      32                                          ; End of unwind block (FDE at 0x7ef0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000005820         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x7f0c), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41
0000000000005827         sub        rsp, 0x8
000000000000582b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005830         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005832         call       j_dcgettext                                 ; dcgettext
0000000000005837         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
000000000000583d         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0x7182
0000000000005844         mov        rcx, rax
0000000000005847         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000005849         xor        eax, eax
000000000000584b         call       j_error                                     ; error
0000000000005850         call       j_abort                                     ; abort
                        ; endp
0000000000005855         align      32                                          ; End of unwind block (FDE at 0x7f0c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80


                     xstrtoumax:
0000000000005860         push       r15                                         ; Begin of unwind block (FDE at 0x7f24), CODE XREF=human_options+170
0000000000005862         push       r14
0000000000005864         push       r13
0000000000005866         push       r12
0000000000005868         push       rbp
0000000000005869         push       rbx
000000000000586a         sub        rsp, 0x28
000000000000586e         mov        rax, qword [fs:0x28]
0000000000005877         mov        qword [rsp+0x58+var_40], rax
000000000000587c         xor        eax, eax
000000000000587e         cmp        edx, 0x24
0000000000005881         ja         loc_5be5

0000000000005887         lea        rax, qword [rsp+0x58+var_48]
000000000000588c         mov        r15, rsi
000000000000588f         test       rsi, rsi
0000000000005892         mov        rbp, rdi
0000000000005895         mov        dword [rsp+0x58+var_50], edx
0000000000005899         mov        r14, rcx
000000000000589c         mov        r13, r8
000000000000589f         cmove      r15, rax
00000000000058a3         call       j___errno_location                          ; __errno_location
00000000000058a8         mov        dword [rax], 0x0
00000000000058ae         mov        r12, rax
00000000000058b1         movzx      ebx, byte [rbp]
00000000000058b5         call       j___ctype_b_loc                             ; __ctype_b_loc
00000000000058ba         mov        edx, dword [rsp+0x58+var_50]
00000000000058be         mov        rsi, qword [rax]
00000000000058c1         mov        rax, rbp
00000000000058c4         jmp        loc_58d7
00000000000058c6         align      16

                     loc_58d0:
00000000000058d0         add        rax, 0x1                                    ; CODE XREF=xstrtoumax+127
00000000000058d4         movzx      ebx, byte [rax]

                     loc_58d7:
00000000000058d7         movzx      ecx, bl                                     ; CODE XREF=xstrtoumax+100
00000000000058da         test       byte [rsi+rcx*2+1], 0x20
00000000000058df         jne        loc_58d0

00000000000058e1         cmp        bl, 0x2d
00000000000058e4         je         loc_5938

00000000000058e6         xor        ecx, ecx
00000000000058e8         mov        rsi, r15
00000000000058eb         mov        rdi, rbp
00000000000058ee         call       j___strtoul_internal                        ; __strtoul_internal
00000000000058f3         mov        rcx, qword [r15]
00000000000058f6         mov        rbx, rax
00000000000058f9         cmp        rcx, rbp
00000000000058fc         je         loc_5928

00000000000058fe         mov        eax, dword [r12]
0000000000005902         test       eax, eax
0000000000005904         je         loc_5968

0000000000005906         cmp        eax, 0x22
0000000000005909         mov        ebp, 0x1
000000000000590e         jne        loc_5938

                     loc_5910:
0000000000005910         test       r13, r13                                    ; CODE XREF=xstrtoumax+266
0000000000005913         je         loc_591e

0000000000005915         movzx      r12d, byte [rcx]
0000000000005919         test       r12b, r12b
000000000000591c         jne        loc_5997

                     loc_591e:
000000000000591e         mov        qword [r14], rbx                            ; CODE XREF=xstrtoumax+179
0000000000005921         jmp        loc_593d
0000000000005923         align      8

                     loc_5928:
0000000000005928         test       r13, r13                                    ; CODE XREF=xstrtoumax+156
000000000000592b         mov        qword [rsp+0x58+var_50], rcx
0000000000005930         jne        loc_5970

0000000000005932         nop        word [rax+rax]

                     loc_5938:
0000000000005938         mov        ebp, 0x4                                    ; CODE XREF=xstrtoumax+132, xstrtoumax+174, xstrtoumax+280, xstrtoumax+309

                     loc_593d:
000000000000593d         mov        rdi, qword [rsp+0x58+var_40]                ; CODE XREF=xstrtoumax+193, xstrtoumax+535, xstrtoumax+546
0000000000005942         xor        rdi, qword [fs:0x28]
000000000000594b         mov        eax, ebp
000000000000594d         jne        loc_5be0

0000000000005953         add        rsp, 0x28
0000000000005957         pop        rbx
0000000000005958         pop        rbp
0000000000005959         pop        r12
000000000000595b         pop        r13
000000000000595d         pop        r14
000000000000595f         pop        r15
0000000000005961         ret
                        ; endp
0000000000005962         align      8

                     loc_5968:
0000000000005968         xor        ebp, ebp                                    ; CODE XREF=xstrtoumax+164
000000000000596a         jmp        loc_5910
000000000000596c         align      16

                     loc_5970:
0000000000005970         movzx      r12d, byte [rbp]                            ; CODE XREF=xstrtoumax+208
0000000000005975         test       r12b, r12b
0000000000005978         je         loc_5938

000000000000597a         movsx      esi, r12b                                   ; argument "__c" for method j_strchr
000000000000597e         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000005981         xor        ebp, ebp
0000000000005983         call       j_strchr                                    ; strchr
0000000000005988         test       rax, rax
000000000000598b         mov        ebx, 0x1
0000000000005990         mov        rcx, qword [rsp+0x58+var_50]
0000000000005995         je         loc_5938

                     loc_5997:
0000000000005997         movsx      esi, r12b                                   ; argument "__c" for method j_strchr, CODE XREF=xstrtoumax+188
000000000000599b         mov        rdi, r13                                    ; argument "__s" for method j_strchr
000000000000599e         mov        qword [rsp+0x58+var_50], rcx
00000000000059a3         call       j_strchr                                    ; strchr
00000000000059a8         test       rax, rax
00000000000059ab         mov        rcx, qword [rsp+0x58+var_50]
00000000000059b0         je         loc_5a7c

00000000000059b6         lea        eax, dword [r12-0x45]
00000000000059bb         cmp        al, 0x2f
00000000000059bd         ja         loc_5a10

00000000000059bf         movabs     rdx, 0x814400308945
00000000000059c9         bt         rdx, rax
00000000000059cd         jae        loc_5a10

00000000000059cf         mov        esi, 0x30                                   ; argument "__c" for method j_strchr
00000000000059d4         mov        rdi, r13                                    ; argument "__s" for method j_strchr
00000000000059d7         mov        qword [rsp+0x58+var_50], rcx
00000000000059dc         call       j_strchr                                    ; strchr
00000000000059e1         test       rax, rax
00000000000059e4         mov        rcx, qword [rsp+0x58+var_50]
00000000000059e9         je         loc_5a10

00000000000059eb         movzx      eax, byte [rcx+1]
00000000000059ef         cmp        al, 0x44
00000000000059f1         je         loc_59ff

00000000000059f3         cmp        al, 0x69
00000000000059f5         je         loc_5bc8

00000000000059fb         cmp        al, 0x42
00000000000059fd         jne        loc_5a10

                     loc_59ff:
00000000000059ff         mov        edi, 0x2                                    ; CODE XREF=xstrtoumax+401
0000000000005a04         mov        esi, 0x3e8
0000000000005a09         jmp        loc_5a1a
0000000000005a0b         align      16

                     loc_5a10:
0000000000005a10         mov        edi, 0x1                                    ; CODE XREF=xstrtoumax+349, xstrtoumax+365, xstrtoumax+393, xstrtoumax+413
0000000000005a15         mov        esi, 0x400

                     loc_5a1a:
0000000000005a1a         sub        r12d, 0x42                                  ; CODE XREF=xstrtoumax+425, xstrtoumax+891
0000000000005a1e         cmp        r12b, 0x35
0000000000005a22         ja         loc_5a7c

0000000000005a24         lea        rdx, qword [switch_table_7048]              ; switch_table_7048
0000000000005a2b         movzx      r12d, r12b
0000000000005a2f         movsxd     rax, dword [rdx+r12*4]
0000000000005a33         add        rax, rdx
0000000000005a36         jmp        rax                                         ; switch statement using table at 0x7048, with 54 cases, 0x5a38,0x5a60,0x5a7c,0x5a87,0x5a9d,0x5ab4,0x5ada,0x5aff,0x5b1f,0x5b40,0x5b63,0x5b86,0x5b9c

                     loc_5a38:
0000000000005a38         mov        rax, rbx                                    ; case 43, CODE XREF=xstrtoumax+470
0000000000005a3b         mul        rsi
0000000000005a3e         jo         loc_5c31

0000000000005a44         xor        r8d, r8d

                     loc_5a47:
0000000000005a47         mul        rsi                                         ; CODE XREF=xstrtoumax+846, xstrtoumax+862, xstrtoumax+987
0000000000005a4a         jo         loc_5c22

0000000000005a50         mov        rbx, rax

                     loc_5a53:
0000000000005a53         or         ebp, r8d                                    ; CODE XREF=xstrtoumax+972
0000000000005a56         nop        word [cs:rax+rax]

                     loc_5a60:
0000000000005a60         movsxd     rdi, edi                                    ; case 33, CODE XREF=xstrtoumax+470, xstrtoumax+571, xstrtoumax+594, xstrtoumax+632, xstrtoumax+712, xstrtoumax+727, xstrtoumax+823
0000000000005a63         mov        eax, ebp
0000000000005a65         add        rcx, rdi
0000000000005a68         or         eax, 0x2
0000000000005a6b         mov        qword [r15], rcx
0000000000005a6e         cmp        byte [rcx], 0x0
0000000000005a71         mov        qword [r14], rbx
0000000000005a74         cmovne     ebp, eax
0000000000005a77         jmp        loc_593d

                     loc_5a7c:
0000000000005a7c         mov        qword [r14], rbx                            ; case 52, CODE XREF=xstrtoumax+336, xstrtoumax+450, xstrtoumax+470
0000000000005a7f         or         ebp, 0x2
0000000000005a82         jmp        loc_593d

                     loc_5a87:
0000000000005a87         mov        edx, 0x2                                    ; case 53, CODE XREF=xstrtoumax+470
0000000000005a8c         mov        rax, rdx
0000000000005a8f         mul        rbx
0000000000005a92         jo         loc_5b2e

0000000000005a98         add        rbx, rbx
0000000000005a9b         jmp        loc_5a60

                     loc_5a9d:
0000000000005a9d         mov        edx, 0x200                                  ; case 32, CODE XREF=xstrtoumax+470
0000000000005aa2         mov        rax, rdx
0000000000005aa5         mul        rbx
0000000000005aa8         jo         loc_5b2e

0000000000005aae         shl        rbx, 0x9
0000000000005ab2         jmp        loc_5a60

                     loc_5ab4:
0000000000005ab4         mov        r8d, 0x7                                    ; case 24, CODE XREF=xstrtoumax+470
0000000000005aba         xor        r9d, r9d
0000000000005abd         nop        dword [rax]

                     loc_5ac0:
0000000000005ac0         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+627
0000000000005ac3         mul        rsi
0000000000005ac6         mov        rbx, rax
0000000000005ac9         jo         loc_5c5e

                     loc_5acf:
0000000000005acf         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1032
0000000000005ad3         jne        loc_5ac0

                     loc_5ad5:
0000000000005ad5         or         ebp, r9d                                    ; CODE XREF=xstrtoumax+669, xstrtoumax+701, xstrtoumax+766, xstrtoumax+801
0000000000005ad8         jmp        loc_5a60

                     loc_5ada:
0000000000005ada         mov        r8d, 0x8                                    ; case 23, CODE XREF=xstrtoumax+470
0000000000005ae0         xor        r9d, r9d
0000000000005ae3         nop        dword [rax+rax]

                     loc_5ae8:
0000000000005ae8         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+667
0000000000005aeb         mul        rsi
0000000000005aee         mov        rbx, rax
0000000000005af1         jo         loc_5c40

                     loc_5af7:
0000000000005af7         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1002
0000000000005afb         jne        loc_5ae8

0000000000005afd         jmp        loc_5ad5

                     loc_5aff:
0000000000005aff         mov        r8d, 0x4                                    ; case 50, CODE XREF=xstrtoumax+470
0000000000005b05         xor        r9d, r9d

                     loc_5b08:
0000000000005b08         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+699
0000000000005b0b         mul        rsi
0000000000005b0e         mov        rbx, rax
0000000000005b11         jo         loc_5c13

                     loc_5b17:
0000000000005b17         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+957
0000000000005b1b         jne        loc_5b08

0000000000005b1d         jmp        loc_5ad5

                     loc_5b1f:
0000000000005b1f         mov        rax, rbx                                    ; case 41, CODE XREF=xstrtoumax+470
0000000000005b22         mul        rsi
0000000000005b25         mov        rbx, rax
0000000000005b28         jno        loc_5a60

                     loc_5b2e:
0000000000005b2e         mov        ebp, 0x1                                    ; CODE XREF=xstrtoumax+562, xstrtoumax+584, xstrtoumax+817
0000000000005b33         or         rbx, 0xffffffffffffffff
0000000000005b37         jmp        loc_5a60
0000000000005b3c         align      64

                     loc_5b40:
0000000000005b40         mov        r8d, 0x5                                    ; case 14, CODE XREF=xstrtoumax+470
0000000000005b46         xor        r9d, r9d

                     loc_5b49:
0000000000005b49         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+764
0000000000005b4c         mul        rsi
0000000000005b4f         mov        rbx, rax
0000000000005b52         jo         loc_5c4f

                     loc_5b58:
0000000000005b58         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1017
0000000000005b5c         jne        loc_5b49

0000000000005b5e         jmp        loc_5ad5

                     loc_5b63:
0000000000005b63         mov        r8d, 0x6                                    ; case 3, CODE XREF=xstrtoumax+470
0000000000005b69         xor        r9d, r9d

                     loc_5b6c:
0000000000005b6c         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+799
0000000000005b6f         mul        rsi
0000000000005b72         mov        rbx, rax
0000000000005b75         jo         loc_5c04

                     loc_5b7b:
0000000000005b7b         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+942
0000000000005b7f         jne        loc_5b6c

0000000000005b81         jmp        loc_5ad5

                     loc_5b86:
0000000000005b86         mov        edx, 0x400                                  ; case 0, CODE XREF=xstrtoumax+470
0000000000005b8b         mov        rax, rdx
0000000000005b8e         mul        rbx
0000000000005b91         jo         loc_5b2e

0000000000005b93         shl        rbx, 0xa
0000000000005b97         jmp        loc_5a60

                     loc_5b9c:
0000000000005b9c         mov        rax, rbx                                    ; case 37, CODE XREF=xstrtoumax+470
0000000000005b9f         mul        rsi
0000000000005ba2         jo         loc_5c6d

0000000000005ba8         xor        r8d, r8d

                     loc_5bab:
0000000000005bab         mul        rsi                                         ; CODE XREF=xstrtoumax+1047
0000000000005bae         jno        loc_5a47

0000000000005bb4         mov        r8d, 0x1
0000000000005bba         or         rax, 0xffffffffffffffff
0000000000005bbe         jmp        loc_5a47
0000000000005bc3         align      8

                     loc_5bc8:
0000000000005bc8         xor        edi, edi                                    ; CODE XREF=xstrtoumax+405
0000000000005bca         cmp        byte [rcx+2], 0x42
0000000000005bce         mov        esi, 0x400
0000000000005bd3         sete       dil
0000000000005bd7         lea        edi, dword [rdi+rdi+1]
0000000000005bdb         jmp        loc_5a1a

                     loc_5be0:
0000000000005be0         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=xstrtoumax+237
                        ; endp

                     loc_5be5:
0000000000005be5         lea        rcx, qword [__PRETTY_FUNCTION__.4162]       ; argument "__function" for method j___assert_fail, "xstrtoumax", CODE XREF=xstrtoumax+33
0000000000005bec         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/xstrtol.c"
0000000000005bf3         lea        rdi, qword [a0StrtolbaseStr]                ; argument "__assertion" for method j___assert_fail, "0 <= strtol_base && strtol_base <= 36"
0000000000005bfa         mov        edx, 0x54                                   ; argument "__line" for method j___assert_fail
0000000000005bff         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_5c04:
0000000000005c04         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+789
0000000000005c0a         or         rbx, 0xffffffffffffffff
0000000000005c0e         jmp        loc_5b7b

                     loc_5c13:
0000000000005c13         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+689
0000000000005c19         or         rbx, 0xffffffffffffffff
0000000000005c1d         jmp        loc_5b17

                     loc_5c22:
0000000000005c22         mov        r8d, 0x1                                    ; CODE XREF=xstrtoumax+490
0000000000005c28         or         rbx, 0xffffffffffffffff
0000000000005c2c         jmp        loc_5a53

                     loc_5c31:
0000000000005c31         or         rax, 0xffffffffffffffff                     ; CODE XREF=xstrtoumax+478
0000000000005c35         mov        r8d, 0x1
0000000000005c3b         jmp        loc_5a47

                     loc_5c40:
0000000000005c40         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+657
0000000000005c46         or         rbx, 0xffffffffffffffff
0000000000005c4a         jmp        loc_5af7

                     loc_5c4f:
0000000000005c4f         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+754
0000000000005c55         or         rbx, 0xffffffffffffffff
0000000000005c59         jmp        loc_5b58

                     loc_5c5e:
0000000000005c5e         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+617
0000000000005c64         or         rbx, 0xffffffffffffffff
0000000000005c68         jmp        loc_5acf

                     loc_5c6d:
0000000000005c6d         mov        r8d, 0x1                                    ; CODE XREF=xstrtoumax+834
0000000000005c73         or         rax, 0xffffffffffffffff
0000000000005c77         jmp        loc_5bab
0000000000005c7c         align      128                                         ; End of unwind block (FDE at 0x7f24)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
0000000000005c80         push       r12                                         ; Begin of unwind block (FDE at 0x7f74), CODE XREF=main+363, bsd_sum_file+202, bsd_sum_file+521, close_stream+21
0000000000005c82         push       rbp
0000000000005c83         push       rbx
0000000000005c84         mov        rbx, rdi
0000000000005c87         call       j_fileno                                    ; fileno
0000000000005c8c         test       eax, eax
0000000000005c8e         mov        rdi, rbx
0000000000005c91         js         loc_5ce7

0000000000005c93         call       j___freading                                ; __freading
0000000000005c98         test       eax, eax
0000000000005c9a         jne        loc_5cc8

                     loc_5c9c:
0000000000005c9c         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
0000000000005c9f         call       rpl_fflush                                  ; rpl_fflush
0000000000005ca4         test       eax, eax
0000000000005ca6         je         loc_5ce4

0000000000005ca8         call       j___errno_location                          ; __errno_location
0000000000005cad         mov        r12d, dword [rax]
0000000000005cb0         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
0000000000005cb3         mov        rbp, rax
0000000000005cb6         call       j_fclose                                    ; fclose
0000000000005cbb         test       r12d, r12d
0000000000005cbe         jne        loc_5cf0

                     loc_5cc0:
0000000000005cc0         pop        rbx                                         ; CODE XREF=rpl_fclose+121
0000000000005cc1         pop        rbp
0000000000005cc2         pop        r12
0000000000005cc4         ret
                        ; endp
0000000000005cc5         align      8

                     loc_5cc8:
0000000000005cc8         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
0000000000005ccb         call       j_fileno                                    ; fileno
0000000000005cd0         xor        esi, esi                                    ; argument "__offset" for method j_lseek
0000000000005cd2         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000005cd7         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000005cd9         call       j_lseek                                     ; lseek
0000000000005cde         cmp        rax, 0xffffffffffffffff
0000000000005ce2         jne        loc_5c9c

                     loc_5ce4:
0000000000005ce4         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_5ce7:
0000000000005ce7         pop        rbx                                         ; CODE XREF=rpl_fclose+17
0000000000005ce8         pop        rbp
0000000000005ce9         pop        r12
0000000000005ceb         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_5cf0:
0000000000005cf0         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
0000000000005cf4         mov        eax, 0xffffffff
0000000000005cf9         jmp        loc_5cc0
0000000000005cfb         align      256                                         ; End of unwind block (FDE at 0x7f74)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
0000000000005d00         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7fac), CODE XREF=rpl_fclose+31
0000000000005d03         push       rbx
0000000000005d04         mov        rbx, rdi
0000000000005d07         je         loc_5d1a

0000000000005d09         call       j___freading                                ; __freading
0000000000005d0e         test       eax, eax
0000000000005d10         je         loc_5d1a

0000000000005d12         test       dword [rbx], 0x100
0000000000005d18         jne        loc_5d28

                     loc_5d1a:
0000000000005d1a         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
0000000000005d1d         pop        rbx
0000000000005d1e         jmp        j_fflush                                    ; fflush
                        ; endp
0000000000005d23         align      8

                     loc_5d28:
0000000000005d28         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
0000000000005d2b         mov        edx, 0x1
0000000000005d30         xor        esi, esi
0000000000005d32         call       rpl_fseeko                                  ; rpl_fseeko
0000000000005d37         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
0000000000005d3a         pop        rbx
0000000000005d3b         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
0000000000005d40         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0x7fac), Begin of unwind block (FDE at 0x7fcc), CODE XREF=rpl_fflush+50
0000000000005d44         cmp        qword [rdi+0x10], rax
0000000000005d48         je         loc_5d50

                     j_j_fseeko:        // fseeko
0000000000005d4a         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
0000000000005d4f         align      16

                     loc_5d50:
0000000000005d50         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
0000000000005d54         cmp        qword [rdi+0x28], rax
0000000000005d58         jne        j_j_fseeko                                  ; fseeko

0000000000005d5a         cmp        qword [rdi+0x48], 0x0
0000000000005d5f         jne        j_j_fseeko                                  ; fseeko

0000000000005d61         push       r12
0000000000005d63         push       rbp
0000000000005d64         mov        r12d, edx
0000000000005d67         push       rbx
0000000000005d68         mov        rbp, rsi
0000000000005d6b         mov        rbx, rdi
0000000000005d6e         call       j_fileno                                    ; fileno
0000000000005d73         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000005d76         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000005d79         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000005d7b         call       j_lseek                                     ; lseek
0000000000005d80         cmp        rax, 0xffffffffffffffff
0000000000005d84         je         loc_5d92

0000000000005d86         and        dword [rbx], 0xffffffef
0000000000005d89         mov        qword [rbx+0x90], rax
0000000000005d90         xor        eax, eax

                     loc_5d92:
0000000000005d92         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
0000000000005d93         pop        rbp
0000000000005d94         pop        r12
0000000000005d96         ret
                        ; endp
0000000000005d97         align      32                                          ; End of unwind block (FDE at 0x7fcc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
0000000000005da0         push       r13                                         ; Begin of unwind block (FDE at 0x7ffc), CODE XREF=sub_3af0+534
0000000000005da2         push       r12
0000000000005da4         mov        r13, rsi
0000000000005da7         push       rbp
0000000000005da8         push       rbx
0000000000005da9         mov        rbx, rdi
0000000000005dac         mov        r12, rdx
0000000000005daf         sub        rsp, 0x18
0000000000005db3         mov        rax, qword [fs:0x28]
0000000000005dbc         mov        qword [rsp+0x38+var_30], rax
0000000000005dc1         xor        eax, eax
0000000000005dc3         lea        rax, qword [rsp+0x38+var_34]
0000000000005dc8         test       rdi, rdi
0000000000005dcb         cmove      rbx, rax
0000000000005dcf         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
0000000000005dd2         call       j_mbrtowc                                   ; mbrtowc
0000000000005dd7         cmp        rax, 0xfffffffffffffffd
0000000000005ddb         mov        rbp, rax
0000000000005dde         jbe        loc_5e00

0000000000005de0         test       r12, r12
0000000000005de3         je         loc_5e00

0000000000005de5         xor        edi, edi
0000000000005de7         call       hard_locale                                 ; hard_locale
0000000000005dec         test       al, al
0000000000005dee         jne        loc_5e00

0000000000005df0         movzx      eax, byte [r13]
0000000000005df5         mov        ebp, 0x1
0000000000005dfa         mov        dword [rbx], eax
0000000000005dfc         nop        dword [rax]

                     loc_5e00:
0000000000005e00         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
0000000000005e05         xor        rdx, qword [fs:0x28]
0000000000005e0e         mov        rax, rbp
0000000000005e11         jne        loc_5e1e

0000000000005e13         add        rsp, 0x18
0000000000005e17         pop        rbx
0000000000005e18         pop        rbp
0000000000005e19         pop        r12
0000000000005e1b         pop        r13
0000000000005e1d         ret
                        ; endp

                     loc_5e1e:
0000000000005e1e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
0000000000005e23         align      16                                          ; End of unwind block (FDE at 0x7ffc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __argmatch_die:
0000000000005e30         mov        edi, 0x1                                    ; Begin of unwind block (FDE at 0x803c), argument #1 for method usage
0000000000005e35         jmp        usage                                       ; usage
                        ; endp
0000000000005e3a         align      64                                          ; End of unwind block (FDE at 0x803c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_41: int8_t, -65
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     argmatch:
0000000000005e40         push       r15                                         ; Begin of unwind block (FDE at 0x8050), CODE XREF=human_options+82, __xargmatch_internal+44
0000000000005e42         push       r14
0000000000005e44         mov        r15, rsi
0000000000005e47         push       r13
0000000000005e49         push       r12
0000000000005e4b         mov        r13, rcx
0000000000005e4e         push       rbp
0000000000005e4f         push       rbx
0000000000005e50         mov        rbp, rdx
0000000000005e53         sub        rsp, 0x28
0000000000005e57         mov        qword [rsp+0x58+var_50], rdi
0000000000005e5c         mov        qword [rsp+0x58+var_40], rdx
0000000000005e61         call       j_strlen                                    ; strlen
0000000000005e66         mov        r14, qword [r15]
0000000000005e69         mov        qword [rsp+0x58+var_58], 0xffffffffffffffff
0000000000005e71         test       r14, r14
0000000000005e74         je         loc_5f2d

0000000000005e7a         mov        r12, rax
0000000000005e7d         mov        byte [rsp+0x58+var_41], 0x0
0000000000005e82         xor        ebx, ebx
0000000000005e84         jmp        loc_5ed7
0000000000005e86         align      16

                     loc_5e90:
0000000000005e90         mov        rax, qword [rsp+0x58+var_40]                ; CODE XREF=argmatch+189
0000000000005e95         test       rax, rax
0000000000005e98         je         loc_5f40

0000000000005e9e         mov        rdi, qword [rsp+0x58+var_58]
0000000000005ea2         mov        rdx, r13                                    ; argument "__n" for method j_memcmp
0000000000005ea5         mov        rsi, rbp                                    ; argument "__s2" for method j_memcmp
0000000000005ea8         imul       rdi, r13
0000000000005eac         add        rdi, rax                                    ; argument "__s1" for method j_memcmp
0000000000005eaf         call       j_memcmp                                    ; memcmp
0000000000005eb4         test       eax, eax
0000000000005eb6         movzx      eax, byte [rsp+0x58+var_41]
0000000000005ebb         mov        ecx, 0x1
0000000000005ec0         cmovne     eax, ecx
0000000000005ec3         mov        byte [rsp+0x58+var_41], al

                     loc_5ec7:
0000000000005ec7         add        rbx, 0x1                                    ; CODE XREF=argmatch+169, argmatch+261
0000000000005ecb         add        rbp, r13
0000000000005ece         mov        r14, qword [r15+rbx*8]
0000000000005ed2         test       r14, r14
0000000000005ed5         je         loc_5f18

                     loc_5ed7:
0000000000005ed7         mov        rsi, qword [rsp+0x58+var_50]                ; argument "__s2" for method j_strncmp, CODE XREF=argmatch+68, argmatch+209
0000000000005edc         mov        rdx, r12                                    ; argument "__n" for method j_strncmp
0000000000005edf         mov        rdi, r14                                    ; argument "__s1" for method j_strncmp
0000000000005ee2         call       j_strncmp                                   ; strncmp
0000000000005ee7         test       eax, eax
0000000000005ee9         jne        loc_5ec7

0000000000005eeb         mov        rdi, r14                                    ; argument "__s" for method j_strlen
0000000000005eee         call       j_strlen                                    ; strlen
0000000000005ef3         cmp        rax, r12
0000000000005ef6         je         loc_5f50

0000000000005ef8         cmp        qword [rsp+0x58+var_58], 0xffffffffffffffff
0000000000005efd         jne        loc_5e90

0000000000005eff         mov        qword [rsp+0x58+var_58], rbx
0000000000005f03         add        rbx, 0x1
0000000000005f07         add        rbp, r13
0000000000005f0a         mov        r14, qword [r15+rbx*8]
0000000000005f0e         test       r14, r14
0000000000005f11         jne        loc_5ed7

0000000000005f13         nop        dword [rax+rax]

                     loc_5f18:
0000000000005f18         cmp        byte [rsp+0x58+var_41], 0x0                 ; CODE XREF=argmatch+149
0000000000005f1d         mov        rax, 0xfffffffffffffffe
0000000000005f24         cmove      rax, qword [rsp+0x58+var_58]
0000000000005f29         mov        qword [rsp+0x58+var_58], rax

                     loc_5f2d:
0000000000005f2d         mov        rax, qword [rsp+0x58+var_58]                ; CODE XREF=argmatch+52, argmatch+276
0000000000005f31         add        rsp, 0x28
0000000000005f35         pop        rbx
0000000000005f36         pop        rbp
0000000000005f37         pop        r12
0000000000005f39         pop        r13
0000000000005f3b         pop        r14
0000000000005f3d         pop        r15
0000000000005f3f         ret
                        ; endp

                     loc_5f40:
0000000000005f40         mov        byte [rsp+0x58+var_41], 0x1                 ; CODE XREF=argmatch+88
0000000000005f45         jmp        loc_5ec7
0000000000005f47         align      16

                     loc_5f50:
0000000000005f50         mov        qword [rsp+0x58+var_58], rbx                ; CODE XREF=argmatch+182
0000000000005f54         jmp        loc_5f2d
0000000000005f56         align      32                                          ; End of unwind block (FDE at 0x8050)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     argmatch_invalid:
0000000000005f60         cmp        rdx, 0xffffffffffffffff                     ; Begin of unwind block (FDE at 0x809c), CODE XREF=__xargmatch_internal+78
0000000000005f64         push       r12
0000000000005f66         mov        edx, 0x5
0000000000005f6b         push       rbp
0000000000005f6c         mov        r12, rsi
0000000000005f6f         push       rbx
0000000000005f70         mov        rbp, rdi
0000000000005f73         je         loc_5fc0

0000000000005f75         lea        rsi, qword [aAmbiguousArgum]                ; argument "msgid" for method j_dcgettext, "ambiguous argument %s for %s"
0000000000005f7c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005f7e         call       j_dcgettext                                 ; dcgettext
0000000000005f83         mov        rbx, rax

                     loc_5f86:
0000000000005f86         mov        rsi, rbp                                    ; CODE XREF=argmatch_invalid+113
0000000000005f89         mov        edi, 0x1
0000000000005f8e         call       quote_n                                     ; quote_n
0000000000005f93         mov        rdx, r12
0000000000005f96         mov        rbp, rax
0000000000005f99         mov        esi, 0x8
0000000000005f9e         xor        edi, edi
0000000000005fa0         call       quotearg_n_style                            ; quotearg_n_style
0000000000005fa5         mov        r8, rbp
0000000000005fa8         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000005fab         mov        rcx, rax
0000000000005fae         pop        rbx
0000000000005faf         pop        rbp
0000000000005fb0         pop        r12
0000000000005fb2         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000005fb4         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000005fb6         xor        eax, eax
0000000000005fb8         jmp        j_error                                     ; error
                        ; endp
0000000000005fbd         align      64

                     loc_5fc0:
0000000000005fc0         lea        rsi, qword [aInvalidArgumen]                ; argument "msgid" for method j_dcgettext, "invalid argument %s for %s", CODE XREF=argmatch_invalid+19
0000000000005fc7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005fc9         call       j_dcgettext                                 ; dcgettext
0000000000005fce         mov        rbx, rax
0000000000005fd1         jmp        loc_5f86
0000000000005fd3         align      32                                          ; End of unwind block (FDE at 0x809c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     argmatch_valid:
0000000000005fe0         push       r15                                         ; Begin of unwind block (FDE at 0x80c8), CODE XREF=__xargmatch_internal+92
0000000000005fe2         push       r14
0000000000005fe4         mov        r14, rdi
0000000000005fe7         push       r13
0000000000005fe9         push       r12
0000000000005feb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005fed         push       rbp
0000000000005fee         push       rbx
0000000000005fef         mov        rbp, rsi
0000000000005ff2         lea        rsi, qword [aValidArguments]                ; argument "msgid" for method j_dcgettext, "Valid arguments are:"
0000000000005ff9         mov        r12, rdx
0000000000005ffc         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006001         sub        rsp, 0x8
0000000000006005         mov        rbx, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
000000000000600c         call       j_dcgettext                                 ; dcgettext
0000000000006011         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000006014         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000006017         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000601c         mov        r15, qword [r14]
000000000000601f         test       r15, r15
0000000000006022         je         loc_60b8

0000000000006028         xor        r13d, r13d
000000000000602b         xor        ebx, ebx
000000000000602d         jmp        loc_6068
000000000000602f         align      16

                     loc_6030:
0000000000006030         mov        rdi, r15                                    ; CODE XREF=argmatch_valid+139, argmatch_valid+157
0000000000006033         add        rbx, 0x1
0000000000006037         mov        r13, rbp
000000000000603a         call       quote                                       ; quote
000000000000603f         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000006046         lea        rdx, qword [aNS]                            ; "\\n  - %s"
000000000000604d         mov        rcx, rax
0000000000006050         mov        esi, 0x1
0000000000006055         xor        eax, eax
0000000000006057         add        rbp, r12
000000000000605a         call       j___fprintf_chk                             ; __fprintf_chk
000000000000605f         mov        r15, qword [r14+rbx*8]
0000000000006063         test       r15, r15
0000000000006066         je         loc_60b8

                     loc_6068:
0000000000006068         test       rbx, rbx                                    ; CODE XREF=argmatch_valid+77, argmatch_valid+210
000000000000606b         je         loc_6030

000000000000606d         mov        rdx, r12                                    ; argument "__n" for method j_memcmp
0000000000006070         mov        rsi, rbp                                    ; argument "__s2" for method j_memcmp
0000000000006073         mov        rdi, r13                                    ; argument "__s1" for method j_memcmp
0000000000006076         call       j_memcmp                                    ; memcmp
000000000000607b         test       eax, eax
000000000000607d         jne        loc_6030

000000000000607f         mov        rdi, r15
0000000000006082         add        rbx, 0x1
0000000000006086         add        rbp, r12
0000000000006089         call       quote                                       ; quote
000000000000608e         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000006095         lea        rdx, qword [aNS+8]                          ; 0x7180
000000000000609c         mov        rcx, rax
000000000000609f         mov        esi, 0x1
00000000000060a4         xor        eax, eax
00000000000060a6         call       j___fprintf_chk                             ; __fprintf_chk
00000000000060ab         mov        r15, qword [r14+rbx*8]
00000000000060af         test       r15, r15
00000000000060b2         jne        loc_6068

00000000000060b4         nop        dword [rax]

                     loc_60b8:
00000000000060b8         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=argmatch_valid+66, argmatch_valid+134
00000000000060bf         mov        rax, qword [rdi+0x28]
00000000000060c3         cmp        rax, qword [rdi+0x30]
00000000000060c7         jae        loc_60e8

00000000000060c9         lea        rdx, qword [rax+1]
00000000000060cd         mov        qword [rdi+0x28], rdx
00000000000060d1         mov        byte [rax], 0xa
00000000000060d4         add        rsp, 0x8
00000000000060d8         pop        rbx
00000000000060d9         pop        rbp
00000000000060da         pop        r12
00000000000060dc         pop        r13
00000000000060de         pop        r14
00000000000060e0         pop        r15
00000000000060e2         ret
                        ; endp
00000000000060e3         align      8

                     loc_60e8:
00000000000060e8         add        rsp, 0x8                                    ; CODE XREF=argmatch_valid+231
00000000000060ec         mov        esi, 0xa                                    ; argument #2 for method j___overflow
00000000000060f1         pop        rbx
00000000000060f2         pop        rbp
00000000000060f3         pop        r12
00000000000060f5         pop        r13
00000000000060f7         pop        r14
00000000000060f9         pop        r15
00000000000060fb         jmp        j___overflow                                ; __overflow
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __xargmatch_internal:
0000000000006100         push       r15                                         ; End of unwind block (FDE at 0x80c8), Begin of unwind block (FDE at 0x8128)
0000000000006102         push       r14
0000000000006104         mov        r14, rdi
0000000000006107         push       r13
0000000000006109         push       r12
000000000000610b         mov        r12, rsi
000000000000610e         push       rbp
000000000000610f         push       rbx
0000000000006110         mov        rbp, rcx
0000000000006113         mov        rbx, rdx
0000000000006116         mov        rcx, r8
0000000000006119         mov        rdx, rbp
000000000000611c         sub        rsp, 0x8
0000000000006120         mov        rsi, rbx
0000000000006123         mov        rdi, r12
0000000000006126         mov        r15, r8
0000000000006129         mov        r13, r9
000000000000612c         call       argmatch                                    ; argmatch
0000000000006131         test       rax, rax
0000000000006134         js         loc_6145

                     loc_6136:
0000000000006136         add        rsp, 0x8                                    ; CODE XREF=__xargmatch_internal+107
000000000000613a         pop        rbx
000000000000613b         pop        rbp
000000000000613c         pop        r12
000000000000613e         pop        r13
0000000000006140         pop        r14
0000000000006142         pop        r15
0000000000006144         ret
                        ; endp

                     loc_6145:
0000000000006145         mov        rdx, rax                                    ; CODE XREF=__xargmatch_internal+52
0000000000006148         mov        rsi, r12
000000000000614b         mov        rdi, r14
000000000000614e         call       argmatch_invalid                            ; argmatch_invalid
0000000000006153         mov        rdx, r15
0000000000006156         mov        rsi, rbp
0000000000006159         mov        rdi, rbx
000000000000615c         call       argmatch_valid                              ; argmatch_valid
0000000000006161         call       r13
0000000000006164         mov        rax, 0xffffffffffffffff
000000000000616b         jmp        loc_6136
000000000000616d         align      16                                          ; End of unwind block (FDE at 0x8128)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     argmatch_to_argument:
0000000000006170         push       r14                                         ; Begin of unwind block (FDE at 0x8174)
0000000000006172         push       r13
0000000000006174         push       r12
0000000000006176         push       rbp
0000000000006177         push       rbx
0000000000006178         mov        r14, qword [rsi]
000000000000617b         test       r14, r14
000000000000617e         je         loc_61b1

0000000000006180         mov        r12, rcx
0000000000006183         mov        r13, rdi
0000000000006186         mov        rbp, rdx
0000000000006189         lea        rbx, qword [rsi+8]
000000000000618d         jmp        loc_619f
000000000000618f         align      16

                     loc_6190:
0000000000006190         mov        r14, qword [rbx]                            ; CODE XREF=argmatch_to_argument+63
0000000000006193         add        rbp, r12
0000000000006196         add        rbx, 0x8
000000000000619a         test       r14, r14
000000000000619d         je         loc_61b1

                     loc_619f:
000000000000619f         mov        rdx, r12                                    ; argument "__n" for method j_memcmp, CODE XREF=argmatch_to_argument+29
00000000000061a2         mov        rsi, rbp                                    ; argument "__s2" for method j_memcmp
00000000000061a5         mov        rdi, r13                                    ; argument "__s1" for method j_memcmp
00000000000061a8         call       j_memcmp                                    ; memcmp
00000000000061ad         test       eax, eax
00000000000061af         jne        loc_6190

                     loc_61b1:
00000000000061b1         pop        rbx                                         ; CODE XREF=argmatch_to_argument+14, argmatch_to_argument+45
00000000000061b2         mov        rax, r14
00000000000061b5         pop        rbp
00000000000061b6         pop        r12
00000000000061b8         pop        r13
00000000000061ba         pop        r14
00000000000061bc         ret
                        ; endp
00000000000061bd         align      64                                          ; End of unwind block (FDE at 0x8174)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
00000000000061c0         push       r12                                         ; Begin of unwind block (FDE at 0x81b4), CODE XREF=close_stdout+13, close_stdout+51
00000000000061c2         push       rbp
00000000000061c3         mov        rbp, rdi
00000000000061c6         push       rbx
00000000000061c7         call       j___fpending                                ; __fpending
00000000000061cc         mov        ebx, dword [rbp]
00000000000061cf         mov        rdi, rbp
00000000000061d2         mov        r12, rax
00000000000061d5         call       rpl_fclose                                  ; rpl_fclose
00000000000061da         and        ebx, 0x20
00000000000061dd         test       ebx, ebx
00000000000061df         jne        loc_61f8

00000000000061e1         test       eax, eax
00000000000061e3         je         loc_61ef

00000000000061e5         test       r12, r12
00000000000061e8         mov        eax, 0xffffffff
00000000000061ed         je         loc_6228

                     loc_61ef:
00000000000061ef         pop        rbx                                         ; CODE XREF=close_stream+35
00000000000061f0         pop        rbp
00000000000061f1         pop        r12
00000000000061f3         ret
                        ; endp
00000000000061f4         align      8

                     loc_61f8:
00000000000061f8         test       eax, eax                                    ; CODE XREF=close_stream+31
00000000000061fa         jne        loc_6218

00000000000061fc         call       j___errno_location                          ; __errno_location
0000000000006201         mov        dword [rax], 0x0
0000000000006207         mov        eax, 0xffffffff
000000000000620c         pop        rbx
000000000000620d         pop        rbp
000000000000620e         pop        r12
0000000000006210         ret
                        ; endp
0000000000006211         align      8

                     loc_6218:
0000000000006218         pop        rbx                                         ; CODE XREF=close_stream+58
0000000000006219         mov        eax, 0xffffffff
000000000000621e         pop        rbp
000000000000621f         pop        r12
0000000000006221         ret
                        ; endp
0000000000006222         align      8

                     loc_6228:
0000000000006228         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
000000000000622d         cmp        dword [rax], 0x9
0000000000006230         pop        rbx
0000000000006231         pop        rbp
0000000000006232         pop        r12
0000000000006234         setne      al
0000000000006237         movzx      eax, al
000000000000623a         neg        eax
000000000000623c         ret
                        ; endp
000000000000623d         align      64                                          ; End of unwind block (FDE at 0x81b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
0000000000006240         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x8204), CODE XREF=rpl_mbrtowc+71
0000000000006244         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000006246         call       j_setlocale                                 ; setlocale
000000000000624b         mov        rdx, rax
000000000000624e         mov        eax, 0x1
0000000000006253         test       rdx, rdx
0000000000006256         je         loc_6275

0000000000006258         lea        rdi, qword [aNS+13]                         ; 0x7185
000000000000625f         mov        ecx, 0x2
0000000000006264         mov        rsi, rdx
0000000000006267         rep  cmpsb byte [rsi], byte [rdi]
0000000000006269         seta       cl
000000000000626c         sbb        cl, 0x0
000000000000626f         xor        eax, eax
0000000000006271         test       cl, cl
0000000000006273         jne        loc_6280

                     loc_6275:
0000000000006275         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
0000000000006279         ret
                        ; endp
000000000000627a         align      128

                     loc_6280:
0000000000006280         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
0000000000006287         mov        ecx, 0x6
000000000000628c         mov        rsi, rdx
000000000000628f         rep  cmpsb byte [rsi], byte [rdi]
0000000000006291         seta       al
0000000000006294         sbb        al, 0x0
0000000000006296         test       al, al
0000000000006298         setne      al
000000000000629b         add        rsp, 0x8
000000000000629f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
00000000000062a0         sub        rsp, 0x8                                    ; End of unwind block (FDE at 0x8204), Begin of unwind block (FDE at 0x8224), CODE XREF=gettext_quote.part.1+11
00000000000062a4         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
00000000000062a9         call       j_nl_langinfo                               ; nl_langinfo
00000000000062ae         test       rax, rax
00000000000062b1         je         loc_62d0

00000000000062b3         cmp        byte [rax], 0x0
00000000000062b6         lea        rdx, qword [aAscii]                         ; "ASCII"
00000000000062bd         cmove      rax, rdx
00000000000062c1         add        rsp, 0x8
00000000000062c5         ret
                        ; endp
00000000000062c6         align      16

                     loc_62d0:
00000000000062d0         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
00000000000062d7         add        rsp, 0x8
00000000000062db         ret
                        ; endp
00000000000062dc         align      32                                          ; End of unwind block (FDE at 0x8224)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
00000000000062e0         push       r15                                         ; Begin of unwind block (FDE at 0x8244), DATA XREF=_start+22
00000000000062e2         push       r14
00000000000062e4         mov        r15, rdx
00000000000062e7         push       r13
00000000000062e9         push       r12
00000000000062eb         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
00000000000062f2         push       rbp
00000000000062f3         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
00000000000062fa         push       rbx
00000000000062fb         mov        r13d, edi
00000000000062fe         mov        r14, rsi
0000000000006301         sub        rbp, r12
0000000000006304         sub        rsp, 0x8
0000000000006308         sar        rbp, 0x3
000000000000630c         call       _init                                       ; _init
0000000000006311         test       rbp, rbp
0000000000006314         je         loc_6336

0000000000006316         xor        ebx, ebx
0000000000006318         nop        dword [rax+rax]

                     loc_6320:
0000000000006320         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
0000000000006323         mov        rsi, r14
0000000000006326         mov        edi, r13d
0000000000006329         call       qword [r12+rbx*8]
000000000000632d         add        rbx, 0x1
0000000000006331         cmp        rbp, rbx
0000000000006334         jne        loc_6320

                     loc_6336:
0000000000006336         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
000000000000633a         pop        rbx
000000000000633b         pop        rbp
000000000000633c         pop        r12
000000000000633e         pop        r13
0000000000006340         pop        r14
0000000000006342         pop        r15
0000000000006344         ret
                        ; endp
0000000000006345         align      16                                          ; End of unwind block (FDE at 0x8244)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
0000000000006350         ret                                                    ; Begin of unwind block (FDE at 0x828c), DATA XREF=_start+15
                        ; endp
0000000000006352         align      32                                          ; End of unwind block (FDE at 0x828c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
0000000000006360         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0x82a4), __dso_handle, CODE XREF=main+106
0000000000006367         xor        esi, esi
0000000000006369         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
000000000000636e         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x82a4)
000000000000636f         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x6370; 0x6379[ (9 bytes)
        ; File offset : [25456; 25465[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
0000000000006370         sub        rsp, 0x8
0000000000006374         add        rsp, 0x8
0000000000006378         ret
                        ; endp
0000000000006379         db  0x00 ; '.'
000000000000637a         db  0x00 ; '.'
000000000000637b         db  0x00 ; '.'
000000000000637c         db  0x00 ; '.'
000000000000637d         db  0x00 ; '.'
000000000000637e         db  0x00 ; '.'
000000000000637f         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x6380; 0x7193[ (3603 bytes)
        ; File offset : [25472; 29075[ (3603 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
0000000000006380         db  0x01 ; '.'
0000000000006381         db  0x00 ; '.'
0000000000006382         db  0x02 ; '.'
0000000000006383         db  0x00 ; '.'
                     aDS:
0000000000006384         db         "%d %s", 0                                  ; DATA XREF=sysv_sum_file+244
                     a05d5s:
000000000000638a         db         "%05d %5s", 0                               ; DATA XREF=bsd_sum_file+239
0000000000006393         db  0x5b ; '['                                         ; DATA XREF=usage+317
0000000000006394         db  0x00 ; '.'
                     aTestInvocation:
0000000000006395         db         "test invocation", 0                        ; DATA XREF=usage+356
                     aMulticallInvoc:
00000000000063a5         db         "Multi-call invocation", 0                  ; DATA XREF=usage+404
                     aSha224sum:
00000000000063bb         db         "sha224sum", 0                              ; DATA XREF=usage+421
                     aSha2Utilities:
00000000000063c5         db         "sha2 utilities", 0                         ; DATA XREF=usage+433
                     aSha256sum:
00000000000063d4         db         "sha256sum", 0                              ; DATA XREF=usage+324
                     aSha384sum:
00000000000063de         db         "sha384sum", 0                              ; DATA XREF=usage+368
                     aSha512sum:
00000000000063e8         db         "sha512sum", 0                              ; DATA XREF=usage+392
                     aNsOnlineHelpSn:
00000000000063f2         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+506
0000000000006409         db  0x47 ; 'G'                                         ; DATA XREF=main+253, usage+534, usage+727, emit_bug_reporting_address+68
000000000000640a         db  0x4e ; 'N'
000000000000640b         db  0x55 ; 'U'
000000000000640c         db  0x20 ; ' '
                     aCoreutils:
000000000000640d         db         "coreutils", 0                              ; DATA XREF=main+75, main+87, usage+380
0000000000006417         db  0x65 ; 'e'                                         ; DATA XREF=usage+573, usage+766
0000000000006418         db  0x6e ; 'n'
0000000000006419         db  0x5f ; '_'
000000000000641a         db  0x00 ; '.'
                     aFullDocumentat:
000000000000641b         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+601, usage+790
                     aUsrlocalsharel:
0000000000006436         db         "/usr/local/share/locale", 0                ; DATA XREF=main+68
                     aDavidMackenzie:
000000000000644e         db         "David MacKenzie", 0                        ; DATA XREF=main+239
                     aKayvanAghaiepo:
000000000000645e         db         "Kayvan Aghaiepour", 0                      ; DATA XREF=main+246
0000000000006470         db  0x72 ; 'r'                                         ; DATA XREF=main+29
0000000000006471         db  0x73 ; 's'
0000000000006472         db  0x00 ; '.'
                     aSysv:
0000000000006473         db         "sysv", 0
                     aHelp:
0000000000006478         db         "help", 0
                     aVersion:
000000000000647d         db         "version", 0
0000000000006485         align      8
                     aTrySHelpForMor:
0000000000006488         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
00000000000064af         align      16
                     aUsageSOptionFi:
00000000000064b0         db         "Usage: %s [OPTION]... [FILE]...\n", 0      ; DATA XREF=usage+93
00000000000064d1         align      8
                     aPrintChecksumA:
00000000000064d8         db         "Print checksum and block counts for each FILE.\n", 0 ; DATA XREF=usage+132
                     aNwithNoFileOrW:
0000000000006508         db         "\nWith no FILE, or when FILE is -, read standard input.\n", 0 ; DATA XREF=usage+169
                     aNRUseBsdSumAlg:
0000000000006540         db         "\n  -r              use BSD sum algorithm, use 1K blocks\n  -s, --sysv      use System V sum algorithm, use 512 bytes blocks\n", 0 ; DATA XREF=usage+206
00000000000065bc         align      64
                     aHelpDisplayThi:
00000000000065c0         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+243
00000000000065ed         align      16
                     aVersionOutputV:
00000000000065f0         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+280
0000000000006626         align      8
                     aHttpswwwgnuorg:
0000000000006628         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+527, usage+627, usage+720, usage+830, emit_bug_reporting_address+61
                     aReportAnyTrans:
0000000000006650         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+871
0000000000006697         align      8
                     aOrAvailableLoc:
0000000000006698         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+670
                     a831:
00000000000066cb         db         "8.31", 0                                   ; DATA XREF=Version
                     aWriteError:
00000000000066d0         db         "write error", 0                            ; DATA XREF=close_stdout+67
                     aSS:
00000000000066dc         db         "%s: %s", 0                                 ; DATA XREF=close_stdout+108
00000000000066e3         db  0x2e ; '.'                                         ; DATA XREF=human_readable+132
00000000000066e4         db  0x00 ; '.'
                     a0lf:
00000000000066e5         db         "%.0Lf", 0                                  ; DATA XREF=human_readable+784, human_readable+1865
                     a1lf:
00000000000066eb         db         "%.1Lf", 0                                  ; DATA XREF=human_readable+417, human_readable+1780
                     aBlocksize:
00000000000066f1         db         "BLOCK_SIZE", 0                             ; DATA XREF=human_options+320
                     aBlocksize_66fc:        // aBlocksize
00000000000066fc         db         "BLOCKSIZE", 0                              ; DATA XREF=human_options+344
                     aPosixlycorrect:
0000000000006706         db         "POSIXLY_CORRECT", 0                        ; DATA XREF=human_options+269, human_options+368
                     aEeggkkmmppttyy:
0000000000006716         db         "eEgGkKmMpPtTyYzZ0", 0                      ; DATA XREF=human_options+152
                     aHumanreadable:
0000000000006728         db         "human-readable", 0
0000000000006737         db  0x73 ; 's'
0000000000006738         db  0x69 ; 'i'
0000000000006739         db  0x00 ; '.'
000000000000673a         db  0x00 ; '.'
000000000000673b         db  0x00 ; '.'
000000000000673c         db  0x00 ; '.'
000000000000673d         db  0x00 ; '.'
000000000000673e         db  0x00 ; '.'
000000000000673f         db  0x00 ; '.'
                     block_size_opts:
0000000000006740         db  0xb0 ; '.'                                         ; DATA XREF=human_options+60, human_options+91
0000000000006741         db  0x00 ; '.'
0000000000006742         db  0x00 ; '.'
0000000000006743         db  0x00 ; '.'
0000000000006744         db  0x90 ; '.'
0000000000006745         db  0x00 ; '.'
0000000000006746         db  0x00 ; '.'
0000000000006747         db  0x00 ; '.'
                     power_letter:
0000000000006748         db  0x00 ; '.'                                         ; DATA XREF=human_readable+972
0000000000006749         db  0x4b ; 'K'
000000000000674a         db  0x4d ; 'M'
000000000000674b         db  0x47 ; 'G'
000000000000674c         db  0x54 ; 'T'
000000000000674d         db  0x50 ; 'P'
000000000000674e         db  0x45 ; 'E'
000000000000674f         db  0x5a ; 'Z'
0000000000006750         db  0x59 ; 'Y'
0000000000006751         db  0x00 ; '.'
0000000000006752         db  0x00 ; '.'
0000000000006753         db  0x00 ; '.'
                     dword_6754:
0000000000006754         dd         0x5f000000                                  ; DATA XREF=adjust_value.part.0
                     dword_6758:
0000000000006758         dd         0x5f800000                                  ; DATA XREF=adjust_value.part.0+66, adjust_value.part.0+192, human_readable+243, human_readable+268, human_readable+290
                     dword_675c:
000000000000675c         dd         0x41200000                                  ; DATA XREF=human_readable+508, human_readable+1851, human_readable+1928
0000000000006760         db  0xff ; '.'                                         ; DATA XREF=human_readable+393, human_readable+766, human_readable+1936
0000000000006761         db  0xff ; '.'
0000000000006762         db  0xff ; '.'
0000000000006763         db  0xff ; '.'
0000000000006764         db  0xff ; '.'
0000000000006765         db  0xff ; '.'
0000000000006766         db  0xff ; '.'
0000000000006767         db  0xff ; '.'
0000000000006768         db  0x3e ; '>'
0000000000006769         db  0x40 ; '@'
000000000000676a         db  0x00 ; '.'
000000000000676b         db  0x00 ; '.'
000000000000676c         db  0x00 ; '.'
000000000000676d         db  0x00 ; '.'
000000000000676e         db  0x00 ; '.'
000000000000676f         db  0x00 ; '.'
                     aANullArgv0WasP:
0000000000006770         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
00000000000067a8         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
00000000000067b0         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
00000000000067b1         db  0x74 ; 't'
00000000000067b2         db  0x2d ; '-'                                         ; DATA XREF=main+314, main+373, sysv_sum_file+18, bsd_sum_file+18
00000000000067b3         db  0x00 ; '.'
00000000000067b4         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
00000000000067b5         db  0x80 ; '.'
00000000000067b6         db  0x98 ; '.'
00000000000067b7         db  0x00 ; '.'
00000000000067b8         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
00000000000067b9         db  0x80 ; '.'
00000000000067ba         db  0x99 ; '.'
00000000000067bb         db  0x00 ; '.'
00000000000067bc         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
00000000000067bd         db  0x07 ; '.'
00000000000067be         db  0x65 ; 'e'
00000000000067bf         db  0x00 ; '.'
00000000000067c0         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
00000000000067c1         db  0xaf ; '.'
00000000000067c2         db  0x00 ; '.'
00000000000067c3         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_3af0+1451, sub_3af0+1493, sub_3af0+2429
00000000000067c4         db  0x00 ; '.'
00000000000067c5         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_3af0+132, sub_3af0+1338, sub_3af0+1670, sub_3af0+1697, sub_3af0+2352
00000000000067c6         db  0x00 ; '.'
00000000000067c7         db  0x60 ; '`'                                         ; DATA XREF=sub_3af0+1627, sub_3af0+1654
00000000000067c8         db  0x00 ; '.'
                     aLiteral:
00000000000067c9         db         "literal", 0
                     aShell:
00000000000067d1         db         "shell", 0
                     aShellalways:
00000000000067d7         db         "shell-always", 0
00000000000067e4         db  0x73 ; 's'
00000000000067e5         db  0x68 ; 'h'
00000000000067e6         db  0x65 ; 'e'
00000000000067e7         db  0x6c ; 'l'
00000000000067e8         db  0x6c ; 'l'
00000000000067e9         db  0x2d ; '-'
                     aEscape:
00000000000067ea         db         "escape", 0
                     aShellescapealw:
00000000000067f1         db         "shell-escape-always", 0
0000000000006805         db  0x63 ; 'c'
0000000000006806         db  0x00 ; '.'
                     aCmaybe:
0000000000006807         db         "c-maybe", 0
                     aClocale:
000000000000680f         db         "clocale", 0
0000000000006817         align      32
                     switch_table_6820:        // switch_table
0000000000006820         dd         quotearg_buffer_restyled.loc_41ea-switch_table_6820, quotearg_buffer_restyled.loc_3443-switch_table_6820, quotearg_buffer_restyled.loc_4418-switch_table_6820, quotearg_buffer_restyled.loc_4224-switch_table_6820 ; switch table used at 0x3441 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
0000000000006830         dd         quotearg_buffer_restyled.loc_4014-switch_table_6820, quotearg_buffer_restyled.loc_4070-switch_table_6820, quotearg_buffer_restyled.loc_40c5-switch_table_6820, quotearg_buffer_restyled.loc_410a-switch_table_6820
0000000000006840         dd         3 dup (quotearg_buffer_restyled.loc_4144-switch_table_6820)
000000000000684c         db  0x74 ; 't'                                         ; DATA XREF=quotearg_buffer_restyled+477
000000000000684d         db  0xcf ; '.'
000000000000684e         db  0xff ; '.'
000000000000684f         db  0xff ; '.'
0000000000006850         db  0x5c ; '\'
0000000000006851         db  0xd0 ; '.'
0000000000006852         db  0xff ; '.'
0000000000006853         db  0xff ; '.'
0000000000006854         db  0x5c ; '\'
0000000000006855         db  0xd0 ; '.'
0000000000006856         db  0xff ; '.'
0000000000006857         db  0xff ; '.'
0000000000006858         db  0x5c ; '\'
0000000000006859         db  0xd0 ; '.'
000000000000685a         db  0xff ; '.'
000000000000685b         db  0xff ; '.'
000000000000685c         db  0x5c ; '\'
000000000000685d         db  0xd0 ; '.'
000000000000685e         db  0xff ; '.'
000000000000685f         db  0xff ; '.'
0000000000006860         db  0x5c ; '\'
0000000000006861         db  0xd0 ; '.'
0000000000006862         db  0xff ; '.'
0000000000006863         db  0xff ; '.'
0000000000006864         db  0x5c ; '\'
0000000000006865         db  0xd0 ; '.'
0000000000006866         db  0xff ; '.'
0000000000006867         db  0xff ; '.'
0000000000006868         db  0xb4 ; '.'
0000000000006869         db  0xcf ; '.'
000000000000686a         db  0xff ; '.'
000000000000686b         db  0xff ; '.'
000000000000686c         db  0xbc ; '.'
000000000000686d         db  0xce ; '.'
000000000000686e         db  0xff ; '.'
000000000000686f         db  0xff ; '.'
0000000000006870         db  0x7c ; '|'
0000000000006871         db  0xce ; '.'
0000000000006872         db  0xff ; '.'
0000000000006873         db  0xff ; '.'
0000000000006874         db  0x44 ; 'D'
0000000000006875         db  0xd0 ; '.'
0000000000006876         db  0xff ; '.'
0000000000006877         db  0xff ; '.'
0000000000006878         db  0x34 ; '4'
0000000000006879         db  0xd0 ; '.'
000000000000687a         db  0xff ; '.'
000000000000687b         db  0xff ; '.'
000000000000687c         db  0x24 ; '$'
000000000000687d         db  0xd0 ; '.'
000000000000687e         db  0xff ; '.'
000000000000687f         db  0xff ; '.'
0000000000006880         db  0x14 ; '.'
0000000000006881         db  0xd0 ; '.'
0000000000006882         db  0xff ; '.'
0000000000006883         db  0xff ; '.'
0000000000006884         db  0x5c ; '\'
0000000000006885         db  0xd0 ; '.'
0000000000006886         db  0xff ; '.'
0000000000006887         db  0xff ; '.'
0000000000006888         db  0x5c ; '\'
0000000000006889         db  0xd0 ; '.'
000000000000688a         db  0xff ; '.'
000000000000688b         db  0xff ; '.'
000000000000688c         db  0x5c ; '\'
000000000000688d         db  0xd0 ; '.'
000000000000688e         db  0xff ; '.'
000000000000688f         db  0xff ; '.'
0000000000006890         db  0x5c ; '\'
0000000000006891         db  0xd0 ; '.'
0000000000006892         db  0xff ; '.'
0000000000006893         db  0xff ; '.'
0000000000006894         db  0x5c ; '\'
0000000000006895         db  0xd0 ; '.'
0000000000006896         db  0xff ; '.'
0000000000006897         db  0xff ; '.'
0000000000006898         db  0x5c ; '\'
0000000000006899         db  0xd0 ; '.'
000000000000689a         db  0xff ; '.'
000000000000689b         db  0xff ; '.'
000000000000689c         db  0x5c ; '\'
000000000000689d         db  0xd0 ; '.'
000000000000689e         db  0xff ; '.'
000000000000689f         db  0xff ; '.'
00000000000068a0         db  0x5c ; '\'
00000000000068a1         db  0xd0 ; '.'
00000000000068a2         db  0xff ; '.'
00000000000068a3         db  0xff ; '.'
00000000000068a4         db  0x5c ; '\'
00000000000068a5         db  0xd0 ; '.'
00000000000068a6         db  0xff ; '.'
00000000000068a7         db  0xff ; '.'
00000000000068a8         db  0x5c ; '\'
00000000000068a9         db  0xd0 ; '.'
00000000000068aa         db  0xff ; '.'
00000000000068ab         db  0xff ; '.'
00000000000068ac         db  0x5c ; '\'
00000000000068ad         db  0xd0 ; '.'
00000000000068ae         db  0xff ; '.'
00000000000068af         db  0xff ; '.'
00000000000068b0         db  0x5c ; '\'
00000000000068b1         db  0xd0 ; '.'
00000000000068b2         db  0xff ; '.'
00000000000068b3         db  0xff ; '.'
00000000000068b4         db  0x5c ; '\'
00000000000068b5         db  0xd0 ; '.'
00000000000068b6         db  0xff ; '.'
00000000000068b7         db  0xff ; '.'
00000000000068b8         db  0x5c ; '\'
00000000000068b9         db  0xd0 ; '.'
00000000000068ba         db  0xff ; '.'
00000000000068bb         db  0xff ; '.'
00000000000068bc         db  0x5c ; '\'
00000000000068bd         db  0xd0 ; '.'
00000000000068be         db  0xff ; '.'
00000000000068bf         db  0xff ; '.'
00000000000068c0         db  0x5c ; '\'
00000000000068c1         db  0xd0 ; '.'
00000000000068c2         db  0xff ; '.'
00000000000068c3         db  0xff ; '.'
00000000000068c4         db  0x5c ; '\'
00000000000068c5         db  0xd0 ; '.'
00000000000068c6         db  0xff ; '.'
00000000000068c7         db  0xff ; '.'
00000000000068c8         db  0x5c ; '\'
00000000000068c9         db  0xd0 ; '.'
00000000000068ca         db  0xff ; '.'
00000000000068cb         db  0xff ; '.'
00000000000068cc         db  0x04 ; '.'
00000000000068cd         db  0xd0 ; '.'
00000000000068ce         db  0xff ; '.'
00000000000068cf         db  0xff ; '.'
00000000000068d0         db  0xf4 ; '.'
00000000000068d1         db  0xcf ; '.'
00000000000068d2         db  0xff ; '.'
00000000000068d3         db  0xff ; '.'
00000000000068d4         db  0xf4 ; '.'
00000000000068d5         db  0xcf ; '.'
00000000000068d6         db  0xff ; '.'
00000000000068d7         db  0xff ; '.'
00000000000068d8         db  0xc4 ; '.'
00000000000068d9         db  0xcf ; '.'
00000000000068da         db  0xff ; '.'
00000000000068db         db  0xff ; '.'
00000000000068dc         db  0xf4 ; '.'
00000000000068dd         db  0xcf ; '.'
00000000000068de         db  0xff ; '.'
00000000000068df         db  0xff ; '.'
00000000000068e0         db  0x9c ; '.'
00000000000068e1         db  0xcf ; '.'
00000000000068e2         db  0xff ; '.'
00000000000068e3         db  0xff ; '.'
00000000000068e4         db  0xf4 ; '.'
00000000000068e5         db  0xcf ; '.'
00000000000068e6         db  0xff ; '.'
00000000000068e7         db  0xff ; '.'
00000000000068e8         db  0x57 ; 'W'
00000000000068e9         db  0xce ; '.'
00000000000068ea         db  0xff ; '.'
00000000000068eb         db  0xff ; '.'
00000000000068ec         db  0xf4 ; '.'
00000000000068ed         db  0xcf ; '.'
00000000000068ee         db  0xff ; '.'
00000000000068ef         db  0xff ; '.'
00000000000068f0         db  0xf4 ; '.'
00000000000068f1         db  0xcf ; '.'
00000000000068f2         db  0xff ; '.'
00000000000068f3         db  0xff ; '.'
00000000000068f4         db  0xf4 ; '.'
00000000000068f5         db  0xcf ; '.'
00000000000068f6         db  0xff ; '.'
00000000000068f7         db  0xff ; '.'
00000000000068f8         db  0x9c ; '.'
00000000000068f9         db  0xcf ; '.'
00000000000068fa         db  0xff ; '.'
00000000000068fb         db  0xff ; '.'
00000000000068fc         db  0x9c ; '.'
00000000000068fd         db  0xcf ; '.'
00000000000068fe         db  0xff ; '.'
00000000000068ff         db  0xff ; '.'
0000000000006900         db  0x9c ; '.'
0000000000006901         db  0xcf ; '.'
0000000000006902         db  0xff ; '.'
0000000000006903         db  0xff ; '.'
0000000000006904         db  0x9c ; '.'
0000000000006905         db  0xcf ; '.'
0000000000006906         db  0xff ; '.'
0000000000006907         db  0xff ; '.'
0000000000006908         db  0x9c ; '.'
0000000000006909         db  0xcf ; '.'
000000000000690a         db  0xff ; '.'
000000000000690b         db  0xff ; '.'
000000000000690c         db  0x9c ; '.'
000000000000690d         db  0xcf ; '.'
000000000000690e         db  0xff ; '.'
000000000000690f         db  0xff ; '.'
0000000000006910         db  0x9c ; '.'
0000000000006911         db  0xcf ; '.'
0000000000006912         db  0xff ; '.'
0000000000006913         db  0xff ; '.'
0000000000006914         db  0x9c ; '.'
0000000000006915         db  0xcf ; '.'
0000000000006916         db  0xff ; '.'
0000000000006917         db  0xff ; '.'
0000000000006918         db  0x9c ; '.'
0000000000006919         db  0xcf ; '.'
000000000000691a         db  0xff ; '.'
000000000000691b         db  0xff ; '.'
000000000000691c         db  0x9c ; '.'
000000000000691d         db  0xcf ; '.'
000000000000691e         db  0xff ; '.'
000000000000691f         db  0xff ; '.'
0000000000006920         db  0x9c ; '.'
0000000000006921         db  0xcf ; '.'
0000000000006922         db  0xff ; '.'
0000000000006923         db  0xff ; '.'
0000000000006924         db  0x9c ; '.'
0000000000006925         db  0xcf ; '.'
0000000000006926         db  0xff ; '.'
0000000000006927         db  0xff ; '.'
0000000000006928         db  0x9c ; '.'
0000000000006929         db  0xcf ; '.'
000000000000692a         db  0xff ; '.'
000000000000692b         db  0xff ; '.'
000000000000692c         db  0x9c ; '.'
000000000000692d         db  0xcf ; '.'
000000000000692e         db  0xff ; '.'
000000000000692f         db  0xff ; '.'
0000000000006930         db  0x9c ; '.'
0000000000006931         db  0xcf ; '.'
0000000000006932         db  0xff ; '.'
0000000000006933         db  0xff ; '.'
0000000000006934         db  0x9c ; '.'
0000000000006935         db  0xcf ; '.'
0000000000006936         db  0xff ; '.'
0000000000006937         db  0xff ; '.'
0000000000006938         db  0xf4 ; '.'
0000000000006939         db  0xcf ; '.'
000000000000693a         db  0xff ; '.'
000000000000693b         db  0xff ; '.'
000000000000693c         db  0xf4 ; '.'
000000000000693d         db  0xcf ; '.'
000000000000693e         db  0xff ; '.'
000000000000693f         db  0xff ; '.'
0000000000006940         db  0xf4 ; '.'
0000000000006941         db  0xcf ; '.'
0000000000006942         db  0xff ; '.'
0000000000006943         db  0xff ; '.'
0000000000006944         db  0xf4 ; '.'
0000000000006945         db  0xcf ; '.'
0000000000006946         db  0xff ; '.'
0000000000006947         db  0xff ; '.'
0000000000006948         db  0x27 ; '''
0000000000006949         db  0xce ; '.'
000000000000694a         db  0xff ; '.'
000000000000694b         db  0xff ; '.'
000000000000694c         db  0x5c ; '\'
000000000000694d         db  0xd0 ; '.'
000000000000694e         db  0xff ; '.'
000000000000694f         db  0xff ; '.'
0000000000006950         db  0x9c ; '.'
0000000000006951         db  0xcf ; '.'
0000000000006952         db  0xff ; '.'
0000000000006953         db  0xff ; '.'
0000000000006954         db  0x9c ; '.'
0000000000006955         db  0xcf ; '.'
0000000000006956         db  0xff ; '.'
0000000000006957         db  0xff ; '.'
0000000000006958         db  0x9c ; '.'
0000000000006959         db  0xcf ; '.'
000000000000695a         db  0xff ; '.'
000000000000695b         db  0xff ; '.'
000000000000695c         db  0x9c ; '.'
000000000000695d         db  0xcf ; '.'
000000000000695e         db  0xff ; '.'
000000000000695f         db  0xff ; '.'
0000000000006960         db  0x9c ; '.'
0000000000006961         db  0xcf ; '.'
0000000000006962         db  0xff ; '.'
0000000000006963         db  0xff ; '.'
0000000000006964         db  0x9c ; '.'
0000000000006965         db  0xcf ; '.'
0000000000006966         db  0xff ; '.'
0000000000006967         db  0xff ; '.'
0000000000006968         db  0x9c ; '.'
0000000000006969         db  0xcf ; '.'
000000000000696a         db  0xff ; '.'
000000000000696b         db  0xff ; '.'
000000000000696c         db  0x9c ; '.'
000000000000696d         db  0xcf ; '.'
000000000000696e         db  0xff ; '.'
000000000000696f         db  0xff ; '.'
0000000000006970         db  0x9c ; '.'
0000000000006971         db  0xcf ; '.'
0000000000006972         db  0xff ; '.'
0000000000006973         db  0xff ; '.'
0000000000006974         db  0x9c ; '.'
0000000000006975         db  0xcf ; '.'
0000000000006976         db  0xff ; '.'
0000000000006977         db  0xff ; '.'
0000000000006978         db  0x9c ; '.'
0000000000006979         db  0xcf ; '.'
000000000000697a         db  0xff ; '.'
000000000000697b         db  0xff ; '.'
000000000000697c         db  0x9c ; '.'
000000000000697d         db  0xcf ; '.'
000000000000697e         db  0xff ; '.'
000000000000697f         db  0xff ; '.'
0000000000006980         db  0x9c ; '.'
0000000000006981         db  0xcf ; '.'
0000000000006982         db  0xff ; '.'
0000000000006983         db  0xff ; '.'
0000000000006984         db  0x9c ; '.'
0000000000006985         db  0xcf ; '.'
0000000000006986         db  0xff ; '.'
0000000000006987         db  0xff ; '.'
0000000000006988         db  0x9c ; '.'
0000000000006989         db  0xcf ; '.'
000000000000698a         db  0xff ; '.'
000000000000698b         db  0xff ; '.'
000000000000698c         db  0x9c ; '.'
000000000000698d         db  0xcf ; '.'
000000000000698e         db  0xff ; '.'
000000000000698f         db  0xff ; '.'
0000000000006990         db  0x9c ; '.'
0000000000006991         db  0xcf ; '.'
0000000000006992         db  0xff ; '.'
0000000000006993         db  0xff ; '.'
0000000000006994         db  0x9c ; '.'
0000000000006995         db  0xcf ; '.'
0000000000006996         db  0xff ; '.'
0000000000006997         db  0xff ; '.'
0000000000006998         db  0x9c ; '.'
0000000000006999         db  0xcf ; '.'
000000000000699a         db  0xff ; '.'
000000000000699b         db  0xff ; '.'
000000000000699c         db  0x9c ; '.'
000000000000699d         db  0xcf ; '.'
000000000000699e         db  0xff ; '.'
000000000000699f         db  0xff ; '.'
00000000000069a0         db  0x9c ; '.'
00000000000069a1         db  0xcf ; '.'
00000000000069a2         db  0xff ; '.'
00000000000069a3         db  0xff ; '.'
00000000000069a4         db  0x9c ; '.'
00000000000069a5         db  0xcf ; '.'
00000000000069a6         db  0xff ; '.'
00000000000069a7         db  0xff ; '.'
00000000000069a8         db  0x9c ; '.'
00000000000069a9         db  0xcf ; '.'
00000000000069aa         db  0xff ; '.'
00000000000069ab         db  0xff ; '.'
00000000000069ac         db  0x9c ; '.'
00000000000069ad         db  0xcf ; '.'
00000000000069ae         db  0xff ; '.'
00000000000069af         db  0xff ; '.'
00000000000069b0         db  0x9c ; '.'
00000000000069b1         db  0xcf ; '.'
00000000000069b2         db  0xff ; '.'
00000000000069b3         db  0xff ; '.'
00000000000069b4         db  0x9c ; '.'
00000000000069b5         db  0xcf ; '.'
00000000000069b6         db  0xff ; '.'
00000000000069b7         db  0xff ; '.'
00000000000069b8         db  0xf4 ; '.'
00000000000069b9         db  0xcf ; '.'
00000000000069ba         db  0xff ; '.'
00000000000069bb         db  0xff ; '.'
00000000000069bc         db  0xcc ; '.'
00000000000069bd         db  0xce ; '.'
00000000000069be         db  0xff ; '.'
00000000000069bf         db  0xff ; '.'
00000000000069c0         db  0x9c ; '.'
00000000000069c1         db  0xcf ; '.'
00000000000069c2         db  0xff ; '.'
00000000000069c3         db  0xff ; '.'
00000000000069c4         db  0xf4 ; '.'
00000000000069c5         db  0xcf ; '.'
00000000000069c6         db  0xff ; '.'
00000000000069c7         db  0xff ; '.'
00000000000069c8         db  0x9c ; '.'
00000000000069c9         db  0xcf ; '.'
00000000000069ca         db  0xff ; '.'
00000000000069cb         db  0xff ; '.'
00000000000069cc         db  0xf4 ; '.'
00000000000069cd         db  0xcf ; '.'
00000000000069ce         db  0xff ; '.'
00000000000069cf         db  0xff ; '.'
00000000000069d0         db  0x9c ; '.'
00000000000069d1         db  0xcf ; '.'
00000000000069d2         db  0xff ; '.'
00000000000069d3         db  0xff ; '.'
00000000000069d4         db  0x9c ; '.'
00000000000069d5         db  0xcf ; '.'
00000000000069d6         db  0xff ; '.'
00000000000069d7         db  0xff ; '.'
00000000000069d8         db  0x9c ; '.'
00000000000069d9         db  0xcf ; '.'
00000000000069da         db  0xff ; '.'
00000000000069db         db  0xff ; '.'
00000000000069dc         db  0x9c ; '.'
00000000000069dd         db  0xcf ; '.'
00000000000069de         db  0xff ; '.'
00000000000069df         db  0xff ; '.'
00000000000069e0         db  0x9c ; '.'
00000000000069e1         db  0xcf ; '.'
00000000000069e2         db  0xff ; '.'
00000000000069e3         db  0xff ; '.'
00000000000069e4         db  0x9c ; '.'
00000000000069e5         db  0xcf ; '.'
00000000000069e6         db  0xff ; '.'
00000000000069e7         db  0xff ; '.'
00000000000069e8         db  0x9c ; '.'
00000000000069e9         db  0xcf ; '.'
00000000000069ea         db  0xff ; '.'
00000000000069eb         db  0xff ; '.'
00000000000069ec         db  0x9c ; '.'
00000000000069ed         db  0xcf ; '.'
00000000000069ee         db  0xff ; '.'
00000000000069ef         db  0xff ; '.'
00000000000069f0         db  0x9c ; '.'
00000000000069f1         db  0xcf ; '.'
00000000000069f2         db  0xff ; '.'
00000000000069f3         db  0xff ; '.'
00000000000069f4         db  0x9c ; '.'
00000000000069f5         db  0xcf ; '.'
00000000000069f6         db  0xff ; '.'
00000000000069f7         db  0xff ; '.'
00000000000069f8         db  0x9c ; '.'
00000000000069f9         db  0xcf ; '.'
00000000000069fa         db  0xff ; '.'
00000000000069fb         db  0xff ; '.'
00000000000069fc         db  0x9c ; '.'
00000000000069fd         db  0xcf ; '.'
00000000000069fe         db  0xff ; '.'
00000000000069ff         db  0xff ; '.'
0000000000006a00         db  0x9c ; '.'
0000000000006a01         db  0xcf ; '.'
0000000000006a02         db  0xff ; '.'
0000000000006a03         db  0xff ; '.'
0000000000006a04         db  0x9c ; '.'
0000000000006a05         db  0xcf ; '.'
0000000000006a06         db  0xff ; '.'
0000000000006a07         db  0xff ; '.'
0000000000006a08         db  0x9c ; '.'
0000000000006a09         db  0xcf ; '.'
0000000000006a0a         db  0xff ; '.'
0000000000006a0b         db  0xff ; '.'
0000000000006a0c         db  0x9c ; '.'
0000000000006a0d         db  0xcf ; '.'
0000000000006a0e         db  0xff ; '.'
0000000000006a0f         db  0xff ; '.'
0000000000006a10         db  0x9c ; '.'
0000000000006a11         db  0xcf ; '.'
0000000000006a12         db  0xff ; '.'
0000000000006a13         db  0xff ; '.'
0000000000006a14         db  0x9c ; '.'
0000000000006a15         db  0xcf ; '.'
0000000000006a16         db  0xff ; '.'
0000000000006a17         db  0xff ; '.'
0000000000006a18         db  0x9c ; '.'
0000000000006a19         db  0xcf ; '.'
0000000000006a1a         db  0xff ; '.'
0000000000006a1b         db  0xff ; '.'
0000000000006a1c         db  0x9c ; '.'
0000000000006a1d         db  0xcf ; '.'
0000000000006a1e         db  0xff ; '.'
0000000000006a1f         db  0xff ; '.'
0000000000006a20         db  0x9c ; '.'
0000000000006a21         db  0xcf ; '.'
0000000000006a22         db  0xff ; '.'
0000000000006a23         db  0xff ; '.'
0000000000006a24         db  0x9c ; '.'
0000000000006a25         db  0xcf ; '.'
0000000000006a26         db  0xff ; '.'
0000000000006a27         db  0xff ; '.'
0000000000006a28         db  0x9c ; '.'
0000000000006a29         db  0xcf ; '.'
0000000000006a2a         db  0xff ; '.'
0000000000006a2b         db  0xff ; '.'
0000000000006a2c         db  0x9c ; '.'
0000000000006a2d         db  0xcf ; '.'
0000000000006a2e         db  0xff ; '.'
0000000000006a2f         db  0xff ; '.'
0000000000006a30         db  0x9c ; '.'
0000000000006a31         db  0xcf ; '.'
0000000000006a32         db  0xff ; '.'
0000000000006a33         db  0xff ; '.'
0000000000006a34         db  0x9c ; '.'
0000000000006a35         db  0xcf ; '.'
0000000000006a36         db  0xff ; '.'
0000000000006a37         db  0xff ; '.'
0000000000006a38         db  0x57 ; 'W'
0000000000006a39         db  0xcd ; '.'
0000000000006a3a         db  0xff ; '.'
0000000000006a3b         db  0xff ; '.'
0000000000006a3c         db  0xf4 ; '.'
0000000000006a3d         db  0xcf ; '.'
0000000000006a3e         db  0xff ; '.'
0000000000006a3f         db  0xff ; '.'
0000000000006a40         db  0x57 ; 'W'
0000000000006a41         db  0xcd ; '.'
0000000000006a42         db  0xff ; '.'
0000000000006a43         db  0xff ; '.'
0000000000006a44         db  0xc4 ; '.'
0000000000006a45         db  0xcf ; '.'
0000000000006a46         db  0xff ; '.'
0000000000006a47         db  0xff ; '.'
0000000000006a48         db  0x48 ; 'H'                                         ; DATA XREF=sub_3890+137
0000000000006a49         db  0xcf ; '.'
0000000000006a4a         db  0xff ; '.'
0000000000006a4b         db  0xff ; '.'
0000000000006a4c         db  0x58 ; 'X'
0000000000006a4d         db  0xce ; '.'
0000000000006a4e         db  0xff ; '.'
0000000000006a4f         db  0xff ; '.'
0000000000006a50         db  0x58 ; 'X'
0000000000006a51         db  0xce ; '.'
0000000000006a52         db  0xff ; '.'
0000000000006a53         db  0xff ; '.'
0000000000006a54         db  0x58 ; 'X'
0000000000006a55         db  0xce ; '.'
0000000000006a56         db  0xff ; '.'
0000000000006a57         db  0xff ; '.'
0000000000006a58         db  0x58 ; 'X'
0000000000006a59         db  0xce ; '.'
0000000000006a5a         db  0xff ; '.'
0000000000006a5b         db  0xff ; '.'
0000000000006a5c         db  0x58 ; 'X'
0000000000006a5d         db  0xce ; '.'
0000000000006a5e         db  0xff ; '.'
0000000000006a5f         db  0xff ; '.'
0000000000006a60         db  0x58 ; 'X'
0000000000006a61         db  0xce ; '.'
0000000000006a62         db  0xff ; '.'
0000000000006a63         db  0xff ; '.'
0000000000006a64         db  0x38 ; '8'
0000000000006a65         db  0xcf ; '.'
0000000000006a66         db  0xff ; '.'
0000000000006a67         db  0xff ; '.'
0000000000006a68         db  0x88 ; '.'
0000000000006a69         db  0xd0 ; '.'
0000000000006a6a         db  0xff ; '.'
0000000000006a6b         db  0xff ; '.'
0000000000006a6c         db  0x70 ; 'p'
0000000000006a6d         db  0xd0 ; '.'
0000000000006a6e         db  0xff ; '.'
0000000000006a6f         db  0xff ; '.'
0000000000006a70         db  0x20 ; ' '
0000000000006a71         db  0xcf ; '.'
0000000000006a72         db  0xff ; '.'
0000000000006a73         db  0xff ; '.'
0000000000006a74         db  0x60 ; '`'
0000000000006a75         db  0xd0 ; '.'
0000000000006a76         db  0xff ; '.'
0000000000006a77         db  0xff ; '.'
0000000000006a78         db  0x08 ; '.'
0000000000006a79         db  0xcf ; '.'
0000000000006a7a         db  0xff ; '.'
0000000000006a7b         db  0xff ; '.'
0000000000006a7c         db  0x48 ; 'H'
0000000000006a7d         db  0xd0 ; '.'
0000000000006a7e         db  0xff ; '.'
0000000000006a7f         db  0xff ; '.'
0000000000006a80         db  0x58 ; 'X'
0000000000006a81         db  0xce ; '.'
0000000000006a82         db  0xff ; '.'
0000000000006a83         db  0xff ; '.'
0000000000006a84         db  0x58 ; 'X'
0000000000006a85         db  0xce ; '.'
0000000000006a86         db  0xff ; '.'
0000000000006a87         db  0xff ; '.'
0000000000006a88         db  0x58 ; 'X'
0000000000006a89         db  0xce ; '.'
0000000000006a8a         db  0xff ; '.'
0000000000006a8b         db  0xff ; '.'
0000000000006a8c         db  0x58 ; 'X'
0000000000006a8d         db  0xce ; '.'
0000000000006a8e         db  0xff ; '.'
0000000000006a8f         db  0xff ; '.'
0000000000006a90         db  0x58 ; 'X'
0000000000006a91         db  0xce ; '.'
0000000000006a92         db  0xff ; '.'
0000000000006a93         db  0xff ; '.'
0000000000006a94         db  0x58 ; 'X'
0000000000006a95         db  0xce ; '.'
0000000000006a96         db  0xff ; '.'
0000000000006a97         db  0xff ; '.'
0000000000006a98         db  0x58 ; 'X'
0000000000006a99         db  0xce ; '.'
0000000000006a9a         db  0xff ; '.'
0000000000006a9b         db  0xff ; '.'
0000000000006a9c         db  0x58 ; 'X'
0000000000006a9d         db  0xce ; '.'
0000000000006a9e         db  0xff ; '.'
0000000000006a9f         db  0xff ; '.'
0000000000006aa0         db  0x58 ; 'X'
0000000000006aa1         db  0xce ; '.'
0000000000006aa2         db  0xff ; '.'
0000000000006aa3         db  0xff ; '.'
0000000000006aa4         db  0x58 ; 'X'
0000000000006aa5         db  0xce ; '.'
0000000000006aa6         db  0xff ; '.'
0000000000006aa7         db  0xff ; '.'
0000000000006aa8         db  0x58 ; 'X'
0000000000006aa9         db  0xce ; '.'
0000000000006aaa         db  0xff ; '.'
0000000000006aab         db  0xff ; '.'
0000000000006aac         db  0x58 ; 'X'
0000000000006aad         db  0xce ; '.'
0000000000006aae         db  0xff ; '.'
0000000000006aaf         db  0xff ; '.'
0000000000006ab0         db  0x58 ; 'X'
0000000000006ab1         db  0xce ; '.'
0000000000006ab2         db  0xff ; '.'
0000000000006ab3         db  0xff ; '.'
0000000000006ab4         db  0x58 ; 'X'
0000000000006ab5         db  0xce ; '.'
0000000000006ab6         db  0xff ; '.'
0000000000006ab7         db  0xff ; '.'
0000000000006ab8         db  0x58 ; 'X'
0000000000006ab9         db  0xce ; '.'
0000000000006aba         db  0xff ; '.'
0000000000006abb         db  0xff ; '.'
0000000000006abc         db  0x58 ; 'X'
0000000000006abd         db  0xce ; '.'
0000000000006abe         db  0xff ; '.'
0000000000006abf         db  0xff ; '.'
0000000000006ac0         db  0x58 ; 'X'
0000000000006ac1         db  0xce ; '.'
0000000000006ac2         db  0xff ; '.'
0000000000006ac3         db  0xff ; '.'
0000000000006ac4         db  0x58 ; 'X'
0000000000006ac5         db  0xce ; '.'
0000000000006ac6         db  0xff ; '.'
0000000000006ac7         db  0xff ; '.'
0000000000006ac8         db  0x30 ; '0'
0000000000006ac9         db  0xd0 ; '.'
0000000000006aca         db  0xff ; '.'
0000000000006acb         db  0xff ; '.'
0000000000006acc         db  0x18 ; '.'
0000000000006acd         db  0xd0 ; '.'
0000000000006ace         db  0xff ; '.'
0000000000006acf         db  0xff ; '.'
0000000000006ad0         db  0x18 ; '.'
0000000000006ad1         db  0xd0 ; '.'
0000000000006ad2         db  0xff ; '.'
0000000000006ad3         db  0xff ; '.'
0000000000006ad4         db  0x00 ; '.'
0000000000006ad5         db  0xd0 ; '.'
0000000000006ad6         db  0xff ; '.'
0000000000006ad7         db  0xff ; '.'
0000000000006ad8         db  0x18 ; '.'
0000000000006ad9         db  0xd0 ; '.'
0000000000006ada         db  0xff ; '.'
0000000000006adb         db  0xff ; '.'
0000000000006adc         db  0xe8 ; '.'
0000000000006add         db  0xcf ; '.'
0000000000006ade         db  0xff ; '.'
0000000000006adf         db  0xff ; '.'
0000000000006ae0         db  0x18 ; '.'
0000000000006ae1         db  0xd0 ; '.'
0000000000006ae2         db  0xff ; '.'
0000000000006ae3         db  0xff ; '.'
0000000000006ae4         db  0x58 ; 'X'
0000000000006ae5         db  0xcc ; '.'
0000000000006ae6         db  0xff ; '.'
0000000000006ae7         db  0xff ; '.'
0000000000006ae8         db  0x18 ; '.'
0000000000006ae9         db  0xd0 ; '.'
0000000000006aea         db  0xff ; '.'
0000000000006aeb         db  0xff ; '.'
0000000000006aec         db  0x18 ; '.'
0000000000006aed         db  0xd0 ; '.'
0000000000006aee         db  0xff ; '.'
0000000000006aef         db  0xff ; '.'
0000000000006af0         db  0x18 ; '.'
0000000000006af1         db  0xd0 ; '.'
0000000000006af2         db  0xff ; '.'
0000000000006af3         db  0xff ; '.'
0000000000006af4         db  0xe8 ; '.'
0000000000006af5         db  0xcf ; '.'
0000000000006af6         db  0xff ; '.'
0000000000006af7         db  0xff ; '.'
0000000000006af8         db  0xe8 ; '.'
0000000000006af9         db  0xcf ; '.'
0000000000006afa         db  0xff ; '.'
0000000000006afb         db  0xff ; '.'
0000000000006afc         db  0xe8 ; '.'
0000000000006afd         db  0xcf ; '.'
0000000000006afe         db  0xff ; '.'
0000000000006aff         db  0xff ; '.'
0000000000006b00         db  0xe8 ; '.'
0000000000006b01         db  0xcf ; '.'
0000000000006b02         db  0xff ; '.'
0000000000006b03         db  0xff ; '.'
0000000000006b04         db  0xe8 ; '.'
0000000000006b05         db  0xcf ; '.'
0000000000006b06         db  0xff ; '.'
0000000000006b07         db  0xff ; '.'
0000000000006b08         db  0xe8 ; '.'
0000000000006b09         db  0xcf ; '.'
0000000000006b0a         db  0xff ; '.'
0000000000006b0b         db  0xff ; '.'
0000000000006b0c         db  0xe8 ; '.'
0000000000006b0d         db  0xcf ; '.'
0000000000006b0e         db  0xff ; '.'
0000000000006b0f         db  0xff ; '.'
0000000000006b10         db  0xe8 ; '.'
0000000000006b11         db  0xcf ; '.'
0000000000006b12         db  0xff ; '.'
0000000000006b13         db  0xff ; '.'
0000000000006b14         db  0xe8 ; '.'
0000000000006b15         db  0xcf ; '.'
0000000000006b16         db  0xff ; '.'
0000000000006b17         db  0xff ; '.'
0000000000006b18         db  0xe8 ; '.'
0000000000006b19         db  0xcf ; '.'
0000000000006b1a         db  0xff ; '.'
0000000000006b1b         db  0xff ; '.'
0000000000006b1c         db  0xe8 ; '.'
0000000000006b1d         db  0xcf ; '.'
0000000000006b1e         db  0xff ; '.'
0000000000006b1f         db  0xff ; '.'
0000000000006b20         db  0xe8 ; '.'
0000000000006b21         db  0xcf ; '.'
0000000000006b22         db  0xff ; '.'
0000000000006b23         db  0xff ; '.'
0000000000006b24         db  0xe8 ; '.'
0000000000006b25         db  0xcf ; '.'
0000000000006b26         db  0xff ; '.'
0000000000006b27         db  0xff ; '.'
0000000000006b28         db  0xe8 ; '.'
0000000000006b29         db  0xcf ; '.'
0000000000006b2a         db  0xff ; '.'
0000000000006b2b         db  0xff ; '.'
0000000000006b2c         db  0xe8 ; '.'
0000000000006b2d         db  0xcf ; '.'
0000000000006b2e         db  0xff ; '.'
0000000000006b2f         db  0xff ; '.'
0000000000006b30         db  0xe8 ; '.'
0000000000006b31         db  0xcf ; '.'
0000000000006b32         db  0xff ; '.'
0000000000006b33         db  0xff ; '.'
0000000000006b34         db  0x18 ; '.'
0000000000006b35         db  0xd0 ; '.'
0000000000006b36         db  0xff ; '.'
0000000000006b37         db  0xff ; '.'
0000000000006b38         db  0x18 ; '.'
0000000000006b39         db  0xd0 ; '.'
0000000000006b3a         db  0xff ; '.'
0000000000006b3b         db  0xff ; '.'
0000000000006b3c         db  0x18 ; '.'
0000000000006b3d         db  0xd0 ; '.'
0000000000006b3e         db  0xff ; '.'
0000000000006b3f         db  0xff ; '.'
0000000000006b40         db  0x18 ; '.'
0000000000006b41         db  0xd0 ; '.'
0000000000006b42         db  0xff ; '.'
0000000000006b43         db  0xff ; '.'
0000000000006b44         db  0x28 ; '('
0000000000006b45         db  0xcc ; '.'
0000000000006b46         db  0xff ; '.'
0000000000006b47         db  0xff ; '.'
0000000000006b48         db  0x58 ; 'X'
0000000000006b49         db  0xce ; '.'
0000000000006b4a         db  0xff ; '.'
0000000000006b4b         db  0xff ; '.'
0000000000006b4c         db  0xe8 ; '.'
0000000000006b4d         db  0xcf ; '.'
0000000000006b4e         db  0xff ; '.'
0000000000006b4f         db  0xff ; '.'
0000000000006b50         db  0xe8 ; '.'
0000000000006b51         db  0xcf ; '.'
0000000000006b52         db  0xff ; '.'
0000000000006b53         db  0xff ; '.'
0000000000006b54         db  0xe8 ; '.'
0000000000006b55         db  0xcf ; '.'
0000000000006b56         db  0xff ; '.'
0000000000006b57         db  0xff ; '.'
0000000000006b58         db  0xe8 ; '.'
0000000000006b59         db  0xcf ; '.'
0000000000006b5a         db  0xff ; '.'
0000000000006b5b         db  0xff ; '.'
0000000000006b5c         db  0xe8 ; '.'
0000000000006b5d         db  0xcf ; '.'
0000000000006b5e         db  0xff ; '.'
0000000000006b5f         db  0xff ; '.'
0000000000006b60         db  0xe8 ; '.'
0000000000006b61         db  0xcf ; '.'
0000000000006b62         db  0xff ; '.'
0000000000006b63         db  0xff ; '.'
0000000000006b64         db  0xe8 ; '.'
0000000000006b65         db  0xcf ; '.'
0000000000006b66         db  0xff ; '.'
0000000000006b67         db  0xff ; '.'
0000000000006b68         db  0xe8 ; '.'
0000000000006b69         db  0xcf ; '.'
0000000000006b6a         db  0xff ; '.'
0000000000006b6b         db  0xff ; '.'
0000000000006b6c         db  0xe8 ; '.'
0000000000006b6d         db  0xcf ; '.'
0000000000006b6e         db  0xff ; '.'
0000000000006b6f         db  0xff ; '.'
0000000000006b70         db  0xe8 ; '.'
0000000000006b71         db  0xcf ; '.'
0000000000006b72         db  0xff ; '.'
0000000000006b73         db  0xff ; '.'
0000000000006b74         db  0xe8 ; '.'
0000000000006b75         db  0xcf ; '.'
0000000000006b76         db  0xff ; '.'
0000000000006b77         db  0xff ; '.'
0000000000006b78         db  0xe8 ; '.'
0000000000006b79         db  0xcf ; '.'
0000000000006b7a         db  0xff ; '.'
0000000000006b7b         db  0xff ; '.'
0000000000006b7c         db  0xe8 ; '.'
0000000000006b7d         db  0xcf ; '.'
0000000000006b7e         db  0xff ; '.'
0000000000006b7f         db  0xff ; '.'
0000000000006b80         db  0xe8 ; '.'
0000000000006b81         db  0xcf ; '.'
0000000000006b82         db  0xff ; '.'
0000000000006b83         db  0xff ; '.'
0000000000006b84         db  0xe8 ; '.'
0000000000006b85         db  0xcf ; '.'
0000000000006b86         db  0xff ; '.'
0000000000006b87         db  0xff ; '.'
0000000000006b88         db  0xe8 ; '.'
0000000000006b89         db  0xcf ; '.'
0000000000006b8a         db  0xff ; '.'
0000000000006b8b         db  0xff ; '.'
0000000000006b8c         db  0xe8 ; '.'
0000000000006b8d         db  0xcf ; '.'
0000000000006b8e         db  0xff ; '.'
0000000000006b8f         db  0xff ; '.'
0000000000006b90         db  0xe8 ; '.'
0000000000006b91         db  0xcf ; '.'
0000000000006b92         db  0xff ; '.'
0000000000006b93         db  0xff ; '.'
0000000000006b94         db  0xe8 ; '.'
0000000000006b95         db  0xcf ; '.'
0000000000006b96         db  0xff ; '.'
0000000000006b97         db  0xff ; '.'
0000000000006b98         db  0xe8 ; '.'
0000000000006b99         db  0xcf ; '.'
0000000000006b9a         db  0xff ; '.'
0000000000006b9b         db  0xff ; '.'
0000000000006b9c         db  0xe8 ; '.'
0000000000006b9d         db  0xcf ; '.'
0000000000006b9e         db  0xff ; '.'
0000000000006b9f         db  0xff ; '.'
0000000000006ba0         db  0xe8 ; '.'
0000000000006ba1         db  0xcf ; '.'
0000000000006ba2         db  0xff ; '.'
0000000000006ba3         db  0xff ; '.'
0000000000006ba4         db  0xe8 ; '.'
0000000000006ba5         db  0xcf ; '.'
0000000000006ba6         db  0xff ; '.'
0000000000006ba7         db  0xff ; '.'
0000000000006ba8         db  0xe8 ; '.'
0000000000006ba9         db  0xcf ; '.'
0000000000006baa         db  0xff ; '.'
0000000000006bab         db  0xff ; '.'
0000000000006bac         db  0xe8 ; '.'
0000000000006bad         db  0xcf ; '.'
0000000000006bae         db  0xff ; '.'
0000000000006baf         db  0xff ; '.'
0000000000006bb0         db  0xe8 ; '.'
0000000000006bb1         db  0xcf ; '.'
0000000000006bb2         db  0xff ; '.'
0000000000006bb3         db  0xff ; '.'
0000000000006bb4         db  0x18 ; '.'
0000000000006bb5         db  0xd0 ; '.'
0000000000006bb6         db  0xff ; '.'
0000000000006bb7         db  0xff ; '.'
0000000000006bb8         db  0xe8 ; '.'
0000000000006bb9         db  0xce ; '.'
0000000000006bba         db  0xff ; '.'
0000000000006bbb         db  0xff ; '.'
0000000000006bbc         db  0xe8 ; '.'
0000000000006bbd         db  0xcf ; '.'
0000000000006bbe         db  0xff ; '.'
0000000000006bbf         db  0xff ; '.'
0000000000006bc0         db  0x18 ; '.'
0000000000006bc1         db  0xd0 ; '.'
0000000000006bc2         db  0xff ; '.'
0000000000006bc3         db  0xff ; '.'
0000000000006bc4         db  0xe8 ; '.'
0000000000006bc5         db  0xcf ; '.'
0000000000006bc6         db  0xff ; '.'
0000000000006bc7         db  0xff ; '.'
0000000000006bc8         db  0x18 ; '.'
0000000000006bc9         db  0xd0 ; '.'
0000000000006bca         db  0xff ; '.'
0000000000006bcb         db  0xff ; '.'
0000000000006bcc         db  0xe8 ; '.'
0000000000006bcd         db  0xcf ; '.'
0000000000006bce         db  0xff ; '.'
0000000000006bcf         db  0xff ; '.'
0000000000006bd0         db  0xe8 ; '.'
0000000000006bd1         db  0xcf ; '.'
0000000000006bd2         db  0xff ; '.'
0000000000006bd3         db  0xff ; '.'
0000000000006bd4         db  0xe8 ; '.'
0000000000006bd5         db  0xcf ; '.'
0000000000006bd6         db  0xff ; '.'
0000000000006bd7         db  0xff ; '.'
0000000000006bd8         db  0xe8 ; '.'
0000000000006bd9         db  0xcf ; '.'
0000000000006bda         db  0xff ; '.'
0000000000006bdb         db  0xff ; '.'
0000000000006bdc         db  0xe8 ; '.'
0000000000006bdd         db  0xcf ; '.'
0000000000006bde         db  0xff ; '.'
0000000000006bdf         db  0xff ; '.'
0000000000006be0         db  0xe8 ; '.'
0000000000006be1         db  0xcf ; '.'
0000000000006be2         db  0xff ; '.'
0000000000006be3         db  0xff ; '.'
0000000000006be4         db  0xe8 ; '.'
0000000000006be5         db  0xcf ; '.'
0000000000006be6         db  0xff ; '.'
0000000000006be7         db  0xff ; '.'
0000000000006be8         db  0xe8 ; '.'
0000000000006be9         db  0xcf ; '.'
0000000000006bea         db  0xff ; '.'
0000000000006beb         db  0xff ; '.'
0000000000006bec         db  0xe8 ; '.'
0000000000006bed         db  0xcf ; '.'
0000000000006bee         db  0xff ; '.'
0000000000006bef         db  0xff ; '.'
0000000000006bf0         db  0xe8 ; '.'
0000000000006bf1         db  0xcf ; '.'
0000000000006bf2         db  0xff ; '.'
0000000000006bf3         db  0xff ; '.'
0000000000006bf4         db  0xe8 ; '.'
0000000000006bf5         db  0xcf ; '.'
0000000000006bf6         db  0xff ; '.'
0000000000006bf7         db  0xff ; '.'
0000000000006bf8         db  0xe8 ; '.'
0000000000006bf9         db  0xcf ; '.'
0000000000006bfa         db  0xff ; '.'
0000000000006bfb         db  0xff ; '.'
0000000000006bfc         db  0xe8 ; '.'
0000000000006bfd         db  0xcf ; '.'
0000000000006bfe         db  0xff ; '.'
0000000000006bff         db  0xff ; '.'
0000000000006c00         db  0xe8 ; '.'
0000000000006c01         db  0xcf ; '.'
0000000000006c02         db  0xff ; '.'
0000000000006c03         db  0xff ; '.'
0000000000006c04         db  0xe8 ; '.'
0000000000006c05         db  0xcf ; '.'
0000000000006c06         db  0xff ; '.'
0000000000006c07         db  0xff ; '.'
0000000000006c08         db  0xe8 ; '.'
0000000000006c09         db  0xcf ; '.'
0000000000006c0a         db  0xff ; '.'
0000000000006c0b         db  0xff ; '.'
0000000000006c0c         db  0xe8 ; '.'
0000000000006c0d         db  0xcf ; '.'
0000000000006c0e         db  0xff ; '.'
0000000000006c0f         db  0xff ; '.'
0000000000006c10         db  0xe8 ; '.'
0000000000006c11         db  0xcf ; '.'
0000000000006c12         db  0xff ; '.'
0000000000006c13         db  0xff ; '.'
0000000000006c14         db  0xe8 ; '.'
0000000000006c15         db  0xcf ; '.'
0000000000006c16         db  0xff ; '.'
0000000000006c17         db  0xff ; '.'
0000000000006c18         db  0xe8 ; '.'
0000000000006c19         db  0xcf ; '.'
0000000000006c1a         db  0xff ; '.'
0000000000006c1b         db  0xff ; '.'
0000000000006c1c         db  0xe8 ; '.'
0000000000006c1d         db  0xcf ; '.'
0000000000006c1e         db  0xff ; '.'
0000000000006c1f         db  0xff ; '.'
0000000000006c20         db  0xe8 ; '.'
0000000000006c21         db  0xcf ; '.'
0000000000006c22         db  0xff ; '.'
0000000000006c23         db  0xff ; '.'
0000000000006c24         db  0xe8 ; '.'
0000000000006c25         db  0xcf ; '.'
0000000000006c26         db  0xff ; '.'
0000000000006c27         db  0xff ; '.'
0000000000006c28         db  0xe8 ; '.'
0000000000006c29         db  0xcf ; '.'
0000000000006c2a         db  0xff ; '.'
0000000000006c2b         db  0xff ; '.'
0000000000006c2c         db  0xe8 ; '.'
0000000000006c2d         db  0xcf ; '.'
0000000000006c2e         db  0xff ; '.'
0000000000006c2f         db  0xff ; '.'
0000000000006c30         db  0xe8 ; '.'
0000000000006c31         db  0xcf ; '.'
0000000000006c32         db  0xff ; '.'
0000000000006c33         db  0xff ; '.'
0000000000006c34         db  0x58 ; 'X'
0000000000006c35         db  0xcb ; '.'
0000000000006c36         db  0xff ; '.'
0000000000006c37         db  0xff ; '.'
0000000000006c38         db  0x18 ; '.'
0000000000006c39         db  0xd0 ; '.'
0000000000006c3a         db  0xff ; '.'
0000000000006c3b         db  0xff ; '.'
0000000000006c3c         db  0x58 ; 'X'
0000000000006c3d         db  0xcb ; '.'
0000000000006c3e         db  0xff ; '.'
0000000000006c3f         db  0xff ; '.'
0000000000006c40         db  0x00 ; '.'
0000000000006c41         db  0xd0 ; '.'
0000000000006c42         db  0xff ; '.'
0000000000006c43         db  0xff ; '.'
0000000000006c44         db  0x00 ; '.'
0000000000006c45         db  0x00 ; '.'
0000000000006c46         db  0x00 ; '.'
0000000000006c47         db  0x00 ; '.'
0000000000006c48         db  0x00 ; '.'
0000000000006c49         db  0x00 ; '.'
0000000000006c4a         db  0x00 ; '.'
0000000000006c4b         db  0x00 ; '.'
0000000000006c4c         db  0x00 ; '.'
0000000000006c4d         db  0x00 ; '.'
0000000000006c4e         db  0x00 ; '.'
0000000000006c4f         db  0x00 ; '.'
0000000000006c50         db  0x00 ; '.'
0000000000006c51         db  0x00 ; '.'
0000000000006c52         db  0x00 ; '.'
0000000000006c53         db  0x00 ; '.'
0000000000006c54         db  0x00 ; '.'
0000000000006c55         db  0x00 ; '.'
0000000000006c56         db  0x00 ; '.'
0000000000006c57         db  0x00 ; '.'
0000000000006c58         db  0x00 ; '.'
0000000000006c59         db  0x00 ; '.'
0000000000006c5a         db  0x00 ; '.'
0000000000006c5b         db  0x00 ; '.'
0000000000006c5c         db  0x00 ; '.'
0000000000006c5d         db  0x00 ; '.'
0000000000006c5e         db  0x00 ; '.'
0000000000006c5f         db  0x00 ; '.'
                     quoting_style_vals:
0000000000006c60         db  0x00 ; '.'
0000000000006c61         db  0x00 ; '.'
0000000000006c62         db  0x00 ; '.'
0000000000006c63         db  0x00 ; '.'
0000000000006c64         db  0x01 ; '.'
0000000000006c65         db  0x00 ; '.'
0000000000006c66         db  0x00 ; '.'
0000000000006c67         db  0x00 ; '.'
0000000000006c68         db  0x02 ; '.'
0000000000006c69         db  0x00 ; '.'
0000000000006c6a         db  0x00 ; '.'
0000000000006c6b         db  0x00 ; '.'
0000000000006c6c         db  0x03 ; '.'
0000000000006c6d         db  0x00 ; '.'
0000000000006c6e         db  0x00 ; '.'
0000000000006c6f         db  0x00 ; '.'
0000000000006c70         db  0x04 ; '.'
0000000000006c71         db  0x00 ; '.'
0000000000006c72         db  0x00 ; '.'
0000000000006c73         db  0x00 ; '.'
0000000000006c74         db  0x05 ; '.'
0000000000006c75         db  0x00 ; '.'
0000000000006c76         db  0x00 ; '.'
0000000000006c77         db  0x00 ; '.'
0000000000006c78         db  0x06 ; '.'
0000000000006c79         db  0x00 ; '.'
0000000000006c7a         db  0x00 ; '.'
0000000000006c7b         db  0x00 ; '.'
0000000000006c7c         db  0x07 ; '.'
0000000000006c7d         db  0x00 ; '.'
0000000000006c7e         db  0x00 ; '.'
0000000000006c7f         db  0x00 ; '.'
0000000000006c80         db  0x08 ; '.'
0000000000006c81         db  0x00 ; '.'
0000000000006c82         db  0x00 ; '.'
0000000000006c83         db  0x00 ; '.'
0000000000006c84         db  0x09 ; '.'
0000000000006c85         db  0x00 ; '.'
0000000000006c86         db  0x00 ; '.'
0000000000006c87         db  0x00 ; '.'
                     aSSSn:
0000000000006c88         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
0000000000006c94         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
0000000000006c9b         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
0000000000006c9c         db  0x43 ; 'C'
0000000000006c9d         db  0x29 ; ')'
0000000000006c9e         db  0x00 ; '.'
                     aWrittenBySn:
0000000000006c9f         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
0000000000006caf         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
0000000000006cc6         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
0000000000006ce2         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
0000000000006cf7         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
0000000000006d0d         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
0000000000006d21         align      8
                     aNlicenseGplv3G:
0000000000006d28         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
0000000000006df4         align      8
                     aWrittenBySSSna:
0000000000006df8         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_6e18:        // aWrittenBySSSns
0000000000006e18         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
0000000000006e3c         align      64
                     aWrittenBySSSns_6e40:        // aWrittenBySSSns
0000000000006e40         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_6e68:        // aWrittenBySSSns
0000000000006e68         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
0000000000006e94         align      8
                     aWrittenBySSSns_6e98:        // aWrittenBySSSns
0000000000006e98         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
0000000000006ec8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
0000000000006efc         align      256
                     aWrittenBySSSns_6f00:        // aWrittenBySSSns
0000000000006f00         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
0000000000006f3c         align      64
                     aGeneralHelpUsi:
0000000000006f40         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
0000000000006f81         align      4
                     switch_table_6f84:        // switch_table
0000000000006f84         dd         version_etc_arn.loc_50d6-switch_table_6f84, version_etc_arn.loc_5168-switch_table_6f84, version_etc_arn.loc_51a8-switch_table_6f84, version_etc_arn.loc_51f0-switch_table_6f84 ; switch table used at 0x5054 containing 10 entries, DATA XREF=version_etc_arn+150
0000000000006f94         dd         version_etc_arn.loc_5240-switch_table_6f84, version_etc_arn.loc_5298-switch_table_6f84, version_etc_arn.loc_52c8-switch_table_6f84, version_etc_arn.loc_5330-switch_table_6f84
0000000000006fa4         dd         version_etc_arn.loc_5060-switch_table_6f84, version_etc_arn.loc_5110-switch_table_6f84
0000000000006fac         align      64
                     version_etc_copyright:
0000000000006fc0         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
0000000000006fef         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
                     aCoreutils831li:
0000000000007000         db         "../coreutils-8.31/lib/xstrtol.c", 0        ; DATA XREF=xstrtoumax+908
                     a0StrtolbaseStr:
0000000000007020         db         "0 <= strtol_base && strtol_base <= 36", 0  ; DATA XREF=xstrtoumax+915
0000000000007046         align      8
                     switch_table_7048:        // switch_table
0000000000007048         dd         xstrtoumax.loc_5b86-switch_table_7048, 2 dup (xstrtoumax.loc_5a7c-switch_table_7048), xstrtoumax.loc_5b63-switch_table_7048, xstrtoumax.loc_5a7c-switch_table_7048 ; switch table used at 0x5a36 containing 54 entries, DATA XREF=xstrtoumax+452
000000000000705c         dd         xstrtoumax.loc_5b9c-switch_table_7048, 3 dup (xstrtoumax.loc_5a7c-switch_table_7048), xstrtoumax.loc_5b1f-switch_table_7048, xstrtoumax.loc_5a7c-switch_table_7048
0000000000007074         dd         xstrtoumax.loc_5a38-switch_table_7048, 2 dup (xstrtoumax.loc_5a7c-switch_table_7048), xstrtoumax.loc_5b40-switch_table_7048, 3 dup (xstrtoumax.loc_5a7c-switch_table_7048)
0000000000007090         dd         xstrtoumax.loc_5aff-switch_table_7048, 4 dup (xstrtoumax.loc_5a7c-switch_table_7048), xstrtoumax.loc_5ada-switch_table_7048, xstrtoumax.loc_5ab4-switch_table_7048
00000000000070ac         dd         7 dup (xstrtoumax.loc_5a7c-switch_table_7048), xstrtoumax.loc_5a9d-switch_table_7048, xstrtoumax.loc_5a60-switch_table_7048, 3 dup (xstrtoumax.loc_5a7c-switch_table_7048)
00000000000070dc         dd         xstrtoumax.loc_5b9c-switch_table_7048, 3 dup (xstrtoumax.loc_5a7c-switch_table_7048), xstrtoumax.loc_5b1f-switch_table_7048, xstrtoumax.loc_5a7c-switch_table_7048
00000000000070f4         dd         xstrtoumax.loc_5a38-switch_table_7048, 6 dup (xstrtoumax.loc_5a7c-switch_table_7048), xstrtoumax.loc_5aff-switch_table_7048, 2 dup (xstrtoumax.loc_5a7c-switch_table_7048)
000000000000711c         dd         xstrtoumax.loc_5a87-switch_table_7048
                     __PRETTY_FUNCTION__.4162:
0000000000007120         db         "xstrtoumax", 0                             ; DATA XREF=xstrtoumax+901
                     aInvalidArgumen:
000000000000712b         db         "invalid argument %s for %s", 0             ; DATA XREF=argmatch_invalid+96
                     aAmbiguousArgum:
0000000000007146         db         "ambiguous argument %s for %s", 0           ; DATA XREF=argmatch_invalid+21
                     aValidArguments:
0000000000007163         db         "Valid arguments are:", 0                   ; DATA XREF=argmatch_valid+18
                     aNS:
0000000000007178         db         "\n  - %s", 0                               ; DATA XREF=argmatch_valid+102
0000000000007180         db  0x2c ; ','                                         ; DATA XREF=argmatch_valid+181
0000000000007181         db  0x20 ; ' '                                         ; DATA XREF=sysv_sum_file+506, bsd_sum_file+352
0000000000007182         db  0x25 ; '%'                                         ; DATA XREF=main+402, sysv_sum_file+393, sysv_sum_file+480, bsd_sum_file+436, bsd_sum_file+489, close_stdout+143, xalloc_die+29
0000000000007183         db  0x73 ; 's'
0000000000007184         db  0x00 ; '.'
0000000000007185         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
0000000000007186         db  0x00 ; '.'
                     aPosix:
0000000000007187         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aAscii:
000000000000718d         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
0000000000007193         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0x7194; 0x7448[ (692 bytes)
        ; File offset : [29076; 29768[ (692 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000007194         db  0x01 ; '.'
0000000000007195         db  0x1b ; '.'
0000000000007196         db  0x03 ; '.'
0000000000007197         db  0x3b ; ';'
0000000000007198         db  0xb0 ; '.'
0000000000007199         db  0x02 ; '.'
000000000000719a         db  0x00 ; '.'
000000000000719b         db  0x00 ; '.'
000000000000719c         db  0x55 ; 'U'
000000000000719d         db  0x00 ; '.'
000000000000719e         db  0x00 ; '.'
000000000000719f         db  0x00 ; '.'
00000000000071a0         db  0x1c ; '.'
00000000000071a1         db  0xa4 ; '.'
00000000000071a2         db  0xff ; '.'
00000000000071a3         db  0xff ; '.'
00000000000071a4         db  0xfc ; '.'
00000000000071a5         db  0x02 ; '.'
00000000000071a6         db  0x00 ; '.'
00000000000071a7         db  0x00 ; '.'
00000000000071a8         db  0x9c ; '.'
00000000000071a9         db  0xa7 ; '.'
00000000000071aa         db  0xff ; '.'
00000000000071ab         db  0xff ; '.'
00000000000071ac         db  0x24 ; '$'
00000000000071ad         db  0x03 ; '.'
00000000000071ae         db  0x00 ; '.'
00000000000071af         db  0x00 ; '.'
00000000000071b0         db  0xac ; '.'
00000000000071b1         db  0xa7 ; '.'
00000000000071b2         db  0xff ; '.'
00000000000071b3         db  0xff ; '.'
00000000000071b4         db  0x08 ; '.'
00000000000071b5         db  0x04 ; '.'
00000000000071b6         db  0x00 ; '.'
00000000000071b7         db  0x00 ; '.'
00000000000071b8         db  0x9c ; '.'
00000000000071b9         db  0xa9 ; '.'
00000000000071ba         db  0xff ; '.'
00000000000071bb         db  0xff ; '.'
00000000000071bc         db  0xcc ; '.'
00000000000071bd         db  0x02 ; '.'
00000000000071be         db  0x00 ; '.'
00000000000071bf         db  0x00 ; '.'
00000000000071c0         db  0xac ; '.'
00000000000071c1         db  0xaa ; '.'
00000000000071c2         db  0xff ; '.'
00000000000071c3         db  0xff ; '.'
00000000000071c4         db  0x3c ; '<'
00000000000071c5         db  0x03 ; '.'
00000000000071c6         db  0x00 ; '.'
00000000000071c7         db  0x00 ; '.'
00000000000071c8         db  0xdc ; '.'
00000000000071c9         db  0xac ; '.'
00000000000071ca         db  0xff ; '.'
00000000000071cb         db  0xff ; '.'
00000000000071cc         db  0x8c ; '.'
00000000000071cd         db  0x03 ; '.'
00000000000071ce         db  0x00 ; '.'
00000000000071cf         db  0x00 ; '.'
00000000000071d0         db  0x1c ; '.'
00000000000071d1         db  0xaf ; '.'
00000000000071d2         db  0xff ; '.'
00000000000071d3         db  0xff ; '.'
00000000000071d4         db  0xdc ; '.'
00000000000071d5         db  0x03 ; '.'
00000000000071d6         db  0x00 ; '.'
00000000000071d7         db  0x00 ; '.'
00000000000071d8         db  0xac ; '.'
00000000000071d9         db  0xb2 ; '.'
00000000000071da         db  0xff ; '.'
00000000000071db         db  0xff ; '.'
00000000000071dc         db  0x5c ; '\'
00000000000071dd         db  0x04 ; '.'
00000000000071de         db  0x00 ; '.'
00000000000071df         db  0x00 ; '.'
00000000000071e0         db  0xbc ; '.'
00000000000071e1         db  0xb2 ; '.'
00000000000071e2         db  0xff ; '.'
00000000000071e3         db  0xff ; '.'
00000000000071e4         db  0x70 ; 'p'
00000000000071e5         db  0x04 ; '.'
00000000000071e6         db  0x00 ; '.'
00000000000071e7         db  0x00 ; '.'
00000000000071e8         db  0xcc ; '.'
00000000000071e9         db  0xb2 ; '.'
00000000000071ea         db  0xff ; '.'
00000000000071eb         db  0xff ; '.'
00000000000071ec         db  0x84 ; '.'
00000000000071ed         db  0x04 ; '.'
00000000000071ee         db  0x00 ; '.'
00000000000071ef         db  0x00 ; '.'
00000000000071f0         db  0x7c ; '|'
00000000000071f1         db  0xb3 ; '.'
00000000000071f2         db  0xff ; '.'
00000000000071f3         db  0xff ; '.'
00000000000071f4         db  0xb4 ; '.'
00000000000071f5         db  0x04 ; '.'
00000000000071f6         db  0x00 ; '.'
00000000000071f7         db  0x00 ; '.'
00000000000071f8         db  0x8c ; '.'
00000000000071f9         db  0xb3 ; '.'
00000000000071fa         db  0xff ; '.'
00000000000071fb         db  0xff ; '.'
00000000000071fc         db  0xc8 ; '.'
00000000000071fd         db  0x04 ; '.'
00000000000071fe         db  0x00 ; '.'
00000000000071ff         db  0x00 ; '.'
0000000000007200         db  0xbc ; '.'
0000000000007201         db  0xb3 ; '.'
0000000000007202         db  0xff ; '.'
0000000000007203         db  0xff ; '.'
0000000000007204         db  0xe4 ; '.'
0000000000007205         db  0x04 ; '.'
0000000000007206         db  0x00 ; '.'
0000000000007207         db  0x00 ; '.'
0000000000007208         db  0x8c ; '.'
0000000000007209         db  0xb4 ; '.'
000000000000720a         db  0xff ; '.'
000000000000720b         db  0xff ; '.'
000000000000720c         db  0xf8 ; '.'
000000000000720d         db  0x04 ; '.'
000000000000720e         db  0x00 ; '.'
000000000000720f         db  0x00 ; '.'
0000000000007210         db  0x9c ; '.'
0000000000007211         db  0xbe ; '.'
0000000000007212         db  0xff ; '.'
0000000000007213         db  0xff ; '.'
0000000000007214         db  0xa0 ; '.'
0000000000007215         db  0x05 ; '.'
0000000000007216         db  0x00 ; '.'
0000000000007217         db  0x00 ; '.'
0000000000007218         db  0x8c ; '.'
0000000000007219         db  0xc0 ; '.'
000000000000721a         db  0xff ; '.'
000000000000721b         db  0xff ; '.'
000000000000721c         db  0xdc ; '.'
000000000000721d         db  0x05 ; '.'
000000000000721e         db  0x00 ; '.'
000000000000721f         db  0x00 ; '.'
0000000000007220         db  0x2c ; ','
0000000000007221         db  0xc1 ; '.'
0000000000007222         db  0xff ; '.'
0000000000007223         db  0xff ; '.'
0000000000007224         db  0xfc ; '.'
0000000000007225         db  0x05 ; '.'
0000000000007226         db  0x00 ; '.'
0000000000007227         db  0x00 ; '.'
0000000000007228         db  0x1c ; '.'
0000000000007229         db  0xc2 ; '.'
000000000000722a         db  0xff ; '.'
000000000000722b         db  0xff ; '.'
000000000000722c         db  0x40 ; '@'
000000000000722d         db  0x06 ; '.'
000000000000722e         db  0x00 ; '.'
000000000000722f         db  0x00 ; '.'
0000000000007230         db  0x5c ; '\'
0000000000007231         db  0xd4 ; '.'
0000000000007232         db  0xff ; '.'
0000000000007233         db  0xff ; '.'
0000000000007234         db  0xb8 ; '.'
0000000000007235         db  0x06 ; '.'
0000000000007236         db  0x00 ; '.'
0000000000007237         db  0x00 ; '.'
0000000000007238         db  0x0c ; '.'
0000000000007239         db  0xd6 ; '.'
000000000000723a         db  0xff ; '.'
000000000000723b         db  0xff ; '.'
000000000000723c         db  0x24 ; '$'
000000000000723d         db  0x07 ; '.'
000000000000723e         db  0x00 ; '.'
000000000000723f         db  0x00 ; '.'
0000000000007240         db  0x4c ; 'L'
0000000000007241         db  0xd6 ; '.'
0000000000007242         db  0xff ; '.'
0000000000007243         db  0xff ; '.'
0000000000007244         db  0x50 ; 'P'
0000000000007245         db  0x07 ; '.'
0000000000007246         db  0x00 ; '.'
0000000000007247         db  0x00 ; '.'
0000000000007248         db  0x6c ; 'l'
0000000000007249         db  0xd6 ; '.'
000000000000724a         db  0xff ; '.'
000000000000724b         db  0xff ; '.'
000000000000724c         db  0x64 ; 'd'
000000000000724d         db  0x07 ; '.'
000000000000724e         db  0x00 ; '.'
000000000000724f         db  0x00 ; '.'
0000000000007250         db  0x8c ; '.'
0000000000007251         db  0xd6 ; '.'
0000000000007252         db  0xff ; '.'
0000000000007253         db  0xff ; '.'
0000000000007254         db  0x78 ; 'x'
0000000000007255         db  0x07 ; '.'
0000000000007256         db  0x00 ; '.'
0000000000007257         db  0x00 ; '.'
0000000000007258         db  0xcc ; '.'
0000000000007259         db  0xd6 ; '.'
000000000000725a         db  0xff ; '.'
000000000000725b         db  0xff ; '.'
000000000000725c         db  0x8c ; '.'
000000000000725d         db  0x07 ; '.'
000000000000725e         db  0x00 ; '.'
000000000000725f         db  0x00 ; '.'
0000000000007260         db  0xec ; '.'
0000000000007261         db  0xd6 ; '.'
0000000000007262         db  0xff ; '.'
0000000000007263         db  0xff ; '.'
0000000000007264         db  0xa0 ; '.'
0000000000007265         db  0x07 ; '.'
0000000000007266         db  0x00 ; '.'
0000000000007267         db  0x00 ; '.'
0000000000007268         db  0x1c ; '.'
0000000000007269         db  0xd7 ; '.'
000000000000726a         db  0xff ; '.'
000000000000726b         db  0xff ; '.'
000000000000726c         db  0xb4 ; '.'
000000000000726d         db  0x07 ; '.'
000000000000726e         db  0x00 ; '.'
000000000000726f         db  0x00 ; '.'
0000000000007270         db  0x9c ; '.'
0000000000007271         db  0xd7 ; '.'
0000000000007272         db  0xff ; '.'
0000000000007273         db  0xff ; '.'
0000000000007274         db  0x08 ; '.'
0000000000007275         db  0x08 ; '.'
0000000000007276         db  0x00 ; '.'
0000000000007277         db  0x00 ; '.'
0000000000007278         db  0x8c ; '.'
0000000000007279         db  0xd8 ; '.'
000000000000727a         db  0xff ; '.'
000000000000727b         db  0xff ; '.'
000000000000727c         db  0x74 ; 't'
000000000000727d         db  0x08 ; '.'
000000000000727e         db  0x00 ; '.'
000000000000727f         db  0x00 ; '.'
0000000000007280         db  0x9c ; '.'
0000000000007281         db  0xd8 ; '.'
0000000000007282         db  0xff ; '.'
0000000000007283         db  0xff ; '.'
0000000000007284         db  0x88 ; '.'
0000000000007285         db  0x08 ; '.'
0000000000007286         db  0x00 ; '.'
0000000000007287         db  0x00 ; '.'
0000000000007288         db  0x3c ; '<'
0000000000007289         db  0xd9 ; '.'
000000000000728a         db  0xff ; '.'
000000000000728b         db  0xff ; '.'
000000000000728c         db  0xb4 ; '.'
000000000000728d         db  0x08 ; '.'
000000000000728e         db  0x00 ; '.'
000000000000728f         db  0x00 ; '.'
0000000000007290         db  0x5c ; '\'
0000000000007291         db  0xd9 ; '.'
0000000000007292         db  0xff ; '.'
0000000000007293         db  0xff ; '.'
0000000000007294         db  0xc8 ; '.'
0000000000007295         db  0x08 ; '.'
0000000000007296         db  0x00 ; '.'
0000000000007297         db  0x00 ; '.'
0000000000007298         db  0x6c ; 'l'
0000000000007299         db  0xd9 ; '.'
000000000000729a         db  0xff ; '.'
000000000000729b         db  0xff ; '.'
000000000000729c         db  0xdc ; '.'
000000000000729d         db  0x08 ; '.'
000000000000729e         db  0x00 ; '.'
000000000000729f         db  0x00 ; '.'
00000000000072a0         db  0x8c ; '.'
00000000000072a1         db  0xd9 ; '.'
00000000000072a2         db  0xff ; '.'
00000000000072a3         db  0xff ; '.'
00000000000072a4         db  0xf0 ; '.'
00000000000072a5         db  0x08 ; '.'
00000000000072a6         db  0x00 ; '.'
00000000000072a7         db  0x00 ; '.'
00000000000072a8         db  0xac ; '.'
00000000000072a9         db  0xd9 ; '.'
00000000000072aa         db  0xff ; '.'
00000000000072ab         db  0xff ; '.'
00000000000072ac         db  0x04 ; '.'
00000000000072ad         db  0x09 ; '.'
00000000000072ae         db  0x00 ; '.'
00000000000072af         db  0x00 ; '.'
00000000000072b0         db  0x3c ; '<'
00000000000072b1         db  0xda ; '.'
00000000000072b2         db  0xff ; '.'
00000000000072b3         db  0xff ; '.'
00000000000072b4         db  0x20 ; ' '
00000000000072b5         db  0x09 ; '.'
00000000000072b6         db  0x00 ; '.'
00000000000072b7         db  0x00 ; '.'
00000000000072b8         db  0xcc ; '.'
00000000000072b9         db  0xda ; '.'
00000000000072ba         db  0xff ; '.'
00000000000072bb         db  0xff ; '.'
00000000000072bc         db  0x3c ; '<'
00000000000072bd         db  0x09 ; '.'
00000000000072be         db  0x00 ; '.'
00000000000072bf         db  0x00 ; '.'
00000000000072c0         db  0xdc ; '.'
00000000000072c1         db  0xda ; '.'
00000000000072c2         db  0xff ; '.'
00000000000072c3         db  0xff ; '.'
00000000000072c4         db  0x50 ; 'P'
00000000000072c5         db  0x09 ; '.'
00000000000072c6         db  0x00 ; '.'
00000000000072c7         db  0x00 ; '.'
00000000000072c8         db  0xec ; '.'
00000000000072c9         db  0xda ; '.'
00000000000072ca         db  0xff ; '.'
00000000000072cb         db  0xff ; '.'
00000000000072cc         db  0x64 ; 'd'
00000000000072cd         db  0x09 ; '.'
00000000000072ce         db  0x00 ; '.'
00000000000072cf         db  0x00 ; '.'
00000000000072d0         db  0x8c ; '.'
00000000000072d1         db  0xdb ; '.'
00000000000072d2         db  0xff ; '.'
00000000000072d3         db  0xff ; '.'
00000000000072d4         db  0x80 ; '.'
00000000000072d5         db  0x09 ; '.'
00000000000072d6         db  0x00 ; '.'
00000000000072d7         db  0x00 ; '.'
00000000000072d8         db  0x9c ; '.'
00000000000072d9         db  0xdb ; '.'
00000000000072da         db  0xff ; '.'
00000000000072db         db  0xff ; '.'
00000000000072dc         db  0x94 ; '.'
00000000000072dd         db  0x09 ; '.'
00000000000072de         db  0x00 ; '.'
00000000000072df         db  0x00 ; '.'
00000000000072e0         db  0xbc ; '.'
00000000000072e1         db  0xdb ; '.'
00000000000072e2         db  0xff ; '.'
00000000000072e3         db  0xff ; '.'
00000000000072e4         db  0xa8 ; '.'
00000000000072e5         db  0x09 ; '.'
00000000000072e6         db  0x00 ; '.'
00000000000072e7         db  0x00 ; '.'
00000000000072e8         db  0xcc ; '.'
00000000000072e9         db  0xdb ; '.'
00000000000072ea         db  0xff ; '.'
00000000000072eb         db  0xff ; '.'
00000000000072ec         db  0xbc ; '.'
00000000000072ed         db  0x09 ; '.'
00000000000072ee         db  0x00 ; '.'
00000000000072ef         db  0x00 ; '.'
00000000000072f0         db  0x5c ; '\'
00000000000072f1         db  0xdc ; '.'
00000000000072f2         db  0xff ; '.'
00000000000072f3         db  0xff ; '.'
00000000000072f4         db  0xd8 ; '.'
00000000000072f5         db  0x09 ; '.'
00000000000072f6         db  0x00 ; '.'
00000000000072f7         db  0x00 ; '.'
00000000000072f8         db  0xfc ; '.'
00000000000072f9         db  0xdc ; '.'
00000000000072fa         db  0xff ; '.'
00000000000072fb         db  0xff ; '.'
00000000000072fc         db  0xf4 ; '.'
00000000000072fd         db  0x09 ; '.'
00000000000072fe         db  0x00 ; '.'
00000000000072ff         db  0x00 ; '.'
0000000000007300         db  0x0c ; '.'
0000000000007301         db  0xdd ; '.'
0000000000007302         db  0xff ; '.'
0000000000007303         db  0xff ; '.'
0000000000007304         db  0x08 ; '.'
0000000000007305         db  0x0a ; '.'
0000000000007306         db  0x00 ; '.'
0000000000007307         db  0x00 ; '.'
0000000000007308         db  0x2c ; ','
0000000000007309         db  0xdd ; '.'
000000000000730a         db  0xff ; '.'
000000000000730b         db  0xff ; '.'
000000000000730c         db  0x1c ; '.'
000000000000730d         db  0x0a ; '.'
000000000000730e         db  0x00 ; '.'
000000000000730f         db  0x00 ; '.'
0000000000007310         db  0x4c ; 'L'
0000000000007311         db  0xdd ; '.'
0000000000007312         db  0xff ; '.'
0000000000007313         db  0xff ; '.'
0000000000007314         db  0x30 ; '0'
0000000000007315         db  0x0a ; '.'
0000000000007316         db  0x00 ; '.'
0000000000007317         db  0x00 ; '.'
0000000000007318         db  0x5c ; '\'
0000000000007319         db  0xdd ; '.'
000000000000731a         db  0xff ; '.'
000000000000731b         db  0xff ; '.'
000000000000731c         db  0x44 ; 'D'
000000000000731d         db  0x0a ; '.'
000000000000731e         db  0x00 ; '.'
000000000000731f         db  0x00 ; '.'
0000000000007320         db  0x7c ; '|'
0000000000007321         db  0xdd ; '.'
0000000000007322         db  0xff ; '.'
0000000000007323         db  0xff ; '.'
0000000000007324         db  0x58 ; 'X'
0000000000007325         db  0x0a ; '.'
0000000000007326         db  0x00 ; '.'
0000000000007327         db  0x00 ; '.'
0000000000007328         db  0x9c ; '.'
0000000000007329         db  0xdd ; '.'
000000000000732a         db  0xff ; '.'
000000000000732b         db  0xff ; '.'
000000000000732c         db  0x6c ; 'l'
000000000000732d         db  0x0a ; '.'
000000000000732e         db  0x00 ; '.'
000000000000732f         db  0x00 ; '.'
0000000000007330         db  0xbc ; '.'
0000000000007331         db  0xdd ; '.'
0000000000007332         db  0xff ; '.'
0000000000007333         db  0xff ; '.'
0000000000007334         db  0x84 ; '.'
0000000000007335         db  0x0a ; '.'
0000000000007336         db  0x00 ; '.'
0000000000007337         db  0x00 ; '.'
0000000000007338         db  0x1c ; '.'
0000000000007339         db  0xde ; '.'
000000000000733a         db  0xff ; '.'
000000000000733b         db  0xff ; '.'
000000000000733c         db  0xbc ; '.'
000000000000733d         db  0x0a ; '.'
000000000000733e         db  0x00 ; '.'
000000000000733f         db  0x00 ; '.'
0000000000007340         db  0x3c ; '<'
0000000000007341         db  0xe2 ; '.'
0000000000007342         db  0xff ; '.'
0000000000007343         db  0xff ; '.'
0000000000007344         db  0xd0 ; '.'
0000000000007345         db  0x0b ; '.'
0000000000007346         db  0x00 ; '.'
0000000000007347         db  0x00 ; '.'
0000000000007348         db  0x5c ; '\'
0000000000007349         db  0xe2 ; '.'
000000000000734a         db  0xff ; '.'
000000000000734b         db  0xff ; '.'
000000000000734c         db  0xe4 ; '.'
000000000000734d         db  0x0b ; '.'
000000000000734e         db  0x00 ; '.'
000000000000734f         db  0x00 ; '.'
0000000000007350         db  0xdc ; '.'
0000000000007351         db  0xe2 ; '.'
0000000000007352         db  0xff ; '.'
0000000000007353         db  0xff ; '.'
0000000000007354         db  0x00 ; '.'
0000000000007355         db  0x0c ; '.'
0000000000007356         db  0x00 ; '.'
0000000000007357         db  0x00 ; '.'
0000000000007358         db  0xbc ; '.'
0000000000007359         db  0xe3 ; '.'
000000000000735a         db  0xff ; '.'
000000000000735b         db  0xff ; '.'
000000000000735c         db  0x2c ; ','
000000000000735d         db  0x0c ; '.'
000000000000735e         db  0x00 ; '.'
000000000000735f         db  0x00 ; '.'
0000000000007360         db  0x3c ; '<'
0000000000007361         db  0xe4 ; '.'
0000000000007362         db  0xff ; '.'
0000000000007363         db  0xff ; '.'
0000000000007364         db  0x4c ; 'L'
0000000000007365         db  0x0c ; '.'
0000000000007366         db  0x00 ; '.'
0000000000007367         db  0x00 ; '.'
0000000000007368         db  0x5c ; '\'
0000000000007369         db  0xe4 ; '.'
000000000000736a         db  0xff ; '.'
000000000000736b         db  0xff ; '.'
000000000000736c         db  0x68 ; 'h'
000000000000736d         db  0x0c ; '.'
000000000000736e         db  0x00 ; '.'
000000000000736f         db  0x00 ; '.'
0000000000007370         db  0x8c ; '.'
0000000000007371         db  0xe4 ; '.'
0000000000007372         db  0xff ; '.'
0000000000007373         db  0xff ; '.'
0000000000007374         db  0x7c ; '|'
0000000000007375         db  0x0c ; '.'
0000000000007376         db  0x00 ; '.'
0000000000007377         db  0x00 ; '.'
0000000000007378         db  0x9c ; '.'
0000000000007379         db  0xe4 ; '.'
000000000000737a         db  0xff ; '.'
000000000000737b         db  0xff ; '.'
000000000000737c         db  0x90 ; '.'
000000000000737d         db  0x0c ; '.'
000000000000737e         db  0x00 ; '.'
000000000000737f         db  0x00 ; '.'
0000000000007380         db  0xdc ; '.'
0000000000007381         db  0xe4 ; '.'
0000000000007382         db  0xff ; '.'
0000000000007383         db  0xff ; '.'
0000000000007384         db  0xb4 ; '.'
0000000000007385         db  0x0c ; '.'
0000000000007386         db  0x00 ; '.'
0000000000007387         db  0x00 ; '.'
0000000000007388         db  0x0c ; '.'
0000000000007389         db  0xe5 ; '.'
000000000000738a         db  0xff ; '.'
000000000000738b         db  0xff ; '.'
000000000000738c         db  0xc8 ; '.'
000000000000738d         db  0x0c ; '.'
000000000000738e         db  0x00 ; '.'
000000000000738f         db  0x00 ; '.'
0000000000007390         db  0x9c ; '.'
0000000000007391         db  0xe5 ; '.'
0000000000007392         db  0xff ; '.'
0000000000007393         db  0xff ; '.'
0000000000007394         db  0xe0 ; '.'
0000000000007395         db  0x0c ; '.'
0000000000007396         db  0x00 ; '.'
0000000000007397         db  0x00 ; '.'
0000000000007398         db  0xec ; '.'
0000000000007399         db  0xe5 ; '.'
000000000000739a         db  0xff ; '.'
000000000000739b         db  0xff ; '.'
000000000000739c         db  0xf8 ; '.'
000000000000739d         db  0x0c ; '.'
000000000000739e         db  0x00 ; '.'
000000000000739f         db  0x00 ; '.'
00000000000073a0         db  0x0c ; '.'
00000000000073a1         db  0xe6 ; '.'
00000000000073a2         db  0xff ; '.'
00000000000073a3         db  0xff ; '.'
00000000000073a4         db  0x14 ; '.'
00000000000073a5         db  0x0d ; '.'
00000000000073a6         db  0x00 ; '.'
00000000000073a7         db  0x00 ; '.'
00000000000073a8         db  0x3c ; '<'
00000000000073a9         db  0xe6 ; '.'
00000000000073aa         db  0xff ; '.'
00000000000073ab         db  0xff ; '.'
00000000000073ac         db  0x30 ; '0'
00000000000073ad         db  0x0d ; '.'
00000000000073ae         db  0x00 ; '.'
00000000000073af         db  0x00 ; '.'
00000000000073b0         db  0x6c ; 'l'
00000000000073b1         db  0xe6 ; '.'
00000000000073b2         db  0xff ; '.'
00000000000073b3         db  0xff ; '.'
00000000000073b4         db  0x58 ; 'X'
00000000000073b5         db  0x0d ; '.'
00000000000073b6         db  0x00 ; '.'
00000000000073b7         db  0x00 ; '.'
00000000000073b8         db  0x8c ; '.'
00000000000073b9         db  0xe6 ; '.'
00000000000073ba         db  0xff ; '.'
00000000000073bb         db  0xff ; '.'
00000000000073bc         db  0x74 ; 't'
00000000000073bd         db  0x0d ; '.'
00000000000073be         db  0x00 ; '.'
00000000000073bf         db  0x00 ; '.'
00000000000073c0         db  0xcc ; '.'
00000000000073c1         db  0xe6 ; '.'
00000000000073c2         db  0xff ; '.'
00000000000073c3         db  0xff ; '.'
00000000000073c4         db  0x8c ; '.'
00000000000073c5         db  0x0d ; '.'
00000000000073c6         db  0x00 ; '.'
00000000000073c7         db  0x00 ; '.'
00000000000073c8         db  0xec ; '.'
00000000000073c9         db  0xea ; '.'
00000000000073ca         db  0xff ; '.'
00000000000073cb         db  0xff ; '.'
00000000000073cc         db  0xdc ; '.'
00000000000073cd         db  0x0d ; '.'
00000000000073ce         db  0x00 ; '.'
00000000000073cf         db  0x00 ; '.'
00000000000073d0         db  0x6c ; 'l'
00000000000073d1         db  0xeb ; '.'
00000000000073d2         db  0xff ; '.'
00000000000073d3         db  0xff ; '.'
00000000000073d4         db  0x14 ; '.'
00000000000073d5         db  0x0e ; '.'
00000000000073d6         db  0x00 ; '.'
00000000000073d7         db  0x00 ; '.'
00000000000073d8         db  0xac ; '.'
00000000000073d9         db  0xeb ; '.'
00000000000073da         db  0xff ; '.'
00000000000073db         db  0xff ; '.'
00000000000073dc         db  0x34 ; '4'
00000000000073dd         db  0x0e ; '.'
00000000000073de         db  0x00 ; '.'
00000000000073df         db  0x00 ; '.'
00000000000073e0         db  0x0c ; '.'
00000000000073e1         db  0xec ; '.'
00000000000073e2         db  0xff ; '.'
00000000000073e3         db  0xff ; '.'
00000000000073e4         db  0x64 ; 'd'
00000000000073e5         db  0x0e ; '.'
00000000000073e6         db  0x00 ; '.'
00000000000073e7         db  0x00 ; '.'
00000000000073e8         db  0x9c ; '.'
00000000000073e9         db  0xec ; '.'
00000000000073ea         db  0xff ; '.'
00000000000073eb         db  0xff ; '.'
00000000000073ec         db  0xa4 ; '.'
00000000000073ed         db  0x0e ; '.'
00000000000073ee         db  0x00 ; '.'
00000000000073ef         db  0x00 ; '.'
00000000000073f0         db  0xac ; '.'
00000000000073f1         db  0xec ; '.'
00000000000073f2         db  0xff ; '.'
00000000000073f3         db  0xff ; '.'
00000000000073f4         db  0xb8 ; '.'
00000000000073f5         db  0x0e ; '.'
00000000000073f6         db  0x00 ; '.'
00000000000073f7         db  0x00 ; '.'
00000000000073f8         db  0xcc ; '.'
00000000000073f9         db  0xed ; '.'
00000000000073fa         db  0xff ; '.'
00000000000073fb         db  0xff ; '.'
00000000000073fc         db  0x04 ; '.'
00000000000073fd         db  0x0f ; '.'
00000000000073fe         db  0x00 ; '.'
00000000000073ff         db  0x00 ; '.'
0000000000007400         db  0x4c ; 'L'
0000000000007401         db  0xee ; '.'
0000000000007402         db  0xff ; '.'
0000000000007403         db  0xff ; '.'
0000000000007404         db  0x30 ; '0'
0000000000007405         db  0x0f ; '.'
0000000000007406         db  0x00 ; '.'
0000000000007407         db  0x00 ; '.'
0000000000007408         db  0x6c ; 'l'
0000000000007409         db  0xef ; '.'
000000000000740a         db  0xff ; '.'
000000000000740b         db  0xff ; '.'
000000000000740c         db  0x90 ; '.'
000000000000740d         db  0x0f ; '.'
000000000000740e         db  0x00 ; '.'
000000000000740f         db  0x00 ; '.'
0000000000007410         db  0xdc ; '.'
0000000000007411         db  0xef ; '.'
0000000000007412         db  0xff ; '.'
0000000000007413         db  0xff ; '.'
0000000000007414         db  0xdc ; '.'
0000000000007415         db  0x0f ; '.'
0000000000007416         db  0x00 ; '.'
0000000000007417         db  0x00 ; '.'
0000000000007418         db  0x2c ; ','
0000000000007419         db  0xf0 ; '.'
000000000000741a         db  0xff ; '.'
000000000000741b         db  0xff ; '.'
000000000000741c         db  0x1c ; '.'
000000000000741d         db  0x10 ; '.'
000000000000741e         db  0x00 ; '.'
000000000000741f         db  0x00 ; '.'
0000000000007420         db  0xac ; '.'
0000000000007421         db  0xf0 ; '.'
0000000000007422         db  0xff ; '.'
0000000000007423         db  0xff ; '.'
0000000000007424         db  0x6c ; 'l'
0000000000007425         db  0x10 ; '.'
0000000000007426         db  0x00 ; '.'
0000000000007427         db  0x00 ; '.'
0000000000007428         db  0x0c ; '.'
0000000000007429         db  0xf1 ; '.'
000000000000742a         db  0xff ; '.'
000000000000742b         db  0xff ; '.'
000000000000742c         db  0x8c ; '.'
000000000000742d         db  0x10 ; '.'
000000000000742e         db  0x00 ; '.'
000000000000742f         db  0x00 ; '.'
0000000000007430         db  0x4c ; 'L'
0000000000007431         db  0xf1 ; '.'
0000000000007432         db  0xff ; '.'
0000000000007433         db  0xff ; '.'
0000000000007434         db  0xac ; '.'
0000000000007435         db  0x10 ; '.'
0000000000007436         db  0x00 ; '.'
0000000000007437         db  0x00 ; '.'
0000000000007438         db  0xbc ; '.'
0000000000007439         db  0xf1 ; '.'
000000000000743a         db  0xff ; '.'
000000000000743b         db  0xff ; '.'
000000000000743c         db  0xf4 ; '.'
000000000000743d         db  0x10 ; '.'
000000000000743e         db  0x00 ; '.'
000000000000743f         db  0x00 ; '.'
0000000000007440         db  0xcc ; '.'
0000000000007441         db  0xf1 ; '.'
0000000000007442         db  0xff ; '.'
0000000000007443         db  0xff ; '.'
0000000000007444         db  0x0c ; '.'
0000000000007445         db  0x11 ; '.'
0000000000007446         db  0x00 ; '.'
0000000000007447         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x7448; 0x82b8[ (3696 bytes)
        ; File offset : [29768; 33464[ (3696 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000007448         dd         0x00000014                                  ; Length of the record
000000000000744c         dd         0x00000000                                  ; CIE ID
0000000000007450         db         0x01                                        ; Version
0000000000007451         db         "zR", 0                                     ; Augmentation String
0000000000007454         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000007455         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000007456         db         0x10                                        ; Return address register
0000000000007457         db         0x01                                        ; Augmentation data length
0000000000007458         db         0x1b                                        ; FDE encoding
0000000000007459         db  0x0c ; '.'
000000000000745a         db  0x07 ; '.'
000000000000745b         db  0x08 ; '.'
000000000000745c         db  0x90 ; '.'
000000000000745d         db  0x01 ; '.'
000000000000745e         db  0x07 ; '.'
000000000000745f         db  0x10 ; '.'
0000000000007460         dd         0x00000014                                  ; Length of the record
0000000000007464         dd         0x0000001c                                  ; FDE: parent CIE at 0x7448 (FDE encoding = 0x1B)
0000000000007468         db         0xc8, 0xa6, 2 dup (0xff)                    ; begin 0x1b30
000000000000746c         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x1b5b)
0000000000007470         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007471         align      8
0000000000007478         dd         0x00000014                                  ; Length of the record
000000000000747c         dd         0x00000000                                  ; CIE ID
0000000000007480         db         0x01                                        ; Version
0000000000007481         db         "zR", 0                                     ; Augmentation String
0000000000007484         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000007485         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000007486         db         0x10                                        ; Return address register
0000000000007487         db         0x01                                        ; Augmentation data length
0000000000007488         db         0x1b                                        ; FDE encoding
0000000000007489         db  0x0c ; '.'
000000000000748a         db  0x07 ; '.'
000000000000748b         db  0x08 ; '.'
000000000000748c         db  0x90 ; '.'
000000000000748d         db  0x01 ; '.'
000000000000748e         db  0x00 ; '.'
000000000000748f         db  0x00 ; '.'
0000000000007490         dd         0x00000024                                  ; Length of the record
0000000000007494         dd         0x0000001c                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007498         db         0x18, 0xa1, 2 dup (0xff)                    ; begin 0x15b0
000000000000749c         db         0x80, 0x03, 2 dup (0x00)                    ; length 0x380 (end at 0x1930)
00000000000074a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000074a1         db  0x0e ; '.'
00000000000074a2         db  0x10 ; '.'
00000000000074a3         db  0x46 ; 'F'
00000000000074a4         db  0x0e ; '.'
00000000000074a5         db  0x18 ; '.'
00000000000074a6         db  0x4a ; 'J'
00000000000074a7         db  0x0f ; '.'
00000000000074a8         db  0x0b ; '.'
00000000000074a9         db  0x77 ; 'w'
00000000000074aa         db  0x08 ; '.'
00000000000074ab         db  0x80 ; '.'
00000000000074ac         db  0x00 ; '.'
00000000000074ad         db  0x3f ; '?'
00000000000074ae         db  0x1a ; '.'
00000000000074af         db  0x3b ; ';'
00000000000074b0         db  0x2a ; '*'
00000000000074b1         db  0x33 ; '3'
00000000000074b2         db  0x24 ; '$'
00000000000074b3         db  0x22 ; '"'
00000000000074b4         db  0x00 ; '.'
00000000000074b5         db  0x00 ; '.'
00000000000074b6         db  0x00 ; '.'
00000000000074b7         db  0x00 ; '.'
00000000000074b8         dd         0x00000014                                  ; Length of the record
00000000000074bc         dd         0x00000044                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
00000000000074c0         db         0x70, 0xa4, 2 dup (0xff)                    ; begin 0x1930
00000000000074c4         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x1938)
00000000000074c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000074c9         align      16
00000000000074d0         dd         0x0000004c                                  ; Length of the record
00000000000074d4         dd         0x0000005c                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
00000000000074d8         db         0x68, 0xa7, 2 dup (0xff)                    ; begin 0x1c40
00000000000074dc         db         0x2e, 0x02, 2 dup (0x00)                    ; length 0x22e (end at 0x1e6e)
00000000000074e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000074e1         db  0x42 ; 'B'
00000000000074e2         db  0x0e ; '.'
00000000000074e3         db  0x10 ; '.'
00000000000074e4         db  0x8f ; '.'
00000000000074e5         db  0x02 ; '.'
00000000000074e6         db  0x42 ; 'B'
00000000000074e7         db  0x0e ; '.'
00000000000074e8         db  0x18 ; '.'
00000000000074e9         db  0x8e ; '.'
00000000000074ea         db  0x03 ; '.'
00000000000074eb         db  0x47 ; 'G'
00000000000074ec         db  0x0e ; '.'
00000000000074ed         db  0x20 ; ' '
00000000000074ee         db  0x8d ; '.'
00000000000074ef         db  0x04 ; '.'
00000000000074f0         db  0x42 ; 'B'
00000000000074f1         db  0x0e ; '.'
00000000000074f2         db  0x28 ; '('
00000000000074f3         db  0x8c ; '.'
00000000000074f4         db  0x05 ; '.'
00000000000074f5         db  0x44 ; 'D'
00000000000074f6         db  0x0e ; '.'
00000000000074f7         db  0x30 ; '0'
00000000000074f8         db  0x86 ; '.'
00000000000074f9         db  0x06 ; '.'
00000000000074fa         db  0x41 ; 'A'
00000000000074fb         db  0x0e ; '.'
00000000000074fc         db  0x38 ; '8'
00000000000074fd         db  0x83 ; '.'
00000000000074fe         db  0x07 ; '.'
00000000000074ff         db  0x4e ; 'N'
0000000000007500         db  0x0e ; '.'
0000000000007501         db  0xf0 ; '.'
0000000000007502         db  0x45 ; 'E'
0000000000007503         db  0x03 ; '.'
0000000000007504         db  0x3e ; '>'
0000000000007505         db  0x01 ; '.'
0000000000007506         db  0x0a ; '.'
0000000000007507         db  0x0e ; '.'
0000000000007508         db  0x38 ; '8'
0000000000007509         db  0x41 ; 'A'
000000000000750a         db  0x0e ; '.'
000000000000750b         db  0x30 ; '0'
000000000000750c         db  0x41 ; 'A'
000000000000750d         db  0x0e ; '.'
000000000000750e         db  0x28 ; '('
000000000000750f         db  0x42 ; 'B'
0000000000007510         db  0x0e ; '.'
0000000000007511         db  0x20 ; ' '
0000000000007512         db  0x42 ; 'B'
0000000000007513         db  0x0e ; '.'
0000000000007514         db  0x18 ; '.'
0000000000007515         db  0x42 ; 'B'
0000000000007516         db  0x0e ; '.'
0000000000007517         db  0x10 ; '.'
0000000000007518         db  0x42 ; 'B'
0000000000007519         db  0x0e ; '.'
000000000000751a         db  0x08 ; '.'
000000000000751b         db  0x48 ; 'H'
000000000000751c         db  0x0b ; '.'
000000000000751d         db  0x00 ; '.'
000000000000751e         db  0x00 ; '.'
000000000000751f         db  0x00 ; '.'
0000000000007520         dd         0x0000004c                                  ; Length of the record
0000000000007524         dd         0x000000ac                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007528         db         0x48, 0xa9, 2 dup (0xff)                    ; begin 0x1e70
000000000000752c         db         0x39, 0x02, 2 dup (0x00)                    ; length 0x239 (end at 0x20a9)
0000000000007530         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007531         db  0x42 ; 'B'
0000000000007532         db  0x0e ; '.'
0000000000007533         db  0x10 ; '.'
0000000000007534         db  0x8f ; '.'
0000000000007535         db  0x02 ; '.'
0000000000007536         db  0x42 ; 'B'
0000000000007537         db  0x0e ; '.'
0000000000007538         db  0x18 ; '.'
0000000000007539         db  0x8e ; '.'
000000000000753a         db  0x03 ; '.'
000000000000753b         db  0x47 ; 'G'
000000000000753c         db  0x0e ; '.'
000000000000753d         db  0x20 ; ' '
000000000000753e         db  0x8d ; '.'
000000000000753f         db  0x04 ; '.'
0000000000007540         db  0x42 ; 'B'
0000000000007541         db  0x0e ; '.'
0000000000007542         db  0x28 ; '('
0000000000007543         db  0x8c ; '.'
0000000000007544         db  0x05 ; '.'
0000000000007545         db  0x44 ; 'D'
0000000000007546         db  0x0e ; '.'
0000000000007547         db  0x30 ; '0'
0000000000007548         db  0x86 ; '.'
0000000000007549         db  0x06 ; '.'
000000000000754a         db  0x41 ; 'A'
000000000000754b         db  0x0e ; '.'
000000000000754c         db  0x38 ; '8'
000000000000754d         db  0x83 ; '.'
000000000000754e         db  0x07 ; '.'
000000000000754f         db  0x54 ; 'T'
0000000000007550         db  0x0e ; '.'
0000000000007551         db  0xe0 ; '.'
0000000000007552         db  0x05 ; '.'
0000000000007553         db  0x03 ; '.'
0000000000007554         db  0x2c ; ','
0000000000007555         db  0x01 ; '.'
0000000000007556         db  0x0a ; '.'
0000000000007557         db  0x0e ; '.'
0000000000007558         db  0x38 ; '8'
0000000000007559         db  0x41 ; 'A'
000000000000755a         db  0x0e ; '.'
000000000000755b         db  0x30 ; '0'
000000000000755c         db  0x41 ; 'A'
000000000000755d         db  0x0e ; '.'
000000000000755e         db  0x28 ; '('
000000000000755f         db  0x42 ; 'B'
0000000000007560         db  0x0e ; '.'
0000000000007561         db  0x20 ; ' '
0000000000007562         db  0x42 ; 'B'
0000000000007563         db  0x0e ; '.'
0000000000007564         db  0x18 ; '.'
0000000000007565         db  0x42 ; 'B'
0000000000007566         db  0x0e ; '.'
0000000000007567         db  0x10 ; '.'
0000000000007568         db  0x42 ; 'B'
0000000000007569         db  0x0e ; '.'
000000000000756a         db  0x08 ; '.'
000000000000756b         db  0x44 ; 'D'
000000000000756c         db  0x0b ; '.'
000000000000756d         db  0x00 ; '.'
000000000000756e         db  0x00 ; '.'
000000000000756f         db  0x00 ; '.'
0000000000007570         dd         0x00000028                                  ; Length of the record
0000000000007574         dd         0x000000fc                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007578         db         0x38, 0xab, 2 dup (0xff)                    ; begin 0x20b0
000000000000757c         db         0x8a, 0x03, 2 dup (0x00)                    ; length 0x38a (end at 0x243a)
0000000000007580         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007581         db  0x42 ; 'B'
0000000000007582         db  0x0e ; '.'
0000000000007583         db  0x10 ; '.'
0000000000007584         db  0x8d ; '.'
0000000000007585         db  0x02 ; '.'
0000000000007586         db  0x42 ; 'B'
0000000000007587         db  0x0e ; '.'
0000000000007588         db  0x18 ; '.'
0000000000007589         db  0x8c ; '.'
000000000000758a         db  0x03 ; '.'
000000000000758b         db  0x46 ; 'F'
000000000000758c         db  0x0e ; '.'
000000000000758d         db  0x20 ; ' '
000000000000758e         db  0x86 ; '.'
000000000000758f         db  0x04 ; '.'
0000000000007590         db  0x41 ; 'A'
0000000000007591         db  0x0e ; '.'
0000000000007592         db  0x28 ; '('
0000000000007593         db  0x83 ; '.'
0000000000007594         db  0x05 ; '.'
0000000000007595         db  0x49 ; 'I'
0000000000007596         db  0x0e ; '.'
0000000000007597         db  0xb0 ; '.'
0000000000007598         db  0x01 ; '.'
0000000000007599         db  0x00 ; '.'
000000000000759a         db  0x00 ; '.'
000000000000759b         db  0x00 ; '.'
000000000000759c         dd         0x00000050                                  ; Length of the record
00000000000075a0         dd         0x00000128                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
00000000000075a4         db         0x9c, 0xa3, 2 dup (0xff)                    ; begin 0x1940
00000000000075a8         db         0xe5, 0x01, 2 dup (0x00)                    ; length 0x1e5 (end at 0x1b25)
00000000000075ac         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000075ad         db  0x42 ; 'B'
00000000000075ae         db  0x0e ; '.'
00000000000075af         db  0x10 ; '.'
00000000000075b0         db  0x8f ; '.'
00000000000075b1         db  0x02 ; '.'
00000000000075b2         db  0x42 ; 'B'
00000000000075b3         db  0x0e ; '.'
00000000000075b4         db  0x18 ; '.'
00000000000075b5         db  0x8e ; '.'
00000000000075b6         db  0x03 ; '.'
00000000000075b7         db  0x49 ; 'I'
00000000000075b8         db  0x0e ; '.'
00000000000075b9         db  0x20 ; ' '
00000000000075ba         db  0x8d ; '.'
00000000000075bb         db  0x04 ; '.'
00000000000075bc         db  0x42 ; 'B'
00000000000075bd         db  0x0e ; '.'
00000000000075be         db  0x28 ; '('
00000000000075bf         db  0x8c ; '.'
00000000000075c0         db  0x05 ; '.'
00000000000075c1         db  0x48 ; 'H'
00000000000075c2         db  0x0e ; '.'
00000000000075c3         db  0x30 ; '0'
00000000000075c4         db  0x86 ; '.'
00000000000075c5         db  0x06 ; '.'
00000000000075c6         db  0x41 ; 'A'
00000000000075c7         db  0x0e ; '.'
00000000000075c8         db  0x38 ; '8'
00000000000075c9         db  0x83 ; '.'
00000000000075ca         db  0x07 ; '.'
00000000000075cb         db  0x53 ; 'S'
00000000000075cc         db  0x0e ; '.'
00000000000075cd         db  0x40 ; '@'
00000000000075ce         db  0x02 ; '.'
00000000000075cf         db  0xb4 ; '.'
00000000000075d0         db  0x0a ; '.'
00000000000075d1         db  0x0e ; '.'
00000000000075d2         db  0x48 ; 'H'
00000000000075d3         db  0x50 ; 'P'
00000000000075d4         db  0x0e ; '.'
00000000000075d5         db  0x50 ; 'P'
00000000000075d6         db  0x71 ; 'q'
00000000000075d7         db  0x0b ; '.'
00000000000075d8         db  0x75 ; 'u'
00000000000075d9         db  0x0a ; '.'
00000000000075da         db  0x0e ; '.'
00000000000075db         db  0x38 ; '8'
00000000000075dc         db  0x45 ; 'E'
00000000000075dd         db  0x0e ; '.'
00000000000075de         db  0x30 ; '0'
00000000000075df         db  0x41 ; 'A'
00000000000075e0         db  0x0e ; '.'
00000000000075e1         db  0x28 ; '('
00000000000075e2         db  0x42 ; 'B'
00000000000075e3         db  0x0e ; '.'
00000000000075e4         db  0x20 ; ' '
00000000000075e5         db  0x42 ; 'B'
00000000000075e6         db  0x0e ; '.'
00000000000075e7         db  0x18 ; '.'
00000000000075e8         db  0x42 ; 'B'
00000000000075e9         db  0x0e ; '.'
00000000000075ea         db  0x10 ; '.'
00000000000075eb         db  0x42 ; 'B'
00000000000075ec         db  0x0e ; '.'
00000000000075ed         db  0x08 ; '.'
00000000000075ee         db  0x41 ; 'A'
00000000000075ef         db  0x0b ; '.'
00000000000075f0         dd         0x00000010                                  ; Length of the record
00000000000075f4         dd         0x0000017c                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
00000000000075f8         db         0x48, 0xae, 2 dup (0xff)                    ; begin 0x2440
00000000000075fc         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2448)
0000000000007600         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007601         align      4
0000000000007604         dd         0x00000010                                  ; Length of the record
0000000000007608         dd         0x00000190                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
000000000000760c         db         0x44, 0xae, 2 dup (0xff)                    ; begin 0x2450
0000000000007610         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2458)
0000000000007614         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007615         align      8
0000000000007618         dd         0x0000002c                                  ; Length of the record
000000000000761c         dd         0x000001a4                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007620         db         0x40, 0xae, 2 dup (0xff)                    ; begin 0x2460
0000000000007624         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x2504)
0000000000007628         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007629         db  0x41 ; 'A'
000000000000762a         db  0x0e ; '.'
000000000000762b         db  0x10 ; '.'
000000000000762c         db  0x86 ; '.'
000000000000762d         db  0x02 ; '.'
000000000000762e         db  0x41 ; 'A'
000000000000762f         db  0x0e ; '.'
0000000000007630         db  0x18 ; '.'
0000000000007631         db  0x83 ; '.'
0000000000007632         db  0x03 ; '.'
0000000000007633         db  0x44 ; 'D'
0000000000007634         db  0x0e ; '.'
0000000000007635         db  0x20 ; ' '
0000000000007636         db  0x7a ; 'z'
0000000000007637         db  0x0a ; '.'
0000000000007638         db  0x0e ; '.'
0000000000007639         db  0x18 ; '.'
000000000000763a         db  0x41 ; 'A'
000000000000763b         db  0x0e ; '.'
000000000000763c         db  0x10 ; '.'
000000000000763d         db  0x41 ; 'A'
000000000000763e         db  0x0e ; '.'
000000000000763f         db  0x08 ; '.'
0000000000007640         db  0x41 ; 'A'
0000000000007641         db  0x0b ; '.'
0000000000007642         db  0x00 ; '.'
0000000000007643         db  0x00 ; '.'
0000000000007644         db  0x00 ; '.'
0000000000007645         db  0x00 ; '.'
0000000000007646         db  0x00 ; '.'
0000000000007647         db  0x00 ; '.'
0000000000007648         dd         0x00000010                                  ; Length of the record
000000000000764c         dd         0x000001d4                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007650         db         0xc0, 0xae, 2 dup (0xff)                    ; begin 0x2510
0000000000007654         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x2515)
0000000000007658         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007659         align      4
000000000000765c         dd         0x00000018                                  ; Length of the record
0000000000007660         dd         0x000001e8                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007664         db         0xbc, 0xae, 2 dup (0xff)                    ; begin 0x2520
0000000000007668         db         0x22, 3 dup (0x00)                          ; length 0x22 (end at 0x2542)
000000000000766c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000766d         db  0x46 ; 'F'
000000000000766e         db  0x0e ; '.'
000000000000766f         db  0x10 ; '.'
0000000000007670         db  0x83 ; '.'
0000000000007671         db  0x02 ; '.'
0000000000007672         db  0x4e ; 'N'
0000000000007673         db  0xc3 ; '.'
0000000000007674         db  0x0e ; '.'
0000000000007675         db  0x08 ; '.'
0000000000007676         db  0x00 ; '.'
0000000000007677         db  0x00 ; '.'
0000000000007678         dd         0x00000010                                  ; Length of the record
000000000000767c         dd         0x00000204                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007680         db         0xd0, 0xae, 2 dup (0xff)                    ; begin 0x2550
0000000000007684         db         0xc7, 3 dup (0x00)                          ; length 0xc7 (end at 0x2617)
0000000000007688         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007689         align      4
000000000000768c         dd         0x000000a4                                  ; Length of the record
0000000000007690         dd         0x00000218                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007694         db         0x8c, 0xaf, 2 dup (0xff)                    ; begin 0x2620
0000000000007698         db         0x07, 0x0a, 2 dup (0x00)                    ; length 0xa07 (end at 0x3027)
000000000000769c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000769d         db  0x42 ; 'B'
000000000000769e         db  0x0e ; '.'
000000000000769f         db  0x10 ; '.'
00000000000076a0         db  0x8f ; '.'
00000000000076a1         db  0x02 ; '.'
00000000000076a2         db  0x42 ; 'B'
00000000000076a3         db  0x0e ; '.'
00000000000076a4         db  0x18 ; '.'
00000000000076a5         db  0x8e ; '.'
00000000000076a6         db  0x03 ; '.'
00000000000076a7         db  0x44 ; 'D'
00000000000076a8         db  0x0e ; '.'
00000000000076a9         db  0x20 ; ' '
00000000000076aa         db  0x8d ; '.'
00000000000076ab         db  0x04 ; '.'
00000000000076ac         db  0x42 ; 'B'
00000000000076ad         db  0x0e ; '.'
00000000000076ae         db  0x28 ; '('
00000000000076af         db  0x8c ; '.'
00000000000076b0         db  0x05 ; '.'
00000000000076b1         db  0x44 ; 'D'
00000000000076b2         db  0x0e ; '.'
00000000000076b3         db  0x30 ; '0'
00000000000076b4         db  0x86 ; '.'
00000000000076b5         db  0x06 ; '.'
00000000000076b6         db  0x41 ; 'A'
00000000000076b7         db  0x0e ; '.'
00000000000076b8         db  0x38 ; '8'
00000000000076b9         db  0x83 ; '.'
00000000000076ba         db  0x07 ; '.'
00000000000076bb         db  0x54 ; 'T'
00000000000076bc         db  0x0e ; '.'
00000000000076bd         db  0xd0 ; '.'
00000000000076be         db  0x01 ; '.'
00000000000076bf         db  0x03 ; '.'
00000000000076c0         db  0x7e ; '~'
00000000000076c1         db  0x01 ; '.'
00000000000076c2         db  0x0e ; '.'
00000000000076c3         db  0xe0 ; '.'
00000000000076c4         db  0x01 ; '.'
00000000000076c5         db  0x6e ; 'n'
00000000000076c6         db  0x0e ; '.'
00000000000076c7         db  0xd8 ; '.'
00000000000076c8         db  0x01 ; '.'
00000000000076c9         db  0x41 ; 'A'
00000000000076ca         db  0x0e ; '.'
00000000000076cb         db  0xd0 ; '.'
00000000000076cc         db  0x01 ; '.'
00000000000076cd         db  0x03 ; '.'
00000000000076ce         db  0x40 ; '@'
00000000000076cf         db  0x01 ; '.'
00000000000076d0         db  0x0e ; '.'
00000000000076d1         db  0xe0 ; '.'
00000000000076d2         db  0x01 ; '.'
00000000000076d3         db  0x75 ; 'u'
00000000000076d4         db  0x0e ; '.'
00000000000076d5         db  0xd8 ; '.'
00000000000076d6         db  0x01 ; '.'
00000000000076d7         db  0x41 ; 'A'
00000000000076d8         db  0x0e ; '.'
00000000000076d9         db  0xd0 ; '.'
00000000000076da         db  0x01 ; '.'
00000000000076db         db  0x02 ; '.'
00000000000076dc         db  0xea ; '.'
00000000000076dd         db  0x0a ; '.'
00000000000076de         db  0x0e ; '.'
00000000000076df         db  0x38 ; '8'
00000000000076e0         db  0x41 ; 'A'
00000000000076e1         db  0x0e ; '.'
00000000000076e2         db  0x30 ; '0'
00000000000076e3         db  0x41 ; 'A'
00000000000076e4         db  0x0e ; '.'
00000000000076e5         db  0x28 ; '('
00000000000076e6         db  0x42 ; 'B'
00000000000076e7         db  0x0e ; '.'
00000000000076e8         db  0x20 ; ' '
00000000000076e9         db  0x42 ; 'B'
00000000000076ea         db  0x0e ; '.'
00000000000076eb         db  0x18 ; '.'
00000000000076ec         db  0x42 ; 'B'
00000000000076ed         db  0x0e ; '.'
00000000000076ee         db  0x10 ; '.'
00000000000076ef         db  0x42 ; 'B'
00000000000076f0         db  0x0e ; '.'
00000000000076f1         db  0x08 ; '.'
00000000000076f2         db  0x46 ; 'F'
00000000000076f3         db  0x0b ; '.'
00000000000076f4         db  0x03 ; '.'
00000000000076f5         db  0x2c ; ','
00000000000076f6         db  0x01 ; '.'
00000000000076f7         db  0x0e ; '.'
00000000000076f8         db  0xe0 ; '.'
00000000000076f9         db  0x01 ; '.'
00000000000076fa         db  0x52 ; 'R'
00000000000076fb         db  0x0e ; '.'
00000000000076fc         db  0xd8 ; '.'
00000000000076fd         db  0x01 ; '.'
00000000000076fe         db  0x41 ; 'A'
00000000000076ff         db  0x0e ; '.'
0000000000007700         db  0xd0 ; '.'
0000000000007701         db  0x01 ; '.'
0000000000007702         db  0x55 ; 'U'
0000000000007703         db  0x0e ; '.'
0000000000007704         db  0xe0 ; '.'
0000000000007705         db  0x01 ; '.'
0000000000007706         db  0x4d ; 'M'
0000000000007707         db  0x0e ; '.'
0000000000007708         db  0xd8 ; '.'
0000000000007709         db  0x01 ; '.'
000000000000770a         db  0x42 ; 'B'
000000000000770b         db  0x0e ; '.'
000000000000770c         db  0xd0 ; '.'
000000000000770d         db  0x01 ; '.'
000000000000770e         db  0x03 ; '.'
000000000000770f         db  0x51 ; 'Q'
0000000000007710         db  0x01 ; '.'
0000000000007711         db  0x0e ; '.'
0000000000007712         db  0xe0 ; '.'
0000000000007713         db  0x01 ; '.'
0000000000007714         db  0x77 ; 'w'
0000000000007715         db  0x0e ; '.'
0000000000007716         db  0xd8 ; '.'
0000000000007717         db  0x01 ; '.'
0000000000007718         db  0x41 ; 'A'
0000000000007719         db  0x0e ; '.'
000000000000771a         db  0xd0 ; '.'
000000000000771b         db  0x01 ; '.'
000000000000771c         db  0x5d ; ']'
000000000000771d         db  0x0e ; '.'
000000000000771e         db  0xe0 ; '.'
000000000000771f         db  0x01 ; '.'
0000000000007720         db  0x71 ; 'q'
0000000000007721         db  0x0e ; '.'
0000000000007722         db  0xd8 ; '.'
0000000000007723         db  0x01 ; '.'
0000000000007724         db  0x45 ; 'E'
0000000000007725         db  0x0e ; '.'
0000000000007726         db  0xd0 ; '.'
0000000000007727         db  0x01 ; '.'
0000000000007728         db  0x63 ; 'c'
0000000000007729         db  0x0e ; '.'
000000000000772a         db  0xe0 ; '.'
000000000000772b         db  0x01 ; '.'
000000000000772c         db  0x4c ; 'L'
000000000000772d         db  0x0e ; '.'
000000000000772e         db  0xd8 ; '.'
000000000000772f         db  0x01 ; '.'
0000000000007730         db  0x42 ; 'B'
0000000000007731         db  0x0e ; '.'
0000000000007732         db  0xd0 ; '.'
0000000000007733         db  0x01 ; '.'
0000000000007734         dd         0x00000038                                  ; Length of the record
0000000000007738         dd         0x000002c0                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
000000000000773c         db         0xf4, 0xb8, 2 dup (0xff)                    ; begin 0x3030
0000000000007740         db         0xe6, 0x01, 2 dup (0x00)                    ; length 0x1e6 (end at 0x3216)
0000000000007744         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007745         db  0x42 ; 'B'
0000000000007746         db  0x0e ; '.'
0000000000007747         db  0x10 ; '.'
0000000000007748         db  0x8d ; '.'
0000000000007749         db  0x02 ; '.'
000000000000774a         db  0x42 ; 'B'
000000000000774b         db  0x0e ; '.'
000000000000774c         db  0x18 ; '.'
000000000000774d         db  0x8c ; '.'
000000000000774e         db  0x03 ; '.'
000000000000774f         db  0x44 ; 'D'
0000000000007750         db  0x0e ; '.'
0000000000007751         db  0x20 ; ' '
0000000000007752         db  0x86 ; '.'
0000000000007753         db  0x04 ; '.'
0000000000007754         db  0x41 ; 'A'
0000000000007755         db  0x0e ; '.'
0000000000007756         db  0x28 ; '('
0000000000007757         db  0x83 ; '.'
0000000000007758         db  0x05 ; '.'
0000000000007759         db  0x4a ; 'J'
000000000000775a         db  0x0e ; '.'
000000000000775b         db  0x40 ; '@'
000000000000775c         db  0x02 ; '.'
000000000000775d         db  0x7a ; 'z'
000000000000775e         db  0x0a ; '.'
000000000000775f         db  0x0e ; '.'
0000000000007760         db  0x28 ; '('
0000000000007761         db  0x41 ; 'A'
0000000000007762         db  0x0e ; '.'
0000000000007763         db  0x20 ; ' '
0000000000007764         db  0x41 ; 'A'
0000000000007765         db  0x0e ; '.'
0000000000007766         db  0x18 ; '.'
0000000000007767         db  0x42 ; 'B'
0000000000007768         db  0x0e ; '.'
0000000000007769         db  0x10 ; '.'
000000000000776a         db  0x42 ; 'B'
000000000000776b         db  0x0e ; '.'
000000000000776c         db  0x08 ; '.'
000000000000776d         db  0x45 ; 'E'
000000000000776e         db  0x0b ; '.'
000000000000776f         db  0x00 ; '.'
0000000000007770         dd         0x0000001c                                  ; Length of the record
0000000000007774         dd         0x000002fc                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007778         db         0xa8, 0xba, 2 dup (0xff)                    ; begin 0x3220
000000000000777c         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x32bf)
0000000000007780         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007781         db  0x44 ; 'D'
0000000000007782         db  0x0e ; '.'
0000000000007783         db  0x10 ; '.'
0000000000007784         db  0x83 ; '.'
0000000000007785         db  0x02 ; '.'
0000000000007786         db  0x02 ; '.'
0000000000007787         db  0x78 ; 'x'
0000000000007788         db  0x0a ; '.'
0000000000007789         db  0x0e ; '.'
000000000000778a         db  0x08 ; '.'
000000000000778b         db  0x41 ; 'A'
000000000000778c         db  0x0b ; '.'
000000000000778d         db  0x00 ; '.'
000000000000778e         db  0x00 ; '.'
000000000000778f         db  0x00 ; '.'
0000000000007790         dd         0x00000040                                  ; Length of the record
0000000000007794         dd         0x0000031c                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007798         db         0x28, 0xbb, 2 dup (0xff)                    ; begin 0x32c0
000000000000779c         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x33a7)
00000000000077a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000077a1         db  0x41 ; 'A'
00000000000077a2         db  0x0e ; '.'
00000000000077a3         db  0x10 ; '.'
00000000000077a4         db  0x86 ; '.'
00000000000077a5         db  0x02 ; '.'
00000000000077a6         db  0x41 ; 'A'
00000000000077a7         db  0x0e ; '.'
00000000000077a8         db  0x18 ; '.'
00000000000077a9         db  0x83 ; '.'
00000000000077aa         db  0x03 ; '.'
00000000000077ab         db  0x49 ; 'I'
00000000000077ac         db  0x0e ; '.'
00000000000077ad         db  0x20 ; ' '
00000000000077ae         db  0x6e ; 'n'
00000000000077af         db  0x0a ; '.'
00000000000077b0         db  0x0e ; '.'
00000000000077b1         db  0x18 ; '.'
00000000000077b2         db  0x41 ; 'A'
00000000000077b3         db  0x0e ; '.'
00000000000077b4         db  0x10 ; '.'
00000000000077b5         db  0x41 ; 'A'
00000000000077b6         db  0x0e ; '.'
00000000000077b7         db  0x08 ; '.'
00000000000077b8         db  0x45 ; 'E'
00000000000077b9         db  0x0b ; '.'
00000000000077ba         db  0x02 ; '.'
00000000000077bb         db  0x4a ; 'J'
00000000000077bc         db  0x0a ; '.'
00000000000077bd         db  0x0e ; '.'
00000000000077be         db  0x18 ; '.'
00000000000077bf         db  0x41 ; 'A'
00000000000077c0         db  0x0e ; '.'
00000000000077c1         db  0x10 ; '.'
00000000000077c2         db  0x41 ; 'A'
00000000000077c3         db  0x0e ; '.'
00000000000077c4         db  0x08 ; '.'
00000000000077c5         db  0x44 ; 'D'
00000000000077c6         db  0x0b ; '.'
00000000000077c7         db  0x02 ; '.'
00000000000077c8         db  0x54 ; 'T'
00000000000077c9         db  0x0e ; '.'
00000000000077ca         db  0x18 ; '.'
00000000000077cb         db  0x41 ; 'A'
00000000000077cc         db  0x0e ; '.'
00000000000077cd         db  0x10 ; '.'
00000000000077ce         db  0x41 ; 'A'
00000000000077cf         db  0x0e ; '.'
00000000000077d0         db  0x08 ; '.'
00000000000077d1         db  0x00 ; '.'
00000000000077d2         db  0x00 ; '.'
00000000000077d3         db  0x00 ; '.'
00000000000077d4         dd         0x00000074                                  ; Length of the record
00000000000077d8         dd         0x00000360                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
00000000000077dc         db         0xd4, 0xbb, 2 dup (0xff)                    ; begin 0x33b0
00000000000077e0         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x45e4)
00000000000077e4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000077e5         db  0x42 ; 'B'
00000000000077e6         db  0x0e ; '.'
00000000000077e7         db  0x10 ; '.'
00000000000077e8         db  0x8f ; '.'
00000000000077e9         db  0x02 ; '.'
00000000000077ea         db  0x42 ; 'B'
00000000000077eb         db  0x0e ; '.'
00000000000077ec         db  0x18 ; '.'
00000000000077ed         db  0x8e ; '.'
00000000000077ee         db  0x03 ; '.'
00000000000077ef         db  0x45 ; 'E'
00000000000077f0         db  0x0e ; '.'
00000000000077f1         db  0x20 ; ' '
00000000000077f2         db  0x8d ; '.'
00000000000077f3         db  0x04 ; '.'
00000000000077f4         db  0x42 ; 'B'
00000000000077f5         db  0x0e ; '.'
00000000000077f6         db  0x28 ; '('
00000000000077f7         db  0x8c ; '.'
00000000000077f8         db  0x05 ; '.'
00000000000077f9         db  0x44 ; 'D'
00000000000077fa         db  0x0e ; '.'
00000000000077fb         db  0x30 ; '0'
00000000000077fc         db  0x86 ; '.'
00000000000077fd         db  0x06 ; '.'
00000000000077fe         db  0x41 ; 'A'
00000000000077ff         db  0x0e ; '.'
0000000000007800         db  0x38 ; '8'
0000000000007801         db  0x83 ; '.'
0000000000007802         db  0x07 ; '.'
0000000000007803         db  0x53 ; 'S'
0000000000007804         db  0x0e ; '.'
0000000000007805         db  0xf0 ; '.'
0000000000007806         db  0x01 ; '.'
0000000000007807         db  0x03 ; '.'
0000000000007808         db  0x81 ; '.'
0000000000007809         db  0x0b ; '.'
000000000000780a         db  0x0e ; '.'
000000000000780b         db  0xf8 ; '.'
000000000000780c         db  0x01 ; '.'
000000000000780d         db  0x4a ; 'J'
000000000000780e         db  0x0e ; '.'
000000000000780f         db  0x80 ; '.'
0000000000007810         db  0x02 ; '.'
0000000000007811         db  0x44 ; 'D'
0000000000007812         db  0x0e ; '.'
0000000000007813         db  0x88 ; '.'
0000000000007814         db  0x02 ; '.'
0000000000007815         db  0x45 ; 'E'
0000000000007816         db  0x0e ; '.'
0000000000007817         db  0x90 ; '.'
0000000000007818         db  0x02 ; '.'
0000000000007819         db  0x5f ; '_'
000000000000781a         db  0x0e ; '.'
000000000000781b         db  0xf0 ; '.'
000000000000781c         db  0x01 ; '.'
000000000000781d         db  0x64 ; 'd'
000000000000781e         db  0x0a ; '.'
000000000000781f         db  0x0e ; '.'
0000000000007820         db  0x38 ; '8'
0000000000007821         db  0x41 ; 'A'
0000000000007822         db  0x0e ; '.'
0000000000007823         db  0x30 ; '0'
0000000000007824         db  0x41 ; 'A'
0000000000007825         db  0x0e ; '.'
0000000000007826         db  0x28 ; '('
0000000000007827         db  0x42 ; 'B'
0000000000007828         db  0x0e ; '.'
0000000000007829         db  0x20 ; ' '
000000000000782a         db  0x42 ; 'B'
000000000000782b         db  0x0e ; '.'
000000000000782c         db  0x18 ; '.'
000000000000782d         db  0x42 ; 'B'
000000000000782e         db  0x0e ; '.'
000000000000782f         db  0x10 ; '.'
0000000000007830         db  0x42 ; 'B'
0000000000007831         db  0x0e ; '.'
0000000000007832         db  0x08 ; '.'
0000000000007833         db  0x44 ; 'D'
0000000000007834         db  0x0b ; '.'
0000000000007835         db  0x03 ; '.'
0000000000007836         db  0x99 ; '.'
0000000000007837         db  0x05 ; '.'
0000000000007838         db  0x0e ; '.'
0000000000007839         db  0xf8 ; '.'
000000000000783a         db  0x01 ; '.'
000000000000783b         db  0x4d ; 'M'
000000000000783c         db  0x0e ; '.'
000000000000783d         db  0x80 ; '.'
000000000000783e         db  0x02 ; '.'
000000000000783f         db  0x44 ; 'D'
0000000000007840         db  0x0e ; '.'
0000000000007841         db  0x88 ; '.'
0000000000007842         db  0x02 ; '.'
0000000000007843         db  0x47 ; 'G'
0000000000007844         db  0x0e ; '.'
0000000000007845         db  0x90 ; '.'
0000000000007846         db  0x02 ; '.'
0000000000007847         db  0x5b ; '['
0000000000007848         db  0x0e ; '.'
0000000000007849         db  0xf0 ; '.'
000000000000784a         db  0x01 ; '.'
000000000000784b         db  0x00 ; '.'
000000000000784c         dd         0x00000068                                  ; Length of the record
0000000000007850         dd         0x000003d8                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007854         db         0x9c, 0xcd, 2 dup (0xff)                    ; begin 0x45f0
0000000000007858         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x479b)
000000000000785c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000785d         db  0x42 ; 'B'
000000000000785e         db  0x0e ; '.'
000000000000785f         db  0x10 ; '.'
0000000000007860         db  0x8f ; '.'
0000000000007861         db  0x02 ; '.'
0000000000007862         db  0x42 ; 'B'
0000000000007863         db  0x0e ; '.'
0000000000007864         db  0x18 ; '.'
0000000000007865         db  0x8e ; '.'
0000000000007866         db  0x03 ; '.'
0000000000007867         db  0x45 ; 'E'
0000000000007868         db  0x0e ; '.'
0000000000007869         db  0x20 ; ' '
000000000000786a         db  0x8d ; '.'
000000000000786b         db  0x04 ; '.'
000000000000786c         db  0x42 ; 'B'
000000000000786d         db  0x0e ; '.'
000000000000786e         db  0x28 ; '('
000000000000786f         db  0x8c ; '.'
0000000000007870         db  0x05 ; '.'
0000000000007871         db  0x44 ; 'D'
0000000000007872         db  0x0e ; '.'
0000000000007873         db  0x30 ; '0'
0000000000007874         db  0x86 ; '.'
0000000000007875         db  0x06 ; '.'
0000000000007876         db  0x41 ; 'A'
0000000000007877         db  0x0e ; '.'
0000000000007878         db  0x38 ; '8'
0000000000007879         db  0x83 ; '.'
000000000000787a         db  0x07 ; '.'
000000000000787b         db  0x47 ; 'G'
000000000000787c         db  0x0e ; '.'
000000000000787d         db  0x60 ; '`'
000000000000787e         db  0x02 ; '.'
000000000000787f         db  0x99 ; '.'
0000000000007880         db  0x0e ; '.'
0000000000007881         db  0x68 ; 'h'
0000000000007882         db  0x5f ; '_'
0000000000007883         db  0x0e ; '.'
0000000000007884         db  0x70 ; 'p'
0000000000007885         db  0x46 ; 'F'
0000000000007886         db  0x0e ; '.'
0000000000007887         db  0x78 ; 'x'
0000000000007888         db  0x42 ; 'B'
0000000000007889         db  0x0e ; '.'
000000000000788a         db  0x80 ; '.'
000000000000788b         db  0x01 ; '.'
000000000000788c         db  0x59 ; 'Y'
000000000000788d         db  0x0e ; '.'
000000000000788e         db  0x60 ; '`'
000000000000788f         db  0x02 ; '.'
0000000000007890         db  0x40 ; '@'
0000000000007891         db  0x0e ; '.'
0000000000007892         db  0x68 ; 'h'
0000000000007893         db  0x4b ; 'K'
0000000000007894         db  0x0e ; '.'
0000000000007895         db  0x70 ; 'p'
0000000000007896         db  0x43 ; 'C'
0000000000007897         db  0x0e ; '.'
0000000000007898         db  0x78 ; 'x'
0000000000007899         db  0x45 ; 'E'
000000000000789a         db  0x0e ; '.'
000000000000789b         db  0x80 ; '.'
000000000000789c         db  0x01 ; '.'
000000000000789d         db  0x5e ; '^'
000000000000789e         db  0x0e ; '.'
000000000000789f         db  0x60 ; '`'
00000000000078a0         db  0x4c ; 'L'
00000000000078a1         db  0x0a ; '.'
00000000000078a2         db  0x0e ; '.'
00000000000078a3         db  0x38 ; '8'
00000000000078a4         db  0x44 ; 'D'
00000000000078a5         db  0x0e ; '.'
00000000000078a6         db  0x30 ; '0'
00000000000078a7         db  0x41 ; 'A'
00000000000078a8         db  0x0e ; '.'
00000000000078a9         db  0x28 ; '('
00000000000078aa         db  0x42 ; 'B'
00000000000078ab         db  0x0e ; '.'
00000000000078ac         db  0x20 ; ' '
00000000000078ad         db  0x42 ; 'B'
00000000000078ae         db  0x0e ; '.'
00000000000078af         db  0x18 ; '.'
00000000000078b0         db  0x42 ; 'B'
00000000000078b1         db  0x0e ; '.'
00000000000078b2         db  0x10 ; '.'
00000000000078b3         db  0x42 ; 'B'
00000000000078b4         db  0x0e ; '.'
00000000000078b5         db  0x08 ; '.'
00000000000078b6         db  0x46 ; 'F'
00000000000078b7         db  0x0b ; '.'
00000000000078b8         dd         0x00000028                                  ; Length of the record
00000000000078bc         dd         0x00000444                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
00000000000078c0         db         0xe0, 0xce, 2 dup (0xff)                    ; begin 0x47a0
00000000000078c4         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x47d6)
00000000000078c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000078c9         db  0x42 ; 'B'
00000000000078ca         db  0x0e ; '.'
00000000000078cb         db  0x10 ; '.'
00000000000078cc         db  0x8c ; '.'
00000000000078cd         db  0x02 ; '.'
00000000000078ce         db  0x41 ; 'A'
00000000000078cf         db  0x0e ; '.'
00000000000078d0         db  0x18 ; '.'
00000000000078d1         db  0x86 ; '.'
00000000000078d2         db  0x03 ; '.'
00000000000078d3         db  0x41 ; 'A'
00000000000078d4         db  0x0e ; '.'
00000000000078d5         db  0x20 ; ' '
00000000000078d6         db  0x83 ; '.'
00000000000078d7         db  0x04 ; '.'
00000000000078d8         db  0x6e ; 'n'
00000000000078d9         db  0x0e ; '.'
00000000000078da         db  0x18 ; '.'
00000000000078db         db  0x41 ; 'A'
00000000000078dc         db  0x0e ; '.'
00000000000078dd         db  0x10 ; '.'
00000000000078de         db  0x42 ; 'B'
00000000000078df         db  0x0e ; '.'
00000000000078e0         db  0x08 ; '.'
00000000000078e1         db  0x00 ; '.'
00000000000078e2         db  0x00 ; '.'
00000000000078e3         db  0x00 ; '.'
00000000000078e4         dd         0x00000010                                  ; Length of the record
00000000000078e8         dd         0x00000470                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
00000000000078ec         db         0xf4, 0xce, 2 dup (0xff)                    ; begin 0x47e0
00000000000078f0         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x47f1)
00000000000078f4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000078f5         align      8
00000000000078f8         dd         0x00000010                                  ; Length of the record
00000000000078fc         dd         0x00000484                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007900         db         0x00, 0xcf, 2 dup (0xff)                    ; begin 0x4800
0000000000007904         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4811)
0000000000007908         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007909         align      4
000000000000790c         dd         0x00000010                                  ; Length of the record
0000000000007910         dd         0x00000498                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007914         db         0x0c, 0xcf, 2 dup (0xff)                    ; begin 0x4820
0000000000007918         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x4855)
000000000000791c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000791d         align      32
0000000000007920         dd         0x00000010                                  ; Length of the record
0000000000007924         dd         0x000004ac                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007928         db         0x38, 0xcf, 2 dup (0xff)                    ; begin 0x4860
000000000000792c         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x4875)
0000000000007930         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007931         align      4
0000000000007934         dd         0x00000010                                  ; Length of the record
0000000000007938         dd         0x000004c0                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
000000000000793c         db         0x44, 0xcf, 2 dup (0xff)                    ; begin 0x4880
0000000000007940         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x48b0)
0000000000007944         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007945         db  0x6b ; 'k'
0000000000007946         db  0x0e ; '.'
0000000000007947         db  0x10 ; '.'
0000000000007948         dd         0x00000050                                  ; Length of the record
000000000000794c         dd         0x000004d4                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007950         db         0x60, 0xcf, 2 dup (0xff)                    ; begin 0x48b0
0000000000007954         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x4924)
0000000000007958         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007959         db  0x42 ; 'B'
000000000000795a         db  0x0e ; '.'
000000000000795b         db  0x10 ; '.'
000000000000795c         db  0x8f ; '.'
000000000000795d         db  0x02 ; '.'
000000000000795e         db  0x42 ; 'B'
000000000000795f         db  0x0e ; '.'
0000000000007960         db  0x18 ; '.'
0000000000007961         db  0x8e ; '.'
0000000000007962         db  0x03 ; '.'
0000000000007963         db  0x49 ; 'I'
0000000000007964         db  0x0e ; '.'
0000000000007965         db  0x20 ; ' '
0000000000007966         db  0x8d ; '.'
0000000000007967         db  0x04 ; '.'
0000000000007968         db  0x42 ; 'B'
0000000000007969         db  0x0e ; '.'
000000000000796a         db  0x28 ; '('
000000000000796b         db  0x8c ; '.'
000000000000796c         db  0x05 ; '.'
000000000000796d         db  0x44 ; 'D'
000000000000796e         db  0x0e ; '.'
000000000000796f         db  0x30 ; '0'
0000000000007970         db  0x86 ; '.'
0000000000007971         db  0x06 ; '.'
0000000000007972         db  0x41 ; 'A'
0000000000007973         db  0x0e ; '.'
0000000000007974         db  0x38 ; '8'
0000000000007975         db  0x83 ; '.'
0000000000007976         db  0x07 ; '.'
0000000000007977         db  0x4d ; 'M'
0000000000007978         db  0x0e ; '.'
0000000000007979         db  0x50 ; 'P'
000000000000797a         db  0x5f ; '_'
000000000000797b         db  0x0e ; '.'
000000000000797c         db  0x58 ; 'X'
000000000000797d         db  0x47 ; 'G'
000000000000797e         db  0x0e ; '.'
000000000000797f         db  0x60 ; '`'
0000000000007980         db  0x46 ; 'F'
0000000000007981         db  0x0e ; '.'
0000000000007982         db  0x68 ; 'h'
0000000000007983         db  0x44 ; 'D'
0000000000007984         db  0x0e ; '.'
0000000000007985         db  0x70 ; 'p'
0000000000007986         db  0x58 ; 'X'
0000000000007987         db  0x0e ; '.'
0000000000007988         db  0x38 ; '8'
0000000000007989         db  0x41 ; 'A'
000000000000798a         db  0x0e ; '.'
000000000000798b         db  0x30 ; '0'
000000000000798c         db  0x41 ; 'A'
000000000000798d         db  0x0e ; '.'
000000000000798e         db  0x28 ; '('
000000000000798f         db  0x42 ; 'B'
0000000000007990         db  0x0e ; '.'
0000000000007991         db  0x20 ; ' '
0000000000007992         db  0x42 ; 'B'
0000000000007993         db  0x0e ; '.'
0000000000007994         db  0x18 ; '.'
0000000000007995         db  0x42 ; 'B'
0000000000007996         db  0x0e ; '.'
0000000000007997         db  0x10 ; '.'
0000000000007998         db  0x42 ; 'B'
0000000000007999         db  0x0e ; '.'
000000000000799a         db  0x08 ; '.'
000000000000799b         db  0x00 ; '.'
000000000000799c         dd         0x00000068                                  ; Length of the record
00000000000079a0         dd         0x00000528                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
00000000000079a4         db         0x8c, 0xcf, 2 dup (0xff)                    ; begin 0x4930
00000000000079a8         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x4a13)
00000000000079ac         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000079ad         db  0x42 ; 'B'
00000000000079ae         db  0x0e ; '.'
00000000000079af         db  0x10 ; '.'
00000000000079b0         db  0x8f ; '.'
00000000000079b1         db  0x02 ; '.'
00000000000079b2         db  0x42 ; 'B'
00000000000079b3         db  0x0e ; '.'
00000000000079b4         db  0x18 ; '.'
00000000000079b5         db  0x8e ; '.'
00000000000079b6         db  0x03 ; '.'
00000000000079b7         db  0x49 ; 'I'
00000000000079b8         db  0x0e ; '.'
00000000000079b9         db  0x20 ; ' '
00000000000079ba         db  0x8d ; '.'
00000000000079bb         db  0x04 ; '.'
00000000000079bc         db  0x42 ; 'B'
00000000000079bd         db  0x0e ; '.'
00000000000079be         db  0x28 ; '('
00000000000079bf         db  0x8c ; '.'
00000000000079c0         db  0x05 ; '.'
00000000000079c1         db  0x44 ; 'D'
00000000000079c2         db  0x0e ; '.'
00000000000079c3         db  0x30 ; '0'
00000000000079c4         db  0x86 ; '.'
00000000000079c5         db  0x06 ; '.'
00000000000079c6         db  0x41 ; 'A'
00000000000079c7         db  0x0e ; '.'
00000000000079c8         db  0x38 ; '8'
00000000000079c9         db  0x83 ; '.'
00000000000079ca         db  0x07 ; '.'
00000000000079cb         db  0x4d ; 'M'
00000000000079cc         db  0x0e ; '.'
00000000000079cd         db  0x70 ; 'p'
00000000000079ce         db  0x65 ; 'e'
00000000000079cf         db  0x0e ; '.'
00000000000079d0         db  0x78 ; 'x'
00000000000079d1         db  0x4d ; 'M'
00000000000079d2         db  0x0e ; '.'
00000000000079d3         db  0x80 ; '.'
00000000000079d4         db  0x01 ; '.'
00000000000079d5         db  0x46 ; 'F'
00000000000079d6         db  0x0e ; '.'
00000000000079d7         db  0x88 ; '.'
00000000000079d8         db  0x01 ; '.'
00000000000079d9         db  0x42 ; 'B'
00000000000079da         db  0x0e ; '.'
00000000000079db         db  0x90 ; '.'
00000000000079dc         db  0x01 ; '.'
00000000000079dd         db  0x5e ; '^'
00000000000079de         db  0x0e ; '.'
00000000000079df         db  0x70 ; 'p'
00000000000079e0         db  0x56 ; 'V'
00000000000079e1         db  0x0e ; '.'
00000000000079e2         db  0x78 ; 'x'
00000000000079e3         db  0x43 ; 'C'
00000000000079e4         db  0x0e ; '.'
00000000000079e5         db  0x80 ; '.'
00000000000079e6         db  0x01 ; '.'
00000000000079e7         db  0x43 ; 'C'
00000000000079e8         db  0x0e ; '.'
00000000000079e9         db  0x88 ; '.'
00000000000079ea         db  0x01 ; '.'
00000000000079eb         db  0x56 ; 'V'
00000000000079ec         db  0x0e ; '.'
00000000000079ed         db  0x90 ; '.'
00000000000079ee         db  0x01 ; '.'
00000000000079ef         db  0x52 ; 'R'
00000000000079f0         db  0x0e ; '.'
00000000000079f1         db  0x70 ; 'p'
00000000000079f2         db  0x5b ; '['
00000000000079f3         db  0x0e ; '.'
00000000000079f4         db  0x38 ; '8'
00000000000079f5         db  0x41 ; 'A'
00000000000079f6         db  0x0e ; '.'
00000000000079f7         db  0x30 ; '0'
00000000000079f8         db  0x41 ; 'A'
00000000000079f9         db  0x0e ; '.'
00000000000079fa         db  0x28 ; '('
00000000000079fb         db  0x42 ; 'B'
00000000000079fc         db  0x0e ; '.'
00000000000079fd         db  0x20 ; ' '
00000000000079fe         db  0x42 ; 'B'
00000000000079ff         db  0x0e ; '.'
0000000000007a00         db  0x18 ; '.'
0000000000007a01         db  0x42 ; 'B'
0000000000007a02         db  0x0e ; '.'
0000000000007a03         db  0x10 ; '.'
0000000000007a04         db  0x42 ; 'B'
0000000000007a05         db  0x0e ; '.'
0000000000007a06         db  0x08 ; '.'
0000000000007a07         db  0x00 ; '.'
0000000000007a08         dd         0x00000010                                  ; Length of the record
0000000000007a0c         dd         0x00000594                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007a10         db         0x10, 0xd0, 2 dup (0xff)                    ; begin 0x4a20
0000000000007a14         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x4a2a)
0000000000007a18         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007a19         align      4
0000000000007a1c         dd         0x00000028                                  ; Length of the record
0000000000007a20         dd         0x000005a8                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007a24         db         0x0c, 0xd0, 2 dup (0xff)                    ; begin 0x4a30
0000000000007a28         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x4ac3)
0000000000007a2c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007a2d         db  0x48 ; 'H'
0000000000007a2e         db  0x0e ; '.'
0000000000007a2f         db  0x10 ; '.'
0000000000007a30         db  0x8c ; '.'
0000000000007a31         db  0x02 ; '.'
0000000000007a32         db  0x48 ; 'H'
0000000000007a33         db  0x0e ; '.'
0000000000007a34         db  0x18 ; '.'
0000000000007a35         db  0x86 ; '.'
0000000000007a36         db  0x03 ; '.'
0000000000007a37         db  0x41 ; 'A'
0000000000007a38         db  0x0e ; '.'
0000000000007a39         db  0x20 ; ' '
0000000000007a3a         db  0x83 ; '.'
0000000000007a3b         db  0x04 ; '.'
0000000000007a3c         db  0x02 ; '.'
0000000000007a3d         db  0x74 ; 't'
0000000000007a3e         db  0x0e ; '.'
0000000000007a3f         db  0x18 ; '.'
0000000000007a40         db  0x4b ; 'K'
0000000000007a41         db  0x0e ; '.'
0000000000007a42         db  0x10 ; '.'
0000000000007a43         db  0x42 ; 'B'
0000000000007a44         db  0x0e ; '.'
0000000000007a45         db  0x08 ; '.'
0000000000007a46         db  0x00 ; '.'
0000000000007a47         db  0x00 ; '.'
0000000000007a48         dd         0x00000010                                  ; Length of the record
0000000000007a4c         dd         0x000005d4                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007a50         db         0x80, 0xd0, 2 dup (0xff)                    ; begin 0x4ad0
0000000000007a54         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4ae3)
0000000000007a58         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007a59         align      4
0000000000007a5c         dd         0x00000010                                  ; Length of the record
0000000000007a60         dd         0x000005e8                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007a64         db         0x8c, 0xd0, 2 dup (0xff)                    ; begin 0x4af0
0000000000007a68         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x4afc)
0000000000007a6c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007a6d         align      16
0000000000007a70         dd         0x00000010                                  ; Length of the record
0000000000007a74         dd         0x000005fc                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007a78         db         0x88, 0xd0, 2 dup (0xff)                    ; begin 0x4b00
0000000000007a7c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x4b18)
0000000000007a80         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007a81         align      4
0000000000007a84         dd         0x00000010                                  ; Length of the record
0000000000007a88         dd         0x00000610                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007a8c         db         0x94, 0xd0, 2 dup (0xff)                    ; begin 0x4b20
0000000000007a90         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x4b34)
0000000000007a94         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007a95         align      8
0000000000007a98         dd         0x00000018                                  ; Length of the record
0000000000007a9c         dd         0x00000624                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007aa0         db         0xa0, 0xd0, 2 dup (0xff)                    ; begin 0x4b40
0000000000007aa4         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x4bce)
0000000000007aa8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007aa9         db  0x44 ; 'D'
0000000000007aaa         db  0x0e ; '.'
0000000000007aab         db  0x50 ; 'P'
0000000000007aac         db  0x02 ; '.'
0000000000007aad         db  0x7f ; '.'
0000000000007aae         db  0x0a ; '.'
0000000000007aaf         db  0x0e ; '.'
0000000000007ab0         db  0x08 ; '.'
0000000000007ab1         db  0x41 ; 'A'
0000000000007ab2         db  0x0b ; '.'
0000000000007ab3         db  0x00 ; '.'
0000000000007ab4         dd         0x00000018                                  ; Length of the record
0000000000007ab8         dd         0x00000640                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007abc         db         0x14, 0xd1, 2 dup (0xff)                    ; begin 0x4bd0
0000000000007ac0         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x4c5a)
0000000000007ac4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007ac5         db  0x44 ; 'D'
0000000000007ac6         db  0x0e ; '.'
0000000000007ac7         db  0x50 ; 'P'
0000000000007ac8         db  0x02 ; '.'
0000000000007ac9         db  0x7b ; '{'
0000000000007aca         db  0x0a ; '.'
0000000000007acb         db  0x0e ; '.'
0000000000007acc         db  0x08 ; '.'
0000000000007acd         db  0x41 ; 'A'
0000000000007ace         db  0x0b ; '.'
0000000000007acf         db  0x00 ; '.'
0000000000007ad0         dd         0x00000010                                  ; Length of the record
0000000000007ad4         dd         0x0000065c                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007ad8         db         0x88, 0xd1, 2 dup (0xff)                    ; begin 0x4c60
0000000000007adc         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x4c6c)
0000000000007ae0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007ae1         align      4
0000000000007ae4         dd         0x00000010                                  ; Length of the record
0000000000007ae8         dd         0x00000670                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007aec         db         0x84, 0xd1, 2 dup (0xff)                    ; begin 0x4c70
0000000000007af0         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x4c7f)
0000000000007af4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007af5         align      8
0000000000007af8         dd         0x00000018                                  ; Length of the record
0000000000007afc         dd         0x00000684                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007b00         db         0x80, 0xd1, 2 dup (0xff)                    ; begin 0x4c80
0000000000007b04         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x4d18)
0000000000007b08         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007b09         db  0x44 ; 'D'
0000000000007b0a         db  0x0e ; '.'
0000000000007b0b         db  0x50 ; 'P'
0000000000007b0c         db  0x02 ; '.'
0000000000007b0d         db  0x8e ; '.'
0000000000007b0e         db  0x0a ; '.'
0000000000007b0f         db  0x0e ; '.'
0000000000007b10         db  0x08 ; '.'
0000000000007b11         db  0x41 ; 'A'
0000000000007b12         db  0x0b ; '.'
0000000000007b13         db  0x00 ; '.'
0000000000007b14         dd         0x00000010                                  ; Length of the record
0000000000007b18         dd         0x000006a0                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007b1c         db         0x04, 0xd2, 2 dup (0xff)                    ; begin 0x4d20
0000000000007b20         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x4d30)
0000000000007b24         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007b25         align      8
0000000000007b28         dd         0x00000010                                  ; Length of the record
0000000000007b2c         dd         0x000006b4                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007b30         db         0x00, 0xd2, 2 dup (0xff)                    ; begin 0x4d30
0000000000007b34         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4d41)
0000000000007b38         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007b39         align      4
0000000000007b3c         dd         0x00000010                                  ; Length of the record
0000000000007b40         dd         0x000006c8                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007b44         db         0x0c, 0xd2, 2 dup (0xff)                    ; begin 0x4d50
0000000000007b48         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x4d5a)
0000000000007b4c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007b4d         align      16
0000000000007b50         dd         0x00000018                                  ; Length of the record
0000000000007b54         dd         0x000006dc                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007b58         db         0x08, 0xd2, 2 dup (0xff)                    ; begin 0x4d60
0000000000007b5c         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x4dee)
0000000000007b60         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007b61         db  0x44 ; 'D'
0000000000007b62         db  0x0e ; '.'
0000000000007b63         db  0x50 ; 'P'
0000000000007b64         db  0x02 ; '.'
0000000000007b65         db  0x7f ; '.'
0000000000007b66         db  0x0a ; '.'
0000000000007b67         db  0x0e ; '.'
0000000000007b68         db  0x08 ; '.'
0000000000007b69         db  0x41 ; 'A'
0000000000007b6a         db  0x0b ; '.'
0000000000007b6b         db  0x00 ; '.'
0000000000007b6c         dd         0x00000018                                  ; Length of the record
0000000000007b70         dd         0x000006f8                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007b74         db         0x7c, 0xd2, 2 dup (0xff)                    ; begin 0x4df0
0000000000007b78         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x4e81)
0000000000007b7c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007b7d         db  0x44 ; 'D'
0000000000007b7e         db  0x0e ; '.'
0000000000007b7f         db  0x50 ; 'P'
0000000000007b80         db  0x02 ; '.'
0000000000007b81         db  0x82 ; '.'
0000000000007b82         db  0x0a ; '.'
0000000000007b83         db  0x0e ; '.'
0000000000007b84         db  0x08 ; '.'
0000000000007b85         db  0x41 ; 'A'
0000000000007b86         db  0x0b ; '.'
0000000000007b87         db  0x00 ; '.'
0000000000007b88         dd         0x00000010                                  ; Length of the record
0000000000007b8c         dd         0x00000714                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007b90         db         0x00, 0xd3, 2 dup (0xff)                    ; begin 0x4e90
0000000000007b94         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x4e9c)
0000000000007b98         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007b99         align      4
0000000000007b9c         dd         0x00000010                                  ; Length of the record
0000000000007ba0         dd         0x00000728                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007ba4         db         0xfc, 0xd2, 2 dup (0xff)                    ; begin 0x4ea0
0000000000007ba8         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x4eb7)
0000000000007bac         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007bad         align      16
0000000000007bb0         dd         0x00000010                                  ; Length of the record
0000000000007bb4         dd         0x0000073c                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007bb8         db         0x08, 0xd3, 2 dup (0xff)                    ; begin 0x4ec0
0000000000007bbc         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4ed3)
0000000000007bc0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007bc1         align      4
0000000000007bc4         dd         0x00000010                                  ; Length of the record
0000000000007bc8         dd         0x00000750                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007bcc         db         0x14, 0xd3, 2 dup (0xff)                    ; begin 0x4ee0
0000000000007bd0         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x4eec)
0000000000007bd4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007bd5         align      8
0000000000007bd8         dd         0x00000010                                  ; Length of the record
0000000000007bdc         dd         0x00000764                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007be0         db         0x10, 0xd3, 2 dup (0xff)                    ; begin 0x4ef0
0000000000007be4         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x4f04)
0000000000007be8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007be9         align      4
0000000000007bec         dd         0x00000010                                  ; Length of the record
0000000000007bf0         dd         0x00000778                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007bf4         db         0x1c, 0xd3, 2 dup (0xff)                    ; begin 0x4f10
0000000000007bf8         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4f23)
0000000000007bfc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007bfd         align      1024
0000000000007c00         dd         0x00000014                                  ; Length of the record
0000000000007c04         dd         0x0000078c                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007c08         db         0x28, 0xd3, 2 dup (0xff)                    ; begin 0x4f30
0000000000007c0c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x4f48)
0000000000007c10         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007c11         align      8
0000000000007c18         dd         0x00000034                                  ; Length of the record
0000000000007c1c         dd         0x000007a4                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007c20         db         0x30, 0xd3, 2 dup (0xff)                    ; begin 0x4f50
0000000000007c24         db         0x5e, 3 dup (0x00)                          ; length 0x5e (end at 0x4fae)
0000000000007c28         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007c29         db  0x42 ; 'B'
0000000000007c2a         db  0x0e ; '.'
0000000000007c2b         db  0x10 ; '.'
0000000000007c2c         db  0x8d ; '.'
0000000000007c2d         db  0x02 ; '.'
0000000000007c2e         db  0x42 ; 'B'
0000000000007c2f         db  0x0e ; '.'
0000000000007c30         db  0x18 ; '.'
0000000000007c31         db  0x8c ; '.'
0000000000007c32         db  0x03 ; '.'
0000000000007c33         db  0x44 ; 'D'
0000000000007c34         db  0x0e ; '.'
0000000000007c35         db  0x20 ; ' '
0000000000007c36         db  0x86 ; '.'
0000000000007c37         db  0x04 ; '.'
0000000000007c38         db  0x41 ; 'A'
0000000000007c39         db  0x0e ; '.'
0000000000007c3a         db  0x28 ; '('
0000000000007c3b         db  0x83 ; '.'
0000000000007c3c         db  0x05 ; '.'
0000000000007c3d         db  0x4a ; 'J'
0000000000007c3e         db  0x0e ; '.'
0000000000007c3f         db  0x30 ; '0'
0000000000007c40         db  0x02 ; '.'
0000000000007c41         db  0x41 ; 'A'
0000000000007c42         db  0x0e ; '.'
0000000000007c43         db  0x28 ; '('
0000000000007c44         db  0x44 ; 'D'
0000000000007c45         db  0x0e ; '.'
0000000000007c46         db  0x20 ; ' '
0000000000007c47         db  0x41 ; 'A'
0000000000007c48         db  0x0e ; '.'
0000000000007c49         db  0x18 ; '.'
0000000000007c4a         db  0x42 ; 'B'
0000000000007c4b         db  0x0e ; '.'
0000000000007c4c         db  0x10 ; '.'
0000000000007c4d         db  0x42 ; 'B'
0000000000007c4e         db  0x0e ; '.'
0000000000007c4f         db  0x08 ; '.'
0000000000007c50         dd         0x00000110                                  ; Length of the record
0000000000007c54         dd         0x000007dc                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007c58         db         0x58, 0xd3, 2 dup (0xff)                    ; begin 0x4fb0
0000000000007c5c         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x53c7)
0000000000007c60         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007c61         db  0x42 ; 'B'
0000000000007c62         db  0x0e ; '.'
0000000000007c63         db  0x10 ; '.'
0000000000007c64         db  0x8f ; '.'
0000000000007c65         db  0x02 ; '.'
0000000000007c66         db  0x42 ; 'B'
0000000000007c67         db  0x0e ; '.'
0000000000007c68         db  0x18 ; '.'
0000000000007c69         db  0x8e ; '.'
0000000000007c6a         db  0x03 ; '.'
0000000000007c6b         db  0x42 ; 'B'
0000000000007c6c         db  0x0e ; '.'
0000000000007c6d         db  0x20 ; ' '
0000000000007c6e         db  0x8d ; '.'
0000000000007c6f         db  0x04 ; '.'
0000000000007c70         db  0x42 ; 'B'
0000000000007c71         db  0x0e ; '.'
0000000000007c72         db  0x28 ; '('
0000000000007c73         db  0x8c ; '.'
0000000000007c74         db  0x05 ; '.'
0000000000007c75         db  0x44 ; 'D'
0000000000007c76         db  0x0e ; '.'
0000000000007c77         db  0x30 ; '0'
0000000000007c78         db  0x86 ; '.'
0000000000007c79         db  0x06 ; '.'
0000000000007c7a         db  0x41 ; 'A'
0000000000007c7b         db  0x0e ; '.'
0000000000007c7c         db  0x38 ; '8'
0000000000007c7d         db  0x83 ; '.'
0000000000007c7e         db  0x07 ; '.'
0000000000007c7f         db  0x4a ; 'J'
0000000000007c80         db  0x0e ; '.'
0000000000007c81         db  0x60 ; '`'
0000000000007c82         db  0x02 ; '.'
0000000000007c83         db  0xdd ; '.'
0000000000007c84         db  0x0e ; '.'
0000000000007c85         db  0x68 ; 'h'
0000000000007c86         db  0x57 ; 'W'
0000000000007c87         db  0x0e ; '.'
0000000000007c88         db  0x70 ; 'p'
0000000000007c89         db  0x42 ; 'B'
0000000000007c8a         db  0x0e ; '.'
0000000000007c8b         db  0x78 ; 'x'
0000000000007c8c         db  0x42 ; 'B'
0000000000007c8d         db  0x0e ; '.'
0000000000007c8e         db  0x80 ; '.'
0000000000007c8f         db  0x01 ; '.'
0000000000007c90         db  0x42 ; 'B'
0000000000007c91         db  0x0e ; '.'
0000000000007c92         db  0x88 ; '.'
0000000000007c93         db  0x01 ; '.'
0000000000007c94         db  0x42 ; 'B'
0000000000007c95         db  0x0e ; '.'
0000000000007c96         db  0x90 ; '.'
0000000000007c97         db  0x01 ; '.'
0000000000007c98         db  0x53 ; 'S'
0000000000007c99         db  0x0e ; '.'
0000000000007c9a         db  0x60 ; '`'
0000000000007c9b         db  0x44 ; 'D'
0000000000007c9c         db  0x0a ; '.'
0000000000007c9d         db  0x0e ; '.'
0000000000007c9e         db  0x38 ; '8'
0000000000007c9f         db  0x41 ; 'A'
0000000000007ca0         db  0x0e ; '.'
0000000000007ca1         db  0x30 ; '0'
0000000000007ca2         db  0x41 ; 'A'
0000000000007ca3         db  0x0e ; '.'
0000000000007ca4         db  0x28 ; '('
0000000000007ca5         db  0x42 ; 'B'
0000000000007ca6         db  0x0e ; '.'
0000000000007ca7         db  0x20 ; ' '
0000000000007ca8         db  0x42 ; 'B'
0000000000007ca9         db  0x0e ; '.'
0000000000007caa         db  0x18 ; '.'
0000000000007cab         db  0x42 ; 'B'
0000000000007cac         db  0x0e ; '.'
0000000000007cad         db  0x10 ; '.'
0000000000007cae         db  0x42 ; 'B'
0000000000007caf         db  0x0e ; '.'
0000000000007cb0         db  0x08 ; '.'
0000000000007cb1         db  0x44 ; 'D'
0000000000007cb2         db  0x0b ; '.'
0000000000007cb3         db  0x02 ; '.'
0000000000007cb4         db  0x78 ; 'x'
0000000000007cb5         db  0x0a ; '.'
0000000000007cb6         db  0x0e ; '.'
0000000000007cb7         db  0x68 ; 'h'
0000000000007cb8         db  0x48 ; 'H'
0000000000007cb9         db  0x0b ; '.'
0000000000007cba         db  0x5a ; 'Z'
0000000000007cbb         db  0x0a ; '.'
0000000000007cbc         db  0x0e ; '.'
0000000000007cbd         db  0x38 ; '8'
0000000000007cbe         db  0x47 ; 'G'
0000000000007cbf         db  0x0e ; '.'
0000000000007cc0         db  0x30 ; '0'
0000000000007cc1         db  0x41 ; 'A'
0000000000007cc2         db  0x0e ; '.'
0000000000007cc3         db  0x28 ; '('
0000000000007cc4         db  0x42 ; 'B'
0000000000007cc5         db  0x0e ; '.'
0000000000007cc6         db  0x20 ; ' '
0000000000007cc7         db  0x42 ; 'B'
0000000000007cc8         db  0x0e ; '.'
0000000000007cc9         db  0x18 ; '.'
0000000000007cca         db  0x42 ; 'B'
0000000000007ccb         db  0x0e ; '.'
0000000000007ccc         db  0x10 ; '.'
0000000000007ccd         db  0x42 ; 'B'
0000000000007cce         db  0x0e ; '.'
0000000000007ccf         db  0x08 ; '.'
0000000000007cd0         db  0x56 ; 'V'
0000000000007cd1         db  0x0b ; '.'
0000000000007cd2         db  0x5e ; '^'
0000000000007cd3         db  0x0a ; '.'
0000000000007cd4         db  0x0e ; '.'
0000000000007cd5         db  0x38 ; '8'
0000000000007cd6         db  0x52 ; 'R'
0000000000007cd7         db  0x0e ; '.'
0000000000007cd8         db  0x30 ; '0'
0000000000007cd9         db  0x41 ; 'A'
0000000000007cda         db  0x0e ; '.'
0000000000007cdb         db  0x28 ; '('
0000000000007cdc         db  0x42 ; 'B'
0000000000007cdd         db  0x0e ; '.'
0000000000007cde         db  0x20 ; ' '
0000000000007cdf         db  0x42 ; 'B'
0000000000007ce0         db  0x0e ; '.'
0000000000007ce1         db  0x18 ; '.'
0000000000007ce2         db  0x42 ; 'B'
0000000000007ce3         db  0x0e ; '.'
0000000000007ce4         db  0x10 ; '.'
0000000000007ce5         db  0x42 ; 'B'
0000000000007ce6         db  0x0e ; '.'
0000000000007ce7         db  0x08 ; '.'
0000000000007ce8         db  0x4f ; 'O'
0000000000007ce9         db  0x0b ; '.'
0000000000007cea         db  0x62 ; 'b'
0000000000007ceb         db  0x0a ; '.'
0000000000007cec         db  0x0e ; '.'
0000000000007ced         db  0x38 ; '8'
0000000000007cee         db  0x50 ; 'P'
0000000000007cef         db  0x0e ; '.'
0000000000007cf0         db  0x30 ; '0'
0000000000007cf1         db  0x41 ; 'A'
0000000000007cf2         db  0x0e ; '.'
0000000000007cf3         db  0x28 ; '('
0000000000007cf4         db  0x42 ; 'B'
0000000000007cf5         db  0x0e ; '.'
0000000000007cf6         db  0x20 ; ' '
0000000000007cf7         db  0x42 ; 'B'
0000000000007cf8         db  0x0e ; '.'
0000000000007cf9         db  0x18 ; '.'
0000000000007cfa         db  0x42 ; 'B'
0000000000007cfb         db  0x0e ; '.'
0000000000007cfc         db  0x10 ; '.'
0000000000007cfd         db  0x42 ; 'B'
0000000000007cfe         db  0x0e ; '.'
0000000000007cff         db  0x08 ; '.'
0000000000007d00         db  0x55 ; 'U'
0000000000007d01         db  0x0b ; '.'
0000000000007d02         db  0x66 ; 'f'
0000000000007d03         db  0x0e ; '.'
0000000000007d04         db  0x68 ; 'h'
0000000000007d05         db  0x42 ; 'B'
0000000000007d06         db  0x0e ; '.'
0000000000007d07         db  0x70 ; 'p'
0000000000007d08         db  0x5c ; '\'
0000000000007d09         db  0x0e ; '.'
0000000000007d0a         db  0x68 ; 'h'
0000000000007d0b         db  0x41 ; 'A'
0000000000007d0c         db  0x0e ; '.'
0000000000007d0d         db  0x60 ; '`'
0000000000007d0e         db  0x44 ; 'D'
0000000000007d0f         db  0x0a ; '.'
0000000000007d10         db  0x0e ; '.'
0000000000007d11         db  0x38 ; '8'
0000000000007d12         db  0x41 ; 'A'
0000000000007d13         db  0x0e ; '.'
0000000000007d14         db  0x30 ; '0'
0000000000007d15         db  0x41 ; 'A'
0000000000007d16         db  0x0e ; '.'
0000000000007d17         db  0x28 ; '('
0000000000007d18         db  0x42 ; 'B'
0000000000007d19         db  0x0e ; '.'
0000000000007d1a         db  0x20 ; ' '
0000000000007d1b         db  0x42 ; 'B'
0000000000007d1c         db  0x0e ; '.'
0000000000007d1d         db  0x18 ; '.'
0000000000007d1e         db  0x42 ; 'B'
0000000000007d1f         db  0x0e ; '.'
0000000000007d20         db  0x10 ; '.'
0000000000007d21         db  0x42 ; 'B'
0000000000007d22         db  0x0e ; '.'
0000000000007d23         db  0x08 ; '.'
0000000000007d24         db  0x45 ; 'E'
0000000000007d25         db  0x0b ; '.'
0000000000007d26         db  0x68 ; 'h'
0000000000007d27         db  0x0a ; '.'
0000000000007d28         db  0x0e ; '.'
0000000000007d29         db  0x68 ; 'h'
0000000000007d2a         db  0x48 ; 'H'
0000000000007d2b         db  0x0b ; '.'
0000000000007d2c         db  0x72 ; 'r'
0000000000007d2d         db  0x0e ; '.'
0000000000007d2e         db  0x68 ; 'h'
0000000000007d2f         db  0x45 ; 'E'
0000000000007d30         db  0x0e ; '.'
0000000000007d31         db  0x70 ; 'p'
0000000000007d32         db  0x42 ; 'B'
0000000000007d33         db  0x0e ; '.'
0000000000007d34         db  0x78 ; 'x'
0000000000007d35         db  0x42 ; 'B'
0000000000007d36         db  0x0e ; '.'
0000000000007d37         db  0x80 ; '.'
0000000000007d38         db  0x01 ; '.'
0000000000007d39         db  0x5e ; '^'
0000000000007d3a         db  0x0e ; '.'
0000000000007d3b         db  0x60 ; '`'
0000000000007d3c         db  0x44 ; 'D'
0000000000007d3d         db  0x0a ; '.'
0000000000007d3e         db  0x0e ; '.'
0000000000007d3f         db  0x38 ; '8'
0000000000007d40         db  0x41 ; 'A'
0000000000007d41         db  0x0e ; '.'
0000000000007d42         db  0x30 ; '0'
0000000000007d43         db  0x41 ; 'A'
0000000000007d44         db  0x0e ; '.'
0000000000007d45         db  0x28 ; '('
0000000000007d46         db  0x42 ; 'B'
0000000000007d47         db  0x0e ; '.'
0000000000007d48         db  0x20 ; ' '
0000000000007d49         db  0x42 ; 'B'
0000000000007d4a         db  0x0e ; '.'
0000000000007d4b         db  0x18 ; '.'
0000000000007d4c         db  0x42 ; 'B'
0000000000007d4d         db  0x0e ; '.'
0000000000007d4e         db  0x10 ; '.'
0000000000007d4f         db  0x42 ; 'B'
0000000000007d50         db  0x0e ; '.'
0000000000007d51         db  0x08 ; '.'
0000000000007d52         db  0x41 ; 'A'
0000000000007d53         db  0x0b ; '.'
0000000000007d54         db  0x79 ; 'y'
0000000000007d55         db  0x0a ; '.'
0000000000007d56         db  0x0e ; '.'
0000000000007d57         db  0x68 ; 'h'
0000000000007d58         db  0x42 ; 'B'
0000000000007d59         db  0x0e ; '.'
0000000000007d5a         db  0x70 ; 'p'
0000000000007d5b         db  0x42 ; 'B'
0000000000007d5c         db  0x0e ; '.'
0000000000007d5d         db  0x78 ; 'x'
0000000000007d5e         db  0x42 ; 'B'
0000000000007d5f         db  0x0e ; '.'
0000000000007d60         db  0x80 ; '.'
0000000000007d61         db  0x01 ; '.'
0000000000007d62         db  0x51 ; 'Q'
0000000000007d63         db  0x0b ; '.'
0000000000007d64         dd         0x00000010                                  ; Length of the record
0000000000007d68         dd         0x000008f0                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007d6c         db         0x64, 0xd6, 2 dup (0xff)                    ; begin 0x53d0
0000000000007d70         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x53f0)
0000000000007d74         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007d75         align      8
0000000000007d78         dd         0x00000018                                  ; Length of the record
0000000000007d7c         dd         0x00000904                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007d80         db         0x70, 0xd6, 2 dup (0xff)                    ; begin 0x53f0
0000000000007d84         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x5468)
0000000000007d88         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007d89         db  0x44 ; 'D'
0000000000007d8a         db  0x0e ; '.'
0000000000007d8b         db  0x70 ; 'p'
0000000000007d8c         db  0x02 ; '.'
0000000000007d8d         db  0x60 ; '`'
0000000000007d8e         db  0x0a ; '.'
0000000000007d8f         db  0x0e ; '.'
0000000000007d90         db  0x08 ; '.'
0000000000007d91         db  0x41 ; 'A'
0000000000007d92         db  0x0b ; '.'
0000000000007d93         db  0x00 ; '.'
0000000000007d94         dd         0x00000028                                  ; Length of the record
0000000000007d98         dd         0x00000920                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007d9c         db         0xd4, 0xd6, 2 dup (0xff)                    ; begin 0x5470
0000000000007da0         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x5545)
0000000000007da4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007da5         db  0x41 ; 'A'
0000000000007da6         db  0x0e ; '.'
0000000000007da7         db  0x10 ; '.'
0000000000007da8         db  0x86 ; '.'
0000000000007da9         db  0x02 ; '.'
0000000000007daa         db  0x41 ; 'A'
0000000000007dab         db  0x0e ; '.'
0000000000007dac         db  0x18 ; '.'
0000000000007dad         db  0x83 ; '.'
0000000000007dae         db  0x03 ; '.'
0000000000007daf         db  0x50 ; 'P'
0000000000007db0         db  0x0e ; '.'
0000000000007db1         db  0xd0 ; '.'
0000000000007db2         db  0x01 ; '.'
0000000000007db3         db  0x02 ; '.'
0000000000007db4         db  0xab ; '.'
0000000000007db5         db  0x0a ; '.'
0000000000007db6         db  0x0e ; '.'
0000000000007db7         db  0x18 ; '.'
0000000000007db8         db  0x41 ; 'A'
0000000000007db9         db  0x0e ; '.'
0000000000007dba         db  0x10 ; '.'
0000000000007dbb         db  0x41 ; 'A'
0000000000007dbc         db  0x0e ; '.'
0000000000007dbd         db  0x08 ; '.'
0000000000007dbe         db  0x41 ; 'A'
0000000000007dbf         db  0x0b ; '.'
0000000000007dc0         dd         0x0000001c                                  ; Length of the record
0000000000007dc4         dd         0x0000094c                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007dc8         db         0x88, 0xd7, 2 dup (0xff)                    ; begin 0x5550
0000000000007dcc         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x55d0)
0000000000007dd0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007dd1         db  0x41 ; 'A'
0000000000007dd2         db  0x0e ; '.'
0000000000007dd3         db  0x10 ; '.'
0000000000007dd4         db  0x83 ; '.'
0000000000007dd5         db  0x02 ; '.'
0000000000007dd6         db  0x02 ; '.'
0000000000007dd7         db  0x7a ; 'z'
0000000000007dd8         db  0x0e ; '.'
0000000000007dd9         db  0x08 ; '.'
0000000000007dda         db  0x00 ; '.'
0000000000007ddb         db  0x00 ; '.'
0000000000007ddc         db  0x00 ; '.'
0000000000007ddd         db  0x00 ; '.'
0000000000007dde         db  0x00 ; '.'
0000000000007ddf         db  0x00 ; '.'
0000000000007de0         dd         0x00000018                                  ; Length of the record
0000000000007de4         dd         0x0000096c                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007de8         db         0xe8, 0xd7, 2 dup (0xff)                    ; begin 0x55d0
0000000000007dec         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x55ea)
0000000000007df0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007df1         db  0x41 ; 'A'
0000000000007df2         db  0x0e ; '.'
0000000000007df3         db  0x10 ; '.'
0000000000007df4         db  0x83 ; '.'
0000000000007df5         db  0x02 ; '.'
0000000000007df6         db  0x53 ; 'S'
0000000000007df7         db  0x0a ; '.'
0000000000007df8         db  0x0e ; '.'
0000000000007df9         db  0x08 ; '.'
0000000000007dfa         db  0x41 ; 'A'
0000000000007dfb         db  0x0b ; '.'
0000000000007dfc         dd         0x00000010                                  ; Length of the record
0000000000007e00         dd         0x00000988                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007e04         db         0xec, 0xd7, 2 dup (0xff)                    ; begin 0x55f0
0000000000007e08         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x5614)
0000000000007e0c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007e0d         db  0x5f ; '_'
0000000000007e0e         db  0x0e ; '.'
0000000000007e0f         db  0x10 ; '.'
0000000000007e10         dd         0x00000010                                  ; Length of the record
0000000000007e14         dd         0x0000099c                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007e18         db         0x08, 0xd8, 2 dup (0xff)                    ; begin 0x5620
0000000000007e1c         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x5622)
0000000000007e20         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007e21         align      4
0000000000007e24         dd         0x00000020                                  ; Length of the record
0000000000007e28         dd         0x000009b0                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007e2c         db         0x04, 0xd8, 2 dup (0xff)                    ; begin 0x5630
0000000000007e30         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x5666)
0000000000007e34         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007e35         db  0x44 ; 'D'
0000000000007e36         db  0x0e ; '.'
0000000000007e37         db  0x10 ; '.'
0000000000007e38         db  0x83 ; '.'
0000000000007e39         db  0x02 ; '.'
0000000000007e3a         db  0x5d ; ']'
0000000000007e3b         db  0x0a ; '.'
0000000000007e3c         db  0x0e ; '.'
0000000000007e3d         db  0x08 ; '.'
0000000000007e3e         db  0x47 ; 'G'
0000000000007e3f         db  0x0b ; '.'
0000000000007e40         db  0x48 ; 'H'
0000000000007e41         db  0x0a ; '.'
0000000000007e42         db  0x0e ; '.'
0000000000007e43         db  0x08 ; '.'
0000000000007e44         db  0x41 ; 'A'
0000000000007e45         db  0x0b ; '.'
0000000000007e46         db  0x00 ; '.'
0000000000007e47         db  0x00 ; '.'
0000000000007e48         dd         0x00000010                                  ; Length of the record
0000000000007e4c         dd         0x000009d4                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007e50         db         0x20, 0xd8, 2 dup (0xff)                    ; begin 0x5670
0000000000007e54         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x5694)
0000000000007e58         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007e59         db  0x5f ; '_'
0000000000007e5a         db  0x0e ; '.'
0000000000007e5b         db  0x10 ; '.'
0000000000007e5c         dd         0x00000014                                  ; Length of the record
0000000000007e60         dd         0x000009e8                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007e64         db         0x3c, 0xd8, 2 dup (0xff)                    ; begin 0x56a0
0000000000007e68         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x5722)
0000000000007e6c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007e6d         db  0x02 ; '.'
0000000000007e6e         db  0x5f ; '_'
0000000000007e6f         db  0x0e ; '.'
0000000000007e70         db  0x10 ; '.'
0000000000007e71         db  0x49 ; 'I'
0000000000007e72         db  0x0e ; '.'
0000000000007e73         db  0x08 ; '.'
0000000000007e74         dd         0x00000014                                  ; Length of the record
0000000000007e78         dd         0x00000a00                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007e7c         db         0xb4, 0xd8, 2 dup (0xff)                    ; begin 0x5730
0000000000007e80         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x577a)
0000000000007e84         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007e85         db  0x02 ; '.'
0000000000007e86         db  0x45 ; 'E'
0000000000007e87         db  0x0e ; '.'
0000000000007e88         db  0x10 ; '.'
0000000000007e89         db  0x00 ; '.'
0000000000007e8a         db  0x00 ; '.'
0000000000007e8b         db  0x00 ; '.'
0000000000007e8c         dd         0x00000018                                  ; Length of the record
0000000000007e90         dd         0x00000a18                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007e94         db         0xec, 0xd8, 2 dup (0xff)                    ; begin 0x5780
0000000000007e98         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x5797)
0000000000007e9c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007e9d         db  0x41 ; 'A'
0000000000007e9e         db  0x0e ; '.'
0000000000007e9f         db  0x10 ; '.'
0000000000007ea0         db  0x83 ; '.'
0000000000007ea1         db  0x02 ; '.'
0000000000007ea2         db  0x51 ; 'Q'
0000000000007ea3         db  0x0e ; '.'
0000000000007ea4         db  0x08 ; '.'
0000000000007ea5         db  0x00 ; '.'
0000000000007ea6         db  0x00 ; '.'
0000000000007ea7         db  0x00 ; '.'
0000000000007ea8         dd         0x00000018                                  ; Length of the record
0000000000007eac         dd         0x00000a34                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007eb0         db         0xf0, 0xd8, 2 dup (0xff)                    ; begin 0x57a0
0000000000007eb4         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x57ce)
0000000000007eb8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007eb9         db  0x47 ; 'G'
0000000000007eba         db  0x0e ; '.'
0000000000007ebb         db  0x10 ; '.'
0000000000007ebc         db  0x61 ; 'a'
0000000000007ebd         db  0x0a ; '.'
0000000000007ebe         db  0x0e ; '.'
0000000000007ebf         db  0x08 ; '.'
0000000000007ec0         db  0x41 ; 'A'
0000000000007ec1         db  0x0b ; '.'
0000000000007ec2         db  0x00 ; '.'
0000000000007ec3         db  0x00 ; '.'
0000000000007ec4         dd         0x00000024                                  ; Length of the record
0000000000007ec8         dd         0x00000a50                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007ecc         db         0x04, 0xd9, 2 dup (0xff)                    ; begin 0x57d0
0000000000007ed0         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x57f8)
0000000000007ed4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007ed5         db  0x41 ; 'A'
0000000000007ed6         db  0x0e ; '.'
0000000000007ed7         db  0x10 ; '.'
0000000000007ed8         db  0x86 ; '.'
0000000000007ed9         db  0x02 ; '.'
0000000000007eda         db  0x41 ; 'A'
0000000000007edb         db  0x0e ; '.'
0000000000007edc         db  0x18 ; '.'
0000000000007edd         db  0x83 ; '.'
0000000000007ede         db  0x03 ; '.'
0000000000007edf         db  0x4d ; 'M'
0000000000007ee0         db  0x0e ; '.'
0000000000007ee1         db  0x20 ; ' '
0000000000007ee2         db  0x49 ; 'I'
0000000000007ee3         db  0x0e ; '.'
0000000000007ee4         db  0x18 ; '.'
0000000000007ee5         db  0x47 ; 'G'
0000000000007ee6         db  0x0e ; '.'
0000000000007ee7         db  0x10 ; '.'
0000000000007ee8         db  0x41 ; 'A'
0000000000007ee9         db  0x0e ; '.'
0000000000007eea         db  0x08 ; '.'
0000000000007eeb         db  0x00 ; '.'
0000000000007eec         dd         0x00000018                                  ; Length of the record
0000000000007ef0         dd         0x00000a78                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007ef4         db         0x0c, 0xd9, 2 dup (0xff)                    ; begin 0x5800
0000000000007ef8         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5813)
0000000000007efc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007efd         db  0x41 ; 'A'
0000000000007efe         db  0x0e ; '.'
0000000000007eff         db  0x10 ; '.'
0000000000007f00         db  0x83 ; '.'
0000000000007f01         db  0x02 ; '.'
0000000000007f02         db  0x50 ; 'P'
0000000000007f03         db  0x0e ; '.'
0000000000007f04         db  0x08 ; '.'
0000000000007f05         db  0x00 ; '.'
0000000000007f06         db  0x00 ; '.'
0000000000007f07         db  0x00 ; '.'
0000000000007f08         dd         0x00000014                                  ; Length of the record
0000000000007f0c         dd         0x00000a94                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007f10         db         0x10, 0xd9, 2 dup (0xff)                    ; begin 0x5820
0000000000007f14         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x5855)
0000000000007f18         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007f19         db  0x4b ; 'K'
0000000000007f1a         db  0x0e ; '.'
0000000000007f1b         db  0x10 ; '.'
0000000000007f1c         db  0x00 ; '.'
0000000000007f1d         db  0x00 ; '.'
0000000000007f1e         db  0x00 ; '.'
0000000000007f1f         db  0x00 ; '.'
0000000000007f20         dd         0x0000004c                                  ; Length of the record
0000000000007f24         dd         0x00000aac                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007f28         db         0x38, 0xd9, 2 dup (0xff)                    ; begin 0x5860
0000000000007f2c         db         0x1c, 0x04, 2 dup (0x00)                    ; length 0x41c (end at 0x5c7c)
0000000000007f30         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007f31         db  0x42 ; 'B'
0000000000007f32         db  0x0e ; '.'
0000000000007f33         db  0x10 ; '.'
0000000000007f34         db  0x8f ; '.'
0000000000007f35         db  0x02 ; '.'
0000000000007f36         db  0x42 ; 'B'
0000000000007f37         db  0x0e ; '.'
0000000000007f38         db  0x18 ; '.'
0000000000007f39         db  0x8e ; '.'
0000000000007f3a         db  0x03 ; '.'
0000000000007f3b         db  0x42 ; 'B'
0000000000007f3c         db  0x0e ; '.'
0000000000007f3d         db  0x20 ; ' '
0000000000007f3e         db  0x8d ; '.'
0000000000007f3f         db  0x04 ; '.'
0000000000007f40         db  0x42 ; 'B'
0000000000007f41         db  0x0e ; '.'
0000000000007f42         db  0x28 ; '('
0000000000007f43         db  0x8c ; '.'
0000000000007f44         db  0x05 ; '.'
0000000000007f45         db  0x41 ; 'A'
0000000000007f46         db  0x0e ; '.'
0000000000007f47         db  0x30 ; '0'
0000000000007f48         db  0x86 ; '.'
0000000000007f49         db  0x06 ; '.'
0000000000007f4a         db  0x41 ; 'A'
0000000000007f4b         db  0x0e ; '.'
0000000000007f4c         db  0x38 ; '8'
0000000000007f4d         db  0x83 ; '.'
0000000000007f4e         db  0x07 ; '.'
0000000000007f4f         db  0x44 ; 'D'
0000000000007f50         db  0x0e ; '.'
0000000000007f51         db  0x60 ; '`'
0000000000007f52         db  0x02 ; '.'
0000000000007f53         db  0xe9 ; '.'
0000000000007f54         db  0x0a ; '.'
0000000000007f55         db  0x0e ; '.'
0000000000007f56         db  0x38 ; '8'
0000000000007f57         db  0x41 ; 'A'
0000000000007f58         db  0x0e ; '.'
0000000000007f59         db  0x30 ; '0'
0000000000007f5a         db  0x41 ; 'A'
0000000000007f5b         db  0x0e ; '.'
0000000000007f5c         db  0x28 ; '('
0000000000007f5d         db  0x42 ; 'B'
0000000000007f5e         db  0x0e ; '.'
0000000000007f5f         db  0x20 ; ' '
0000000000007f60         db  0x42 ; 'B'
0000000000007f61         db  0x0e ; '.'
0000000000007f62         db  0x18 ; '.'
0000000000007f63         db  0x42 ; 'B'
0000000000007f64         db  0x0e ; '.'
0000000000007f65         db  0x10 ; '.'
0000000000007f66         db  0x42 ; 'B'
0000000000007f67         db  0x0e ; '.'
0000000000007f68         db  0x08 ; '.'
0000000000007f69         db  0x47 ; 'G'
0000000000007f6a         db  0x0b ; '.'
0000000000007f6b         db  0x00 ; '.'
0000000000007f6c         db  0x00 ; '.'
0000000000007f6d         db  0x00 ; '.'
0000000000007f6e         db  0x00 ; '.'
0000000000007f6f         db  0x00 ; '.'
0000000000007f70         dd         0x00000034                                  ; Length of the record
0000000000007f74         dd         0x00000afc                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007f78         db         0x08, 0xdd, 2 dup (0xff)                    ; begin 0x5c80
0000000000007f7c         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x5cfb)
0000000000007f80         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007f81         db  0x42 ; 'B'
0000000000007f82         db  0x0e ; '.'
0000000000007f83         db  0x10 ; '.'
0000000000007f84         db  0x8c ; '.'
0000000000007f85         db  0x02 ; '.'
0000000000007f86         db  0x41 ; 'A'
0000000000007f87         db  0x0e ; '.'
0000000000007f88         db  0x18 ; '.'
0000000000007f89         db  0x86 ; '.'
0000000000007f8a         db  0x03 ; '.'
0000000000007f8b         db  0x41 ; 'A'
0000000000007f8c         db  0x0e ; '.'
0000000000007f8d         db  0x20 ; ' '
0000000000007f8e         db  0x83 ; '.'
0000000000007f8f         db  0x04 ; '.'
0000000000007f90         db  0x7d ; '}'
0000000000007f91         db  0x0a ; '.'
0000000000007f92         db  0x0e ; '.'
0000000000007f93         db  0x18 ; '.'
0000000000007f94         db  0x41 ; 'A'
0000000000007f95         db  0x0e ; '.'
0000000000007f96         db  0x10 ; '.'
0000000000007f97         db  0x42 ; 'B'
0000000000007f98         db  0x0e ; '.'
0000000000007f99         db  0x08 ; '.'
0000000000007f9a         db  0x44 ; 'D'
0000000000007f9b         db  0x0b ; '.'
0000000000007f9c         db  0x60 ; '`'
0000000000007f9d         db  0x0a ; '.'
0000000000007f9e         db  0x0e ; '.'
0000000000007f9f         db  0x18 ; '.'
0000000000007fa0         db  0x41 ; 'A'
0000000000007fa1         db  0x0e ; '.'
0000000000007fa2         db  0x10 ; '.'
0000000000007fa3         db  0x42 ; 'B'
0000000000007fa4         db  0x0e ; '.'
0000000000007fa5         db  0x08 ; '.'
0000000000007fa6         db  0x45 ; 'E'
0000000000007fa7         db  0x0b ; '.'
0000000000007fa8         dd         0x0000001c                                  ; Length of the record
0000000000007fac         dd         0x00000b34                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007fb0         db         0x50, 0xdd, 2 dup (0xff)                    ; begin 0x5d00
0000000000007fb4         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x5d40)
0000000000007fb8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007fb9         db  0x44 ; 'D'
0000000000007fba         db  0x0e ; '.'
0000000000007fbb         db  0x10 ; '.'
0000000000007fbc         db  0x83 ; '.'
0000000000007fbd         db  0x02 ; '.'
0000000000007fbe         db  0x5a ; 'Z'
0000000000007fbf         db  0x0a ; '.'
0000000000007fc0         db  0x0e ; '.'
0000000000007fc1         db  0x08 ; '.'
0000000000007fc2         db  0x4a ; 'J'
0000000000007fc3         db  0x0b ; '.'
0000000000007fc4         db  0x53 ; 'S'
0000000000007fc5         db  0x0e ; '.'
0000000000007fc6         db  0x08 ; '.'
0000000000007fc7         db  0x00 ; '.'
0000000000007fc8         dd         0x0000002c                                  ; Length of the record
0000000000007fcc         dd         0x00000b54                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000007fd0         db         0x70, 0xdd, 2 dup (0xff)                    ; begin 0x5d40
0000000000007fd4         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x5d97)
0000000000007fd8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007fd9         db  0x63 ; 'c'
0000000000007fda         db  0x0e ; '.'
0000000000007fdb         db  0x10 ; '.'
0000000000007fdc         db  0x8c ; '.'
0000000000007fdd         db  0x02 ; '.'
0000000000007fde         db  0x41 ; 'A'
0000000000007fdf         db  0x0e ; '.'
0000000000007fe0         db  0x18 ; '.'
0000000000007fe1         db  0x86 ; '.'
0000000000007fe2         db  0x03 ; '.'
0000000000007fe3         db  0x44 ; 'D'
0000000000007fe4         db  0x0e ; '.'
0000000000007fe5         db  0x20 ; ' '
0000000000007fe6         db  0x83 ; '.'
0000000000007fe7         db  0x04 ; '.'
0000000000007fe8         db  0x6b ; 'k'
0000000000007fe9         db  0x0e ; '.'
0000000000007fea         db  0x18 ; '.'
0000000000007feb         db  0x41 ; 'A'
0000000000007fec         db  0x0e ; '.'
0000000000007fed         db  0x10 ; '.'
0000000000007fee         db  0x42 ; 'B'
0000000000007fef         db  0x0e ; '.'
0000000000007ff0         db  0x08 ; '.'
0000000000007ff1         db  0x00 ; '.'
0000000000007ff2         db  0x00 ; '.'
0000000000007ff3         db  0x00 ; '.'
0000000000007ff4         db  0x00 ; '.'
0000000000007ff5         db  0x00 ; '.'
0000000000007ff6         db  0x00 ; '.'
0000000000007ff7         db  0x00 ; '.'
0000000000007ff8         dd         0x0000003c                                  ; Length of the record
0000000000007ffc         dd         0x00000b84                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000008000         db         0xa0, 0xdd, 2 dup (0xff)                    ; begin 0x5da0
0000000000008004         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x5e23)
0000000000008008         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008009         db  0x42 ; 'B'
000000000000800a         db  0x0e ; '.'
000000000000800b         db  0x10 ; '.'
000000000000800c         db  0x8d ; '.'
000000000000800d         db  0x02 ; '.'
000000000000800e         db  0x42 ; 'B'
000000000000800f         db  0x0e ; '.'
0000000000008010         db  0x18 ; '.'
0000000000008011         db  0x8c ; '.'
0000000000008012         db  0x03 ; '.'
0000000000008013         db  0x44 ; 'D'
0000000000008014         db  0x0e ; '.'
0000000000008015         db  0x20 ; ' '
0000000000008016         db  0x86 ; '.'
0000000000008017         db  0x04 ; '.'
0000000000008018         db  0x41 ; 'A'
0000000000008019         db  0x0e ; '.'
000000000000801a         db  0x28 ; '('
000000000000801b         db  0x83 ; '.'
000000000000801c         db  0x05 ; '.'
000000000000801d         db  0x4a ; 'J'
000000000000801e         db  0x0e ; '.'
000000000000801f         db  0x40 ; '@'
0000000000008020         db  0x02 ; '.'
0000000000008021         db  0x64 ; 'd'
0000000000008022         db  0x0a ; '.'
0000000000008023         db  0x0e ; '.'
0000000000008024         db  0x28 ; '('
0000000000008025         db  0x41 ; 'A'
0000000000008026         db  0x0e ; '.'
0000000000008027         db  0x20 ; ' '
0000000000008028         db  0x41 ; 'A'
0000000000008029         db  0x0e ; '.'
000000000000802a         db  0x18 ; '.'
000000000000802b         db  0x42 ; 'B'
000000000000802c         db  0x0e ; '.'
000000000000802d         db  0x10 ; '.'
000000000000802e         db  0x42 ; 'B'
000000000000802f         db  0x0e ; '.'
0000000000008030         db  0x08 ; '.'
0000000000008031         db  0x41 ; 'A'
0000000000008032         db  0x0b ; '.'
0000000000008033         db  0x00 ; '.'
0000000000008034         db  0x00 ; '.'
0000000000008035         db  0x00 ; '.'
0000000000008036         db  0x00 ; '.'
0000000000008037         db  0x00 ; '.'
0000000000008038         dd         0x00000010                                  ; Length of the record
000000000000803c         dd         0x00000bc4                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000008040         db         0xf0, 0xdd, 2 dup (0xff)                    ; begin 0x5e30
0000000000008044         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x5e3a)
0000000000008048         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008049         align      4
000000000000804c         dd         0x00000048                                  ; Length of the record
0000000000008050         dd         0x00000bd8                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000008054         db         0xec, 0xdd, 2 dup (0xff)                    ; begin 0x5e40
0000000000008058         db         0x16, 0x01, 2 dup (0x00)                    ; length 0x116 (end at 0x5f56)
000000000000805c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000805d         db  0x42 ; 'B'
000000000000805e         db  0x0e ; '.'
000000000000805f         db  0x10 ; '.'
0000000000008060         db  0x8f ; '.'
0000000000008061         db  0x02 ; '.'
0000000000008062         db  0x42 ; 'B'
0000000000008063         db  0x0e ; '.'
0000000000008064         db  0x18 ; '.'
0000000000008065         db  0x8e ; '.'
0000000000008066         db  0x03 ; '.'
0000000000008067         db  0x45 ; 'E'
0000000000008068         db  0x0e ; '.'
0000000000008069         db  0x20 ; ' '
000000000000806a         db  0x8d ; '.'
000000000000806b         db  0x04 ; '.'
000000000000806c         db  0x42 ; 'B'
000000000000806d         db  0x0e ; '.'
000000000000806e         db  0x28 ; '('
000000000000806f         db  0x8c ; '.'
0000000000008070         db  0x05 ; '.'
0000000000008071         db  0x44 ; 'D'
0000000000008072         db  0x0e ; '.'
0000000000008073         db  0x30 ; '0'
0000000000008074         db  0x86 ; '.'
0000000000008075         db  0x06 ; '.'
0000000000008076         db  0x41 ; 'A'
0000000000008077         db  0x0e ; '.'
0000000000008078         db  0x38 ; '8'
0000000000008079         db  0x83 ; '.'
000000000000807a         db  0x07 ; '.'
000000000000807b         db  0x47 ; 'G'
000000000000807c         db  0x0e ; '.'
000000000000807d         db  0x60 ; '`'
000000000000807e         db  0x02 ; '.'
000000000000807f         db  0xde ; '.'
0000000000008080         db  0x0a ; '.'
0000000000008081         db  0x0e ; '.'
0000000000008082         db  0x38 ; '8'
0000000000008083         db  0x41 ; 'A'
0000000000008084         db  0x0e ; '.'
0000000000008085         db  0x30 ; '0'
0000000000008086         db  0x41 ; 'A'
0000000000008087         db  0x0e ; '.'
0000000000008088         db  0x28 ; '('
0000000000008089         db  0x42 ; 'B'
000000000000808a         db  0x0e ; '.'
000000000000808b         db  0x20 ; ' '
000000000000808c         db  0x42 ; 'B'
000000000000808d         db  0x0e ; '.'
000000000000808e         db  0x18 ; '.'
000000000000808f         db  0x42 ; 'B'
0000000000008090         db  0x0e ; '.'
0000000000008091         db  0x10 ; '.'
0000000000008092         db  0x42 ; 'B'
0000000000008093         db  0x0e ; '.'
0000000000008094         db  0x08 ; '.'
0000000000008095         db  0x41 ; 'A'
0000000000008096         db  0x0b ; '.'
0000000000008097         db  0x00 ; '.'
0000000000008098         dd         0x00000028                                  ; Length of the record
000000000000809c         dd         0x00000c24                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
00000000000080a0         db         0xc0, 0xde, 2 dup (0xff)                    ; begin 0x5f60
00000000000080a4         db         0x73, 3 dup (0x00)                          ; length 0x73 (end at 0x5fd3)
00000000000080a8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000080a9         db  0x46 ; 'F'
00000000000080aa         db  0x0e ; '.'
00000000000080ab         db  0x10 ; '.'
00000000000080ac         db  0x8c ; '.'
00000000000080ad         db  0x02 ; '.'
00000000000080ae         db  0x46 ; 'F'
00000000000080af         db  0x0e ; '.'
00000000000080b0         db  0x18 ; '.'
00000000000080b1         db  0x86 ; '.'
00000000000080b2         db  0x03 ; '.'
00000000000080b3         db  0x44 ; 'D'
00000000000080b4         db  0x0e ; '.'
00000000000080b5         db  0x20 ; ' '
00000000000080b6         db  0x83 ; '.'
00000000000080b7         db  0x04 ; '.'
00000000000080b8         db  0x7f ; '.'
00000000000080b9         db  0x0a ; '.'
00000000000080ba         db  0x0e ; '.'
00000000000080bb         db  0x18 ; '.'
00000000000080bc         db  0x41 ; 'A'
00000000000080bd         db  0x0e ; '.'
00000000000080be         db  0x10 ; '.'
00000000000080bf         db  0x42 ; 'B'
00000000000080c0         db  0x0e ; '.'
00000000000080c1         db  0x08 ; '.'
00000000000080c2         db  0x4e ; 'N'
00000000000080c3         db  0x0b ; '.'
00000000000080c4         dd         0x0000005c                                  ; Length of the record
00000000000080c8         dd         0x00000c50                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
00000000000080cc         db         0x14, 0xdf, 2 dup (0xff)                    ; begin 0x5fe0
00000000000080d0         db         0x20, 0x01, 2 dup (0x00)                    ; length 0x120 (end at 0x6100)
00000000000080d4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000080d5         db  0x42 ; 'B'
00000000000080d6         db  0x0e ; '.'
00000000000080d7         db  0x10 ; '.'
00000000000080d8         db  0x8f ; '.'
00000000000080d9         db  0x02 ; '.'
00000000000080da         db  0x42 ; 'B'
00000000000080db         db  0x0e ; '.'
00000000000080dc         db  0x18 ; '.'
00000000000080dd         db  0x8e ; '.'
00000000000080de         db  0x03 ; '.'
00000000000080df         db  0x45 ; 'E'
00000000000080e0         db  0x0e ; '.'
00000000000080e1         db  0x20 ; ' '
00000000000080e2         db  0x8d ; '.'
00000000000080e3         db  0x04 ; '.'
00000000000080e4         db  0x42 ; 'B'
00000000000080e5         db  0x0e ; '.'
00000000000080e6         db  0x28 ; '('
00000000000080e7         db  0x8c ; '.'
00000000000080e8         db  0x05 ; '.'
00000000000080e9         db  0x43 ; 'C'
00000000000080ea         db  0x0e ; '.'
00000000000080eb         db  0x30 ; '0'
00000000000080ec         db  0x86 ; '.'
00000000000080ed         db  0x06 ; '.'
00000000000080ee         db  0x41 ; 'A'
00000000000080ef         db  0x0e ; '.'
00000000000080f0         db  0x38 ; '8'
00000000000080f1         db  0x83 ; '.'
00000000000080f2         db  0x07 ; '.'
00000000000080f3         db  0x56 ; 'V'
00000000000080f4         db  0x0e ; '.'
00000000000080f5         db  0x40 ; '@'
00000000000080f6         db  0x02 ; '.'
00000000000080f7         db  0xd3 ; '.'
00000000000080f8         db  0x0a ; '.'
00000000000080f9         db  0x0e ; '.'
00000000000080fa         db  0x38 ; '8'
00000000000080fb         db  0x41 ; 'A'
00000000000080fc         db  0x0e ; '.'
00000000000080fd         db  0x30 ; '0'
00000000000080fe         db  0x41 ; 'A'
00000000000080ff         db  0x0e ; '.'
0000000000008100         db  0x28 ; '('
0000000000008101         db  0x42 ; 'B'
0000000000008102         db  0x0e ; '.'
0000000000008103         db  0x20 ; ' '
0000000000008104         db  0x42 ; 'B'
0000000000008105         db  0x0e ; '.'
0000000000008106         db  0x18 ; '.'
0000000000008107         db  0x42 ; 'B'
0000000000008108         db  0x0e ; '.'
0000000000008109         db  0x10 ; '.'
000000000000810a         db  0x42 ; 'B'
000000000000810b         db  0x0e ; '.'
000000000000810c         db  0x08 ; '.'
000000000000810d         db  0x46 ; 'F'
000000000000810e         db  0x0b ; '.'
000000000000810f         db  0x44 ; 'D'
0000000000008110         db  0x0e ; '.'
0000000000008111         db  0x38 ; '8'
0000000000008112         db  0x46 ; 'F'
0000000000008113         db  0x0e ; '.'
0000000000008114         db  0x30 ; '0'
0000000000008115         db  0x41 ; 'A'
0000000000008116         db  0x0e ; '.'
0000000000008117         db  0x28 ; '('
0000000000008118         db  0x42 ; 'B'
0000000000008119         db  0x0e ; '.'
000000000000811a         db  0x20 ; ' '
000000000000811b         db  0x42 ; 'B'
000000000000811c         db  0x0e ; '.'
000000000000811d         db  0x18 ; '.'
000000000000811e         db  0x42 ; 'B'
000000000000811f         db  0x0e ; '.'
0000000000008120         db  0x10 ; '.'
0000000000008121         db  0x42 ; 'B'
0000000000008122         db  0x0e ; '.'
0000000000008123         db  0x08 ; '.'
0000000000008124         dd         0x00000048                                  ; Length of the record
0000000000008128         dd         0x00000cb0                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
000000000000812c         db         0xd4, 0xdf, 2 dup (0xff)                    ; begin 0x6100
0000000000008130         db         0x6d, 3 dup (0x00)                          ; length 0x6d (end at 0x616d)
0000000000008134         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008135         db  0x42 ; 'B'
0000000000008136         db  0x0e ; '.'
0000000000008137         db  0x10 ; '.'
0000000000008138         db  0x8f ; '.'
0000000000008139         db  0x02 ; '.'
000000000000813a         db  0x42 ; 'B'
000000000000813b         db  0x0e ; '.'
000000000000813c         db  0x18 ; '.'
000000000000813d         db  0x8e ; '.'
000000000000813e         db  0x03 ; '.'
000000000000813f         db  0x45 ; 'E'
0000000000008140         db  0x0e ; '.'
0000000000008141         db  0x20 ; ' '
0000000000008142         db  0x8d ; '.'
0000000000008143         db  0x04 ; '.'
0000000000008144         db  0x42 ; 'B'
0000000000008145         db  0x0e ; '.'
0000000000008146         db  0x28 ; '('
0000000000008147         db  0x8c ; '.'
0000000000008148         db  0x05 ; '.'
0000000000008149         db  0x44 ; 'D'
000000000000814a         db  0x0e ; '.'
000000000000814b         db  0x30 ; '0'
000000000000814c         db  0x86 ; '.'
000000000000814d         db  0x06 ; '.'
000000000000814e         db  0x41 ; 'A'
000000000000814f         db  0x0e ; '.'
0000000000008150         db  0x38 ; '8'
0000000000008151         db  0x83 ; '.'
0000000000008152         db  0x07 ; '.'
0000000000008153         db  0x50 ; 'P'
0000000000008154         db  0x0e ; '.'
0000000000008155         db  0x40 ; '@'
0000000000008156         db  0x5a ; 'Z'
0000000000008157         db  0x0a ; '.'
0000000000008158         db  0x0e ; '.'
0000000000008159         db  0x38 ; '8'
000000000000815a         db  0x41 ; 'A'
000000000000815b         db  0x0e ; '.'
000000000000815c         db  0x30 ; '0'
000000000000815d         db  0x41 ; 'A'
000000000000815e         db  0x0e ; '.'
000000000000815f         db  0x28 ; '('
0000000000008160         db  0x42 ; 'B'
0000000000008161         db  0x0e ; '.'
0000000000008162         db  0x20 ; ' '
0000000000008163         db  0x42 ; 'B'
0000000000008164         db  0x0e ; '.'
0000000000008165         db  0x18 ; '.'
0000000000008166         db  0x42 ; 'B'
0000000000008167         db  0x0e ; '.'
0000000000008168         db  0x10 ; '.'
0000000000008169         db  0x42 ; 'B'
000000000000816a         db  0x0e ; '.'
000000000000816b         db  0x08 ; '.'
000000000000816c         db  0x41 ; 'A'
000000000000816d         db  0x0b ; '.'
000000000000816e         db  0x00 ; '.'
000000000000816f         db  0x00 ; '.'
0000000000008170         dd         0x0000003c                                  ; Length of the record
0000000000008174         dd         0x00000cfc                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000008178         db         0xf8, 0xdf, 2 dup (0xff)                    ; begin 0x6170
000000000000817c         db         0x4d, 3 dup (0x00)                          ; length 0x4d (end at 0x61bd)
0000000000008180         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008181         db  0x42 ; 'B'
0000000000008182         db  0x0e ; '.'
0000000000008183         db  0x10 ; '.'
0000000000008184         db  0x8e ; '.'
0000000000008185         db  0x02 ; '.'
0000000000008186         db  0x42 ; 'B'
0000000000008187         db  0x0e ; '.'
0000000000008188         db  0x18 ; '.'
0000000000008189         db  0x8d ; '.'
000000000000818a         db  0x03 ; '.'
000000000000818b         db  0x42 ; 'B'
000000000000818c         db  0x0e ; '.'
000000000000818d         db  0x20 ; ' '
000000000000818e         db  0x8c ; '.'
000000000000818f         db  0x04 ; '.'
0000000000008190         db  0x41 ; 'A'
0000000000008191         db  0x0e ; '.'
0000000000008192         db  0x28 ; '('
0000000000008193         db  0x86 ; '.'
0000000000008194         db  0x05 ; '.'
0000000000008195         db  0x41 ; 'A'
0000000000008196         db  0x0e ; '.'
0000000000008197         db  0x30 ; '0'
0000000000008198         db  0x83 ; '.'
0000000000008199         db  0x06 ; '.'
000000000000819a         db  0x7a ; 'z'
000000000000819b         db  0x0e ; '.'
000000000000819c         db  0x28 ; '('
000000000000819d         db  0x44 ; 'D'
000000000000819e         db  0x0e ; '.'
000000000000819f         db  0x20 ; ' '
00000000000081a0         db  0x42 ; 'B'
00000000000081a1         db  0x0e ; '.'
00000000000081a2         db  0x18 ; '.'
00000000000081a3         db  0x42 ; 'B'
00000000000081a4         db  0x0e ; '.'
00000000000081a5         db  0x10 ; '.'
00000000000081a6         db  0x42 ; 'B'
00000000000081a7         db  0x0e ; '.'
00000000000081a8         db  0x08 ; '.'
00000000000081a9         db  0x00 ; '.'
00000000000081aa         db  0x00 ; '.'
00000000000081ab         db  0x00 ; '.'
00000000000081ac         db  0x00 ; '.'
00000000000081ad         db  0x00 ; '.'
00000000000081ae         db  0x00 ; '.'
00000000000081af         db  0x00 ; '.'
00000000000081b0         dd         0x0000004c                                  ; Length of the record
00000000000081b4         dd         0x00000d3c                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
00000000000081b8         db         0x08, 0xe0, 2 dup (0xff)                    ; begin 0x61c0
00000000000081bc         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x623d)
00000000000081c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000081c1         db  0x42 ; 'B'
00000000000081c2         db  0x0e ; '.'
00000000000081c3         db  0x10 ; '.'
00000000000081c4         db  0x8c ; '.'
00000000000081c5         db  0x02 ; '.'
00000000000081c6         db  0x41 ; 'A'
00000000000081c7         db  0x0e ; '.'
00000000000081c8         db  0x18 ; '.'
00000000000081c9         db  0x86 ; '.'
00000000000081ca         db  0x03 ; '.'
00000000000081cb         db  0x44 ; 'D'
00000000000081cc         db  0x0e ; '.'
00000000000081cd         db  0x20 ; ' '
00000000000081ce         db  0x83 ; '.'
00000000000081cf         db  0x04 ; '.'
00000000000081d0         db  0x69 ; 'i'
00000000000081d1         db  0x0a ; '.'
00000000000081d2         db  0x0e ; '.'
00000000000081d3         db  0x18 ; '.'
00000000000081d4         db  0x41 ; 'A'
00000000000081d5         db  0x0e ; '.'
00000000000081d6         db  0x10 ; '.'
00000000000081d7         db  0x42 ; 'B'
00000000000081d8         db  0x0e ; '.'
00000000000081d9         db  0x08 ; '.'
00000000000081da         db  0x45 ; 'E'
00000000000081db         db  0x0b ; '.'
00000000000081dc         db  0x55 ; 'U'
00000000000081dd         db  0x0a ; '.'
00000000000081de         db  0x0e ; '.'
00000000000081df         db  0x18 ; '.'
00000000000081e0         db  0x41 ; 'A'
00000000000081e1         db  0x0e ; '.'
00000000000081e2         db  0x10 ; '.'
00000000000081e3         db  0x42 ; 'B'
00000000000081e4         db  0x0e ; '.'
00000000000081e5         db  0x08 ; '.'
00000000000081e6         db  0x48 ; 'H'
00000000000081e7         db  0x0b ; '.'
00000000000081e8         db  0x41 ; 'A'
00000000000081e9         db  0x0a ; '.'
00000000000081ea         db  0x0e ; '.'
00000000000081eb         db  0x18 ; '.'
00000000000081ec         db  0x46 ; 'F'
00000000000081ed         db  0x0e ; '.'
00000000000081ee         db  0x10 ; '.'
00000000000081ef         db  0x42 ; 'B'
00000000000081f0         db  0x0e ; '.'
00000000000081f1         db  0x08 ; '.'
00000000000081f2         db  0x47 ; 'G'
00000000000081f3         db  0x0b ; '.'
00000000000081f4         db  0x49 ; 'I'
00000000000081f5         db  0x0e ; '.'
00000000000081f6         db  0x18 ; '.'
00000000000081f7         db  0x41 ; 'A'
00000000000081f8         db  0x0e ; '.'
00000000000081f9         db  0x10 ; '.'
00000000000081fa         db  0x42 ; 'B'
00000000000081fb         db  0x0e ; '.'
00000000000081fc         db  0x08 ; '.'
00000000000081fd         db  0x00 ; '.'
00000000000081fe         db  0x00 ; '.'
00000000000081ff         db  0x00 ; '.'
0000000000008200         dd         0x0000001c                                  ; Length of the record
0000000000008204         dd         0x00000d8c                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000008208         db         0x38, 0xe0, 2 dup (0xff)                    ; begin 0x6240
000000000000820c         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x62a0)
0000000000008210         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008211         db  0x44 ; 'D'
0000000000008212         db  0x0e ; '.'
0000000000008213         db  0x10 ; '.'
0000000000008214         db  0x75 ; 'u'
0000000000008215         db  0x0a ; '.'
0000000000008216         db  0x0e ; '.'
0000000000008217         db  0x08 ; '.'
0000000000008218         db  0x47 ; 'G'
0000000000008219         db  0x0b ; '.'
000000000000821a         db  0x5f ; '_'
000000000000821b         db  0x0e ; '.'
000000000000821c         db  0x08 ; '.'
000000000000821d         db  0x00 ; '.'
000000000000821e         db  0x00 ; '.'
000000000000821f         db  0x00 ; '.'
0000000000008220         dd         0x0000001c                                  ; Length of the record
0000000000008224         dd         0x00000dac                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000008228         db         0x78, 0xe0, 2 dup (0xff)                    ; begin 0x62a0
000000000000822c         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x62dc)
0000000000008230         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008231         db  0x44 ; 'D'
0000000000008232         db  0x0e ; '.'
0000000000008233         db  0x10 ; '.'
0000000000008234         db  0x61 ; 'a'
0000000000008235         db  0x0a ; '.'
0000000000008236         db  0x0e ; '.'
0000000000008237         db  0x08 ; '.'
0000000000008238         db  0x4b ; 'K'
0000000000008239         db  0x0b ; '.'
000000000000823a         db  0x4b ; 'K'
000000000000823b         db  0x0e ; '.'
000000000000823c         db  0x08 ; '.'
000000000000823d         db  0x00 ; '.'
000000000000823e         db  0x00 ; '.'
000000000000823f         db  0x00 ; '.'
0000000000008240         dd         0x00000044                                  ; Length of the record
0000000000008244         dd         0x00000dcc                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000008248         db         0x98, 0xe0, 2 dup (0xff)                    ; begin 0x62e0
000000000000824c         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x6345)
0000000000008250         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008251         db  0x42 ; 'B'
0000000000008252         db  0x0e ; '.'
0000000000008253         db  0x10 ; '.'
0000000000008254         db  0x8f ; '.'
0000000000008255         db  0x02 ; '.'
0000000000008256         db  0x42 ; 'B'
0000000000008257         db  0x0e ; '.'
0000000000008258         db  0x18 ; '.'
0000000000008259         db  0x8e ; '.'
000000000000825a         db  0x03 ; '.'
000000000000825b         db  0x45 ; 'E'
000000000000825c         db  0x0e ; '.'
000000000000825d         db  0x20 ; ' '
000000000000825e         db  0x8d ; '.'
000000000000825f         db  0x04 ; '.'
0000000000008260         db  0x42 ; 'B'
0000000000008261         db  0x0e ; '.'
0000000000008262         db  0x28 ; '('
0000000000008263         db  0x8c ; '.'
0000000000008264         db  0x05 ; '.'
0000000000008265         db  0x48 ; 'H'
0000000000008266         db  0x0e ; '.'
0000000000008267         db  0x30 ; '0'
0000000000008268         db  0x86 ; '.'
0000000000008269         db  0x06 ; '.'
000000000000826a         db  0x48 ; 'H'
000000000000826b         db  0x0e ; '.'
000000000000826c         db  0x38 ; '8'
000000000000826d         db  0x83 ; '.'
000000000000826e         db  0x07 ; '.'
000000000000826f         db  0x4d ; 'M'
0000000000008270         db  0x0e ; '.'
0000000000008271         db  0x40 ; '@'
0000000000008272         db  0x72 ; 'r'
0000000000008273         db  0x0e ; '.'
0000000000008274         db  0x38 ; '8'
0000000000008275         db  0x41 ; 'A'
0000000000008276         db  0x0e ; '.'
0000000000008277         db  0x30 ; '0'
0000000000008278         db  0x41 ; 'A'
0000000000008279         db  0x0e ; '.'
000000000000827a         db  0x28 ; '('
000000000000827b         db  0x42 ; 'B'
000000000000827c         db  0x0e ; '.'
000000000000827d         db  0x20 ; ' '
000000000000827e         db  0x42 ; 'B'
000000000000827f         db  0x0e ; '.'
0000000000008280         db  0x18 ; '.'
0000000000008281         db  0x42 ; 'B'
0000000000008282         db  0x0e ; '.'
0000000000008283         db  0x10 ; '.'
0000000000008284         db  0x42 ; 'B'
0000000000008285         db  0x0e ; '.'
0000000000008286         db  0x08 ; '.'
0000000000008287         db  0x00 ; '.'
0000000000008288         dd         0x00000014                                  ; Length of the record
000000000000828c         dd         0x00000e14                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
0000000000008290         db         0xc0, 0xe0, 2 dup (0xff)                    ; begin 0x6350
0000000000008294         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x6352)
0000000000008298         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008299         align      32
00000000000082a0         dd         0x00000010                                  ; Length of the record
00000000000082a4         dd         0x00000e2c                                  ; FDE: parent CIE at 0x7478 (FDE encoding = 0x1B)
00000000000082a8         db         0xb8, 0xe0, 2 dup (0xff)                    ; begin 0x6360
00000000000082ac         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x636e)
00000000000082b0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000082b1         align      8


        ; Segment Segment 3
        ; Range: [0x208b10; 0x209258[ (1864 bytes)
        ; File offset : [35600; 37000[ (1400 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x208b10; 0x208b18[ (8 bytes)
        ; File offset : [35600; 35608[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
0000000000208b10         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x208b18; 0x208b20[ (8 bytes)
        ; File offset : [35608; 35616[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
0000000000208b18         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x208b20; 0x208c18[ (248 bytes)
        ; File offset : [35616; 35864[ (248 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     longopts:
0000000000208b20         db  0x73 ; 's'                                         ; DATA XREF=main+4
0000000000208b21         db  0x64 ; 'd'
0000000000208b22         db  0x00 ; '.'
0000000000208b23         db  0x00 ; '.'
0000000000208b24         db  0x00 ; '.'
0000000000208b25         db  0x00 ; '.'
0000000000208b26         db  0x00 ; '.'
0000000000208b27         db  0x00 ; '.'
0000000000208b28         db  0x00 ; '.'
0000000000208b29         db  0x00 ; '.'
0000000000208b2a         db  0x00 ; '.'
0000000000208b2b         db  0x00 ; '.'
0000000000208b2c         db  0x00 ; '.'
0000000000208b2d         db  0x00 ; '.'
0000000000208b2e         db  0x00 ; '.'
0000000000208b2f         db  0x00 ; '.'
0000000000208b30         db  0x00 ; '.'
0000000000208b31         db  0x00 ; '.'
0000000000208b32         db  0x00 ; '.'
0000000000208b33         db  0x00 ; '.'
0000000000208b34         db  0x00 ; '.'
0000000000208b35         db  0x00 ; '.'
0000000000208b36         db  0x00 ; '.'
0000000000208b37         db  0x00 ; '.'
0000000000208b38         db  0x73 ; 's'
0000000000208b39         db  0x00 ; '.'
0000000000208b3a         db  0x00 ; '.'
0000000000208b3b         db  0x00 ; '.'
0000000000208b3c         db  0x00 ; '.'
0000000000208b3d         db  0x00 ; '.'
0000000000208b3e         db  0x00 ; '.'
0000000000208b3f         db  0x00 ; '.'
0000000000208b40         db  0x78 ; 'x'
0000000000208b41         db  0x64 ; 'd'
0000000000208b42         db  0x00 ; '.'
0000000000208b43         db  0x00 ; '.'
0000000000208b44         db  0x00 ; '.'
0000000000208b45         db  0x00 ; '.'
0000000000208b46         db  0x00 ; '.'
0000000000208b47         db  0x00 ; '.'
0000000000208b48         db  0x00 ; '.'
0000000000208b49         db  0x00 ; '.'
0000000000208b4a         db  0x00 ; '.'
0000000000208b4b         db  0x00 ; '.'
0000000000208b4c         db  0x00 ; '.'
0000000000208b4d         db  0x00 ; '.'
0000000000208b4e         db  0x00 ; '.'
0000000000208b4f         db  0x00 ; '.'
0000000000208b50         db  0x00 ; '.'
0000000000208b51         db  0x00 ; '.'
0000000000208b52         db  0x00 ; '.'
0000000000208b53         db  0x00 ; '.'
0000000000208b54         db  0x00 ; '.'
0000000000208b55         db  0x00 ; '.'
0000000000208b56         db  0x00 ; '.'
0000000000208b57         db  0x00 ; '.'
0000000000208b58         db  0x7e ; '~'
0000000000208b59         db  0xff ; '.'
0000000000208b5a         db  0xff ; '.'
0000000000208b5b         db  0xff ; '.'
0000000000208b5c         db  0x00 ; '.'
0000000000208b5d         db  0x00 ; '.'
0000000000208b5e         db  0x00 ; '.'
0000000000208b5f         db  0x00 ; '.'
0000000000208b60         db  0x7d ; '}'
0000000000208b61         db  0x64 ; 'd'
0000000000208b62         db  0x00 ; '.'
0000000000208b63         db  0x00 ; '.'
0000000000208b64         db  0x00 ; '.'
0000000000208b65         db  0x00 ; '.'
0000000000208b66         db  0x00 ; '.'
0000000000208b67         db  0x00 ; '.'
0000000000208b68         db  0x00 ; '.'
0000000000208b69         db  0x00 ; '.'
0000000000208b6a         db  0x00 ; '.'
0000000000208b6b         db  0x00 ; '.'
0000000000208b6c         db  0x00 ; '.'
0000000000208b6d         db  0x00 ; '.'
0000000000208b6e         db  0x00 ; '.'
0000000000208b6f         db  0x00 ; '.'
0000000000208b70         db  0x00 ; '.'
0000000000208b71         db  0x00 ; '.'
0000000000208b72         db  0x00 ; '.'
0000000000208b73         db  0x00 ; '.'
0000000000208b74         db  0x00 ; '.'
0000000000208b75         db  0x00 ; '.'
0000000000208b76         db  0x00 ; '.'
0000000000208b77         db  0x00 ; '.'
0000000000208b78         db  0x7d ; '}'
0000000000208b79         db  0xff ; '.'
0000000000208b7a         db  0xff ; '.'
0000000000208b7b         db  0xff ; '.'
0000000000208b7c         db  0x00 ; '.'
0000000000208b7d         db  0x00 ; '.'
0000000000208b7e         db  0x00 ; '.'
0000000000208b7f         db  0x00 ; '.'
0000000000208b80         db  0x00 ; '.'
0000000000208b81         db  0x00 ; '.'
0000000000208b82         db  0x00 ; '.'
0000000000208b83         db  0x00 ; '.'
0000000000208b84         db  0x00 ; '.'
0000000000208b85         db  0x00 ; '.'
0000000000208b86         db  0x00 ; '.'
0000000000208b87         db  0x00 ; '.'
0000000000208b88         db  0x00 ; '.'
0000000000208b89         db  0x00 ; '.'
0000000000208b8a         db  0x00 ; '.'
0000000000208b8b         db  0x00 ; '.'
0000000000208b8c         db  0x00 ; '.'
0000000000208b8d         db  0x00 ; '.'
0000000000208b8e         db  0x00 ; '.'
0000000000208b8f         db  0x00 ; '.'
0000000000208b90         db  0x00 ; '.'
0000000000208b91         db  0x00 ; '.'
0000000000208b92         db  0x00 ; '.'
0000000000208b93         db  0x00 ; '.'
0000000000208b94         db  0x00 ; '.'
0000000000208b95         db  0x00 ; '.'
0000000000208b96         db  0x00 ; '.'
0000000000208b97         db  0x00 ; '.'
0000000000208b98         db  0x00 ; '.'
0000000000208b99         db  0x00 ; '.'
0000000000208b9a         db  0x00 ; '.'
0000000000208b9b         db  0x00 ; '.'
0000000000208b9c         db  0x00 ; '.'
0000000000208b9d         db  0x00 ; '.'
0000000000208b9e         db  0x00 ; '.'
0000000000208b9f         db  0x00 ; '.'
                     block_size_args:
0000000000208ba0         db  0x28 ; '('                                         ; DATA XREF=human_options+67
0000000000208ba1         db  0x67 ; 'g'
0000000000208ba2         db  0x00 ; '.'
0000000000208ba3         db  0x00 ; '.'
0000000000208ba4         db  0x00 ; '.'
0000000000208ba5         db  0x00 ; '.'
0000000000208ba6         db  0x00 ; '.'
0000000000208ba7         db  0x00 ; '.'
0000000000208ba8         db  0x37 ; '7'
0000000000208ba9         db  0x67 ; 'g'
0000000000208baa         db  0x00 ; '.'
0000000000208bab         db  0x00 ; '.'
0000000000208bac         db  0x00 ; '.'
0000000000208bad         db  0x00 ; '.'
0000000000208bae         db  0x00 ; '.'
0000000000208baf         db  0x00 ; '.'
0000000000208bb0         db  0x00 ; '.'
0000000000208bb1         db  0x00 ; '.'
0000000000208bb2         db  0x00 ; '.'
0000000000208bb3         db  0x00 ; '.'
0000000000208bb4         db  0x00 ; '.'
0000000000208bb5         db  0x00 ; '.'
0000000000208bb6         db  0x00 ; '.'
0000000000208bb7         db  0x00 ; '.'
0000000000208bb8         db  0x00 ; '.'
0000000000208bb9         db  0x00 ; '.'
0000000000208bba         db  0x00 ; '.'
0000000000208bbb         db  0x00 ; '.'
0000000000208bbc         db  0x00 ; '.'
0000000000208bbd         db  0x00 ; '.'
0000000000208bbe         db  0x00 ; '.'
0000000000208bbf         db  0x00 ; '.'
                     quoting_style_args:
0000000000208bc0         db  0xc9 ; '.'
0000000000208bc1         db  0x67 ; 'g'
0000000000208bc2         db  0x00 ; '.'
0000000000208bc3         db  0x00 ; '.'
0000000000208bc4         db  0x00 ; '.'
0000000000208bc5         db  0x00 ; '.'
0000000000208bc6         db  0x00 ; '.'
0000000000208bc7         db  0x00 ; '.'
0000000000208bc8         db  0xd1 ; '.'
0000000000208bc9         db  0x67 ; 'g'
0000000000208bca         db  0x00 ; '.'
0000000000208bcb         db  0x00 ; '.'
0000000000208bcc         db  0x00 ; '.'
0000000000208bcd         db  0x00 ; '.'
0000000000208bce         db  0x00 ; '.'
0000000000208bcf         db  0x00 ; '.'
0000000000208bd0         db  0xd7 ; '.'
0000000000208bd1         db  0x67 ; 'g'
0000000000208bd2         db  0x00 ; '.'
0000000000208bd3         db  0x00 ; '.'
0000000000208bd4         db  0x00 ; '.'
0000000000208bd5         db  0x00 ; '.'
0000000000208bd6         db  0x00 ; '.'
0000000000208bd7         db  0x00 ; '.'
0000000000208bd8         db  0xe4 ; '.'
0000000000208bd9         db  0x67 ; 'g'
0000000000208bda         db  0x00 ; '.'
0000000000208bdb         db  0x00 ; '.'
0000000000208bdc         db  0x00 ; '.'
0000000000208bdd         db  0x00 ; '.'
0000000000208bde         db  0x00 ; '.'
0000000000208bdf         db  0x00 ; '.'
0000000000208be0         db  0xf1 ; '.'
0000000000208be1         db  0x67 ; 'g'
0000000000208be2         db  0x00 ; '.'
0000000000208be3         db  0x00 ; '.'
0000000000208be4         db  0x00 ; '.'
0000000000208be5         db  0x00 ; '.'
0000000000208be6         db  0x00 ; '.'
0000000000208be7         db  0x00 ; '.'
0000000000208be8         db  0x05 ; '.'
0000000000208be9         db  0x68 ; 'h'
0000000000208bea         db  0x00 ; '.'
0000000000208beb         db  0x00 ; '.'
0000000000208bec         db  0x00 ; '.'
0000000000208bed         db  0x00 ; '.'
0000000000208bee         db  0x00 ; '.'
0000000000208bef         db  0x00 ; '.'
0000000000208bf0         db  0x07 ; '.'
0000000000208bf1         db  0x68 ; 'h'
0000000000208bf2         db  0x00 ; '.'
0000000000208bf3         db  0x00 ; '.'
0000000000208bf4         db  0x00 ; '.'
0000000000208bf5         db  0x00 ; '.'
0000000000208bf6         db  0x00 ; '.'
0000000000208bf7         db  0x00 ; '.'
0000000000208bf8         db  0xea ; '.'
0000000000208bf9         db  0x67 ; 'g'
0000000000208bfa         db  0x00 ; '.'
0000000000208bfb         db  0x00 ; '.'
0000000000208bfc         db  0x00 ; '.'
0000000000208bfd         db  0x00 ; '.'
0000000000208bfe         db  0x00 ; '.'
0000000000208bff         db  0x00 ; '.'
0000000000208c00         db  0x47 ; 'G'
0000000000208c01         db  0x64 ; 'd'
0000000000208c02         db  0x00 ; '.'
0000000000208c03         db  0x00 ; '.'
0000000000208c04         db  0x00 ; '.'
0000000000208c05         db  0x00 ; '.'
0000000000208c06         db  0x00 ; '.'
0000000000208c07         db  0x00 ; '.'
0000000000208c08         db  0x0f ; '.'
0000000000208c09         db  0x68 ; 'h'
0000000000208c0a         db  0x00 ; '.'
0000000000208c0b         db  0x00 ; '.'
0000000000208c0c         db  0x00 ; '.'
0000000000208c0d         db  0x00 ; '.'
0000000000208c0e         db  0x00 ; '.'
0000000000208c0f         db  0x00 ; '.'
0000000000208c10         db  0x00 ; '.'
0000000000208c11         db  0x00 ; '.'
0000000000208c12         db  0x00 ; '.'
0000000000208c13         db  0x00 ; '.'
0000000000208c14         db  0x00 ; '.'
0000000000208c15         db  0x00 ; '.'
0000000000208c16         db  0x00 ; '.'
0000000000208c17         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x208c18; 0x208e08[ (496 bytes)
        ; File offset : [35864; 36360[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
0000000000208c18         db  0x01 ; '.'
0000000000208c19         db  0x00 ; '.'
0000000000208c1a         db  0x00 ; '.'
0000000000208c1b         db  0x00 ; '.'
0000000000208c1c         db  0x00 ; '.'
0000000000208c1d         db  0x00 ; '.'
0000000000208c1e         db  0x00 ; '.'
0000000000208c1f         db  0x00 ; '.'
0000000000208c20         db  0x01 ; '.'
0000000000208c21         db  0x00 ; '.'
0000000000208c22         db  0x00 ; '.'
0000000000208c23         db  0x00 ; '.'
0000000000208c24         db  0x00 ; '.'
0000000000208c25         db  0x00 ; '.'
0000000000208c26         db  0x00 ; '.'
0000000000208c27         db  0x00 ; '.'
0000000000208c28         db  0x0c ; '.'
0000000000208c29         db  0x00 ; '.'
0000000000208c2a         db  0x00 ; '.'
0000000000208c2b         db  0x00 ; '.'
0000000000208c2c         db  0x00 ; '.'
0000000000208c2d         db  0x00 ; '.'
0000000000208c2e         db  0x00 ; '.'
0000000000208c2f         db  0x00 ; '.'
0000000000208c30         db  0x98 ; '.'
0000000000208c31         db  0x15 ; '.'
0000000000208c32         db  0x00 ; '.'
0000000000208c33         db  0x00 ; '.'
0000000000208c34         db  0x00 ; '.'
0000000000208c35         db  0x00 ; '.'
0000000000208c36         db  0x00 ; '.'
0000000000208c37         db  0x00 ; '.'
0000000000208c38         db  0x0d ; '.'
0000000000208c39         db  0x00 ; '.'
0000000000208c3a         db  0x00 ; '.'
0000000000208c3b         db  0x00 ; '.'
0000000000208c3c         db  0x00 ; '.'
0000000000208c3d         db  0x00 ; '.'
0000000000208c3e         db  0x00 ; '.'
0000000000208c3f         db  0x00 ; '.'
0000000000208c40         db  0x70 ; 'p'
0000000000208c41         db  0x63 ; 'c'
0000000000208c42         db  0x00 ; '.'
0000000000208c43         db  0x00 ; '.'
0000000000208c44         db  0x00 ; '.'
0000000000208c45         db  0x00 ; '.'
0000000000208c46         db  0x00 ; '.'
0000000000208c47         db  0x00 ; '.'
0000000000208c48         db  0x19 ; '.'
0000000000208c49         db  0x00 ; '.'
0000000000208c4a         db  0x00 ; '.'
0000000000208c4b         db  0x00 ; '.'
0000000000208c4c         db  0x00 ; '.'
0000000000208c4d         db  0x00 ; '.'
0000000000208c4e         db  0x00 ; '.'
0000000000208c4f         db  0x00 ; '.'
0000000000208c50         db  0x10 ; '.'
0000000000208c51         db  0x8b ; '.'
0000000000208c52         db  0x20 ; ' '
0000000000208c53         db  0x00 ; '.'
0000000000208c54         db  0x00 ; '.'
0000000000208c55         db  0x00 ; '.'
0000000000208c56         db  0x00 ; '.'
0000000000208c57         db  0x00 ; '.'
0000000000208c58         db  0x1b ; '.'
0000000000208c59         db  0x00 ; '.'
0000000000208c5a         db  0x00 ; '.'
0000000000208c5b         db  0x00 ; '.'
0000000000208c5c         db  0x00 ; '.'
0000000000208c5d         db  0x00 ; '.'
0000000000208c5e         db  0x00 ; '.'
0000000000208c5f         db  0x00 ; '.'
0000000000208c60         db  0x08 ; '.'
0000000000208c61         db  0x00 ; '.'
0000000000208c62         db  0x00 ; '.'
0000000000208c63         db  0x00 ; '.'
0000000000208c64         db  0x00 ; '.'
0000000000208c65         db  0x00 ; '.'
0000000000208c66         db  0x00 ; '.'
0000000000208c67         db  0x00 ; '.'
0000000000208c68         db  0x1a ; '.'
0000000000208c69         db  0x00 ; '.'
0000000000208c6a         db  0x00 ; '.'
0000000000208c6b         db  0x00 ; '.'
0000000000208c6c         db  0x00 ; '.'
0000000000208c6d         db  0x00 ; '.'
0000000000208c6e         db  0x00 ; '.'
0000000000208c6f         db  0x00 ; '.'
0000000000208c70         db  0x18 ; '.'
0000000000208c71         db  0x8b ; '.'
0000000000208c72         db  0x20 ; ' '
0000000000208c73         db  0x00 ; '.'
0000000000208c74         db  0x00 ; '.'
0000000000208c75         db  0x00 ; '.'
0000000000208c76         db  0x00 ; '.'
0000000000208c77         db  0x00 ; '.'
0000000000208c78         db  0x1c ; '.'
0000000000208c79         db  0x00 ; '.'
0000000000208c7a         db  0x00 ; '.'
0000000000208c7b         db  0x00 ; '.'
0000000000208c7c         db  0x00 ; '.'
0000000000208c7d         db  0x00 ; '.'
0000000000208c7e         db  0x00 ; '.'
0000000000208c7f         db  0x00 ; '.'
0000000000208c80         db  0x08 ; '.'
0000000000208c81         db  0x00 ; '.'
0000000000208c82         db  0x00 ; '.'
0000000000208c83         db  0x00 ; '.'
0000000000208c84         db  0x00 ; '.'
0000000000208c85         db  0x00 ; '.'
0000000000208c86         db  0x00 ; '.'
0000000000208c87         db  0x00 ; '.'
0000000000208c88         db  0xf5 ; '.'
0000000000208c89         db  0xfe ; '.'
0000000000208c8a         db  0xff ; '.'
0000000000208c8b         db  0x6f ; 'o'
0000000000208c8c         db  0x00 ; '.'
0000000000208c8d         db  0x00 ; '.'
0000000000208c8e         db  0x00 ; '.'
0000000000208c8f         db  0x00 ; '.'
0000000000208c90         db  0x98 ; '.'
0000000000208c91         db  0x02 ; '.'
0000000000208c92         db  0x00 ; '.'
0000000000208c93         db  0x00 ; '.'
0000000000208c94         db  0x00 ; '.'
0000000000208c95         db  0x00 ; '.'
0000000000208c96         db  0x00 ; '.'
0000000000208c97         db  0x00 ; '.'
0000000000208c98         db  0x05 ; '.'
0000000000208c99         db  0x00 ; '.'
0000000000208c9a         db  0x00 ; '.'
0000000000208c9b         db  0x00 ; '.'
0000000000208c9c         db  0x00 ; '.'
0000000000208c9d         db  0x00 ; '.'
0000000000208c9e         db  0x00 ; '.'
0000000000208c9f         db  0x00 ; '.'
0000000000208ca0         db  0x58 ; 'X'
0000000000208ca1         db  0x09 ; '.'
0000000000208ca2         db  0x00 ; '.'
0000000000208ca3         db  0x00 ; '.'
0000000000208ca4         db  0x00 ; '.'
0000000000208ca5         db  0x00 ; '.'
0000000000208ca6         db  0x00 ; '.'
0000000000208ca7         db  0x00 ; '.'
0000000000208ca8         db  0x06 ; '.'
0000000000208ca9         db  0x00 ; '.'
0000000000208caa         db  0x00 ; '.'
0000000000208cab         db  0x00 ; '.'
0000000000208cac         db  0x00 ; '.'
0000000000208cad         db  0x00 ; '.'
0000000000208cae         db  0x00 ; '.'
0000000000208caf         db  0x00 ; '.'
0000000000208cb0         db  0xe0 ; '.'
0000000000208cb1         db  0x02 ; '.'
0000000000208cb2         db  0x00 ; '.'
0000000000208cb3         db  0x00 ; '.'
0000000000208cb4         db  0x00 ; '.'
0000000000208cb5         db  0x00 ; '.'
0000000000208cb6         db  0x00 ; '.'
0000000000208cb7         db  0x00 ; '.'
0000000000208cb8         db  0x0a ; '.'
0000000000208cb9         db  0x00 ; '.'
0000000000208cba         db  0x00 ; '.'
0000000000208cbb         db  0x00 ; '.'
0000000000208cbc         db  0x00 ; '.'
0000000000208cbd         db  0x00 ; '.'
0000000000208cbe         db  0x00 ; '.'
0000000000208cbf         db  0x00 ; '.'
0000000000208cc0         db  0x0f ; '.'
0000000000208cc1         db  0x03 ; '.'
0000000000208cc2         db  0x00 ; '.'
0000000000208cc3         db  0x00 ; '.'
0000000000208cc4         db  0x00 ; '.'
0000000000208cc5         db  0x00 ; '.'
0000000000208cc6         db  0x00 ; '.'
0000000000208cc7         db  0x00 ; '.'
0000000000208cc8         db  0x0b ; '.'
0000000000208cc9         db  0x00 ; '.'
0000000000208cca         db  0x00 ; '.'
0000000000208ccb         db  0x00 ; '.'
0000000000208ccc         db  0x00 ; '.'
0000000000208ccd         db  0x00 ; '.'
0000000000208cce         db  0x00 ; '.'
0000000000208ccf         db  0x00 ; '.'
0000000000208cd0         db  0x18 ; '.'
0000000000208cd1         db  0x00 ; '.'
0000000000208cd2         db  0x00 ; '.'
0000000000208cd3         db  0x00 ; '.'
0000000000208cd4         db  0x00 ; '.'
0000000000208cd5         db  0x00 ; '.'
0000000000208cd6         db  0x00 ; '.'
0000000000208cd7         db  0x00 ; '.'
0000000000208cd8         db  0x15 ; '.'
0000000000208cd9         db  0x00 ; '.'
0000000000208cda         db  0x00 ; '.'
0000000000208cdb         db  0x00 ; '.'
0000000000208cdc         db  0x00 ; '.'
0000000000208cdd         db  0x00 ; '.'
0000000000208cde         db  0x00 ; '.'
0000000000208cdf         db  0x00 ; '.'
0000000000208ce0         db  0x00 ; '.'
0000000000208ce1         db  0x00 ; '.'
0000000000208ce2         db  0x00 ; '.'
0000000000208ce3         db  0x00 ; '.'
0000000000208ce4         db  0x00 ; '.'
0000000000208ce5         db  0x00 ; '.'
0000000000208ce6         db  0x00 ; '.'
0000000000208ce7         db  0x00 ; '.'
0000000000208ce8         db  0x03 ; '.'
0000000000208ce9         db  0x00 ; '.'
0000000000208cea         db  0x00 ; '.'
0000000000208ceb         db  0x00 ; '.'
0000000000208cec         db  0x00 ; '.'
0000000000208ced         db  0x00 ; '.'
0000000000208cee         db  0x00 ; '.'
0000000000208cef         db  0x00 ; '.'
0000000000208cf0         db  0x08 ; '.'
0000000000208cf1         db  0x8e ; '.'
0000000000208cf2         db  0x20 ; ' '
0000000000208cf3         db  0x00 ; '.'
0000000000208cf4         db  0x00 ; '.'
0000000000208cf5         db  0x00 ; '.'
0000000000208cf6         db  0x00 ; '.'
0000000000208cf7         db  0x00 ; '.'
0000000000208cf8         db  0x02 ; '.'
0000000000208cf9         db  0x00 ; '.'
0000000000208cfa         db  0x00 ; '.'
0000000000208cfb         db  0x00 ; '.'
0000000000208cfc         db  0x00 ; '.'
0000000000208cfd         db  0x00 ; '.'
0000000000208cfe         db  0x00 ; '.'
0000000000208cff         db  0x00 ; '.'
0000000000208d00         db  0x28 ; '('
0000000000208d01         db  0x05 ; '.'
0000000000208d02         db  0x00 ; '.'
0000000000208d03         db  0x00 ; '.'
0000000000208d04         db  0x00 ; '.'
0000000000208d05         db  0x00 ; '.'
0000000000208d06         db  0x00 ; '.'
0000000000208d07         db  0x00 ; '.'
0000000000208d08         db  0x14 ; '.'
0000000000208d09         db  0x00 ; '.'
0000000000208d0a         db  0x00 ; '.'
0000000000208d0b         db  0x00 ; '.'
0000000000208d0c         db  0x00 ; '.'
0000000000208d0d         db  0x00 ; '.'
0000000000208d0e         db  0x00 ; '.'
0000000000208d0f         db  0x00 ; '.'
0000000000208d10         db  0x07 ; '.'
0000000000208d11         db  0x00 ; '.'
0000000000208d12         db  0x00 ; '.'
0000000000208d13         db  0x00 ; '.'
0000000000208d14         db  0x00 ; '.'
0000000000208d15         db  0x00 ; '.'
0000000000208d16         db  0x00 ; '.'
0000000000208d17         db  0x00 ; '.'
0000000000208d18         db  0x17 ; '.'
0000000000208d19         db  0x00 ; '.'
0000000000208d1a         db  0x00 ; '.'
0000000000208d1b         db  0x00 ; '.'
0000000000208d1c         db  0x00 ; '.'
0000000000208d1d         db  0x00 ; '.'
0000000000208d1e         db  0x00 ; '.'
0000000000208d1f         db  0x00 ; '.'
0000000000208d20         db  0x70 ; 'p'
0000000000208d21         db  0x10 ; '.'
0000000000208d22         db  0x00 ; '.'
0000000000208d23         db  0x00 ; '.'
0000000000208d24         db  0x00 ; '.'
0000000000208d25         db  0x00 ; '.'
0000000000208d26         db  0x00 ; '.'
0000000000208d27         db  0x00 ; '.'
0000000000208d28         db  0x07 ; '.'
0000000000208d29         db  0x00 ; '.'
0000000000208d2a         db  0x00 ; '.'
0000000000208d2b         db  0x00 ; '.'
0000000000208d2c         db  0x00 ; '.'
0000000000208d2d         db  0x00 ; '.'
0000000000208d2e         db  0x00 ; '.'
0000000000208d2f         db  0x00 ; '.'
0000000000208d30         db  0x58 ; 'X'
0000000000208d31         db  0x0d ; '.'
0000000000208d32         db  0x00 ; '.'
0000000000208d33         db  0x00 ; '.'
0000000000208d34         db  0x00 ; '.'
0000000000208d35         db  0x00 ; '.'
0000000000208d36         db  0x00 ; '.'
0000000000208d37         db  0x00 ; '.'
0000000000208d38         db  0x08 ; '.'
0000000000208d39         db  0x00 ; '.'
0000000000208d3a         db  0x00 ; '.'
0000000000208d3b         db  0x00 ; '.'
0000000000208d3c         db  0x00 ; '.'
0000000000208d3d         db  0x00 ; '.'
0000000000208d3e         db  0x00 ; '.'
0000000000208d3f         db  0x00 ; '.'
0000000000208d40         db  0x18 ; '.'
0000000000208d41         db  0x03 ; '.'
0000000000208d42         db  0x00 ; '.'
0000000000208d43         db  0x00 ; '.'
0000000000208d44         db  0x00 ; '.'
0000000000208d45         db  0x00 ; '.'
0000000000208d46         db  0x00 ; '.'
0000000000208d47         db  0x00 ; '.'
0000000000208d48         db  0x09 ; '.'
0000000000208d49         db  0x00 ; '.'
0000000000208d4a         db  0x00 ; '.'
0000000000208d4b         db  0x00 ; '.'
0000000000208d4c         db  0x00 ; '.'
0000000000208d4d         db  0x00 ; '.'
0000000000208d4e         db  0x00 ; '.'
0000000000208d4f         db  0x00 ; '.'
0000000000208d50         db  0x18 ; '.'
0000000000208d51         db  0x00 ; '.'
0000000000208d52         db  0x00 ; '.'
0000000000208d53         db  0x00 ; '.'
0000000000208d54         db  0x00 ; '.'
0000000000208d55         db  0x00 ; '.'
0000000000208d56         db  0x00 ; '.'
0000000000208d57         db  0x00 ; '.'
0000000000208d58         db  0x1e ; '.'
0000000000208d59         db  0x00 ; '.'
0000000000208d5a         db  0x00 ; '.'
0000000000208d5b         db  0x00 ; '.'
0000000000208d5c         db  0x00 ; '.'
0000000000208d5d         db  0x00 ; '.'
0000000000208d5e         db  0x00 ; '.'
0000000000208d5f         db  0x00 ; '.'
0000000000208d60         db  0x08 ; '.'
0000000000208d61         db  0x00 ; '.'
0000000000208d62         db  0x00 ; '.'
0000000000208d63         db  0x00 ; '.'
0000000000208d64         db  0x00 ; '.'
0000000000208d65         db  0x00 ; '.'
0000000000208d66         db  0x00 ; '.'
0000000000208d67         db  0x00 ; '.'
0000000000208d68         db  0xfb ; '.'
0000000000208d69         db  0xff ; '.'
0000000000208d6a         db  0xff ; '.'
0000000000208d6b         db  0x6f ; 'o'
0000000000208d6c         db  0x00 ; '.'
0000000000208d6d         db  0x00 ; '.'
0000000000208d6e         db  0x00 ; '.'
0000000000208d6f         db  0x00 ; '.'
0000000000208d70         db  0x01 ; '.'
0000000000208d71         db  0x00 ; '.'
0000000000208d72         db  0x00 ; '.'
0000000000208d73         db  0x08 ; '.'
0000000000208d74         db  0x00 ; '.'
0000000000208d75         db  0x00 ; '.'
0000000000208d76         db  0x00 ; '.'
0000000000208d77         db  0x00 ; '.'
0000000000208d78         db  0xfe ; '.'
0000000000208d79         db  0xff ; '.'
0000000000208d7a         db  0xff ; '.'
0000000000208d7b         db  0x6f ; 'o'
0000000000208d7c         db  0x00 ; '.'
0000000000208d7d         db  0x00 ; '.'
0000000000208d7e         db  0x00 ; '.'
0000000000208d7f         db  0x00 ; '.'
0000000000208d80         db  0xf8 ; '.'
0000000000208d81         db  0x0c ; '.'
0000000000208d82         db  0x00 ; '.'
0000000000208d83         db  0x00 ; '.'
0000000000208d84         db  0x00 ; '.'
0000000000208d85         db  0x00 ; '.'
0000000000208d86         db  0x00 ; '.'
0000000000208d87         db  0x00 ; '.'
0000000000208d88         db  0xff ; '.'
0000000000208d89         db  0xff ; '.'
0000000000208d8a         db  0xff ; '.'
0000000000208d8b         db  0x6f ; 'o'
0000000000208d8c         db  0x00 ; '.'
0000000000208d8d         db  0x00 ; '.'
0000000000208d8e         db  0x00 ; '.'
0000000000208d8f         db  0x00 ; '.'
0000000000208d90         db  0x01 ; '.'
0000000000208d91         db  0x00 ; '.'
0000000000208d92         db  0x00 ; '.'
0000000000208d93         db  0x00 ; '.'
0000000000208d94         db  0x00 ; '.'
0000000000208d95         db  0x00 ; '.'
0000000000208d96         db  0x00 ; '.'
0000000000208d97         db  0x00 ; '.'
0000000000208d98         db  0xf0 ; '.'
0000000000208d99         db  0xff ; '.'
0000000000208d9a         db  0xff ; '.'
0000000000208d9b         db  0x6f ; 'o'
0000000000208d9c         db  0x00 ; '.'
0000000000208d9d         db  0x00 ; '.'
0000000000208d9e         db  0x00 ; '.'
0000000000208d9f         db  0x00 ; '.'
0000000000208da0         db  0x68 ; 'h'
0000000000208da1         db  0x0c ; '.'
0000000000208da2         db  0x00 ; '.'
0000000000208da3         db  0x00 ; '.'
0000000000208da4         db  0x00 ; '.'
0000000000208da5         db  0x00 ; '.'
0000000000208da6         db  0x00 ; '.'
0000000000208da7         db  0x00 ; '.'
0000000000208da8         db  0xf9 ; '.'
0000000000208da9         db  0xff ; '.'
0000000000208daa         db  0xff ; '.'
0000000000208dab         db  0x6f ; 'o'
0000000000208dac         db  0x00 ; '.'
0000000000208dad         db  0x00 ; '.'
0000000000208dae         db  0x00 ; '.'
0000000000208daf         db  0x00 ; '.'
0000000000208db0         db  0x16 ; '.'
0000000000208db1         db  0x00 ; '.'
0000000000208db2         db  0x00 ; '.'
0000000000208db3         db  0x00 ; '.'
0000000000208db4         db  0x00 ; '.'
0000000000208db5         db  0x00 ; '.'
0000000000208db6         db  0x00 ; '.'
0000000000208db7         db  0x00 ; '.'
0000000000208db8         db  0x00 ; '.'
0000000000208db9         db  0x00 ; '.'
0000000000208dba         db  0x00 ; '.'
0000000000208dbb         db  0x00 ; '.'
0000000000208dbc         db  0x00 ; '.'
0000000000208dbd         db  0x00 ; '.'
0000000000208dbe         db  0x00 ; '.'
0000000000208dbf         db  0x00 ; '.'
0000000000208dc0         db  0x00 ; '.'
0000000000208dc1         db  0x00 ; '.'
0000000000208dc2         db  0x00 ; '.'
0000000000208dc3         db  0x00 ; '.'
0000000000208dc4         db  0x00 ; '.'
0000000000208dc5         db  0x00 ; '.'
0000000000208dc6         db  0x00 ; '.'
0000000000208dc7         db  0x00 ; '.'
0000000000208dc8         db  0x00 ; '.'
0000000000208dc9         db  0x00 ; '.'
0000000000208dca         db  0x00 ; '.'
0000000000208dcb         db  0x00 ; '.'
0000000000208dcc         db  0x00 ; '.'
0000000000208dcd         db  0x00 ; '.'
0000000000208dce         db  0x00 ; '.'
0000000000208dcf         db  0x00 ; '.'
0000000000208dd0         db  0x00 ; '.'
0000000000208dd1         db  0x00 ; '.'
0000000000208dd2         db  0x00 ; '.'
0000000000208dd3         db  0x00 ; '.'
0000000000208dd4         db  0x00 ; '.'
0000000000208dd5         db  0x00 ; '.'
0000000000208dd6         db  0x00 ; '.'
0000000000208dd7         db  0x00 ; '.'
0000000000208dd8         db  0x00 ; '.'
0000000000208dd9         db  0x00 ; '.'
0000000000208dda         db  0x00 ; '.'
0000000000208ddb         db  0x00 ; '.'
0000000000208ddc         db  0x00 ; '.'
0000000000208ddd         db  0x00 ; '.'
0000000000208dde         db  0x00 ; '.'
0000000000208ddf         db  0x00 ; '.'
0000000000208de0         db  0x00 ; '.'
0000000000208de1         db  0x00 ; '.'
0000000000208de2         db  0x00 ; '.'
0000000000208de3         db  0x00 ; '.'
0000000000208de4         db  0x00 ; '.'
0000000000208de5         db  0x00 ; '.'
0000000000208de6         db  0x00 ; '.'
0000000000208de7         db  0x00 ; '.'
0000000000208de8         db  0x00 ; '.'
0000000000208de9         db  0x00 ; '.'
0000000000208dea         db  0x00 ; '.'
0000000000208deb         db  0x00 ; '.'
0000000000208dec         db  0x00 ; '.'
0000000000208ded         db  0x00 ; '.'
0000000000208dee         db  0x00 ; '.'
0000000000208def         db  0x00 ; '.'
0000000000208df0         db  0x00 ; '.'
0000000000208df1         db  0x00 ; '.'
0000000000208df2         db  0x00 ; '.'
0000000000208df3         db  0x00 ; '.'
0000000000208df4         db  0x00 ; '.'
0000000000208df5         db  0x00 ; '.'
0000000000208df6         db  0x00 ; '.'
0000000000208df7         db  0x00 ; '.'
0000000000208df8         db  0x00 ; '.'
0000000000208df9         db  0x00 ; '.'
0000000000208dfa         db  0x00 ; '.'
0000000000208dfb         db  0x00 ; '.'
0000000000208dfc         db  0x00 ; '.'
0000000000208dfd         db  0x00 ; '.'
0000000000208dfe         db  0x00 ; '.'
0000000000208dff         db  0x00 ; '.'
0000000000208e00         db  0x00 ; '.'
0000000000208e01         db  0x00 ; '.'
0000000000208e02         db  0x00 ; '.'
0000000000208e03         db  0x00 ; '.'
0000000000208e04         db  0x00 ; '.'
0000000000208e05         db  0x00 ; '.'
0000000000208e06         db  0x00 ; '.'
0000000000208e07         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x208e08; 0x209000[ (504 bytes)
        ; File offset : [36360; 36864[ (504 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
0000000000208e08         db  0x18 ; '.'
0000000000208e09         db  0x8c ; '.'
0000000000208e0a         db  0x20 ; ' '
0000000000208e0b         db  0x00 ; '.'
0000000000208e0c         db  0x00 ; '.'
0000000000208e0d         db  0x00 ; '.'
0000000000208e0e         db  0x00 ; '.'
0000000000208e0f         db  0x00 ; '.'
                     qword_208e10:
0000000000208e10         dq         0x0000000000000000                          ; DATA XREF=0x15b0
0000000000208e18         db  0x00 ; '.'                                         ; DATA XREF=0x15b6
0000000000208e19         db  0x00 ; '.'
0000000000208e1a         db  0x00 ; '.'
0000000000208e1b         db  0x00 ; '.'
0000000000208e1c         db  0x00 ; '.'
0000000000208e1d         db  0x00 ; '.'
0000000000208e1e         db  0x00 ; '.'
0000000000208e1f         db  0x00 ; '.'
                     __uflow@GOT:        // __uflow
0000000000208e20         dq         0x0000000000209260                          ; DATA XREF=j___uflow
                     getenv@GOT:        // getenv
0000000000208e28         dq         0x0000000000209268                          ; DATA XREF=j_getenv
                     free@GOT:        // free
0000000000208e30         dq         0x0000000000209270                          ; DATA XREF=j_free
                     abort@GOT:        // abort
0000000000208e38         dq         0x0000000000209278                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
0000000000208e40         dq         0x0000000000209280                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
0000000000208e48         dq         0x0000000000209288                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
0000000000208e50         dq         0x0000000000209298                          ; DATA XREF=j__exit
                     __fpending@GOT:        // __fpending
0000000000208e58         dq         0x00000000002092a0                          ; DATA XREF=j___fpending
                     localeconv@GOT:        // localeconv
0000000000208e60         dq         0x00000000002092a8                          ; DATA XREF=j_localeconv
                     textdomain@GOT:        // textdomain
0000000000208e68         dq         0x00000000002092b0                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
0000000000208e70         dq         0x00000000002092b8                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
0000000000208e78         dq         0x00000000002092c0                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
0000000000208e80         dq         0x00000000002092c8                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
0000000000208e88         dq         0x00000000002092d0                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
0000000000208e90         dq         0x00000000002092d8                          ; DATA XREF=j_strlen
                     __stack_chk_fail@GOT:        // __stack_chk_fail
0000000000208e98         dq         0x00000000002092e0                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
0000000000208ea0         dq         0x00000000002092e8                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
0000000000208ea8         dq         0x00000000002092f0                          ; DATA XREF=j_mbrtowc
                     strchr@GOT:        // strchr
0000000000208eb0         dq         0x00000000002092f8                          ; DATA XREF=j_strchr
                     __overflow@GOT:        // __overflow
0000000000208eb8         dq         0x0000000000209300                          ; DATA XREF=j___overflow
                     strrchr@GOT:        // strrchr
0000000000208ec0         dq         0x0000000000209308                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
0000000000208ec8         dq         0x0000000000209310                          ; DATA XREF=j_lseek
                     __assert_fail@GOT:        // __assert_fail
0000000000208ed0         dq         0x0000000000209318                          ; DATA XREF=j___assert_fail
                     __strtoul_internal@GOT:        // __strtoul_internal
0000000000208ed8         dq         0x0000000000209320                          ; DATA XREF=j___strtoul_internal
                     memset@GOT:        // memset
0000000000208ee0         dq         0x0000000000209328                          ; DATA XREF=j_memset
                     close@GOT:        // close
0000000000208ee8         dq         0x0000000000209330                          ; DATA XREF=j_close
                     posix_fadvise@GOT:        // posix_fadvise
0000000000208ef0         dq         0x0000000000209338                          ; DATA XREF=j_posix_fadvise
                     read@GOT:        // read
0000000000208ef8         dq         0x0000000000209340                          ; DATA XREF=j_read
                     memcmp@GOT:        // memcmp
0000000000208f00         dq         0x0000000000209350                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
0000000000208f08         dq         0x0000000000209358                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
0000000000208f10         dq         0x0000000000209360                          ; DATA XREF=j_calloc
                     __memcpy_chk@GOT:        // __memcpy_chk
0000000000208f18         dq         0x0000000000209368                          ; DATA XREF=j___memcpy_chk
                     memcpy@GOT:        // memcpy
0000000000208f20         dq         0x0000000000209378                          ; DATA XREF=j_memcpy
                     fileno@GOT:        // fileno
0000000000208f28         dq         0x0000000000209380                          ; DATA XREF=j_fileno
                     malloc@GOT:        // malloc
0000000000208f30         dq         0x0000000000209388                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
0000000000208f38         dq         0x0000000000209390                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
0000000000208f40         dq         0x0000000000209398                          ; DATA XREF=j_nl_langinfo
                     __freading@GOT:        // __freading
0000000000208f48         dq         0x00000000002093a0                          ; DATA XREF=j___freading
                     realloc@GOT:        // realloc
0000000000208f50         dq         0x00000000002093a8                          ; DATA XREF=j_realloc
                     setlocale@GOT:        // setlocale
0000000000208f58         dq         0x00000000002093b0                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
0000000000208f60         dq         0x00000000002093b8                          ; DATA XREF=j___printf_chk
                     setvbuf@GOT:        // setvbuf
0000000000208f68         dq         0x00000000002093c0                          ; DATA XREF=j_setvbuf
                     memmove@GOT:        // memmove
0000000000208f70         dq         0x00000000002093c8                          ; DATA XREF=j_memmove
                     error@GOT:        // error
0000000000208f78         dq         0x00000000002093d0                          ; DATA XREF=j_error
                     open@GOT:        // open
0000000000208f80         dq         0x00000000002093d8                          ; DATA XREF=j_open
                     fseeko@GOT:        // fseeko
0000000000208f88         dq         0x00000000002093e0                          ; DATA XREF=j_fseeko
                     fopen@GOT:        // fopen
0000000000208f90         dq         0x00000000002093e8                          ; DATA XREF=j_fopen
                     __cxa_atexit@GOT:        // __cxa_atexit
0000000000208f98         dq         0x00000000002093f0                          ; DATA XREF=j___cxa_atexit
                     exit@GOT:        // exit
0000000000208fa0         dq         0x00000000002093f8                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
0000000000208fa8         dq         0x0000000000209400                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
0000000000208fb0         dq         0x0000000000209408                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
0000000000208fb8         dq         0x0000000000209418                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
0000000000208fc0         dq         0x0000000000209420                          ; DATA XREF=j_iswprint
                     __ctype_b_loc@GOT:        // __ctype_b_loc
0000000000208fc8         dq         0x0000000000209430                          ; DATA XREF=j___ctype_b_loc
                     __sprintf_chk@GOT:        // __sprintf_chk
0000000000208fd0         dq         0x0000000000209438                          ; DATA XREF=j___sprintf_chk
                     qword_208fd8:
0000000000208fd8         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
0000000000208fe0         db  0x00 ; '.'                                         ; DATA XREF=_start+36
0000000000208fe1         db  0x00 ; '.'
0000000000208fe2         db  0x00 ; '.'
0000000000208fe3         db  0x00 ; '.'
0000000000208fe4         db  0x00 ; '.'
0000000000208fe5         db  0x00 ; '.'
0000000000208fe6         db  0x00 ; '.'
0000000000208fe7         db  0x00 ; '.'
                     qword_208fe8:
0000000000208fe8         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_208ff0:
0000000000208ff0         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_208ff8:
0000000000208ff8         dq         0x0000000000000000                          ; DATA XREF=j_qword_208ff8, __do_global_dtors_aux+9


        ; Section .data
        ; Range: [0x209000; 0x209088[ (136 bytes)
        ; File offset : [36864; 37000[ (136 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

0000000000209000         align      8
                     __dso_handle:
0000000000209008         dq         0x0000000000209008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     Version:
0000000000209010         dq         0x00000000000066cb                          ; "8.31", DATA XREF=main+230
                     exit_failure:
0000000000209018         dd         0x00000001                                  ; DATA XREF=close_stdout+130, xalloc_die+23
000000000020901c         db  0x00 ; '.'
000000000020901d         db  0x00 ; '.'
000000000020901e         db  0x00 ; '.'
000000000020901f         db  0x00 ; '.'
                     quote_quoting_options:
0000000000209020         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
0000000000209021         db  0x00 ; '.'
0000000000209022         db  0x00 ; '.'
0000000000209023         db  0x00 ; '.'
0000000000209024         db  0x00 ; '.'
0000000000209025         db  0x00 ; '.'
0000000000209026         db  0x00 ; '.'
0000000000209027         db  0x00 ; '.'
0000000000209028         db  0x00 ; '.'
0000000000209029         db  0x00 ; '.'
000000000020902a         db  0x00 ; '.'
000000000020902b         db  0x00 ; '.'
000000000020902c         db  0x00 ; '.'
000000000020902d         db  0x00 ; '.'
000000000020902e         db  0x00 ; '.'
000000000020902f         db  0x00 ; '.'
0000000000209030         db  0x00 ; '.'
0000000000209031         db  0x00 ; '.'
0000000000209032         db  0x00 ; '.'
0000000000209033         db  0x00 ; '.'
0000000000209034         db  0x00 ; '.'
0000000000209035         db  0x00 ; '.'
0000000000209036         db  0x00 ; '.'
0000000000209037         db  0x00 ; '.'
0000000000209038         db  0x00 ; '.'
0000000000209039         db  0x00 ; '.'
000000000020903a         db  0x00 ; '.'
000000000020903b         db  0x00 ; '.'
000000000020903c         db  0x00 ; '.'
000000000020903d         db  0x00 ; '.'
000000000020903e         db  0x00 ; '.'
000000000020903f         db  0x00 ; '.'
0000000000209040         db  0x00 ; '.'
0000000000209041         db  0x00 ; '.'
0000000000209042         db  0x00 ; '.'
0000000000209043         db  0x00 ; '.'
0000000000209044         db  0x00 ; '.'
0000000000209045         db  0x00 ; '.'
0000000000209046         db  0x00 ; '.'
0000000000209047         db  0x00 ; '.'
0000000000209048         db  0x00 ; '.'
0000000000209049         db  0x00 ; '.'
000000000020904a         db  0x00 ; '.'
000000000020904b         db  0x00 ; '.'
000000000020904c         db  0x00 ; '.'
000000000020904d         db  0x00 ; '.'
000000000020904e         db  0x00 ; '.'
000000000020904f         db  0x00 ; '.'
0000000000209050         db  0x00 ; '.'
0000000000209051         db  0x00 ; '.'
0000000000209052         db  0x00 ; '.'
0000000000209053         db  0x00 ; '.'
0000000000209054         db  0x00 ; '.'
0000000000209055         db  0x00 ; '.'
0000000000209056         db  0x00 ; '.'
0000000000209057         db  0x00 ; '.'
                     nslots:
0000000000209058         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020905c         align      32
                     slotvec:
0000000000209060         dq         0x0000000000209070                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
0000000000209068         db  0x00 ; '.'
0000000000209069         db  0x00 ; '.'
000000000020906a         db  0x00 ; '.'
000000000020906b         db  0x00 ; '.'
000000000020906c         db  0x00 ; '.'
000000000020906d         db  0x00 ; '.'
000000000020906e         db  0x00 ; '.'
000000000020906f         db  0x00 ; '.'
                     slotvec0:
0000000000209070         dq         1.26481e-321, 1.05449e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec
                     argmatch_die:
0000000000209080         db  0x30 ; '0'
0000000000209081         db  0x5e ; '^'
0000000000209082         db  0x00 ; '.'
0000000000209083         db  0x00 ; '.'
0000000000209084         db  0x00 ; '.'
0000000000209085         db  0x00 ; '.'
0000000000209086         db  0x00 ; '.'
0000000000209087         db  0x00 ; '.'
                     __TMC_END__:
0000000000209088         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7
0000000000209089         db  0x00 ; '.'
000000000020908a         db  0x00 ; '.'
000000000020908b         db  0x00 ; '.'
000000000020908c         db  0x00 ; '.'
000000000020908d         db  0x00 ; '.'
000000000020908e         db  0x00 ; '.'
000000000020908f         db  0x00 ; '.'
0000000000209090         db  0x00 ; '.'
0000000000209091         db  0x00 ; '.'
0000000000209092         db  0x00 ; '.'
0000000000209093         db  0x00 ; '.'
0000000000209094         db  0x00 ; '.'
0000000000209095         db  0x00 ; '.'
0000000000209096         db  0x00 ; '.'
0000000000209097         db  0x00 ; '.'
0000000000209098         db  0x00 ; '.'
0000000000209099         db  0x00 ; '.'
000000000020909a         db  0x00 ; '.'
000000000020909b         db  0x00 ; '.'
000000000020909c         db  0x00 ; '.'
000000000020909d         db  0x00 ; '.'
000000000020909e         db  0x00 ; '.'
000000000020909f         db  0x00 ; '.'


        ; Section .bss
        ; Range: [0x2090a0; 0x209258[ (440 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
00000000002090a0         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+102
00000000002090a1         db  0x00 ; '.'
00000000002090a2         db  0x00 ; '.'
00000000002090a3         db  0x00 ; '.'
00000000002090a4         db  0x00 ; '.'
00000000002090a5         db  0x00 ; '.'
00000000002090a6         db  0x00 ; '.'
00000000002090a7         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
00000000002090a8         db  0x00 ; '.'                                         ; DATA XREF=main+111, main+223, sysv_sum_file+281, bsd_sum_file+269, usage+125, usage+162, usage+199, usage+236, usage+273, usage+864, close_stdout+6
00000000002090a9         db  0x00 ; '.'
00000000002090aa         db  0x00 ; '.'
00000000002090ab         db  0x00 ; '.'
00000000002090ac         db  0x00 ; '.'
00000000002090ad         db  0x00 ; '.'
00000000002090ae         db  0x00 ; '.'
00000000002090af         db  0x00 ; '.'
                     stdin@@GLIBC_2.2.5:
00000000002090b0         db  0x00 ; '.'                                         ; DATA XREF=main+356, bsd_sum_file+79
00000000002090b1         db  0x00 ; '.'
00000000002090b2         db  0x00 ; '.'
00000000002090b3         db  0x00 ; '.'
00000000002090b4         db  0x00 ; '.'
00000000002090b5         db  0x00 ; '.'
00000000002090b6         db  0x00 ; '.'
00000000002090b7         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
00000000002090b8         db  0x00 ; '.'                                         ; DATA XREF=main+299, main+442, main+452
00000000002090b9         db  0x00 ; '.'
00000000002090ba         db  0x00 ; '.'
00000000002090bb         db  0x00 ; '.'
00000000002090bc         db  0x00 ; '.'
00000000002090bd         db  0x00 ; '.'
00000000002090be         db  0x00 ; '.'
00000000002090bf         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
00000000002090c0         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
00000000002090c1         db  0x00 ; '.'
00000000002090c2         db  0x00 ; '.'
00000000002090c3         db  0x00 ; '.'
00000000002090c4         db  0x00 ; '.'
00000000002090c5         db  0x00 ; '.'
00000000002090c6         db  0x00 ; '.'
00000000002090c7         db  0x00 ; '.'
00000000002090c8         db  0x00 ; '.'
00000000002090c9         db  0x00 ; '.'
00000000002090ca         db  0x00 ; '.'
00000000002090cb         db  0x00 ; '.'
00000000002090cc         db  0x00 ; '.'
00000000002090cd         db  0x00 ; '.'
00000000002090ce         db  0x00 ; '.'
00000000002090cf         db  0x00 ; '.'
00000000002090d0         db  0x00 ; '.'
00000000002090d1         db  0x00 ; '.'
00000000002090d2         db  0x00 ; '.'
00000000002090d3         db  0x00 ; '.'
00000000002090d4         db  0x00 ; '.'
00000000002090d5         db  0x00 ; '.'
00000000002090d6         db  0x00 ; '.'
00000000002090d7         db  0x00 ; '.'
00000000002090d8         db  0x00 ; '.'
00000000002090d9         db  0x00 ; '.'
00000000002090da         db  0x00 ; '.'
00000000002090db         db  0x00 ; '.'
00000000002090dc         db  0x00 ; '.'
00000000002090dd         db  0x00 ; '.'
00000000002090de         db  0x00 ; '.'
00000000002090df         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
00000000002090e0         db  0x00 ; '.'                                         ; DATA XREF=usage+61, close_stdout+44, set_program_name+125, argmatch_valid+37, argmatch_valid+95, argmatch_valid+174, argmatch_valid+216
00000000002090e1         db  0x00 ; '.'
00000000002090e2         db  0x00 ; '.'
00000000002090e3         db  0x00 ; '.'
00000000002090e4         db  0x00 ; '.'
00000000002090e5         db  0x00 ; '.'
00000000002090e6         db  0x00 ; '.'
00000000002090e7         db  0x00 ; '.'
                     completed.7697:
00000000002090e8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
                     have_read_stdin:
00000000002090e9         db  0x00 ; '.'                                         ; DATA XREF=main+132, main+327, sysv_sum_file+81, bsd_sum_file+86
00000000002090ea         db  0x00 ; '.'
00000000002090eb         db  0x00 ; '.'
00000000002090ec         db  0x00 ; '.'
00000000002090ed         db  0x00 ; '.'
00000000002090ee         db  0x00 ; '.'
00000000002090ef         db  0x00 ; '.'
                     ignore_EPIPE:
00000000002090f0         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
00000000002090f1         db  0x00 ; '.'
00000000002090f2         db  0x00 ; '.'
00000000002090f3         db  0x00 ; '.'
00000000002090f4         db  0x00 ; '.'
00000000002090f5         db  0x00 ; '.'
00000000002090f6         db  0x00 ; '.'
00000000002090f7         db  0x00 ; '.'
                     file_name:
00000000002090f8         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
00000000002090f9         db  0x00 ; '.'
00000000002090fa         db  0x00 ; '.'
00000000002090fb         db  0x00 ; '.'
00000000002090fc         db  0x00 ; '.'
00000000002090fd         db  0x00 ; '.'
00000000002090fe         db  0x00 ; '.'
00000000002090ff         db  0x00 ; '.'
                     program_name:
0000000000209100         db  0x00 ; '.'                                         ; DATA XREF=usage+20, set_program_name+109
0000000000209101         db  0x00 ; '.'
0000000000209102         db  0x00 ; '.'
0000000000209103         db  0x00 ; '.'
0000000000209104         db  0x00 ; '.'
0000000000209105         db  0x00 ; '.'
0000000000209106         db  0x00 ; '.'
0000000000209107         db  0x00 ; '.'
0000000000209108         db  0x00 ; '.'
0000000000209109         db  0x00 ; '.'
000000000020910a         db  0x00 ; '.'
000000000020910b         db  0x00 ; '.'
000000000020910c         db  0x00 ; '.'
000000000020910d         db  0x00 ; '.'
000000000020910e         db  0x00 ; '.'
000000000020910f         db  0x00 ; '.'
0000000000209110         db  0x00 ; '.'
0000000000209111         db  0x00 ; '.'
0000000000209112         db  0x00 ; '.'
0000000000209113         db  0x00 ; '.'
0000000000209114         db  0x00 ; '.'
0000000000209115         db  0x00 ; '.'
0000000000209116         db  0x00 ; '.'
0000000000209117         db  0x00 ; '.'
0000000000209118         db  0x00 ; '.'
0000000000209119         db  0x00 ; '.'
000000000020911a         db  0x00 ; '.'
000000000020911b         db  0x00 ; '.'
000000000020911c         db  0x00 ; '.'
000000000020911d         db  0x00 ; '.'
000000000020911e         db  0x00 ; '.'
000000000020911f         db  0x00 ; '.'
                     slot0:
0000000000209120         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
0000000000209121         db  0x00 ; '.'
0000000000209122         db  0x00 ; '.'
0000000000209123         db  0x00 ; '.'
0000000000209124         db  0x00 ; '.'
0000000000209125         db  0x00 ; '.'
0000000000209126         db  0x00 ; '.'
0000000000209127         db  0x00 ; '.'
0000000000209128         db  0x00 ; '.'
0000000000209129         db  0x00 ; '.'
000000000020912a         db  0x00 ; '.'
000000000020912b         db  0x00 ; '.'
000000000020912c         db  0x00 ; '.'
000000000020912d         db  0x00 ; '.'
000000000020912e         db  0x00 ; '.'
000000000020912f         db  0x00 ; '.'
0000000000209130         db  0x00 ; '.'
0000000000209131         db  0x00 ; '.'
0000000000209132         db  0x00 ; '.'
0000000000209133         db  0x00 ; '.'
0000000000209134         db  0x00 ; '.'
0000000000209135         db  0x00 ; '.'
0000000000209136         db  0x00 ; '.'
0000000000209137         db  0x00 ; '.'
0000000000209138         db  0x00 ; '.'
0000000000209139         db  0x00 ; '.'
000000000020913a         db  0x00 ; '.'
000000000020913b         db  0x00 ; '.'
000000000020913c         db  0x00 ; '.'
000000000020913d         db  0x00 ; '.'
000000000020913e         db  0x00 ; '.'
000000000020913f         db  0x00 ; '.'
0000000000209140         db  0x00 ; '.'
0000000000209141         db  0x00 ; '.'
0000000000209142         db  0x00 ; '.'
0000000000209143         db  0x00 ; '.'
0000000000209144         db  0x00 ; '.'
0000000000209145         db  0x00 ; '.'
0000000000209146         db  0x00 ; '.'
0000000000209147         db  0x00 ; '.'
0000000000209148         db  0x00 ; '.'
0000000000209149         db  0x00 ; '.'
000000000020914a         db  0x00 ; '.'
000000000020914b         db  0x00 ; '.'
000000000020914c         db  0x00 ; '.'
000000000020914d         db  0x00 ; '.'
000000000020914e         db  0x00 ; '.'
000000000020914f         db  0x00 ; '.'
0000000000209150         db  0x00 ; '.'
0000000000209151         db  0x00 ; '.'
0000000000209152         db  0x00 ; '.'
0000000000209153         db  0x00 ; '.'
0000000000209154         db  0x00 ; '.'
0000000000209155         db  0x00 ; '.'
0000000000209156         db  0x00 ; '.'
0000000000209157         db  0x00 ; '.'
0000000000209158         db  0x00 ; '.'
0000000000209159         db  0x00 ; '.'
000000000020915a         db  0x00 ; '.'
000000000020915b         db  0x00 ; '.'
000000000020915c         db  0x00 ; '.'
000000000020915d         db  0x00 ; '.'
000000000020915e         db  0x00 ; '.'
000000000020915f         db  0x00 ; '.'
0000000000209160         db  0x00 ; '.'
0000000000209161         db  0x00 ; '.'
0000000000209162         db  0x00 ; '.'
0000000000209163         db  0x00 ; '.'
0000000000209164         db  0x00 ; '.'
0000000000209165         db  0x00 ; '.'
0000000000209166         db  0x00 ; '.'
0000000000209167         db  0x00 ; '.'
0000000000209168         db  0x00 ; '.'
0000000000209169         db  0x00 ; '.'
000000000020916a         db  0x00 ; '.'
000000000020916b         db  0x00 ; '.'
000000000020916c         db  0x00 ; '.'
000000000020916d         db  0x00 ; '.'
000000000020916e         db  0x00 ; '.'
000000000020916f         db  0x00 ; '.'
0000000000209170         db  0x00 ; '.'
0000000000209171         db  0x00 ; '.'
0000000000209172         db  0x00 ; '.'
0000000000209173         db  0x00 ; '.'
0000000000209174         db  0x00 ; '.'
0000000000209175         db  0x00 ; '.'
0000000000209176         db  0x00 ; '.'
0000000000209177         db  0x00 ; '.'
0000000000209178         db  0x00 ; '.'
0000000000209179         db  0x00 ; '.'
000000000020917a         db  0x00 ; '.'
000000000020917b         db  0x00 ; '.'
000000000020917c         db  0x00 ; '.'
000000000020917d         db  0x00 ; '.'
000000000020917e         db  0x00 ; '.'
000000000020917f         db  0x00 ; '.'
0000000000209180         db  0x00 ; '.'
0000000000209181         db  0x00 ; '.'
0000000000209182         db  0x00 ; '.'
0000000000209183         db  0x00 ; '.'
0000000000209184         db  0x00 ; '.'
0000000000209185         db  0x00 ; '.'
0000000000209186         db  0x00 ; '.'
0000000000209187         db  0x00 ; '.'
0000000000209188         db  0x00 ; '.'
0000000000209189         db  0x00 ; '.'
000000000020918a         db  0x00 ; '.'
000000000020918b         db  0x00 ; '.'
000000000020918c         db  0x00 ; '.'
000000000020918d         db  0x00 ; '.'
000000000020918e         db  0x00 ; '.'
000000000020918f         db  0x00 ; '.'
0000000000209190         db  0x00 ; '.'
0000000000209191         db  0x00 ; '.'
0000000000209192         db  0x00 ; '.'
0000000000209193         db  0x00 ; '.'
0000000000209194         db  0x00 ; '.'
0000000000209195         db  0x00 ; '.'
0000000000209196         db  0x00 ; '.'
0000000000209197         db  0x00 ; '.'
0000000000209198         db  0x00 ; '.'
0000000000209199         db  0x00 ; '.'
000000000020919a         db  0x00 ; '.'
000000000020919b         db  0x00 ; '.'
000000000020919c         db  0x00 ; '.'
000000000020919d         db  0x00 ; '.'
000000000020919e         db  0x00 ; '.'
000000000020919f         db  0x00 ; '.'
00000000002091a0         db  0x00 ; '.'
00000000002091a1         db  0x00 ; '.'
00000000002091a2         db  0x00 ; '.'
00000000002091a3         db  0x00 ; '.'
00000000002091a4         db  0x00 ; '.'
00000000002091a5         db  0x00 ; '.'
00000000002091a6         db  0x00 ; '.'
00000000002091a7         db  0x00 ; '.'
00000000002091a8         db  0x00 ; '.'
00000000002091a9         db  0x00 ; '.'
00000000002091aa         db  0x00 ; '.'
00000000002091ab         db  0x00 ; '.'
00000000002091ac         db  0x00 ; '.'
00000000002091ad         db  0x00 ; '.'
00000000002091ae         db  0x00 ; '.'
00000000002091af         db  0x00 ; '.'
00000000002091b0         db  0x00 ; '.'
00000000002091b1         db  0x00 ; '.'
00000000002091b2         db  0x00 ; '.'
00000000002091b3         db  0x00 ; '.'
00000000002091b4         db  0x00 ; '.'
00000000002091b5         db  0x00 ; '.'
00000000002091b6         db  0x00 ; '.'
00000000002091b7         db  0x00 ; '.'
00000000002091b8         db  0x00 ; '.'
00000000002091b9         db  0x00 ; '.'
00000000002091ba         db  0x00 ; '.'
00000000002091bb         db  0x00 ; '.'
00000000002091bc         db  0x00 ; '.'
00000000002091bd         db  0x00 ; '.'
00000000002091be         db  0x00 ; '.'
00000000002091bf         db  0x00 ; '.'
00000000002091c0         db  0x00 ; '.'
00000000002091c1         db  0x00 ; '.'
00000000002091c2         db  0x00 ; '.'
00000000002091c3         db  0x00 ; '.'
00000000002091c4         db  0x00 ; '.'
00000000002091c5         db  0x00 ; '.'
00000000002091c6         db  0x00 ; '.'
00000000002091c7         db  0x00 ; '.'
00000000002091c8         db  0x00 ; '.'
00000000002091c9         db  0x00 ; '.'
00000000002091ca         db  0x00 ; '.'
00000000002091cb         db  0x00 ; '.'
00000000002091cc         db  0x00 ; '.'
00000000002091cd         db  0x00 ; '.'
00000000002091ce         db  0x00 ; '.'
00000000002091cf         db  0x00 ; '.'
00000000002091d0         db  0x00 ; '.'
00000000002091d1         db  0x00 ; '.'
00000000002091d2         db  0x00 ; '.'
00000000002091d3         db  0x00 ; '.'
00000000002091d4         db  0x00 ; '.'
00000000002091d5         db  0x00 ; '.'
00000000002091d6         db  0x00 ; '.'
00000000002091d7         db  0x00 ; '.'
00000000002091d8         db  0x00 ; '.'
00000000002091d9         db  0x00 ; '.'
00000000002091da         db  0x00 ; '.'
00000000002091db         db  0x00 ; '.'
00000000002091dc         db  0x00 ; '.'
00000000002091dd         db  0x00 ; '.'
00000000002091de         db  0x00 ; '.'
00000000002091df         db  0x00 ; '.'
00000000002091e0         db  0x00 ; '.'
00000000002091e1         db  0x00 ; '.'
00000000002091e2         db  0x00 ; '.'
00000000002091e3         db  0x00 ; '.'
00000000002091e4         db  0x00 ; '.'
00000000002091e5         db  0x00 ; '.'
00000000002091e6         db  0x00 ; '.'
00000000002091e7         db  0x00 ; '.'
00000000002091e8         db  0x00 ; '.'
00000000002091e9         db  0x00 ; '.'
00000000002091ea         db  0x00 ; '.'
00000000002091eb         db  0x00 ; '.'
00000000002091ec         db  0x00 ; '.'
00000000002091ed         db  0x00 ; '.'
00000000002091ee         db  0x00 ; '.'
00000000002091ef         db  0x00 ; '.'
00000000002091f0         db  0x00 ; '.'
00000000002091f1         db  0x00 ; '.'
00000000002091f2         db  0x00 ; '.'
00000000002091f3         db  0x00 ; '.'
00000000002091f4         db  0x00 ; '.'
00000000002091f5         db  0x00 ; '.'
00000000002091f6         db  0x00 ; '.'
00000000002091f7         db  0x00 ; '.'
00000000002091f8         db  0x00 ; '.'
00000000002091f9         db  0x00 ; '.'
00000000002091fa         db  0x00 ; '.'
00000000002091fb         db  0x00 ; '.'
00000000002091fc         db  0x00 ; '.'
00000000002091fd         db  0x00 ; '.'
00000000002091fe         db  0x00 ; '.'
00000000002091ff         db  0x00 ; '.'
0000000000209200         db  0x00 ; '.'
0000000000209201         db  0x00 ; '.'
0000000000209202         db  0x00 ; '.'
0000000000209203         db  0x00 ; '.'
0000000000209204         db  0x00 ; '.'
0000000000209205         db  0x00 ; '.'
0000000000209206         db  0x00 ; '.'
0000000000209207         db  0x00 ; '.'
0000000000209208         db  0x00 ; '.'
0000000000209209         db  0x00 ; '.'
000000000020920a         db  0x00 ; '.'
000000000020920b         db  0x00 ; '.'
000000000020920c         db  0x00 ; '.'
000000000020920d         db  0x00 ; '.'
000000000020920e         db  0x00 ; '.'
000000000020920f         db  0x00 ; '.'
0000000000209210         db  0x00 ; '.'
0000000000209211         db  0x00 ; '.'
0000000000209212         db  0x00 ; '.'
0000000000209213         db  0x00 ; '.'
0000000000209214         db  0x00 ; '.'
0000000000209215         db  0x00 ; '.'
0000000000209216         db  0x00 ; '.'
0000000000209217         db  0x00 ; '.'
0000000000209218         db  0x00 ; '.'
0000000000209219         db  0x00 ; '.'
000000000020921a         db  0x00 ; '.'
000000000020921b         db  0x00 ; '.'
000000000020921c         db  0x00 ; '.'
000000000020921d         db  0x00 ; '.'
000000000020921e         db  0x00 ; '.'
000000000020921f         db  0x00 ; '.'
                     default_quoting_options:
0000000000209220         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
0000000000209221         db  0x00 ; '.'
0000000000209222         db  0x00 ; '.'
0000000000209223         db  0x00 ; '.'
0000000000209224         db  0x00 ; '.'
0000000000209225         db  0x00 ; '.'
0000000000209226         db  0x00 ; '.'
0000000000209227         db  0x00 ; '.'
0000000000209228         db  0x00 ; '.'
0000000000209229         db  0x00 ; '.'
000000000020922a         db  0x00 ; '.'
000000000020922b         db  0x00 ; '.'
000000000020922c         db  0x00 ; '.'
000000000020922d         db  0x00 ; '.'
000000000020922e         db  0x00 ; '.'
000000000020922f         db  0x00 ; '.'
0000000000209230         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
0000000000209231         db  0x00 ; '.'
0000000000209232         db  0x00 ; '.'
0000000000209233         db  0x00 ; '.'
0000000000209234         db  0x00 ; '.'
0000000000209235         db  0x00 ; '.'
0000000000209236         db  0x00 ; '.'
0000000000209237         db  0x00 ; '.'
0000000000209238         db  0x00 ; '.'
0000000000209239         db  0x00 ; '.'
000000000020923a         db  0x00 ; '.'
000000000020923b         db  0x00 ; '.'
000000000020923c         db  0x00 ; '.'
000000000020923d         db  0x00 ; '.'
000000000020923e         db  0x00 ; '.'
000000000020923f         db  0x00 ; '.'
0000000000209240         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
0000000000209241         db  0x00 ; '.'
0000000000209242         db  0x00 ; '.'
0000000000209243         db  0x00 ; '.'
0000000000209244         db  0x00 ; '.'
0000000000209245         db  0x00 ; '.'
0000000000209246         db  0x00 ; '.'
0000000000209247         db  0x00 ; '.'
0000000000209248         db  0x00 ; '.'
0000000000209249         db  0x00 ; '.'
000000000020924a         db  0x00 ; '.'
000000000020924b         db  0x00 ; '.'
000000000020924c         db  0x00 ; '.'
000000000020924d         db  0x00 ; '.'
000000000020924e         db  0x00 ; '.'
000000000020924f         db  0x00 ; '.'
                     qword_209250:
0000000000209250         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
0000000000209251         db  0x00 ; '.'
0000000000209252         db  0x00 ; '.'
0000000000209253         db  0x00 ; '.'
0000000000209254         db  0x00 ; '.'
0000000000209255         db  0x00 ; '.'
0000000000209256         db  0x00 ; '.'
0000000000209257         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x209260; 0x209620[ (960 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x209260; 0x412880[ (2135584 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     __uflow:
0000000000209260         extern function code                                   ; DATA XREF=__uflow@GOT
                     getenv:
0000000000209268         extern function code                                   ; DATA XREF=getenv@GOT
                     free:
0000000000209270         extern function code                                   ; DATA XREF=free@GOT
                     abort:
0000000000209278         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
0000000000209280         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
0000000000209288         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
0000000000209290         extern function code
                     _exit:
0000000000209298         extern function code                                   ; DATA XREF=_exit@GOT
                     __fpending:
00000000002092a0         extern function code                                   ; DATA XREF=__fpending@GOT
                     localeconv:
00000000002092a8         extern function code                                   ; DATA XREF=localeconv@GOT
                     textdomain:
00000000002092b0         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
00000000002092b8         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
00000000002092c0         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
00000000002092c8         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
00000000002092d0         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
00000000002092d8         extern function code                                   ; DATA XREF=strlen@GOT
                     __stack_chk_fail:
00000000002092e0         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
00000000002092e8         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
00000000002092f0         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     strchr:
00000000002092f8         extern function code                                   ; DATA XREF=strchr@GOT
                     __overflow:
0000000000209300         extern function code                                   ; DATA XREF=__overflow@GOT
                     strrchr:
0000000000209308         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
0000000000209310         extern function code                                   ; DATA XREF=lseek@GOT
                     __assert_fail:
0000000000209318         extern function code                                   ; DATA XREF=__assert_fail@GOT
                     __strtoul_internal:
0000000000209320         extern function code                                   ; DATA XREF=__strtoul_internal@GOT
                     memset:
0000000000209328         extern function code                                   ; DATA XREF=memset@GOT
                     close:
0000000000209330         extern function code                                   ; DATA XREF=close@GOT
                     posix_fadvise:
0000000000209338         extern function code                                   ; DATA XREF=posix_fadvise@GOT
                     read:
0000000000209340         extern function code                                   ; DATA XREF=read@GOT
                     __libc_start_main:
0000000000209348         extern function code
                     memcmp:
0000000000209350         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
0000000000209358         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
0000000000209360         extern function code                                   ; DATA XREF=calloc@GOT
                     __memcpy_chk:
0000000000209368         extern function code                                   ; DATA XREF=__memcpy_chk@GOT
                     __gmon_start__:
0000000000209370         extern function code
                     memcpy:
0000000000209378         extern function code                                   ; DATA XREF=memcpy@GOT
                     fileno:
0000000000209380         extern function code                                   ; DATA XREF=fileno@GOT
                     malloc:
0000000000209388         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
0000000000209390         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
0000000000209398         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __freading:
00000000002093a0         extern function code                                   ; DATA XREF=__freading@GOT
                     realloc:
00000000002093a8         extern function code                                   ; DATA XREF=realloc@GOT
                     setlocale:
00000000002093b0         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
00000000002093b8         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     setvbuf:
00000000002093c0         extern function code                                   ; DATA XREF=setvbuf@GOT
                     memmove:
00000000002093c8         extern function code                                   ; DATA XREF=memmove@GOT
                     error:
00000000002093d0         extern function code                                   ; DATA XREF=error@GOT
                     open:
00000000002093d8         extern function code                                   ; DATA XREF=open@GOT
                     fseeko:
00000000002093e0         extern function code                                   ; DATA XREF=fseeko@GOT
                     fopen:
00000000002093e8         extern function code                                   ; DATA XREF=fopen@GOT
                     __cxa_atexit:
00000000002093f0         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     exit:
00000000002093f8         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
0000000000209400         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
0000000000209408         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
0000000000209410         extern function code
                     mbsinit:
0000000000209418         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
0000000000209420         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
0000000000209428         extern function code
                     __ctype_b_loc:
0000000000209430         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     __sprintf_chk:
0000000000209438         extern function code                                   ; DATA XREF=__sprintf_chk@GOT
                     __uflow@@GLIBC_2.2.5:
0000000000209440         extern function code
                     getenv@@GLIBC_2.2.5:
0000000000209448         extern function code
                     free@@GLIBC_2.2.5:
0000000000209450         extern function code
                     abort@@GLIBC_2.2.5:
0000000000209458         extern function code
                     __errno_location@@GLIBC_2.2.5:
0000000000209460         extern function code
                     strncmp@@GLIBC_2.2.5:
0000000000209468         extern function code
                     _ITM_deregisterTMCloneTable_209470:        // _ITM_deregisterTMCloneTable
0000000000209470         extern function code
                     _exit@@GLIBC_2.2.5:
0000000000209478         extern function code
                     __fpending@@GLIBC_2.2.5:
0000000000209480         extern function code
                     localeconv@@GLIBC_2.2.5:
0000000000209488         extern function code
                     textdomain@@GLIBC_2.2.5:
0000000000209490         extern function code
                     fclose@@GLIBC_2.2.5:
0000000000209498         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
00000000002094a0         extern function code
                     dcgettext@@GLIBC_2.2.5:
00000000002094a8         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
00000000002094b0         extern function code
                     strlen@@GLIBC_2.2.5:
00000000002094b8         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
00000000002094c0         extern function code
                     getopt_long@@GLIBC_2.2.5:
00000000002094c8         extern function code
                     mbrtowc@@GLIBC_2.2.5:
00000000002094d0         extern function code
                     strchr@@GLIBC_2.2.5:
00000000002094d8         extern function code
                     __overflow@@GLIBC_2.2.5:
00000000002094e0         extern function code
                     strrchr@@GLIBC_2.2.5:
00000000002094e8         extern function code
                     lseek@@GLIBC_2.2.5:
00000000002094f0         extern function code
                     __assert_fail@@GLIBC_2.2.5:
00000000002094f8         extern function code
                     __strtoul_internal@@GLIBC_2.2.5:
0000000000209500         extern function code
                     memset@@GLIBC_2.2.5:
0000000000209508         extern function code
                     close@@GLIBC_2.2.5:
0000000000209510         extern function code
                     posix_fadvise@@GLIBC_2.2.5:
0000000000209518         extern function code
                     read@@GLIBC_2.2.5:
0000000000209520         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
0000000000209528         extern function code
                     memcmp@@GLIBC_2.2.5:
0000000000209530         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
0000000000209538         extern function code
                     calloc@@GLIBC_2.2.5:
0000000000209540         extern function code
                     __memcpy_chk@@GLIBC_2.3.4:
0000000000209548         extern function code
                     __gmon_start___209550:        // __gmon_start__
0000000000209550         extern function code
                     memcpy@@GLIBC_2.14:
0000000000209558         extern function code
                     fileno@@GLIBC_2.2.5:
0000000000209560         extern function code
                     malloc@@GLIBC_2.2.5:
0000000000209568         extern function code
                     fflush@@GLIBC_2.2.5:
0000000000209570         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
0000000000209578         extern function code
                     __freading@@GLIBC_2.2.5:
0000000000209580         extern function code
                     realloc@@GLIBC_2.2.5:
0000000000209588         extern function code
                     setlocale@@GLIBC_2.2.5:
0000000000209590         extern function code
                     __printf_chk@@GLIBC_2.3.4:
0000000000209598         extern function code
                     setvbuf@@GLIBC_2.2.5:
00000000002095a0         extern function code
                     memmove@@GLIBC_2.2.5:
00000000002095a8         extern function code
                     error@@GLIBC_2.2.5:
00000000002095b0         extern function code
                     open@@GLIBC_2.2.5:
00000000002095b8         extern function code
                     fseeko@@GLIBC_2.2.5:
00000000002095c0         extern function code
                     fopen@@GLIBC_2.2.5:
00000000002095c8         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
00000000002095d0         extern function code
                     exit@@GLIBC_2.2.5:
00000000002095d8         extern function code
                     fwrite@@GLIBC_2.2.5:
00000000002095e0         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
00000000002095e8         extern function code
                     _ITM_registerTMCloneTable_2095f0:        // _ITM_registerTMCloneTable
00000000002095f0         extern function code
                     mbsinit@@GLIBC_2.2.5:
00000000002095f8         extern function code
                     iswprint@@GLIBC_2.2.5:
0000000000209600         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
0000000000209608         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
0000000000209610         extern function code
                     __sprintf_chk@@GLIBC_2.3.4:
0000000000209618         extern function code
