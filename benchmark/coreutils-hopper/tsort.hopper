
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/tsort
        UUID: 601CBEF1-BB39-CCDC-CE88-2A7736F744F0
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0x74d8[ (29912 bytes)
        ; File offset : [0; 29912[ (29912 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0x50 ; 'P'
0000000000000019         db  0x1e ; '.'
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0x90 ; '.'
0000000000000029         db  0x9f ; '.'
000000000000002a         db  0x02 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0xd8 ; '.'
00000000000000d1         db  0x74 ; 't'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0xd8 ; '.'
00000000000000d9         db  0x74 ; 't'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0x70 ; 'p'
00000000000000f1         db  0x7b ; '{'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0x70 ; 'p'
00000000000000f9         db  0x7b ; '{'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0x70 ; 'p'                                         ; DATA XREF=quotearg_free+87, rpl_fflush+18, slotvec0
0000000000000101         db  0x7b ; '{'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0x10 ; '.'
0000000000000109         db  0x05 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0x08 ; '.'
0000000000000111         db  0x07 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0x38 ; '8'
0000000000000129         db  0x7c ; '|'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0x38 ; '8'
0000000000000131         db  0x7c ; '|'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0x38 ; '8'
0000000000000139         db  0x7c ; '|'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0x90 ; '.'
0000000000000199         db  0x64 ; 'd'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0x90 ; '.'
00000000000001a1         db  0x64 ; 'd'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0x90 ; '.'
00000000000001a9         db  0x64 ; 'd'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0xac ; '.'
00000000000001b1         db  0x02 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0xac ; '.'
00000000000001b9         db  0x02 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'                                         ; DATA XREF=main+1878
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0x70 ; 'p'
0000000000000209         db  0x7b ; '{'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0x70 ; 'p'
0000000000000211         db  0x7b ; '{'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0x70 ; 'p'
0000000000000219         db  0x7b ; '{'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0x90 ; '.'
0000000000000221         db  0x04 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0x90 ; '.'
0000000000000229         db  0x04 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0x60 ; '`'
0000000000000285         db  0x1c ; '.'
0000000000000286         db  0xbe ; '.'
0000000000000287         db  0xf1 ; '.'
0000000000000288         db  0xbb ; '.'
0000000000000289         db  0x39 ; '9'
000000000000028a         db  0xcc ; '.'
000000000000028b         db  0xdc ; '.'
000000000000028c         db  0xce ; '.'
000000000000028d         db  0x88 ; '.'
000000000000028e         db  0x2a ; '*'
000000000000028f         db  0x77 ; 'w'
0000000000000290         db  0x36 ; '6'
0000000000000291         db  0xf7 ; '.'
0000000000000292         db  0x44 ; 'D'
0000000000000293         db  0xf0 ; '.'
0000000000000294         db  0x5d ; ']'
0000000000000295         db  0xa6 ; '.'
0000000000000296         db  0xae ; '.'
0000000000000297         db  0x05 ; '.'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2e0[ (72 bytes)
        ; File offset : [664; 736[ (72 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x36 ; '6'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x06 ; '.'
00000000000002a9         db  0xc9 ; '.'
00000000000002aa         db  0x61 ; 'a'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0xa0 ; '.'
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x18 ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x36 ; '6'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x37 ; '7'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x3e ; '>'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x66 ; 'f'
00000000000002c5         db  0x55 ; 'U'
00000000000002c6         db  0x61 ; 'a'
00000000000002c7         db  0x10 ; '.'
00000000000002c8         db  0x96 ; '.'
00000000000002c9         db  0xa0 ; '.'
00000000000002ca         db  0x89 ; '.'
00000000000002cb         db  0x97 ; '.'
00000000000002cc         db  0xce ; '.'
00000000000002cd         db  0x2c ; ','
00000000000002ce         db  0x63 ; 'c'
00000000000002cf         db  0x72 ; 'r'
00000000000002d0         db  0xe4 ; '.'
00000000000002d1         db  0x62 ; 'b'
00000000000002d2         db  0x41 ; 'A'
00000000000002d3         db  0xf5 ; '.'
00000000000002d4         db  0xc0 ; '.'
00000000000002d5         db  0xb3 ; '.'
00000000000002d6         db  0xf7 ; '.'
00000000000002d7         db  0x12 ; '.'
00000000000002d8         db  0x39 ; '9'
00000000000002d9         db  0xf2 ; '.'
00000000000002da         db  0x8b ; '.'
00000000000002db         db  0x1c ; '.'
00000000000002dc         db  0x33 ; '3'
00000000000002dd         db  0xc4 ; '.'
00000000000002de         db  0xf7 ; '.'
00000000000002df         db  0x12 ; '.'


        ; Section .dynsym
        ; Range: [0x2e0; 0x8c8[ (1512 bytes)
        ; File offset : [736; 2248[ (1512 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0x46 ; 'F'
00000000000002f9         db  0x01 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x12 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x19 ; '.'
0000000000000311         db  0x02 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x12 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0x7f ; '.'
0000000000000329         db  0x00 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x12 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0xf1 ; '.'
0000000000000341         db  0x00 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x12 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0x31 ; '1'
0000000000000359         db  0x00 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x12 ; '.'
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0x7d ; '}'
0000000000000371         db  0x02 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x20 ; ' '
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0x8b ; '.'
0000000000000389         db  0x00 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x12 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0x9c ; '.'
00000000000003a1         db  0x01 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x12 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0x58 ; 'X'
00000000000003b9         db  0x00 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x12 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0xd8 ; '.'
00000000000003d1         db  0x01 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x12 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0x30 ; '0'
00000000000003e9         db  0x01 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x12 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0xd4 ; '.'
0000000000000401         db  0x01 ; '.'
0000000000000402         db  0x00 ; '.'
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x12 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'
0000000000000407         db  0x00 ; '.'
0000000000000408         db  0x00 ; '.'
0000000000000409         db  0x00 ; '.'
000000000000040a         db  0x00 ; '.'
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0x48 ; 'H'
0000000000000419         db  0x00 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x12 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0xb7 ; '.'
0000000000000431         db  0x00 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x12 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0xe3 ; '.'
0000000000000449         db  0x00 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x12 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0x5d ; ']'
0000000000000461         db  0x00 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x12 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x7a ; 'z'
0000000000000479         db  0x01 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x12 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0x29 ; ')'
0000000000000491         db  0x00 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x12 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x09 ; '.'
00000000000004a9         db  0x01 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x12 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0x40 ; '@'
00000000000004c1         db  0x00 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x12 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x23 ; '#'
00000000000004d9         db  0x01 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x12 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0xa9 ; '.'
00000000000004f1         db  0x00 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x12 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0xea ; '.'
0000000000000509         db  0x00 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x12 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0x86 ; '.'
0000000000000521         db  0x01 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x12 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0x31 ; '1'
0000000000000539         db  0x01 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x12 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0xce ; '.'
0000000000000551         db  0x00 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x12 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0xf1 ; '.'
0000000000000569         db  0x01 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x12 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0x02 ; '.'
0000000000000581         db  0x01 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x12 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0x0a ; '.'
0000000000000599         db  0x02 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x12 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0xdc ; '.'
00000000000005b1         db  0x00 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x12 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0xea ; '.'
00000000000005c9         db  0x01 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x12 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0x99 ; '.'
00000000000005e1         db  0x02 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x20 ; ' '
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x29 ; ')'
00000000000005f9         db  0x01 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x12 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x8e ; '.'
0000000000000611         db  0x01 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x12 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0x37 ; '7'
0000000000000629         db  0x01 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x12 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x0b ; '.'
0000000000000641         db  0x00 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x12 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x4e ; 'N'
0000000000000659         db  0x01 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x12 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x68 ; 'h'
0000000000000671         db  0x01 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x12 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0x77 ; 'w'
0000000000000689         db  0x00 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x12 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x1f ; '.'
00000000000006a1         db  0x00 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x12 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x12 ; '.'
00000000000006b9         db  0x00 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x12 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x52 ; 'R'
00000000000006d1         db  0x00 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x12 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0x89 ; '.'
00000000000006e9         db  0x01 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x12 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x03 ; '.'
0000000000000701         db  0x02 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x12 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x39 ; '9'
0000000000000719         db  0x02 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x12 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x8c ; '.'
0000000000000731         db  0x00 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x12 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0x95 ; '.'
0000000000000749         db  0x01 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x12 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0x0e ; '.'
0000000000000761         db  0x01 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x12 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0xa8 ; '.'
0000000000000779         db  0x02 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x20 ; ' '
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x3e ; '>'
0000000000000791         db  0x01 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x12 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0x6e ; 'n'
00000000000007a9         db  0x00 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x12 ; '.'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x00 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0xc5 ; '.'
00000000000007c1         db  0x01 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x22 ; '"'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x00 ; '.'
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x5a ; 'Z'
00000000000007d9         db  0x01 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x12 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x00 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0x1c ; '.'
00000000000007f1         db  0x01 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x11 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x19 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x88 ; '.'
00000000000007f9         db  0x80 ; '.'
00000000000007fa         db  0x20 ; ' '
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x08 ; '.'
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x1e ; '.'
0000000000000809         db  0x02 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x11 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x19 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0x80 ; '.'
0000000000000811         db  0x80 ; '.'
0000000000000812         db  0x20 ; ' '
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x08 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0x85 ; '.'
0000000000000821         db  0x00 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x11 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x19 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0x90 ; '.'
0000000000000829         db  0x80 ; '.'
000000000000082a         db  0x20 ; ' '
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x08 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x91 ; '.'
0000000000000839         db  0x00 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x21 ; '!'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x19 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0xa0 ; '.'
0000000000000841         db  0x80 ; '.'
0000000000000842         db  0x20 ; ' '
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x08 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0x29 ; ')'
0000000000000851         db  0x02 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x11 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x19 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0xa0 ; '.'
0000000000000859         db  0x80 ; '.'
000000000000085a         db  0x20 ; ' '
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x08 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0xa7 ; '.'
0000000000000869         db  0x01 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x21 ; '!'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x19 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0x80 ; '.'
0000000000000871         db  0x80 ; '.'
0000000000000872         db  0x20 ; ' '
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x08 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0xe3 ; '.'
0000000000000881         db  0x01 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x11 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x19 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0xc0 ; '.'
0000000000000889         db  0x80 ; '.'
000000000000088a         db  0x20 ; ' '
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x04 ; '.'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x00 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0x73 ; 's'
0000000000000899         db  0x01 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x11 ; '.'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x19 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0xe0 ; '.'
00000000000008a1         db  0x80 ; '.'
00000000000008a2         db  0x20 ; ' '
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x00 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x08 ; '.'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x00 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x00 ; '.'
00000000000008b0         db  0x39 ; '9'
00000000000008b1         db  0x00 ; '.'
00000000000008b2         db  0x00 ; '.'
00000000000008b3         db  0x00 ; '.'
00000000000008b4         db  0x11 ; '.'
00000000000008b5         db  0x00 ; '.'
00000000000008b6         db  0x19 ; '.'
00000000000008b7         db  0x00 ; '.'
00000000000008b8         db  0x98 ; '.'
00000000000008b9         db  0x80 ; '.'
00000000000008ba         db  0x20 ; ' '
00000000000008bb         db  0x00 ; '.'
00000000000008bc         db  0x00 ; '.'
00000000000008bd         db  0x00 ; '.'
00000000000008be         db  0x00 ; '.'
00000000000008bf         db  0x00 ; '.'
00000000000008c0         db  0x04 ; '.'
00000000000008c1         db  0x00 ; '.'
00000000000008c2         db  0x00 ; '.'
00000000000008c3         db  0x00 ; '.'
00000000000008c4         db  0x00 ; '.'
00000000000008c5         db  0x00 ; '.'
00000000000008c6         db  0x00 ; '.'
00000000000008c7         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0x8c8; 0xb8a[ (706 bytes)
        ; File offset : [2248; 2954[ (706 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

00000000000008c8         db  0x00 ; '.'
00000000000008c9         db  0x6c ; 'l'
00000000000008ca         db  0x69 ; 'i'
00000000000008cb         db  0x62 ; 'b'
00000000000008cc         db  0x63 ; 'c'
00000000000008cd         db  0x2e ; '.'
00000000000008ce         db  0x73 ; 's'
00000000000008cf         db  0x6f ; 'o'
00000000000008d0         db  0x2e ; '.'
00000000000008d1         db  0x36 ; '6'
00000000000008d2         db  0x00 ; '.'
00000000000008d3         db  0x66 ; 'f'
00000000000008d4         db  0x66 ; 'f'
00000000000008d5         db  0x6c ; 'l'
00000000000008d6         db  0x75 ; 'u'
00000000000008d7         db  0x73 ; 's'
00000000000008d8         db  0x68 ; 'h'
00000000000008d9         db  0x00 ; '.'
00000000000008da         db  0x5f ; '_'
00000000000008db         db  0x5f ; '_'
00000000000008dc         db  0x70 ; 'p'
00000000000008dd         db  0x72 ; 'r'
00000000000008de         db  0x69 ; 'i'
00000000000008df         db  0x6e ; 'n'
00000000000008e0         db  0x74 ; 't'
00000000000008e1         db  0x66 ; 'f'
00000000000008e2         db  0x5f ; '_'
00000000000008e3         db  0x63 ; 'c'
00000000000008e4         db  0x68 ; 'h'
00000000000008e5         db  0x6b ; 'k'
00000000000008e6         db  0x00 ; '.'
00000000000008e7         db  0x73 ; 's'
00000000000008e8         db  0x65 ; 'e'
00000000000008e9         db  0x74 ; 't'
00000000000008ea         db  0x6c ; 'l'
00000000000008eb         db  0x6f ; 'o'
00000000000008ec         db  0x63 ; 'c'
00000000000008ed         db  0x61 ; 'a'
00000000000008ee         db  0x6c ; 'l'
00000000000008ef         db  0x65 ; 'e'
00000000000008f0         db  0x00 ; '.'
00000000000008f1         db  0x6d ; 'm'
00000000000008f2         db  0x62 ; 'b'
00000000000008f3         db  0x72 ; 'r'
00000000000008f4         db  0x74 ; 't'
00000000000008f5         db  0x6f ; 'o'
00000000000008f6         db  0x77 ; 'w'
00000000000008f7         db  0x63 ; 'c'
00000000000008f8         db  0x00 ; '.'
00000000000008f9         db  0x73 ; 's'
00000000000008fa         db  0x74 ; 't'
00000000000008fb         db  0x72 ; 'r'
00000000000008fc         db  0x6e ; 'n'
00000000000008fd         db  0x63 ; 'c'
00000000000008fe         db  0x6d ; 'm'
00000000000008ff         db  0x70 ; 'p'
0000000000000900         db  0x00 ; '.'
0000000000000901         db  0x6f ; 'o'
0000000000000902         db  0x70 ; 'p'
0000000000000903         db  0x74 ; 't'
0000000000000904         db  0x69 ; 'i'
0000000000000905         db  0x6e ; 'n'
0000000000000906         db  0x64 ; 'd'
0000000000000907         db  0x00 ; '.'
0000000000000908         db  0x73 ; 's'
0000000000000909         db  0x74 ; 't'
000000000000090a         db  0x72 ; 'r'
000000000000090b         db  0x72 ; 'r'
000000000000090c         db  0x63 ; 'c'
000000000000090d         db  0x68 ; 'h'
000000000000090e         db  0x72 ; 'r'
000000000000090f         db  0x00 ; '.'
0000000000000910         db  0x64 ; 'd'
0000000000000911         db  0x63 ; 'c'
0000000000000912         db  0x67 ; 'g'
0000000000000913         db  0x65 ; 'e'
0000000000000914         db  0x74 ; 't'
0000000000000915         db  0x74 ; 't'
0000000000000916         db  0x65 ; 'e'
0000000000000917         db  0x78 ; 'x'
0000000000000918         db  0x74 ; 't'
0000000000000919         db  0x00 ; '.'
000000000000091a         db  0x65 ; 'e'
000000000000091b         db  0x72 ; 'r'
000000000000091c         db  0x72 ; 'r'
000000000000091d         db  0x6f ; 'o'
000000000000091e         db  0x72 ; 'r'
000000000000091f         db  0x00 ; '.'
0000000000000920         db  0x70 ; 'p'
0000000000000921         db  0x75 ; 'u'
0000000000000922         db  0x74 ; 't'
0000000000000923         db  0x73 ; 's'
0000000000000924         db  0x00 ; '.'
0000000000000925         db  0x5f ; '_'
0000000000000926         db  0x5f ; '_'
0000000000000927         db  0x73 ; 's'
0000000000000928         db  0x74 ; 't'
0000000000000929         db  0x61 ; 'a'
000000000000092a         db  0x63 ; 'c'
000000000000092b         db  0x6b ; 'k'
000000000000092c         db  0x5f ; '_'
000000000000092d         db  0x63 ; 'c'
000000000000092e         db  0x68 ; 'h'
000000000000092f         db  0x6b ; 'k'
0000000000000930         db  0x5f ; '_'
0000000000000931         db  0x66 ; 'f'
0000000000000932         db  0x61 ; 'a'
0000000000000933         db  0x69 ; 'i'
0000000000000934         db  0x6c ; 'l'
0000000000000935         db  0x00 ; '.'
0000000000000936         db  0x69 ; 'i'
0000000000000937         db  0x73 ; 's'
0000000000000938         db  0x77 ; 'w'
0000000000000939         db  0x70 ; 'p'
000000000000093a         db  0x72 ; 'r'
000000000000093b         db  0x69 ; 'i'
000000000000093c         db  0x6e ; 'n'
000000000000093d         db  0x74 ; 't'
000000000000093e         db  0x00 ; '.'
000000000000093f         db  0x72 ; 'r'
0000000000000940         db  0x65 ; 'e'
0000000000000941         db  0x61 ; 'a'
0000000000000942         db  0x6c ; 'l'
0000000000000943         db  0x6c ; 'l'
0000000000000944         db  0x6f ; 'o'
0000000000000945         db  0x63 ; 'c'
0000000000000946         db  0x00 ; '.'
0000000000000947         db  0x61 ; 'a'
0000000000000948         db  0x62 ; 'b'
0000000000000949         db  0x6f ; 'o'
000000000000094a         db  0x72 ; 'r'
000000000000094b         db  0x74 ; 't'
000000000000094c         db  0x00 ; '.'
000000000000094d         db  0x73 ; 's'
000000000000094e         db  0x74 ; 't'
000000000000094f         db  0x64 ; 'd'
0000000000000950         db  0x69 ; 'i'
0000000000000951         db  0x6e ; 'n'
0000000000000952         db  0x00 ; '.'
0000000000000953         db  0x5f ; '_'
0000000000000954         db  0x65 ; 'e'
0000000000000955         db  0x78 ; 'x'
0000000000000956         db  0x69 ; 'i'
0000000000000957         db  0x74 ; 't'
0000000000000958         db  0x00 ; '.'
0000000000000959         db  0x70 ; 'p'
000000000000095a         db  0x72 ; 'r'
000000000000095b         db  0x6f ; 'o'
000000000000095c         db  0x67 ; 'g'
000000000000095d         db  0x72 ; 'r'
000000000000095e         db  0x61 ; 'a'
000000000000095f         db  0x6d ; 'm'
0000000000000960         db  0x5f ; '_'
0000000000000961         db  0x69 ; 'i'
0000000000000962         db  0x6e ; 'n'
0000000000000963         db  0x76 ; 'v'
0000000000000964         db  0x6f ; 'o'
0000000000000965         db  0x63 ; 'c'
0000000000000966         db  0x61 ; 'a'
0000000000000967         db  0x74 ; 't'
0000000000000968         db  0x69 ; 'i'
0000000000000969         db  0x6f ; 'o'
000000000000096a         db  0x6e ; 'n'
000000000000096b         db  0x5f ; '_'
000000000000096c         db  0x6e ; 'n'
000000000000096d         db  0x61 ; 'a'
000000000000096e         db  0x6d ; 'm'
000000000000096f         db  0x65 ; 'e'
0000000000000970         db  0x00 ; '.'
0000000000000971         db  0x5f ; '_'
0000000000000972         db  0x5f ; '_'
0000000000000973         db  0x61 ; 'a'
0000000000000974         db  0x73 ; 's'
0000000000000975         db  0x73 ; 's'
0000000000000976         db  0x65 ; 'e'
0000000000000977         db  0x72 ; 'r'
0000000000000978         db  0x74 ; 't'
0000000000000979         db  0x5f ; '_'
000000000000097a         db  0x66 ; 'f'
000000000000097b         db  0x61 ; 'a'
000000000000097c         db  0x69 ; 'i'
000000000000097d         db  0x6c ; 'l'
000000000000097e         db  0x00 ; '.'
000000000000097f         db  0x5f ; '_'
0000000000000980         db  0x5f ; '_'
0000000000000981         db  0x63 ; 'c'
0000000000000982         db  0x74 ; 't'
0000000000000983         db  0x79 ; 'y'
0000000000000984         db  0x70 ; 'p'
0000000000000985         db  0x65 ; 'e'
0000000000000986         db  0x5f ; '_'
0000000000000987         db  0x67 ; 'g'
0000000000000988         db  0x65 ; 'e'
0000000000000989         db  0x74 ; 't'
000000000000098a         db  0x5f ; '_'
000000000000098b         db  0x6d ; 'm'
000000000000098c         db  0x62 ; 'b'
000000000000098d         db  0x5f ; '_'
000000000000098e         db  0x63 ; 'c'
000000000000098f         db  0x75 ; 'u'
0000000000000990         db  0x72 ; 'r'
0000000000000991         db  0x5f ; '_'
0000000000000992         db  0x6d ; 'm'
0000000000000993         db  0x61 ; 'a'
0000000000000994         db  0x78 ; 'x'
0000000000000995         db  0x00 ; '.'
0000000000000996         db  0x70 ; 'p'
0000000000000997         db  0x6f ; 'o'
0000000000000998         db  0x73 ; 's'
0000000000000999         db  0x69 ; 'i'
000000000000099a         db  0x78 ; 'x'
000000000000099b         db  0x5f ; '_'
000000000000099c         db  0x66 ; 'f'
000000000000099d         db  0x61 ; 'a'
000000000000099e         db  0x64 ; 'd'
000000000000099f         db  0x76 ; 'v'
00000000000009a0         db  0x69 ; 'i'
00000000000009a1         db  0x73 ; 's'
00000000000009a2         db  0x65 ; 'e'
00000000000009a3         db  0x00 ; '.'
00000000000009a4         db  0x63 ; 'c'
00000000000009a5         db  0x61 ; 'a'
00000000000009a6         db  0x6c ; 'l'
00000000000009a7         db  0x6c ; 'l'
00000000000009a8         db  0x6f ; 'o'
00000000000009a9         db  0x63 ; 'c'
00000000000009aa         db  0x00 ; '.'
00000000000009ab         db  0x73 ; 's'
00000000000009ac         db  0x74 ; 't'
00000000000009ad         db  0x72 ; 'r'
00000000000009ae         db  0x6c ; 'l'
00000000000009af         db  0x65 ; 'e'
00000000000009b0         db  0x6e ; 'n'
00000000000009b1         db  0x00 ; '.'
00000000000009b2         db  0x6d ; 'm'
00000000000009b3         db  0x65 ; 'e'
00000000000009b4         db  0x6d ; 'm'
00000000000009b5         db  0x73 ; 's'
00000000000009b6         db  0x65 ; 'e'
00000000000009b7         db  0x74 ; 't'
00000000000009b8         db  0x00 ; '.'
00000000000009b9         db  0x5f ; '_'
00000000000009ba         db  0x5f ; '_'
00000000000009bb         db  0x65 ; 'e'
00000000000009bc         db  0x72 ; 'r'
00000000000009bd         db  0x72 ; 'r'
00000000000009be         db  0x6e ; 'n'
00000000000009bf         db  0x6f ; 'o'
00000000000009c0         db  0x5f ; '_'
00000000000009c1         db  0x6c ; 'l'
00000000000009c2         db  0x6f ; 'o'
00000000000009c3         db  0x63 ; 'c'
00000000000009c4         db  0x61 ; 'a'
00000000000009c5         db  0x74 ; 't'
00000000000009c6         db  0x69 ; 'i'
00000000000009c7         db  0x6f ; 'o'
00000000000009c8         db  0x6e ; 'n'
00000000000009c9         db  0x00 ; '.'
00000000000009ca         db  0x6d ; 'm'
00000000000009cb         db  0x65 ; 'e'
00000000000009cc         db  0x6d ; 'm'
00000000000009cd         db  0x63 ; 'c'
00000000000009ce         db  0x6d ; 'm'
00000000000009cf         db  0x70 ; 'p'
00000000000009d0         db  0x00 ; '.'
00000000000009d1         db  0x64 ; 'd'
00000000000009d2         db  0x75 ; 'u'
00000000000009d3         db  0x70 ; 'p'
00000000000009d4         db  0x32 ; '2'
00000000000009d5         db  0x00 ; '.'
00000000000009d6         db  0x5f ; '_'
00000000000009d7         db  0x5f ; '_'
00000000000009d8         db  0x66 ; 'f'
00000000000009d9         db  0x70 ; 'p'
00000000000009da         db  0x72 ; 'r'
00000000000009db         db  0x69 ; 'i'
00000000000009dc         db  0x6e ; 'n'
00000000000009dd         db  0x74 ; 't'
00000000000009de         db  0x66 ; 'f'
00000000000009df         db  0x5f ; '_'
00000000000009e0         db  0x63 ; 'c'
00000000000009e1         db  0x68 ; 'h'
00000000000009e2         db  0x6b ; 'k'
00000000000009e3         db  0x00 ; '.'
00000000000009e4         db  0x73 ; 's'
00000000000009e5         db  0x74 ; 't'
00000000000009e6         db  0x64 ; 'd'
00000000000009e7         db  0x6f ; 'o'
00000000000009e8         db  0x75 ; 'u'
00000000000009e9         db  0x74 ; 't'
00000000000009ea         db  0x00 ; '.'
00000000000009eb         db  0x6c ; 'l'
00000000000009ec         db  0x73 ; 's'
00000000000009ed         db  0x65 ; 'e'
00000000000009ee         db  0x65 ; 'e'
00000000000009ef         db  0x6b ; 'k'
00000000000009f0         db  0x00 ; '.'
00000000000009f1         db  0x6d ; 'm'
00000000000009f2         db  0x65 ; 'e'
00000000000009f3         db  0x6d ; 'm'
00000000000009f4         db  0x63 ; 'c'
00000000000009f5         db  0x70 ; 'p'
00000000000009f6         db  0x79 ; 'y'
00000000000009f7         db  0x00 ; '.'
00000000000009f8         db  0x66 ; 'f'
00000000000009f9         db  0x63 ; 'c'
00000000000009fa         db  0x6c ; 'l'
00000000000009fb         db  0x6f ; 'o'
00000000000009fc         db  0x73 ; 's'
00000000000009fd         db  0x65 ; 'e'
00000000000009fe         db  0x00 ; '.'
00000000000009ff         db  0x6d ; 'm'
                     aAlloc:
0000000000000a00         db         "alloc", 0
0000000000000a06         db  0x6d ; 'm'
0000000000000a07         db  0x62 ; 'b'
0000000000000a08         db  0x73 ; 's'
0000000000000a09         db  0x69 ; 'i'
0000000000000a0a         db  0x6e ; 'n'
0000000000000a0b         db  0x69 ; 'i'
0000000000000a0c         db  0x74 ; 't'
0000000000000a0d         db  0x00 ; '.'
0000000000000a0e         db  0x5f ; '_'
0000000000000a0f         db  0x5f ; '_'
0000000000000a10         db  0x75 ; 'u'
0000000000000a11         db  0x66 ; 'f'
0000000000000a12         db  0x6c ; 'l'
0000000000000a13         db  0x6f ; 'o'
0000000000000a14         db  0x77 ; 'w'
0000000000000a15         db  0x00 ; '.'
0000000000000a16         db  0x6e ; 'n'
0000000000000a17         db  0x6c ; 'l'
0000000000000a18         db  0x5f ; '_'
0000000000000a19         db  0x6c ; 'l'
0000000000000a1a         db  0x61 ; 'a'
0000000000000a1b         db  0x6e ; 'n'
0000000000000a1c         db  0x67 ; 'g'
0000000000000a1d         db  0x69 ; 'i'
0000000000000a1e         db  0x6e ; 'n'
0000000000000a1f         db  0x66 ; 'f'
0000000000000a20         db  0x6f ; 'o'
0000000000000a21         db  0x00 ; '.'
0000000000000a22         db  0x5f ; '_'
0000000000000a23         db  0x5f ; '_'
0000000000000a24         db  0x63 ; 'c'
0000000000000a25         db  0x74 ; 't'
0000000000000a26         db  0x79 ; 'y'
0000000000000a27         db  0x70 ; 'p'
0000000000000a28         db  0x65 ; 'e'
0000000000000a29         db  0x5f ; '_'
0000000000000a2a         db  0x62 ; 'b'
0000000000000a2b         db  0x5f ; '_'
0000000000000a2c         db  0x6c ; 'l'
0000000000000a2d         db  0x6f ; 'o'
0000000000000a2e         db  0x63 ; 'c'
0000000000000a2f         db  0x00 ; '.'
0000000000000a30         db  0x5f ; '_'
0000000000000a31         db  0x5f ; '_'
0000000000000a32         db  0x66 ; 'f'
0000000000000a33         db  0x72 ; 'r'
0000000000000a34         db  0x65 ; 'e'
0000000000000a35         db  0x61 ; 'a'
0000000000000a36         db  0x64 ; 'd'
0000000000000a37         db  0x69 ; 'i'
0000000000000a38         db  0x6e ; 'n'
0000000000000a39         db  0x67 ; 'g'
0000000000000a3a         db  0x00 ; '.'
0000000000000a3b         db  0x73 ; 's'
0000000000000a3c         db  0x74 ; 't'
0000000000000a3d         db  0x64 ; 'd'
0000000000000a3e         db  0x65 ; 'e'
0000000000000a3f         db  0x72 ; 'r'
0000000000000a40         db  0x72 ; 'r'
0000000000000a41         db  0x00 ; '.'
0000000000000a42         db  0x67 ; 'g'
0000000000000a43         db  0x65 ; 'e'
0000000000000a44         db  0x74 ; 't'
0000000000000a45         db  0x6f ; 'o'
0000000000000a46         db  0x70 ; 'p'
0000000000000a47         db  0x74 ; 't'
0000000000000a48         db  0x5f ; '_'
0000000000000a49         db  0x6c ; 'l'
0000000000000a4a         db  0x6f ; 'o'
0000000000000a4b         db  0x6e ; 'n'
0000000000000a4c         db  0x67 ; 'g'
0000000000000a4d         db  0x00 ; '.'
0000000000000a4e         db  0x66 ; 'f'
0000000000000a4f         db  0x72 ; 'r'
0000000000000a50         db  0x65 ; 'e'
0000000000000a51         db  0x6f ; 'o'
0000000000000a52         db  0x70 ; 'p'
0000000000000a53         db  0x65 ; 'e'
0000000000000a54         db  0x6e ; 'n'
0000000000000a55         db  0x00 ; '.'
0000000000000a56         db  0x66 ; 'f'
0000000000000a57         db  0x69 ; 'i'
0000000000000a58         db  0x6c ; 'l'
0000000000000a59         db  0x65 ; 'e'
0000000000000a5a         db  0x6e ; 'n'
0000000000000a5b         db  0x6f ; 'o'
0000000000000a5c         db  0x00 ; '.'
0000000000000a5d         db  0x66 ; 'f'
0000000000000a5e         db  0x77 ; 'w'
0000000000000a5f         db  0x72 ; 'r'
0000000000000a60         db  0x69 ; 'i'
0000000000000a61         db  0x74 ; 't'
0000000000000a62         db  0x65 ; 'e'
0000000000000a63         db  0x00 ; '.'
0000000000000a64         db  0x5f ; '_'
0000000000000a65         db  0x5f ; '_'
0000000000000a66         db  0x66 ; 'f'
0000000000000a67         db  0x70 ; 'p'
0000000000000a68         db  0x65 ; 'e'
0000000000000a69         db  0x6e ; 'n'
0000000000000a6a         db  0x64 ; 'd'
0000000000000a6b         db  0x69 ; 'i'
0000000000000a6c         db  0x6e ; 'n'
0000000000000a6d         db  0x67 ; 'g'
0000000000000a6e         db  0x00 ; '.'
0000000000000a6f         db  0x70 ; 'p'
0000000000000a70         db  0x72 ; 'r'
0000000000000a71         db  0x6f ; 'o'
0000000000000a72         db  0x67 ; 'g'
0000000000000a73         db  0x72 ; 'r'
0000000000000a74         db  0x61 ; 'a'
0000000000000a75         db  0x6d ; 'm'
0000000000000a76         db  0x5f ; '_'
0000000000000a77         db  0x69 ; 'i'
0000000000000a78         db  0x6e ; 'n'
0000000000000a79         db  0x76 ; 'v'
0000000000000a7a         db  0x6f ; 'o'
0000000000000a7b         db  0x63 ; 'c'
0000000000000a7c         db  0x61 ; 'a'
0000000000000a7d         db  0x74 ; 't'
0000000000000a7e         db  0x69 ; 'i'
0000000000000a7f         db  0x6f ; 'o'
0000000000000a80         db  0x6e ; 'n'
0000000000000a81         db  0x5f ; '_'
0000000000000a82         db  0x73 ; 's'
0000000000000a83         db  0x68 ; 'h'
0000000000000a84         db  0x6f ; 'o'
0000000000000a85         db  0x72 ; 'r'
0000000000000a86         db  0x74 ; 't'
0000000000000a87         db  0x5f ; '_'
0000000000000a88         db  0x6e ; 'n'
0000000000000a89         db  0x61 ; 'a'
0000000000000a8a         db  0x6d ; 'm'
0000000000000a8b         db  0x65 ; 'e'
0000000000000a8c         db  0x00 ; '.'
0000000000000a8d         db  0x5f ; '_'
0000000000000a8e         db  0x5f ; '_'
0000000000000a8f         db  0x63 ; 'c'
0000000000000a90         db  0x78 ; 'x'
0000000000000a91         db  0x61 ; 'a'
0000000000000a92         db  0x5f ; '_'
0000000000000a93         db  0x66 ; 'f'
0000000000000a94         db  0x69 ; 'i'
0000000000000a95         db  0x6e ; 'n'
0000000000000a96         db  0x61 ; 'a'
0000000000000a97         db  0x6c ; 'l'
0000000000000a98         db  0x69 ; 'i'
0000000000000a99         db  0x7a ; 'z'
0000000000000a9a         db  0x65 ; 'e'
0000000000000a9b         db  0x00 ; '.'
0000000000000a9c         db  0x62 ; 'b'
0000000000000a9d         db  0x69 ; 'i'
0000000000000a9e         db  0x6e ; 'n'
0000000000000a9f         db  0x64 ; 'd'
0000000000000aa0         db  0x74 ; 't'
0000000000000aa1         db  0x65 ; 'e'
0000000000000aa2         db  0x78 ; 'x'
0000000000000aa3         db  0x74 ; 't'
0000000000000aa4         db  0x64 ; 'd'
0000000000000aa5         db  0x6f ; 'o'
0000000000000aa6         db  0x6d ; 'm'
0000000000000aa7         db  0x61 ; 'a'
0000000000000aa8         db  0x69 ; 'i'
0000000000000aa9         db  0x6e ; 'n'
0000000000000aaa         db  0x00 ; '.'
0000000000000aab         db  0x6f ; 'o'
0000000000000aac         db  0x70 ; 'p'
0000000000000aad         db  0x74 ; 't'
0000000000000aae         db  0x65 ; 'e'
0000000000000aaf         db  0x72 ; 'r'
0000000000000ab0         db  0x72 ; 'r'
0000000000000ab1         db  0x00 ; '.'
0000000000000ab2         db  0x73 ; 's'
0000000000000ab3         db  0x74 ; 't'
0000000000000ab4         db  0x72 ; 'r'
0000000000000ab5         db  0x63 ; 'c'
0000000000000ab6         db  0x6d ; 'm'
0000000000000ab7         db  0x70 ; 'p'
0000000000000ab8         db  0x00 ; '.'
0000000000000ab9         db  0x5f ; '_'
0000000000000aba         db  0x5f ; '_'
0000000000000abb         db  0x6c ; 'l'
0000000000000abc         db  0x69 ; 'i'
0000000000000abd         db  0x62 ; 'b'
0000000000000abe         db  0x63 ; 'c'
0000000000000abf         db  0x5f ; '_'
0000000000000ac0         db  0x73 ; 's'
0000000000000ac1         db  0x74 ; 't'
0000000000000ac2         db  0x61 ; 'a'
0000000000000ac3         db  0x72 ; 'r'
0000000000000ac4         db  0x74 ; 't'
0000000000000ac5         db  0x5f ; '_'
0000000000000ac6         db  0x6d ; 'm'
0000000000000ac7         db  0x61 ; 'a'
0000000000000ac8         db  0x69 ; 'i'
0000000000000ac9         db  0x6e ; 'n'
0000000000000aca         db  0x00 ; '.'
0000000000000acb         db  0x66 ; 'f'
0000000000000acc         db  0x73 ; 's'
0000000000000acd         db  0x65 ; 'e'
0000000000000ace         db  0x65 ; 'e'
0000000000000acf         db  0x6b ; 'k'
0000000000000ad0         db  0x6f ; 'o'
0000000000000ad1         db  0x00 ; '.'
0000000000000ad2         db  0x66 ; 'f'
0000000000000ad3         db  0x70 ; 'p'
0000000000000ad4         db  0x75 ; 'u'
0000000000000ad5         db  0x74 ; 't'
0000000000000ad6         db  0x73 ; 's'
0000000000000ad7         db  0x5f ; '_'
0000000000000ad8         db  0x75 ; 'u'
0000000000000ad9         db  0x6e ; 'n'
0000000000000ada         db  0x6c ; 'l'
0000000000000adb         db  0x6f ; 'o'
0000000000000adc         db  0x63 ; 'c'
0000000000000add         db  0x6b ; 'k'
0000000000000ade         db  0x65 ; 'e'
0000000000000adf         db  0x64 ; 'd'
0000000000000ae0         db  0x00 ; '.'
0000000000000ae1         db  0x66 ; 'f'
0000000000000ae2         db  0x72 ; 'r'
0000000000000ae3         db  0x65 ; 'e'
0000000000000ae4         db  0x65 ; 'e'
0000000000000ae5         db  0x00 ; '.'
0000000000000ae6         db  0x5f ; '_'
0000000000000ae7         db  0x5f ; '_'
0000000000000ae8         db  0x70 ; 'p'
0000000000000ae9         db  0x72 ; 'r'
0000000000000aea         db  0x6f ; 'o'
0000000000000aeb         db  0x67 ; 'g'
0000000000000aec         db  0x6e ; 'n'
0000000000000aed         db  0x61 ; 'a'
0000000000000aee         db  0x6d ; 'm'
0000000000000aef         db  0x65 ; 'e'
0000000000000af0         db  0x00 ; '.'
0000000000000af1         db  0x5f ; '_'
0000000000000af2         db  0x5f ; '_'
0000000000000af3         db  0x70 ; 'p'
0000000000000af4         db  0x72 ; 'r'
0000000000000af5         db  0x6f ; 'o'
0000000000000af6         db  0x67 ; 'g'
0000000000000af7         db  0x6e ; 'n'
0000000000000af8         db  0x61 ; 'a'
0000000000000af9         db  0x6d ; 'm'
0000000000000afa         db  0x65 ; 'e'
0000000000000afb         db  0x5f ; '_'
0000000000000afc         db  0x66 ; 'f'
0000000000000afd         db  0x75 ; 'u'
0000000000000afe         db  0x6c ; 'l'
0000000000000aff         db  0x6c ; 'l'
0000000000000b00         db  0x00 ; '.'
0000000000000b01         db  0x5f ; '_'
0000000000000b02         db  0x5f ; '_'
0000000000000b03         db  0x63 ; 'c'
0000000000000b04         db  0x78 ; 'x'
0000000000000b05         db  0x61 ; 'a'
0000000000000b06         db  0x5f ; '_'
0000000000000b07         db  0x61 ; 'a'
0000000000000b08         db  0x74 ; 't'
0000000000000b09         db  0x65 ; 'e'
0000000000000b0a         db  0x78 ; 'x'
0000000000000b0b         db  0x69 ; 'i'
0000000000000b0c         db  0x74 ; 't'
0000000000000b0d         db  0x00 ; '.'
0000000000000b0e         db  0x47 ; 'G'
0000000000000b0f         db  0x4c ; 'L'
0000000000000b10         db  0x49 ; 'I'
0000000000000b11         db  0x42 ; 'B'
0000000000000b12         db  0x43 ; 'C'
0000000000000b13         db  0x5f ; '_'
0000000000000b14         db  0x32 ; '2'
0000000000000b15         db  0x2e ; '.'
0000000000000b16         db  0x33 ; '3'
0000000000000b17         db  0x00 ; '.'
0000000000000b18         db  0x47 ; 'G'
0000000000000b19         db  0x4c ; 'L'
0000000000000b1a         db  0x49 ; 'I'
0000000000000b1b         db  0x42 ; 'B'
0000000000000b1c         db  0x43 ; 'C'
0000000000000b1d         db  0x5f ; '_'
0000000000000b1e         db  0x32 ; '2'
0000000000000b1f         db  0x2e ; '.'
0000000000000b20         db  0x33 ; '3'
0000000000000b21         db  0x2e ; '.'
0000000000000b22         db  0x34 ; '4'
0000000000000b23         db  0x00 ; '.'
0000000000000b24         db  0x47 ; 'G'
0000000000000b25         db  0x4c ; 'L'
0000000000000b26         db  0x49 ; 'I'
0000000000000b27         db  0x42 ; 'B'
0000000000000b28         db  0x43 ; 'C'
0000000000000b29         db  0x5f ; '_'
0000000000000b2a         db  0x32 ; '2'
0000000000000b2b         db  0x2e ; '.'
0000000000000b2c         db  0x31 ; '1'
0000000000000b2d         db  0x34 ; '4'
0000000000000b2e         db  0x00 ; '.'
0000000000000b2f         db  0x47 ; 'G'
0000000000000b30         db  0x4c ; 'L'
0000000000000b31         db  0x49 ; 'I'
0000000000000b32         db  0x42 ; 'B'
0000000000000b33         db  0x43 ; 'C'
0000000000000b34         db  0x5f ; '_'
0000000000000b35         db  0x32 ; '2'
0000000000000b36         db  0x2e ; '.'
0000000000000b37         db  0x34 ; '4'
0000000000000b38         db  0x00 ; '.'
0000000000000b39         db  0x47 ; 'G'
0000000000000b3a         db  0x4c ; 'L'
0000000000000b3b         db  0x49 ; 'I'
0000000000000b3c         db  0x42 ; 'B'
0000000000000b3d         db  0x43 ; 'C'
0000000000000b3e         db  0x5f ; '_'
0000000000000b3f         db  0x32 ; '2'
0000000000000b40         db  0x2e ; '.'
0000000000000b41         db  0x32 ; '2'
0000000000000b42         db  0x2e ; '.'
0000000000000b43         db  0x35 ; '5'
0000000000000b44         db  0x00 ; '.'
0000000000000b45         db  0x5f ; '_'
                     aItmderegistert:
0000000000000b46         db         "ITM_deregisterTMCloneTable", 0
0000000000000b61         db  0x5f ; '_'
0000000000000b62         db  0x5f ; '_'
0000000000000b63         db  0x67 ; 'g'
0000000000000b64         db  0x6d ; 'm'
0000000000000b65         db  0x6f ; 'o'
0000000000000b66         db  0x6e ; 'n'
0000000000000b67         db  0x5f ; '_'
0000000000000b68         db  0x73 ; 's'
0000000000000b69         db  0x74 ; 't'
0000000000000b6a         db  0x61 ; 'a'
0000000000000b6b         db  0x72 ; 'r'
0000000000000b6c         db  0x74 ; 't'
0000000000000b6d         db  0x5f ; '_'
0000000000000b6e         db  0x5f ; '_'
0000000000000b6f         db  0x00 ; '.'
0000000000000b70         db  0x5f ; '_'
0000000000000b71         db  0x49 ; 'I'
0000000000000b72         db  0x54 ; 'T'
0000000000000b73         db  0x4d ; 'M'
0000000000000b74         db  0x5f ; '_'
0000000000000b75         db  0x72 ; 'r'
0000000000000b76         db  0x65 ; 'e'
0000000000000b77         db  0x67 ; 'g'
0000000000000b78         db  0x69 ; 'i'
0000000000000b79         db  0x73 ; 's'
0000000000000b7a         db  0x74 ; 't'
0000000000000b7b         db  0x65 ; 'e'
0000000000000b7c         db  0x72 ; 'r'
0000000000000b7d         db  0x54 ; 'T'
0000000000000b7e         db  0x4d ; 'M'
0000000000000b7f         db  0x43 ; 'C'
0000000000000b80         db  0x6c ; 'l'
0000000000000b81         db  0x6f ; 'o'
0000000000000b82         db  0x6e ; 'n'
0000000000000b83         db  0x65 ; 'e'
0000000000000b84         db  0x54 ; 'T'
0000000000000b85         db  0x61 ; 'a'
0000000000000b86         db  0x62 ; 'b'
0000000000000b87         db  0x6c ; 'l'
0000000000000b88         db  0x65 ; 'e'
0000000000000b89         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xb8a; 0xc08[ (126 bytes)
        ; File offset : [2954; 3080[ (126 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000b8a         db  0x00 ; '.'
0000000000000b8b         db  0x00 ; '.'
0000000000000b8c         db  0x02 ; '.'
0000000000000b8d         db  0x00 ; '.'
0000000000000b8e         db  0x02 ; '.'
0000000000000b8f         db  0x00 ; '.'
0000000000000b90         db  0x02 ; '.'
0000000000000b91         db  0x00 ; '.'
0000000000000b92         db  0x02 ; '.'
0000000000000b93         db  0x00 ; '.'
0000000000000b94         db  0x02 ; '.'
0000000000000b95         db  0x00 ; '.'
0000000000000b96         db  0x00 ; '.'
0000000000000b97         db  0x00 ; '.'
0000000000000b98         db  0x02 ; '.'
0000000000000b99         db  0x00 ; '.'
0000000000000b9a         db  0x02 ; '.'
0000000000000b9b         db  0x00 ; '.'
0000000000000b9c         db  0x02 ; '.'
0000000000000b9d         db  0x00 ; '.'
0000000000000b9e         db  0x02 ; '.'
0000000000000b9f         db  0x00 ; '.'
0000000000000ba0         db  0x02 ; '.'
0000000000000ba1         db  0x00 ; '.'
0000000000000ba2         db  0x02 ; '.'
0000000000000ba3         db  0x00 ; '.'
0000000000000ba4         db  0x02 ; '.'
0000000000000ba5         db  0x00 ; '.'
0000000000000ba6         db  0x02 ; '.'
0000000000000ba7         db  0x00 ; '.'
0000000000000ba8         db  0x02 ; '.'
0000000000000ba9         db  0x00 ; '.'
0000000000000baa         db  0x03 ; '.'
0000000000000bab         db  0x00 ; '.'
0000000000000bac         db  0x02 ; '.'
0000000000000bad         db  0x00 ; '.'
0000000000000bae         db  0x02 ; '.'
0000000000000baf         db  0x00 ; '.'
0000000000000bb0         db  0x02 ; '.'
0000000000000bb1         db  0x00 ; '.'
0000000000000bb2         db  0x02 ; '.'
0000000000000bb3         db  0x00 ; '.'
0000000000000bb4         db  0x02 ; '.'
0000000000000bb5         db  0x00 ; '.'
0000000000000bb6         db  0x02 ; '.'
0000000000000bb7         db  0x00 ; '.'
0000000000000bb8         db  0x02 ; '.'
0000000000000bb9         db  0x00 ; '.'
0000000000000bba         db  0x02 ; '.'
0000000000000bbb         db  0x00 ; '.'
0000000000000bbc         db  0x02 ; '.'
0000000000000bbd         db  0x00 ; '.'
0000000000000bbe         db  0x02 ; '.'
0000000000000bbf         db  0x00 ; '.'
0000000000000bc0         db  0x02 ; '.'
0000000000000bc1         db  0x00 ; '.'
0000000000000bc2         db  0x02 ; '.'
0000000000000bc3         db  0x00 ; '.'
0000000000000bc4         db  0x02 ; '.'
0000000000000bc5         db  0x00 ; '.'
0000000000000bc6         db  0x02 ; '.'
0000000000000bc7         db  0x00 ; '.'
0000000000000bc8         db  0x02 ; '.'
0000000000000bc9         db  0x00 ; '.'
0000000000000bca         db  0x00 ; '.'
0000000000000bcb         db  0x00 ; '.'
0000000000000bcc         db  0x04 ; '.'
0000000000000bcd         db  0x00 ; '.'
0000000000000bce         db  0x02 ; '.'
0000000000000bcf         db  0x00 ; '.'
0000000000000bd0         db  0x02 ; '.'
0000000000000bd1         db  0x00 ; '.'
0000000000000bd2         db  0x02 ; '.'
0000000000000bd3         db  0x00 ; '.'
0000000000000bd4         db  0x02 ; '.'
0000000000000bd5         db  0x00 ; '.'
0000000000000bd6         db  0x02 ; '.'
0000000000000bd7         db  0x00 ; '.'
0000000000000bd8         db  0x02 ; '.'
0000000000000bd9         db  0x00 ; '.'
0000000000000bda         db  0x02 ; '.'
0000000000000bdb         db  0x00 ; '.'
0000000000000bdc         db  0x05 ; '.'
0000000000000bdd         db  0x00 ; '.'
0000000000000bde         db  0x02 ; '.'
0000000000000bdf         db  0x00 ; '.'
0000000000000be0         db  0x02 ; '.'
0000000000000be1         db  0x00 ; '.'
0000000000000be2         db  0x02 ; '.'
0000000000000be3         db  0x00 ; '.'
0000000000000be4         db  0x02 ; '.'
0000000000000be5         db  0x00 ; '.'
0000000000000be6         db  0x02 ; '.'
0000000000000be7         db  0x00 ; '.'
0000000000000be8         db  0x02 ; '.'
0000000000000be9         db  0x00 ; '.'
0000000000000bea         db  0x05 ; '.'
0000000000000beb         db  0x00 ; '.'
0000000000000bec         db  0x00 ; '.'
0000000000000bed         db  0x00 ; '.'
0000000000000bee         db  0x02 ; '.'
0000000000000bef         db  0x00 ; '.'
0000000000000bf0         db  0x02 ; '.'
0000000000000bf1         db  0x00 ; '.'
0000000000000bf2         db  0x02 ; '.'
0000000000000bf3         db  0x00 ; '.'
0000000000000bf4         db  0x06 ; '.'
0000000000000bf5         db  0x00 ; '.'
0000000000000bf6         db  0x02 ; '.'
0000000000000bf7         db  0x00 ; '.'
0000000000000bf8         db  0x02 ; '.'
0000000000000bf9         db  0x00 ; '.'
0000000000000bfa         db  0x02 ; '.'
0000000000000bfb         db  0x00 ; '.'
0000000000000bfc         db  0x02 ; '.'
0000000000000bfd         db  0x00 ; '.'
0000000000000bfe         db  0x02 ; '.'
0000000000000bff         db  0x00 ; '.'
0000000000000c00         db  0x02 ; '.'
0000000000000c01         db  0x00 ; '.'
0000000000000c02         db  0x02 ; '.'
0000000000000c03         db  0x00 ; '.'
0000000000000c04         db  0x02 ; '.'
0000000000000c05         db  0x00 ; '.'
0000000000000c06         db  0x02 ; '.'
0000000000000c07         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xc08; 0xc68[ (96 bytes)
        ; File offset : [3080; 3176[ (96 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000c08         db  0x01 ; '.'
0000000000000c09         db  0x00 ; '.'
0000000000000c0a         db  0x05 ; '.'
0000000000000c0b         db  0x00 ; '.'
0000000000000c0c         db  0x01 ; '.'
0000000000000c0d         db  0x00 ; '.'
0000000000000c0e         db  0x00 ; '.'
0000000000000c0f         db  0x00 ; '.'
0000000000000c10         db  0x10 ; '.'
0000000000000c11         db  0x00 ; '.'
0000000000000c12         db  0x00 ; '.'
0000000000000c13         db  0x00 ; '.'
0000000000000c14         db  0x00 ; '.'
0000000000000c15         db  0x00 ; '.'
0000000000000c16         db  0x00 ; '.'
0000000000000c17         db  0x00 ; '.'
0000000000000c18         db  0x13 ; '.'
0000000000000c19         db  0x69 ; 'i'
0000000000000c1a         db  0x69 ; 'i'
0000000000000c1b         db  0x0d ; '.'
0000000000000c1c         db  0x00 ; '.'
0000000000000c1d         db  0x00 ; '.'
0000000000000c1e         db  0x06 ; '.'
0000000000000c1f         db  0x00 ; '.'
0000000000000c20         db  0x46 ; 'F'
0000000000000c21         db  0x02 ; '.'
0000000000000c22         db  0x00 ; '.'
0000000000000c23         db  0x00 ; '.'
0000000000000c24         db  0x10 ; '.'
0000000000000c25         db  0x00 ; '.'
0000000000000c26         db  0x00 ; '.'
0000000000000c27         db  0x00 ; '.'
0000000000000c28         db  0x74 ; 't'
0000000000000c29         db  0x19 ; '.'
0000000000000c2a         db  0x69 ; 'i'
0000000000000c2b         db  0x09 ; '.'
0000000000000c2c         db  0x00 ; '.'
0000000000000c2d         db  0x00 ; '.'
0000000000000c2e         db  0x05 ; '.'
0000000000000c2f         db  0x00 ; '.'
0000000000000c30         db  0x50 ; 'P'
0000000000000c31         db  0x02 ; '.'
0000000000000c32         db  0x00 ; '.'
0000000000000c33         db  0x00 ; '.'
0000000000000c34         db  0x10 ; '.'
0000000000000c35         db  0x00 ; '.'
0000000000000c36         db  0x00 ; '.'
0000000000000c37         db  0x00 ; '.'
0000000000000c38         db  0x94 ; '.'
0000000000000c39         db  0x91 ; '.'
0000000000000c3a         db  0x96 ; '.'
0000000000000c3b         db  0x06 ; '.'
0000000000000c3c         db  0x00 ; '.'
0000000000000c3d         db  0x00 ; '.'
0000000000000c3e         db  0x04 ; '.'
0000000000000c3f         db  0x00 ; '.'
0000000000000c40         db  0x5c ; '\'
0000000000000c41         db  0x02 ; '.'
0000000000000c42         db  0x00 ; '.'
0000000000000c43         db  0x00 ; '.'
0000000000000c44         db  0x10 ; '.'
0000000000000c45         db  0x00 ; '.'
0000000000000c46         db  0x00 ; '.'
0000000000000c47         db  0x00 ; '.'
0000000000000c48         db  0x14 ; '.'
0000000000000c49         db  0x69 ; 'i'
0000000000000c4a         db  0x69 ; 'i'
0000000000000c4b         db  0x0d ; '.'
0000000000000c4c         db  0x00 ; '.'
0000000000000c4d         db  0x00 ; '.'
0000000000000c4e         db  0x03 ; '.'
0000000000000c4f         db  0x00 ; '.'
0000000000000c50         db  0x67 ; 'g'
0000000000000c51         db  0x02 ; '.'
0000000000000c52         db  0x00 ; '.'
0000000000000c53         db  0x00 ; '.'
0000000000000c54         db  0x10 ; '.'
0000000000000c55         db  0x00 ; '.'
0000000000000c56         db  0x00 ; '.'
0000000000000c57         db  0x00 ; '.'
0000000000000c58         db  0x75 ; 'u'
0000000000000c59         db  0x1a ; '.'
0000000000000c5a         db  0x69 ; 'i'
0000000000000c5b         db  0x09 ; '.'
0000000000000c5c         db  0x00 ; '.'
0000000000000c5d         db  0x00 ; '.'
0000000000000c5e         db  0x02 ; '.'
0000000000000c5f         db  0x00 ; '.'
0000000000000c60         db  0x71 ; 'q'
0000000000000c61         db  0x02 ; '.'
0000000000000c62         db  0x00 ; '.'
0000000000000c63         db  0x00 ; '.'
0000000000000c64         db  0x00 ; '.'
0000000000000c65         db  0x00 ; '.'
0000000000000c66         db  0x00 ; '.'
0000000000000c67         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xc68; 0xf38[ (720 bytes)
        ; File offset : [3176; 3896[ (720 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000c68         db  0x70 ; 'p'
0000000000000c69         db  0x7b ; '{'
0000000000000c6a         db  0x20 ; ' '
0000000000000c6b         db  0x00 ; '.'
0000000000000c6c         db  0x00 ; '.'
0000000000000c6d         db  0x00 ; '.'
0000000000000c6e         db  0x00 ; '.'
0000000000000c6f         db  0x00 ; '.'
0000000000000c70         db  0x08 ; '.'
0000000000000c71         db  0x00 ; '.'
0000000000000c72         db  0x00 ; '.'
0000000000000c73         db  0x00 ; '.'
0000000000000c74         db  0x00 ; '.'
0000000000000c75         db  0x00 ; '.'
0000000000000c76         db  0x00 ; '.'
0000000000000c77         db  0x00 ; '.'
0000000000000c78         db  0x50 ; 'P'
0000000000000c79         db  0x1f ; '.'
0000000000000c7a         db  0x00 ; '.'
0000000000000c7b         db  0x00 ; '.'
0000000000000c7c         db  0x00 ; '.'
0000000000000c7d         db  0x00 ; '.'
0000000000000c7e         db  0x00 ; '.'
0000000000000c7f         db  0x00 ; '.'
0000000000000c80         db  0x78 ; 'x'
0000000000000c81         db  0x7b ; '{'
0000000000000c82         db  0x20 ; ' '
0000000000000c83         db  0x00 ; '.'
0000000000000c84         db  0x00 ; '.'
0000000000000c85         db  0x00 ; '.'
0000000000000c86         db  0x00 ; '.'
0000000000000c87         db  0x00 ; '.'
0000000000000c88         db  0x08 ; '.'
0000000000000c89         db  0x00 ; '.'
0000000000000c8a         db  0x00 ; '.'
0000000000000c8b         db  0x00 ; '.'
0000000000000c8c         db  0x00 ; '.'
0000000000000c8d         db  0x00 ; '.'
0000000000000c8e         db  0x00 ; '.'
0000000000000c8f         db  0x00 ; '.'
0000000000000c90         db  0x10 ; '.'
0000000000000c91         db  0x1f ; '.'
0000000000000c92         db  0x00 ; '.'
0000000000000c93         db  0x00 ; '.'
0000000000000c94         db  0x00 ; '.'
0000000000000c95         db  0x00 ; '.'
0000000000000c96         db  0x00 ; '.'
0000000000000c97         db  0x00 ; '.'
0000000000000c98         db  0x80 ; '.'
0000000000000c99         db  0x7b ; '{'
0000000000000c9a         db  0x20 ; ' '
0000000000000c9b         db  0x00 ; '.'
0000000000000c9c         db  0x00 ; '.'
0000000000000c9d         db  0x00 ; '.'
0000000000000c9e         db  0x00 ; '.'
0000000000000c9f         db  0x00 ; '.'
0000000000000ca0         db  0x08 ; '.'
0000000000000ca1         db  0x00 ; '.'
0000000000000ca2         db  0x00 ; '.'
0000000000000ca3         db  0x00 ; '.'
0000000000000ca4         db  0x00 ; '.'
0000000000000ca5         db  0x00 ; '.'
0000000000000ca6         db  0x00 ; '.'
0000000000000ca7         db  0x00 ; '.'
0000000000000ca8         db  0xe6 ; '.'
0000000000000ca9         db  0x5b ; '['
0000000000000caa         db  0x00 ; '.'
0000000000000cab         db  0x00 ; '.'
0000000000000cac         db  0x00 ; '.'
0000000000000cad         db  0x00 ; '.'
0000000000000cae         db  0x00 ; '.'
0000000000000caf         db  0x00 ; '.'
0000000000000cb0         db  0xa0 ; '.'
0000000000000cb1         db  0x7b ; '{'
0000000000000cb2         db  0x20 ; ' '
0000000000000cb3         db  0x00 ; '.'
0000000000000cb4         db  0x00 ; '.'
0000000000000cb5         db  0x00 ; '.'
0000000000000cb6         db  0x00 ; '.'
0000000000000cb7         db  0x00 ; '.'
0000000000000cb8         db  0x08 ; '.'
0000000000000cb9         db  0x00 ; '.'
0000000000000cba         db  0x00 ; '.'
0000000000000cbb         db  0x00 ; '.'
0000000000000cbc         db  0x00 ; '.'
0000000000000cbd         db  0x00 ; '.'
0000000000000cbe         db  0x00 ; '.'
0000000000000cbf         db  0x00 ; '.'
0000000000000cc0         db  0xeb ; '.'
0000000000000cc1         db  0x5b ; '['
0000000000000cc2         db  0x00 ; '.'
0000000000000cc3         db  0x00 ; '.'
0000000000000cc4         db  0x00 ; '.'
0000000000000cc5         db  0x00 ; '.'
0000000000000cc6         db  0x00 ; '.'
0000000000000cc7         db  0x00 ; '.'
0000000000000cc8         db  0xe0 ; '.'
0000000000000cc9         db  0x7b ; '{'
0000000000000cca         db  0x20 ; ' '
0000000000000ccb         db  0x00 ; '.'
0000000000000ccc         db  0x00 ; '.'
0000000000000ccd         db  0x00 ; '.'
0000000000000cce         db  0x00 ; '.'
0000000000000ccf         db  0x00 ; '.'
0000000000000cd0         db  0x08 ; '.'
0000000000000cd1         db  0x00 ; '.'
0000000000000cd2         db  0x00 ; '.'
0000000000000cd3         db  0x00 ; '.'
0000000000000cd4         db  0x00 ; '.'
0000000000000cd5         db  0x00 ; '.'
0000000000000cd6         db  0x00 ; '.'
0000000000000cd7         db  0x00 ; '.'
0000000000000cd8         db  0x51 ; 'Q'
0000000000000cd9         db  0x5c ; '\'
0000000000000cda         db  0x00 ; '.'
0000000000000cdb         db  0x00 ; '.'
0000000000000cdc         db  0x00 ; '.'
0000000000000cdd         db  0x00 ; '.'
0000000000000cde         db  0x00 ; '.'
0000000000000cdf         db  0x00 ; '.'
0000000000000ce0         db  0xe8 ; '.'
0000000000000ce1         db  0x7b ; '{'
0000000000000ce2         db  0x20 ; ' '
0000000000000ce3         db  0x00 ; '.'
0000000000000ce4         db  0x00 ; '.'
0000000000000ce5         db  0x00 ; '.'
0000000000000ce6         db  0x00 ; '.'
0000000000000ce7         db  0x00 ; '.'
0000000000000ce8         db  0x08 ; '.'
0000000000000ce9         db  0x00 ; '.'
0000000000000cea         db  0x00 ; '.'
0000000000000ceb         db  0x00 ; '.'
0000000000000cec         db  0x00 ; '.'
0000000000000ced         db  0x00 ; '.'
0000000000000cee         db  0x00 ; '.'
0000000000000cef         db  0x00 ; '.'
0000000000000cf0         db  0x59 ; 'Y'
0000000000000cf1         db  0x5c ; '\'
0000000000000cf2         db  0x00 ; '.'
0000000000000cf3         db  0x00 ; '.'
0000000000000cf4         db  0x00 ; '.'
0000000000000cf5         db  0x00 ; '.'
0000000000000cf6         db  0x00 ; '.'
0000000000000cf7         db  0x00 ; '.'
0000000000000cf8         db  0xf0 ; '.'
0000000000000cf9         db  0x7b ; '{'
0000000000000cfa         db  0x20 ; ' '
0000000000000cfb         db  0x00 ; '.'
0000000000000cfc         db  0x00 ; '.'
0000000000000cfd         db  0x00 ; '.'
0000000000000cfe         db  0x00 ; '.'
0000000000000cff         db  0x00 ; '.'
0000000000000d00         db  0x08 ; '.'
0000000000000d01         db  0x00 ; '.'
0000000000000d02         db  0x00 ; '.'
0000000000000d03         db  0x00 ; '.'
0000000000000d04         db  0x00 ; '.'
0000000000000d05         db  0x00 ; '.'
0000000000000d06         db  0x00 ; '.'
0000000000000d07         db  0x00 ; '.'
0000000000000d08         db  0x5f ; '_'
0000000000000d09         db  0x5c ; '\'
0000000000000d0a         db  0x00 ; '.'
0000000000000d0b         db  0x00 ; '.'
0000000000000d0c         db  0x00 ; '.'
0000000000000d0d         db  0x00 ; '.'
0000000000000d0e         db  0x00 ; '.'
0000000000000d0f         db  0x00 ; '.'
0000000000000d10         db  0xf8 ; '.'
0000000000000d11         db  0x7b ; '{'
0000000000000d12         db  0x20 ; ' '
0000000000000d13         db  0x00 ; '.'
0000000000000d14         db  0x00 ; '.'
0000000000000d15         db  0x00 ; '.'
0000000000000d16         db  0x00 ; '.'
0000000000000d17         db  0x00 ; '.'
0000000000000d18         db  0x08 ; '.'
0000000000000d19         db  0x00 ; '.'
0000000000000d1a         db  0x00 ; '.'
0000000000000d1b         db  0x00 ; '.'
0000000000000d1c         db  0x00 ; '.'
0000000000000d1d         db  0x00 ; '.'
0000000000000d1e         db  0x00 ; '.'
0000000000000d1f         db  0x00 ; '.'
0000000000000d20         db  0x6c ; 'l'
0000000000000d21         db  0x5c ; '\'
0000000000000d22         db  0x00 ; '.'
0000000000000d23         db  0x00 ; '.'
0000000000000d24         db  0x00 ; '.'
0000000000000d25         db  0x00 ; '.'
0000000000000d26         db  0x00 ; '.'
0000000000000d27         db  0x00 ; '.'
0000000000000d28         db  0x00 ; '.'
0000000000000d29         db  0x7c ; '|'
0000000000000d2a         db  0x20 ; ' '
0000000000000d2b         db  0x00 ; '.'
0000000000000d2c         db  0x00 ; '.'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x00 ; '.'
0000000000000d2f         db  0x00 ; '.'
0000000000000d30         db  0x08 ; '.'
0000000000000d31         db  0x00 ; '.'
0000000000000d32         db  0x00 ; '.'
0000000000000d33         db  0x00 ; '.'
0000000000000d34         db  0x00 ; '.'
0000000000000d35         db  0x00 ; '.'
0000000000000d36         db  0x00 ; '.'
0000000000000d37         db  0x00 ; '.'
0000000000000d38         db  0x79 ; 'y'
0000000000000d39         db  0x5c ; '\'
0000000000000d3a         db  0x00 ; '.'
0000000000000d3b         db  0x00 ; '.'
0000000000000d3c         db  0x00 ; '.'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x00 ; '.'
0000000000000d3f         db  0x00 ; '.'
0000000000000d40         db  0x08 ; '.'
0000000000000d41         db  0x7c ; '|'
0000000000000d42         db  0x20 ; ' '
0000000000000d43         db  0x00 ; '.'
0000000000000d44         db  0x00 ; '.'
0000000000000d45         db  0x00 ; '.'
0000000000000d46         db  0x00 ; '.'
0000000000000d47         db  0x00 ; '.'
0000000000000d48         db  0x08 ; '.'
0000000000000d49         db  0x00 ; '.'
0000000000000d4a         db  0x00 ; '.'
0000000000000d4b         db  0x00 ; '.'
0000000000000d4c         db  0x00 ; '.'
0000000000000d4d         db  0x00 ; '.'
0000000000000d4e         db  0x00 ; '.'
0000000000000d4f         db  0x00 ; '.'
0000000000000d50         db  0x44 ; 'D'
0000000000000d51         db  0x59 ; 'Y'
0000000000000d52         db  0x00 ; '.'
0000000000000d53         db  0x00 ; '.'
0000000000000d54         db  0x00 ; '.'
0000000000000d55         db  0x00 ; '.'
0000000000000d56         db  0x00 ; '.'
0000000000000d57         db  0x00 ; '.'
0000000000000d58         db  0x10 ; '.'
0000000000000d59         db  0x7c ; '|'
0000000000000d5a         db  0x20 ; ' '
0000000000000d5b         db  0x00 ; '.'
0000000000000d5c         db  0x00 ; '.'
0000000000000d5d         db  0x00 ; '.'
0000000000000d5e         db  0x00 ; '.'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0x08 ; '.'
0000000000000d61         db  0x00 ; '.'
0000000000000d62         db  0x00 ; '.'
0000000000000d63         db  0x00 ; '.'
0000000000000d64         db  0x00 ; '.'
0000000000000d65         db  0x00 ; '.'
0000000000000d66         db  0x00 ; '.'
0000000000000d67         db  0x00 ; '.'
0000000000000d68         db  0x8d ; '.'
0000000000000d69         db  0x5c ; '\'
0000000000000d6a         db  0x00 ; '.'
0000000000000d6b         db  0x00 ; '.'
0000000000000d6c         db  0x00 ; '.'
0000000000000d6d         db  0x00 ; '.'
0000000000000d6e         db  0x00 ; '.'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0x18 ; '.'
0000000000000d71         db  0x7c ; '|'
0000000000000d72         db  0x20 ; ' '
0000000000000d73         db  0x00 ; '.'
0000000000000d74         db  0x00 ; '.'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x00 ; '.'
0000000000000d77         db  0x00 ; '.'
0000000000000d78         db  0x08 ; '.'
0000000000000d79         db  0x00 ; '.'
0000000000000d7a         db  0x00 ; '.'
0000000000000d7b         db  0x00 ; '.'
0000000000000d7c         db  0x00 ; '.'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x00 ; '.'
0000000000000d7f         db  0x00 ; '.'
0000000000000d80         db  0x72 ; 'r'
0000000000000d81         db  0x5c ; '\'
0000000000000d82         db  0x00 ; '.'
0000000000000d83         db  0x00 ; '.'
0000000000000d84         db  0x00 ; '.'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x00 ; '.'
0000000000000d87         db  0x00 ; '.'
0000000000000d88         db  0x20 ; ' '
0000000000000d89         db  0x7c ; '|'
0000000000000d8a         db  0x20 ; ' '
0000000000000d8b         db  0x00 ; '.'
0000000000000d8c         db  0x00 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x00 ; '.'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0x08 ; '.'
0000000000000d91         db  0x00 ; '.'
0000000000000d92         db  0x00 ; '.'
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x00 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x00 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0xfe ; '.'
0000000000000d99         db  0x58 ; 'X'
0000000000000d9a         db  0x00 ; '.'
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x00 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x00 ; '.'
0000000000000d9f         db  0x00 ; '.'
0000000000000da0         db  0x28 ; '('
0000000000000da1         db  0x7c ; '|'
0000000000000da2         db  0x20 ; ' '
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x00 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x00 ; '.'
0000000000000da7         db  0x00 ; '.'
0000000000000da8         db  0x08 ; '.'
0000000000000da9         db  0x00 ; '.'
0000000000000daa         db  0x00 ; '.'
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x00 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x00 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0x95 ; '.'
0000000000000db1         db  0x5c ; '\'
0000000000000db2         db  0x00 ; '.'
0000000000000db3         db  0x00 ; '.'
0000000000000db4         db  0x00 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x00 ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0x08 ; '.'
0000000000000db9         db  0x80 ; '.'
0000000000000dba         db  0x20 ; ' '
0000000000000dbb         db  0x00 ; '.'
0000000000000dbc         db  0x00 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x00 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0x08 ; '.'
0000000000000dc1         db  0x00 ; '.'
0000000000000dc2         db  0x00 ; '.'
0000000000000dc3         db  0x00 ; '.'
0000000000000dc4         db  0x00 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x00 ; '.'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0x08 ; '.'
0000000000000dc9         db  0x80 ; '.'
0000000000000dca         db  0x20 ; ' '
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x00 ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x00 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0x10 ; '.'
0000000000000dd1         db  0x80 ; '.'
0000000000000dd2         db  0x20 ; ' '
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x00 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x00 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0x08 ; '.'
0000000000000dd9         db  0x00 ; '.'
0000000000000dda         db  0x00 ; '.'
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x00 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x00 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0xc2 ; '.'
0000000000000de1         db  0x5b ; '['
0000000000000de2         db  0x00 ; '.'
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x00 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x00 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0x60 ; '`'
0000000000000de9         db  0x80 ; '.'
0000000000000dea         db  0x20 ; ' '
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x00 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x00 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0x08 ; '.'
0000000000000df1         db  0x00 ; '.'
0000000000000df2         db  0x00 ; '.'
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x00 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x00 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0x70 ; 'p'
0000000000000df9         db  0x80 ; '.'
0000000000000dfa         db  0x20 ; ' '
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x00 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x00 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0x78 ; 'x'
0000000000000e01         db  0x80 ; '.'
0000000000000e02         db  0x20 ; ' '
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x00 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x00 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0x08 ; '.'
0000000000000e09         db  0x00 ; '.'
0000000000000e0a         db  0x00 ; '.'
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x00 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x00 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0x40 ; '@'
0000000000000e11         db  0x81 ; '.'
0000000000000e12         db  0x20 ; ' '
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x00 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x00 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0xc0 ; '.'
0000000000000e19         db  0x7f ; '.'
0000000000000e1a         db  0x20 ; ' '
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x00 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x00 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0x06 ; '.'
0000000000000e21         db  0x00 ; '.'
0000000000000e22         db  0x00 ; '.'
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x06 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x00 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0x00 ; '.'
0000000000000e29         db  0x00 ; '.'
0000000000000e2a         db  0x00 ; '.'
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x00 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x00 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0xc8 ; '.'
0000000000000e31         db  0x7f ; '.'
0000000000000e32         db  0x20 ; ' '
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0x06 ; '.'
0000000000000e39         db  0x00 ; '.'
0000000000000e3a         db  0x00 ; '.'
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x1b ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x00 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0x00 ; '.'
0000000000000e41         db  0x00 ; '.'
0000000000000e42         db  0x00 ; '.'
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x00 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0xd0 ; '.'
0000000000000e49         db  0x7f ; '.'
0000000000000e4a         db  0x20 ; ' '
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x00 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0x06 ; '.'
0000000000000e51         db  0x00 ; '.'
0000000000000e52         db  0x00 ; '.'
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x20 ; ' '
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x00 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0x00 ; '.'
0000000000000e59         db  0x00 ; '.'
0000000000000e5a         db  0x00 ; '.'
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x00 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x00 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0xd8 ; '.'
0000000000000e61         db  0x7f ; '.'
0000000000000e62         db  0x20 ; ' '
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x00 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0x06 ; '.'
0000000000000e69         db  0x00 ; '.'
0000000000000e6a         db  0x00 ; '.'
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x31 ; '1'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x00 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0x00 ; '.'
0000000000000e71         db  0x00 ; '.'
0000000000000e72         db  0x00 ; '.'
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x00 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0xe0 ; '.'
0000000000000e79         db  0x7f ; '.'
0000000000000e7a         db  0x20 ; ' '
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x00 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0x06 ; '.'
0000000000000e81         db  0x00 ; '.'
0000000000000e82         db  0x00 ; '.'
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x34 ; '4'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0x00 ; '.'
0000000000000e89         db  0x00 ; '.'
0000000000000e8a         db  0x00 ; '.'
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x00 ; '.'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0x80 ; '.'
0000000000000e91         db  0x80 ; '.'
0000000000000e92         db  0x20 ; ' '
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'
0000000000000e98         db  0x05 ; '.'
0000000000000e99         db  0x00 ; '.'
0000000000000e9a         db  0x00 ; '.'
0000000000000e9b         db  0x00 ; '.'
0000000000000e9c         db  0x37 ; '7'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x00 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0x00 ; '.'
0000000000000ea1         db  0x00 ; '.'
0000000000000ea2         db  0x00 ; '.'
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x00 ; '.'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0x88 ; '.'
0000000000000ea9         db  0x80 ; '.'
0000000000000eaa         db  0x20 ; ' '
0000000000000eab         db  0x00 ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x00 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0x05 ; '.'
0000000000000eb1         db  0x00 ; '.'
0000000000000eb2         db  0x00 ; '.'
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x36 ; '6'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0x00 ; '.'
0000000000000eb9         db  0x00 ; '.'
0000000000000eba         db  0x00 ; '.'
0000000000000ebb         db  0x00 ; '.'
0000000000000ebc         db  0x00 ; '.'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x00 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0x90 ; '.'
0000000000000ec1         db  0x80 ; '.'
0000000000000ec2         db  0x20 ; ' '
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x00 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0x05 ; '.'
0000000000000ec9         db  0x00 ; '.'
0000000000000eca         db  0x00 ; '.'
0000000000000ecb         db  0x00 ; '.'
0000000000000ecc         db  0x38 ; '8'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0x00 ; '.'
0000000000000ed1         db  0x00 ; '.'
0000000000000ed2         db  0x00 ; '.'
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x00 ; '.'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0x98 ; '.'
0000000000000ed9         db  0x80 ; '.'
0000000000000eda         db  0x20 ; ' '
0000000000000edb         db  0x00 ; '.'
0000000000000edc         db  0x00 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0x05 ; '.'
0000000000000ee1         db  0x00 ; '.'
0000000000000ee2         db  0x00 ; '.'
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x3e ; '>'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0x00 ; '.'
0000000000000ee9         db  0x00 ; '.'
0000000000000eea         db  0x00 ; '.'
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x00 ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x00 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0xa0 ; '.'
0000000000000ef1         db  0x80 ; '.'
0000000000000ef2         db  0x20 ; ' '
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0x05 ; '.'
0000000000000ef9         db  0x00 ; '.'
0000000000000efa         db  0x00 ; '.'
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x3a ; ':'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0x00 ; '.'
0000000000000f01         db  0x00 ; '.'
0000000000000f02         db  0x00 ; '.'
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x00 ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0xc0 ; '.'
0000000000000f09         db  0x80 ; '.'
0000000000000f0a         db  0x20 ; ' '
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x00 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0x05 ; '.'
0000000000000f11         db  0x00 ; '.'
0000000000000f12         db  0x00 ; '.'
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x3c ; '<'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0x00 ; '.'
0000000000000f19         db  0x00 ; '.'
0000000000000f1a         db  0x00 ; '.'
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x00 ; '.'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0xe0 ; '.'
0000000000000f21         db  0x80 ; '.'
0000000000000f22         db  0x20 ; ' '
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x00 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0x05 ; '.'
0000000000000f29         db  0x00 ; '.'
0000000000000f2a         db  0x00 ; '.'
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x3d ; '='
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0x00 ; '.'
0000000000000f31         db  0x00 ; '.'
0000000000000f32         db  0x00 ; '.'
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x00 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0xf38; 0x13b8[ (1152 bytes)
        ; File offset : [3896; 5048[ (1152 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000f38         db  0x40 ; '@'
0000000000000f39         db  0x7e ; '~'
0000000000000f3a         db  0x20 ; ' '
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x00 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0x07 ; '.'
0000000000000f41         db  0x00 ; '.'
0000000000000f42         db  0x00 ; '.'
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x01 ; '.'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0x00 ; '.'
0000000000000f49         db  0x00 ; '.'
0000000000000f4a         db  0x00 ; '.'
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x00 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0x48 ; 'H'
0000000000000f51         db  0x7e ; '~'
0000000000000f52         db  0x20 ; ' '
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0x07 ; '.'
0000000000000f59         db  0x00 ; '.'
0000000000000f5a         db  0x00 ; '.'
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x02 ; '.'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0x00 ; '.'
0000000000000f61         db  0x00 ; '.'
0000000000000f62         db  0x00 ; '.'
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x00 ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0x50 ; 'P'
0000000000000f69         db  0x7e ; '~'
0000000000000f6a         db  0x20 ; ' '
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0x07 ; '.'
0000000000000f71         db  0x00 ; '.'
0000000000000f72         db  0x00 ; '.'
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x03 ; '.'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0x00 ; '.'
0000000000000f79         db  0x00 ; '.'
0000000000000f7a         db  0x00 ; '.'
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x00 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0x58 ; 'X'
0000000000000f81         db  0x7e ; '~'
0000000000000f82         db  0x20 ; ' '
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x00 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0x07 ; '.'
0000000000000f89         db  0x00 ; '.'
0000000000000f8a         db  0x00 ; '.'
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x04 ; '.'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0x00 ; '.'
0000000000000f91         db  0x00 ; '.'
0000000000000f92         db  0x00 ; '.'
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x00 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0x60 ; '`'
0000000000000f99         db  0x7e ; '~'
0000000000000f9a         db  0x20 ; ' '
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'
0000000000000fa0         db  0x07 ; '.'
0000000000000fa1         db  0x00 ; '.'
0000000000000fa2         db  0x00 ; '.'
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x05 ; '.'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0x00 ; '.'
0000000000000fa9         db  0x00 ; '.'
0000000000000faa         db  0x00 ; '.'
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x00 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0x68 ; 'h'
0000000000000fb1         db  0x7e ; '~'
0000000000000fb2         db  0x20 ; ' '
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x00 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0x07 ; '.'
0000000000000fb9         db  0x00 ; '.'
0000000000000fba         db  0x00 ; '.'
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x07 ; '.'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0x00 ; '.'
0000000000000fc1         db  0x00 ; '.'
0000000000000fc2         db  0x00 ; '.'
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x00 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0x70 ; 'p'
0000000000000fc9         db  0x7e ; '~'
0000000000000fca         db  0x20 ; ' '
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0x07 ; '.'
0000000000000fd1         db  0x00 ; '.'
0000000000000fd2         db  0x00 ; '.'
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x08 ; '.'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x00 ; '.'
0000000000000fd9         db  0x00 ; '.'
0000000000000fda         db  0x00 ; '.'
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x00 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0x78 ; 'x'
0000000000000fe1         db  0x7e ; '~'
0000000000000fe2         db  0x20 ; ' '
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x00 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0x07 ; '.'
0000000000000fe9         db  0x00 ; '.'
0000000000000fea         db  0x00 ; '.'
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x09 ; '.'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x00 ; '.'
0000000000000ff1         db  0x00 ; '.'
0000000000000ff2         db  0x00 ; '.'
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x00 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0x80 ; '.'
0000000000000ff9         db  0x7e ; '~'
0000000000000ffa         db  0x20 ; ' '
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'
0000000000001000         db  0x07 ; '.'
0000000000001001         db  0x00 ; '.'
0000000000001002         db  0x00 ; '.'
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x0a ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x00 ; '.'
0000000000001009         db  0x00 ; '.'
000000000000100a         db  0x00 ; '.'
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x00 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0x88 ; '.'
0000000000001011         db  0x7e ; '~'
0000000000001012         db  0x20 ; ' '
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0x07 ; '.'
0000000000001019         db  0x00 ; '.'
000000000000101a         db  0x00 ; '.'
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x0b ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x00 ; '.'
0000000000001021         db  0x00 ; '.'
0000000000001022         db  0x00 ; '.'
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x00 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x90 ; '.'
0000000000001029         db  0x7e ; '~'
000000000000102a         db  0x20 ; ' '
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x00 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0x07 ; '.'
0000000000001031         db  0x00 ; '.'
0000000000001032         db  0x00 ; '.'
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x0c ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x00 ; '.'
0000000000001039         db  0x00 ; '.'
000000000000103a         db  0x00 ; '.'
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x00 ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0x98 ; '.'
0000000000001041         db  0x7e ; '~'
0000000000001042         db  0x20 ; ' '
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x00 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0x07 ; '.'
0000000000001049         db  0x00 ; '.'
000000000000104a         db  0x00 ; '.'
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x0d ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x00 ; '.'
0000000000001051         db  0x00 ; '.'
0000000000001052         db  0x00 ; '.'
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x00 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0xa0 ; '.'
0000000000001059         db  0x7e ; '~'
000000000000105a         db  0x20 ; ' '
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0x07 ; '.'
0000000000001061         db  0x00 ; '.'
0000000000001062         db  0x00 ; '.'
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x0e ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x00 ; '.'
0000000000001069         db  0x00 ; '.'
000000000000106a         db  0x00 ; '.'
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x00 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0xa8 ; '.'
0000000000001071         db  0x7e ; '~'
0000000000001072         db  0x20 ; ' '
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x00 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0x07 ; '.'
0000000000001079         db  0x00 ; '.'
000000000000107a         db  0x00 ; '.'
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x0f ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x00 ; '.'
0000000000001081         db  0x00 ; '.'
0000000000001082         db  0x00 ; '.'
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x00 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0xb0 ; '.'
0000000000001089         db  0x7e ; '~'
000000000000108a         db  0x20 ; ' '
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x00 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0x07 ; '.'
0000000000001091         db  0x00 ; '.'
0000000000001092         db  0x00 ; '.'
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x10 ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x00 ; '.'
0000000000001099         db  0x00 ; '.'
000000000000109a         db  0x00 ; '.'
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x00 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0xb8 ; '.'
00000000000010a1         db  0x7e ; '~'
00000000000010a2         db  0x20 ; ' '
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x00 ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0x07 ; '.'
00000000000010a9         db  0x00 ; '.'
00000000000010aa         db  0x00 ; '.'
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x11 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x00 ; '.'
00000000000010b1         db  0x00 ; '.'
00000000000010b2         db  0x00 ; '.'
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x00 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0xc0 ; '.'
00000000000010b9         db  0x7e ; '~'
00000000000010ba         db  0x20 ; ' '
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x00 ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0x07 ; '.'
00000000000010c1         db  0x00 ; '.'
00000000000010c2         db  0x00 ; '.'
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x12 ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x00 ; '.'
00000000000010c9         db  0x00 ; '.'
00000000000010ca         db  0x00 ; '.'
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x00 ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0xc8 ; '.'
00000000000010d1         db  0x7e ; '~'
00000000000010d2         db  0x20 ; ' '
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x00 ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0x07 ; '.'
00000000000010d9         db  0x00 ; '.'
00000000000010da         db  0x00 ; '.'
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x13 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x00 ; '.'
00000000000010e1         db  0x00 ; '.'
00000000000010e2         db  0x00 ; '.'
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x00 ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0xd0 ; '.'
00000000000010e9         db  0x7e ; '~'
00000000000010ea         db  0x20 ; ' '
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x00 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0x07 ; '.'
00000000000010f1         db  0x00 ; '.'
00000000000010f2         db  0x00 ; '.'
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x14 ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0x00 ; '.'
00000000000010f9         db  0x00 ; '.'
00000000000010fa         db  0x00 ; '.'
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x00 ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0xd8 ; '.'
0000000000001101         db  0x7e ; '~'
0000000000001102         db  0x20 ; ' '
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x00 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0x07 ; '.'
0000000000001109         db  0x00 ; '.'
000000000000110a         db  0x00 ; '.'
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x15 ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0x00 ; '.'
0000000000001111         db  0x00 ; '.'
0000000000001112         db  0x00 ; '.'
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x00 ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0xe0 ; '.'
0000000000001119         db  0x7e ; '~'
000000000000111a         db  0x20 ; ' '
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x00 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x07 ; '.'
0000000000001121         db  0x00 ; '.'
0000000000001122         db  0x00 ; '.'
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x16 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0x00 ; '.'
0000000000001129         db  0x00 ; '.'
000000000000112a         db  0x00 ; '.'
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x00 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0xe8 ; '.'
0000000000001131         db  0x7e ; '~'
0000000000001132         db  0x20 ; ' '
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x00 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x07 ; '.'
0000000000001139         db  0x00 ; '.'
000000000000113a         db  0x00 ; '.'
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x17 ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0x00 ; '.'
0000000000001141         db  0x00 ; '.'
0000000000001142         db  0x00 ; '.'
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x00 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0xf0 ; '.'
0000000000001149         db  0x7e ; '~'
000000000000114a         db  0x20 ; ' '
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x00 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x07 ; '.'
0000000000001151         db  0x00 ; '.'
0000000000001152         db  0x00 ; '.'
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x18 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0x00 ; '.'
0000000000001159         db  0x00 ; '.'
000000000000115a         db  0x00 ; '.'
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x00 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0xf8 ; '.'
0000000000001161         db  0x7e ; '~'
0000000000001162         db  0x20 ; ' '
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x00 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x07 ; '.'
0000000000001169         db  0x00 ; '.'
000000000000116a         db  0x00 ; '.'
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x19 ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0x00 ; '.'
0000000000001171         db  0x00 ; '.'
0000000000001172         db  0x00 ; '.'
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x00 ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0x00 ; '.'
0000000000001179         db  0x7f ; '.'
000000000000117a         db  0x20 ; ' '
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x00 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x07 ; '.'
0000000000001181         db  0x00 ; '.'
0000000000001182         db  0x00 ; '.'
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x1a ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x00 ; '.'
0000000000001189         db  0x00 ; '.'
000000000000118a         db  0x00 ; '.'
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x00 ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0x08 ; '.'
0000000000001191         db  0x7f ; '.'
0000000000001192         db  0x20 ; ' '
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x00 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0x07 ; '.'
0000000000001199         db  0x00 ; '.'
000000000000119a         db  0x00 ; '.'
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x1c ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x00 ; '.'
00000000000011a1         db  0x00 ; '.'
00000000000011a2         db  0x00 ; '.'
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x00 ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0x10 ; '.'
00000000000011a9         db  0x7f ; '.'
00000000000011aa         db  0x20 ; ' '
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x00 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0x07 ; '.'
00000000000011b1         db  0x00 ; '.'
00000000000011b2         db  0x00 ; '.'
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x1d ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x00 ; '.'
00000000000011b9         db  0x00 ; '.'
00000000000011ba         db  0x00 ; '.'
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x00 ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0x18 ; '.'
00000000000011c1         db  0x7f ; '.'
00000000000011c2         db  0x20 ; ' '
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x00 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0x07 ; '.'
00000000000011c9         db  0x00 ; '.'
00000000000011ca         db  0x00 ; '.'
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x1e ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x00 ; '.'
00000000000011d1         db  0x00 ; '.'
00000000000011d2         db  0x00 ; '.'
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x00 ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0x20 ; ' '
00000000000011d9         db  0x7f ; '.'
00000000000011da         db  0x20 ; ' '
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x00 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0x07 ; '.'
00000000000011e1         db  0x00 ; '.'
00000000000011e2         db  0x00 ; '.'
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x1f ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x00 ; '.'
00000000000011e9         db  0x00 ; '.'
00000000000011ea         db  0x00 ; '.'
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x00 ; '.'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0x28 ; '('
00000000000011f1         db  0x7f ; '.'
00000000000011f2         db  0x20 ; ' '
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x00 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0x07 ; '.'
00000000000011f9         db  0x00 ; '.'
00000000000011fa         db  0x00 ; '.'
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x21 ; '!'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x00 ; '.'
0000000000001201         db  0x00 ; '.'
0000000000001202         db  0x00 ; '.'
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x00 ; '.'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0x30 ; '0'
0000000000001209         db  0x7f ; '.'
000000000000120a         db  0x20 ; ' '
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x00 ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0x07 ; '.'
0000000000001211         db  0x00 ; '.'
0000000000001212         db  0x00 ; '.'
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x22 ; '"'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x00 ; '.'
0000000000001219         db  0x00 ; '.'
000000000000121a         db  0x00 ; '.'
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x00 ; '.'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0x38 ; '8'
0000000000001221         db  0x7f ; '.'
0000000000001222         db  0x20 ; ' '
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x00 ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0x07 ; '.'
0000000000001229         db  0x00 ; '.'
000000000000122a         db  0x00 ; '.'
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x23 ; '#'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x00 ; '.'
0000000000001231         db  0x00 ; '.'
0000000000001232         db  0x00 ; '.'
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x00 ; '.'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0x40 ; '@'
0000000000001239         db  0x7f ; '.'
000000000000123a         db  0x20 ; ' '
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x00 ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x07 ; '.'
0000000000001241         db  0x00 ; '.'
0000000000001242         db  0x00 ; '.'
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x24 ; '$'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x00 ; '.'
0000000000001249         db  0x00 ; '.'
000000000000124a         db  0x00 ; '.'
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x00 ; '.'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0x48 ; 'H'
0000000000001251         db  0x7f ; '.'
0000000000001252         db  0x20 ; ' '
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x00 ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0x07 ; '.'
0000000000001259         db  0x00 ; '.'
000000000000125a         db  0x00 ; '.'
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x25 ; '%'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x00 ; '.'
0000000000001261         db  0x00 ; '.'
0000000000001262         db  0x00 ; '.'
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x00 ; '.'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x50 ; 'P'
0000000000001269         db  0x7f ; '.'
000000000000126a         db  0x20 ; ' '
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x00 ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x07 ; '.'
0000000000001271         db  0x00 ; '.'
0000000000001272         db  0x00 ; '.'
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x26 ; '&'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x00 ; '.'
0000000000001279         db  0x00 ; '.'
000000000000127a         db  0x00 ; '.'
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x00 ; '.'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x58 ; 'X'
0000000000001281         db  0x7f ; '.'
0000000000001282         db  0x20 ; ' '
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x00 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0x07 ; '.'
0000000000001289         db  0x00 ; '.'
000000000000128a         db  0x00 ; '.'
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x27 ; '''
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x00 ; '.'
0000000000001291         db  0x00 ; '.'
0000000000001292         db  0x00 ; '.'
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x00 ; '.'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x60 ; '`'
0000000000001299         db  0x7f ; '.'
000000000000129a         db  0x20 ; ' '
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x00 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0x07 ; '.'
00000000000012a1         db  0x00 ; '.'
00000000000012a2         db  0x00 ; '.'
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x28 ; '('
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x00 ; '.'
00000000000012a9         db  0x00 ; '.'
00000000000012aa         db  0x00 ; '.'
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x00 ; '.'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x68 ; 'h'
00000000000012b1         db  0x7f ; '.'
00000000000012b2         db  0x20 ; ' '
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x00 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0x07 ; '.'
00000000000012b9         db  0x00 ; '.'
00000000000012ba         db  0x00 ; '.'
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x29 ; ')'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x00 ; '.'
00000000000012c1         db  0x00 ; '.'
00000000000012c2         db  0x00 ; '.'
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x00 ; '.'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0x70 ; 'p'
00000000000012c9         db  0x7f ; '.'
00000000000012ca         db  0x20 ; ' '
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x00 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0x07 ; '.'
00000000000012d1         db  0x00 ; '.'
00000000000012d2         db  0x00 ; '.'
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x2a ; '*'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x00 ; '.'
00000000000012d9         db  0x00 ; '.'
00000000000012da         db  0x00 ; '.'
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x00 ; '.'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0x78 ; 'x'
00000000000012e1         db  0x7f ; '.'
00000000000012e2         db  0x20 ; ' '
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x00 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0x07 ; '.'
00000000000012e9         db  0x00 ; '.'
00000000000012ea         db  0x00 ; '.'
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x2b ; '+'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x00 ; '.'
00000000000012f1         db  0x00 ; '.'
00000000000012f2         db  0x00 ; '.'
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x00 ; '.'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x80 ; '.'
00000000000012f9         db  0x7f ; '.'
00000000000012fa         db  0x20 ; ' '
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x00 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0x07 ; '.'
0000000000001301         db  0x00 ; '.'
0000000000001302         db  0x00 ; '.'
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x2c ; ','
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x00 ; '.'
0000000000001309         db  0x00 ; '.'
000000000000130a         db  0x00 ; '.'
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x00 ; '.'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0x88 ; '.'
0000000000001311         db  0x7f ; '.'
0000000000001312         db  0x20 ; ' '
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x00 ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0x07 ; '.'
0000000000001319         db  0x00 ; '.'
000000000000131a         db  0x00 ; '.'
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x2d ; '-'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x00 ; '.'
0000000000001321         db  0x00 ; '.'
0000000000001322         db  0x00 ; '.'
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x00 ; '.'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0x90 ; '.'
0000000000001329         db  0x7f ; '.'
000000000000132a         db  0x20 ; ' '
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x00 ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0x07 ; '.'
0000000000001331         db  0x00 ; '.'
0000000000001332         db  0x00 ; '.'
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x2e ; '.'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x00 ; '.'
0000000000001339         db  0x00 ; '.'
000000000000133a         db  0x00 ; '.'
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x00 ; '.'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0x98 ; '.'
0000000000001341         db  0x7f ; '.'
0000000000001342         db  0x20 ; ' '
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x00 ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0x07 ; '.'
0000000000001349         db  0x00 ; '.'
000000000000134a         db  0x00 ; '.'
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x2f ; '/'
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x00 ; '.'
0000000000001351         db  0x00 ; '.'
0000000000001352         db  0x00 ; '.'
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x00 ; '.'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0xa0 ; '.'
0000000000001359         db  0x7f ; '.'
000000000000135a         db  0x20 ; ' '
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x00 ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0x07 ; '.'
0000000000001361         db  0x00 ; '.'
0000000000001362         db  0x00 ; '.'
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x30 ; '0'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0x00 ; '.'
0000000000001369         db  0x00 ; '.'
000000000000136a         db  0x00 ; '.'
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x00 ; '.'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0xa8 ; '.'
0000000000001371         db  0x7f ; '.'
0000000000001372         db  0x20 ; ' '
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x00 ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x07 ; '.'
0000000000001379         db  0x00 ; '.'
000000000000137a         db  0x00 ; '.'
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x32 ; '2'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0x00 ; '.'
0000000000001381         db  0x00 ; '.'
0000000000001382         db  0x00 ; '.'
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x00 ; '.'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0xb0 ; '.'
0000000000001389         db  0x7f ; '.'
000000000000138a         db  0x20 ; ' '
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x00 ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x07 ; '.'
0000000000001391         db  0x00 ; '.'
0000000000001392         db  0x00 ; '.'
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x33 ; '3'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0x00 ; '.'
0000000000001399         db  0x00 ; '.'
000000000000139a         db  0x00 ; '.'
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x00 ; '.'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0xb8 ; '.'
00000000000013a1         db  0x7f ; '.'
00000000000013a2         db  0x20 ; ' '
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x00 ; '.'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x07 ; '.'
00000000000013a9         db  0x00 ; '.'
00000000000013aa         db  0x00 ; '.'
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x35 ; '5'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x00 ; '.'
00000000000013b1         db  0x00 ; '.'
00000000000013b2         db  0x00 ; '.'
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x00 ; '.'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x13b8; 0x13cf[ (23 bytes)
        ; File offset : [5048; 5071[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
00000000000013b8         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
00000000000013bc         mov        rax, qword [qword_207fd0]                   ; qword_207fd0
00000000000013c3         test       rax, rax
00000000000013c6         je         loc_13ca

00000000000013c8         call       rax

                     loc_13ca:
00000000000013ca         add        rsp, 0x8                                    ; CODE XREF=_init+14
00000000000013ce         ret
                        ; endp
00000000000013cf         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x13d0; 0x16e0[ (784 bytes)
        ; File offset : [5072; 5856[ (784 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_13d0:
00000000000013d0         push       qword [qword_207e30]                        ; Begin of unwind block (FDE at 0x678c), qword_207e30, CODE XREF=sub_13e6+5
00000000000013d6         jmp        qword [qword_207e30+8]                      ; 0x207e38
                        ; endp
00000000000013dc         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___uflow:        // __uflow
00000000000013e0         jmp        qword [__uflow@GOT]                         ; __uflow, __uflow@GOT, CODE XREF=readtoken+169, readtoken+419
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_13e6:
00000000000013e6         push       0x0
00000000000013eb         jmp        loc_13d0


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
00000000000013f0         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=quotearg_n_options+277, quotearg_free+55, quotearg_free+82, quotearg_free+120, readtokens+386, readtokens+532, xrealloc+40
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_13f6:
00000000000013f6         push       0x1
00000000000013fb         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
0000000000001400         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=set_program_name+154, sub_33a0+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1406:
0000000000001406         push       0x2
000000000000140b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
0000000000001410         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=main+1551, main+1668, close_stdout+22, protect_fd+46, freopen_safer+35, quotearg_n_options+28, clone_quoting_options+7, quotearg_buffer+45, quotearg_alloc_mem+42, rpl_fclose+40, close_stream+60
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1416:
0000000000001416         push       0x3
000000000000141b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
0000000000001420         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+556, usage+749
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1426:
0000000000001426         push       0x4
000000000000142b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
0000000000001430         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1436:
0000000000001436         push       0x5
000000000000143b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
0000000000001440         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1446:
0000000000001446         push       0x6
000000000000144b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_puts:        // puts
0000000000001450         jmp        qword [puts@GOT]                            ; puts, puts@GOT, CODE XREF=main+1031
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1456:
0000000000001456         push       0x7
000000000000145b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
0000000000001460         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+86
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1466:
0000000000001466         push       0x8
000000000000146b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
0000000000001470         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1476:
0000000000001476         push       0x9
000000000000147b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
0000000000001480         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1486:
0000000000001486         push       0xa
000000000000148b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
0000000000001490         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+1268, main+1614, main+1660, main+1825, usage+56, usage+102, usage+146, usage+183, usage+220, usage+257, usage+490
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1496:
0000000000001496         push       0xb
000000000000149b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
00000000000014a0         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14a6:
00000000000014a6         push       0xc
00000000000014ab         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
00000000000014b0         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=quotearg_buffer_restyled+343, sub_33a0+411, sub_33a0+1742, xstrdup+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14b6:
00000000000014b6         push       0xd
00000000000014bb         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
00000000000014c0         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=main+1793, parse_long_options+314, parse_gnu_standard_options_only+310, sub_33a0+2739, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137, quotearg_n_custom_mem+140, readtoken+457, readtokens+554
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14c6:
00000000000014c6         push       0xe
00000000000014cb         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
00000000000014d0         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=parse_long_options+198, parse_gnu_standard_options_only+154
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14d6:
00000000000014d6         push       0xf
00000000000014db         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
00000000000014e0         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14e6:
00000000000014e6         push       0x10
00000000000014eb         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dup2:        // dup2
00000000000014f0         jmp        qword [dup2@GOT]                            ; dup2, dup2@GOT, CODE XREF=freopen_safer+79, freopen_safer+100, freopen_safer+116
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14f6:
00000000000014f6         push       0x11
00000000000014fb         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
0000000000001500         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1506:
0000000000001506         push       0x12
000000000000150b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
0000000000001510         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1516:
0000000000001516         push       0x13
000000000000151b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___assert_fail:        // __assert_fail
0000000000001520         jmp        qword [__assert_fail@GOT]                   ; __assert_fail, __assert_fail@GOT, CODE XREF=main+1526, main+1735, main+1788, main+1883
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1526:
0000000000001526         push       0x14
000000000000152b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
0000000000001530         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1536:
0000000000001536         push       0x15
000000000000153b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_freopen:        // freopen
0000000000001540         jmp        qword [freopen@GOT]                         ; freopen, freopen@GOT, CODE XREF=freopen_safer+187
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1546:
0000000000001546         push       0x16
000000000000154b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_close:        // close
0000000000001550         jmp        qword [close@GOT]                           ; close, close@GOT, CODE XREF=protect_fd+41, freopen_safer+307, freopen_safer+325, freopen_safer+337, freopen_safer+373
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1556:
0000000000001556         push       0x17
000000000000155b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_posix_fadvise:        // posix_fadvise
0000000000001560         jmp        qword [posix_fadvise@GOT]                   ; posix_fadvise, posix_fadvise@GOT, CODE XREF=fdadvise, fadvise+22
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1566:
0000000000001566         push       0x18
000000000000156b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
0000000000001570         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=quotearg_buffer_restyled+410
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1576:
0000000000001576         push       0x19
000000000000157b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
0000000000001580         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+157, usage+194, usage+231, usage+275, usage+864, version_etc_arn+135, emit_bug_reporting_address+123
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1586:
0000000000001586         push       0x1a
000000000000158b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
0000000000001590         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1596:
0000000000001596         push       0x1b
000000000000159b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcmp:        // strcmp
00000000000015a0         jmp        qword [strcmp@GOT]                          ; strcmp, strcmp@GOT, CODE XREF=main+452, main+525, main+599, main+825
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15a6:
00000000000015a6         push       0x1c
00000000000015ab         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
00000000000015b0         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=readtokens+223, xmemdup+35
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15b6:
00000000000015b6         push       0x1d
00000000000015bb         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
00000000000015c0         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=fadvise+8, freopen_safer+28, rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15c6:
00000000000015c6         push       0x1e
00000000000015cb         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
00000000000015d0         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=xmalloc+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15d6:
00000000000015d6         push       0x1f
00000000000015db         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
00000000000015e0         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15e6:
00000000000015e6         push       0x20
00000000000015eb         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
00000000000015f0         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15f6:
00000000000015f6         push       0x21
00000000000015fb         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
0000000000001600         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1606:
0000000000001606         push       0x22
000000000000160b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
0000000000001610         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1616:
0000000000001616         push       0x23
000000000000161b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
0000000000001620         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+55, usage+531, usage+724, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1626:
0000000000001626         push       0x24
000000000000162b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
0000000000001630         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=usage+120, usage+519, usage+612, usage+673, usage+712, usage+815, emit_bug_reporting_address+37, emit_bug_reporting_address+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1636:
0000000000001636         push       0x25
000000000000163b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
0000000000001640         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+1285, main+1575, main+1634, main+1692, main+1842, detect_loop+183, close_stdout+125, close_stdout+157, xalloc_die+43
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1646:
0000000000001646         push       0x26
000000000000164b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_open:        // open
0000000000001650         jmp        qword [open@GOT]                            ; open, open@GOT, CODE XREF=protect_fd+24
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1656:
0000000000001656         push       0x27
000000000000165b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
0000000000001660         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1666:
0000000000001666         push       0x28
000000000000166b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000001670         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1676:
0000000000001676         push       0x29
000000000000167b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000001680         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=usage+88, parse_long_options+290, parse_gnu_standard_options_only+242
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1686:
0000000000001686         push       0x2a
000000000000168b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
0000000000001690         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1696:
0000000000001696         push       0x2b
000000000000169b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
00000000000016a0         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642, version_etc_arn+718, version_etc_arn+872
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16a6:
00000000000016a6         push       0x2c
00000000000016ab         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
00000000000016b0         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_33a0+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16b6:
00000000000016b6         push       0x2d
00000000000016bb         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
00000000000016c0         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_33a0+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16c6:
00000000000016c6         push       0x2e
00000000000016cb         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
00000000000016d0         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=sub_3140+51
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16d6:
00000000000016d6         push       0x2f
00000000000016db         jmp        0x13d0
                        ; endp


        ; Section .plt.got
        ; Range: [0x16e0; 0x16e8[ (8 bytes)
        ; File offset : [5856; 5864[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_207fe0:        // qword_207fe0
00000000000016e0         jmp        qword [qword_207fe0]                        ; qword, End of unwind block (FDE at 0x678c), Begin of unwind block (FDE at 0x67b4), qword_207fe0, CODE XREF=__do_global_dtors_aux+30
                        ; endp
00000000000016e6         align      8
00000000000016e8         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x67b4)
00000000000016e9         db  0x00 ; '.'
00000000000016ea         db  0x00 ; '.'
00000000000016eb         db  0x00 ; '.'
00000000000016ec         db  0x00 ; '.'
00000000000016ed         db  0x00 ; '.'
00000000000016ee         db  0x00 ; '.'
00000000000016ef         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x16f0; 0x582e[ (16702 bytes)
        ; File offset : [5872; 22574[ (16702 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_50: int64_t, -80
        ;    var_58: int8_t, -88
        ;    var_5C: int32_t, -92
        ;    var_60: int32_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128


                     main:
00000000000016f0         push       r15                                         ; Begin of unwind block (FDE at 0x68f4), DATA XREF=_start+29
00000000000016f2         push       r14
00000000000016f4         push       r13
00000000000016f6         push       r12
00000000000016f8         push       rbp
00000000000016f9         push       rbx
00000000000016fa         mov        ebp, edi
00000000000016fc         mov        rbx, rsi
00000000000016ff         sub        rsp, 0x58
0000000000001703         mov        rdi, qword [rsi]
0000000000001706         mov        rax, qword [fs:0x28]
000000000000170f         mov        qword [rsp+0x88+var_40], rax
0000000000001714         xor        eax, eax
0000000000001716         call       set_program_name                            ; set_program_name
000000000000171b         lea        rsi, qword [aExtraOperandS+20]              ; argument "__locale" for method j_setlocale, 0x5927
0000000000001722         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
0000000000001727         call       j_setlocale                                 ; setlocale
000000000000172c         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
0000000000001733         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
000000000000173a         call       j_bindtextdomain                            ; bindtextdomain
000000000000173f         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
0000000000001746         call       j_textdomain                                ; textdomain
000000000000174b         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
0000000000001752         call       atexit                                      ; atexit
0000000000001757         lea        rax, qword [aMarkKettenis]                  ; "Mark Kettenis"
000000000000175e         sub        rsp, 0x8
0000000000001762         mov        r8, qword [Version]                         ; Version
0000000000001769         push       0x0
000000000000176b         lea        rdx, qword [aTsort]                         ; "tsort"
0000000000001772         lea        rcx, qword [aNsOnlineHelpSn+23]             ; 0x58c0
0000000000001779         push       rax
000000000000177a         lea        rax, qword [usage]                          ; usage
0000000000001781         mov        r9d, 0x1
0000000000001787         mov        rsi, rbx
000000000000178a         mov        edi, ebp
000000000000178c         push       rax
000000000000178d         xor        eax, eax
000000000000178f         call       parse_gnu_standard_options_only             ; parse_gnu_standard_options_only
0000000000001794         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5
000000000000179b         mov        edx, ebp
000000000000179d         add        rsp, 0x20
00000000000017a1         sub        edx, eax
00000000000017a3         cmp        edx, 0x1
00000000000017a6         jg         loc_1df6

00000000000017ac         cmp        eax, ebp
00000000000017ae         je         loc_1ca9

00000000000017b4         mov        rsi, qword [rbx+rax*8]                      ; argument #2 for method new_item
00000000000017b8         lea        rdi, qword [aLibs+10]                       ; 0x5c3a
00000000000017bf         mov        ecx, 0x2
00000000000017c4         mov        r15, rsi
00000000000017c7         mov        qword [rsp+0x88+var_68], rsi
00000000000017cc         rep  cmpsb byte [rsi], byte [rdi]
00000000000017ce         seta       al
00000000000017d1         sbb        al, 0x0
00000000000017d3         xor        edi, edi                                    ; argument #1 for method new_item
00000000000017d5         movsx      eax, al
00000000000017d8         mov        ebx, eax
00000000000017da         mov        dword [rsp+0x88+var_5C], eax
00000000000017de         call       new_item                                    ; new_item
00000000000017e3         test       ebx, ebx
00000000000017e5         mov        r14, rax
00000000000017e8         je         loc_1809

00000000000017ea         mov        rdx, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5
00000000000017f1         lea        rsi, qword [aWriteError+10]                 ; 0x5bd1
00000000000017f8         mov        rdi, r15
00000000000017fb         call       freopen_safer                               ; freopen_safer
0000000000001800         test       rax, rax
0000000000001803         je         loc_1ceb

                     loc_1809:
0000000000001809         mov        rdi, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5, CODE XREF=main+248, main+1495
0000000000001810         mov        esi, 0x2
0000000000001815         call       fadvise                                     ; fadvise
000000000000181a         lea        rdi, qword [rsp+0x88+var_58]
000000000000181f         mov        qword [rsp+0x88+var_78], rdi
0000000000001824         call       init_tokenbuffer                            ; init_tokenbuffer

                     loc_1829:
0000000000001829         mov        qword [rsp+0x88+var_80], 0x0                ; CODE XREF=main+832, main+873
0000000000001832         nop        word [rax+rax]

                     loc_1838:
0000000000001838         mov        rcx, qword [rsp+0x88+var_78]                ; CODE XREF=main+480
000000000000183d         mov        rdi, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5
0000000000001844         lea        rsi, qword [aExtraOperandS+17]              ; 0x5924
000000000000184b         mov        edx, 0x3
0000000000001850         call       readtoken                                   ; readtoken
0000000000001855         cmp        rax, 0xffffffffffffffff
0000000000001859         je         loc_1a8c

000000000000185f         test       rax, rax
0000000000001862         je         loc_1e31

0000000000001868         test       r14, r14
000000000000186b         mov        rbp, qword [rsp+0x88+var_50]
0000000000001870         je         loc_1dd2

0000000000001876         mov        r15, qword [r14+0x10]
000000000000187a         mov        r12, r14
000000000000187d         test       r15, r15
0000000000001880         mov        rbx, r15
0000000000001883         jne        loc_18ae

0000000000001885         jmp        loc_1a6f
000000000000188a         align      16

                     loc_1890:
0000000000001890         mov        rax, qword [r15+0x10]                       ; CODE XREF=main+461
0000000000001894         cmovs      rax, qword [r15+8]
0000000000001899         test       rax, rax
000000000000189c         je         loc_18d8

000000000000189e         mov        edx, dword [rax+0x18]
00000000000018a1         test       edx, edx
00000000000018a3         cmovne     r12, r15
00000000000018a7         cmovne     rbx, rax
00000000000018ab         mov        r15, rax

                     loc_18ae:
00000000000018ae         mov        rsi, qword [r15]                            ; argument "__s2" for method j_strcmp, CODE XREF=main+403
00000000000018b1         mov        rdi, rbp                                    ; argument "__s1" for method j_strcmp
00000000000018b4         call       j_strcmp                                    ; strcmp
00000000000018b9         test       eax, eax
00000000000018bb         mov        edx, eax
00000000000018bd         jne        loc_1890

                     loc_18bf:
00000000000018bf         cmp        qword [rsp+0x88+var_80], 0x0                ; CODE XREF=main+890, main+910, main+1403
00000000000018c5         jne        loc_1a1e

                     loc_18cb:
00000000000018cb         mov        qword [rsp+0x88+var_80], r15                ; CODE XREF=main+808
00000000000018d0         jmp        loc_1838
00000000000018d5         align      8

                     loc_18d8:
00000000000018d8         mov        rdi, rbp                                    ; argument #1 for method new_item, CODE XREF=main+428
00000000000018db         mov        dword [rsp+0x88+var_60], edx
00000000000018df         call       new_item                                    ; new_item
00000000000018e4         mov        edx, dword [rsp+0x88+var_60]
00000000000018e8         mov        r13, rax
00000000000018eb         test       edx, edx
00000000000018ed         js         loc_1a83

00000000000018f3         mov        qword [r15+0x10], rax

                     loc_18f7:
00000000000018f7         mov        rsi, qword [rbx]                            ; argument "__s2" for method j_strcmp, CODE XREF=main+919
00000000000018fa         mov        rdi, rbp                                    ; argument "__s1" for method j_strcmp
00000000000018fd         call       j_strcmp                                    ; strcmp
0000000000001902         test       eax, eax
0000000000001904         je         loc_1d9d

000000000000190a         cdq
000000000000190b         mov        rcx, qword [rbx+0x10]
000000000000190f         or         edx, 0x1
0000000000001912         test       eax, eax
0000000000001914         cmovs      rcx, qword [rbx+8]
0000000000001919         mov        dword [rsp+0x88+var_60], edx
000000000000191d         cmp        r13, rcx
0000000000001920         mov        qword [rsp+0x88+var_70], rcx
0000000000001925         mov        r15, rcx
0000000000001928         jne        loc_1941

000000000000192a         jmp        loc_1967
000000000000192c         align      16

                     loc_1930:
0000000000001930         mov        dword [r15+0x18], 0x1                       ; CODE XREF=main+612
0000000000001938         mov        r15, qword [r15+0x10]
000000000000193c         cmp        r13, r15
000000000000193f         je         loc_1967

                     loc_1941:
0000000000001941         mov        rsi, qword [r15]                            ; argument "__s2" for method j_strcmp, CODE XREF=main+568, main+629
0000000000001944         mov        rdi, rbp                                    ; argument "__s1" for method j_strcmp
0000000000001947         call       j_strcmp                                    ; strcmp
000000000000194c         test       eax, eax
000000000000194e         je         loc_1ccc

0000000000001954         jns        loc_1930

0000000000001956         mov        dword [r15+0x18], 0xffffffff
000000000000195e         mov        r15, qword [r15+8]
0000000000001962         cmp        r13, r15
0000000000001965         jne        loc_1941

                     loc_1967:
0000000000001967         mov        eax, dword [rbx+0x18]                       ; CODE XREF=main+570, main+591
000000000000196a         test       eax, eax
000000000000196c         je         loc_1a60

0000000000001972         mov        edx, dword [rsp+0x88+var_60]
0000000000001976         neg        edx
0000000000001978         cmp        eax, edx
000000000000197a         je         loc_1a60

0000000000001980         mov        rax, qword [rsp+0x88+var_70]
0000000000001985         mov        edi, dword [rsp+0x88+var_60]
0000000000001989         cmp        edi, dword [rax+0x18]
000000000000198c         je         loc_1c30

0000000000001992         mov        esi, dword [rsp+0x88+var_60]
0000000000001996         mov        rdi, qword [rsp+0x88+var_70]
000000000000199b         test       esi, esi
000000000000199d         mov        rax, qword [rdi+8]
00000000000019a1         mov        rcx, qword [rdi+0x10]
00000000000019a5         js         loc_1c70

00000000000019ab         mov        rcx, qword [rax+0x10]
00000000000019af         mov        rsi, qword [rsp+0x88+var_70]
00000000000019b4         mov        qword [rsi+8], rcx
00000000000019b8         mov        rcx, qword [rax+8]
00000000000019bc         mov        qword [rax+0x10], rsi
00000000000019c0         mov        qword [rbx+0x10], rcx
00000000000019c4         mov        qword [rax+8], rbx

                     loc_19c8:
00000000000019c8         mov        rdi, qword [rsp+0x88+var_70]                ; CODE XREF=main+1435
00000000000019cd         mov        dword [rbx+0x18], 0x0
00000000000019d4         mov        dword [rdi+0x18], 0x0
00000000000019db         mov        ecx, dword [rax+0x18]
00000000000019de         cmp        dword [rsp+0x88+var_60], ecx
00000000000019e2         je         loc_1c90

00000000000019e8         cmp        edx, ecx
00000000000019ea         jne        loc_19f8

00000000000019ec         mov        rsi, qword [rsp+0x88+var_70]
00000000000019f1         mov        edi, dword [rsp+0x88+var_60]
00000000000019f5         mov        dword [rsi+0x18], edi

                     loc_19f8:
00000000000019f8         cmp        qword [r12+0x10], rbx                       ; CODE XREF=main+762, main+1443
00000000000019fd         mov        dword [rax+0x18], 0x0
0000000000001a04         je         loc_1c63

                     loc_1a0a:
0000000000001a0a         cmp        qword [rsp+0x88+var_80], 0x0                ; CODE XREF=main+1389
0000000000001a10         mov        qword [r12+8], rax
0000000000001a15         mov        r15, r13
0000000000001a18         je         loc_18cb

                     loc_1a1e:
0000000000001a1e         mov        rax, qword [rsp+0x88+var_80]                ; CODE XREF=main+469
0000000000001a23         mov        rsi, qword [r15]                            ; argument "__s2" for method j_strcmp
0000000000001a26         mov        rdi, qword [rax]                            ; argument "__s1" for method j_strcmp
0000000000001a29         call       j_strcmp                                    ; strcmp
0000000000001a2e         test       eax, eax
0000000000001a30         je         loc_1829

0000000000001a36         add        qword [r15+0x20], 0x1
0000000000001a3b         mov        edi, 0x10
0000000000001a40         call       xmalloc                                     ; xmalloc
0000000000001a45         mov        rdi, qword [rsp+0x88+var_80]
0000000000001a4a         mov        qword [rax], r15
0000000000001a4d         mov        rdx, qword [rdi+0x30]
0000000000001a51         mov        qword [rax+8], rdx
0000000000001a55         mov        qword [rdi+0x30], rax
0000000000001a59         jmp        loc_1829
0000000000001a5e         align      32

                     loc_1a60:
0000000000001a60         add        eax, dword [rsp+0x88+var_60]                ; CODE XREF=main+636, main+650
0000000000001a64         mov        r15, r13
0000000000001a67         mov        dword [rbx+0x18], eax
0000000000001a6a         jmp        loc_18bf

                     loc_1a6f:
0000000000001a6f         mov        rdi, rbp                                    ; argument #1 for method new_item, CODE XREF=main+405
0000000000001a72         call       new_item                                    ; new_item
0000000000001a77         mov        r15, rax
0000000000001a7a         mov        qword [r14+0x10], rax
0000000000001a7e         jmp        loc_18bf

                     loc_1a83:
0000000000001a83         mov        qword [r15+8], rax                          ; CODE XREF=main+509
0000000000001a87         jmp        loc_18f7

                     loc_1a8c:
0000000000001a8c         cmp        qword [rsp+0x88+var_80], 0x0                ; CODE XREF=main+361
0000000000001a92         jne        loc_1d1c

0000000000001a98         mov        rdi, qword [r14+0x10]
0000000000001a9c         test       rdi, rdi
0000000000001a9f         je         loc_1aad

0000000000001aa1         lea        rsi, qword [count_items]                    ; count_items
0000000000001aa8         call       recurse_tree                                ; recurse_tree

                     loc_1aad:
0000000000001aad         mov        ebp, 0x1                                    ; CODE XREF=main+943

                     loc_1ab2:
0000000000001ab2         cmp        qword [n_strings], 0x0                      ; n_strings, CODE XREF=main+1327
0000000000001aba         je         loc_1b6d

0000000000001ac0         mov        rdi, qword [r14+0x10]
0000000000001ac4         test       rdi, rdi
0000000000001ac7         je         loc_1bb0

0000000000001acd         lea        rsi, qword [scan_zeros]                     ; scan_zeros
0000000000001ad4         call       recurse_tree                                ; recurse_tree
0000000000001ad9         mov        rax, qword [head]                           ; head
0000000000001ae0         test       rax, rax
0000000000001ae3         je         loc_1c24

0000000000001ae9         nop        dword [rax]

                     loc_1af0:
0000000000001af0         mov        rdi, qword [rax]                            ; argument "__s" for method j_puts, CODE XREF=main+1142, main+1226
0000000000001af3         mov        rbx, qword [rax+0x30]
0000000000001af7         call       j_puts                                      ; puts
0000000000001afc         mov        rax, qword [n_strings]                      ; n_strings
0000000000001b03         mov        r8, qword [head]                            ; head
0000000000001b0a         xor        esi, esi
0000000000001b0c         test       rbx, rbx
0000000000001b0f         mov        rcx, qword [zeros]                          ; zeros
0000000000001b16         lea        rdi, qword [rax-1]
0000000000001b1a         mov        qword [r8], 0x0
0000000000001b21         mov        qword [n_strings], rdi                      ; n_strings
0000000000001b28         je         loc_1b58

0000000000001b2a         nop        word [rax+rax]

                     loc_1b30:
0000000000001b30         mov        rdx, qword [rbx]                            ; CODE XREF=main+1117
0000000000001b33         sub        qword [rdx+0x20], 0x1
0000000000001b38         jne        loc_1b46

0000000000001b3a         mov        qword [rcx+0x28], rdx
0000000000001b3e         mov        esi, 0x1
0000000000001b43         mov        rcx, rdx

                     loc_1b46:
0000000000001b46         mov        rbx, qword [rbx+8]                          ; CODE XREF=main+1096
0000000000001b4a         test       rbx, rbx
0000000000001b4d         jne        loc_1b30

0000000000001b4f         test       sil, sil
0000000000001b52         jne        loc_1d91

                     loc_1b58:
0000000000001b58         mov        rax, qword [r8+0x28]                        ; CODE XREF=main+1080, main+1704
0000000000001b5c         test       rax, rax
0000000000001b5f         mov        qword [head], rax                           ; head
0000000000001b66         jne        loc_1af0

                     loc_1b68:
0000000000001b68         test       rdi, rdi                                    ; CODE XREF=main+1339
0000000000001b6b         jne        loc_1bc0

                     loc_1b6d:
0000000000001b6d         mov        rdi, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5, CODE XREF=main+970
0000000000001b74         call       rpl_fclose                                  ; rpl_fclose
0000000000001b79         test       eax, eax
0000000000001b7b         jne        loc_1d57

0000000000001b81         xor        ebp, 0x1
0000000000001b84         mov        rsi, qword [rsp+0x88+var_40]
0000000000001b89         xor        rsi, qword [fs:0x28]
0000000000001b92         movzx      eax, bpl
0000000000001b96         jne        loc_1df1

0000000000001b9c         add        rsp, 0x58
0000000000001ba0         pop        rbx
0000000000001ba1         pop        rbp
0000000000001ba2         pop        r12
0000000000001ba4         pop        r13
0000000000001ba6         pop        r14
0000000000001ba8         pop        r15
0000000000001baa         ret
                        ; endp
0000000000001bab         align      16

                     loc_1bb0:
0000000000001bb0         mov        rax, qword [head]                           ; head, CODE XREF=main+983
0000000000001bb7         test       rax, rax
0000000000001bba         jne        loc_1af0

                     loc_1bc0:
0000000000001bc0         mov        rdx, qword [rsp+0x88+var_68]                ; CODE XREF=main+1147
0000000000001bc5         mov        esi, 0x3
0000000000001bca         xor        edi, edi
0000000000001bcc         xor        ebp, ebp
0000000000001bce         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000001bd3         lea        rsi, qword [aSInputContains]                ; argument "msgid" for method j_dcgettext, "%s: input contains a loop:"
0000000000001bda         mov        rbx, rax
0000000000001bdd         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001be2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001be4         call       j_dcgettext                                 ; dcgettext
0000000000001be9         mov        rcx, rbx
0000000000001bec         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001bef         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001bf1         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001bf3         xor        eax, eax
0000000000001bf5         call       j_error                                     ; error
0000000000001bfa         nop        word [rax+rax]

                     loc_1c00:
0000000000001c00         mov        rdi, qword [r14+0x10]                       ; CODE XREF=main+1325
0000000000001c04         test       rdi, rdi
0000000000001c07         je         loc_1c15

0000000000001c09         lea        rsi, qword [detect_loop]                    ; detect_loop
0000000000001c10         call       recurse_tree                                ; recurse_tree

                     loc_1c15:
0000000000001c15         cmp        qword [loop], 0x0                           ; loop, CODE XREF=main+1303
0000000000001c1d         jne        loc_1c00

0000000000001c1f         jmp        loc_1ab2

                     loc_1c24:
0000000000001c24         mov        rdi, qword [n_strings]                      ; n_strings, CODE XREF=main+1011
0000000000001c2b         jmp        loc_1b68

                     loc_1c30:
0000000000001c30         test       edi, edi                                    ; CODE XREF=main+668
0000000000001c32         js         loc_1c98

0000000000001c34         mov        rdi, qword [rsp+0x88+var_70]
0000000000001c39         mov        rax, qword [rdi+8]
0000000000001c3d         mov        qword [rbx+0x10], rax
0000000000001c41         mov        qword [rdi+8], rbx

                     loc_1c45:
0000000000001c45         cmp        qword [r12+0x10], rbx                       ; CODE XREF=main+1463
0000000000001c4a         mov        rax, qword [rsp+0x88+var_70]
0000000000001c4f         mov        dword [rax+0x18], 0x0
0000000000001c56         mov        dword [rbx+0x18], 0x0
0000000000001c5d         jne        loc_1a0a

                     loc_1c63:
0000000000001c63         mov        qword [r12+0x10], rax                       ; CODE XREF=main+788
0000000000001c68         mov        r15, r13
0000000000001c6b         jmp        loc_18bf

                     loc_1c70:
0000000000001c70         mov        rax, qword [rcx+8]                          ; CODE XREF=main+693
0000000000001c74         mov        qword [rdi+0x10], rax
0000000000001c78         mov        rax, qword [rcx+0x10]
0000000000001c7c         mov        qword [rcx+8], rdi
0000000000001c80         mov        qword [rbx+8], rax
0000000000001c84         mov        qword [rcx+0x10], rbx
0000000000001c88         mov        rax, rcx
0000000000001c8b         jmp        loc_19c8

                     loc_1c90:
0000000000001c90         mov        dword [rbx+0x18], edx                       ; CODE XREF=main+754
0000000000001c93         jmp        loc_19f8

                     loc_1c98:
0000000000001c98         mov        rdi, rax                                    ; CODE XREF=main+1346
0000000000001c9b         mov        rax, qword [rax+0x10]
0000000000001c9f         mov        qword [rbx+8], rax
0000000000001ca3         mov        qword [rdi+0x10], rbx
0000000000001ca7         jmp        loc_1c45

                     loc_1ca9:
0000000000001ca9         xor        edi, edi                                    ; argument #1 for method new_item, CODE XREF=main+190
0000000000001cab         call       new_item                                    ; new_item
0000000000001cb0         mov        r14, rax
0000000000001cb3         lea        rax, qword [aLibs+10]                       ; 0x5c3a
0000000000001cba         mov        dword [rsp+0x88+var_5C], 0x0
0000000000001cc2         mov        qword [rsp+0x88+var_68], rax
0000000000001cc7         jmp        loc_1809

                     loc_1ccc:
0000000000001ccc         lea        rcx, qword [__PRETTY_FUNCTION__.6928]       ; argument "__function" for method j___assert_fail, "search_item", CODE XREF=main+606
0000000000001cd3         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/tsort.c"
0000000000001cda         lea        rdi, qword [aStreqStrPstr]                  ; argument "__assertion" for method j___assert_fail, "!STREQ (str, p->str)"
0000000000001ce1         mov        edx, 0xb6                                   ; argument "__line" for method j___assert_fail
0000000000001ce6         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_1ceb:
0000000000001ceb         mov        rdx, qword [rsp+0x88+var_68]                ; CODE XREF=main+275
0000000000001cf0         mov        esi, 0x3
0000000000001cf5         xor        edi, edi
0000000000001cf7         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000001cfc         mov        rbx, rax
0000000000001cff         call       j___errno_location                          ; __errno_location
0000000000001d04         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001d06         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5bd7
0000000000001d0d         mov        rcx, rbx
0000000000001d10         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001d15         xor        eax, eax
0000000000001d17         call       j_error                                     ; error

                     loc_1d1c:
0000000000001d1c         mov        rdx, qword [rsp+0x88+var_68]                ; CODE XREF=main+930
0000000000001d21         mov        esi, 0x3
0000000000001d26         xor        edi, edi
0000000000001d28         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000001d2d         lea        rsi, qword [aSInputContains_5b80]           ; argument "msgid" for method j_dcgettext, "%s: input contains an odd number of tokens"
0000000000001d34         mov        rbx, rax
0000000000001d37         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001d3c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001d3e         call       j_dcgettext                                 ; dcgettext
0000000000001d43         mov        rcx, rbx
0000000000001d46         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001d49         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001d4b         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001d50         xor        eax, eax
0000000000001d52         call       j_error                                     ; error

                     loc_1d57:
0000000000001d57         cmp        dword [rsp+0x88+var_5C], 0x0                ; CODE XREF=main+1163
0000000000001d5c         jne        loc_1dbc

0000000000001d5e         lea        rsi, qword [aStandardInput]                 ; argument "msgid" for method j_dcgettext, "standard input"
0000000000001d65         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001d6a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001d6c         call       j_dcgettext                                 ; dcgettext
0000000000001d71         mov        rbx, rax

                     loc_1d74:
0000000000001d74         call       j___errno_location                          ; __errno_location, CODE XREF=main+1760
0000000000001d79         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001d7b         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5bd7
0000000000001d82         mov        rcx, rbx
0000000000001d85         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001d8a         xor        eax, eax
0000000000001d8c         call       j_error                                     ; error

                     loc_1d91:
0000000000001d91         mov        qword [zeros], rcx                          ; zeros, CODE XREF=main+1122
0000000000001d98         jmp        loc_1b58

                     loc_1d9d:
0000000000001d9d         lea        rcx, qword [__PRETTY_FUNCTION__.6928]       ; argument "__function" for method j___assert_fail, "search_item", CODE XREF=main+532
0000000000001da4         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/tsort.c"
0000000000001dab         lea        rdi, qword [aStreqStrSstr]                  ; argument "__assertion" for method j___assert_fail, "!STREQ (str, s->str)"
0000000000001db2         mov        edx, 0xa8                                   ; argument "__line" for method j___assert_fail
0000000000001db7         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_1dbc:
0000000000001dbc         mov        rdx, qword [rsp+0x88+var_68]                ; CODE XREF=main+1644
0000000000001dc1         mov        esi, 0x3
0000000000001dc6         xor        edi, edi
0000000000001dc8         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000001dcd         mov        rbx, rax
0000000000001dd0         jmp        loc_1d74

                     loc_1dd2:
0000000000001dd2         lea        rcx, qword [__PRETTY_FUNCTION__.6928]       ; argument "__function" for method j___assert_fail, "search_item", CODE XREF=main+384
0000000000001dd9         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/tsort.c"
0000000000001de0         lea        rdi, qword [aLen0+9]                        ; argument "__assertion" for method j___assert_fail, 0x594f
0000000000001de7         mov        edx, 0x84                                   ; argument "__line" for method j___assert_fail
0000000000001dec         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_1df1:
0000000000001df1         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=main+1190
                        ; endp

                     loc_1df6:
0000000000001df6         mov        rdi, qword [rbx+rax*8+8]                    ; CODE XREF=main+182
0000000000001dfb         call       quote                                       ; quote
0000000000001e00         lea        rsi, qword [aExtraOperandS]                 ; argument "msgid" for method j_dcgettext, "extra operand %s"
0000000000001e07         mov        rbx, rax
0000000000001e0a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001e0f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001e11         call       j_dcgettext                                 ; dcgettext
0000000000001e16         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001e18         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001e1b         mov        rcx, rbx
0000000000001e1e         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001e20         xor        eax, eax
0000000000001e22         call       j_error                                     ; error
0000000000001e27         mov        edi, 0x1                                    ; argument #1 for method usage
0000000000001e2c         call       usage                                       ; usage

                     loc_1e31:
0000000000001e31         lea        rcx, qword [__PRETTY_FUNCTION__.6982]       ; argument "__function" for method j___assert_fail, "tsort", CODE XREF=main+370
0000000000001e38         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/tsort.c"
0000000000001e3f         lea        rdi, qword [aLen0]                          ; argument "__assertion" for method j___assert_fail, "len != 0"
0000000000001e46         mov        edx, 0x1cd                                  ; argument "__line" for method j___assert_fail
0000000000001e4b         call       j___assert_fail                             ; __assert_fail
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
0000000000001e50         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x675c), End of unwind block (FDE at 0x68f4)
0000000000001e52         mov        r9, rdx
0000000000001e55         pop        rsi
0000000000001e56         mov        rdx, rsp
0000000000001e59         and        rsp, 0xfffffffffffffff0
0000000000001e5d         push       rax
0000000000001e5e         push       rsp
0000000000001e5f         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
0000000000001e66         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
0000000000001e6d         lea        rdi, qword [main]                           ; main
0000000000001e74         call       qword [qword_207fc0+8]                      ; 0x207fc8
0000000000001e7a         hlt
                        ; endp
0000000000001e7b         align      128                                         ; End of unwind block (FDE at 0x675c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000001e80         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
0000000000001e87         push       rbp
0000000000001e88         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000001e8f         cmp        rax, rdi
0000000000001e92         mov        rbp, rsp
0000000000001e95         je         loc_1eb0

0000000000001e97         mov        rax, qword [qword_207fc0]                   ; qword_207fc0
0000000000001e9e         test       rax, rax
0000000000001ea1         je         loc_1eb0

0000000000001ea3         pop        rbp
0000000000001ea4         jmp        rax
                        ; endp
0000000000001ea6         align      16

                     loc_1eb0:
0000000000001eb0         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
0000000000001eb1         ret
                        ; endp
0000000000001eb2         align      64

                     register_tm_clones:
0000000000001ec0         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
0000000000001ec7         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000001ece         push       rbp
0000000000001ecf         sub        rsi, rdi
0000000000001ed2         mov        rbp, rsp
0000000000001ed5         sar        rsi, 0x3
0000000000001ed9         mov        rax, rsi
0000000000001edc         shr        rax, 0x3f
0000000000001ee0         add        rsi, rax
0000000000001ee3         sar        rsi, 0x1
0000000000001ee6         je         loc_1f00

0000000000001ee8         mov        rax, qword [qword_207fd8]                   ; qword_207fd8
0000000000001eef         test       rax, rax
0000000000001ef2         je         loc_1f00

0000000000001ef4         pop        rbp
0000000000001ef5         jmp        rax
                        ; endp
0000000000001ef7         align      256

                     loc_1f00:
0000000000001f00         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000001f01         ret
                        ; endp
0000000000001f02         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
0000000000001f10         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
0000000000001f17         jne        loc_1f48

0000000000001f19         cmp        qword [qword_207fe0], 0x0                   ; qword_207fe0
0000000000001f21         push       rbp
0000000000001f22         mov        rbp, rsp
0000000000001f25         je         loc_1f33

0000000000001f27         mov        rdi, qword [__dso_handle]                   ; __dso_handle
0000000000001f2e         call       j_qword_207fe0                              ; qword_207fe0

                     loc_1f33:
0000000000001f33         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
0000000000001f38         mov        byte [completed.7697], 0x1                  ; completed.7697
0000000000001f3f         pop        rbp
0000000000001f40         ret
                        ; endp
0000000000001f41         align      8

                     loc_1f48:
0000000000001f48         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
0000000000001f4a         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000001f50         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000001f51         mov        rbp, rsp
0000000000001f54         pop        rbp
0000000000001f55         jmp        register_tm_clones                          ; register_tm_clones
0000000000001f5a         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     count_items:
0000000000001f60         add        qword [n_strings], 0x1                      ; Begin of unwind block (FDE at 0x67cc), n_strings, DATA XREF=main+945
0000000000001f68         xor        eax, eax
0000000000001f6a         ret
                        ; endp
0000000000001f6b         align      16                                          ; End of unwind block (FDE at 0x67cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     recurse_tree:
0000000000001f70         push       rbp                                         ; Begin of unwind block (FDE at 0x67e0), CODE XREF=main+952, main+996, main+1312, recurse_tree+24
0000000000001f71         push       rbx
0000000000001f72         mov        rbp, rsi
0000000000001f75         mov        rbx, rdi
0000000000001f78         sub        rsp, 0x8

                     loc_1f7c:
0000000000001f7c         mov        rdi, qword [rbx+8]                          ; CODE XREF=recurse_tree+49
0000000000001f80         test       rdi, rdi
0000000000001f83         je         loc_1fc0

0000000000001f85         mov        rsi, rbp
0000000000001f88         call       recurse_tree                                ; recurse_tree
0000000000001f8d         test       al, al
0000000000001f8f         jne        loc_1fb0

                     loc_1f91:
0000000000001f91         mov        rdi, rbx                                    ; CODE XREF=recurse_tree+85
0000000000001f94         call       rbp
0000000000001f96         test       al, al
0000000000001f98         jne        loc_1fb0

0000000000001f9a         mov        rbx, qword [rbx+0x10]
0000000000001f9e         test       rbx, rbx
0000000000001fa1         jne        loc_1f7c

0000000000001fa3         add        rsp, 0x8
0000000000001fa7         pop        rbx
0000000000001fa8         pop        rbp
0000000000001fa9         ret
                        ; endp
0000000000001faa         align      16

                     loc_1fb0:
0000000000001fb0         add        rsp, 0x8                                    ; CODE XREF=recurse_tree+31, recurse_tree+40
0000000000001fb4         mov        eax, 0x1
0000000000001fb9         pop        rbx
0000000000001fba         pop        rbp
0000000000001fbb         ret
                        ; endp
0000000000001fbc         align      64

                     loc_1fc0:
0000000000001fc0         cmp        qword [rbx+0x10], 0x0                       ; CODE XREF=recurse_tree+19
0000000000001fc5         jne        loc_1f91

0000000000001fc7         add        rsp, 0x8
0000000000001fcb         mov        rdi, rbx
0000000000001fce         mov        rax, rbp
0000000000001fd1         pop        rbx
0000000000001fd2         pop        rbp
0000000000001fd3         jmp        rax
                        ; endp
0000000000001fd5         align      32                                          ; End of unwind block (FDE at 0x67e0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     new_item:
0000000000001fe0         push       rbp                                         ; Begin of unwind block (FDE at 0x6820), CODE XREF=main+238, main+495, main+898, main+1467
0000000000001fe1         push       rbx
0000000000001fe2         mov        rbp, rdi
0000000000001fe5         mov        edi, 0x38
0000000000001fea         sub        rsp, 0x8
0000000000001fee         call       xmalloc                                     ; xmalloc
0000000000001ff3         test       rbp, rbp
0000000000001ff6         mov        rbx, rax
0000000000001ff9         je         loc_2006

0000000000001ffb         mov        rdi, rbp
0000000000001ffe         call       xstrdup                                     ; xstrdup
0000000000002003         mov        rbp, rax

                     loc_2006:
0000000000002006         mov        qword [rbx], rbp                            ; CODE XREF=new_item+25
0000000000002009         mov        qword [rbx+0x10], 0x0
0000000000002011         mov        rax, rbx
0000000000002014         mov        qword [rbx+8], 0x0
000000000000201c         mov        dword [rbx+0x18], 0x0
0000000000002023         mov        qword [rbx+0x20], 0x0
000000000000202b         mov        qword [rbx+0x28], 0x0
0000000000002033         mov        qword [rbx+0x30], 0x0
000000000000203b         add        rsp, 0x8
000000000000203f         pop        rbx
0000000000002040         pop        rbp
0000000000002041         ret
                        ; endp
0000000000002042         align      16                                          ; End of unwind block (FDE at 0x6820)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     scan_zeros:
0000000000002050         cmp        qword [rdi+0x20], 0x0                       ; Begin of unwind block (FDE at 0x6848), DATA XREF=main+989
0000000000002055         jne        loc_2079

0000000000002057         cmp        qword [rdi], 0x0
000000000000205b         je         loc_2079

000000000000205d         cmp        qword [head], 0x0                           ; head
0000000000002065         je         loc_2080

0000000000002067         mov        rax, qword [zeros]                          ; zeros
000000000000206e         mov        qword [rax+0x28], rdi

                     loc_2072:
0000000000002072         mov        qword [zeros], rdi                          ; zeros, CODE XREF=scan_zeros+55

                     loc_2079:
0000000000002079         xor        eax, eax                                    ; CODE XREF=scan_zeros+5, scan_zeros+11
000000000000207b         ret
                        ; endp
000000000000207c         align      128

                     loc_2080:
0000000000002080         mov        qword [head], rdi                           ; head, CODE XREF=scan_zeros+21
0000000000002087         jmp        loc_2072
0000000000002089         align      16                                          ; End of unwind block (FDE at 0x6848)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     detect_loop:
0000000000002090         xor        eax, eax                                    ; Begin of unwind block (FDE at 0x685c), DATA XREF=main+1305
0000000000002092         cmp        qword [rdi+0x20], 0x0
0000000000002097         je         loc_20e8

0000000000002099         push       r13
000000000000209b         push       r12
000000000000209d         push       rbp
000000000000209e         push       rbx
000000000000209f         mov        rbx, rdi
00000000000020a2         sub        rsp, 0x8
00000000000020a6         mov        rdx, qword [loop]                           ; loop
00000000000020ad         test       rdx, rdx
00000000000020b0         je         loc_20f0

00000000000020b2         mov        rcx, qword [rdi+0x30]
00000000000020b6         test       rcx, rcx
00000000000020b9         je         loc_20d9

00000000000020bb         cmp        rdx, qword [rcx]
00000000000020be         jne        loc_20d0

00000000000020c0         jmp        loc_21b8
00000000000020c5         align      8

                     loc_20c8:
00000000000020c8         cmp        rdx, qword [rax]                            ; CODE XREF=detect_loop+71
00000000000020cb         je         loc_2108

00000000000020cd         mov        rcx, rax

                     loc_20d0:
00000000000020d0         mov        rax, qword [rcx+8]                          ; CODE XREF=detect_loop+46
00000000000020d4         test       rax, rax
00000000000020d7         jne        loc_20c8

                     loc_20d9:
00000000000020d9         add        rsp, 0x8                                    ; CODE XREF=detect_loop+41, detect_loop+285
00000000000020dd         pop        rbx
00000000000020de         pop        rbp
00000000000020df         pop        r12
00000000000020e1         pop        r13
00000000000020e3         ret
                        ; endp
00000000000020e4         align      8

                     loc_20e8:
00000000000020e8         ret                                                    ; CODE XREF=detect_loop+7
                        ; endp
00000000000020ea         align      16

                     loc_20f0:
00000000000020f0         mov        qword [loop], rdi                           ; loop, CODE XREF=detect_loop+32
00000000000020f7         add        rsp, 0x8
00000000000020fb         pop        rbx
00000000000020fc         pop        rbp
00000000000020fd         pop        r12
00000000000020ff         pop        r13
0000000000002101         ret
                        ; endp
0000000000002102         align      8

                     loc_2108:
0000000000002108         lea        rbp, qword [rcx+8]                          ; CODE XREF=detect_loop+59

                     loc_210c:
000000000000210c         cmp        qword [rbx+0x28], 0x0                       ; CODE XREF=detect_loop+300
0000000000002111         je         loc_21a0

0000000000002117         lea        r13, qword [aSS+4]                          ; 0x5bd7
000000000000211e         jmp        loc_2137

                     loc_2120:
0000000000002120         test       r12, r12                                    ; CODE XREF=detect_loop+198
0000000000002123         mov        qword [rax+0x28], 0x0
000000000000212b         mov        qword [loop], r12                           ; loop
0000000000002132         mov        rdx, r12
0000000000002135         je         loc_218f

                     loc_2137:
0000000000002137         mov        rcx, qword [rdx]                            ; CODE XREF=detect_loop+142
000000000000213a         xor        eax, eax
000000000000213c         mov        r12, qword [rdx+0x28]
0000000000002140         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002142         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002144         mov        rdx, r13                                    ; argument "__format" for method j_error
0000000000002147         call       j_error                                     ; error
000000000000214c         mov        rax, qword [loop]                           ; loop
0000000000002153         cmp        rbx, rax
0000000000002156         jne        loc_2120

0000000000002158         mov        rax, qword [rbp]
000000000000215c         mov        rdx, qword [rax]
000000000000215f         mov        rax, qword [rax+8]
0000000000002163         sub        qword [rdx+0x20], 0x1
0000000000002168         mov        qword [rbp], rax
000000000000216c         nop        dword [rax]

                     loc_2170:
0000000000002170         mov        rax, qword [rbx+0x28]                       ; CODE XREF=detect_loop+242
0000000000002174         mov        qword [rbx+0x28], 0x0
000000000000217c         test       rax, rax
000000000000217f         mov        rbx, rax
0000000000002182         jne        loc_2170

0000000000002184         mov        qword [loop], 0x0                           ; loop

                     loc_218f:
000000000000218f         add        rsp, 0x8                                    ; CODE XREF=detect_loop+165
0000000000002193         mov        eax, 0x1
0000000000002198         pop        rbx
0000000000002199         pop        rbp
000000000000219a         pop        r12
000000000000219c         pop        r13
000000000000219e         ret
                        ; endp
000000000000219f         align      32

                     loc_21a0:
00000000000021a0         mov        qword [rbx+0x28], rdx                       ; CODE XREF=detect_loop+129
00000000000021a4         mov        qword [loop], rbx                           ; loop
00000000000021ab         xor        eax, eax
00000000000021ad         jmp        loc_20d9
00000000000021b2         align      8

                     loc_21b8:
00000000000021b8         lea        rbp, qword [rdi+0x30]                       ; CODE XREF=detect_loop+48
00000000000021bc         jmp        loc_210c
00000000000021c1         align      16                                          ; End of unwind block (FDE at 0x685c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
00000000000021d0         push       r13                                         ; Begin of unwind block (FDE at 0x68c8), CODE XREF=main+1852, DATA XREF=main+138
00000000000021d2         push       r12
00000000000021d4         mov        edx, 0x5
00000000000021d9         push       rbp
00000000000021da         push       rbx
00000000000021db         mov        ebp, edi
00000000000021dd         sub        rsp, 0x88
00000000000021e4         mov        rbx, qword [program_name]                   ; program_name
00000000000021eb         mov        rax, qword [fs:0x28]
00000000000021f4         mov        qword [rsp+0xa8+var_30], rax
00000000000021f9         xor        eax, eax
00000000000021fb         test       edi, edi
00000000000021fd         je         loc_222d

00000000000021ff         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
0000000000002206         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002208         call       j_dcgettext                                 ; dcgettext
000000000000220d         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000002214         mov        rdx, rax
0000000000002217         mov        rcx, rbx
000000000000221a         mov        esi, 0x1
000000000000221f         xor        eax, eax
0000000000002221         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_2226:
0000000000002226         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+678
0000000000002228         call       j_exit                                      ; exit
                        ; endp

                     loc_222d:
000000000000222d         lea        rsi, qword [aUsageSOptionFi]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION] [FILE]\\nWrite totally ordered list consistent with the partial ordering in FILE.\\n", CODE XREF=usage+45
0000000000002234         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002236         call       j_dcgettext                                 ; dcgettext
000000000000223b         mov        rdx, rbx
000000000000223e         mov        rsi, rax
0000000000002241         mov        edi, 0x1
0000000000002246         xor        eax, eax
0000000000002248         call       j___printf_chk                              ; __printf_chk
000000000000224d         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002254         lea        rsi, qword [aNwithNoFileOrW]                ; argument "msgid" for method j_dcgettext, "\\nWith no FILE, or when FILE is -, read standard input.\\n"
000000000000225b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002260         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002262         call       j_dcgettext                                 ; dcgettext
0000000000002267         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000226a         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000226d         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002272         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002279         lea        rsi, qword [aExtraOperandS+19]              ; argument "msgid" for method j_dcgettext, 0x5926
0000000000002280         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002285         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002287         call       j_dcgettext                                 ; dcgettext
000000000000228c         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000228f         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002292         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002297         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000229e         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
00000000000022a5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000022aa         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000022ac         call       j_dcgettext                                 ; dcgettext
00000000000022b1         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000022b4         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000022b7         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000022bc         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000022c3         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
00000000000022ca         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000022cf         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000022d1         call       j_dcgettext                                 ; dcgettext
00000000000022d6         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000022d9         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000022dc         lea        rbx, qword [aTsort]                         ; "tsort"
00000000000022e3         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000022e8         lea        rax, qword [aTsort+6]                       ; 0x584a
00000000000022ef         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
00000000000022f6         mov        qword [rsp+0xa8+var_48], 0x0
00000000000022ff         mov        qword [rsp+0xa8+var_40], 0x0
0000000000002308         mov        rdx, rsp
000000000000230b         mov        qword [rsp+0xa8+var_A8], rax
000000000000230f         lea        rax, qword [aTestInvocation]                ; "test invocation"
0000000000002316         mov        qword [rsp+0xa8+var_78], rcx
000000000000231b         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
0000000000002322         mov        qword [rsp+0xa8+var_A0], rax
0000000000002327         lea        rax, qword [aCoreutils]                     ; "coreutils"
000000000000232e         mov        qword [rsp+0xa8+var_68], rcx
0000000000002333         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
000000000000233a         mov        qword [rsp+0xa8+var_98], rax
000000000000233f         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
0000000000002346         mov        qword [rsp+0xa8+var_58], rcx
000000000000234b         mov        qword [rsp+0xa8+var_90], rax
0000000000002350         lea        rax, qword [aSha224sum]                     ; "sha224sum"
0000000000002357         mov        qword [rsp+0xa8+var_88], rax
000000000000235c         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
0000000000002363         mov        qword [rsp+0xa8+var_80], rax
0000000000002368         mov        qword [rsp+0xa8+var_70], rax
000000000000236d         mov        qword [rsp+0xa8+var_60], rax
0000000000002372         mov        qword [rsp+0xa8+var_50], rax
0000000000002377         nop        word [rax+rax]

                     loc_2380:
0000000000002380         add        rdx, 0x10                                   ; CODE XREF=usage+461
0000000000002384         mov        rdi, qword [rdx]
0000000000002387         test       rdi, rdi
000000000000238a         je         loc_239f

000000000000238c         mov        ecx, 0x6
0000000000002391         mov        rsi, rbx
0000000000002394         rep  cmpsb byte [rsi], byte [rdi]
0000000000002396         seta       al
0000000000002399         sbb        al, 0x0
000000000000239b         test       al, al
000000000000239d         jne        loc_2380

                     loc_239f:
000000000000239f         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+442
00000000000023a3         xor        edi, edi
00000000000023a5         mov        edx, 0x5
00000000000023aa         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
00000000000023b1         test       r12, r12
00000000000023b4         je         loc_247b

00000000000023ba         call       j_dcgettext                                 ; dcgettext
00000000000023bf         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000023c6         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x58c0
00000000000023cd         mov        rsi, rax
00000000000023d0         mov        edi, 0x1
00000000000023d5         xor        eax, eax
00000000000023d7         call       j___printf_chk                              ; __printf_chk
00000000000023dc         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
00000000000023de         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
00000000000023e3         call       j_setlocale                                 ; setlocale
00000000000023e8         test       rax, rax
00000000000023eb         je         loc_2409

00000000000023ed         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x58ce
00000000000023f4         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
00000000000023f9         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
00000000000023fc         call       j_strncmp                                   ; strncmp
0000000000002401         test       eax, eax
0000000000002403         jne        loc_2510

                     loc_2409:
0000000000002409         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+539, usage+869
0000000000002410         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002412         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002417         call       j_dcgettext                                 ; dcgettext
000000000000241c         lea        rcx, qword [aTsort]                         ; "tsort"
0000000000002423         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
000000000000242a         mov        rsi, rax
000000000000242d         mov        edi, 0x1
0000000000002432         xor        eax, eax
0000000000002434         call       j___printf_chk                              ; __printf_chk
0000000000002439         cmp        r12, rbx
000000000000243c         lea        rcx, qword [aMulticallInvoc+10]             ; 0x5866
0000000000002443         lea        rbx, qword [aExtraOperandS+20]              ; 0x5927
000000000000244a         cmove      rbx, rcx

                     loc_244e:
000000000000244e         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+820
0000000000002455         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002457         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000245c         call       j_dcgettext                                 ; dcgettext
0000000000002461         mov        rcx, rbx
0000000000002464         mov        rsi, rax
0000000000002467         mov        rdx, r12
000000000000246a         mov        edi, 0x1
000000000000246f         xor        eax, eax
0000000000002471         call       j___printf_chk                              ; __printf_chk
0000000000002476         jmp        loc_2226

                     loc_247b:
000000000000247b         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+484
0000000000002480         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002487         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x58c0
000000000000248e         mov        rsi, rax
0000000000002491         mov        edi, 0x1
0000000000002496         xor        eax, eax
0000000000002498         call       j___printf_chk                              ; __printf_chk
000000000000249d         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000249f         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
00000000000024a4         call       j_setlocale                                 ; setlocale
00000000000024a9         test       rax, rax
00000000000024ac         je         loc_24c6

00000000000024ae         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x58ce
00000000000024b5         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
00000000000024ba         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
00000000000024bd         call       j_strncmp                                   ; strncmp
00000000000024c2         test       eax, eax
00000000000024c4         jne        loc_2509

                     loc_24c6:
00000000000024c6         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+732
00000000000024cd         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000024d2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000024d4         lea        r12, qword [aTsort]                         ; "tsort"
00000000000024db         lea        rbx, qword [aMulticallInvoc+10]             ; 0x5866
00000000000024e2         call       j_dcgettext                                 ; dcgettext
00000000000024e7         lea        rcx, qword [aTsort]                         ; "tsort"
00000000000024ee         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000024f5         mov        rsi, rax
00000000000024f8         mov        edi, 0x1
00000000000024fd         xor        eax, eax
00000000000024ff         call       j___printf_chk                              ; __printf_chk
0000000000002504         jmp        loc_244e

                     loc_2509:
0000000000002509         lea        r12, qword [aTsort]                         ; "tsort", CODE XREF=usage+756

                     loc_2510:
0000000000002510         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+563
0000000000002517         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
000000000000251e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002520         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002525         call       j_dcgettext                                 ; dcgettext
000000000000252a         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
000000000000252d         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002530         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002535         jmp        loc_2409
000000000000253a         align      64                                          ; End of unwind block (FDE at 0x68c8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
0000000000002540         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0x695c), file_name
0000000000002547         ret
                        ; endp
0000000000002548         align      16                                          ; End of unwind block (FDE at 0x695c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
0000000000002550         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x6970), ignore_EPIPE
0000000000002557         ret
                        ; endp
0000000000002558         align      32                                          ; End of unwind block (FDE at 0x6970)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
0000000000002560         push       rbp                                         ; Begin of unwind block (FDE at 0x6984), DATA XREF=main+91
0000000000002561         push       rbx
0000000000002562         sub        rsp, 0x8
0000000000002566         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000256d         call       close_stream                                ; close_stream
0000000000002572         test       eax, eax
0000000000002574         je         loc_258c

0000000000002576         call       j___errno_location                          ; __errno_location
000000000000257b         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
0000000000002582         mov        rbx, rax
0000000000002585         je         loc_25a3

0000000000002587         cmp        dword [rax], 0x20
000000000000258a         jne        loc_25a3

                     loc_258c:
000000000000258c         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
0000000000002593         call       close_stream                                ; close_stream
0000000000002598         test       eax, eax
000000000000259a         jne        loc_25e2

000000000000259c         add        rsp, 0x8
00000000000025a0         pop        rbx
00000000000025a1         pop        rbp
00000000000025a2         ret
                        ; endp

                     loc_25a3:
00000000000025a3         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
00000000000025aa         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000025ac         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000025b1         call       j_dcgettext                                 ; dcgettext
00000000000025b6         mov        rdi, qword [file_name]                      ; file_name
00000000000025bd         mov        rbp, rax
00000000000025c0         test       rdi, rdi
00000000000025c3         je         loc_25ed

00000000000025c5         call       quotearg_colon                              ; quotearg_colon
00000000000025ca         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
00000000000025cc         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
00000000000025d3         mov        rcx, rax
00000000000025d6         mov        r8, rbp
00000000000025d9         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000025db         xor        eax, eax
00000000000025dd         call       j_error                                     ; error

                     loc_25e2:
00000000000025e2         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
00000000000025e8         call       j__exit                                     ; _exit
                        ; endp

                     loc_25ed:
00000000000025ed         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
00000000000025ef         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5bd7
00000000000025f6         mov        rcx, rax
00000000000025f9         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000025fb         xor        eax, eax
00000000000025fd         call       j_error                                     ; error
0000000000002602         jmp        loc_25e2
0000000000002604         align      16                                          ; End of unwind block (FDE at 0x6984)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fdadvise:
0000000000002610         jmp        j_posix_fadvise                             ; posix_fadvise, Begin of unwind block (FDE at 0x69b4)
                        ; endp
0000000000002615         align      32                                          ; End of unwind block (FDE at 0x69b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fadvise:
0000000000002620         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x69c8), CODE XREF=main+293
0000000000002623         je         loc_2640

0000000000002625         push       rbx
0000000000002626         mov        ebx, esi
0000000000002628         call       j_fileno                                    ; fileno
000000000000262d         mov        ecx, ebx                                    ; argument "__advise" for method j_posix_fadvise
000000000000262f         xor        edx, edx                                    ; argument "__len" for method j_posix_fadvise
0000000000002631         xor        esi, esi                                    ; argument "__offset" for method j_posix_fadvise
0000000000002633         pop        rbx
0000000000002634         mov        edi, eax                                    ; argument "__fd" for method j_posix_fadvise
0000000000002636         jmp        j_posix_fadvise                             ; posix_fadvise
                        ; endp
000000000000263b         align      64

                     loc_2640:
0000000000002640         ret                                                    ; CODE XREF=fadvise+3
                        ; endp
0000000000002642         align      16                                          ; End of unwind block (FDE at 0x69c8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     protect_fd:
0000000000002650         push       rbp                                         ; Begin of unwind block (FDE at 0x69e4), CODE XREF=freopen_safer+131, freopen_safer+161, freopen_safer+277
0000000000002651         push       rbx
0000000000002652         mov        ebp, edi
0000000000002654         lea        rdi, qword [aDevnull]                       ; argument "__file" for method j_open, "/dev/null"
000000000000265b         xor        esi, esi                                    ; argument "__oflag" for method j_open
000000000000265d         xor        eax, eax
000000000000265f         sub        rsp, 0x8
0000000000002663         mov        ebx, 0x1
0000000000002668         call       j_open                                      ; open
000000000000266d         cmp        ebp, eax
000000000000266f         je         loc_2689

0000000000002671         xor        ebx, ebx
0000000000002673         test       eax, eax
0000000000002675         js         loc_2689

0000000000002677         mov        edi, eax                                    ; argument "__fd" for method j_close
0000000000002679         call       j_close                                     ; close
000000000000267e         call       j___errno_location                          ; __errno_location
0000000000002683         mov        dword [rax], 0x9

                     loc_2689:
0000000000002689         add        rsp, 0x8                                    ; CODE XREF=protect_fd+31, protect_fd+37
000000000000268d         mov        eax, ebx
000000000000268f         pop        rbx
0000000000002690         pop        rbp
0000000000002691         ret
                        ; endp
0000000000002692         align      32                                          ; End of unwind block (FDE at 0x69e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     freopen_safer:
00000000000026a0         push       r15                                         ; Begin of unwind block (FDE at 0x6a0c), CODE XREF=main+267
00000000000026a2         push       r14
00000000000026a4         mov        r15, rsi
00000000000026a7         push       r13
00000000000026a9         push       r12
00000000000026ab         mov        r12, rdx
00000000000026ae         push       rbp
00000000000026af         push       rbx
00000000000026b0         sub        rsp, 0x18
00000000000026b4         mov        qword [rsp+0x48+var_40], rdi
00000000000026b9         mov        rdi, rdx                                    ; argument "__stream" for method j_fileno
00000000000026bc         call       j_fileno                                    ; fileno
00000000000026c1         mov        ebx, eax
00000000000026c3         call       j___errno_location                          ; __errno_location
00000000000026c8         cmp        ebx, 0x1
00000000000026cb         mov        r14, rax
00000000000026ce         je         loc_2830

00000000000026d4         cmp        ebx, 0x2
00000000000026d7         je         loc_2820

00000000000026dd         test       ebx, ebx
00000000000026df         je         loc_2798

00000000000026e5         mov        esi, 0x2                                    ; argument "__fd2" for method j_dup2
00000000000026ea         mov        edi, 0x2                                    ; argument "__fd" for method j_dup2
00000000000026ef         call       j_dup2                                      ; dup2
00000000000026f4         cmp        eax, 0x2
00000000000026f7         setne      bl

                     loc_26fa:
00000000000026fa         mov        esi, 0x1                                    ; argument "__fd2" for method j_dup2, CODE XREF=freopen_safer+386
00000000000026ff         mov        edi, 0x1                                    ; argument "__fd" for method j_dup2
0000000000002704         call       j_dup2                                      ; dup2
0000000000002709         cmp        eax, 0x1
000000000000270c         setne      bpl

                     loc_2710:
0000000000002710         xor        esi, esi                                    ; argument "__fd2" for method j_dup2, CODE XREF=freopen_safer+404
0000000000002712         xor        edi, edi                                    ; argument "__fd" for method j_dup2
0000000000002714         call       j_dup2                                      ; dup2
0000000000002719         test       eax, eax
000000000000271b         je         loc_27a8

0000000000002721         xor        edi, edi
0000000000002723         call       protect_fd                                  ; protect_fd
0000000000002728         test       al, al
000000000000272a         mov        r13d, eax
000000000000272d         je         loc_2840

0000000000002733         test       bpl, bpl
0000000000002736         jne        loc_27b0

                     loc_2738:
0000000000002738         test       bl, bl                                      ; CODE XREF=freopen_safer+270, freopen_safer+286
000000000000273a         je         loc_2750

000000000000273c         mov        edi, 0x2
0000000000002741         call       protect_fd                                  ; protect_fd
0000000000002746         test       al, al
0000000000002748         mov        ebx, eax
000000000000274a         je         loc_2800

                     loc_2750:
0000000000002750         mov        rdi, qword [rsp+0x48+var_40]                ; argument "__filename" for method j_freopen, CODE XREF=freopen_safer+154, freopen_safer+255
0000000000002755         mov        rdx, r12                                    ; argument "__stream" for method j_freopen
0000000000002758         mov        rsi, r15                                    ; argument "__modes" for method j_freopen
000000000000275b         call       j_freopen                                   ; freopen
0000000000002760         mov        r12, rax

                     loc_2763:
0000000000002763         test       bl, bl                                      ; CODE XREF=freopen_safer+425
0000000000002765         mov        r15d, dword [r14]
0000000000002768         jne        loc_2810

                     loc_276e:
000000000000276e         test       bpl, bpl                                    ; CODE XREF=freopen_safer+378
0000000000002771         jne        loc_27e0

0000000000002773         test       r13b, r13b
0000000000002776         jne        loc_27ef

                     loc_2778:
0000000000002778         test       r12, r12                                    ; CODE XREF=freopen_safer+333, freopen_safer+342
000000000000277b         jne        loc_2780

000000000000277d         mov        dword [r14], r15d

                     loc_2780:
0000000000002780         add        rsp, 0x18                                   ; CODE XREF=freopen_safer+219
0000000000002784         mov        rax, r12
0000000000002787         pop        rbx
0000000000002788         pop        rbp
0000000000002789         pop        r12
000000000000278b         pop        r13
000000000000278d         pop        r14
000000000000278f         pop        r15
0000000000002791         ret
                        ; endp
0000000000002792         align      8

                     loc_2798:
0000000000002798         xor        ebx, ebx                                    ; CODE XREF=freopen_safer+63
000000000000279a         xor        ebp, ebp
000000000000279c         xor        r13d, r13d
000000000000279f         jmp        loc_2750
00000000000027a1         align      8

                     loc_27a8:
00000000000027a8         xor        r13d, r13d                                  ; CODE XREF=freopen_safer+123
00000000000027ab         test       bpl, bpl
00000000000027ae         je         loc_2738

                     loc_27b0:
00000000000027b0         mov        edi, 0x1                                    ; CODE XREF=freopen_safer+150
00000000000027b5         call       protect_fd                                  ; protect_fd
00000000000027ba         test       al, al
00000000000027bc         mov        ebp, eax
00000000000027be         jne        loc_2738

00000000000027c4         xor        r12d, r12d
00000000000027c7         test       bl, bl
00000000000027c9         mov        r15d, dword [r14]
00000000000027cc         je         loc_27e0

00000000000027ce         mov        edi, 0x2                                    ; argument "__fd" for method j_close
00000000000027d3         call       j_close                                     ; close
00000000000027d8         nop        dword [rax+rax]

                     loc_27e0:
00000000000027e0         mov        edi, 0x1                                    ; argument "__fd" for method j_close, CODE XREF=freopen_safer+209, freopen_safer+300
00000000000027e5         call       j_close                                     ; close
00000000000027ea         test       r13b, r13b
00000000000027ed         je         loc_2778

                     loc_27ef:
00000000000027ef         xor        edi, edi                                    ; argument "__fd" for method j_close, CODE XREF=freopen_safer+214
00000000000027f1         call       j_close                                     ; close
00000000000027f6         jmp        loc_2778
00000000000027f8         align      2048

                     loc_2800:
0000000000002800         mov        r15d, dword [r14]                           ; CODE XREF=freopen_safer+170
0000000000002803         xor        r12d, r12d
0000000000002806         nop        word [cs:rax+rax]

                     loc_2810:
0000000000002810         mov        edi, 0x2                                    ; argument "__fd" for method j_close, CODE XREF=freopen_safer+200
0000000000002815         call       j_close                                     ; close
000000000000281a         jmp        loc_276e
000000000000281f         align      32

                     loc_2820:
0000000000002820         xor        ebx, ebx                                    ; CODE XREF=freopen_safer+55
0000000000002822         jmp        loc_26fa
0000000000002827         align      16

                     loc_2830:
0000000000002830         xor        ebx, ebx                                    ; CODE XREF=freopen_safer+46
0000000000002832         xor        ebp, ebp
0000000000002834         jmp        loc_2710
0000000000002839         align      64

                     loc_2840:
0000000000002840         mov        r13d, 0x1                                   ; CODE XREF=freopen_safer+141
0000000000002846         xor        r12d, r12d
0000000000002849         jmp        loc_2763
000000000000284e         align      16                                          ; End of unwind block (FDE at 0x6a0c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_38: -56
        ;    var_48: -72
        ;    var_58: -88
        ;    var_68: -104
        ;    var_78: -120
        ;    var_88: -136
        ;    var_98: -152
        ;    var_A8: -168
        ;    var_D8: int8_t, -216
        ;    var_E0: int64_t, -224
        ;    var_E8: int64_t, -232
        ;    var_F0: int64_t, -240
        ;    var_F4: int32_t, -244
        ;    var_F8: int32_t, -248
        ;    var_100: int64_t, -256


                     parse_long_options:
0000000000002850         push       r13                                         ; Begin of unwind block (FDE at 0x6a5c)
0000000000002852         push       r12
0000000000002854         mov        r13, r8
0000000000002857         push       rbp
0000000000002858         push       rbx
0000000000002859         mov        rbp, rdx
000000000000285c         mov        r12, rcx
000000000000285f         sub        rsp, 0xe8
0000000000002866         test       al, al
0000000000002868         je         loc_28a4

000000000000286a         movaps     xmmword [rsp+0x108+var_A8], xmm0
000000000000286f         movaps     xmmword [rsp+0x108+var_98], xmm1
0000000000002874         movaps     xmmword [rsp+0x108+var_88], xmm2
000000000000287c         movaps     xmmword [rsp+0x108+var_78], xmm3
0000000000002884         movaps     xmmword [rsp+0x108+var_68], xmm4
000000000000288c         movaps     xmmword [rsp+0x108+var_58], xmm5
0000000000002894         movaps     xmmword [rsp+0x108+var_48], xmm6
000000000000289c         movaps     xmmword [rsp+0x108+var_38], xmm7

                     loc_28a4:
00000000000028a4         mov        rax, qword [fs:0x28]                        ; CODE XREF=parse_long_options+24
00000000000028ad         mov        qword [rsp+0x108+var_E0], rax
00000000000028b2         xor        eax, eax
00000000000028b4         cmp        edi, 0x2
00000000000028b7         mov        ebx, dword [opterr@@GLIBC_2.2.5]            ; opterr@@GLIBC_2.2.5
00000000000028bd         mov        dword [opterr@@GLIBC_2.2.5], 0x0            ; opterr@@GLIBC_2.2.5
00000000000028c7         je         loc_2900

                     loc_28c9:
00000000000028c9         mov        rax, qword [rsp+0x108+var_E0]               ; CODE XREF=parse_long_options+206, parse_long_options+221, parse_long_options+309
00000000000028ce         xor        rax, qword [fs:0x28]
00000000000028d7         mov        dword [opterr@@GLIBC_2.2.5], ebx            ; opterr@@GLIBC_2.2.5
00000000000028dd         mov        dword [optind@@GLIBC_2.2.5], 0x0            ; optind@@GLIBC_2.2.5
00000000000028e7         jne        loc_298a

00000000000028ed         add        rsp, 0xe8
00000000000028f4         pop        rbx
00000000000028f5         pop        rbp
00000000000028f6         pop        r12
00000000000028f8         pop        r13
00000000000028fa         ret
                        ; endp
00000000000028fb         align      256

                     loc_2900:
0000000000002900         lea        rcx, qword [long_options]                   ; argument "__longopts" for method j_getopt_long, long_options, CODE XREF=parse_long_options+119
0000000000002907         lea        rdx, qword [aDevnull+10]                    ; argument "__shortopts" for method j_getopt_long, 0x5be4
000000000000290e         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
0000000000002911         mov        qword [rsp+0x108+var_100], r9
0000000000002916         call       j_getopt_long                               ; getopt_long
000000000000291b         cmp        eax, 0xffffffff
000000000000291e         je         loc_28c9

0000000000002920         cmp        eax, 0x68
0000000000002923         mov        r9, qword [rsp+0x108+var_100]
0000000000002928         je         loc_2980

000000000000292a         cmp        eax, 0x76
000000000000292d         jne        loc_28c9

000000000000292f         lea        rax, qword [rsp+0x108+arg_0]
0000000000002937         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000293e         lea        r8, qword [rsp+0x108+var_F8]
0000000000002943         mov        rcx, r13
0000000000002946         mov        rdx, r12
0000000000002949         mov        rsi, rbp
000000000000294c         mov        qword [rsp+0x108+var_F0], rax
0000000000002951         lea        rax, qword [rsp+0x108+var_D8]
0000000000002956         mov        dword [rsp+0x108+var_F8], 0x30
000000000000295e         mov        dword [rsp+0x108+var_F4], 0x30
0000000000002966         mov        qword [rsp+0x108+var_E8], rax
000000000000296b         call       version_etc_va                              ; version_etc_va
0000000000002970         xor        edi, edi                                    ; argument "__status" for method j_exit
0000000000002972         call       j_exit                                      ; exit
                        ; endp
0000000000002977         align      128

                     loc_2980:
0000000000002980         xor        edi, edi                                    ; CODE XREF=parse_long_options+216
0000000000002982         call       r9
0000000000002985         jmp        loc_28c9

                     loc_298a:
000000000000298a         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=parse_long_options+151
                        ; endp
000000000000298f         align      16                                          ; End of unwind block (FDE at 0x6a5c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_38: -56
        ;    var_48: -72
        ;    var_58: -88
        ;    var_68: -104
        ;    var_78: -120
        ;    var_88: -136
        ;    var_98: -152
        ;    var_A8: -168
        ;    var_D8: int8_t, -216
        ;    var_E0: int64_t, -224
        ;    var_E8: int64_t, -232
        ;    var_F0: int64_t, -240
        ;    var_F4: int32_t, -244
        ;    var_F8: int32_t, -248


                     parse_gnu_standard_options_only:
0000000000002990         push       r14                                         ; Begin of unwind block (FDE at 0x6a98), CODE XREF=main+159
0000000000002992         push       r13
0000000000002994         mov        r14, r8
0000000000002997         push       r12
0000000000002999         push       rbp
000000000000299a         mov        r12, rdx
000000000000299d         push       rbx
000000000000299e         mov        r13, rcx
00000000000029a1         sub        rsp, 0xd0
00000000000029a8         test       al, al
00000000000029aa         mov        rbp, qword [rsp+0xf8+arg_0]
00000000000029b2         je         loc_29eb

00000000000029b4         movaps     xmmword [rsp+0xf8+var_A8], xmm0
00000000000029b9         movaps     xmmword [rsp+0xf8+var_98], xmm1
00000000000029be         movaps     xmmword [rsp+0xf8+var_88], xmm2
00000000000029c3         movaps     xmmword [rsp+0xf8+var_78], xmm3
00000000000029cb         movaps     xmmword [rsp+0xf8+var_68], xmm4
00000000000029d3         movaps     xmmword [rsp+0xf8+var_58], xmm5
00000000000029db         movaps     xmmword [rsp+0xf8+var_48], xmm6
00000000000029e3         movaps     xmmword [rsp+0xf8+var_38], xmm7

                     loc_29eb:
00000000000029eb         mov        rax, qword [fs:0x28]                        ; CODE XREF=parse_gnu_standard_options_only+34
00000000000029f4         mov        qword [rsp+0xf8+var_E0], rax
00000000000029f9         xor        eax, eax
00000000000029fb         lea        rdx, qword [aExtraOperandS+20]              ; 0x5927
0000000000002a02         lea        rax, qword [aDevnull+10]                    ; 0x5be4
0000000000002a09         test       r9b, r9b
0000000000002a0c         lea        rcx, qword [long_options]                   ; argument "__longopts" for method j_getopt_long, long_options
0000000000002a13         cmove      rdx, rax                                    ; argument "__shortopts" for method j_getopt_long
0000000000002a17         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
0000000000002a1a         mov        ebx, dword [opterr@@GLIBC_2.2.5]            ; opterr@@GLIBC_2.2.5
0000000000002a20         mov        dword [opterr@@GLIBC_2.2.5], 0x1            ; opterr@@GLIBC_2.2.5
0000000000002a2a         call       j_getopt_long                               ; getopt_long
0000000000002a2f         cmp        eax, 0xffffffff
0000000000002a32         je         loc_2a98

0000000000002a34         cmp        eax, 0x68
0000000000002a37         je         loc_2ac0

0000000000002a3d         cmp        eax, 0x76
0000000000002a40         jne        loc_2a90

0000000000002a42         lea        rax, qword [rsp+0xf8+arg_8]
0000000000002a4a         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002a51         mov        r8, rsp
0000000000002a54         mov        rcx, r14
0000000000002a57         mov        rdx, r13
0000000000002a5a         mov        rsi, r12
0000000000002a5d         mov        qword [rsp+0xf8+var_F0], rax
0000000000002a62         lea        rax, qword [rsp+0xf8+var_D8]
0000000000002a67         mov        dword [rsp+0xf8+var_F8], 0x30
0000000000002a6e         mov        dword [rsp+0xf8+var_F4], 0x30
0000000000002a76         mov        qword [rsp+0xf8+var_E8], rax
0000000000002a7b         call       version_etc_va                              ; version_etc_va
0000000000002a80         xor        edi, edi                                    ; argument "__status" for method j_exit
0000000000002a82         call       j_exit                                      ; exit
                        ; endp
0000000000002a87         align      16

                     loc_2a90:
0000000000002a90         mov        edi, dword [exit_failure]                   ; exit_failure, CODE XREF=parse_gnu_standard_options_only+176
0000000000002a96         call       rbp

                     loc_2a98:
0000000000002a98         mov        rax, qword [rsp+0xf8+var_E0]                ; CODE XREF=parse_gnu_standard_options_only+162, parse_gnu_standard_options_only+308
0000000000002a9d         xor        rax, qword [fs:0x28]
0000000000002aa6         mov        dword [opterr@@GLIBC_2.2.5], ebx            ; opterr@@GLIBC_2.2.5
0000000000002aac         jne        loc_2ac6

0000000000002aae         add        rsp, 0xd0
0000000000002ab5         pop        rbx
0000000000002ab6         pop        rbp
0000000000002ab7         pop        r12
0000000000002ab9         pop        r13
0000000000002abb         pop        r14
0000000000002abd         ret
                        ; endp
0000000000002abe         align      64

                     loc_2ac0:
0000000000002ac0         xor        edi, edi                                    ; CODE XREF=parse_gnu_standard_options_only+167
0000000000002ac2         call       rbp
0000000000002ac4         jmp        loc_2a98

                     loc_2ac6:
0000000000002ac6         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=parse_gnu_standard_options_only+284
                        ; endp
0000000000002acb         align      16                                          ; End of unwind block (FDE at 0x6a98)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000002ad0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x6ae4), CODE XREF=main+38
0000000000002ad3         push       rbx
0000000000002ad4         je         loc_2b4d

0000000000002ad6         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
0000000000002adb         mov        rbx, rdi
0000000000002ade         call       j_strrchr                                   ; strrchr
0000000000002ae3         test       rax, rax
0000000000002ae6         je         loc_2b3d

0000000000002ae8         lea        r8, qword [rax+1]
0000000000002aec         mov        rdx, r8
0000000000002aef         sub        rdx, rbx
0000000000002af2         cmp        rdx, 0x6
0000000000002af6         jle        loc_2b3d

0000000000002af8         lea        rsi, qword [rax-6]
0000000000002afc         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000002b03         mov        ecx, 0x7
0000000000002b08         rep  cmpsb byte [rsi], byte [rdi]
0000000000002b0a         seta       dl
0000000000002b0d         sbb        dl, 0x0
0000000000002b10         test       dl, dl
0000000000002b12         jne        loc_2b3d

0000000000002b14         lea        rdi, qword [aLibs+8]                        ; 0x5c38
0000000000002b1b         mov        ecx, 0x3
0000000000002b20         mov        rsi, r8
0000000000002b23         mov        rbx, r8
0000000000002b26         rep  cmpsb byte [rsi], byte [rdi]
0000000000002b28         seta       dl
0000000000002b2b         sbb        dl, 0x0
0000000000002b2e         test       dl, dl
0000000000002b30         jne        loc_2b3d

0000000000002b32         lea        rbx, qword [rax+4]
0000000000002b36         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_2b3d:
0000000000002b3d         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
0000000000002b44         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
0000000000002b4b         pop        rbx
0000000000002b4c         ret
                        ; endp

                     loc_2b4d:
0000000000002b4d         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
0000000000002b54         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
0000000000002b5b         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
0000000000002b60         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
0000000000002b65         call       j_fwrite                                    ; fwrite
0000000000002b6a         call       j_abort                                     ; abort
                        ; endp
0000000000002b6f         align      16                                          ; End of unwind block (FDE at 0x6ae4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
0000000000002b70         push       rbp                                         ; Begin of unwind block (FDE at 0x6b04), CODE XREF=sub_33a0+2597, sub_33a0+2619
0000000000002b71         push       rbx
0000000000002b72         mov        rbp, rdi
0000000000002b75         mov        ebx, esi
0000000000002b77         sub        rsp, 0x8
0000000000002b7b         call       locale_charset                              ; locale_charset
0000000000002b80         movzx      edx, byte [rax]
0000000000002b83         and        edx, 0xffffffdf
0000000000002b86         cmp        dl, 0x55
0000000000002b89         je         loc_2c00

0000000000002b8b         cmp        dl, 0x47
0000000000002b8e         je         loc_2bb0

                     loc_2b90:
0000000000002b90         lea        rax, qword [aLibs+27]                       ; 0x5c4b, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
0000000000002b97         lea        rdx, qword [aLibs+29]                       ; 0x5c4d
0000000000002b9e         cmp        ebx, 0x9
0000000000002ba1         cmovne     rax, rdx
0000000000002ba5         add        rsp, 0x8
0000000000002ba9         pop        rbx
0000000000002baa         pop        rbp
0000000000002bab         ret
                        ; endp
0000000000002bac         align      16

                     loc_2bb0:
0000000000002bb0         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
0000000000002bb4         and        edx, 0xffffffdf
0000000000002bb7         cmp        dl, 0x42
0000000000002bba         jne        loc_2b90

0000000000002bbc         cmp        byte [rax+2], 0x31
0000000000002bc0         jne        loc_2b90

0000000000002bc2         cmp        byte [rax+3], 0x38
0000000000002bc6         jne        loc_2b90

0000000000002bc8         cmp        byte [rax+4], 0x30
0000000000002bcc         jne        loc_2b90

0000000000002bce         cmp        byte [rax+5], 0x33
0000000000002bd2         jne        loc_2b90

0000000000002bd4         cmp        byte [rax+6], 0x30
0000000000002bd8         jne        loc_2b90

0000000000002bda         cmp        byte [rax+7], 0x0
0000000000002bde         jne        loc_2b90

0000000000002be0         cmp        byte [rbp], 0x60
0000000000002be4         lea        rax, qword [aLibs+20]                       ; 0x5c44
0000000000002beb         lea        rdx, qword [aLibs+24]                       ; 0x5c48
0000000000002bf2         cmovne     rax, rdx
0000000000002bf6         add        rsp, 0x8
0000000000002bfa         pop        rbx
0000000000002bfb         pop        rbp
0000000000002bfc         ret
                        ; endp
0000000000002bfd         align      1024

                     loc_2c00:
0000000000002c00         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
0000000000002c04         and        edx, 0xffffffdf
0000000000002c07         cmp        dl, 0x54
0000000000002c0a         jne        loc_2b90

0000000000002c0c         movzx      edx, byte [rax+2]
0000000000002c10         and        edx, 0xffffffdf
0000000000002c13         cmp        dl, 0x46
0000000000002c16         jne        loc_2b90

0000000000002c1c         cmp        byte [rax+3], 0x2d
0000000000002c20         jne        loc_2b90

0000000000002c26         cmp        byte [rax+4], 0x38
0000000000002c2a         jne        loc_2b90

0000000000002c30         cmp        byte [rax+5], 0x0
0000000000002c34         jne        loc_2b90

0000000000002c3a         cmp        byte [rbp], 0x60
0000000000002c3e         lea        rax, qword [aLibs+12]                       ; 0x5c3c
0000000000002c45         lea        rdx, qword [aLibs+16]                       ; 0x5c40
0000000000002c4c         cmovne     rax, rdx
0000000000002c50         add        rsp, 0x8
0000000000002c54         pop        rbx
0000000000002c55         pop        rbp
0000000000002c56         ret
                        ; endp
0000000000002c57         align      32                                          ; End of unwind block (FDE at 0x6b04)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
0000000000002c60         push       r15                                         ; Begin of unwind block (FDE at 0x6b48), CODE XREF=sub_33a0+1165, sub_33a0+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
0000000000002c62         push       r14
0000000000002c64         mov        r15d, r8d
0000000000002c67         push       r13
0000000000002c69         push       r12
0000000000002c6b         mov        r14, rdi
0000000000002c6e         push       rbp
0000000000002c6f         push       rbx
0000000000002c70         mov        ebx, r9d
0000000000002c73         mov        r13, rsi
0000000000002c76         mov        rbp, rcx
0000000000002c79         and        ebx, 0x2
0000000000002c7c         sub        rsp, 0xb8
0000000000002c83         mov        rax, qword [rsp+0xe8+arg_0]
0000000000002c8b         mov        qword [rsp+0xe8+var_D8], rdx
0000000000002c90         mov        dword [rsp+0xe8+var_E0], r8d
0000000000002c95         mov        dword [rsp+0xe8+var_70], r9d
0000000000002c9a         mov        qword [rsp+0xe8+var_C8], rax
0000000000002c9f         mov        rax, qword [rsp+0xe8+arg_8]
0000000000002ca7         mov        qword [rsp+0xe8+var_80], rax
0000000000002cac         mov        rax, qword [rsp+0xe8+arg_10]
0000000000002cb4         mov        qword [rsp+0xe8+var_88], rax
0000000000002cb9         mov        rax, qword [fs:0x28]
0000000000002cc2         mov        qword [rsp+0xe8+var_40], rax
0000000000002cca         xor        eax, eax
0000000000002ccc         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000002cd1         cmp        r15d, 0xa
0000000000002cd5         mov        qword [rsp+0xe8+var_90], rax
0000000000002cda         ja         loc_3e8f

0000000000002ce0         lea        rcx, qword [switch_table_5ca0]              ; switch_table_5ca0
0000000000002ce7         mov        edx, r15d
0000000000002cea         movsxd     rax, dword [rcx+rdx*4]
0000000000002cee         add        rax, rcx
0000000000002cf1         jmp        rax                                         ; switch statement using table at 0x5ca0, with 11 cases, 0x2cf3,0x38c4,0x3920,0x3975,0x39ba,0x39f4,0x3a9a,0x3ad4,0x3cc8

                     loc_2cf3:
0000000000002cf3         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_33a0+1318
0000000000002cf8         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000002cfd         xor        r12d, r12d
0000000000002d00         mov        qword [rsp+0xe8+var_98], 0x0
0000000000002d09         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000002d0e         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_2d13:
0000000000002d13         lea        rax, qword [aLibs+29]                       ; 0x5c4d, CODE XREF=sub_33a0+1876
0000000000002d1a         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000002d23         xor        r15d, r15d
0000000000002d26         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000002d2e         mov        qword [rsp+0xe8+var_A0], rax

                     loc_2d33:
0000000000002d33         xor        r11d, r11d                                  ; CODE XREF=sub_33a0+180, sub_33a0+1400, sub_33a0+1488, sub_33a0+1557, sub_33a0+1615, sub_33a0+1781, sub_33a0+1839, sub_33a0+2408, sub_33a0+2485
0000000000002d36         mov        rax, rbp
0000000000002d39         mov        r8d, r12d
0000000000002d3c         mov        rbp, r11
0000000000002d3f         mov        r11, rax
0000000000002d42         nop        word [rax+rax]

                     loc_2d48:
0000000000002d48         cmp        r11, rbp                                    ; CODE XREF=sub_2e50+194
0000000000002d4b         setne      r12b
0000000000002d4f         cmp        r11, 0xffffffffffffffff
0000000000002d53         jne        loc_2d62

0000000000002d55         mov        rax, qword [rsp+0xe8+var_D8]
0000000000002d5a         cmp        byte [rax+rbp], 0x0
0000000000002d5e         setne      r12b

                     loc_2d62:
0000000000002d62         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
0000000000002d65         je         loc_33c0

0000000000002d6b         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000002d70         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000002d75         lea        r9, qword [rdi+rbp]
0000000000002d79         setne      al
0000000000002d7c         and        al, byte [rsp+0xe8+var_DB]
0000000000002d80         mov        r10d, eax
0000000000002d83         je         loc_2e30

0000000000002d89         mov        rax, qword [rsp+0xe8+var_D0]
0000000000002d8e         test       rax, rax
0000000000002d91         je         loc_31c0

0000000000002d97         cmp        r11, 0xffffffffffffffff
0000000000002d9b         lea        rbx, qword [rbp+rax]
0000000000002da0         jne        loc_2dd0

0000000000002da2         cmp        rax, 0x1
0000000000002da6         jbe        loc_2dd0

0000000000002da8         mov        byte [rsp+0xe8+var_B0], r8b
0000000000002dad         mov        byte [rsp+0xe8+var_B8], r10b
0000000000002db2         mov        qword [rsp+0xe8+var_C0], r9
0000000000002db7         call       j_strlen                                    ; strlen
0000000000002dbc         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000002dc2         movzx      r10d, byte [rsp+0xe8+var_B8]
0000000000002dc8         mov        r11, rax
0000000000002dcb         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_2dd0:
0000000000002dd0         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
0000000000002dd3         mov        byte [rsp+0xe8+var_C0], r10b
0000000000002dd8         ja         loc_3390

0000000000002dde         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
0000000000002de3         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
0000000000002de8         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
0000000000002deb         mov        qword [rsp+0xe8+var_A8], r11
0000000000002df0         mov        byte [rsp+0xe8+var_B0], r8b
0000000000002df5         mov        qword [rsp+0xe8+var_B8], r9
0000000000002dfa         call       j_memcmp                                    ; memcmp
0000000000002dff         test       eax, eax
0000000000002e01         mov        r9, qword [rsp+0xe8+var_B8]
0000000000002e06         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000002e0c         mov        r11, qword [rsp+0xe8+var_A8]
0000000000002e11         jne        loc_3390

0000000000002e17         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000002e1c         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000002e22         jne        loc_3da5

0000000000002e28         nop        dword [rax+rax]

                     loc_2e30:
0000000000002e30         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_3380+19
0000000000002e34         cmp        bl, 0x7e
0000000000002e37         ja         loc_3158

0000000000002e3d         lea        rcx, qword [switch_table_5ca0+44]           ; 0x5ccc
0000000000002e44         movzx      edx, bl
0000000000002e47         movsxd     rax, dword [rcx+rdx*4]
0000000000002e4b         add        rax, rcx
0000000000002e4e         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_2e50:
0000000000002e50         xor        r10d, r10d
0000000000002e53         cmp        r11, 0x1
0000000000002e57         setne      al
0000000000002e5a         cmp        r11, 0xffffffffffffffff
0000000000002e5e         jne        loc_2e6c

0000000000002e60         mov        rax, qword [rsp+arg_8]
0000000000002e65         cmp        byte [rax+1], 0x0
0000000000002e69         setne      al

                     loc_2e6c:
0000000000002e6c         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_2e50+14
0000000000002e71         sete       dl
0000000000002e74         test       al, al
0000000000002e76         je         loc_30c8

                     loc_2e7c:
0000000000002e7c         xor        r12d, r12d                                  ; CODE XREF=sub_30c0+11
0000000000002e7f         xor        eax, eax
0000000000002e81         nop        dword [rax]
                        ; endp

                     loc_2e88:
0000000000002e88         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_3070+50, sub_3140+119
0000000000002e8d         jne        loc_2fa2

0000000000002e93         test       dl, dl
0000000000002e95         jne        loc_2fa2

                     loc_2e9b:
0000000000002e9b         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_2f50+87
0000000000002ea0         test       rsi, rsi
0000000000002ea3         je         loc_2eb9

0000000000002ea5         mov        edx, ebx
0000000000002ea7         shr        dl, 0x5
0000000000002eaa         movzx      edx, dl
0000000000002ead         mov        edx, dword [rsi+rdx*4]
0000000000002eb0         bt         edx, ebx
0000000000002eb3         jb         loc_3003

                     loc_2eb9:
0000000000002eb9         test       r10b, r10b                                  ; CODE XREF=sub_2e50+83, sub_2f50+93
0000000000002ebc         jne        loc_3003

0000000000002ec2         xor        eax, 0x1
0000000000002ec5         add        rbp, 0x1
0000000000002ec9         and        eax, r8d

                     loc_2ecc:
0000000000002ecc         test       al, al                                      ; CODE XREF=sub_33a0+936
0000000000002ece         je         loc_2ef0

0000000000002ed0         cmp        r13, r15
0000000000002ed3         jbe        loc_2eda

0000000000002ed5         mov        byte [r14+r15], 0x27

                     loc_2eda:
0000000000002eda         lea        rax, qword [r15+1]                          ; CODE XREF=sub_2e50+131
0000000000002ede         cmp        r13, rax
0000000000002ee1         jbe        loc_2ee9

0000000000002ee3         mov        byte [r14+r15+1], 0x27

                     loc_2ee9:
0000000000002ee9         add        r15, 0x2                                    ; CODE XREF=sub_2e50+145
0000000000002eed         xor        r8d, r8d

                     loc_2ef0:
0000000000002ef0         cmp        r15, r13                                    ; CODE XREF=sub_2e50+126, sub_2f50+275, sub_33a0+869
0000000000002ef3         jae        loc_2ef9

0000000000002ef5         mov        byte [r14+r15], bl

                     loc_2ef9:
0000000000002ef9         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_2e50+163
0000000000002efe         add        r15, 0x1
0000000000002f02         mov        eax, 0x0
0000000000002f07         test       r12b, r12b
0000000000002f0a         cmove      edi, eax
0000000000002f0d         mov        byte [rsp+0xe8+var_DA], dil
0000000000002f12         jmp        loc_2d48
0000000000002f17         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_2f20:
0000000000002f20         xor        r10d, r10d
0000000000002f23         mov        eax, dword [rsp+arg_0]
0000000000002f27         cmp        eax, 0x2
0000000000002f2a         je         loc_34e8

0000000000002f30         cmp        eax, 0x5
0000000000002f33         je         loc_34a8

0000000000002f39         cmp        eax, 0x2
0000000000002f3c         mov        ebx, 0x3f
0000000000002f41         sete       dl
0000000000002f44         xor        r12d, r12d
0000000000002f47         xor        eax, eax
0000000000002f49         jmp        sub_2e50+56
                        ; endp
0000000000002f4e         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_2f50:
0000000000002f50         xor        r10d, r10d
0000000000002f53         cmp        dword [rsp+arg_0], 0x2
0000000000002f58         je         loc_3460

0000000000002f5e         mov        byte [rsp+arg_74], r12b
0000000000002f63         xor        edx, edx
0000000000002f65         xor        eax, eax
0000000000002f67         mov        ebx, 0x27
0000000000002f6c         jmp        sub_2e50+56
                        ; endp
0000000000002f71         nop        dword [rax]
0000000000002f78         mov        edx, 0x9
0000000000002f7d         mov        ebx, 0x74

                     loc_2f82:
0000000000002f82         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3110+10, sub_3200+37, sub_3340+53
0000000000002f87         sete       al
0000000000002f8a         and        al, byte [rsp+arg_7]
0000000000002f8e         jne        sub_30c0+30

0000000000002f94         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_2f50+114
0000000000002f99         jne        loc_3000

                     loc_2f9b:
0000000000002f9b         mov        ebx, edx                                    ; CODE XREF=sub_3070+18
0000000000002f9d         xor        r12d, r12d
0000000000002fa0         xor        eax, eax
                        ; endp

                     loc_2fa2:
0000000000002fa2         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_2e50+61, sub_2e50+69
0000000000002fa7         jne        loc_2e9b

0000000000002fad         jmp        loc_2eb9
0000000000002fb2         nop        word [rax+rax]
0000000000002fb8         mov        edx, 0x8
0000000000002fbd         mov        ebx, 0x62
0000000000002fc2         jmp        sub_2f50+68
0000000000002fc4         nop        dword [rax]
0000000000002fc8         cmp        dword [rsp+8], 0x2
0000000000002fcd         je         sub_33a0                                    ; sub_33a0
0000000000002fd3         cmp        byte [rsp+0xd], 0x0
0000000000002fd8         je         sub_31e0+16

                     loc_2fde:
0000000000002fde         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_31e0+8
0000000000002fe3         je         loc_31f0

0000000000002fe9         cmp        qword [rsp+arg_10], 0x0
0000000000002fef         jne        loc_33ab

0000000000002ff5         mov        ebx, 0x5c
0000000000002ffa         nop        word [rax+rax]
                        ; endp

                     loc_3000:
0000000000003000         xor        r12d, r12d                                  ; CODE XREF=sub_2f50+73, sub_3340+29
                        ; endp

                     loc_3003:
0000000000003003         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_2e50+99, sub_2e50+108
0000000000003008         sete       dl
000000000000300b         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000003010         mov        eax, edx
0000000000003012         jne        loc_3868

0000000000003018         mov        eax, r8d
000000000000301b         xor        eax, 0x1
000000000000301e         and        al, dl
0000000000003020         je         loc_3051

0000000000003022         cmp        r13, r15
0000000000003025         jbe        loc_302c

0000000000003027         mov        byte [r14+r15], 0x27

                     loc_302c:
000000000000302c         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_2f50+213
0000000000003030         cmp        r13, rdx
0000000000003033         jbe        loc_303b

0000000000003035         mov        byte [r14+r15+1], 0x24

                     loc_303b:
000000000000303b         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_2f50+227
000000000000303f         cmp        r13, rdx
0000000000003042         jbe        loc_304a

0000000000003044         mov        byte [r14+r15+2], 0x27

                     loc_304a:
000000000000304a         add        r15, 0x3                                    ; CODE XREF=sub_2f50+242
000000000000304e         mov        r8d, eax

                     loc_3051:
0000000000003051         cmp        r13, r15                                    ; CODE XREF=sub_2f50+208
0000000000003054         jbe        loc_305b

0000000000003056         mov        byte [r14+r15], 0x5c

                     loc_305b:
000000000000305b         add        r15, 0x1                                    ; CODE XREF=sub_2f50+260
000000000000305f         add        rbp, 0x1
0000000000003063         jmp        loc_2ef0
0000000000003068         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3070:
0000000000003070         cmp        byte [rsp+arg_5], 0x0
0000000000003075         jne        loc_3243

000000000000307b         xor        edx, edx
000000000000307d         test       byte [rsp+arg_70], 0x1
0000000000003082         je         loc_2f9b

0000000000003088         add        rbp, 0x1
000000000000308c         jmp        quotearg_buffer_restyled+232
                        ; endp
0000000000003091         nop        dword [rax]
0000000000003098         cmp        dword [rsp+8], 0x2
000000000000309d         sete       dl
00000000000030a0         xor        eax, eax
00000000000030a2         jmp        sub_2e50+56
00000000000030a7         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_30b0:
00000000000030b0         mov        edx, 0x7
00000000000030b5         mov        ebx, 0x61
00000000000030ba         jmp        sub_2f50+68
                        ; endp
00000000000030bf         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_30c0:
00000000000030c0         cmp        dword [rsp+8], 0x2
00000000000030c5         sete       dl
                        ; endp

                     loc_30c8:
00000000000030c8         test       rbp, rbp                                    ; CODE XREF=sub_2e50+38, sub_32e0+35
00000000000030cb         jne        loc_2e7c

00000000000030d1         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_3310+43
00000000000030d6         and        al, dl
00000000000030d8         je         sub_2e50+56

00000000000030de         mov        rbp, r11
00000000000030e1         mov        dword [rsp+arg_0], 0x2
00000000000030e9         jmp        sub_33a0+1097
                        ; endp
00000000000030ee         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_30f0:
00000000000030f0         cmp        dword [rsp+arg_0], 0x2
00000000000030f5         sete       dl
00000000000030f8         xor        r12d, r12d
00000000000030fb         jmp        sub_30c0+17
                        ; endp
00000000000030fd         align      256


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3100:
0000000000003100         cmp        dword [rsp+arg_0], 0x2
0000000000003105         mov        ebx, 0x20
000000000000310a         sete       dl
000000000000310d         jmp        sub_30c0+17
                        ; endp
000000000000310f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3110:
0000000000003110         mov        edx, 0xd
0000000000003115         mov        ebx, 0x72
000000000000311a         jmp        loc_2f82
000000000000311f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3120:
0000000000003120         mov        edx, 0xc
0000000000003125         mov        ebx, 0x66
000000000000312a         jmp        sub_2f50+68
                        ; endp
000000000000312f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3130:
0000000000003130         mov        edx, 0xb
0000000000003135         mov        ebx, 0x76
000000000000313a         jmp        sub_2f50+68
                        ; endp
000000000000313f         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3140:
0000000000003140         mov        edx, 0xa
0000000000003145         mov        ebx, 0x6e
000000000000314a         jmp        sub_2f50+50
                        ; endp
000000000000314f         align      16

                     loc_3150:
0000000000003150         xor        r10d, r10d                                  ; CODE XREF=sub_3140+135
0000000000003153         nop        dword [rax+rax]

                     loc_3158:
0000000000003158         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
000000000000315e         jne        loc_3508

0000000000003164         mov        qword [rsp+0xe8+var_B0], r11
0000000000003169         mov        byte [rsp+0xe8+var_B8], r8b
000000000000316e         mov        byte [rsp+0xe8+var_C0], r10b
0000000000003173         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000003178         mov        rcx, qword [rax]
000000000000317b         movzx      edx, bl
000000000000317e         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000003184         movzx      r8d, byte [rsp+0xe8+var_B8]
000000000000318a         mov        r11, qword [rsp+0xe8+var_B0]
000000000000318f         mov        edi, 0x1
0000000000003194         movzx      eax, word [rcx+rdx*2]
0000000000003198         and        ax, 0x4000
000000000000319c         setne      r12b
00000000000031a0         sete       al
00000000000031a3         and        al, byte [rsp+0xe8+var_DB]

                     loc_31a7:
00000000000031a7         test       al, al                                      ; CODE XREF=sub_33a0+2221
00000000000031a9         jne        loc_3b41

00000000000031af         cmp        dword [rsp+0xe8+var_E0], 0x2
00000000000031b4         sete       dl
00000000000031b7         jmp        loc_2e88
00000000000031bc         align      64

                     loc_31c0:
00000000000031c0         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
00000000000031c4         cmp        bl, 0x7e
00000000000031c7         ja         loc_3150

00000000000031c9         lea        rcx, qword [switch_table_5ca0+552]          ; 0x5ec8
00000000000031d0         movzx      edx, bl
00000000000031d3         movsxd     rax, dword [rcx+rdx*4]
00000000000031d7         add        rax, rcx
00000000000031da         jmp        rax
                        ; endp
00000000000031dc         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_31e0:
00000000000031e0         xor        r10d, r10d
00000000000031e3         cmp        byte [rsp+arg_5], 0x0
00000000000031e8         jne        loc_2fde

00000000000031ee         nop

                     loc_31f0:
00000000000031f0         mov        edx, 0x5c                                   ; CODE XREF=sub_2f50+136, sub_2f50+147
00000000000031f5         mov        ebx, 0x5c
00000000000031fa         jmp        sub_2f50+68
                        ; endp
00000000000031ff         align      512


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3200:
0000000000003200         mov        edx, 0xc
0000000000003205         xor        r10d, r10d
0000000000003208         mov        ebx, 0x66
000000000000320d         jmp        sub_2f50+68
                        ; endp
0000000000003212         nop        word [rax+rax]
0000000000003218         mov        edx, 0xa
000000000000321d         xor        r10d, r10d
0000000000003220         mov        ebx, 0x6e
0000000000003225         jmp        sub_2f50+50
000000000000322a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3230:
0000000000003230         mov        ebx, 0x61
0000000000003235         jmp        sub_2f50+176
                        ; endp
000000000000323a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3240:
0000000000003240         xor        r10d, r10d
                        ; endp

                     loc_3243:
0000000000003243         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3070+5
0000000000003248         sete       dl
000000000000324b         cmp        byte [rsp+arg_7], 0x0
0000000000003250         jne        loc_3dea

0000000000003256         mov        eax, r8d
0000000000003259         mov        rcx, r15
000000000000325c         xor        eax, 0x1
000000000000325f         and        al, dl
0000000000003261         je         loc_3290

0000000000003263         cmp        r13, r15
0000000000003266         jbe        loc_326d

0000000000003268         mov        byte [r14+r15], 0x27

                     loc_326d:
000000000000326d         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_3240+38
0000000000003271         cmp        r13, rcx
0000000000003274         jbe        loc_327c

0000000000003276         mov        byte [r14+r15+1], 0x24

                     loc_327c:
000000000000327c         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_3240+52
0000000000003280         cmp        r13, rcx
0000000000003283         ja         loc_38b9

                     loc_3289:
0000000000003289         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_33a0+1311
000000000000328d         mov        r8d, eax

                     loc_3290:
0000000000003290         cmp        r13, rcx                                    ; CODE XREF=sub_3240+33
0000000000003293         jbe        loc_329a

0000000000003295         mov        byte [r14+rcx], 0x5c

                     loc_329a:
000000000000329a         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3240+83
000000000000329f         lea        r15, qword [rcx+1]
00000000000032a3         je         loc_38a9

00000000000032a9         lea        rax, qword [rbp+1]
00000000000032ad         cmp        rax, r11
00000000000032b0         jae        loc_32cb

00000000000032b2         mov        rax, qword [rsp+arg_8]
00000000000032b7         movzx      eax, byte [rax+rbp+1]
00000000000032bc         mov        byte [rsp+arg_20], al
00000000000032c0         sub        eax, 0x30
00000000000032c3         cmp        al, 0x9
00000000000032c5         jbe        loc_3af9

                     loc_32cb:
00000000000032cb         mov        eax, r12d                                   ; CODE XREF=sub_3240+112
00000000000032ce         mov        ebx, 0x30
00000000000032d3         xor        r12d, r12d
00000000000032d6         jmp        sub_2e50+56
                        ; endp
00000000000032db         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_32e0:
00000000000032e0         cmp        dword [rsp+arg_0], 0x2
00000000000032e5         mov        r12d, r10d
00000000000032e8         sete       dl
00000000000032eb         xor        r10d, r10d
00000000000032ee         xor        eax, eax
00000000000032f0         jmp        sub_2e50+56
                        ; endp
00000000000032f5         nop        dword [rax]
00000000000032f8         cmp        dword [rsp+8], 0x2
00000000000032fd         sete       dl
0000000000003300         xor        r10d, r10d
0000000000003303         jmp        sub_30c0+8
0000000000003308         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3310:
0000000000003310         cmp        dword [rsp+8], 0x2
0000000000003315         sete       dl
0000000000003318         xor        r10d, r10d
000000000000331b         xor        r12d, r12d
000000000000331e         jmp        sub_30c0+17
                        ; endp
0000000000003323         nop        dword [rax+rax]
0000000000003328         cmp        dword [rsp+8], 0x2
000000000000332d         mov        r12d, r10d
0000000000003330         mov        ebx, 0x20
0000000000003335         sete       dl
0000000000003338         xor        r10d, r10d
000000000000333b         jmp        sub_30c0+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3340:
0000000000003340         mov        edx, 0xd
0000000000003345         xor        r10d, r10d
0000000000003348         mov        ebx, 0x72
000000000000334d         jmp        sub_2f50+50
                        ; endp
0000000000003352         nop        word [rax+rax]
0000000000003358         mov        ebx, 0x76
000000000000335d         jmp        sub_2f50+176
0000000000003362         nop        word [rax+rax]
0000000000003368         mov        edx, 0x9
000000000000336d         xor        r10d, r10d
0000000000003370         mov        ebx, 0x74
0000000000003375         jmp        sub_2f50+50
000000000000337a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3380:
0000000000003380         mov        ebx, 0x62
0000000000003385         jmp        sub_2f50+176
                        ; endp
000000000000338a         nop        word [rax+rax]

                     loc_3390:
0000000000003390         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
0000000000003393         jmp        loc_2e30
0000000000003398         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_33a0:
00000000000033a0         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2f50+125
00000000000033a5         jne        sub_33a0+2416
                        ; endp

                     loc_33ab:
00000000000033ab         add        rbp, 0x1                                    ; CODE XREF=sub_2f50+159
00000000000033af         mov        eax, r8d
00000000000033b2         xor        r12d, r12d
00000000000033b5         mov        ebx, 0x5c
00000000000033ba         jmp        sub_2e50+124
                        ; endp
00000000000033bf         align      64

                     loc_33c0:
00000000000033c0         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
00000000000033c5         movzx      ebx, byte [rsp+0xe8+var_D9]
00000000000033ca         mov        r12d, r8d
00000000000033cd         mov        rbp, r11
00000000000033d0         sete       dl
00000000000033d3         mov        eax, ebx
00000000000033d5         test       r15, r15
00000000000033d8         sete       cl
00000000000033db         and        eax, edx
00000000000033dd         and        al, cl
00000000000033df         jne        loc_3e46

00000000000033e5         mov        eax, ebx
00000000000033e7         xor        eax, 0x1
00000000000033ea         and        dl, al
00000000000033ec         je         loc_3d5c

00000000000033f2         cmp        byte [rsp+0xe8+var_6C], 0x0
00000000000033f7         je         loc_3d5a

00000000000033fd         cmp        byte [rsp+0xe8+var_DA], 0x0
0000000000003402         jne        loc_3dfd

0000000000003408         test       r13, r13
000000000000340b         sete       al
000000000000340e         cmp        qword [rsp+0xe8+var_98], 0x0
0000000000003414         setne      dl
0000000000003417         and        al, dl
0000000000003419         je         loc_3e3c

000000000000341f         mov        r13, qword [rsp+0xe8+var_98]

                     loc_3424:
0000000000003424         lea        rbx, qword [aLibs+29]                       ; 0x5c4d, CODE XREF=sub_33a0+2781
000000000000342b         mov        byte [r14], 0x27
000000000000342f         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000003437         mov        r15d, 0x1
000000000000343d         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003446         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000344b         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003450         mov        byte [rsp+0xe8+var_6C], al
0000000000003454         jmp        loc_2d33
0000000000003459         align      32

                     loc_3460:
0000000000003460         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2f50+8
0000000000003465         jne        sub_33a0+2416

000000000000346b         test       r13, r13
000000000000346e         je         loc_3870

0000000000003474         xor        edx, edx
0000000000003476         cmp        qword [rsp+arg_48], 0x0
000000000000347c         jne        loc_3870

                     loc_3482:
0000000000003482         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_33a0+1284, sub_33a0+2794
0000000000003487         add        r15, 0x3
000000000000348b         xor        eax, eax
000000000000348d         mov        byte [rsp+arg_74], r12b
0000000000003492         xor        r8d, r8d
0000000000003495         mov        r13, rdx
0000000000003498         mov        ebx, 0x27
000000000000349d         jmp        sub_2e50+105
                        ; endp
00000000000034a2         align      8

                     loc_34a8:
00000000000034a8         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_2f20+19
00000000000034ad         je         loc_34d0

00000000000034af         lea        rcx, qword [rbp+2]
00000000000034b3         cmp        rcx, r11
00000000000034b6         jae        loc_34d0

00000000000034b8         mov        rax, qword [rsp+arg_8]
00000000000034bd         cmp        byte [rax+rbp+1], 0x3f
00000000000034c2         je         loc_3c52

00000000000034c8         nop        dword [rax+rax]

                     loc_34d0:
00000000000034d0         xor        edx, edx                                    ; CODE XREF=sub_33a0+269, sub_33a0+278, sub_33a0+2233, sub_33a0+2253
00000000000034d2         xor        r12d, r12d
00000000000034d5         xor        eax, eax
00000000000034d7         mov        ebx, 0x3f
00000000000034dc         jmp        sub_2e50+56
                        ; endp
00000000000034e1         align      8

                     loc_34e8:
00000000000034e8         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2f20+10
00000000000034ed         jne        loc_3d10

00000000000034f3         xor        r12d, r12d
00000000000034f6         xor        eax, eax
00000000000034f8         mov        ebx, 0x3f
00000000000034fd         jmp        sub_2e50+105
                        ; endp
0000000000003502         align      8

                     loc_3508:
0000000000003508         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_3140+30
0000000000003510         cmp        r11, 0xffffffffffffffff
0000000000003514         mov        qword [rsp+0xe8+var_48], 0x0
0000000000003520         mov        qword [rsp+0xe8+var_C0], rax
0000000000003525         jne        loc_3554

0000000000003527         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
000000000000352c         mov        byte [rsp+0xe8+var_A8], r8b
0000000000003531         mov        byte [rsp+0xe8+var_B0], r10b
0000000000003536         mov        qword [rsp+0xe8+var_B8], r9
000000000000353b         call       j_strlen                                    ; strlen
0000000000003540         movzx      r8d, byte [rsp+0xe8+var_A8]
0000000000003546         movzx      r10d, byte [rsp+0xe8+var_B0]
000000000000354c         mov        r11, rax
000000000000354f         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_3554:
0000000000003554         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_33a0+389
000000000000355c         xor        ecx, ecx
000000000000355e         mov        byte [rsp+0xe8+var_6A], bl
0000000000003562         mov        byte [rsp+0xe8+var_6B], r8b
0000000000003567         mov        rbx, rcx
000000000000356a         mov        qword [rsp+0xe8+var_60], r9
0000000000003572         mov        qword [rsp+0xe8+var_B0], rax
0000000000003577         mov        byte [rsp+0xe8+var_69], r10b
000000000000357c         mov        qword [rsp+0xe8+var_68], r15
0000000000003584         mov        qword [rsp+0xe8+var_A8], r14
0000000000003589         mov        qword [rsp+0xe8+var_78], r13
000000000000358e         mov        qword [rsp+0xe8+var_B8], r11

                     loc_3593:
0000000000003593         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_33a0+623
0000000000003598         lea        r14, qword [rbp+rbx]
000000000000359d         mov        rdx, qword [rsp+0xe8+var_B8]
00000000000035a2         mov        rcx, qword [rsp+0xe8+var_C0]
00000000000035a7         mov        rdi, qword [rsp+0xe8+var_B0]
00000000000035ac         lea        r13, qword [rax+r14]
00000000000035b0         sub        rdx, r14
00000000000035b3         mov        rsi, r13
00000000000035b6         call       rpl_mbrtowc                                 ; rpl_mbrtowc
00000000000035bb         test       rax, rax
00000000000035be         mov        r15, rax
00000000000035c1         je         loc_3611

00000000000035c3         cmp        rax, 0xffffffffffffffff
00000000000035c7         je         loc_3be5

00000000000035cd         cmp        rax, 0xfffffffffffffffe
00000000000035d1         je         loc_3b71

00000000000035d7         cmp        dword [rsp+0xe8+var_E0], 0x2
00000000000035dc         sete       al
00000000000035df         and        al, byte [rsp+0xe8+var_D9]
00000000000035e3         jne        loc_3780

                     loc_35e9:
00000000000035e9         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_33a0+996, sub_33a0+1031
00000000000035f0         call       j_iswprint                                  ; iswprint
00000000000035f5         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
00000000000035fa         test       eax, eax
00000000000035fc         mov        eax, 0x0
0000000000003601         cmove      r12d, eax
0000000000003605         add        rbx, r15
0000000000003608         call       j_mbsinit                                   ; mbsinit
000000000000360d         test       eax, eax
000000000000360f         je         loc_3593

                     loc_3611:
0000000000003611         mov        edx, r12d                                   ; CODE XREF=sub_33a0+545
0000000000003614         mov        rdi, rbx
0000000000003617         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000361d         xor        edx, 0x1
0000000000003620         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003625         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000362b         and        dl, byte [rsp+0xe8+var_DB]
000000000000362f         mov        r15, qword [rsp+0xe8+var_68]
0000000000003637         mov        r14, qword [rsp+0xe8+var_A8]
000000000000363c         mov        r13, qword [rsp+0xe8+var_78]
0000000000003641         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_3646:
0000000000003646         cmp        rdi, 0x1                                    ; CODE XREF=sub_33a0+2112, sub_33a0+2168
000000000000364a         jbe        loc_3c4b

                     loc_3650:
0000000000003650         mov        rcx, rdi                                    ; CODE XREF=sub_33a0+1961
0000000000003653         xor        esi, esi
0000000000003655         movzx      r9d, byte [rsp+0xe8+var_D9]
000000000000365b         add        rcx, rbp
000000000000365e         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000003663         jmp        loc_371e
0000000000003668         align      16

                     loc_3670:
0000000000003670         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_33a0+896
0000000000003675         sete       al
0000000000003678         test       r9b, r9b
000000000000367b         jne        loc_3b30

0000000000003681         mov        esi, r8d
0000000000003684         xor        esi, 0x1
0000000000003687         and        al, sil
000000000000368a         je         loc_36bb

000000000000368c         cmp        r13, r15
000000000000368f         jbe        loc_3696

0000000000003691         mov        byte [r14+r15], 0x27

                     loc_3696:
0000000000003696         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_33a0+751
000000000000369a         cmp        r13, rsi
000000000000369d         jbe        loc_36a5

000000000000369f         mov        byte [r14+r15+1], 0x24

                     loc_36a5:
00000000000036a5         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_33a0+765
00000000000036a9         cmp        r13, rsi
00000000000036ac         jbe        loc_36b4

00000000000036ae         mov        byte [r14+r15+2], 0x27

                     loc_36b4:
00000000000036b4         add        r15, 0x3                                    ; CODE XREF=sub_33a0+780
00000000000036b8         mov        r8d, eax

                     loc_36bb:
00000000000036bb         cmp        r13, r15                                    ; CODE XREF=sub_33a0+746
00000000000036be         jbe        loc_36c5

00000000000036c0         mov        byte [r14+r15], 0x5c

                     loc_36c5:
00000000000036c5         lea        rax, qword [r15+1]                          ; CODE XREF=sub_33a0+798
00000000000036c9         cmp        r13, rax
00000000000036cc         jbe        loc_36db

00000000000036ce         mov        eax, ebx
00000000000036d0         shr        al, 0x6
00000000000036d3         add        eax, 0x30
00000000000036d6         mov        byte [r14+r15+1], al

                     loc_36db:
00000000000036db         lea        rax, qword [r15+2]                          ; CODE XREF=sub_33a0+812
00000000000036df         cmp        r13, rax
00000000000036e2         jbe        loc_36f4

00000000000036e4         mov        eax, ebx
00000000000036e6         shr        al, 0x3
00000000000036e9         and        eax, 0x7
00000000000036ec         add        eax, 0x30
00000000000036ef         mov        byte [r14+r15+2], al

                     loc_36f4:
00000000000036f4         and        ebx, 0x7                                    ; CODE XREF=sub_33a0+834
00000000000036f7         add        rbp, 0x1
00000000000036fb         add        r15, 0x3
00000000000036ff         add        ebx, 0x30
0000000000003702         cmp        rbp, rcx
0000000000003705         jae        loc_2ef0

000000000000370b         mov        esi, edx

                     loc_370d:
000000000000370d         cmp        r13, r15                                    ; CODE XREF=sub_33a0+985, sub_33a0+1969
0000000000003710         jbe        loc_3716

0000000000003712         mov        byte [r14+r15], bl

                     loc_3716:
0000000000003716         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_33a0+880
000000000000371a         add        r15, 0x1

                     loc_371e:
000000000000371e         test       dl, dl                                      ; CODE XREF=sub_33a0+707
0000000000003720         jne        loc_3670

0000000000003726         mov        eax, esi
0000000000003728         xor        eax, 0x1
000000000000372b         and        eax, r8d
000000000000372e         test       r10b, r10b
0000000000003731         je         loc_3741

0000000000003733         cmp        r13, r15
0000000000003736         jbe        loc_373d

0000000000003738         mov        byte [r14+r15], 0x5c

                     loc_373d:
000000000000373d         add        r15, 0x1                                    ; CODE XREF=sub_33a0+918

                     loc_3741:
0000000000003741         add        rbp, 0x1                                    ; CODE XREF=sub_33a0+913
0000000000003745         cmp        rbp, rcx
0000000000003748         jae        loc_2ecc

000000000000374e         test       al, al
0000000000003750         je         loc_3b4e

0000000000003756         cmp        r13, r15
0000000000003759         jbe        loc_3760

000000000000375b         mov        byte [r14+r15], 0x27

                     loc_3760:
0000000000003760         lea        rax, qword [r15+1]                          ; CODE XREF=sub_33a0+953
0000000000003764         cmp        r13, rax
0000000000003767         jbe        loc_376f

0000000000003769         mov        byte [r14+r15+1], 0x27

                     loc_376f:
000000000000376f         add        r15, 0x2                                    ; CODE XREF=sub_33a0+967
0000000000003773         xor        r10d, r10d
0000000000003776         xor        r8d, r8d
0000000000003779         jmp        loc_370d
000000000000377b         align      128

                     loc_3780:
0000000000003780         cmp        r15, 0x1                                    ; CODE XREF=sub_33a0+579
0000000000003784         je         loc_35e9

000000000000378a         mov        rdi, qword [rsp+0xe8+var_D8]
000000000000378f         lea        rcx, qword [rdi+r15]
0000000000003793         lea        rdx, qword [rdi+r14+1]
0000000000003798         lea        r8, qword [rcx+r14]
000000000000379c         jmp        loc_37ad
000000000000379e         align      32

                     loc_37a0:
00000000000037a0         add        rdx, 0x1                                    ; CODE XREF=sub_33a0+1046, sub_33a0+1072
00000000000037a4         cmp        r8, rdx
00000000000037a7         je         loc_35e9

                     loc_37ad:
00000000000037ad         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_33a0+1020
00000000000037b0         sub        ecx, 0x5b
00000000000037b3         cmp        cl, 0x21
00000000000037b6         ja         loc_37a0

00000000000037b8         mov        esi, 0x1
00000000000037bd         shl        rsi, cl
00000000000037c0         mov        rcx, rsi
00000000000037c3         movabs     rsi, 0x20000002b
00000000000037cd         test       rcx, rsi
00000000000037d0         je         loc_37a0

00000000000037d2         mov        r14, qword [rsp+0xe8+var_A8]
00000000000037d7         mov        r13, qword [rsp+0xe8+var_78]
00000000000037dc         mov        rbp, qword [rsp+0xe8+var_B8]
00000000000037e1         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_37e9:
00000000000037e9         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_33a0+1227, sub_33a0+1948, sub_33a0+2585, sub_33a0+2734
00000000000037ee         je         loc_3800

00000000000037f0         test       al, al
00000000000037f2         mov        eax, 0x4
00000000000037f7         cmove      eax, dword [rsp+0xe8+var_E0]
00000000000037fc         mov        dword [rsp+0xe8+var_E0], eax

                     loc_3800:
0000000000003800         sub        rsp, 0x8                                    ; CODE XREF=sub_33a0+1102
0000000000003804         mov        rcx, rbp
0000000000003807         mov        rsi, r13
000000000000380a         push       qword [rsp+0xf0+var_88]
000000000000380e         push       qword [rsp+0xf8+var_80]
0000000000003812         mov        rdi, r14
0000000000003815         push       0x0
0000000000003817         mov        r9d, dword [rsp+0x108+var_70]
000000000000381f         mov        r8d, dword [rsp+0x108+var_E0]
0000000000003824         mov        rdx, qword [rsp+0x108+var_D8]
0000000000003829         and        r9d, 0xfffffffd
000000000000382d         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003832         add        rsp, 0x20
0000000000003836         mov        r15, rax

                     loc_3839:
0000000000003839         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_33a0+2549, sub_33a0+2560, sub_33a0+2711
0000000000003841         xor        rbx, qword [fs:0x28]
000000000000384a         mov        rax, r15
000000000000384d         jne        loc_3e53

0000000000003853         add        rsp, 0xb8
000000000000385a         pop        rbx
000000000000385b         pop        rbp
000000000000385c         pop        r12
000000000000385e         pop        r13
0000000000003860         pop        r14
0000000000003862         pop        r15
0000000000003864         ret
                        ; endp
0000000000003865         align      8

                     loc_3868:
0000000000003868         mov        rbp, r11                                    ; CODE XREF=sub_2f50+194
000000000000386b         jmp        loc_37e9

                     loc_3870:
0000000000003870         cmp        r13, r15                                    ; CODE XREF=sub_33a0+206, sub_33a0+220
0000000000003873         jbe        loc_387a

0000000000003875         mov        byte [r14+r15], 0x27

                     loc_387a:
000000000000387a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_33a0+1235
000000000000387e         cmp        r13, rax
0000000000003881         jbe        loc_3889

0000000000003883         mov        byte [r14+r15+1], 0x5c

                     loc_3889:
0000000000003889         lea        rax, qword [r15+2]                          ; CODE XREF=sub_33a0+1249
000000000000388d         cmp        r13, rax
0000000000003890         jbe        loc_3e82

0000000000003896         mov        rdx, r13
0000000000003899         mov        byte [r14+r15+2], 0x27
000000000000389f         mov        r13, qword [rsp+arg_48]
00000000000038a4         jmp        loc_3482

                     loc_38a9:
00000000000038a9         mov        eax, r12d                                   ; CODE XREF=sub_3240+99
00000000000038ac         mov        ebx, 0x30
00000000000038b1         xor        r12d, r12d
00000000000038b4         jmp        sub_2e50+105
                        ; endp

                     loc_38b9:
00000000000038b9         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_3240+67
00000000000038bf         jmp        loc_3289

                     loc_38c4:
00000000000038c4         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
00000000000038c6         jne        loc_2cf3

00000000000038cc         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_38d1:
00000000000038d1         test       r13, r13                                    ; CODE XREF=sub_33a0+2749
00000000000038d4         jne        loc_3e6a

00000000000038da         lea        rax, qword [aLibs+29]                       ; 0x5c4d
00000000000038e1         mov        qword [rsp+0xe8+var_98], 0x0
00000000000038ea         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000038ef         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000038f4         xor        r12d, r12d
00000000000038f7         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000038fc         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003905         mov        qword [rsp+0xe8+var_A0], rax
000000000000390a         mov        r15d, 0x1
0000000000003910         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000003918         jmp        loc_2d33
000000000000391d         align      32

                     loc_3920:
0000000000003920         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
0000000000003922         jne        loc_3d1d

0000000000003928         test       r13, r13
000000000000392b         je         loc_3b56

0000000000003931         mov        byte [r14], 0x22
0000000000003935         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000393a         xor        r12d, r12d
000000000000393d         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003942         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_394b:
000000000000394b         lea        rax, qword [aLibs+27]                       ; 0x5c4b, CODE XREF=sub_33a0+1996
0000000000003952         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003957         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000395c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003965         mov        r15d, 0x1
000000000000396b         mov        qword [rsp+0xe8+var_A0], rax
0000000000003970         jmp        loc_2d33

                     loc_3975:
0000000000003975         lea        rax, qword [aLibs+27]                       ; case 6, 0x5c4b, CODE XREF=quotearg_buffer_restyled+145
000000000000397c         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003981         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003986         xor        r12d, r12d
0000000000003989         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003992         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003997         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000399c         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000039a5         xor        r15d, r15d
00000000000039a8         mov        qword [rsp+0xe8+var_A0], rax
00000000000039ad         mov        dword [rsp+0xe8+var_E0], 0x5
00000000000039b5         jmp        loc_2d33

                     loc_39ba:
00000000000039ba         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
00000000000039bf         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000039c4         xor        r12d, r12d
00000000000039c7         mov        qword [rsp+0xe8+var_98], 0x0
00000000000039d0         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000039d5         xor        r15d, r15d
00000000000039d8         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000039dd         mov        qword [rsp+0xe8+var_D0], 0x0
00000000000039e6         mov        qword [rsp+0xe8+var_A0], 0x0
00000000000039ef         jmp        loc_2d33

                     loc_39f4:
00000000000039f4         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
00000000000039f9         je         loc_3a51

00000000000039fb         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0x5c4f
0000000000003a02         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003a04         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003a09         call       j_dcgettext                                 ; dcgettext
0000000000003a0e         mov        rcx, rax
0000000000003a11         mov        qword [rsp+0xe8+var_80], rax
0000000000003a16         lea        rax, qword [aLibs+31]                       ; 0x5c4f
0000000000003a1d         cmp        rcx, rax
0000000000003a20         je         loc_3dbe

                     loc_3a26:
0000000000003a26         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x5c4d, CODE XREF=sub_33a0+2607
0000000000003a2d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003a2f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003a34         call       j_dcgettext                                 ; dcgettext
0000000000003a39         mov        rcx, rax
0000000000003a3c         mov        qword [rsp+0xe8+var_88], rax
0000000000003a41         lea        rax, qword [aLibs+29]                       ; 0x5c4d
0000000000003a48         cmp        rcx, rax
0000000000003a4b         je         loc_3dd4

                     loc_3a51:
0000000000003a51         xor        r15d, r15d                                  ; CODE XREF=sub_33a0+1625, sub_33a0+2629
0000000000003a54         test       ebx, ebx
0000000000003a56         je         loc_3c1d

                     loc_3a5c:
0000000000003a5c         test       ebx, ebx                                    ; CODE XREF=sub_33a0+2183, sub_33a0+2214
0000000000003a5e         mov        rbx, qword [rsp+0xe8+var_88]
0000000000003a63         setne      byte [rsp+0xe8+var_D9]
0000000000003a68         xor        r12d, r12d
0000000000003a6b         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
0000000000003a6e         call       j_strlen                                    ; strlen
0000000000003a73         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003a78         mov        qword [rsp+0xe8+var_D0], rax
0000000000003a7d         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003a82         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003a87         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003a90         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003a95         jmp        loc_2d33

                     loc_3a9a:
0000000000003a9a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
0000000000003a9f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003aa4         xor        r12d, r12d
0000000000003aa7         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003ab0         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003ab5         xor        r15d, r15d
0000000000003ab8         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000003abd         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000003ac6         mov        qword [rsp+0xe8+var_A0], 0x0
0000000000003acf         jmp        loc_2d33

                     loc_3ad4:
0000000000003ad4         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000003ad9         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003ade         xor        r12d, r12d
0000000000003ae1         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003aea         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003aef         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003af4         jmp        loc_2d13

                     loc_3af9:
0000000000003af9         cmp        r13, r15                                    ; CODE XREF=sub_3240+133
0000000000003afc         jbe        loc_3b03

0000000000003afe         mov        byte [r14+r15], 0x30

                     loc_3b03:
0000000000003b03         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_33a0+1884
0000000000003b07         cmp        r13, rax
0000000000003b0a         jbe        loc_3b12

0000000000003b0c         mov        byte [r14+rcx+2], 0x30

                     loc_3b12:
0000000000003b12         mov        eax, r12d                                   ; CODE XREF=sub_33a0+1898
0000000000003b15         lea        r15, qword [rcx+3]
0000000000003b19         xor        r12d, r12d
0000000000003b1c         mov        ebx, 0x30
0000000000003b21         jmp        sub_2e50+56
                        ; endp
0000000000003b26         align      16

                     loc_3b30:
0000000000003b30         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_33a0+731
0000000000003b35         mov        rbp, r11
0000000000003b38         mov        byte [rsp+0xe8+var_DB], bl
0000000000003b3c         jmp        loc_37e9

                     loc_3b41:
0000000000003b41         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_3140+105
0000000000003b46         xor        r12d, r12d
0000000000003b49         jmp        loc_3650

                     loc_3b4e:
0000000000003b4e         xor        r10d, r10d                                  ; CODE XREF=sub_33a0+944
0000000000003b51         jmp        loc_370d

                     loc_3b56:
0000000000003b56         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_33a0+1419
0000000000003b5f         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003b64         xor        r12d, r12d
0000000000003b67         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003b6c         jmp        loc_394b

                     loc_3b71:
0000000000003b71         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_33a0+561
0000000000003b76         mov        rsi, r14
0000000000003b79         mov        rcx, r13
0000000000003b7c         mov        rax, rbx
0000000000003b7f         mov        rdi, rbx
0000000000003b82         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000003b88         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003b8d         mov        r9, qword [rsp+0xe8+var_60]
0000000000003b95         cmp        rsi, r11
0000000000003b98         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000003b9e         mov        r15, qword [rsp+0xe8+var_68]
0000000000003ba6         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003bab         mov        r13, qword [rsp+0xe8+var_78]
0000000000003bb0         jae        loc_3bd8

0000000000003bb2         cmp        byte [rcx], 0x0
0000000000003bb5         jne        loc_3bc7

0000000000003bb7         jmp        loc_3bd8
0000000000003bb9         align      64

                     loc_3bc0:
0000000000003bc0         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_33a0+2099
0000000000003bc5         je         loc_3bd5

                     loc_3bc7:
0000000000003bc7         add        rax, 0x1                                    ; CODE XREF=sub_33a0+2069
0000000000003bcb         lea        rdx, qword [rbp+rax]
0000000000003bd0         cmp        r11, rdx
0000000000003bd3         ja         loc_3bc0

                     loc_3bd5:
0000000000003bd5         mov        rdi, rax                                    ; CODE XREF=sub_33a0+2085

                     loc_3bd8:
0000000000003bd8         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_33a0+2064, sub_33a0+2071
0000000000003bdd         xor        r12d, r12d
0000000000003be0         jmp        loc_3646

                     loc_3be5:
0000000000003be5         mov        rdi, rbx                                    ; CODE XREF=sub_33a0+551
0000000000003be8         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000003bee         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003bf3         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000003bf9         mov        r15, qword [rsp+0xe8+var_68]
0000000000003c01         xor        r12d, r12d
0000000000003c04         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003c09         mov        r13, qword [rsp+0xe8+var_78]
0000000000003c0e         mov        r11, qword [rsp+0xe8+var_B8]
0000000000003c13         movzx      edx, byte [rsp+0xe8+var_DB]
0000000000003c18         jmp        loc_3646

                     loc_3c1d:
0000000000003c1d         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_33a0+1718
0000000000003c22         movzx      eax, byte [rdx]
0000000000003c25         test       al, al
0000000000003c27         je         loc_3a5c

0000000000003c2d         nop        dword [rax]

                     loc_3c30:
0000000000003c30         cmp        r13, r15                                    ; CODE XREF=sub_33a0+2212
0000000000003c33         jbe        loc_3c39

0000000000003c35         mov        byte [r14+r15], al

                     loc_3c39:
0000000000003c39         add        r15, 0x1                                    ; CODE XREF=sub_33a0+2195
0000000000003c3d         movzx      eax, byte [rdx+r15]
0000000000003c42         test       al, al
0000000000003c44         jne        loc_3c30

0000000000003c46         jmp        loc_3a5c

                     loc_3c4b:
0000000000003c4b         mov        eax, edx                                    ; CODE XREF=sub_33a0+682
0000000000003c4d         jmp        loc_31a7

                     loc_3c52:
0000000000003c52         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_33a0+290
0000000000003c56         cmp        bl, 0x3e
0000000000003c59         ja         loc_34d0

0000000000003c5f         movabs     rax, 0x7000a38200000000
0000000000003c69         bt         rax, rbx
0000000000003c6d         jae        loc_34d0

0000000000003c73         cmp        byte [rsp+arg_7], 0x0
0000000000003c78         jne        loc_3e62

0000000000003c7e         cmp        r13, r15
0000000000003c81         jbe        loc_3c88

0000000000003c83         mov        byte [r14+r15], 0x3f

                     loc_3c88:
0000000000003c88         lea        rax, qword [r15+1]                          ; CODE XREF=sub_33a0+2273
0000000000003c8c         cmp        r13, rax
0000000000003c8f         jbe        loc_3c97

0000000000003c91         mov        byte [r14+r15+1], 0x22

                     loc_3c97:
0000000000003c97         lea        rax, qword [r15+2]                          ; CODE XREF=sub_33a0+2287
0000000000003c9b         cmp        r13, rax
0000000000003c9e         jbe        loc_3ca6

0000000000003ca0         mov        byte [r14+r15+2], 0x22

                     loc_3ca6:
0000000000003ca6         lea        rax, qword [r15+3]                          ; CODE XREF=sub_33a0+2302
0000000000003caa         cmp        r13, rax
0000000000003cad         jbe        loc_3cb5

0000000000003caf         mov        byte [r14+r15+3], 0x3f

                     loc_3cb5:
0000000000003cb5         add        r15, 0x4                                    ; CODE XREF=sub_33a0+2317
0000000000003cb9         xor        edx, edx
0000000000003cbb         xor        r12d, r12d
0000000000003cbe         xor        eax, eax
0000000000003cc0         mov        rbp, rcx
0000000000003cc3         jmp        sub_2e50+56
                        ; endp

                     loc_3cc8:
0000000000003cc8         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
0000000000003cca         je         loc_3e58

0000000000003cd0         lea        rax, qword [aLibs+29]                       ; 0x5c4d
0000000000003cd7         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003cdc         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003ce1         xor        r12d, r12d
0000000000003ce4         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003ced         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003cf2         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000003cf7         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003d00         xor        r15d, r15d
0000000000003d03         mov        qword [rsp+0xe8+var_A0], rax
0000000000003d08         jmp        loc_2d33
0000000000003d0d         align      16

                     loc_3d10:
0000000000003d10         mov        rbp, r11                                    ; CODE XREF=sub_33a0+333
0000000000003d13         movzx      eax, byte [rsp+arg_7]
0000000000003d18         jmp        sub_33a0+1097
                        ; endp

                     loc_3d1d:
0000000000003d1d         lea        rax, qword [aLibs+27]                       ; 0x5c4b, CODE XREF=sub_33a0+1410
0000000000003d24         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003d29         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003d2e         xor        r12d, r12d
0000000000003d31         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003d3a         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003d3f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003d44         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003d4d         xor        r15d, r15d
0000000000003d50         mov        qword [rsp+0xe8+var_A0], rax
0000000000003d55         jmp        loc_2d33

                     loc_3d5a:
0000000000003d5a         mov        eax, edx                                    ; CODE XREF=sub_33a0+87

                     loc_3d5c:
0000000000003d5c         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_33a0+76, sub_33a0+2721
0000000000003d61         test       rbx, rbx
0000000000003d64         je         loc_3d92

0000000000003d66         test       al, al
0000000000003d68         je         loc_3d92

0000000000003d6a         movzx      ecx, byte [rbx]
0000000000003d6d         mov        rax, rbx
0000000000003d70         test       cl, cl
0000000000003d72         je         loc_3d92

0000000000003d74         mov        rdx, r15
0000000000003d77         sub        rax, r15

                     loc_3d7a:
0000000000003d7a         cmp        r13, rdx                                    ; CODE XREF=sub_33a0+2541
0000000000003d7d         jbe        loc_3d83

0000000000003d7f         mov        byte [r14+rdx], cl

                     loc_3d83:
0000000000003d83         add        rdx, 0x1                                    ; CODE XREF=sub_33a0+2525
0000000000003d87         movzx      ecx, byte [rax+rdx]
0000000000003d8b         test       cl, cl
0000000000003d8d         jne        loc_3d7a

0000000000003d8f         mov        r15, rdx

                     loc_3d92:
0000000000003d92         cmp        r13, r15                                    ; CODE XREF=sub_33a0+2500, sub_33a0+2504, sub_33a0+2514
0000000000003d95         jbe        loc_3839

0000000000003d9b         mov        byte [r14+r15], 0x0
0000000000003da0         jmp        loc_3839

                     loc_3da5:
0000000000003da5         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
0000000000003daa         movzx      ebx, byte [rsp+0xe8+var_D9]
0000000000003daf         mov        rbp, r11
0000000000003db2         sete       al
0000000000003db5         mov        byte [rsp+0xe8+var_DB], bl
0000000000003db9         jmp        loc_37e9

                     loc_3dbe:
0000000000003dbe         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_33a0+1664
0000000000003dc2         mov        rdi, rcx
0000000000003dc5         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000003dca         mov        qword [rsp+0xe8+var_80], rax
0000000000003dcf         jmp        loc_3a26

                     loc_3dd4:
0000000000003dd4         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_33a0+1707
0000000000003dd8         mov        rdi, rcx
0000000000003ddb         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000003de0         mov        qword [rsp+0xe8+var_88], rax
0000000000003de5         jmp        loc_3a51

                     loc_3dea:
0000000000003dea         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_3240+16
0000000000003def         mov        rbp, r11
0000000000003df2         mov        eax, edx
0000000000003df4         mov        byte [rsp+arg_5], bl
0000000000003df8         jmp        sub_33a0+1097
                        ; endp

                     loc_3dfd:
0000000000003dfd         sub        rsp, 0x8                                    ; CODE XREF=sub_33a0+98
0000000000003e01         mov        r8d, 0x5
0000000000003e07         mov        rcx, r11
0000000000003e0a         push       qword [rsp+0xf0+var_88]
0000000000003e0e         push       qword [rsp+0xf8+var_80]
0000000000003e12         mov        rdi, r14
0000000000003e15         push       qword [rsp+0x100+var_C8]
0000000000003e19         mov        r9d, dword [rsp+0x108+var_70]
0000000000003e21         mov        rdx, qword [rsp+0x108+var_D8]
0000000000003e26         mov        rsi, qword [rsp+0x108+var_98]
0000000000003e2b         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003e30         add        rsp, 0x20
0000000000003e34         mov        r15, rax
0000000000003e37         jmp        loc_3839

                     loc_3e3c:
0000000000003e3c         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_33a0+121
0000000000003e41         jmp        loc_3d5c

                     loc_3e46:
0000000000003e46         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_33a0+63
0000000000003e4e         jmp        loc_37e9

                     loc_3e53:
0000000000003e53         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_33a0+1197
                        ; endp

                     loc_3e58:
0000000000003e58         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_33a0+2346
0000000000003e5d         jmp        loc_38d1

                     loc_3e62:
0000000000003e62         mov        rbp, r11                                    ; CODE XREF=sub_33a0+2264
0000000000003e65         jmp        sub_33a0+1120
                        ; endp

                     loc_3e6a:
0000000000003e6a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_33a0+1332
0000000000003e6f         xor        eax, eax
0000000000003e71         xor        r12d, r12d
0000000000003e74         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003e7d         jmp        loc_3424

                     loc_3e82:
0000000000003e82         mov        rdx, r13                                    ; CODE XREF=sub_33a0+1264
0000000000003e85         mov        r13, qword [rsp+arg_48]
0000000000003e8a         jmp        loc_3482

                     loc_3e8f:
0000000000003e8f         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
0000000000003e94         align      32                                          ; End of unwind block (FDE at 0x6b48)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
0000000000003ea0         push       r15                                         ; Begin of unwind block (FDE at 0x6bc0), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
0000000000003ea2         push       r14
0000000000003ea4         movsxd     r15, edi
0000000000003ea7         push       r13
0000000000003ea9         push       r12
0000000000003eab         mov        r14, rdx
0000000000003eae         push       rbp
0000000000003eaf         push       rbx
0000000000003eb0         mov        rbp, rcx
0000000000003eb3         sub        rsp, 0x28
0000000000003eb7         mov        qword [rsp+0x58+var_50], rsi
0000000000003ebc         call       j___errno_location                          ; __errno_location
0000000000003ec1         mov        r13, rax
0000000000003ec4         mov        eax, dword [rax]
0000000000003ec6         test       r15d, r15d
0000000000003ec9         mov        rbx, qword [slotvec]                        ; slotvec
0000000000003ed0         mov        dword [rsp+0x58+var_40], eax
0000000000003ed4         js         loc_4041

0000000000003eda         cmp        dword [nslots], r15d                        ; nslots
0000000000003ee1         jg         loc_3f45

0000000000003ee3         cmp        r15d, 0x7fffffff
0000000000003eea         je         loc_4046

0000000000003ef0         lea        r12d, dword [r15+1]
0000000000003ef4         lea        rax, qword [slotvec0]                       ; slotvec0
0000000000003efb         movsxd     rsi, r12d
0000000000003efe         shl        rsi, 0x4
0000000000003f02         cmp        rbx, rax
0000000000003f05         je         loc_4020

0000000000003f0b         mov        rdi, rbx                                    ; argument #1 for method xrealloc
0000000000003f0e         call       xrealloc                                    ; xrealloc
0000000000003f13         mov        rbx, rax
0000000000003f16         mov        qword [slotvec], rax                        ; slotvec

                     loc_3f1d:
0000000000003f1d         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
0000000000003f24         mov        edx, r12d
0000000000003f27         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000003f29         sub        edx, edi
0000000000003f2b         shl        rdi, 0x4
0000000000003f2f         movsxd     rdx, edx
0000000000003f32         add        rdi, rbx                                    ; argument "__s" for method j_memset
0000000000003f35         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
0000000000003f39         call       j_memset                                    ; memset
0000000000003f3e         mov        dword [nslots], r12d                        ; nslots

                     loc_3f45:
0000000000003f45         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
0000000000003f48         shl        r15, 0x4
0000000000003f4c         sub        rsp, 0x8
0000000000003f50         add        rbx, r15
0000000000003f53         lea        r15, qword [rbp+8]
0000000000003f57         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000003f5b         mov        r11, qword [rbx]
0000000000003f5e         mov        r12, qword [rbx+8]
0000000000003f62         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000003f65         or         eax, 0x1
0000000000003f68         mov        dword [rsp+0x60+var_3C], eax
0000000000003f6c         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000003f6f         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
0000000000003f72         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000003f75         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000003f77         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
0000000000003f7a         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000003f7f         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
0000000000003f82         mov        qword [rsp+0x78+var_48], r11
0000000000003f87         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003f8c         add        rsp, 0x20
0000000000003f90         mov        r11, qword [rsp+0x58+var_48]
0000000000003f95         cmp        r11, rax
0000000000003f98         ja         loc_4001

0000000000003f9a         lea        rsi, qword [rax+1]
0000000000003f9e         lea        rax, qword [slot0]                          ; slot0
0000000000003fa5         cmp        r12, rax
0000000000003fa8         mov        qword [rbx], rsi
0000000000003fab         je         loc_3fbf

0000000000003fad         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000003fb0         mov        qword [rsp+0x58+var_48], rsi
0000000000003fb5         call       j_free                                      ; free
0000000000003fba         mov        rsi, qword [rsp+0x58+var_48]

                     loc_3fbf:
0000000000003fbf         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
0000000000003fc2         mov        qword [rsp+0x58+var_48], rsi
0000000000003fc7         call       xmalloc                                     ; xmalloc
0000000000003fcc         sub        rsp, 0x8
0000000000003fd0         mov        qword [rbx+8], rax
0000000000003fd4         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000003fd8         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000003fdb         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000003fde         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000003fe1         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000003fe3         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
0000000000003fe8         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
0000000000003feb         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000003ff0         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
0000000000003ff5         mov        r12, rax
0000000000003ff8         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003ffd         add        rsp, 0x20

                     loc_4001:
0000000000004001         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
0000000000004005         mov        dword [r13], eax
0000000000004009         add        rsp, 0x28
000000000000400d         mov        rax, r12
0000000000004010         pop        rbx
0000000000004011         pop        rbp
0000000000004012         pop        r12
0000000000004014         pop        r13
0000000000004016         pop        r14
0000000000004018         pop        r15
000000000000401a         ret
                        ; endp
000000000000401b         align      32

                     loc_4020:
0000000000004020         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
0000000000004022         call       xrealloc                                    ; xrealloc
0000000000004027         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
000000000000402f         mov        rbx, rax
0000000000004032         mov        qword [slotvec], rax                        ; slotvec
0000000000004039         movups     xmmword [rax], xmm0
000000000000403c         jmp        loc_3f1d

                     loc_4041:
0000000000004041         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_4046:
0000000000004046         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_404b:
000000000000404b         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x6bc0)
                     clone_quoting_options:
0000000000004050         push       r12                                         ; Begin of unwind block (FDE at 0x6c2c)
0000000000004052         push       rbp
0000000000004053         push       rbx
0000000000004054         mov        rbx, rdi
0000000000004057         call       j___errno_location                          ; __errno_location
000000000000405c         mov        r12d, dword [rax]
000000000000405f         mov        rbp, rax
0000000000004062         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000004069         test       rbx, rbx
000000000000406c         mov        esi, 0x38
0000000000004071         cmove      rbx, rax
0000000000004075         mov        rdi, rbx
0000000000004078         call       xmemdup                                     ; xmemdup
000000000000407d         mov        dword [rbp], r12d
0000000000004081         pop        rbx
0000000000004082         pop        rbp
0000000000004083         pop        r12
0000000000004085         ret
                        ; endp
0000000000004086         align      16                                          ; End of unwind block (FDE at 0x6c2c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
0000000000004090         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6c58), default_quoting_options
0000000000004097         test       rdi, rdi
000000000000409a         cmove      rdi, rax
000000000000409e         mov        eax, dword [rdi]
00000000000040a0         ret
                        ; endp
00000000000040a1         align      16                                          ; End of unwind block (FDE at 0x6c58)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
00000000000040b0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6c6c), default_quoting_options
00000000000040b7         test       rdi, rdi
00000000000040ba         cmove      rdi, rax
00000000000040be         mov        dword [rdi], esi
00000000000040c0         ret
                        ; endp
00000000000040c1         align      16                                          ; End of unwind block (FDE at 0x6c6c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
00000000000040d0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6c80), default_quoting_options
00000000000040d7         test       rdi, rdi
00000000000040da         mov        ecx, esi
00000000000040dc         cmove      rdi, rax
00000000000040e0         mov        eax, esi
00000000000040e2         and        ecx, 0x1f
00000000000040e5         shr        al, 0x5
00000000000040e8         movzx      eax, al
00000000000040eb         lea        rdi, qword [rdi+rax*4+8]
00000000000040f0         mov        esi, dword [rdi]
00000000000040f2         mov        eax, esi
00000000000040f4         shr        eax, cl
00000000000040f6         xor        edx, eax
00000000000040f8         and        eax, 0x1
00000000000040fb         and        edx, 0x1
00000000000040fe         shl        edx, cl
0000000000004100         xor        edx, esi
0000000000004102         mov        dword [rdi], edx
0000000000004104         ret
                        ; endp
0000000000004105         align      16                                          ; End of unwind block (FDE at 0x6c80)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
0000000000004110         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6c94), default_quoting_options
0000000000004117         test       rdi, rdi
000000000000411a         cmove      rdi, rax
000000000000411e         mov        eax, dword [rdi+4]
0000000000004121         mov        dword [rdi+4], esi
0000000000004124         ret
                        ; endp
0000000000004125         align      16                                          ; End of unwind block (FDE at 0x6c94)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
0000000000004130         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6ca8), default_quoting_options
0000000000004137         test       rdi, rdi
000000000000413a         cmove      rdi, rax
000000000000413e         test       rsi, rsi
0000000000004141         mov        dword [rdi], 0xa
0000000000004147         je         loc_4157

0000000000004149         test       rdx, rdx
000000000000414c         je         loc_4157

000000000000414e         mov        qword [rdi+0x28], rsi
0000000000004152         mov        qword [rdi+0x30], rdx
0000000000004156         ret
                        ; endp

                     loc_4157:
0000000000004157         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
000000000000415b         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
0000000000004160         push       r15                                         ; End of unwind block (FDE at 0x6ca8), Begin of unwind block (FDE at 0x6cbc)
0000000000004162         push       r14
0000000000004164         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000416b         push       r13
000000000000416d         push       r12
000000000000416f         mov        r13, rdi
0000000000004172         push       rbp
0000000000004173         push       rbx
0000000000004174         mov        rbx, r8
0000000000004177         mov        r14, rsi
000000000000417a         mov        r15, rdx
000000000000417d         sub        rsp, 0x18
0000000000004181         test       r8, r8
0000000000004184         cmove      rbx, rax
0000000000004188         mov        qword [rsp+0x48+var_40], rcx
000000000000418d         call       j___errno_location                          ; __errno_location
0000000000004192         mov        r12d, dword [rax]
0000000000004195         mov        rbp, rax
0000000000004198         lea        rax, qword [rbx+8]
000000000000419c         sub        rsp, 0x8
00000000000041a0         mov        r9d, dword [rbx+4]
00000000000041a4         push       qword [rbx+0x30]
00000000000041a7         mov        r8d, dword [rbx]
00000000000041aa         push       qword [rbx+0x28]
00000000000041ad         mov        rdx, r15
00000000000041b0         push       rax
00000000000041b1         mov        rcx, qword [rsp+0x68+var_40]
00000000000041b6         mov        rsi, r14
00000000000041b9         mov        rdi, r13
00000000000041bc         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000041c1         mov        dword [rbp], r12d
00000000000041c5         add        rsp, 0x38
00000000000041c9         pop        rbx
00000000000041ca         pop        rbp
00000000000041cb         pop        r12
00000000000041cd         pop        r13
00000000000041cf         pop        r14
00000000000041d1         pop        r15
00000000000041d3         ret
                        ; endp
00000000000041d4         align      32                                          ; End of unwind block (FDE at 0x6cbc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
00000000000041e0         push       r15                                         ; Begin of unwind block (FDE at 0x6d10), CODE XREF=quotearg_alloc+5
00000000000041e2         push       r14
00000000000041e4         lea        rax, qword [default_quoting_options]        ; default_quoting_options
00000000000041eb         push       r13
00000000000041ed         push       r12
00000000000041ef         mov        r12, rdx
00000000000041f2         push       rbp
00000000000041f3         push       rbx
00000000000041f4         mov        rbx, rcx
00000000000041f7         mov        r14, rdi
00000000000041fa         mov        r15, rsi
00000000000041fd         sub        rsp, 0x38
0000000000004201         test       rcx, rcx
0000000000004204         cmove      rbx, rax
0000000000004208         xor        ebp, ebp
000000000000420a         call       j___errno_location                          ; __errno_location
000000000000420f         test       r12, r12
0000000000004212         mov        r13, rax
0000000000004215         mov        eax, dword [rax]
0000000000004217         sete       bpl
000000000000421b         or         ebp, dword [rbx+4]
000000000000421e         lea        r10, qword [rbx+8]
0000000000004222         sub        rsp, 0x8
0000000000004226         mov        r8d, dword [rbx]
0000000000004229         mov        rcx, r15
000000000000422c         mov        dword [rsp+0x70+var_5C], eax
0000000000004230         push       qword [rbx+0x30]
0000000000004233         mov        rdx, r14
0000000000004236         push       qword [rbx+0x28]
0000000000004239         push       r10
000000000000423b         xor        esi, esi
000000000000423d         mov        r9d, ebp
0000000000004240         xor        edi, edi
0000000000004242         mov        qword [rsp+0x88+var_48], r10
0000000000004247         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000424c         lea        rsi, qword [rax+1]
0000000000004250         mov        qword [rsp+0x88+var_40], rax
0000000000004255         add        rsp, 0x20
0000000000004259         mov        rdi, rsi
000000000000425c         mov        qword [rsp+0x68+var_50], rsi
0000000000004261         call       xmalloc                                     ; xmalloc
0000000000004266         mov        qword [rsp+0x68+var_58], rax
000000000000426b         sub        rsp, 0x8
000000000000426f         push       qword [rbx+0x30]
0000000000004272         push       qword [rbx+0x28]
0000000000004275         mov        r10, qword [rsp+0x80+var_48]
000000000000427a         mov        r9d, ebp
000000000000427d         mov        r8d, dword [rbx]
0000000000004280         mov        rcx, r15
0000000000004283         mov        rdx, r14
0000000000004286         mov        rdi, rax
0000000000004289         push       r10
000000000000428b         mov        rsi, qword [rsp+0x88+var_50]
0000000000004290         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004295         mov        eax, dword [rsp+0x88+var_5C]
0000000000004299         add        rsp, 0x20
000000000000429d         test       r12, r12
00000000000042a0         mov        dword [r13], eax
00000000000042a4         je         loc_42af

00000000000042a6         mov        r11, qword [rsp+0x68+var_40]
00000000000042ab         mov        qword [r12], r11

                     loc_42af:
00000000000042af         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
00000000000042b4         add        rsp, 0x38
00000000000042b8         pop        rbx
00000000000042b9         pop        rbp
00000000000042ba         pop        r12
00000000000042bc         pop        r13
00000000000042be         pop        r14
00000000000042c0         pop        r15
00000000000042c2         ret
                        ; endp
00000000000042c3         align      16                                          ; End of unwind block (FDE at 0x6d10)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
00000000000042d0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x6d7c)
00000000000042d3         xor        edx, edx
00000000000042d5         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
00000000000042da         align      32                                          ; End of unwind block (FDE at 0x6d7c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
00000000000042e0         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0x6d90), nslots
00000000000042e6         push       r12
00000000000042e8         mov        r12, qword [slotvec]                        ; slotvec
00000000000042ef         push       rbp
00000000000042f0         push       rbx
00000000000042f1         cmp        eax, 0x1
00000000000042f4         jle        loc_4321

00000000000042f6         sub        eax, 0x2
00000000000042f9         lea        rbx, qword [r12+0x18]
00000000000042fe         shl        rax, 0x4
0000000000004302         lea        rbp, qword [r12+rax+0x28]
0000000000004307         nop        word [rax+rax]

                     loc_4310:
0000000000004310         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
0000000000004313         add        rbx, 0x10
0000000000004317         call       j_free                                      ; free
000000000000431c         cmp        rbx, rbp
000000000000431f         jne        loc_4310

                     loc_4321:
0000000000004321         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
0000000000004326         lea        rbx, qword [slot0]                          ; slot0
000000000000432d         cmp        rdi, rbx
0000000000004330         je         loc_4349

0000000000004332         call       j_free                                      ; free
0000000000004337         mov        qword [slotvec0], 0x100                     ; slotvec0
0000000000004342         mov        qword [slotvec0+8], rbx                     ; 0x208078

                     loc_4349:
0000000000004349         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
0000000000004350         cmp        r12, rbx
0000000000004353         je         loc_4364

0000000000004355         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000004358         call       j_free                                      ; free
000000000000435d         mov        qword [slotvec], rbx                        ; slotvec

                     loc_4364:
0000000000004364         pop        rbx                                         ; CODE XREF=quotearg_free+115
0000000000004365         mov        dword [nslots], 0x1                         ; nslots
000000000000436f         pop        rbp
0000000000004370         pop        r12
0000000000004372         ret
                        ; endp
0000000000004373         align      128                                         ; End of unwind block (FDE at 0x6d90)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
0000000000004380         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6dbc), default_quoting_options
0000000000004387         mov        rdx, 0xffffffffffffffff
000000000000438e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004393         align      32                                          ; End of unwind block (FDE at 0x6dbc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
00000000000043a0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6dd0), default_quoting_options
00000000000043a7         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000043ac         align      16                                          ; End of unwind block (FDE at 0x6dd0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
00000000000043b0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6de4), default_quoting_options
00000000000043b7         mov        rsi, rdi
00000000000043ba         mov        rdx, 0xffffffffffffffff
00000000000043c1         xor        edi, edi
00000000000043c3         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000043c8         align      16                                          ; End of unwind block (FDE at 0x6de4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
00000000000043d0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6df8), default_quoting_options
00000000000043d7         mov        rdx, rsi
00000000000043da         mov        rsi, rdi
00000000000043dd         xor        edi, edi
00000000000043df         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000043e4         align      16                                          ; End of unwind block (FDE at 0x6df8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
00000000000043f0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x6e0c)
00000000000043f4         mov        rax, rdx
00000000000043f7         mov        rdx, qword [fs:0x28]
0000000000004400         mov        qword [rsp+0x48+var_10], rdx
0000000000004405         xor        edx, edx
0000000000004407         cmp        esi, 0xa
000000000000440a         je         loc_4474

000000000000440c         mov        dword [rsp+0x48+var_48], esi
000000000000440f         mov        rcx, rsp
0000000000004412         mov        rdx, 0xffffffffffffffff
0000000000004419         mov        rsi, rax
000000000000441c         mov        qword [rsp+0x48+var_44], 0x0
0000000000004425         mov        qword [rsp+0x48+var_3C], 0x0
000000000000442e         mov        qword [rsp+0x48+var_34], 0x0
0000000000004437         mov        qword [rsp+0x48+var_2C], 0x0
0000000000004440         mov        qword [rsp+0x48+var_24], 0x0
0000000000004449         mov        qword [rsp+0x48+var_1C], 0x0
0000000000004452         mov        dword [rsp+0x48+var_14], 0x0
000000000000445a         call       quotearg_n_options                          ; quotearg_n_options
000000000000445f         mov        rcx, qword [rsp+0x48+var_10]
0000000000004464         xor        rcx, qword [fs:0x28]
000000000000446d         jne        loc_4479

000000000000446f         add        rsp, 0x48
0000000000004473         ret
                        ; endp

                     loc_4474:
0000000000004474         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_4479:
0000000000004479         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
000000000000447e         align      128                                         ; End of unwind block (FDE at 0x6e0c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
0000000000004480         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x6e28), CODE XREF=quotearg_style_mem+10
0000000000004484         mov        rax, rdx
0000000000004487         mov        rdx, rcx
000000000000448a         mov        rcx, qword [fs:0x28]
0000000000004493         mov        qword [rsp+0x48+var_10], rcx
0000000000004498         xor        ecx, ecx
000000000000449a         cmp        esi, 0xa
000000000000449d         je         loc_4500

000000000000449f         mov        dword [rsp+0x48+var_48], esi
00000000000044a2         mov        rcx, rsp
00000000000044a5         mov        rsi, rax
00000000000044a8         mov        qword [rsp+0x48+var_44], 0x0
00000000000044b1         mov        qword [rsp+0x48+var_3C], 0x0
00000000000044ba         mov        qword [rsp+0x48+var_34], 0x0
00000000000044c3         mov        qword [rsp+0x48+var_2C], 0x0
00000000000044cc         mov        qword [rsp+0x48+var_24], 0x0
00000000000044d5         mov        qword [rsp+0x48+var_1C], 0x0
00000000000044de         mov        dword [rsp+0x48+var_14], 0x0
00000000000044e6         call       quotearg_n_options                          ; quotearg_n_options
00000000000044eb         mov        rdx, qword [rsp+0x48+var_10]
00000000000044f0         xor        rdx, qword [fs:0x28]
00000000000044f9         jne        loc_4505

00000000000044fb         add        rsp, 0x48
00000000000044ff         ret
                        ; endp

                     loc_4500:
0000000000004500         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_4505:
0000000000004505         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
000000000000450a         align      16                                          ; End of unwind block (FDE at 0x6e28)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
0000000000004510         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x6e44)
0000000000004513         mov        esi, edi
0000000000004515         xor        edi, edi
0000000000004517         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
000000000000451c         align      32                                          ; End of unwind block (FDE at 0x6e44)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
0000000000004520         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x6e58)
0000000000004523         mov        rdx, rsi
0000000000004526         mov        esi, edi
0000000000004528         xor        edi, edi
000000000000452a         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
000000000000452f         align      16                                          ; End of unwind block (FDE at 0x6e58)

                     quotearg_char_mem:
0000000000004530         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x6e6c), CODE XREF=quotearg_char+11
0000000000004534         mov        ecx, edx
0000000000004536         mov        rax, qword [fs:0x28]
000000000000453f         mov        qword [rsp+0x48+var_10], rax
0000000000004544         xor        eax, eax
0000000000004546         mov        rax, qword [qword_208270]                   ; qword_208270
000000000000454d         mov        r8, rsp
0000000000004550         and        ecx, 0x1f
0000000000004553         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
000000000000455b         mov        qword [rsp+0x48+var_18], rax
0000000000004560         mov        eax, edx
0000000000004562         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000004566         shr        al, 0x5
0000000000004569         movzx      eax, al
000000000000456c         lea        r9, qword [r8+rax*4+8]
0000000000004571         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x208250
0000000000004579         movaps     xmmword [rsp+0x48+var_38], xmm0
000000000000457e         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x208260
0000000000004586         movaps     xmmword [rsp+0x48+var_28], xmm0
000000000000458b         mov        edx, dword [r9]
000000000000458e         mov        eax, edx
0000000000004590         shr        eax, cl
0000000000004592         not        eax
0000000000004594         and        eax, 0x1
0000000000004597         shl        eax, cl
0000000000004599         mov        rcx, r8
000000000000459c         xor        eax, edx
000000000000459e         mov        rdx, rsi
00000000000045a1         mov        rsi, rdi
00000000000045a4         mov        dword [r9], eax
00000000000045a7         xor        edi, edi
00000000000045a9         call       quotearg_n_options                          ; quotearg_n_options
00000000000045ae         mov        rsi, qword [rsp+0x48+var_10]
00000000000045b3         xor        rsi, qword [fs:0x28]
00000000000045bc         jne        loc_45c3

00000000000045be         add        rsp, 0x48
00000000000045c2         ret
                        ; endp

                     loc_45c3:
00000000000045c3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
00000000000045c8         align      16                                          ; End of unwind block (FDE at 0x6e6c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
00000000000045d0         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0x6e88)
00000000000045d4         mov        rsi, 0xffffffffffffffff
00000000000045db         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
00000000000045e0         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0x6e88), Begin of unwind block (FDE at 0x6e9c), CODE XREF=close_stdout+101
00000000000045e5         mov        rsi, 0xffffffffffffffff
00000000000045ec         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
00000000000045f1         align      512                                         ; End of unwind block (FDE at 0x6e9c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
0000000000004600         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0x6eb0)
0000000000004605         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
000000000000460a         align      16                                          ; End of unwind block (FDE at 0x6eb0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
0000000000004610         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x6ec4), CODE XREF=main+1246, main+1543, main+1592, main+1752
0000000000004614         mov        rax, rdx
0000000000004617         mov        rdx, qword [fs:0x28]
0000000000004620         mov        qword [rsp+0x48+var_10], rdx
0000000000004625         xor        edx, edx
0000000000004627         cmp        esi, 0xa
000000000000462a         je         loc_4694

000000000000462c         mov        dword [rsp+0x48+var_48], esi
000000000000462f         mov        rcx, rsp
0000000000004632         mov        rdx, 0xffffffffffffffff
0000000000004639         mov        rsi, rax
000000000000463c         mov        qword [rsp+0x48+var_44], 0x0
0000000000004645         mov        qword [rsp+0x48+var_3C], 0x4000000
000000000000464e         mov        qword [rsp+0x48+var_34], 0x0
0000000000004657         mov        qword [rsp+0x48+var_2C], 0x0
0000000000004660         mov        qword [rsp+0x48+var_24], 0x0
0000000000004669         mov        qword [rsp+0x48+var_1C], 0x0
0000000000004672         mov        dword [rsp+0x48+var_14], 0x0
000000000000467a         call       quotearg_n_options                          ; quotearg_n_options
000000000000467f         mov        rcx, qword [rsp+0x48+var_10]
0000000000004684         xor        rcx, qword [fs:0x28]
000000000000468d         jne        loc_4699

000000000000468f         add        rsp, 0x48
0000000000004693         ret
                        ; endp

                     loc_4694:
0000000000004694         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_4699:
0000000000004699         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
000000000000469e         align      32                                          ; End of unwind block (FDE at 0x6ec4)

                     quotearg_n_custom_mem:
00000000000046a0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x6ee0), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
00000000000046a4         mov        r9, rcx
00000000000046a7         mov        rcx, qword [qword_208270]                   ; qword_208270
00000000000046ae         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
00000000000046b6         mov        rax, qword [fs:0x28]
00000000000046bf         mov        qword [rsp+0x48+var_10], rax
00000000000046c4         xor        eax, eax
00000000000046c6         movaps     xmmword [rsp+0x48+var_48], xmm0
00000000000046ca         test       rsi, rsi
00000000000046cd         mov        qword [rsp+0x48+var_18], rcx
00000000000046d2         mov        dword [rsp+0x48+var_48], 0xa
00000000000046d9         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x208250
00000000000046e1         movaps     xmmword [rsp+0x48+var_38], xmm0
00000000000046e6         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x208260
00000000000046ee         movaps     xmmword [rsp+0x48+var_28], xmm0
00000000000046f3         je         loc_4727

00000000000046f5         test       rdx, rdx
00000000000046f8         je         loc_4727

00000000000046fa         mov        qword [rsp+0x48+var_20], rsi
00000000000046ff         mov        qword [rsp+0x48+var_18], rdx
0000000000004704         mov        rcx, rsp
0000000000004707         mov        rdx, r8
000000000000470a         mov        rsi, r9
000000000000470d         call       quotearg_n_options                          ; quotearg_n_options
0000000000004712         mov        rdi, qword [rsp+0x48+var_10]
0000000000004717         xor        rdi, qword [fs:0x28]
0000000000004720         jne        loc_472c

0000000000004722         add        rsp, 0x48
0000000000004726         ret
                        ; endp

                     loc_4727:
0000000000004727         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_472c:
000000000000472c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
0000000000004731         align      64                                          ; End of unwind block (FDE at 0x6ee0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom:
0000000000004740         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0x6efc)
0000000000004747         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
000000000000474c         align      16                                          ; End of unwind block (FDE at 0x6efc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
0000000000004750         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x6f10)
0000000000004753         mov        r8, 0xffffffffffffffff
000000000000475a         mov        rdx, rsi
000000000000475d         mov        rsi, rdi
0000000000004760         xor        edi, edi
0000000000004762         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004767         align      16                                          ; End of unwind block (FDE at 0x6f10)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
0000000000004770         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0x6f24)
0000000000004773         mov        rcx, rdx
0000000000004776         mov        rdx, rsi
0000000000004779         mov        rsi, rdi
000000000000477c         xor        edi, edi
000000000000477e         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004783         align      16                                          ; End of unwind block (FDE at 0x6f24)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
0000000000004790         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x6f38), quote_quoting_options
0000000000004797         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000479c         align      32                                          ; End of unwind block (FDE at 0x6f38)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
00000000000047a0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x6f4c), quote_quoting_options
00000000000047a7         mov        rdx, rsi
00000000000047aa         mov        rsi, rdi
00000000000047ad         xor        edi, edi
00000000000047af         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000047b4         align      64                                          ; End of unwind block (FDE at 0x6f4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
00000000000047c0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x6f60), quote_quoting_options
00000000000047c7         mov        rdx, 0xffffffffffffffff
00000000000047ce         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000047d3         align      32                                          ; End of unwind block (FDE at 0x6f60)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
00000000000047e0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x6f74), quote_quoting_options, CODE XREF=main+1803
00000000000047e7         mov        rsi, rdi
00000000000047ea         mov        rdx, 0xffffffffffffffff
00000000000047f1         xor        edi, edi
00000000000047f3         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000047f8         align      2048                                        ; End of unwind block (FDE at 0x6f74)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     init_tokenbuffer:
0000000000004800         mov        qword [rdi], 0x0                            ; Begin of unwind block (FDE at 0x6f8c), CODE XREF=main+308
0000000000004807         mov        qword [rdi+8], 0x0
000000000000480f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_58: -88
        ;    var_68: int64_t, -104


                     readtoken:
0000000000004810         push       r15                                         ; End of unwind block (FDE at 0x6f8c), Begin of unwind block (FDE at 0x6fa0), CODE XREF=main+352, readtokens+256
0000000000004812         push       r14
0000000000004814         push       r13
0000000000004816         push       r12
0000000000004818         mov        r13, rcx
000000000000481b         push       rbp
000000000000481c         push       rbx
000000000000481d         mov        rbp, rdi
0000000000004820         pxor       xmm0, xmm0
0000000000004824         sub        rsp, 0x38
0000000000004828         mov        rax, qword [fs:0x28]
0000000000004831         mov        qword [rsp+0x68+var_40], rax
0000000000004836         xor        eax, eax
0000000000004838         test       rdx, rdx
000000000000483b         movaps     xmmword [rsp+0x68+var_68], xmm0
000000000000483f         movaps     xmmword [rsp+0x68+var_58], xmm0
0000000000004844         je         loc_48ac

0000000000004846         add        rdx, rsi
0000000000004849         mov        rdi, rsp
000000000000484c         mov        r8d, 0x1
0000000000004852         nop        word [rax+rax]

                     loc_4858:
0000000000004858         mov        rbx, r8                                     ; CODE XREF=readtoken+106
000000000000485b         add        rsi, 0x1
000000000000485f         movzx      ecx, byte [rsi-1]
0000000000004863         mov        rax, rcx
0000000000004866         and        ecx, 0x3f
0000000000004869         shr        rax, 0x3
000000000000486d         shl        rbx, cl
0000000000004870         and        eax, 0x18
0000000000004873         or         qword [rdi+rax], rbx
0000000000004877         cmp        rdx, rsi
000000000000487a         jne        loc_4858

000000000000487c         mov        rax, qword [rbp+8]
0000000000004880         cmp        rax, qword [rbp+0x10]
0000000000004884         jae        loc_48b6

0000000000004886         nop        word [cs:rax+rax]

                     loc_4890:
0000000000004890         lea        rdx, qword [rax+1]                          ; CODE XREF=readtoken+164
0000000000004894         mov        qword [rbp+8], rdx
0000000000004898         movzx      ebx, byte [rax]

                     loc_489b:
000000000000489b         movsxd     rax, ebx                                    ; CODE XREF=readtoken+178
000000000000489e         shr        rax, 0x6
00000000000048a2         mov        rax, qword [rsp+rax*8+0x68+var_68]
00000000000048a6         bt         rax, rbx
00000000000048aa         jae        loc_48c4

                     loc_48ac:
00000000000048ac         mov        rax, qword [rbp+8]                          ; CODE XREF=readtoken+52
00000000000048b0         cmp        rax, qword [rbp+0x10]
00000000000048b4         jb         loc_4890

                     loc_48b6:
00000000000048b6         mov        rdi, rbp                                    ; argument #1 for method j___uflow, CODE XREF=readtoken+116
00000000000048b9         call       j___uflow                                   ; __uflow
00000000000048be         test       eax, eax
00000000000048c0         mov        ebx, eax
00000000000048c2         jns        loc_489b

                     loc_48c4:
00000000000048c4         mov        r15, qword [r13+8]                          ; CODE XREF=readtoken+154
00000000000048c8         mov        r14, qword [r13]
00000000000048cc         xor        r12d, r12d

                     loc_48cf:
00000000000048cf         test       ebx, ebx                                    ; CODE XREF=readtoken+426
00000000000048d1         jns        loc_48e0

00000000000048d3         test       r12, r12
00000000000048d6         je         loc_492a

00000000000048d8         nop        dword [rax+rax]

                     loc_48e0:
00000000000048e0         cmp        r12, r14                                    ; CODE XREF=readtoken+193, readtoken+275, readtoken+280
00000000000048e3         je         loc_4938

00000000000048e5         test       ebx, ebx
00000000000048e7         lea        rdx, qword [r15+r12]
00000000000048eb         js         loc_4980

                     loc_48f1:
00000000000048f1         movsxd     rax, ebx                                    ; CODE XREF=readtoken+355
00000000000048f4         shr        rax, 0x6
00000000000048f8         mov        rax, qword [rsp+rax*8+0x68+var_68]
00000000000048fc         bt         rax, rbx
0000000000004900         jb         loc_4980

0000000000004902         mov        byte [rdx], bl
0000000000004904         add        r12, 0x1
0000000000004908         mov        rax, qword [rbp+8]
000000000000490c         cmp        rax, qword [rbp+0x10]
0000000000004910         jae        loc_49b0

0000000000004916         lea        rdx, qword [rax+1]
000000000000491a         mov        qword [rbp+8], rdx
000000000000491e         movzx      ebx, byte [rax]
0000000000004921         test       ebx, ebx
0000000000004923         jns        loc_48e0

0000000000004925         test       r12, r12
0000000000004928         jne        loc_48e0

                     loc_492a:
000000000000492a         mov        r12, 0xffffffffffffffff                     ; CODE XREF=readtoken+198
0000000000004931         jmp        loc_498b
0000000000004933         align      8

                     loc_4938:
0000000000004938         test       r15, r15                                    ; CODE XREF=readtoken+211
000000000000493b         je         loc_49c0

0000000000004941         movabs     rax, 0x5555555555555553
000000000000494b         cmp        r12, rax
000000000000494e         ja         loc_49d4

0000000000004954         mov        rax, r12
0000000000004957         shr        rax, 0x1
000000000000495a         lea        r14, qword [r12+rax+1]

                     loc_495f:
000000000000495f         mov        rdi, r15                                    ; argument #1 for method xrealloc, CODE XREF=readtoken+450
0000000000004962         mov        rsi, r14                                    ; argument #2 for method xrealloc
0000000000004965         call       xrealloc                                    ; xrealloc
000000000000496a         test       ebx, ebx
000000000000496c         mov        r15, rax
000000000000496f         lea        rdx, qword [r15+r12]
0000000000004973         jns        loc_48f1

0000000000004979         nop        dword [rax]

                     loc_4980:
0000000000004980         mov        byte [rdx], 0x0                             ; CODE XREF=readtoken+219, readtoken+240
0000000000004983         mov        qword [r13+8], r15
0000000000004987         mov        qword [r13], r14

                     loc_498b:
000000000000498b         mov        rdi, qword [rsp+0x68+var_40]                ; CODE XREF=readtoken+289
0000000000004990         xor        rdi, qword [fs:0x28]
0000000000004999         mov        rax, r12
000000000000499c         jne        loc_49d9

000000000000499e         add        rsp, 0x38
00000000000049a2         pop        rbx
00000000000049a3         pop        rbp
00000000000049a4         pop        r12
00000000000049a6         pop        r13
00000000000049a8         pop        r14
00000000000049aa         pop        r15
00000000000049ac         ret
                        ; endp
00000000000049ad         align      16

                     loc_49b0:
00000000000049b0         mov        rdi, rbp                                    ; argument #1 for method j___uflow, CODE XREF=readtoken+256
00000000000049b3         call       j___uflow                                   ; __uflow
00000000000049b8         mov        ebx, eax
00000000000049ba         jmp        loc_48cf
00000000000049bf         align      64

                     loc_49c0:
00000000000049c0         test       r12, r12                                    ; CODE XREF=readtoken+299
00000000000049c3         mov        ecx, 0x80
00000000000049c8         cmovne     rcx, r12
00000000000049cc         test       rcx, rcx
00000000000049cf         mov        r14, rcx
00000000000049d2         jns        loc_495f

                     loc_49d4:
00000000000049d4         call       xalloc_die                                  ; xalloc_die, CODE XREF=readtoken+318
                        ; endp

                     loc_49d9:
00000000000049d9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=readtoken+396
                        ; endp
00000000000049de         align      32                                          ; End of unwind block (FDE at 0x6fa0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144


                     readtokens:
00000000000049e0         push       r15                                         ; Begin of unwind block (FDE at 0x6fec)
00000000000049e2         push       r14
00000000000049e4         push       r13
00000000000049e6         push       r12
00000000000049e8         push       rbp
00000000000049e9         push       rbx
00000000000049ea         lea        rbp, qword [rsi+1]
00000000000049ee         sub        rsp, 0x68
00000000000049f2         mov        rax, qword [fs:0x28]
00000000000049fb         mov        qword [rsp+0x98+var_40], rax
0000000000004a00         xor        eax, eax
0000000000004a02         mov        qword [rsp+0x98+var_88], rdx
0000000000004a07         test       rsi, rsi
0000000000004a0a         mov        eax, 0x40
0000000000004a0f         mov        edx, 0x8
0000000000004a14         cmove      rbp, rax
0000000000004a18         mov        qword [rsp+0x98+var_90], rdi
0000000000004a1d         mov        rax, rdx
0000000000004a20         mov        qword [rsp+0x98+var_80], rcx
0000000000004a25         mov        qword [rsp+0x98+var_60], r8
0000000000004a2a         mul        rbp
0000000000004a2d         mov        qword [rsp+0x98+var_68], r9
0000000000004a32         jo         loc_4c00

0000000000004a38         xor        ecx, ecx

                     loc_4a3a:
0000000000004a3a         test       rax, rax                                    ; CODE XREF=readtokens+549
0000000000004a3d         js         loc_4bfb

0000000000004a43         test       rcx, rcx
0000000000004a46         jne        loc_4bfb

0000000000004a4c         lea        rbx, qword [rbp*8]
0000000000004a54         mov        rdi, rbx                                    ; argument #1 for method xmalloc
0000000000004a57         call       xmalloc                                     ; xmalloc
0000000000004a5c         mov        rdi, rbx                                    ; argument #1 for method xmalloc
0000000000004a5f         mov        r12, rax
0000000000004a62         xor        ebx, ebx
0000000000004a64         call       xmalloc                                     ; xmalloc
0000000000004a69         mov        r13, rax
0000000000004a6c         lea        rax, qword [rsp+0x98+var_58]
0000000000004a71         mov        qword [rsp+0x98+var_58], 0x0
0000000000004a7a         mov        qword [rsp+0x98+var_50], 0x0
0000000000004a83         mov        qword [rsp+0x98+var_78], rax
0000000000004a88         jmp        loc_4acc
0000000000004a8a         align      16

                     loc_4a90:
0000000000004a90         cmp        r14, 0xffffffffffffffff                     ; CODE XREF=readtokens+267
0000000000004a94         je         loc_4b4c

                     loc_4a9a:
0000000000004a9a         mov        r15, r14                                    ; CODE XREF=readtokens+358
0000000000004a9d         add        r15, 0x1
0000000000004aa1         js         loc_4bfb

0000000000004aa7         mov        rdi, r15                                    ; argument #1 for method xmalloc
0000000000004aaa         call       xmalloc                                     ; xmalloc
0000000000004aaf         mov        rsi, qword [rsp+0x98+var_50]                ; argument "__src" for method j_memcpy
0000000000004ab4         mov        qword [r13+rbx*8], r14
0000000000004ab9         mov        rdx, r15                                    ; argument "__n" for method j_memcpy
0000000000004abc         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000004abf         call       j_memcpy                                    ; memcpy
0000000000004ac4         mov        qword [r12+rbx*8], rax
0000000000004ac8         add        rbx, 0x1

                     loc_4acc:
0000000000004acc         mov        rcx, qword [rsp+0x98+var_78]                ; CODE XREF=readtokens+168
0000000000004ad1         mov        rdx, qword [rsp+0x98+var_80]
0000000000004ad6         mov        rsi, qword [rsp+0x98+var_88]
0000000000004adb         mov        rdi, qword [rsp+0x98+var_90]
0000000000004ae0         call       readtoken                                   ; readtoken
0000000000004ae5         cmp        rbx, rbp
0000000000004ae8         mov        r14, rax
0000000000004aeb         jb         loc_4a90

0000000000004aed         test       r12, r12
0000000000004af0         je         loc_4ba8

0000000000004af6         movabs     rax, 0xaaaaaaaaaaaaaa9
0000000000004b00         cmp        rbp, rax
0000000000004b03         ja         loc_4bfb

0000000000004b09         mov        rax, rbp
0000000000004b0c         mov        rdi, r12                                    ; argument #1 for method xrealloc
0000000000004b0f         shr        rax, 0x1
0000000000004b12         lea        rbp, qword [rbp+rax+1]
0000000000004b17         lea        rdx, qword [rbp*8]                          ; argument #3 for method xrealloc
0000000000004b1f         mov        rsi, rdx                                    ; argument #2 for method xrealloc
0000000000004b22         mov        qword [rsp+0x98+var_70], rdx
0000000000004b27         call       xrealloc                                    ; xrealloc
0000000000004b2c         mov        rdx, qword [rsp+0x98+var_70]
0000000000004b31         mov        r12, rax

                     loc_4b34:
0000000000004b34         mov        rdi, r13                                    ; argument #1 for method xrealloc, CODE XREF=readtokens+524
0000000000004b37         mov        rsi, rdx                                    ; argument #2 for method xrealloc
0000000000004b3a         call       xrealloc                                    ; xrealloc
0000000000004b3f         cmp        r14, 0xffffffffffffffff
0000000000004b43         mov        r13, rax
0000000000004b46         jne        loc_4a9a

                     loc_4b4c:
0000000000004b4c         mov        qword [r12+rbx*8], 0x0                      ; CODE XREF=readtokens+180
0000000000004b54         mov        rdi, qword [rsp+0x98+var_50]                ; argument "__ptr" for method j_free
0000000000004b59         mov        qword [r13+rbx*8], 0x0
0000000000004b62         call       j_free                                      ; free
0000000000004b67         cmp        qword [rsp+0x98+var_68], 0x0
0000000000004b6d         mov        rax, qword [rsp+0x98+var_60]
0000000000004b72         mov        qword [rax], r12
0000000000004b75         je         loc_4bf1

0000000000004b77         mov        rax, qword [rsp+0x98+var_68]
0000000000004b7c         mov        qword [rax], r13

                     loc_4b7f:
0000000000004b7f         mov        rcx, qword [rsp+0x98+var_40]                ; CODE XREF=readtokens+537
0000000000004b84         xor        rcx, qword [fs:0x28]
0000000000004b8d         mov        rax, rbx
0000000000004b90         jne        loc_4c0a

0000000000004b92         add        rsp, 0x68
0000000000004b96         pop        rbx
0000000000004b97         pop        rbp
0000000000004b98         pop        r12
0000000000004b9a         pop        r13
0000000000004b9c         pop        r14
0000000000004b9e         pop        r15
0000000000004ba0         ret
                        ; endp
0000000000004ba1         align      8

                     loc_4ba8:
0000000000004ba8         test       rbp, rbp                                    ; CODE XREF=readtokens+272
0000000000004bab         mov        eax, 0x10
0000000000004bb0         mov        edx, 0x8
0000000000004bb5         cmove      rbp, rax
0000000000004bb9         mov        rax, rdx
0000000000004bbc         xor        esi, esi
0000000000004bbe         mul        rbp
0000000000004bc1         jo         loc_4c0f

                     loc_4bc3:
0000000000004bc3         test       rax, rax                                    ; CODE XREF=readtokens+564
0000000000004bc6         js         loc_4bfb

0000000000004bc8         test       rsi, rsi
0000000000004bcb         jne        loc_4bfb

0000000000004bcd         lea        rdx, qword [rbp*8]                          ; argument #3 for method xrealloc
0000000000004bd5         xor        edi, edi                                    ; argument #1 for method xrealloc
0000000000004bd7         mov        rsi, rdx                                    ; argument #2 for method xrealloc
0000000000004bda         mov        qword [rsp+0x98+var_70], rdx
0000000000004bdf         call       xrealloc                                    ; xrealloc
0000000000004be4         mov        rdx, qword [rsp+0x98+var_70]
0000000000004be9         mov        r12, rax
0000000000004bec         jmp        loc_4b34

                     loc_4bf1:
0000000000004bf1         mov        rdi, r13                                    ; argument "__ptr" for method j_free, CODE XREF=readtokens+405
0000000000004bf4         call       j_free                                      ; free
0000000000004bf9         jmp        loc_4b7f

                     loc_4bfb:
0000000000004bfb         call       xalloc_die                                  ; xalloc_die, CODE XREF=readtokens+93, readtokens+102, readtokens+193, readtokens+291, readtokens+486, readtokens+491
                        ; endp

                     loc_4c00:
0000000000004c00         mov        ecx, 0x1                                    ; CODE XREF=readtokens+82
0000000000004c05         jmp        loc_4a3a

                     loc_4c0a:
0000000000004c0a         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=readtokens+432
                        ; endp

                     loc_4c0f:
0000000000004c0f         mov        esi, 0x1                                    ; CODE XREF=readtokens+481
0000000000004c14         jmp        loc_4bc3
0000000000004c16         align      32                                          ; End of unwind block (FDE at 0x6fec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
0000000000004c20         push       r15                                         ; Begin of unwind block (FDE at 0x703c), CODE XREF=j_version_etc_arn, version_etc_va+75, version_etc+161
0000000000004c22         push       r14
0000000000004c24         push       r13
0000000000004c26         push       r12
0000000000004c28         mov        r12, r9
0000000000004c2b         push       rbp
0000000000004c2c         push       rbx
0000000000004c2d         mov        rbp, rdi
0000000000004c30         mov        rbx, r8
0000000000004c33         sub        rsp, 0x28
0000000000004c37         test       rsi, rsi
0000000000004c3a         je         loc_4d58

0000000000004c40         mov        r8, rdx
0000000000004c43         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
0000000000004c4a         mov        r9, rcx
0000000000004c4d         xor        eax, eax
0000000000004c4f         mov        rcx, rsi
0000000000004c52         mov        esi, 0x1
0000000000004c57         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_4c5c:
0000000000004c5c         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0x611b, CODE XREF=version_etc_arn+337
0000000000004c63         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004c65         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004c6a         call       j_dcgettext                                 ; dcgettext
0000000000004c6f         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000004c76         mov        rcx, rax
0000000000004c79         mov        r8d, 0x7e3
0000000000004c7f         mov        esi, 0x1
0000000000004c84         mov        rdi, rbp
0000000000004c87         xor        eax, eax
0000000000004c89         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004c8e         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000004c95         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004c97         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004c9c         call       j_dcgettext                                 ; dcgettext
0000000000004ca1         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004ca4         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004ca7         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004cac         cmp        r12, 0x9
0000000000004cb0         ja         loc_4ff0

0000000000004cb6         lea        rdx, qword [switch_table_6408]              ; switch_table_6408
0000000000004cbd         movsxd     rax, dword [rdx+r12*4]
0000000000004cc1         add        rax, rdx
0000000000004cc4         jmp        rax                                         ; switch statement using table at 0x6408, with 10 cases, 0x4cd0,0x4d46,0x4d80,0x4dd8,0x4e18,0x4e60,0x4eb0,0x4f08,0x4f38,0x4fa0
0000000000004cc6         align      16

                     loc_4cd0:
0000000000004cd0         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
0000000000004cd4         mov        rax, qword [rbx+0x10]
0000000000004cd8         lea        rsi, qword [aWrittenBySSSns_6318]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
0000000000004cdf         mov        r8, qword [rbx+8]
0000000000004ce3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004ce8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004cea         mov        r13, qword [rbx+0x30]
0000000000004cee         mov        r12, qword [rbx+0x28]
0000000000004cf2         mov        qword [rsp+0x58+var_48], r9
0000000000004cf7         mov        r15, qword [rbx+0x20]
0000000000004cfb         mov        r14, qword [rbx+0x18]
0000000000004cff         mov        qword [rsp+0x58+var_58], rax
0000000000004d03         mov        qword [rsp+0x58+var_50], r8
0000000000004d08         mov        rbx, qword [rbx]
0000000000004d0b         call       j_dcgettext                                 ; dcgettext
0000000000004d10         sub        rsp, 0x8

                     loc_4d14:
0000000000004d14         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
0000000000004d19         mov        rdx, rax
0000000000004d1c         mov        rcx, rbx
0000000000004d1f         mov        esi, 0x1
0000000000004d24         mov        rdi, rbp
0000000000004d27         xor        eax, eax
0000000000004d29         push       r9
0000000000004d2b         push       r13
0000000000004d2d         push       r12
0000000000004d2f         push       r15
0000000000004d31         push       r14
0000000000004d33         mov        r9, qword [rsp+0x88+var_58]
0000000000004d38         mov        r8, qword [rsp+0x88+var_50]
0000000000004d3d         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004d42         add        rsp, 0x30

                     loc_4d46:
0000000000004d46         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
0000000000004d4a         pop        rbx
0000000000004d4b         pop        rbp
0000000000004d4c         pop        r12
0000000000004d4e         pop        r13
0000000000004d50         pop        r14
0000000000004d52         pop        r15
0000000000004d54         ret
                        ; endp
0000000000004d55         align      8

                     loc_4d58:
0000000000004d58         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
0000000000004d5b         mov        rcx, rdx
0000000000004d5e         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
0000000000004d65         mov        esi, 0x1
0000000000004d6a         xor        eax, eax
0000000000004d6c         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004d71         jmp        loc_4c5c
0000000000004d76         align      128

                     loc_4d80:
0000000000004d80         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
0000000000004d84         mov        r9, qword [rbx+0x38]
0000000000004d88         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
0000000000004d8f         mov        rax, qword [rbx+0x10]
0000000000004d93         mov        r8, qword [rbx+8]
0000000000004d97         mov        edx, 0x5
0000000000004d9c         mov        r13, qword [rbx+0x30]
0000000000004da0         mov        r12, qword [rbx+0x28]
0000000000004da4         mov        r15, qword [rbx+0x20]
0000000000004da8         mov        r14, qword [rbx+0x18]
0000000000004dac         mov        rbx, qword [rbx]
0000000000004daf         mov        qword [rsp+0x58+var_40], r10
0000000000004db4         mov        qword [rsp+0x58+var_48], r9
0000000000004db9         mov        qword [rsp+0x58+var_58], rax
0000000000004dbd         mov        qword [rsp+0x58+var_50], r8

                     loc_4dc2:
0000000000004dc2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
0000000000004dc4         call       j_dcgettext                                 ; dcgettext
0000000000004dc9         mov        r10, qword [rsp+0x58+var_40]
0000000000004dce         push       r10
0000000000004dd0         jmp        loc_4d14
0000000000004dd5         align      8

                     loc_4dd8:
0000000000004dd8         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
0000000000004ddb         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
0000000000004de2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004de7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004de9         call       j_dcgettext                                 ; dcgettext
0000000000004dee         add        rsp, 0x28
0000000000004df2         mov        rcx, rbx
0000000000004df5         mov        rdi, rbp
0000000000004df8         pop        rbx
0000000000004df9         pop        rbp
0000000000004dfa         pop        r12
0000000000004dfc         pop        r13
0000000000004dfe         pop        r14
0000000000004e00         pop        r15
0000000000004e02         mov        rdx, rax
0000000000004e05         mov        esi, 0x1
0000000000004e0a         xor        eax, eax
0000000000004e0c         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004e11         align      8

                     loc_4e18:
0000000000004e18         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
0000000000004e1c         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
0000000000004e23         mov        rbx, qword [rbx]
0000000000004e26         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004e2b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004e2d         call       j_dcgettext                                 ; dcgettext
0000000000004e32         add        rsp, 0x28
0000000000004e36         mov        r8, r12
0000000000004e39         mov        rcx, rbx
0000000000004e3c         mov        rdi, rbp
0000000000004e3f         mov        rdx, rax
0000000000004e42         mov        esi, 0x1
0000000000004e47         pop        rbx
0000000000004e48         pop        rbp
0000000000004e49         pop        r12
0000000000004e4b         pop        r13
0000000000004e4d         pop        r14
0000000000004e4f         pop        r15
0000000000004e51         xor        eax, eax
0000000000004e53         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004e58         align      32

                     loc_4e60:
0000000000004e60         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
0000000000004e64         mov        r12, qword [rbx+8]
0000000000004e68         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
0000000000004e6f         mov        rbx, qword [rbx]
0000000000004e72         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004e77         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004e79         call       j_dcgettext                                 ; dcgettext
0000000000004e7e         add        rsp, 0x28
0000000000004e82         mov        r9, r13
0000000000004e85         mov        r8, r12
0000000000004e88         mov        rcx, rbx
0000000000004e8b         mov        rdi, rbp
0000000000004e8e         mov        rdx, rax
0000000000004e91         pop        rbx
0000000000004e92         pop        rbp
0000000000004e93         pop        r12
0000000000004e95         pop        r13
0000000000004e97         pop        r14
0000000000004e99         pop        r15
0000000000004e9b         mov        esi, 0x1
0000000000004ea0         xor        eax, eax
0000000000004ea2         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004ea7         align      16

                     loc_4eb0:
0000000000004eb0         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
0000000000004eb7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004ebc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004ebe         mov        r14, qword [rbx+0x18]
0000000000004ec2         mov        r13, qword [rbx+0x10]
0000000000004ec6         mov        r12, qword [rbx+8]
0000000000004eca         mov        rbx, qword [rbx]
0000000000004ecd         call       j_dcgettext                                 ; dcgettext
0000000000004ed2         sub        rsp, 0x8

                     loc_4ed6:
0000000000004ed6         push       r14                                         ; CODE XREF=version_etc_arn+784
0000000000004ed8         mov        rdx, rax
0000000000004edb         mov        r9, r13
0000000000004ede         mov        r8, r12
0000000000004ee1         mov        rcx, rbx
0000000000004ee4         mov        rdi, rbp
0000000000004ee7         mov        esi, 0x1
0000000000004eec         xor        eax, eax
0000000000004eee         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004ef3         pop        rax
0000000000004ef4         pop        rdx
0000000000004ef5         add        rsp, 0x28
0000000000004ef9         pop        rbx
0000000000004efa         pop        rbp
0000000000004efb         pop        r12
0000000000004efd         pop        r13
0000000000004eff         pop        r14
0000000000004f01         pop        r15
0000000000004f03         ret
                        ; endp
0000000000004f04         align      8

                     loc_4f08:
0000000000004f08         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
0000000000004f0c         lea        rsi, qword [aWrittenBySSSns_6298]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
0000000000004f13         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004f18         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004f1a         mov        r14, qword [rbx+0x18]
0000000000004f1e         mov        r13, qword [rbx+0x10]
0000000000004f22         mov        r12, qword [rbx+8]
0000000000004f26         mov        rbx, qword [rbx]
0000000000004f29         call       j_dcgettext                                 ; dcgettext
0000000000004f2e         push       r15
0000000000004f30         jmp        loc_4ed6
0000000000004f32         align      8

                     loc_4f38:
0000000000004f38         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
0000000000004f3c         mov        r12, qword [rbx+0x28]
0000000000004f40         lea        rsi, qword [aWrittenBySSSns_62c0]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
0000000000004f47         mov        r15, qword [rbx+0x20]
0000000000004f4b         mov        r14, qword [rbx+0x18]
0000000000004f4f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004f54         mov        r13, qword [rbx+0x10]
0000000000004f58         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004f5a         mov        rbx, qword [rbx]
0000000000004f5d         mov        qword [rsp+0x58+var_58], r8
0000000000004f61         call       j_dcgettext                                 ; dcgettext
0000000000004f66         sub        rsp, 0x8
0000000000004f6a         mov        r9, r13
0000000000004f6d         push       r12
0000000000004f6f         push       r15
0000000000004f71         push       r14

                     loc_4f73:
0000000000004f73         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
0000000000004f78         mov        rcx, rbx
0000000000004f7b         mov        rdx, rax
0000000000004f7e         mov        rdi, rbp
0000000000004f81         mov        esi, 0x1
0000000000004f86         xor        eax, eax
0000000000004f88         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004f8d         add        rsp, 0x20
0000000000004f91         add        rsp, 0x28
0000000000004f95         pop        rbx
0000000000004f96         pop        rbp
0000000000004f97         pop        r12
0000000000004f99         pop        r13
0000000000004f9b         pop        r14
0000000000004f9d         pop        r15
0000000000004f9f         ret
                        ; endp

                     loc_4fa0:
0000000000004fa0         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
0000000000004fa4         mov        r13, qword [rbx+0x30]
0000000000004fa8         lea        rsi, qword [aWrittenBySSSns_62e8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
0000000000004faf         mov        r12, qword [rbx+0x28]
0000000000004fb3         mov        r15, qword [rbx+0x20]
0000000000004fb7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004fbc         mov        r14, qword [rbx+0x18]
0000000000004fc0         mov        r8, qword [rbx+8]
0000000000004fc4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004fc6         mov        qword [rsp+0x58+var_50], r9
0000000000004fcb         mov        rbx, qword [rbx]
0000000000004fce         mov        qword [rsp+0x58+var_58], r8
0000000000004fd2         call       j_dcgettext                                 ; dcgettext
0000000000004fd7         push       r13
0000000000004fd9         push       r12
0000000000004fdb         push       r15
0000000000004fdd         push       r14
0000000000004fdf         mov        r9, qword [rsp+0x78+var_50]
0000000000004fe4         jmp        loc_4f73
0000000000004fe6         align      16

                     loc_4ff0:
0000000000004ff0         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
0000000000004ff4         mov        r9, qword [rbx+0x38]
0000000000004ff8         mov        edx, 0x5
0000000000004ffd         mov        rax, qword [rbx+0x10]
0000000000005001         mov        r8, qword [rbx+8]
0000000000005005         lea        rsi, qword [aWrittenBySSSns_6380]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
000000000000500c         mov        r13, qword [rbx+0x30]
0000000000005010         mov        r12, qword [rbx+0x28]
0000000000005014         mov        r15, qword [rbx+0x20]
0000000000005018         mov        r14, qword [rbx+0x18]
000000000000501c         mov        qword [rsp+0x58+var_40], r10
0000000000005021         mov        qword [rsp+0x58+var_48], r9
0000000000005026         mov        qword [rsp+0x58+var_58], rax
000000000000502a         mov        qword [rsp+0x58+var_50], r8
000000000000502f         mov        rbx, qword [rbx]
0000000000005032         jmp        loc_4dc2
0000000000005037         align      64                                          ; End of unwind block (FDE at 0x703c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
0000000000005040         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0x7150)
0000000000005043         cmp        qword [r8], 0x0
0000000000005047         je         j_version_etc_arn                           ; version_etc_arn

0000000000005049         nop        dword [rax]

                     loc_5050:
0000000000005050         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
0000000000005054         cmp        qword [r8+r9*8], 0x0
0000000000005059         jne        loc_5050

                     j_version_etc_arn:        // version_etc_arn
000000000000505b         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
0000000000005060         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0x7150), Begin of unwind block (FDE at 0x7164), CODE XREF=parse_long_options+283, parse_gnu_standard_options_only+235
0000000000005064         mov        r10, r8
0000000000005067         xor        r9d, r9d
000000000000506a         mov        rax, qword [fs:0x28]
0000000000005073         mov        qword [rsp+0x68+var_10], rax
0000000000005078         xor        eax, eax
000000000000507a         mov        r8, rsp
000000000000507d         nop        dword [rax]

                     loc_5080:
0000000000005080         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000005083         cmp        eax, 0x2f
0000000000005086         ja         loc_50ca

0000000000005088         mov        r11d, eax
000000000000508b         add        r11, qword [r10+0x10]
000000000000508f         add        eax, 0x8
0000000000005092         mov        dword [r10], eax

                     loc_5095:
0000000000005095         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000005098         test       rax, rax
000000000000509b         mov        qword [r8+r9*8], rax
000000000000509f         je         loc_50ab

00000000000050a1         add        r9, 0x1
00000000000050a5         cmp        r9, 0xa
00000000000050a9         jne        loc_5080

                     loc_50ab:
00000000000050ab         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
00000000000050b0         mov        rax, qword [rsp+0x68+var_10]
00000000000050b5         xor        rax, qword [fs:0x28]
00000000000050be         jne        loc_50c5

00000000000050c0         add        rsp, 0x68
00000000000050c4         ret
                        ; endp

                     loc_50c5:
00000000000050c5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_50ca:
00000000000050ca         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
00000000000050ce         lea        rax, qword [r11+8]
00000000000050d2         mov        qword [r10+8], rax
00000000000050d6         jmp        loc_5095
00000000000050d8         align      32                                          ; End of unwind block (FDE at 0x7164)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
00000000000050e0         push       rbp                                         ; Begin of unwind block (FDE at 0x7180)
00000000000050e1         push       rbx
00000000000050e2         mov        r10d, 0x20
00000000000050e8         xor        r11d, r11d
00000000000050eb         sub        rsp, 0xb8
00000000000050f2         mov        rax, qword [fs:0x28]
00000000000050fb         mov        qword [rsp+0xc8+var_50], rax
0000000000005100         xor        eax, eax
0000000000005102         lea        rax, qword [rsp+0xc8+arg_0]
000000000000510a         mov        qword [rsp+0xc8+var_28], r8
0000000000005112         lea        rbx, qword [rsp+0xc8+arg_0]
000000000000511a         lea        r8, qword [rsp+0xc8+var_A8]
000000000000511f         mov        qword [rsp+0xc8+var_20], r9
0000000000005127         mov        dword [rsp+0xc8+var_C0], 0x20
000000000000512f         mov        qword [rsp+0xc8+var_B8], rax
0000000000005134         lea        rax, qword [rsp+0xc8+var_48]
000000000000513c         xor        r9d, r9d
000000000000513f         mov        qword [rsp+0xc8+var_B0], rax
0000000000005144         mov        rbp, rax
0000000000005147         nop        word [rax+rax]

                     loc_5150:
0000000000005150         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
0000000000005154         ja         loc_51ac

0000000000005156         mov        eax, r10d
0000000000005159         mov        r11d, 0x1
000000000000515f         add        r10d, 0x8
0000000000005163         add        rax, rbp

                     loc_5166:
0000000000005166         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
0000000000005169         test       rax, rax
000000000000516c         mov        qword [r8+r9*8], rax
0000000000005170         je         loc_517c

0000000000005172         add        r9, 0x1
0000000000005176         cmp        r9, 0xa
000000000000517a         jne        loc_5150

                     loc_517c:
000000000000517c         test       r11b, r11b                                  ; CODE XREF=version_etc+144
000000000000517f         jne        loc_51a5

                     loc_5181:
0000000000005181         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000005186         mov        rax, qword [rsp+0xc8+var_50]
000000000000518b         xor        rax, qword [fs:0x28]
0000000000005194         jne        loc_51a0

0000000000005196         add        rsp, 0xb8
000000000000519d         pop        rbx
000000000000519e         pop        rbp
000000000000519f         ret
                        ; endp

                     loc_51a0:
00000000000051a0         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_51a5:
00000000000051a5         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
00000000000051aa         jmp        loc_5181

                     loc_51ac:
00000000000051ac         mov        rax, rbx                                    ; CODE XREF=version_etc+116
00000000000051af         add        rbx, 0x8
00000000000051b3         jmp        loc_5166
00000000000051b5         align      64                                          ; End of unwind block (FDE at 0x7180)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
00000000000051c0         push       rbx                                         ; Begin of unwind block (FDE at 0x71ac)
00000000000051c1         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
00000000000051c8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000051cd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000051cf         call       j_dcgettext                                 ; dcgettext
00000000000051d4         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
00000000000051db         mov        rsi, rax
00000000000051de         mov        edi, 0x1
00000000000051e3         xor        eax, eax
00000000000051e5         call       j___printf_chk                              ; __printf_chk
00000000000051ea         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
00000000000051f1         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000051f6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000051f8         call       j_dcgettext                                 ; dcgettext
00000000000051fd         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000005204         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x58c0
000000000000520b         mov        rsi, rax
000000000000520e         mov        edi, 0x1
0000000000005213         xor        eax, eax
0000000000005215         call       j___printf_chk                              ; __printf_chk
000000000000521a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000005221         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
0000000000005228         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000522a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000522f         call       j_dcgettext                                 ; dcgettext
0000000000005234         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000005237         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000523a         pop        rbx
000000000000523b         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
0000000000005240         push       rbx                                         ; End of unwind block (FDE at 0x71ac), Begin of unwind block (FDE at 0x71cc), CODE XREF=main+848, new_item+14, quotearg_n_options+295, quotearg_alloc_mem+129, readtokens+119, readtokens+132, readtokens+202, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15
0000000000005241         mov        rbx, rdi
0000000000005244         call       j_malloc                                    ; malloc
0000000000005249         test       rax, rax
000000000000524c         jne        loc_5253

000000000000524e         test       rbx, rbx
0000000000005251         jne        loc_5255

                     loc_5253:
0000000000005253         pop        rbx                                         ; CODE XREF=xmalloc+12
0000000000005254         ret
                        ; endp

                     loc_5255:
0000000000005255         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_525a:
000000000000525a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x71cc)
                     xnmalloc:
0000000000005260         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x71e8)
0000000000005263         mul        rsi
0000000000005266         mov        rdi, rax
0000000000005269         seto       al
000000000000526c         test       rdi, rdi
000000000000526f         js         loc_527b

0000000000005271         movzx      eax, al
0000000000005274         test       rax, rax
0000000000005277         jne        loc_527b

0000000000005279         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_527b:
000000000000527b         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
000000000000527f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5284:
0000000000005284         nop                                                    ; End of unwind block (FDE at 0x71e8)
0000000000005286         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000005290         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0x71fc)
                        ; endp
0000000000005292         align      32                                          ; End of unwind block (FDE at 0x71fc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
00000000000052a0         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x7210), CODE XREF=quotearg_n_options+110, quotearg_n_options+386, readtoken+341, readtokens+327, readtokens+346, readtokens+511, xnrealloc+25, x2nrealloc+52, x2realloc+40
00000000000052a3         push       rbx
00000000000052a4         mov        rbx, rsi
00000000000052a7         jne        loc_52ae

00000000000052a9         test       rdi, rdi
00000000000052ac         jne        loc_52c8

                     loc_52ae:
00000000000052ae         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
00000000000052b1         call       j_realloc                                   ; realloc
00000000000052b6         test       rax, rax
00000000000052b9         jne        loc_52c0

00000000000052bb         test       rbx, rbx
00000000000052be         jne        loc_52d1

                     loc_52c0:
00000000000052c0         pop        rbx                                         ; CODE XREF=xrealloc+25
00000000000052c1         ret
                        ; endp
00000000000052c2         align      8

                     loc_52c8:
00000000000052c8         call       j_free                                      ; free, CODE XREF=xrealloc+12
00000000000052cd         xor        eax, eax
00000000000052cf         pop        rbx
00000000000052d0         ret
                        ; endp

                     loc_52d1:
00000000000052d1         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_52d6:
00000000000052d6         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x7210)
                     xnrealloc:
00000000000052e0         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x7234)
00000000000052e3         mul        rdx
00000000000052e6         mov        rsi, rax
00000000000052e9         seto       al
00000000000052ec         test       rsi, rsi
00000000000052ef         js         loc_52fb

00000000000052f1         movzx      eax, al
00000000000052f4         test       rax, rax
00000000000052f7         jne        loc_52fb

00000000000052f9         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_52fb:
00000000000052fb         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
00000000000052ff         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5304:
0000000000005304         nop                                                    ; End of unwind block (FDE at 0x7234)
0000000000005306         nop        word [cs:rax+rax]
                     x2nrealloc:
0000000000005310         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7248)
0000000000005313         mov        r9, rdx
0000000000005316         mov        rcx, qword [rsi]
0000000000005319         je         loc_5350

000000000000531b         xor        edx, edx
000000000000531d         movabs     rax, 0x5555555555555554
0000000000005327         div        r9
000000000000532a         cmp        rax, rcx
000000000000532d         jbe        loc_536b

000000000000532f         mov        rax, rcx
0000000000005332         shr        rax, 0x1
0000000000005335         lea        rcx, qword [rax+rcx+1]

                     loc_533a:
000000000000533a         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
000000000000533d         imul       rcx, r9                                     ; argument #4 for method xrealloc
0000000000005341         mov        rsi, rcx                                    ; argument #2 for method xrealloc
0000000000005344         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000005349         align      16

                     loc_5350:
0000000000005350         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
0000000000005353         je         loc_5378

                     loc_5355:
0000000000005355         mov        rax, rcx                                    ; CODE XREF=sub_5374+28
0000000000005358         mul        r9
000000000000535b         seto       dl
000000000000535e         test       rax, rax
0000000000005361         movzx      edx, dl
0000000000005364         js         loc_536b

0000000000005366         test       rdx, rdx
0000000000005369         je         loc_533a

                     loc_536b:
000000000000536b         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
000000000000536f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5374:
0000000000005374         nop        dword [rax]
                        ; endp

                     loc_5378:
0000000000005378         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
000000000000537a         mov        eax, 0x80
000000000000537f         xor        r8d, r8d
0000000000005382         div        r9
0000000000005385         test       rax, rax
0000000000005388         sete       r8b
000000000000538c         lea        rcx, qword [r8+rax]
0000000000005390         jmp        loc_5355
0000000000005392         align      32                                          ; End of unwind block (FDE at 0x7248)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
00000000000053a0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7260)
00000000000053a3         mov        rax, qword [rsi]
00000000000053a6         je         loc_53d0

00000000000053a8         movabs     rdx, 0x5555555555555553
00000000000053b2         cmp        rax, rdx
00000000000053b5         ja         loc_53e1

00000000000053b7         mov        rdx, rax
00000000000053ba         shr        rdx, 0x1
00000000000053bd         lea        rax, qword [rdx+rax+1]

                     loc_53c2:
00000000000053c2         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
00000000000053c5         mov        rsi, rax                                    ; argument #2 for method xrealloc
00000000000053c8         jmp        xrealloc                                    ; xrealloc
                        ; endp
00000000000053cd         align      16

                     loc_53d0:
00000000000053d0         test       rax, rax                                    ; CODE XREF=x2realloc+6
00000000000053d3         mov        edx, 0x80
00000000000053d8         cmove      rax, rdx
00000000000053dc         test       rax, rax
00000000000053df         jns        loc_53c2

                     loc_53e1:
00000000000053e1         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
00000000000053e5         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_53ea:
00000000000053ea         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x7260)
                     xzalloc:
00000000000053f0         push       rbx                                         ; Begin of unwind block (FDE at 0x7278)
00000000000053f1         mov        rbx, rdi
00000000000053f4         call       xmalloc                                     ; xmalloc
00000000000053f9         mov        rdx, rbx                                    ; argument "__n" for method j_memset
00000000000053fc         xor        esi, esi                                    ; argument "__c" for method j_memset
00000000000053fe         mov        rdi, rax                                    ; argument "__s" for method j_memset
0000000000005401         pop        rbx
0000000000005402         jmp        j_memset                                    ; memset
                        ; endp
0000000000005407         align      16                                          ; End of unwind block (FDE at 0x7278)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
0000000000005410         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x7294)
0000000000005413         sub        rsp, 0x8
0000000000005417         mul        rsi
000000000000541a         seto       dl
000000000000541d         test       rax, rax
0000000000005420         js         loc_5439

0000000000005422         movzx      edx, dl
0000000000005425         test       rdx, rdx
0000000000005428         jne        loc_5439

000000000000542a         call       j_calloc                                    ; calloc
000000000000542f         test       rax, rax
0000000000005432         je         loc_5439

0000000000005434         add        rsp, 0x8
0000000000005438         ret
                        ; endp

                     loc_5439:
0000000000005439         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_543e:
000000000000543e         nop                                                    ; End of unwind block (FDE at 0x7294)
                        ; endp

                     xmemdup:
0000000000005440         push       rbp                                         ; Begin of unwind block (FDE at 0x72b0), CODE XREF=clone_quoting_options+40, xstrdup+17
0000000000005441         push       rbx
0000000000005442         mov        rbp, rdi
0000000000005445         mov        rdi, rsi
0000000000005448         mov        rbx, rsi
000000000000544b         sub        rsp, 0x8
000000000000544f         call       xmalloc                                     ; xmalloc
0000000000005454         add        rsp, 0x8
0000000000005458         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
000000000000545b         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
000000000000545e         pop        rbx
000000000000545f         pop        rbp
0000000000005460         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000005463         jmp        j_memcpy                                    ; memcpy
                        ; endp
0000000000005468         align      16                                          ; End of unwind block (FDE at 0x72b0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000005470         push       rbx                                         ; Begin of unwind block (FDE at 0x72d8), CODE XREF=new_item+30
0000000000005471         mov        rbx, rdi
0000000000005474         call       j_strlen                                    ; strlen
0000000000005479         mov        rdi, rbx
000000000000547c         lea        rsi, qword [rax+1]
0000000000005480         pop        rbx
0000000000005481         jmp        xmemdup                                     ; xmemdup
0000000000005483         align      16                                          ; End of unwind block (FDE at 0x72d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000005490         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x72f4), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=quotearg_n_options+422, readtoken+452, readtokens+539, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41
0000000000005497         sub        rsp, 0x8
000000000000549b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000054a0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000054a2         call       j_dcgettext                                 ; dcgettext
00000000000054a7         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
00000000000054ad         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5bd7
00000000000054b4         mov        rcx, rax
00000000000054b7         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000054b9         xor        eax, eax
00000000000054bb         call       j_error                                     ; error
00000000000054c0         call       j_abort                                     ; abort
                        ; endp
00000000000054c5         align      16                                          ; End of unwind block (FDE at 0x72f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
00000000000054d0         push       r12                                         ; Begin of unwind block (FDE at 0x730c), CODE XREF=main+1156, close_stream+21
00000000000054d2         push       rbp
00000000000054d3         push       rbx
00000000000054d4         mov        rbx, rdi
00000000000054d7         call       j_fileno                                    ; fileno
00000000000054dc         test       eax, eax
00000000000054de         mov        rdi, rbx
00000000000054e1         js         loc_5537

00000000000054e3         call       j___freading                                ; __freading
00000000000054e8         test       eax, eax
00000000000054ea         jne        loc_5518

                     loc_54ec:
00000000000054ec         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
00000000000054ef         call       rpl_fflush                                  ; rpl_fflush
00000000000054f4         test       eax, eax
00000000000054f6         je         loc_5534

00000000000054f8         call       j___errno_location                          ; __errno_location
00000000000054fd         mov        r12d, dword [rax]
0000000000005500         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
0000000000005503         mov        rbp, rax
0000000000005506         call       j_fclose                                    ; fclose
000000000000550b         test       r12d, r12d
000000000000550e         jne        loc_5540

                     loc_5510:
0000000000005510         pop        rbx                                         ; CODE XREF=rpl_fclose+121
0000000000005511         pop        rbp
0000000000005512         pop        r12
0000000000005514         ret
                        ; endp
0000000000005515         align      8

                     loc_5518:
0000000000005518         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
000000000000551b         call       j_fileno                                    ; fileno
0000000000005520         xor        esi, esi                                    ; argument "__offset" for method j_lseek
0000000000005522         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000005527         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000005529         call       j_lseek                                     ; lseek
000000000000552e         cmp        rax, 0xffffffffffffffff
0000000000005532         jne        loc_54ec

                     loc_5534:
0000000000005534         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_5537:
0000000000005537         pop        rbx                                         ; CODE XREF=rpl_fclose+17
0000000000005538         pop        rbp
0000000000005539         pop        r12
000000000000553b         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_5540:
0000000000005540         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
0000000000005544         mov        eax, 0xffffffff
0000000000005549         jmp        loc_5510
000000000000554b         align      16                                          ; End of unwind block (FDE at 0x730c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
0000000000005550         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7344), CODE XREF=rpl_fclose+31
0000000000005553         push       rbx
0000000000005554         mov        rbx, rdi
0000000000005557         je         loc_556a

0000000000005559         call       j___freading                                ; __freading
000000000000555e         test       eax, eax
0000000000005560         je         loc_556a

0000000000005562         test       dword [rbx], 0x100
0000000000005568         jne        loc_5578

                     loc_556a:
000000000000556a         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
000000000000556d         pop        rbx
000000000000556e         jmp        j_fflush                                    ; fflush
                        ; endp
0000000000005573         align      8

                     loc_5578:
0000000000005578         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
000000000000557b         mov        edx, 0x1
0000000000005580         xor        esi, esi
0000000000005582         call       rpl_fseeko                                  ; rpl_fseeko
0000000000005587         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
000000000000558a         pop        rbx
000000000000558b         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
0000000000005590         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0x7344), Begin of unwind block (FDE at 0x7364), CODE XREF=rpl_fflush+50
0000000000005594         cmp        qword [rdi+0x10], rax
0000000000005598         je         loc_55a0

                     j_j_fseeko:        // fseeko
000000000000559a         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
000000000000559f         align      32

                     loc_55a0:
00000000000055a0         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
00000000000055a4         cmp        qword [rdi+0x28], rax
00000000000055a8         jne        j_j_fseeko                                  ; fseeko

00000000000055aa         cmp        qword [rdi+0x48], 0x0
00000000000055af         jne        j_j_fseeko                                  ; fseeko

00000000000055b1         push       r12
00000000000055b3         push       rbp
00000000000055b4         mov        r12d, edx
00000000000055b7         push       rbx
00000000000055b8         mov        rbp, rsi
00000000000055bb         mov        rbx, rdi
00000000000055be         call       j_fileno                                    ; fileno
00000000000055c3         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
00000000000055c6         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
00000000000055c9         mov        edi, eax                                    ; argument "__fd" for method j_lseek
00000000000055cb         call       j_lseek                                     ; lseek
00000000000055d0         cmp        rax, 0xffffffffffffffff
00000000000055d4         je         loc_55e2

00000000000055d6         and        dword [rbx], 0xffffffef
00000000000055d9         mov        qword [rbx+0x90], rax
00000000000055e0         xor        eax, eax

                     loc_55e2:
00000000000055e2         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
00000000000055e3         pop        rbp
00000000000055e4         pop        r12
00000000000055e6         ret
                        ; endp
00000000000055e7         align      16                                          ; End of unwind block (FDE at 0x7364)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
00000000000055f0         push       r13                                         ; Begin of unwind block (FDE at 0x7394), CODE XREF=sub_33a0+534
00000000000055f2         push       r12
00000000000055f4         mov        r13, rsi
00000000000055f7         push       rbp
00000000000055f8         push       rbx
00000000000055f9         mov        rbx, rdi
00000000000055fc         mov        r12, rdx
00000000000055ff         sub        rsp, 0x18
0000000000005603         mov        rax, qword [fs:0x28]
000000000000560c         mov        qword [rsp+0x38+var_30], rax
0000000000005611         xor        eax, eax
0000000000005613         lea        rax, qword [rsp+0x38+var_34]
0000000000005618         test       rdi, rdi
000000000000561b         cmove      rbx, rax
000000000000561f         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
0000000000005622         call       j_mbrtowc                                   ; mbrtowc
0000000000005627         cmp        rax, 0xfffffffffffffffd
000000000000562b         mov        rbp, rax
000000000000562e         jbe        loc_5650

0000000000005630         test       r12, r12
0000000000005633         je         loc_5650

0000000000005635         xor        edi, edi
0000000000005637         call       hard_locale                                 ; hard_locale
000000000000563c         test       al, al
000000000000563e         jne        loc_5650

0000000000005640         movzx      eax, byte [r13]
0000000000005645         mov        ebp, 0x1
000000000000564a         mov        dword [rbx], eax
000000000000564c         nop        dword [rax]

                     loc_5650:
0000000000005650         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
0000000000005655         xor        rdx, qword [fs:0x28]
000000000000565e         mov        rax, rbp
0000000000005661         jne        loc_566e

0000000000005663         add        rsp, 0x18
0000000000005667         pop        rbx
0000000000005668         pop        rbp
0000000000005669         pop        r12
000000000000566b         pop        r13
000000000000566d         ret
                        ; endp

                     loc_566e:
000000000000566e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
0000000000005673         align      128                                         ; End of unwind block (FDE at 0x7394)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
0000000000005680         push       r12                                         ; Begin of unwind block (FDE at 0x73d4), CODE XREF=close_stdout+13, close_stdout+51
0000000000005682         push       rbp
0000000000005683         mov        rbp, rdi
0000000000005686         push       rbx
0000000000005687         call       j___fpending                                ; __fpending
000000000000568c         mov        ebx, dword [rbp]
000000000000568f         mov        rdi, rbp
0000000000005692         mov        r12, rax
0000000000005695         call       rpl_fclose                                  ; rpl_fclose
000000000000569a         and        ebx, 0x20
000000000000569d         test       ebx, ebx
000000000000569f         jne        loc_56b8

00000000000056a1         test       eax, eax
00000000000056a3         je         loc_56af

00000000000056a5         test       r12, r12
00000000000056a8         mov        eax, 0xffffffff
00000000000056ad         je         loc_56e8

                     loc_56af:
00000000000056af         pop        rbx                                         ; CODE XREF=close_stream+35
00000000000056b0         pop        rbp
00000000000056b1         pop        r12
00000000000056b3         ret
                        ; endp
00000000000056b4         align      8

                     loc_56b8:
00000000000056b8         test       eax, eax                                    ; CODE XREF=close_stream+31
00000000000056ba         jne        loc_56d8

00000000000056bc         call       j___errno_location                          ; __errno_location
00000000000056c1         mov        dword [rax], 0x0
00000000000056c7         mov        eax, 0xffffffff
00000000000056cc         pop        rbx
00000000000056cd         pop        rbp
00000000000056ce         pop        r12
00000000000056d0         ret
                        ; endp
00000000000056d1         align      8

                     loc_56d8:
00000000000056d8         pop        rbx                                         ; CODE XREF=close_stream+58
00000000000056d9         mov        eax, 0xffffffff
00000000000056de         pop        rbp
00000000000056df         pop        r12
00000000000056e1         ret
                        ; endp
00000000000056e2         align      8

                     loc_56e8:
00000000000056e8         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
00000000000056ed         cmp        dword [rax], 0x9
00000000000056f0         pop        rbx
00000000000056f1         pop        rbp
00000000000056f2         pop        r12
00000000000056f4         setne      al
00000000000056f7         movzx      eax, al
00000000000056fa         neg        eax
00000000000056fc         ret
                        ; endp
00000000000056fd         align      256                                         ; End of unwind block (FDE at 0x73d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
0000000000005700         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x7424), CODE XREF=rpl_mbrtowc+71
0000000000005704         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000005706         call       j_setlocale                                 ; setlocale
000000000000570b         mov        rdx, rax
000000000000570e         mov        eax, 0x1
0000000000005713         test       rdx, rdx
0000000000005716         je         loc_5735

0000000000005718         lea        rdi, qword [aMemoryExhauste+17]             ; 0x6480
000000000000571f         mov        ecx, 0x2
0000000000005724         mov        rsi, rdx
0000000000005727         rep  cmpsb byte [rsi], byte [rdi]
0000000000005729         seta       cl
000000000000572c         sbb        cl, 0x0
000000000000572f         xor        eax, eax
0000000000005731         test       cl, cl
0000000000005733         jne        loc_5740

                     loc_5735:
0000000000005735         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
0000000000005739         ret
                        ; endp
000000000000573a         align      64

                     loc_5740:
0000000000005740         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
0000000000005747         mov        ecx, 0x6
000000000000574c         mov        rsi, rdx
000000000000574f         rep  cmpsb byte [rsi], byte [rdi]
0000000000005751         seta       al
0000000000005754         sbb        al, 0x0
0000000000005756         test       al, al
0000000000005758         setne      al
000000000000575b         add        rsp, 0x8
000000000000575f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000005760         sub        rsp, 0x8                                    ; End of unwind block (FDE at 0x7424), Begin of unwind block (FDE at 0x7444), CODE XREF=gettext_quote.part.1+11
0000000000005764         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000005769         call       j_nl_langinfo                               ; nl_langinfo
000000000000576e         test       rax, rax
0000000000005771         je         loc_5790

0000000000005773         cmp        byte [rax], 0x0
0000000000005776         lea        rdx, qword [aAscii]                         ; "ASCII"
000000000000577d         cmove      rax, rdx
0000000000005781         add        rsp, 0x8
0000000000005785         ret
                        ; endp
0000000000005786         align      16

                     loc_5790:
0000000000005790         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
0000000000005797         add        rsp, 0x8
000000000000579b         ret
                        ; endp
000000000000579c         align      32                                          ; End of unwind block (FDE at 0x7444)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
00000000000057a0         push       r15                                         ; Begin of unwind block (FDE at 0x7464), DATA XREF=_start+22
00000000000057a2         push       r14
00000000000057a4         mov        r15, rdx
00000000000057a7         push       r13
00000000000057a9         push       r12
00000000000057ab         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
00000000000057b2         push       rbp
00000000000057b3         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
00000000000057ba         push       rbx
00000000000057bb         mov        r13d, edi
00000000000057be         mov        r14, rsi
00000000000057c1         sub        rbp, r12
00000000000057c4         sub        rsp, 0x8
00000000000057c8         sar        rbp, 0x3
00000000000057cc         call       _init                                       ; _init
00000000000057d1         test       rbp, rbp
00000000000057d4         je         loc_57f6

00000000000057d6         xor        ebx, ebx
00000000000057d8         nop        dword [rax+rax]

                     loc_57e0:
00000000000057e0         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
00000000000057e3         mov        rsi, r14
00000000000057e6         mov        edi, r13d
00000000000057e9         call       qword [r12+rbx*8]
00000000000057ed         add        rbx, 0x1
00000000000057f1         cmp        rbp, rbx
00000000000057f4         jne        loc_57e0

                     loc_57f6:
00000000000057f6         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
00000000000057fa         pop        rbx
00000000000057fb         pop        rbp
00000000000057fc         pop        r12
00000000000057fe         pop        r13
0000000000005800         pop        r14
0000000000005802         pop        r15
0000000000005804         ret
                        ; endp
0000000000005805         align      16                                          ; End of unwind block (FDE at 0x7464)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
0000000000005810         ret                                                    ; Begin of unwind block (FDE at 0x74ac), DATA XREF=_start+15
                        ; endp
0000000000005812         align      32                                          ; End of unwind block (FDE at 0x74ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
0000000000005820         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0x74c4), __dso_handle, CODE XREF=main+98
0000000000005827         xor        esi, esi
0000000000005829         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
000000000000582e         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x74c4)
000000000000582f         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x5830; 0x5839[ (9 bytes)
        ; File offset : [22576; 22585[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
0000000000005830         sub        rsp, 0x8
0000000000005834         add        rsp, 0x8
0000000000005838         ret
                        ; endp
0000000000005839         db  0x00 ; '.'
000000000000583a         db  0x00 ; '.'
000000000000583b         db  0x00 ; '.'
000000000000583c         db  0x00 ; '.'
000000000000583d         db  0x00 ; '.'
000000000000583e         db  0x00 ; '.'
000000000000583f         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x5840; 0x648e[ (3150 bytes)
        ; File offset : [22592; 25742[ (3150 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
0000000000005840         db  0x01 ; '.'
0000000000005841         db  0x00 ; '.'
0000000000005842         db  0x02 ; '.'
0000000000005843         db  0x00 ; '.'
                     aTsort:
0000000000005844         db         "tsort", 0                                  ; DATA XREF=main+123, usage+268, usage+588, usage+772, usage+791, usage+825
000000000000584a         db  0x5b ; '['                                         ; DATA XREF=usage+280
000000000000584b         db  0x00 ; '.'
                     aTestInvocation:
000000000000584c         db         "test invocation", 0                        ; DATA XREF=usage+319
                     aMulticallInvoc:
000000000000585c         db         "Multi-call invocation", 0                  ; DATA XREF=usage+367
                     aSha224sum:
0000000000005872         db         "sha224sum", 0                              ; DATA XREF=usage+384
                     aSha2Utilities:
000000000000587c         db         "sha2 utilities", 0                         ; DATA XREF=usage+396
                     aSha256sum:
000000000000588b         db         "sha256sum", 0                              ; DATA XREF=usage+287
                     aSha384sum:
0000000000005895         db         "sha384sum", 0                              ; DATA XREF=usage+331
                     aSha512sum:
000000000000589f         db         "sha512sum", 0                              ; DATA XREF=usage+355
                     aNsOnlineHelpSn:
00000000000058a9         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+474
00000000000058c0         db  0x47 ; 'G'                                         ; DATA XREF=main+130, usage+502, usage+695, emit_bug_reporting_address+68
00000000000058c1         db  0x4e ; 'N'
00000000000058c2         db  0x55 ; 'U'
00000000000058c3         db  0x20 ; ' '
                     aCoreutils:
00000000000058c4         db         "coreutils", 0                              ; DATA XREF=main+67, main+79, usage+343
00000000000058ce         db  0x65 ; 'e'                                         ; DATA XREF=usage+541, usage+734
00000000000058cf         db  0x6e ; 'n'
00000000000058d0         db  0x5f ; '_'
00000000000058d1         db  0x00 ; '.'
                     aFullDocumentat:
00000000000058d2         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+569, usage+758
                     aUsrlocalsharel:
00000000000058ed         db         "/usr/local/share/locale", 0                ; DATA XREF=main+60
                     aMarkKettenis:
0000000000005905         db         "Mark Kettenis", 0                          ; DATA XREF=main+103
                     aExtraOperandS:
0000000000005913         db         "extra operand %s", 0                       ; DATA XREF=main+1808
0000000000005924         db  0x20 ; ' '                                         ; DATA XREF=main+340
0000000000005925         db  0x09 ; '.'
0000000000005926         db  0x0a ; '.'                                         ; DATA XREF=usage+169
0000000000005927         db  0x00 ; '.'                                         ; DATA XREF=main+43, usage+627, parse_gnu_standard_options_only+107
                     aCoreutils831sr:
0000000000005928         db         "../coreutils-8.31/src/tsort.c", 0          ; DATA XREF=main+1507, main+1716, main+1769, main+1864
                     aLen0:
0000000000005946         db         "len != 0", 0                               ; DATA XREF=main+1871
000000000000594f         db  0x72 ; 'r'                                         ; DATA XREF=main+1776
0000000000005950         db  0x6f ; 'o'
0000000000005951         db  0x6f ; 'o'
0000000000005952         db  0x74 ; 't'
0000000000005953         db  0x00 ; '.'
                     aStreqStrSstr:
0000000000005954         db         "!STREQ (str, s->str)", 0                   ; DATA XREF=main+1723
                     aStreqStrPstr:
0000000000005969         db         "!STREQ (str, p->str)", 0                   ; DATA XREF=main+1514
                     aSInputContains:
000000000000597e         db         "%s: input contains a loop:", 0             ; DATA XREF=main+1251
                     aStandardInput:
0000000000005999         db         "standard input", 0                         ; DATA XREF=main+1646
                     aTrySHelpForMor:
00000000000059a8         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
00000000000059cf         align      16
                     aUsageSOptionFi:
00000000000059d0         db         "Usage: %s [OPTION] [FILE]\nWrite totally ordered list consistent with the partial ordering in FILE.\n", 0 ; DATA XREF=usage+93
0000000000005a34         align      8
                     aNwithNoFileOrW:
0000000000005a38         db         "\nWith no FILE, or when FILE is -, read standard input.\n", 0 ; DATA XREF=usage+132
                     aHelpDisplayThi:
0000000000005a70         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+206
0000000000005a9d         align      32
                     aVersionOutputV:
0000000000005aa0         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+243
0000000000005ad6         align      8
                     aHttpswwwgnuorg:
0000000000005ad8         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+495, usage+595, usage+688, usage+798, emit_bug_reporting_address+61
                     aReportAnyTrans:
0000000000005b00         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+839
0000000000005b47         align      8
                     aOrAvailableLoc:
0000000000005b48         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+638
0000000000005b7b         align      128
                     aSInputContains_5b80:        // aSInputContains
0000000000005b80         db         "%s: input contains an odd number of tokens", 0 ; DATA XREF=main+1597
0000000000005bab         align      16
                     __PRETTY_FUNCTION__.6928:
0000000000005bb0         db         "search_item", 0                            ; DATA XREF=main+1500, main+1709, main+1762
                     __PRETTY_FUNCTION__.6982:
0000000000005bbc         db         "tsort", 0                                  ; DATA XREF=main+1857
                     a831:
0000000000005bc2         db         "8.31", 0                                   ; DATA XREF=Version
                     aWriteError:
0000000000005bc7         db         "write error", 0                            ; DATA XREF=close_stdout+67
                     aSS:
0000000000005bd3         db         "%s: %s", 0                                 ; DATA XREF=close_stdout+108
                     aDevnull:
0000000000005bda         db         "/dev/null", 0                              ; DATA XREF=protect_fd+4
0000000000005be4         db  0x2b ; '+'                                         ; DATA XREF=parse_long_options+183, parse_gnu_standard_options_only+114
0000000000005be5         db  0x00 ; '.'
                     aHelp:
0000000000005be6         db         "help", 0
                     aVersion:
0000000000005beb         db         "version", 0
0000000000005bf3         align      8
                     aANullArgv0WasP:
0000000000005bf8         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
0000000000005c30         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
0000000000005c38         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
0000000000005c39         db  0x74 ; 't'
0000000000005c3a         db  0x2d ; '-'                                         ; DATA XREF=main+200, main+1475
0000000000005c3b         db  0x00 ; '.'
0000000000005c3c         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
0000000000005c3d         db  0x80 ; '.'
0000000000005c3e         db  0x98 ; '.'
0000000000005c3f         db  0x00 ; '.'
0000000000005c40         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
0000000000005c41         db  0x80 ; '.'
0000000000005c42         db  0x99 ; '.'
0000000000005c43         db  0x00 ; '.'
0000000000005c44         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
0000000000005c45         db  0x07 ; '.'
0000000000005c46         db  0x65 ; 'e'
0000000000005c47         db  0x00 ; '.'
0000000000005c48         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
0000000000005c49         db  0xaf ; '.'
0000000000005c4a         db  0x00 ; '.'
0000000000005c4b         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_33a0+1451, sub_33a0+1493, sub_33a0+2429
0000000000005c4c         db  0x00 ; '.'
0000000000005c4d         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_33a0+132, sub_33a0+1338, sub_33a0+1670, sub_33a0+1697, sub_33a0+2352
0000000000005c4e         db  0x00 ; '.'
0000000000005c4f         db  0x60 ; '`'                                         ; DATA XREF=sub_33a0+1627, sub_33a0+1654
0000000000005c50         db  0x00 ; '.'
                     aLiteral:
0000000000005c51         db         "literal", 0
                     aShell:
0000000000005c59         db         "shell", 0
                     aShellalways:
0000000000005c5f         db         "shell-always", 0
0000000000005c6c         db  0x73 ; 's'
0000000000005c6d         db  0x68 ; 'h'
0000000000005c6e         db  0x65 ; 'e'
0000000000005c6f         db  0x6c ; 'l'
0000000000005c70         db  0x6c ; 'l'
0000000000005c71         db  0x2d ; '-'
                     aEscape:
0000000000005c72         db         "escape", 0
                     aShellescapealw:
0000000000005c79         db         "shell-escape-always", 0
                     aCmaybe:
0000000000005c8d         db         "c-maybe", 0
                     aClocale:
0000000000005c95         db         "clocale", 0
0000000000005c9d         align      32
                     switch_table_5ca0:        // switch_table
0000000000005ca0         dd         quotearg_buffer_restyled.loc_3a9a-switch_table_5ca0, quotearg_buffer_restyled.loc_2cf3-switch_table_5ca0, quotearg_buffer_restyled.loc_3cc8-switch_table_5ca0, quotearg_buffer_restyled.loc_3ad4-switch_table_5ca0 ; switch table used at 0x2cf1 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
0000000000005cb0         dd         quotearg_buffer_restyled.loc_38c4-switch_table_5ca0, quotearg_buffer_restyled.loc_3920-switch_table_5ca0, quotearg_buffer_restyled.loc_3975-switch_table_5ca0, quotearg_buffer_restyled.loc_39ba-switch_table_5ca0
0000000000005cc0         dd         3 dup (quotearg_buffer_restyled.loc_39f4-switch_table_5ca0)
0000000000005ccc         db  0xa4 ; '.'                                         ; DATA XREF=quotearg_buffer_restyled+477
0000000000005ccd         db  0xd3 ; '.'
0000000000005cce         db  0xff ; '.'
0000000000005ccf         db  0xff ; '.'
0000000000005cd0         db  0x8c ; '.'
0000000000005cd1         db  0xd4 ; '.'
0000000000005cd2         db  0xff ; '.'
0000000000005cd3         db  0xff ; '.'
0000000000005cd4         db  0x8c ; '.'
0000000000005cd5         db  0xd4 ; '.'
0000000000005cd6         db  0xff ; '.'
0000000000005cd7         db  0xff ; '.'
0000000000005cd8         db  0x8c ; '.'
0000000000005cd9         db  0xd4 ; '.'
0000000000005cda         db  0xff ; '.'
0000000000005cdb         db  0xff ; '.'
0000000000005cdc         db  0x8c ; '.'
0000000000005cdd         db  0xd4 ; '.'
0000000000005cde         db  0xff ; '.'
0000000000005cdf         db  0xff ; '.'
0000000000005ce0         db  0x8c ; '.'
0000000000005ce1         db  0xd4 ; '.'
0000000000005ce2         db  0xff ; '.'
0000000000005ce3         db  0xff ; '.'
0000000000005ce4         db  0x8c ; '.'
0000000000005ce5         db  0xd4 ; '.'
0000000000005ce6         db  0xff ; '.'
0000000000005ce7         db  0xff ; '.'
0000000000005ce8         db  0xe4 ; '.'
0000000000005ce9         db  0xd3 ; '.'
0000000000005cea         db  0xff ; '.'
0000000000005ceb         db  0xff ; '.'
0000000000005cec         db  0xec ; '.'
0000000000005ced         db  0xd2 ; '.'
0000000000005cee         db  0xff ; '.'
0000000000005cef         db  0xff ; '.'
0000000000005cf0         db  0xac ; '.'
0000000000005cf1         db  0xd2 ; '.'
0000000000005cf2         db  0xff ; '.'
0000000000005cf3         db  0xff ; '.'
0000000000005cf4         db  0x74 ; 't'
0000000000005cf5         db  0xd4 ; '.'
0000000000005cf6         db  0xff ; '.'
0000000000005cf7         db  0xff ; '.'
0000000000005cf8         db  0x64 ; 'd'
0000000000005cf9         db  0xd4 ; '.'
0000000000005cfa         db  0xff ; '.'
0000000000005cfb         db  0xff ; '.'
0000000000005cfc         db  0x54 ; 'T'
0000000000005cfd         db  0xd4 ; '.'
0000000000005cfe         db  0xff ; '.'
0000000000005cff         db  0xff ; '.'
0000000000005d00         db  0x44 ; 'D'
0000000000005d01         db  0xd4 ; '.'
0000000000005d02         db  0xff ; '.'
0000000000005d03         db  0xff ; '.'
0000000000005d04         db  0x8c ; '.'
0000000000005d05         db  0xd4 ; '.'
0000000000005d06         db  0xff ; '.'
0000000000005d07         db  0xff ; '.'
0000000000005d08         db  0x8c ; '.'
0000000000005d09         db  0xd4 ; '.'
0000000000005d0a         db  0xff ; '.'
0000000000005d0b         db  0xff ; '.'
0000000000005d0c         db  0x8c ; '.'
0000000000005d0d         db  0xd4 ; '.'
0000000000005d0e         db  0xff ; '.'
0000000000005d0f         db  0xff ; '.'
0000000000005d10         db  0x8c ; '.'
0000000000005d11         db  0xd4 ; '.'
0000000000005d12         db  0xff ; '.'
0000000000005d13         db  0xff ; '.'
0000000000005d14         db  0x8c ; '.'
0000000000005d15         db  0xd4 ; '.'
0000000000005d16         db  0xff ; '.'
0000000000005d17         db  0xff ; '.'
0000000000005d18         db  0x8c ; '.'
0000000000005d19         db  0xd4 ; '.'
0000000000005d1a         db  0xff ; '.'
0000000000005d1b         db  0xff ; '.'
0000000000005d1c         db  0x8c ; '.'
0000000000005d1d         db  0xd4 ; '.'
0000000000005d1e         db  0xff ; '.'
0000000000005d1f         db  0xff ; '.'
0000000000005d20         db  0x8c ; '.'
0000000000005d21         db  0xd4 ; '.'
0000000000005d22         db  0xff ; '.'
0000000000005d23         db  0xff ; '.'
0000000000005d24         db  0x8c ; '.'
0000000000005d25         db  0xd4 ; '.'
0000000000005d26         db  0xff ; '.'
0000000000005d27         db  0xff ; '.'
0000000000005d28         db  0x8c ; '.'
0000000000005d29         db  0xd4 ; '.'
0000000000005d2a         db  0xff ; '.'
0000000000005d2b         db  0xff ; '.'
0000000000005d2c         db  0x8c ; '.'
0000000000005d2d         db  0xd4 ; '.'
0000000000005d2e         db  0xff ; '.'
0000000000005d2f         db  0xff ; '.'
0000000000005d30         db  0x8c ; '.'
0000000000005d31         db  0xd4 ; '.'
0000000000005d32         db  0xff ; '.'
0000000000005d33         db  0xff ; '.'
0000000000005d34         db  0x8c ; '.'
0000000000005d35         db  0xd4 ; '.'
0000000000005d36         db  0xff ; '.'
0000000000005d37         db  0xff ; '.'
0000000000005d38         db  0x8c ; '.'
0000000000005d39         db  0xd4 ; '.'
0000000000005d3a         db  0xff ; '.'
0000000000005d3b         db  0xff ; '.'
0000000000005d3c         db  0x8c ; '.'
0000000000005d3d         db  0xd4 ; '.'
0000000000005d3e         db  0xff ; '.'
0000000000005d3f         db  0xff ; '.'
0000000000005d40         db  0x8c ; '.'
0000000000005d41         db  0xd4 ; '.'
0000000000005d42         db  0xff ; '.'
0000000000005d43         db  0xff ; '.'
0000000000005d44         db  0x8c ; '.'
0000000000005d45         db  0xd4 ; '.'
0000000000005d46         db  0xff ; '.'
0000000000005d47         db  0xff ; '.'
0000000000005d48         db  0x8c ; '.'
0000000000005d49         db  0xd4 ; '.'
0000000000005d4a         db  0xff ; '.'
0000000000005d4b         db  0xff ; '.'
0000000000005d4c         db  0x34 ; '4'
0000000000005d4d         db  0xd4 ; '.'
0000000000005d4e         db  0xff ; '.'
0000000000005d4f         db  0xff ; '.'
0000000000005d50         db  0x24 ; '$'
0000000000005d51         db  0xd4 ; '.'
0000000000005d52         db  0xff ; '.'
0000000000005d53         db  0xff ; '.'
0000000000005d54         db  0x24 ; '$'
0000000000005d55         db  0xd4 ; '.'
0000000000005d56         db  0xff ; '.'
0000000000005d57         db  0xff ; '.'
0000000000005d58         db  0xf4 ; '.'
0000000000005d59         db  0xd3 ; '.'
0000000000005d5a         db  0xff ; '.'
0000000000005d5b         db  0xff ; '.'
0000000000005d5c         db  0x24 ; '$'
0000000000005d5d         db  0xd4 ; '.'
0000000000005d5e         db  0xff ; '.'
0000000000005d5f         db  0xff ; '.'
0000000000005d60         db  0xcc ; '.'
0000000000005d61         db  0xd3 ; '.'
0000000000005d62         db  0xff ; '.'
0000000000005d63         db  0xff ; '.'
0000000000005d64         db  0x24 ; '$'
0000000000005d65         db  0xd4 ; '.'
0000000000005d66         db  0xff ; '.'
0000000000005d67         db  0xff ; '.'
0000000000005d68         db  0x87 ; '.'
0000000000005d69         db  0xd2 ; '.'
0000000000005d6a         db  0xff ; '.'
0000000000005d6b         db  0xff ; '.'
0000000000005d6c         db  0x24 ; '$'
0000000000005d6d         db  0xd4 ; '.'
0000000000005d6e         db  0xff ; '.'
0000000000005d6f         db  0xff ; '.'
0000000000005d70         db  0x24 ; '$'
0000000000005d71         db  0xd4 ; '.'
0000000000005d72         db  0xff ; '.'
0000000000005d73         db  0xff ; '.'
0000000000005d74         db  0x24 ; '$'
0000000000005d75         db  0xd4 ; '.'
0000000000005d76         db  0xff ; '.'
0000000000005d77         db  0xff ; '.'
0000000000005d78         db  0xcc ; '.'
0000000000005d79         db  0xd3 ; '.'
0000000000005d7a         db  0xff ; '.'
0000000000005d7b         db  0xff ; '.'
0000000000005d7c         db  0xcc ; '.'
0000000000005d7d         db  0xd3 ; '.'
0000000000005d7e         db  0xff ; '.'
0000000000005d7f         db  0xff ; '.'
0000000000005d80         db  0xcc ; '.'
0000000000005d81         db  0xd3 ; '.'
0000000000005d82         db  0xff ; '.'
0000000000005d83         db  0xff ; '.'
0000000000005d84         db  0xcc ; '.'
0000000000005d85         db  0xd3 ; '.'
0000000000005d86         db  0xff ; '.'
0000000000005d87         db  0xff ; '.'
0000000000005d88         db  0xcc ; '.'
0000000000005d89         db  0xd3 ; '.'
0000000000005d8a         db  0xff ; '.'
0000000000005d8b         db  0xff ; '.'
0000000000005d8c         db  0xcc ; '.'
0000000000005d8d         db  0xd3 ; '.'
0000000000005d8e         db  0xff ; '.'
0000000000005d8f         db  0xff ; '.'
0000000000005d90         db  0xcc ; '.'
0000000000005d91         db  0xd3 ; '.'
0000000000005d92         db  0xff ; '.'
0000000000005d93         db  0xff ; '.'
0000000000005d94         db  0xcc ; '.'
0000000000005d95         db  0xd3 ; '.'
0000000000005d96         db  0xff ; '.'
0000000000005d97         db  0xff ; '.'
0000000000005d98         db  0xcc ; '.'
0000000000005d99         db  0xd3 ; '.'
0000000000005d9a         db  0xff ; '.'
0000000000005d9b         db  0xff ; '.'
0000000000005d9c         db  0xcc ; '.'
0000000000005d9d         db  0xd3 ; '.'
0000000000005d9e         db  0xff ; '.'
0000000000005d9f         db  0xff ; '.'
0000000000005da0         db  0xcc ; '.'
0000000000005da1         db  0xd3 ; '.'
0000000000005da2         db  0xff ; '.'
0000000000005da3         db  0xff ; '.'
0000000000005da4         db  0xcc ; '.'
0000000000005da5         db  0xd3 ; '.'
0000000000005da6         db  0xff ; '.'
0000000000005da7         db  0xff ; '.'
0000000000005da8         db  0xcc ; '.'
0000000000005da9         db  0xd3 ; '.'
0000000000005daa         db  0xff ; '.'
0000000000005dab         db  0xff ; '.'
0000000000005dac         db  0xcc ; '.'
0000000000005dad         db  0xd3 ; '.'
0000000000005dae         db  0xff ; '.'
0000000000005daf         db  0xff ; '.'
0000000000005db0         db  0xcc ; '.'
0000000000005db1         db  0xd3 ; '.'
0000000000005db2         db  0xff ; '.'
0000000000005db3         db  0xff ; '.'
0000000000005db4         db  0xcc ; '.'
0000000000005db5         db  0xd3 ; '.'
0000000000005db6         db  0xff ; '.'
0000000000005db7         db  0xff ; '.'
0000000000005db8         db  0x24 ; '$'
0000000000005db9         db  0xd4 ; '.'
0000000000005dba         db  0xff ; '.'
0000000000005dbb         db  0xff ; '.'
0000000000005dbc         db  0x24 ; '$'
0000000000005dbd         db  0xd4 ; '.'
0000000000005dbe         db  0xff ; '.'
0000000000005dbf         db  0xff ; '.'
0000000000005dc0         db  0x24 ; '$'
0000000000005dc1         db  0xd4 ; '.'
0000000000005dc2         db  0xff ; '.'
0000000000005dc3         db  0xff ; '.'
0000000000005dc4         db  0x24 ; '$'
0000000000005dc5         db  0xd4 ; '.'
0000000000005dc6         db  0xff ; '.'
0000000000005dc7         db  0xff ; '.'
0000000000005dc8         db  0x57 ; 'W'
0000000000005dc9         db  0xd2 ; '.'
0000000000005dca         db  0xff ; '.'
0000000000005dcb         db  0xff ; '.'
0000000000005dcc         db  0x8c ; '.'
0000000000005dcd         db  0xd4 ; '.'
0000000000005dce         db  0xff ; '.'
0000000000005dcf         db  0xff ; '.'
0000000000005dd0         db  0xcc ; '.'
0000000000005dd1         db  0xd3 ; '.'
0000000000005dd2         db  0xff ; '.'
0000000000005dd3         db  0xff ; '.'
0000000000005dd4         db  0xcc ; '.'
0000000000005dd5         db  0xd3 ; '.'
0000000000005dd6         db  0xff ; '.'
0000000000005dd7         db  0xff ; '.'
0000000000005dd8         db  0xcc ; '.'
0000000000005dd9         db  0xd3 ; '.'
0000000000005dda         db  0xff ; '.'
0000000000005ddb         db  0xff ; '.'
0000000000005ddc         db  0xcc ; '.'
0000000000005ddd         db  0xd3 ; '.'
0000000000005dde         db  0xff ; '.'
0000000000005ddf         db  0xff ; '.'
0000000000005de0         db  0xcc ; '.'
0000000000005de1         db  0xd3 ; '.'
0000000000005de2         db  0xff ; '.'
0000000000005de3         db  0xff ; '.'
0000000000005de4         db  0xcc ; '.'
0000000000005de5         db  0xd3 ; '.'
0000000000005de6         db  0xff ; '.'
0000000000005de7         db  0xff ; '.'
0000000000005de8         db  0xcc ; '.'
0000000000005de9         db  0xd3 ; '.'
0000000000005dea         db  0xff ; '.'
0000000000005deb         db  0xff ; '.'
0000000000005dec         db  0xcc ; '.'
0000000000005ded         db  0xd3 ; '.'
0000000000005dee         db  0xff ; '.'
0000000000005def         db  0xff ; '.'
0000000000005df0         db  0xcc ; '.'
0000000000005df1         db  0xd3 ; '.'
0000000000005df2         db  0xff ; '.'
0000000000005df3         db  0xff ; '.'
0000000000005df4         db  0xcc ; '.'
0000000000005df5         db  0xd3 ; '.'
0000000000005df6         db  0xff ; '.'
0000000000005df7         db  0xff ; '.'
0000000000005df8         db  0xcc ; '.'
0000000000005df9         db  0xd3 ; '.'
0000000000005dfa         db  0xff ; '.'
0000000000005dfb         db  0xff ; '.'
0000000000005dfc         db  0xcc ; '.'
0000000000005dfd         db  0xd3 ; '.'
0000000000005dfe         db  0xff ; '.'
0000000000005dff         db  0xff ; '.'
0000000000005e00         db  0xcc ; '.'
0000000000005e01         db  0xd3 ; '.'
0000000000005e02         db  0xff ; '.'
0000000000005e03         db  0xff ; '.'
0000000000005e04         db  0xcc ; '.'
0000000000005e05         db  0xd3 ; '.'
0000000000005e06         db  0xff ; '.'
0000000000005e07         db  0xff ; '.'
0000000000005e08         db  0xcc ; '.'
0000000000005e09         db  0xd3 ; '.'
0000000000005e0a         db  0xff ; '.'
0000000000005e0b         db  0xff ; '.'
0000000000005e0c         db  0xcc ; '.'
0000000000005e0d         db  0xd3 ; '.'
0000000000005e0e         db  0xff ; '.'
0000000000005e0f         db  0xff ; '.'
0000000000005e10         db  0xcc ; '.'
0000000000005e11         db  0xd3 ; '.'
0000000000005e12         db  0xff ; '.'
0000000000005e13         db  0xff ; '.'
0000000000005e14         db  0xcc ; '.'
0000000000005e15         db  0xd3 ; '.'
0000000000005e16         db  0xff ; '.'
0000000000005e17         db  0xff ; '.'
0000000000005e18         db  0xcc ; '.'
0000000000005e19         db  0xd3 ; '.'
0000000000005e1a         db  0xff ; '.'
0000000000005e1b         db  0xff ; '.'
0000000000005e1c         db  0xcc ; '.'
0000000000005e1d         db  0xd3 ; '.'
0000000000005e1e         db  0xff ; '.'
0000000000005e1f         db  0xff ; '.'
0000000000005e20         db  0xcc ; '.'
0000000000005e21         db  0xd3 ; '.'
0000000000005e22         db  0xff ; '.'
0000000000005e23         db  0xff ; '.'
0000000000005e24         db  0xcc ; '.'
0000000000005e25         db  0xd3 ; '.'
0000000000005e26         db  0xff ; '.'
0000000000005e27         db  0xff ; '.'
0000000000005e28         db  0xcc ; '.'
0000000000005e29         db  0xd3 ; '.'
0000000000005e2a         db  0xff ; '.'
0000000000005e2b         db  0xff ; '.'
0000000000005e2c         db  0xcc ; '.'
0000000000005e2d         db  0xd3 ; '.'
0000000000005e2e         db  0xff ; '.'
0000000000005e2f         db  0xff ; '.'
0000000000005e30         db  0xcc ; '.'
0000000000005e31         db  0xd3 ; '.'
0000000000005e32         db  0xff ; '.'
0000000000005e33         db  0xff ; '.'
0000000000005e34         db  0xcc ; '.'
0000000000005e35         db  0xd3 ; '.'
0000000000005e36         db  0xff ; '.'
0000000000005e37         db  0xff ; '.'
0000000000005e38         db  0x24 ; '$'
0000000000005e39         db  0xd4 ; '.'
0000000000005e3a         db  0xff ; '.'
0000000000005e3b         db  0xff ; '.'
0000000000005e3c         db  0xfc ; '.'
0000000000005e3d         db  0xd2 ; '.'
0000000000005e3e         db  0xff ; '.'
0000000000005e3f         db  0xff ; '.'
0000000000005e40         db  0xcc ; '.'
0000000000005e41         db  0xd3 ; '.'
0000000000005e42         db  0xff ; '.'
0000000000005e43         db  0xff ; '.'
0000000000005e44         db  0x24 ; '$'
0000000000005e45         db  0xd4 ; '.'
0000000000005e46         db  0xff ; '.'
0000000000005e47         db  0xff ; '.'
0000000000005e48         db  0xcc ; '.'
0000000000005e49         db  0xd3 ; '.'
0000000000005e4a         db  0xff ; '.'
0000000000005e4b         db  0xff ; '.'
0000000000005e4c         db  0x24 ; '$'
0000000000005e4d         db  0xd4 ; '.'
0000000000005e4e         db  0xff ; '.'
0000000000005e4f         db  0xff ; '.'
0000000000005e50         db  0xcc ; '.'
0000000000005e51         db  0xd3 ; '.'
0000000000005e52         db  0xff ; '.'
0000000000005e53         db  0xff ; '.'
0000000000005e54         db  0xcc ; '.'
0000000000005e55         db  0xd3 ; '.'
0000000000005e56         db  0xff ; '.'
0000000000005e57         db  0xff ; '.'
0000000000005e58         db  0xcc ; '.'
0000000000005e59         db  0xd3 ; '.'
0000000000005e5a         db  0xff ; '.'
0000000000005e5b         db  0xff ; '.'
0000000000005e5c         db  0xcc ; '.'
0000000000005e5d         db  0xd3 ; '.'
0000000000005e5e         db  0xff ; '.'
0000000000005e5f         db  0xff ; '.'
0000000000005e60         db  0xcc ; '.'
0000000000005e61         db  0xd3 ; '.'
0000000000005e62         db  0xff ; '.'
0000000000005e63         db  0xff ; '.'
0000000000005e64         db  0xcc ; '.'
0000000000005e65         db  0xd3 ; '.'
0000000000005e66         db  0xff ; '.'
0000000000005e67         db  0xff ; '.'
0000000000005e68         db  0xcc ; '.'
0000000000005e69         db  0xd3 ; '.'
0000000000005e6a         db  0xff ; '.'
0000000000005e6b         db  0xff ; '.'
0000000000005e6c         db  0xcc ; '.'
0000000000005e6d         db  0xd3 ; '.'
0000000000005e6e         db  0xff ; '.'
0000000000005e6f         db  0xff ; '.'
0000000000005e70         db  0xcc ; '.'
0000000000005e71         db  0xd3 ; '.'
0000000000005e72         db  0xff ; '.'
0000000000005e73         db  0xff ; '.'
0000000000005e74         db  0xcc ; '.'
0000000000005e75         db  0xd3 ; '.'
0000000000005e76         db  0xff ; '.'
0000000000005e77         db  0xff ; '.'
0000000000005e78         db  0xcc ; '.'
0000000000005e79         db  0xd3 ; '.'
0000000000005e7a         db  0xff ; '.'
0000000000005e7b         db  0xff ; '.'
0000000000005e7c         db  0xcc ; '.'
0000000000005e7d         db  0xd3 ; '.'
0000000000005e7e         db  0xff ; '.'
0000000000005e7f         db  0xff ; '.'
0000000000005e80         db  0xcc ; '.'
0000000000005e81         db  0xd3 ; '.'
0000000000005e82         db  0xff ; '.'
0000000000005e83         db  0xff ; '.'
0000000000005e84         db  0xcc ; '.'
0000000000005e85         db  0xd3 ; '.'
0000000000005e86         db  0xff ; '.'
0000000000005e87         db  0xff ; '.'
0000000000005e88         db  0xcc ; '.'
0000000000005e89         db  0xd3 ; '.'
0000000000005e8a         db  0xff ; '.'
0000000000005e8b         db  0xff ; '.'
0000000000005e8c         db  0xcc ; '.'
0000000000005e8d         db  0xd3 ; '.'
0000000000005e8e         db  0xff ; '.'
0000000000005e8f         db  0xff ; '.'
0000000000005e90         db  0xcc ; '.'
0000000000005e91         db  0xd3 ; '.'
0000000000005e92         db  0xff ; '.'
0000000000005e93         db  0xff ; '.'
0000000000005e94         db  0xcc ; '.'
0000000000005e95         db  0xd3 ; '.'
0000000000005e96         db  0xff ; '.'
0000000000005e97         db  0xff ; '.'
0000000000005e98         db  0xcc ; '.'
0000000000005e99         db  0xd3 ; '.'
0000000000005e9a         db  0xff ; '.'
0000000000005e9b         db  0xff ; '.'
0000000000005e9c         db  0xcc ; '.'
0000000000005e9d         db  0xd3 ; '.'
0000000000005e9e         db  0xff ; '.'
0000000000005e9f         db  0xff ; '.'
0000000000005ea0         db  0xcc ; '.'
0000000000005ea1         db  0xd3 ; '.'
0000000000005ea2         db  0xff ; '.'
0000000000005ea3         db  0xff ; '.'
0000000000005ea4         db  0xcc ; '.'
0000000000005ea5         db  0xd3 ; '.'
0000000000005ea6         db  0xff ; '.'
0000000000005ea7         db  0xff ; '.'
0000000000005ea8         db  0xcc ; '.'
0000000000005ea9         db  0xd3 ; '.'
0000000000005eaa         db  0xff ; '.'
0000000000005eab         db  0xff ; '.'
0000000000005eac         db  0xcc ; '.'
0000000000005ead         db  0xd3 ; '.'
0000000000005eae         db  0xff ; '.'
0000000000005eaf         db  0xff ; '.'
0000000000005eb0         db  0xcc ; '.'
0000000000005eb1         db  0xd3 ; '.'
0000000000005eb2         db  0xff ; '.'
0000000000005eb3         db  0xff ; '.'
0000000000005eb4         db  0xcc ; '.'
0000000000005eb5         db  0xd3 ; '.'
0000000000005eb6         db  0xff ; '.'
0000000000005eb7         db  0xff ; '.'
0000000000005eb8         db  0x87 ; '.'
0000000000005eb9         db  0xd1 ; '.'
0000000000005eba         db  0xff ; '.'
0000000000005ebb         db  0xff ; '.'
0000000000005ebc         db  0x24 ; '$'
0000000000005ebd         db  0xd4 ; '.'
0000000000005ebe         db  0xff ; '.'
0000000000005ebf         db  0xff ; '.'
0000000000005ec0         db  0x87 ; '.'
0000000000005ec1         db  0xd1 ; '.'
0000000000005ec2         db  0xff ; '.'
0000000000005ec3         db  0xff ; '.'
0000000000005ec4         db  0xf4 ; '.'
0000000000005ec5         db  0xd3 ; '.'
0000000000005ec6         db  0xff ; '.'
0000000000005ec7         db  0xff ; '.'
0000000000005ec8         db  0x78 ; 'x'                                         ; DATA XREF=sub_3140+137
0000000000005ec9         db  0xd3 ; '.'
0000000000005eca         db  0xff ; '.'
0000000000005ecb         db  0xff ; '.'
0000000000005ecc         db  0x88 ; '.'
0000000000005ecd         db  0xd2 ; '.'
0000000000005ece         db  0xff ; '.'
0000000000005ecf         db  0xff ; '.'
0000000000005ed0         db  0x88 ; '.'
0000000000005ed1         db  0xd2 ; '.'
0000000000005ed2         db  0xff ; '.'
0000000000005ed3         db  0xff ; '.'
0000000000005ed4         db  0x88 ; '.'
0000000000005ed5         db  0xd2 ; '.'
0000000000005ed6         db  0xff ; '.'
0000000000005ed7         db  0xff ; '.'
0000000000005ed8         db  0x88 ; '.'
0000000000005ed9         db  0xd2 ; '.'
0000000000005eda         db  0xff ; '.'
0000000000005edb         db  0xff ; '.'
0000000000005edc         db  0x88 ; '.'
0000000000005edd         db  0xd2 ; '.'
0000000000005ede         db  0xff ; '.'
0000000000005edf         db  0xff ; '.'
0000000000005ee0         db  0x88 ; '.'
0000000000005ee1         db  0xd2 ; '.'
0000000000005ee2         db  0xff ; '.'
0000000000005ee3         db  0xff ; '.'
0000000000005ee4         db  0x68 ; 'h'
0000000000005ee5         db  0xd3 ; '.'
0000000000005ee6         db  0xff ; '.'
0000000000005ee7         db  0xff ; '.'
0000000000005ee8         db  0xb8 ; '.'
0000000000005ee9         db  0xd4 ; '.'
0000000000005eea         db  0xff ; '.'
0000000000005eeb         db  0xff ; '.'
0000000000005eec         db  0xa0 ; '.'
0000000000005eed         db  0xd4 ; '.'
0000000000005eee         db  0xff ; '.'
0000000000005eef         db  0xff ; '.'
0000000000005ef0         db  0x50 ; 'P'
0000000000005ef1         db  0xd3 ; '.'
0000000000005ef2         db  0xff ; '.'
0000000000005ef3         db  0xff ; '.'
0000000000005ef4         db  0x90 ; '.'
0000000000005ef5         db  0xd4 ; '.'
0000000000005ef6         db  0xff ; '.'
0000000000005ef7         db  0xff ; '.'
0000000000005ef8         db  0x38 ; '8'
0000000000005ef9         db  0xd3 ; '.'
0000000000005efa         db  0xff ; '.'
0000000000005efb         db  0xff ; '.'
0000000000005efc         db  0x78 ; 'x'
0000000000005efd         db  0xd4 ; '.'
0000000000005efe         db  0xff ; '.'
0000000000005eff         db  0xff ; '.'
0000000000005f00         db  0x88 ; '.'
0000000000005f01         db  0xd2 ; '.'
0000000000005f02         db  0xff ; '.'
0000000000005f03         db  0xff ; '.'
0000000000005f04         db  0x88 ; '.'
0000000000005f05         db  0xd2 ; '.'
0000000000005f06         db  0xff ; '.'
0000000000005f07         db  0xff ; '.'
0000000000005f08         db  0x88 ; '.'
0000000000005f09         db  0xd2 ; '.'
0000000000005f0a         db  0xff ; '.'
0000000000005f0b         db  0xff ; '.'
0000000000005f0c         db  0x88 ; '.'
0000000000005f0d         db  0xd2 ; '.'
0000000000005f0e         db  0xff ; '.'
0000000000005f0f         db  0xff ; '.'
0000000000005f10         db  0x88 ; '.'
0000000000005f11         db  0xd2 ; '.'
0000000000005f12         db  0xff ; '.'
0000000000005f13         db  0xff ; '.'
0000000000005f14         db  0x88 ; '.'
0000000000005f15         db  0xd2 ; '.'
0000000000005f16         db  0xff ; '.'
0000000000005f17         db  0xff ; '.'
0000000000005f18         db  0x88 ; '.'
0000000000005f19         db  0xd2 ; '.'
0000000000005f1a         db  0xff ; '.'
0000000000005f1b         db  0xff ; '.'
0000000000005f1c         db  0x88 ; '.'
0000000000005f1d         db  0xd2 ; '.'
0000000000005f1e         db  0xff ; '.'
0000000000005f1f         db  0xff ; '.'
0000000000005f20         db  0x88 ; '.'
0000000000005f21         db  0xd2 ; '.'
0000000000005f22         db  0xff ; '.'
0000000000005f23         db  0xff ; '.'
0000000000005f24         db  0x88 ; '.'
0000000000005f25         db  0xd2 ; '.'
0000000000005f26         db  0xff ; '.'
0000000000005f27         db  0xff ; '.'
0000000000005f28         db  0x88 ; '.'
0000000000005f29         db  0xd2 ; '.'
0000000000005f2a         db  0xff ; '.'
0000000000005f2b         db  0xff ; '.'
0000000000005f2c         db  0x88 ; '.'
0000000000005f2d         db  0xd2 ; '.'
0000000000005f2e         db  0xff ; '.'
0000000000005f2f         db  0xff ; '.'
0000000000005f30         db  0x88 ; '.'
0000000000005f31         db  0xd2 ; '.'
0000000000005f32         db  0xff ; '.'
0000000000005f33         db  0xff ; '.'
0000000000005f34         db  0x88 ; '.'
0000000000005f35         db  0xd2 ; '.'
0000000000005f36         db  0xff ; '.'
0000000000005f37         db  0xff ; '.'
0000000000005f38         db  0x88 ; '.'
0000000000005f39         db  0xd2 ; '.'
0000000000005f3a         db  0xff ; '.'
0000000000005f3b         db  0xff ; '.'
0000000000005f3c         db  0x88 ; '.'
0000000000005f3d         db  0xd2 ; '.'
0000000000005f3e         db  0xff ; '.'
0000000000005f3f         db  0xff ; '.'
0000000000005f40         db  0x88 ; '.'
0000000000005f41         db  0xd2 ; '.'
0000000000005f42         db  0xff ; '.'
0000000000005f43         db  0xff ; '.'
0000000000005f44         db  0x88 ; '.'
0000000000005f45         db  0xd2 ; '.'
0000000000005f46         db  0xff ; '.'
0000000000005f47         db  0xff ; '.'
0000000000005f48         db  0x60 ; '`'
0000000000005f49         db  0xd4 ; '.'
0000000000005f4a         db  0xff ; '.'
0000000000005f4b         db  0xff ; '.'
0000000000005f4c         db  0x48 ; 'H'
0000000000005f4d         db  0xd4 ; '.'
0000000000005f4e         db  0xff ; '.'
0000000000005f4f         db  0xff ; '.'
0000000000005f50         db  0x48 ; 'H'
0000000000005f51         db  0xd4 ; '.'
0000000000005f52         db  0xff ; '.'
0000000000005f53         db  0xff ; '.'
0000000000005f54         db  0x30 ; '0'
0000000000005f55         db  0xd4 ; '.'
0000000000005f56         db  0xff ; '.'
0000000000005f57         db  0xff ; '.'
0000000000005f58         db  0x48 ; 'H'
0000000000005f59         db  0xd4 ; '.'
0000000000005f5a         db  0xff ; '.'
0000000000005f5b         db  0xff ; '.'
0000000000005f5c         db  0x18 ; '.'
0000000000005f5d         db  0xd4 ; '.'
0000000000005f5e         db  0xff ; '.'
0000000000005f5f         db  0xff ; '.'
0000000000005f60         db  0x48 ; 'H'
0000000000005f61         db  0xd4 ; '.'
0000000000005f62         db  0xff ; '.'
0000000000005f63         db  0xff ; '.'
0000000000005f64         db  0x88 ; '.'
0000000000005f65         db  0xd0 ; '.'
0000000000005f66         db  0xff ; '.'
0000000000005f67         db  0xff ; '.'
0000000000005f68         db  0x48 ; 'H'
0000000000005f69         db  0xd4 ; '.'
0000000000005f6a         db  0xff ; '.'
0000000000005f6b         db  0xff ; '.'
0000000000005f6c         db  0x48 ; 'H'
0000000000005f6d         db  0xd4 ; '.'
0000000000005f6e         db  0xff ; '.'
0000000000005f6f         db  0xff ; '.'
0000000000005f70         db  0x48 ; 'H'
0000000000005f71         db  0xd4 ; '.'
0000000000005f72         db  0xff ; '.'
0000000000005f73         db  0xff ; '.'
0000000000005f74         db  0x18 ; '.'
0000000000005f75         db  0xd4 ; '.'
0000000000005f76         db  0xff ; '.'
0000000000005f77         db  0xff ; '.'
0000000000005f78         db  0x18 ; '.'
0000000000005f79         db  0xd4 ; '.'
0000000000005f7a         db  0xff ; '.'
0000000000005f7b         db  0xff ; '.'
0000000000005f7c         db  0x18 ; '.'
0000000000005f7d         db  0xd4 ; '.'
0000000000005f7e         db  0xff ; '.'
0000000000005f7f         db  0xff ; '.'
0000000000005f80         db  0x18 ; '.'
0000000000005f81         db  0xd4 ; '.'
0000000000005f82         db  0xff ; '.'
0000000000005f83         db  0xff ; '.'
0000000000005f84         db  0x18 ; '.'
0000000000005f85         db  0xd4 ; '.'
0000000000005f86         db  0xff ; '.'
0000000000005f87         db  0xff ; '.'
0000000000005f88         db  0x18 ; '.'
0000000000005f89         db  0xd4 ; '.'
0000000000005f8a         db  0xff ; '.'
0000000000005f8b         db  0xff ; '.'
0000000000005f8c         db  0x18 ; '.'
0000000000005f8d         db  0xd4 ; '.'
0000000000005f8e         db  0xff ; '.'
0000000000005f8f         db  0xff ; '.'
0000000000005f90         db  0x18 ; '.'
0000000000005f91         db  0xd4 ; '.'
0000000000005f92         db  0xff ; '.'
0000000000005f93         db  0xff ; '.'
0000000000005f94         db  0x18 ; '.'
0000000000005f95         db  0xd4 ; '.'
0000000000005f96         db  0xff ; '.'
0000000000005f97         db  0xff ; '.'
0000000000005f98         db  0x18 ; '.'
0000000000005f99         db  0xd4 ; '.'
0000000000005f9a         db  0xff ; '.'
0000000000005f9b         db  0xff ; '.'
0000000000005f9c         db  0x18 ; '.'
0000000000005f9d         db  0xd4 ; '.'
0000000000005f9e         db  0xff ; '.'
0000000000005f9f         db  0xff ; '.'
0000000000005fa0         db  0x18 ; '.'
0000000000005fa1         db  0xd4 ; '.'
0000000000005fa2         db  0xff ; '.'
0000000000005fa3         db  0xff ; '.'
0000000000005fa4         db  0x18 ; '.'
0000000000005fa5         db  0xd4 ; '.'
0000000000005fa6         db  0xff ; '.'
0000000000005fa7         db  0xff ; '.'
0000000000005fa8         db  0x18 ; '.'
0000000000005fa9         db  0xd4 ; '.'
0000000000005faa         db  0xff ; '.'
0000000000005fab         db  0xff ; '.'
0000000000005fac         db  0x18 ; '.'
0000000000005fad         db  0xd4 ; '.'
0000000000005fae         db  0xff ; '.'
0000000000005faf         db  0xff ; '.'
0000000000005fb0         db  0x18 ; '.'
0000000000005fb1         db  0xd4 ; '.'
0000000000005fb2         db  0xff ; '.'
0000000000005fb3         db  0xff ; '.'
0000000000005fb4         db  0x48 ; 'H'
0000000000005fb5         db  0xd4 ; '.'
0000000000005fb6         db  0xff ; '.'
0000000000005fb7         db  0xff ; '.'
0000000000005fb8         db  0x48 ; 'H'
0000000000005fb9         db  0xd4 ; '.'
0000000000005fba         db  0xff ; '.'
0000000000005fbb         db  0xff ; '.'
0000000000005fbc         db  0x48 ; 'H'
0000000000005fbd         db  0xd4 ; '.'
0000000000005fbe         db  0xff ; '.'
0000000000005fbf         db  0xff ; '.'
0000000000005fc0         db  0x48 ; 'H'
0000000000005fc1         db  0xd4 ; '.'
0000000000005fc2         db  0xff ; '.'
0000000000005fc3         db  0xff ; '.'
0000000000005fc4         db  0x58 ; 'X'
0000000000005fc5         db  0xd0 ; '.'
0000000000005fc6         db  0xff ; '.'
0000000000005fc7         db  0xff ; '.'
0000000000005fc8         db  0x88 ; '.'
0000000000005fc9         db  0xd2 ; '.'
0000000000005fca         db  0xff ; '.'
0000000000005fcb         db  0xff ; '.'
0000000000005fcc         db  0x18 ; '.'
0000000000005fcd         db  0xd4 ; '.'
0000000000005fce         db  0xff ; '.'
0000000000005fcf         db  0xff ; '.'
0000000000005fd0         db  0x18 ; '.'
0000000000005fd1         db  0xd4 ; '.'
0000000000005fd2         db  0xff ; '.'
0000000000005fd3         db  0xff ; '.'
0000000000005fd4         db  0x18 ; '.'
0000000000005fd5         db  0xd4 ; '.'
0000000000005fd6         db  0xff ; '.'
0000000000005fd7         db  0xff ; '.'
0000000000005fd8         db  0x18 ; '.'
0000000000005fd9         db  0xd4 ; '.'
0000000000005fda         db  0xff ; '.'
0000000000005fdb         db  0xff ; '.'
0000000000005fdc         db  0x18 ; '.'
0000000000005fdd         db  0xd4 ; '.'
0000000000005fde         db  0xff ; '.'
0000000000005fdf         db  0xff ; '.'
0000000000005fe0         db  0x18 ; '.'
0000000000005fe1         db  0xd4 ; '.'
0000000000005fe2         db  0xff ; '.'
0000000000005fe3         db  0xff ; '.'
0000000000005fe4         db  0x18 ; '.'
0000000000005fe5         db  0xd4 ; '.'
0000000000005fe6         db  0xff ; '.'
0000000000005fe7         db  0xff ; '.'
0000000000005fe8         db  0x18 ; '.'
0000000000005fe9         db  0xd4 ; '.'
0000000000005fea         db  0xff ; '.'
0000000000005feb         db  0xff ; '.'
0000000000005fec         db  0x18 ; '.'
0000000000005fed         db  0xd4 ; '.'
0000000000005fee         db  0xff ; '.'
0000000000005fef         db  0xff ; '.'
0000000000005ff0         db  0x18 ; '.'
0000000000005ff1         db  0xd4 ; '.'
0000000000005ff2         db  0xff ; '.'
0000000000005ff3         db  0xff ; '.'
0000000000005ff4         db  0x18 ; '.'
0000000000005ff5         db  0xd4 ; '.'
0000000000005ff6         db  0xff ; '.'
0000000000005ff7         db  0xff ; '.'
0000000000005ff8         db  0x18 ; '.'
0000000000005ff9         db  0xd4 ; '.'
0000000000005ffa         db  0xff ; '.'
0000000000005ffb         db  0xff ; '.'
0000000000005ffc         db  0x18 ; '.'
0000000000005ffd         db  0xd4 ; '.'
0000000000005ffe         db  0xff ; '.'
0000000000005fff         db  0xff ; '.'
0000000000006000         db  0x18 ; '.'
0000000000006001         db  0xd4 ; '.'
0000000000006002         db  0xff ; '.'
0000000000006003         db  0xff ; '.'
0000000000006004         db  0x18 ; '.'
0000000000006005         db  0xd4 ; '.'
0000000000006006         db  0xff ; '.'
0000000000006007         db  0xff ; '.'
0000000000006008         db  0x18 ; '.'
0000000000006009         db  0xd4 ; '.'
000000000000600a         db  0xff ; '.'
000000000000600b         db  0xff ; '.'
000000000000600c         db  0x18 ; '.'
000000000000600d         db  0xd4 ; '.'
000000000000600e         db  0xff ; '.'
000000000000600f         db  0xff ; '.'
0000000000006010         db  0x18 ; '.'
0000000000006011         db  0xd4 ; '.'
0000000000006012         db  0xff ; '.'
0000000000006013         db  0xff ; '.'
0000000000006014         db  0x18 ; '.'
0000000000006015         db  0xd4 ; '.'
0000000000006016         db  0xff ; '.'
0000000000006017         db  0xff ; '.'
0000000000006018         db  0x18 ; '.'
0000000000006019         db  0xd4 ; '.'
000000000000601a         db  0xff ; '.'
000000000000601b         db  0xff ; '.'
000000000000601c         db  0x18 ; '.'
000000000000601d         db  0xd4 ; '.'
000000000000601e         db  0xff ; '.'
000000000000601f         db  0xff ; '.'
0000000000006020         db  0x18 ; '.'
0000000000006021         db  0xd4 ; '.'
0000000000006022         db  0xff ; '.'
0000000000006023         db  0xff ; '.'
0000000000006024         db  0x18 ; '.'
0000000000006025         db  0xd4 ; '.'
0000000000006026         db  0xff ; '.'
0000000000006027         db  0xff ; '.'
0000000000006028         db  0x18 ; '.'
0000000000006029         db  0xd4 ; '.'
000000000000602a         db  0xff ; '.'
000000000000602b         db  0xff ; '.'
000000000000602c         db  0x18 ; '.'
000000000000602d         db  0xd4 ; '.'
000000000000602e         db  0xff ; '.'
000000000000602f         db  0xff ; '.'
0000000000006030         db  0x18 ; '.'
0000000000006031         db  0xd4 ; '.'
0000000000006032         db  0xff ; '.'
0000000000006033         db  0xff ; '.'
0000000000006034         db  0x48 ; 'H'
0000000000006035         db  0xd4 ; '.'
0000000000006036         db  0xff ; '.'
0000000000006037         db  0xff ; '.'
0000000000006038         db  0x18 ; '.'
0000000000006039         db  0xd3 ; '.'
000000000000603a         db  0xff ; '.'
000000000000603b         db  0xff ; '.'
000000000000603c         db  0x18 ; '.'
000000000000603d         db  0xd4 ; '.'
000000000000603e         db  0xff ; '.'
000000000000603f         db  0xff ; '.'
0000000000006040         db  0x48 ; 'H'
0000000000006041         db  0xd4 ; '.'
0000000000006042         db  0xff ; '.'
0000000000006043         db  0xff ; '.'
0000000000006044         db  0x18 ; '.'
0000000000006045         db  0xd4 ; '.'
0000000000006046         db  0xff ; '.'
0000000000006047         db  0xff ; '.'
0000000000006048         db  0x48 ; 'H'
0000000000006049         db  0xd4 ; '.'
000000000000604a         db  0xff ; '.'
000000000000604b         db  0xff ; '.'
000000000000604c         db  0x18 ; '.'
000000000000604d         db  0xd4 ; '.'
000000000000604e         db  0xff ; '.'
000000000000604f         db  0xff ; '.'
0000000000006050         db  0x18 ; '.'
0000000000006051         db  0xd4 ; '.'
0000000000006052         db  0xff ; '.'
0000000000006053         db  0xff ; '.'
0000000000006054         db  0x18 ; '.'
0000000000006055         db  0xd4 ; '.'
0000000000006056         db  0xff ; '.'
0000000000006057         db  0xff ; '.'
0000000000006058         db  0x18 ; '.'
0000000000006059         db  0xd4 ; '.'
000000000000605a         db  0xff ; '.'
000000000000605b         db  0xff ; '.'
000000000000605c         db  0x18 ; '.'
000000000000605d         db  0xd4 ; '.'
000000000000605e         db  0xff ; '.'
000000000000605f         db  0xff ; '.'
0000000000006060         db  0x18 ; '.'
0000000000006061         db  0xd4 ; '.'
0000000000006062         db  0xff ; '.'
0000000000006063         db  0xff ; '.'
0000000000006064         db  0x18 ; '.'
0000000000006065         db  0xd4 ; '.'
0000000000006066         db  0xff ; '.'
0000000000006067         db  0xff ; '.'
0000000000006068         db  0x18 ; '.'
0000000000006069         db  0xd4 ; '.'
000000000000606a         db  0xff ; '.'
000000000000606b         db  0xff ; '.'
000000000000606c         db  0x18 ; '.'
000000000000606d         db  0xd4 ; '.'
000000000000606e         db  0xff ; '.'
000000000000606f         db  0xff ; '.'
0000000000006070         db  0x18 ; '.'
0000000000006071         db  0xd4 ; '.'
0000000000006072         db  0xff ; '.'
0000000000006073         db  0xff ; '.'
0000000000006074         db  0x18 ; '.'
0000000000006075         db  0xd4 ; '.'
0000000000006076         db  0xff ; '.'
0000000000006077         db  0xff ; '.'
0000000000006078         db  0x18 ; '.'
0000000000006079         db  0xd4 ; '.'
000000000000607a         db  0xff ; '.'
000000000000607b         db  0xff ; '.'
000000000000607c         db  0x18 ; '.'
000000000000607d         db  0xd4 ; '.'
000000000000607e         db  0xff ; '.'
000000000000607f         db  0xff ; '.'
0000000000006080         db  0x18 ; '.'
0000000000006081         db  0xd4 ; '.'
0000000000006082         db  0xff ; '.'
0000000000006083         db  0xff ; '.'
0000000000006084         db  0x18 ; '.'
0000000000006085         db  0xd4 ; '.'
0000000000006086         db  0xff ; '.'
0000000000006087         db  0xff ; '.'
0000000000006088         db  0x18 ; '.'
0000000000006089         db  0xd4 ; '.'
000000000000608a         db  0xff ; '.'
000000000000608b         db  0xff ; '.'
000000000000608c         db  0x18 ; '.'
000000000000608d         db  0xd4 ; '.'
000000000000608e         db  0xff ; '.'
000000000000608f         db  0xff ; '.'
0000000000006090         db  0x18 ; '.'
0000000000006091         db  0xd4 ; '.'
0000000000006092         db  0xff ; '.'
0000000000006093         db  0xff ; '.'
0000000000006094         db  0x18 ; '.'
0000000000006095         db  0xd4 ; '.'
0000000000006096         db  0xff ; '.'
0000000000006097         db  0xff ; '.'
0000000000006098         db  0x18 ; '.'
0000000000006099         db  0xd4 ; '.'
000000000000609a         db  0xff ; '.'
000000000000609b         db  0xff ; '.'
000000000000609c         db  0x18 ; '.'
000000000000609d         db  0xd4 ; '.'
000000000000609e         db  0xff ; '.'
000000000000609f         db  0xff ; '.'
00000000000060a0         db  0x18 ; '.'
00000000000060a1         db  0xd4 ; '.'
00000000000060a2         db  0xff ; '.'
00000000000060a3         db  0xff ; '.'
00000000000060a4         db  0x18 ; '.'
00000000000060a5         db  0xd4 ; '.'
00000000000060a6         db  0xff ; '.'
00000000000060a7         db  0xff ; '.'
00000000000060a8         db  0x18 ; '.'
00000000000060a9         db  0xd4 ; '.'
00000000000060aa         db  0xff ; '.'
00000000000060ab         db  0xff ; '.'
00000000000060ac         db  0x18 ; '.'
00000000000060ad         db  0xd4 ; '.'
00000000000060ae         db  0xff ; '.'
00000000000060af         db  0xff ; '.'
00000000000060b0         db  0x18 ; '.'
00000000000060b1         db  0xd4 ; '.'
00000000000060b2         db  0xff ; '.'
00000000000060b3         db  0xff ; '.'
00000000000060b4         db  0x88 ; '.'
00000000000060b5         db  0xcf ; '.'
00000000000060b6         db  0xff ; '.'
00000000000060b7         db  0xff ; '.'
00000000000060b8         db  0x48 ; 'H'
00000000000060b9         db  0xd4 ; '.'
00000000000060ba         db  0xff ; '.'
00000000000060bb         db  0xff ; '.'
00000000000060bc         db  0x88 ; '.'
00000000000060bd         db  0xcf ; '.'
00000000000060be         db  0xff ; '.'
00000000000060bf         db  0xff ; '.'
00000000000060c0         db  0x30 ; '0'
00000000000060c1         db  0xd4 ; '.'
00000000000060c2         db  0xff ; '.'
00000000000060c3         db  0xff ; '.'
00000000000060c4         db  0x00 ; '.'
00000000000060c5         db  0x00 ; '.'
00000000000060c6         db  0x00 ; '.'
00000000000060c7         db  0x00 ; '.'
00000000000060c8         db  0x00 ; '.'
00000000000060c9         db  0x00 ; '.'
00000000000060ca         db  0x00 ; '.'
00000000000060cb         db  0x00 ; '.'
00000000000060cc         db  0x00 ; '.'
00000000000060cd         db  0x00 ; '.'
00000000000060ce         db  0x00 ; '.'
00000000000060cf         db  0x00 ; '.'
00000000000060d0         db  0x00 ; '.'
00000000000060d1         db  0x00 ; '.'
00000000000060d2         db  0x00 ; '.'
00000000000060d3         db  0x00 ; '.'
00000000000060d4         db  0x00 ; '.'
00000000000060d5         db  0x00 ; '.'
00000000000060d6         db  0x00 ; '.'
00000000000060d7         db  0x00 ; '.'
00000000000060d8         db  0x00 ; '.'
00000000000060d9         db  0x00 ; '.'
00000000000060da         db  0x00 ; '.'
00000000000060db         db  0x00 ; '.'
00000000000060dc         db  0x00 ; '.'
00000000000060dd         db  0x00 ; '.'
00000000000060de         db  0x00 ; '.'
00000000000060df         db  0x00 ; '.'
                     quoting_style_vals:
00000000000060e0         db  0x00 ; '.'
00000000000060e1         db  0x00 ; '.'
00000000000060e2         db  0x00 ; '.'
00000000000060e3         db  0x00 ; '.'
00000000000060e4         db  0x01 ; '.'
00000000000060e5         db  0x00 ; '.'
00000000000060e6         db  0x00 ; '.'
00000000000060e7         db  0x00 ; '.'
00000000000060e8         db  0x02 ; '.'
00000000000060e9         db  0x00 ; '.'
00000000000060ea         db  0x00 ; '.'
00000000000060eb         db  0x00 ; '.'
00000000000060ec         db  0x03 ; '.'
00000000000060ed         db  0x00 ; '.'
00000000000060ee         db  0x00 ; '.'
00000000000060ef         db  0x00 ; '.'
00000000000060f0         db  0x04 ; '.'
00000000000060f1         db  0x00 ; '.'
00000000000060f2         db  0x00 ; '.'
00000000000060f3         db  0x00 ; '.'
00000000000060f4         db  0x05 ; '.'
00000000000060f5         db  0x00 ; '.'
00000000000060f6         db  0x00 ; '.'
00000000000060f7         db  0x00 ; '.'
00000000000060f8         db  0x06 ; '.'
00000000000060f9         db  0x00 ; '.'
00000000000060fa         db  0x00 ; '.'
00000000000060fb         db  0x00 ; '.'
00000000000060fc         db  0x07 ; '.'
00000000000060fd         db  0x00 ; '.'
00000000000060fe         db  0x00 ; '.'
00000000000060ff         db  0x00 ; '.'
0000000000006100         db  0x08 ; '.'
0000000000006101         db  0x00 ; '.'
0000000000006102         db  0x00 ; '.'
0000000000006103         db  0x00 ; '.'
0000000000006104         db  0x09 ; '.'
0000000000006105         db  0x00 ; '.'
0000000000006106         db  0x00 ; '.'
0000000000006107         db  0x00 ; '.'
                     aSSSn:
0000000000006108         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
0000000000006114         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
000000000000611b         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
000000000000611c         db  0x43 ; 'C'
000000000000611d         db  0x29 ; ')'
000000000000611e         db  0x00 ; '.'
                     aWrittenBySn:
000000000000611f         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
000000000000612f         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
0000000000006146         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
0000000000006162         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
0000000000006177         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
000000000000618d         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
00000000000061a1         align      8
                     aNlicenseGplv3G:
00000000000061a8         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
0000000000006274         align      8
                     aWrittenBySSSna:
0000000000006278         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_6298:        // aWrittenBySSSns
0000000000006298         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
00000000000062bc         align      64
                     aWrittenBySSSns_62c0:        // aWrittenBySSSns
00000000000062c0         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_62e8:        // aWrittenBySSSns
00000000000062e8         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
0000000000006314         align      8
                     aWrittenBySSSns_6318:        // aWrittenBySSSns
0000000000006318         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
0000000000006348         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
000000000000637c         align      128
                     aWrittenBySSSns_6380:        // aWrittenBySSSns
0000000000006380         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
00000000000063bc         align      64
                     aGeneralHelpUsi:
00000000000063c0         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
0000000000006401         align      8
                     switch_table_6408:        // switch_table
0000000000006408         dd         version_etc_arn.loc_4d46-switch_table_6408, version_etc_arn.loc_4dd8-switch_table_6408, version_etc_arn.loc_4e18-switch_table_6408, version_etc_arn.loc_4e60-switch_table_6408 ; switch table used at 0x4cc4 containing 10 entries, DATA XREF=version_etc_arn+150
0000000000006418         dd         version_etc_arn.loc_4eb0-switch_table_6408, version_etc_arn.loc_4f08-switch_table_6408, version_etc_arn.loc_4f38-switch_table_6408, version_etc_arn.loc_4fa0-switch_table_6408
0000000000006428         dd         version_etc_arn.loc_4cd0-switch_table_6408, version_etc_arn.loc_4d80-switch_table_6408
0000000000006430         align      64
                     version_etc_copyright:
0000000000006440         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
000000000000646f         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
0000000000006480         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
0000000000006481         db  0x00 ; '.'
                     aPosix:
0000000000006482         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aAscii:
0000000000006488         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
000000000000648e         db  0x00 ; '.'
000000000000648f         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0x6490; 0x673c[ (684 bytes)
        ; File offset : [25744; 26428[ (684 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000006490         db  0x01 ; '.'
0000000000006491         db  0x1b ; '.'
0000000000006492         db  0x03 ; '.'
0000000000006493         db  0x3b ; ';'
0000000000006494         db  0xac ; '.'
0000000000006495         db  0x02 ; '.'
0000000000006496         db  0x00 ; '.'
0000000000006497         db  0x00 ; '.'
0000000000006498         db  0x54 ; 'T'
0000000000006499         db  0x00 ; '.'
000000000000649a         db  0x00 ; '.'
000000000000649b         db  0x00 ; '.'
000000000000649c         db  0x40 ; '@'
000000000000649d         db  0xaf ; '.'
000000000000649e         db  0xff ; '.'
000000000000649f         db  0xff ; '.'
00000000000064a0         db  0xf8 ; '.'
00000000000064a1         db  0x02 ; '.'
00000000000064a2         db  0x00 ; '.'
00000000000064a3         db  0x00 ; '.'
00000000000064a4         db  0x50 ; 'P'
00000000000064a5         db  0xb2 ; '.'
00000000000064a6         db  0xff ; '.'
00000000000064a7         db  0xff ; '.'
00000000000064a8         db  0x20 ; ' '
00000000000064a9         db  0x03 ; '.'
00000000000064aa         db  0x00 ; '.'
00000000000064ab         db  0x00 ; '.'
00000000000064ac         db  0x60 ; '`'
00000000000064ad         db  0xb2 ; '.'
00000000000064ae         db  0xff ; '.'
00000000000064af         db  0xff ; '.'
00000000000064b0         db  0x60 ; '`'
00000000000064b1         db  0x04 ; '.'
00000000000064b2         db  0x00 ; '.'
00000000000064b3         db  0x00 ; '.'
00000000000064b4         db  0xc0 ; '.'
00000000000064b5         db  0xb9 ; '.'
00000000000064b6         db  0xff ; '.'
00000000000064b7         db  0xff ; '.'
00000000000064b8         db  0xc8 ; '.'
00000000000064b9         db  0x02 ; '.'
00000000000064ba         db  0x00 ; '.'
00000000000064bb         db  0x00 ; '.'
00000000000064bc         db  0xd0 ; '.'
00000000000064bd         db  0xba ; '.'
00000000000064be         db  0xff ; '.'
00000000000064bf         db  0xff ; '.'
00000000000064c0         db  0x38 ; '8'
00000000000064c1         db  0x03 ; '.'
00000000000064c2         db  0x00 ; '.'
00000000000064c3         db  0x00 ; '.'
00000000000064c4         db  0xe0 ; '.'
00000000000064c5         db  0xba ; '.'
00000000000064c6         db  0xff ; '.'
00000000000064c7         db  0xff ; '.'
00000000000064c8         db  0x4c ; 'L'
00000000000064c9         db  0x03 ; '.'
00000000000064ca         db  0x00 ; '.'
00000000000064cb         db  0x00 ; '.'
00000000000064cc         db  0x50 ; 'P'
00000000000064cd         db  0xbb ; '.'
00000000000064ce         db  0xff ; '.'
00000000000064cf         db  0xff ; '.'
00000000000064d0         db  0x8c ; '.'
00000000000064d1         db  0x03 ; '.'
00000000000064d2         db  0x00 ; '.'
00000000000064d3         db  0x00 ; '.'
00000000000064d4         db  0xc0 ; '.'
00000000000064d5         db  0xbb ; '.'
00000000000064d6         db  0xff ; '.'
00000000000064d7         db  0xff ; '.'
00000000000064d8         db  0xb4 ; '.'
00000000000064d9         db  0x03 ; '.'
00000000000064da         db  0x00 ; '.'
00000000000064db         db  0x00 ; '.'
00000000000064dc         db  0x00 ; '.'
00000000000064dd         db  0xbc ; '.'
00000000000064de         db  0xff ; '.'
00000000000064df         db  0xff ; '.'
00000000000064e0         db  0xc8 ; '.'
00000000000064e1         db  0x03 ; '.'
00000000000064e2         db  0x00 ; '.'
00000000000064e3         db  0x00 ; '.'
00000000000064e4         db  0x40 ; '@'
00000000000064e5         db  0xbd ; '.'
00000000000064e6         db  0xff ; '.'
00000000000064e7         db  0xff ; '.'
00000000000064e8         db  0x34 ; '4'
00000000000064e9         db  0x04 ; '.'
00000000000064ea         db  0x00 ; '.'
00000000000064eb         db  0x00 ; '.'
00000000000064ec         db  0xb0 ; '.'
00000000000064ed         db  0xc0 ; '.'
00000000000064ee         db  0xff ; '.'
00000000000064ef         db  0xff ; '.'
00000000000064f0         db  0xc8 ; '.'
00000000000064f1         db  0x04 ; '.'
00000000000064f2         db  0x00 ; '.'
00000000000064f3         db  0x00 ; '.'
00000000000064f4         db  0xc0 ; '.'
00000000000064f5         db  0xc0 ; '.'
00000000000064f6         db  0xff ; '.'
00000000000064f7         db  0xff ; '.'
00000000000064f8         db  0xdc ; '.'
00000000000064f9         db  0x04 ; '.'
00000000000064fa         db  0x00 ; '.'
00000000000064fb         db  0x00 ; '.'
00000000000064fc         db  0xd0 ; '.'
00000000000064fd         db  0xc0 ; '.'
00000000000064fe         db  0xff ; '.'
00000000000064ff         db  0xff ; '.'
0000000000006500         db  0xf0 ; '.'
0000000000006501         db  0x04 ; '.'
0000000000006502         db  0x00 ; '.'
0000000000006503         db  0x00 ; '.'
0000000000006504         db  0x80 ; '.'
0000000000006505         db  0xc1 ; '.'
0000000000006506         db  0xff ; '.'
0000000000006507         db  0xff ; '.'
0000000000006508         db  0x20 ; ' '
0000000000006509         db  0x05 ; '.'
000000000000650a         db  0x00 ; '.'
000000000000650b         db  0x00 ; '.'
000000000000650c         db  0x90 ; '.'
000000000000650d         db  0xc1 ; '.'
000000000000650e         db  0xff ; '.'
000000000000650f         db  0xff ; '.'
0000000000006510         db  0x34 ; '4'
0000000000006511         db  0x05 ; '.'
0000000000006512         db  0x00 ; '.'
0000000000006513         db  0x00 ; '.'
0000000000006514         db  0xc0 ; '.'
0000000000006515         db  0xc1 ; '.'
0000000000006516         db  0xff ; '.'
0000000000006517         db  0xff ; '.'
0000000000006518         db  0x50 ; 'P'
0000000000006519         db  0x05 ; '.'
000000000000651a         db  0x00 ; '.'
000000000000651b         db  0x00 ; '.'
000000000000651c         db  0x10 ; '.'
000000000000651d         db  0xc2 ; '.'
000000000000651e         db  0xff ; '.'
000000000000651f         db  0xff ; '.'
0000000000006520         db  0x78 ; 'x'
0000000000006521         db  0x05 ; '.'
0000000000006522         db  0x00 ; '.'
0000000000006523         db  0x00 ; '.'
0000000000006524         db  0xc0 ; '.'
0000000000006525         db  0xc3 ; '.'
0000000000006526         db  0xff ; '.'
0000000000006527         db  0xff ; '.'
0000000000006528         db  0xc8 ; '.'
0000000000006529         db  0x05 ; '.'
000000000000652a         db  0x00 ; '.'
000000000000652b         db  0x00 ; '.'
000000000000652c         db  0x00 ; '.'
000000000000652d         db  0xc5 ; '.'
000000000000652e         db  0xff ; '.'
000000000000652f         db  0xff ; '.'
0000000000006530         db  0x04 ; '.'
0000000000006531         db  0x06 ; '.'
0000000000006532         db  0x00 ; '.'
0000000000006533         db  0x00 ; '.'
0000000000006534         db  0x40 ; '@'
0000000000006535         db  0xc6 ; '.'
0000000000006536         db  0xff ; '.'
0000000000006537         db  0xff ; '.'
0000000000006538         db  0x50 ; 'P'
0000000000006539         db  0x06 ; '.'
000000000000653a         db  0x00 ; '.'
000000000000653b         db  0x00 ; '.'
000000000000653c         db  0xe0 ; '.'
000000000000653d         db  0xc6 ; '.'
000000000000653e         db  0xff ; '.'
000000000000653f         db  0xff ; '.'
0000000000006540         db  0x70 ; 'p'
0000000000006541         db  0x06 ; '.'
0000000000006542         db  0x00 ; '.'
0000000000006543         db  0x00 ; '.'
0000000000006544         db  0xd0 ; '.'
0000000000006545         db  0xc7 ; '.'
0000000000006546         db  0xff ; '.'
0000000000006547         db  0xff ; '.'
0000000000006548         db  0xb4 ; '.'
0000000000006549         db  0x06 ; '.'
000000000000654a         db  0x00 ; '.'
000000000000654b         db  0x00 ; '.'
000000000000654c         db  0x10 ; '.'
000000000000654d         db  0xda ; '.'
000000000000654e         db  0xff ; '.'
000000000000654f         db  0xff ; '.'
0000000000006550         db  0x2c ; ','
0000000000006551         db  0x07 ; '.'
0000000000006552         db  0x00 ; '.'
0000000000006553         db  0x00 ; '.'
0000000000006554         db  0xc0 ; '.'
0000000000006555         db  0xdb ; '.'
0000000000006556         db  0xff ; '.'
0000000000006557         db  0xff ; '.'
0000000000006558         db  0x98 ; '.'
0000000000006559         db  0x07 ; '.'
000000000000655a         db  0x00 ; '.'
000000000000655b         db  0x00 ; '.'
000000000000655c         db  0x00 ; '.'
000000000000655d         db  0xdc ; '.'
000000000000655e         db  0xff ; '.'
000000000000655f         db  0xff ; '.'
0000000000006560         db  0xc4 ; '.'
0000000000006561         db  0x07 ; '.'
0000000000006562         db  0x00 ; '.'
0000000000006563         db  0x00 ; '.'
0000000000006564         db  0x20 ; ' '
0000000000006565         db  0xdc ; '.'
0000000000006566         db  0xff ; '.'
0000000000006567         db  0xff ; '.'
0000000000006568         db  0xd8 ; '.'
0000000000006569         db  0x07 ; '.'
000000000000656a         db  0x00 ; '.'
000000000000656b         db  0x00 ; '.'
000000000000656c         db  0x40 ; '@'
000000000000656d         db  0xdc ; '.'
000000000000656e         db  0xff ; '.'
000000000000656f         db  0xff ; '.'
0000000000006570         db  0xec ; '.'
0000000000006571         db  0x07 ; '.'
0000000000006572         db  0x00 ; '.'
0000000000006573         db  0x00 ; '.'
0000000000006574         db  0x80 ; '.'
0000000000006575         db  0xdc ; '.'
0000000000006576         db  0xff ; '.'
0000000000006577         db  0xff ; '.'
0000000000006578         db  0x00 ; '.'
0000000000006579         db  0x08 ; '.'
000000000000657a         db  0x00 ; '.'
000000000000657b         db  0x00 ; '.'
000000000000657c         db  0xa0 ; '.'
000000000000657d         db  0xdc ; '.'
000000000000657e         db  0xff ; '.'
000000000000657f         db  0xff ; '.'
0000000000006580         db  0x14 ; '.'
0000000000006581         db  0x08 ; '.'
0000000000006582         db  0x00 ; '.'
0000000000006583         db  0x00 ; '.'
0000000000006584         db  0xd0 ; '.'
0000000000006585         db  0xdc ; '.'
0000000000006586         db  0xff ; '.'
0000000000006587         db  0xff ; '.'
0000000000006588         db  0x28 ; '('
0000000000006589         db  0x08 ; '.'
000000000000658a         db  0x00 ; '.'
000000000000658b         db  0x00 ; '.'
000000000000658c         db  0x50 ; 'P'
000000000000658d         db  0xdd ; '.'
000000000000658e         db  0xff ; '.'
000000000000658f         db  0xff ; '.'
0000000000006590         db  0x7c ; '|'
0000000000006591         db  0x08 ; '.'
0000000000006592         db  0x00 ; '.'
0000000000006593         db  0x00 ; '.'
0000000000006594         db  0x40 ; '@'
0000000000006595         db  0xde ; '.'
0000000000006596         db  0xff ; '.'
0000000000006597         db  0xff ; '.'
0000000000006598         db  0xe8 ; '.'
0000000000006599         db  0x08 ; '.'
000000000000659a         db  0x00 ; '.'
000000000000659b         db  0x00 ; '.'
000000000000659c         db  0x50 ; 'P'
000000000000659d         db  0xde ; '.'
000000000000659e         db  0xff ; '.'
000000000000659f         db  0xff ; '.'
00000000000065a0         db  0xfc ; '.'
00000000000065a1         db  0x08 ; '.'
00000000000065a2         db  0x00 ; '.'
00000000000065a3         db  0x00 ; '.'
00000000000065a4         db  0xf0 ; '.'
00000000000065a5         db  0xde ; '.'
00000000000065a6         db  0xff ; '.'
00000000000065a7         db  0xff ; '.'
00000000000065a8         db  0x28 ; '('
00000000000065a9         db  0x09 ; '.'
00000000000065aa         db  0x00 ; '.'
00000000000065ab         db  0x00 ; '.'
00000000000065ac         db  0x10 ; '.'
00000000000065ad         db  0xdf ; '.'
00000000000065ae         db  0xff ; '.'
00000000000065af         db  0xff ; '.'
00000000000065b0         db  0x3c ; '<'
00000000000065b1         db  0x09 ; '.'
00000000000065b2         db  0x00 ; '.'
00000000000065b3         db  0x00 ; '.'
00000000000065b4         db  0x20 ; ' '
00000000000065b5         db  0xdf ; '.'
00000000000065b6         db  0xff ; '.'
00000000000065b7         db  0xff ; '.'
00000000000065b8         db  0x50 ; 'P'
00000000000065b9         db  0x09 ; '.'
00000000000065ba         db  0x00 ; '.'
00000000000065bb         db  0x00 ; '.'
00000000000065bc         db  0x40 ; '@'
00000000000065bd         db  0xdf ; '.'
00000000000065be         db  0xff ; '.'
00000000000065bf         db  0xff ; '.'
00000000000065c0         db  0x64 ; 'd'
00000000000065c1         db  0x09 ; '.'
00000000000065c2         db  0x00 ; '.'
00000000000065c3         db  0x00 ; '.'
00000000000065c4         db  0x60 ; '`'
00000000000065c5         db  0xdf ; '.'
00000000000065c6         db  0xff ; '.'
00000000000065c7         db  0xff ; '.'
00000000000065c8         db  0x78 ; 'x'
00000000000065c9         db  0x09 ; '.'
00000000000065ca         db  0x00 ; '.'
00000000000065cb         db  0x00 ; '.'
00000000000065cc         db  0xf0 ; '.'
00000000000065cd         db  0xdf ; '.'
00000000000065ce         db  0xff ; '.'
00000000000065cf         db  0xff ; '.'
00000000000065d0         db  0x94 ; '.'
00000000000065d1         db  0x09 ; '.'
00000000000065d2         db  0x00 ; '.'
00000000000065d3         db  0x00 ; '.'
00000000000065d4         db  0x80 ; '.'
00000000000065d5         db  0xe0 ; '.'
00000000000065d6         db  0xff ; '.'
00000000000065d7         db  0xff ; '.'
00000000000065d8         db  0xb0 ; '.'
00000000000065d9         db  0x09 ; '.'
00000000000065da         db  0x00 ; '.'
00000000000065db         db  0x00 ; '.'
00000000000065dc         db  0x90 ; '.'
00000000000065dd         db  0xe0 ; '.'
00000000000065de         db  0xff ; '.'
00000000000065df         db  0xff ; '.'
00000000000065e0         db  0xc4 ; '.'
00000000000065e1         db  0x09 ; '.'
00000000000065e2         db  0x00 ; '.'
00000000000065e3         db  0x00 ; '.'
00000000000065e4         db  0xa0 ; '.'
00000000000065e5         db  0xe0 ; '.'
00000000000065e6         db  0xff ; '.'
00000000000065e7         db  0xff ; '.'
00000000000065e8         db  0xd8 ; '.'
00000000000065e9         db  0x09 ; '.'
00000000000065ea         db  0x00 ; '.'
00000000000065eb         db  0x00 ; '.'
00000000000065ec         db  0x40 ; '@'
00000000000065ed         db  0xe1 ; '.'
00000000000065ee         db  0xff ; '.'
00000000000065ef         db  0xff ; '.'
00000000000065f0         db  0xf4 ; '.'
00000000000065f1         db  0x09 ; '.'
00000000000065f2         db  0x00 ; '.'
00000000000065f3         db  0x00 ; '.'
00000000000065f4         db  0x50 ; 'P'
00000000000065f5         db  0xe1 ; '.'
00000000000065f6         db  0xff ; '.'
00000000000065f7         db  0xff ; '.'
00000000000065f8         db  0x08 ; '.'
00000000000065f9         db  0x0a ; '.'
00000000000065fa         db  0x00 ; '.'
00000000000065fb         db  0x00 ; '.'
00000000000065fc         db  0x70 ; 'p'
00000000000065fd         db  0xe1 ; '.'
00000000000065fe         db  0xff ; '.'
00000000000065ff         db  0xff ; '.'
0000000000006600         db  0x1c ; '.'
0000000000006601         db  0x0a ; '.'
0000000000006602         db  0x00 ; '.'
0000000000006603         db  0x00 ; '.'
0000000000006604         db  0x80 ; '.'
0000000000006605         db  0xe1 ; '.'
0000000000006606         db  0xff ; '.'
0000000000006607         db  0xff ; '.'
0000000000006608         db  0x30 ; '0'
0000000000006609         db  0x0a ; '.'
000000000000660a         db  0x00 ; '.'
000000000000660b         db  0x00 ; '.'
000000000000660c         db  0x10 ; '.'
000000000000660d         db  0xe2 ; '.'
000000000000660e         db  0xff ; '.'
000000000000660f         db  0xff ; '.'
0000000000006610         db  0x4c ; 'L'
0000000000006611         db  0x0a ; '.'
0000000000006612         db  0x00 ; '.'
0000000000006613         db  0x00 ; '.'
0000000000006614         db  0xb0 ; '.'
0000000000006615         db  0xe2 ; '.'
0000000000006616         db  0xff ; '.'
0000000000006617         db  0xff ; '.'
0000000000006618         db  0x68 ; 'h'
0000000000006619         db  0x0a ; '.'
000000000000661a         db  0x00 ; '.'
000000000000661b         db  0x00 ; '.'
000000000000661c         db  0xc0 ; '.'
000000000000661d         db  0xe2 ; '.'
000000000000661e         db  0xff ; '.'
000000000000661f         db  0xff ; '.'
0000000000006620         db  0x7c ; '|'
0000000000006621         db  0x0a ; '.'
0000000000006622         db  0x00 ; '.'
0000000000006623         db  0x00 ; '.'
0000000000006624         db  0xe0 ; '.'
0000000000006625         db  0xe2 ; '.'
0000000000006626         db  0xff ; '.'
0000000000006627         db  0xff ; '.'
0000000000006628         db  0x90 ; '.'
0000000000006629         db  0x0a ; '.'
000000000000662a         db  0x00 ; '.'
000000000000662b         db  0x00 ; '.'
000000000000662c         db  0x00 ; '.'
000000000000662d         db  0xe3 ; '.'
000000000000662e         db  0xff ; '.'
000000000000662f         db  0xff ; '.'
0000000000006630         db  0xa4 ; '.'
0000000000006631         db  0x0a ; '.'
0000000000006632         db  0x00 ; '.'
0000000000006633         db  0x00 ; '.'
0000000000006634         db  0x10 ; '.'
0000000000006635         db  0xe3 ; '.'
0000000000006636         db  0xff ; '.'
0000000000006637         db  0xff ; '.'
0000000000006638         db  0xb8 ; '.'
0000000000006639         db  0x0a ; '.'
000000000000663a         db  0x00 ; '.'
000000000000663b         db  0x00 ; '.'
000000000000663c         db  0x30 ; '0'
000000000000663d         db  0xe3 ; '.'
000000000000663e         db  0xff ; '.'
000000000000663f         db  0xff ; '.'
0000000000006640         db  0xcc ; '.'
0000000000006641         db  0x0a ; '.'
0000000000006642         db  0x00 ; '.'
0000000000006643         db  0x00 ; '.'
0000000000006644         db  0x50 ; 'P'
0000000000006645         db  0xe3 ; '.'
0000000000006646         db  0xff ; '.'
0000000000006647         db  0xff ; '.'
0000000000006648         db  0xe0 ; '.'
0000000000006649         db  0x0a ; '.'
000000000000664a         db  0x00 ; '.'
000000000000664b         db  0x00 ; '.'
000000000000664c         db  0x70 ; 'p'
000000000000664d         db  0xe3 ; '.'
000000000000664e         db  0xff ; '.'
000000000000664f         db  0xff ; '.'
0000000000006650         db  0xf8 ; '.'
0000000000006651         db  0x0a ; '.'
0000000000006652         db  0x00 ; '.'
0000000000006653         db  0x00 ; '.'
0000000000006654         db  0x80 ; '.'
0000000000006655         db  0xe3 ; '.'
0000000000006656         db  0xff ; '.'
0000000000006657         db  0xff ; '.'
0000000000006658         db  0x0c ; '.'
0000000000006659         db  0x0b ; '.'
000000000000665a         db  0x00 ; '.'
000000000000665b         db  0x00 ; '.'
000000000000665c         db  0x50 ; 'P'
000000000000665d         db  0xe5 ; '.'
000000000000665e         db  0xff ; '.'
000000000000665f         db  0xff ; '.'
0000000000006660         db  0x58 ; 'X'
0000000000006661         db  0x0b ; '.'
0000000000006662         db  0x00 ; '.'
0000000000006663         db  0x00 ; '.'
0000000000006664         db  0x90 ; '.'
0000000000006665         db  0xe7 ; '.'
0000000000006666         db  0xff ; '.'
0000000000006667         db  0xff ; '.'
0000000000006668         db  0xa8 ; '.'
0000000000006669         db  0x0b ; '.'
000000000000666a         db  0x00 ; '.'
000000000000666b         db  0x00 ; '.'
000000000000666c         db  0xb0 ; '.'
000000000000666d         db  0xeb ; '.'
000000000000666e         db  0xff ; '.'
000000000000666f         db  0xff ; '.'
0000000000006670         db  0xbc ; '.'
0000000000006671         db  0x0c ; '.'
0000000000006672         db  0x00 ; '.'
0000000000006673         db  0x00 ; '.'
0000000000006674         db  0xd0 ; '.'
0000000000006675         db  0xeb ; '.'
0000000000006676         db  0xff ; '.'
0000000000006677         db  0xff ; '.'
0000000000006678         db  0xd0 ; '.'
0000000000006679         db  0x0c ; '.'
000000000000667a         db  0x00 ; '.'
000000000000667b         db  0x00 ; '.'
000000000000667c         db  0x50 ; 'P'
000000000000667d         db  0xec ; '.'
000000000000667e         db  0xff ; '.'
000000000000667f         db  0xff ; '.'
0000000000006680         db  0xec ; '.'
0000000000006681         db  0x0c ; '.'
0000000000006682         db  0x00 ; '.'
0000000000006683         db  0x00 ; '.'
0000000000006684         db  0x30 ; '0'
0000000000006685         db  0xed ; '.'
0000000000006686         db  0xff ; '.'
0000000000006687         db  0xff ; '.'
0000000000006688         db  0x18 ; '.'
0000000000006689         db  0x0d ; '.'
000000000000668a         db  0x00 ; '.'
000000000000668b         db  0x00 ; '.'
000000000000668c         db  0xb0 ; '.'
000000000000668d         db  0xed ; '.'
000000000000668e         db  0xff ; '.'
000000000000668f         db  0xff ; '.'
0000000000006690         db  0x38 ; '8'
0000000000006691         db  0x0d ; '.'
0000000000006692         db  0x00 ; '.'
0000000000006693         db  0x00 ; '.'
0000000000006694         db  0xd0 ; '.'
0000000000006695         db  0xed ; '.'
0000000000006696         db  0xff ; '.'
0000000000006697         db  0xff ; '.'
0000000000006698         db  0x54 ; 'T'
0000000000006699         db  0x0d ; '.'
000000000000669a         db  0x00 ; '.'
000000000000669b         db  0x00 ; '.'
000000000000669c         db  0x00 ; '.'
000000000000669d         db  0xee ; '.'
000000000000669e         db  0xff ; '.'
000000000000669f         db  0xff ; '.'
00000000000066a0         db  0x68 ; 'h'
00000000000066a1         db  0x0d ; '.'
00000000000066a2         db  0x00 ; '.'
00000000000066a3         db  0x00 ; '.'
00000000000066a4         db  0x10 ; '.'
00000000000066a5         db  0xee ; '.'
00000000000066a6         db  0xff ; '.'
00000000000066a7         db  0xff ; '.'
00000000000066a8         db  0x7c ; '|'
00000000000066a9         db  0x0d ; '.'
00000000000066aa         db  0x00 ; '.'
00000000000066ab         db  0x00 ; '.'
00000000000066ac         db  0x50 ; 'P'
00000000000066ad         db  0xee ; '.'
00000000000066ae         db  0xff ; '.'
00000000000066af         db  0xff ; '.'
00000000000066b0         db  0xa0 ; '.'
00000000000066b1         db  0x0d ; '.'
00000000000066b2         db  0x00 ; '.'
00000000000066b3         db  0x00 ; '.'
00000000000066b4         db  0x80 ; '.'
00000000000066b5         db  0xee ; '.'
00000000000066b6         db  0xff ; '.'
00000000000066b7         db  0xff ; '.'
00000000000066b8         db  0xb4 ; '.'
00000000000066b9         db  0x0d ; '.'
00000000000066ba         db  0x00 ; '.'
00000000000066bb         db  0x00 ; '.'
00000000000066bc         db  0x10 ; '.'
00000000000066bd         db  0xef ; '.'
00000000000066be         db  0xff ; '.'
00000000000066bf         db  0xff ; '.'
00000000000066c0         db  0xcc ; '.'
00000000000066c1         db  0x0d ; '.'
00000000000066c2         db  0x00 ; '.'
00000000000066c3         db  0x00 ; '.'
00000000000066c4         db  0x60 ; '`'
00000000000066c5         db  0xef ; '.'
00000000000066c6         db  0xff ; '.'
00000000000066c7         db  0xff ; '.'
00000000000066c8         db  0xe4 ; '.'
00000000000066c9         db  0x0d ; '.'
00000000000066ca         db  0x00 ; '.'
00000000000066cb         db  0x00 ; '.'
00000000000066cc         db  0x80 ; '.'
00000000000066cd         db  0xef ; '.'
00000000000066ce         db  0xff ; '.'
00000000000066cf         db  0xff ; '.'
00000000000066d0         db  0x00 ; '.'
00000000000066d1         db  0x0e ; '.'
00000000000066d2         db  0x00 ; '.'
00000000000066d3         db  0x00 ; '.'
00000000000066d4         db  0xb0 ; '.'
00000000000066d5         db  0xef ; '.'
00000000000066d6         db  0xff ; '.'
00000000000066d7         db  0xff ; '.'
00000000000066d8         db  0x1c ; '.'
00000000000066d9         db  0x0e ; '.'
00000000000066da         db  0x00 ; '.'
00000000000066db         db  0x00 ; '.'
00000000000066dc         db  0xe0 ; '.'
00000000000066dd         db  0xef ; '.'
00000000000066de         db  0xff ; '.'
00000000000066df         db  0xff ; '.'
00000000000066e0         db  0x44 ; 'D'
00000000000066e1         db  0x0e ; '.'
00000000000066e2         db  0x00 ; '.'
00000000000066e3         db  0x00 ; '.'
00000000000066e4         db  0x00 ; '.'
00000000000066e5         db  0xf0 ; '.'
00000000000066e6         db  0xff ; '.'
00000000000066e7         db  0xff ; '.'
00000000000066e8         db  0x60 ; '`'
00000000000066e9         db  0x0e ; '.'
00000000000066ea         db  0x00 ; '.'
00000000000066eb         db  0x00 ; '.'
00000000000066ec         db  0x40 ; '@'
00000000000066ed         db  0xf0 ; '.'
00000000000066ee         db  0xff ; '.'
00000000000066ef         db  0xff ; '.'
00000000000066f0         db  0x78 ; 'x'
00000000000066f1         db  0x0e ; '.'
00000000000066f2         db  0x00 ; '.'
00000000000066f3         db  0x00 ; '.'
00000000000066f4         db  0xc0 ; '.'
00000000000066f5         db  0xf0 ; '.'
00000000000066f6         db  0xff ; '.'
00000000000066f7         db  0xff ; '.'
00000000000066f8         db  0xb0 ; '.'
00000000000066f9         db  0x0e ; '.'
00000000000066fa         db  0x00 ; '.'
00000000000066fb         db  0x00 ; '.'
00000000000066fc         db  0x00 ; '.'
00000000000066fd         db  0xf1 ; '.'
00000000000066fe         db  0xff ; '.'
00000000000066ff         db  0xff ; '.'
0000000000006700         db  0xd0 ; '.'
0000000000006701         db  0x0e ; '.'
0000000000006702         db  0x00 ; '.'
0000000000006703         db  0x00 ; '.'
0000000000006704         db  0x60 ; '`'
0000000000006705         db  0xf1 ; '.'
0000000000006706         db  0xff ; '.'
0000000000006707         db  0xff ; '.'
0000000000006708         db  0x00 ; '.'
0000000000006709         db  0x0f ; '.'
000000000000670a         db  0x00 ; '.'
000000000000670b         db  0x00 ; '.'
000000000000670c         db  0xf0 ; '.'
000000000000670d         db  0xf1 ; '.'
000000000000670e         db  0xff ; '.'
000000000000670f         db  0xff ; '.'
0000000000006710         db  0x40 ; '@'
0000000000006711         db  0x0f ; '.'
0000000000006712         db  0x00 ; '.'
0000000000006713         db  0x00 ; '.'
0000000000006714         db  0x70 ; 'p'
0000000000006715         db  0xf2 ; '.'
0000000000006716         db  0xff ; '.'
0000000000006717         db  0xff ; '.'
0000000000006718         db  0x90 ; '.'
0000000000006719         db  0x0f ; '.'
000000000000671a         db  0x00 ; '.'
000000000000671b         db  0x00 ; '.'
000000000000671c         db  0xd0 ; '.'
000000000000671d         db  0xf2 ; '.'
000000000000671e         db  0xff ; '.'
000000000000671f         db  0xff ; '.'
0000000000006720         db  0xb0 ; '.'
0000000000006721         db  0x0f ; '.'
0000000000006722         db  0x00 ; '.'
0000000000006723         db  0x00 ; '.'
0000000000006724         db  0x10 ; '.'
0000000000006725         db  0xf3 ; '.'
0000000000006726         db  0xff ; '.'
0000000000006727         db  0xff ; '.'
0000000000006728         db  0xd0 ; '.'
0000000000006729         db  0x0f ; '.'
000000000000672a         db  0x00 ; '.'
000000000000672b         db  0x00 ; '.'
000000000000672c         db  0x80 ; '.'
000000000000672d         db  0xf3 ; '.'
000000000000672e         db  0xff ; '.'
000000000000672f         db  0xff ; '.'
0000000000006730         db  0x18 ; '.'
0000000000006731         db  0x10 ; '.'
0000000000006732         db  0x00 ; '.'
0000000000006733         db  0x00 ; '.'
0000000000006734         db  0x90 ; '.'
0000000000006735         db  0xf3 ; '.'
0000000000006736         db  0xff ; '.'
0000000000006737         db  0xff ; '.'
0000000000006738         db  0x30 ; '0'
0000000000006739         db  0x10 ; '.'
000000000000673a         db  0x00 ; '.'
000000000000673b         db  0x00 ; '.'
000000000000673c         db  0x00 ; '.'
000000000000673d         db  0x00 ; '.'
000000000000673e         db  0x00 ; '.'
000000000000673f         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x6740; 0x74d8[ (3480 bytes)
        ; File offset : [26432; 29912[ (3480 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000006740         dd         0x00000014                                  ; Length of the record
0000000000006744         dd         0x00000000                                  ; CIE ID
0000000000006748         db         0x01                                        ; Version
0000000000006749         db         "zR", 0                                     ; Augmentation String
000000000000674c         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
000000000000674d         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
000000000000674e         db         0x10                                        ; Return address register
000000000000674f         db         0x01                                        ; Augmentation data length
0000000000006750         db         0x1b                                        ; FDE encoding
0000000000006751         db  0x0c ; '.'
0000000000006752         db  0x07 ; '.'
0000000000006753         db  0x08 ; '.'
0000000000006754         db  0x90 ; '.'
0000000000006755         db  0x01 ; '.'
0000000000006756         db  0x07 ; '.'
0000000000006757         db  0x10 ; '.'
0000000000006758         dd         0x00000014                                  ; Length of the record
000000000000675c         dd         0x0000001c                                  ; FDE: parent CIE at 0x6740 (FDE encoding = 0x1B)
0000000000006760         db         0xf0, 0xb6, 2 dup (0xff)                    ; begin 0x1e50
0000000000006764         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x1e7b)
0000000000006768         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006769         align      16
0000000000006770         dd         0x00000014                                  ; Length of the record
0000000000006774         dd         0x00000000                                  ; CIE ID
0000000000006778         db         0x01                                        ; Version
0000000000006779         db         "zR", 0                                     ; Augmentation String
000000000000677c         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
000000000000677d         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
000000000000677e         db         0x10                                        ; Return address register
000000000000677f         db         0x01                                        ; Augmentation data length
0000000000006780         db         0x1b                                        ; FDE encoding
0000000000006781         db  0x0c ; '.'
0000000000006782         db  0x07 ; '.'
0000000000006783         db  0x08 ; '.'
0000000000006784         db  0x90 ; '.'
0000000000006785         db  0x01 ; '.'
0000000000006786         db  0x00 ; '.'
0000000000006787         db  0x00 ; '.'
0000000000006788         dd         0x00000024                                  ; Length of the record
000000000000678c         dd         0x0000001c                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006790         db         0x40, 0xac, 2 dup (0xff)                    ; begin 0x13d0
0000000000006794         db         0x10, 0x03, 2 dup (0x00)                    ; length 0x310 (end at 0x16e0)
0000000000006798         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006799         db  0x0e ; '.'
000000000000679a         db  0x10 ; '.'
000000000000679b         db  0x46 ; 'F'
000000000000679c         db  0x0e ; '.'
000000000000679d         db  0x18 ; '.'
000000000000679e         db  0x4a ; 'J'
000000000000679f         db  0x0f ; '.'
00000000000067a0         db  0x0b ; '.'
00000000000067a1         db  0x77 ; 'w'
00000000000067a2         db  0x08 ; '.'
00000000000067a3         db  0x80 ; '.'
00000000000067a4         db  0x00 ; '.'
00000000000067a5         db  0x3f ; '?'
00000000000067a6         db  0x1a ; '.'
00000000000067a7         db  0x3b ; ';'
00000000000067a8         db  0x2a ; '*'
00000000000067a9         db  0x33 ; '3'
00000000000067aa         db  0x24 ; '$'
00000000000067ab         db  0x22 ; '"'
00000000000067ac         db  0x00 ; '.'
00000000000067ad         db  0x00 ; '.'
00000000000067ae         db  0x00 ; '.'
00000000000067af         db  0x00 ; '.'
00000000000067b0         dd         0x00000014                                  ; Length of the record
00000000000067b4         dd         0x00000044                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
00000000000067b8         db         0x28, 0xaf, 2 dup (0xff)                    ; begin 0x16e0
00000000000067bc         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x16e8)
00000000000067c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000067c1         align      8
00000000000067c8         dd         0x00000010                                  ; Length of the record
00000000000067cc         dd         0x0000005c                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
00000000000067d0         db         0x90, 0xb7, 2 dup (0xff)                    ; begin 0x1f60
00000000000067d4         db         0x0b, 3 dup (0x00)                          ; length 0xb (end at 0x1f6b)
00000000000067d8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000067d9         align      4
00000000000067dc         dd         0x0000003c                                  ; Length of the record
00000000000067e0         dd         0x00000070                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
00000000000067e4         db         0x8c, 0xb7, 2 dup (0xff)                    ; begin 0x1f70
00000000000067e8         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x1fd5)
00000000000067ec         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000067ed         db  0x41 ; 'A'
00000000000067ee         db  0x0e ; '.'
00000000000067ef         db  0x10 ; '.'
00000000000067f0         db  0x86 ; '.'
00000000000067f1         db  0x02 ; '.'
00000000000067f2         db  0x41 ; 'A'
00000000000067f3         db  0x0e ; '.'
00000000000067f4         db  0x18 ; '.'
00000000000067f5         db  0x83 ; '.'
00000000000067f6         db  0x03 ; '.'
00000000000067f7         db  0x4a ; 'J'
00000000000067f8         db  0x0e ; '.'
00000000000067f9         db  0x20 ; ' '
00000000000067fa         db  0x6b ; 'k'
00000000000067fb         db  0x0a ; '.'
00000000000067fc         db  0x0e ; '.'
00000000000067fd         db  0x18 ; '.'
00000000000067fe         db  0x41 ; 'A'
00000000000067ff         db  0x0e ; '.'
0000000000006800         db  0x10 ; '.'
0000000000006801         db  0x41 ; 'A'
0000000000006802         db  0x0e ; '.'
0000000000006803         db  0x08 ; '.'
0000000000006804         db  0x47 ; 'G'
0000000000006805         db  0x0b ; '.'
0000000000006806         db  0x44 ; 'D'
0000000000006807         db  0x0a ; '.'
0000000000006808         db  0x0e ; '.'
0000000000006809         db  0x18 ; '.'
000000000000680a         db  0x46 ; 'F'
000000000000680b         db  0x0e ; '.'
000000000000680c         db  0x10 ; '.'
000000000000680d         db  0x41 ; 'A'
000000000000680e         db  0x0e ; '.'
000000000000680f         db  0x08 ; '.'
0000000000006810         db  0x45 ; 'E'
0000000000006811         db  0x0b ; '.'
0000000000006812         db  0x4b ; 'K'
0000000000006813         db  0x0e ; '.'
0000000000006814         db  0x18 ; '.'
0000000000006815         db  0x47 ; 'G'
0000000000006816         db  0x0e ; '.'
0000000000006817         db  0x10 ; '.'
0000000000006818         db  0x41 ; 'A'
0000000000006819         db  0x0e ; '.'
000000000000681a         db  0x08 ; '.'
000000000000681b         db  0x00 ; '.'
000000000000681c         dd         0x00000024                                  ; Length of the record
0000000000006820         dd         0x000000b0                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006824         db         0xbc, 0xb7, 2 dup (0xff)                    ; begin 0x1fe0
0000000000006828         db         0x62, 3 dup (0x00)                          ; length 0x62 (end at 0x2042)
000000000000682c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000682d         db  0x41 ; 'A'
000000000000682e         db  0x0e ; '.'
000000000000682f         db  0x10 ; '.'
0000000000006830         db  0x86 ; '.'
0000000000006831         db  0x02 ; '.'
0000000000006832         db  0x41 ; 'A'
0000000000006833         db  0x0e ; '.'
0000000000006834         db  0x18 ; '.'
0000000000006835         db  0x83 ; '.'
0000000000006836         db  0x03 ; '.'
0000000000006837         db  0x4c ; 'L'
0000000000006838         db  0x0e ; '.'
0000000000006839         db  0x20 ; ' '
000000000000683a         db  0x02 ; '.'
000000000000683b         db  0x51 ; 'Q'
000000000000683c         db  0x0e ; '.'
000000000000683d         db  0x18 ; '.'
000000000000683e         db  0x41 ; 'A'
000000000000683f         db  0x0e ; '.'
0000000000006840         db  0x10 ; '.'
0000000000006841         db  0x41 ; 'A'
0000000000006842         db  0x0e ; '.'
0000000000006843         db  0x08 ; '.'
0000000000006844         dd         0x00000010                                  ; Length of the record
0000000000006848         dd         0x000000d8                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
000000000000684c         db         0x04, 0xb8, 2 dup (0xff)                    ; begin 0x2050
0000000000006850         db         0x39, 3 dup (0x00)                          ; length 0x39 (end at 0x2089)
0000000000006854         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006855         align      8
0000000000006858         dd         0x00000068                                  ; Length of the record
000000000000685c         dd         0x000000ec                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006860         db         0x30, 0xb8, 2 dup (0xff)                    ; begin 0x2090
0000000000006864         db         0x31, 0x01, 2 dup (0x00)                    ; length 0x131 (end at 0x21c1)
0000000000006868         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006869         db  0x4b ; 'K'
000000000000686a         db  0x0e ; '.'
000000000000686b         db  0x10 ; '.'
000000000000686c         db  0x8d ; '.'
000000000000686d         db  0x02 ; '.'
000000000000686e         db  0x42 ; 'B'
000000000000686f         db  0x0e ; '.'
0000000000006870         db  0x18 ; '.'
0000000000006871         db  0x8c ; '.'
0000000000006872         db  0x03 ; '.'
0000000000006873         db  0x41 ; 'A'
0000000000006874         db  0x0e ; '.'
0000000000006875         db  0x20 ; ' '
0000000000006876         db  0x86 ; '.'
0000000000006877         db  0x04 ; '.'
0000000000006878         db  0x41 ; 'A'
0000000000006879         db  0x0e ; '.'
000000000000687a         db  0x28 ; '('
000000000000687b         db  0x83 ; '.'
000000000000687c         db  0x05 ; '.'
000000000000687d         db  0x47 ; 'G'
000000000000687e         db  0x0e ; '.'
000000000000687f         db  0x30 ; '0'
0000000000006880         db  0x77 ; 'w'
0000000000006881         db  0x0e ; '.'
0000000000006882         db  0x28 ; '('
0000000000006883         db  0x41 ; 'A'
0000000000006884         db  0x0e ; '.'
0000000000006885         db  0x20 ; ' '
0000000000006886         db  0x41 ; 'A'
0000000000006887         db  0x0e ; '.'
0000000000006888         db  0x18 ; '.'
0000000000006889         db  0x42 ; 'B'
000000000000688a         db  0x0e ; '.'
000000000000688b         db  0x10 ; '.'
000000000000688c         db  0x42 ; 'B'
000000000000688d         db  0x0e ; '.'
000000000000688e         db  0x08 ; '.'
000000000000688f         db  0x45 ; 'E'
0000000000006890         db  0xc3 ; '.'
0000000000006891         db  0xc6 ; '.'
0000000000006892         db  0xcc ; '.'
0000000000006893         db  0xcd ; '.'
0000000000006894         db  0x48 ; 'H'
0000000000006895         db  0x0e ; '.'
0000000000006896         db  0x30 ; '0'
0000000000006897         db  0x83 ; '.'
0000000000006898         db  0x05 ; '.'
0000000000006899         db  0x86 ; '.'
000000000000689a         db  0x04 ; '.'
000000000000689b         db  0x8c ; '.'
000000000000689c         db  0x03 ; '.'
000000000000689d         db  0x8d ; '.'
000000000000689e         db  0x02 ; '.'
000000000000689f         db  0x4b ; 'K'
00000000000068a0         db  0x0a ; '.'
00000000000068a1         db  0x0e ; '.'
00000000000068a2         db  0x28 ; '('
00000000000068a3         db  0x41 ; 'A'
00000000000068a4         db  0x0e ; '.'
00000000000068a5         db  0x20 ; ' '
00000000000068a6         db  0x41 ; 'A'
00000000000068a7         db  0x0e ; '.'
00000000000068a8         db  0x18 ; '.'
00000000000068a9         db  0x42 ; 'B'
00000000000068aa         db  0x0e ; '.'
00000000000068ab         db  0x10 ; '.'
00000000000068ac         db  0x42 ; 'B'
00000000000068ad         db  0x0e ; '.'
00000000000068ae         db  0x08 ; '.'
00000000000068af         db  0x47 ; 'G'
00000000000068b0         db  0x0b ; '.'
00000000000068b1         db  0x02 ; '.'
00000000000068b2         db  0x8b ; '.'
00000000000068b3         db  0x0a ; '.'
00000000000068b4         db  0x0e ; '.'
00000000000068b5         db  0x28 ; '('
00000000000068b6         db  0x46 ; 'F'
00000000000068b7         db  0x0e ; '.'
00000000000068b8         db  0x20 ; ' '
00000000000068b9         db  0x41 ; 'A'
00000000000068ba         db  0x0e ; '.'
00000000000068bb         db  0x18 ; '.'
00000000000068bc         db  0x42 ; 'B'
00000000000068bd         db  0x0e ; '.'
00000000000068be         db  0x10 ; '.'
00000000000068bf         db  0x42 ; 'B'
00000000000068c0         db  0x0e ; '.'
00000000000068c1         db  0x08 ; '.'
00000000000068c2         db  0x42 ; 'B'
00000000000068c3         db  0x0b ; '.'
00000000000068c4         dd         0x00000028                                  ; Length of the record
00000000000068c8         dd         0x00000158                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
00000000000068cc         db         0x04, 0xb9, 2 dup (0xff)                    ; begin 0x21d0
00000000000068d0         db         0x6a, 0x03, 2 dup (0x00)                    ; length 0x36a (end at 0x253a)
00000000000068d4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000068d5         db  0x42 ; 'B'
00000000000068d6         db  0x0e ; '.'
00000000000068d7         db  0x10 ; '.'
00000000000068d8         db  0x8d ; '.'
00000000000068d9         db  0x02 ; '.'
00000000000068da         db  0x42 ; 'B'
00000000000068db         db  0x0e ; '.'
00000000000068dc         db  0x18 ; '.'
00000000000068dd         db  0x8c ; '.'
00000000000068de         db  0x03 ; '.'
00000000000068df         db  0x46 ; 'F'
00000000000068e0         db  0x0e ; '.'
00000000000068e1         db  0x20 ; ' '
00000000000068e2         db  0x86 ; '.'
00000000000068e3         db  0x04 ; '.'
00000000000068e4         db  0x41 ; 'A'
00000000000068e5         db  0x0e ; '.'
00000000000068e6         db  0x28 ; '('
00000000000068e7         db  0x83 ; '.'
00000000000068e8         db  0x05 ; '.'
00000000000068e9         db  0x49 ; 'I'
00000000000068ea         db  0x0e ; '.'
00000000000068eb         db  0xb0 ; '.'
00000000000068ec         db  0x01 ; '.'
00000000000068ed         db  0x00 ; '.'
00000000000068ee         db  0x00 ; '.'
00000000000068ef         db  0x00 ; '.'
00000000000068f0         dd         0x00000064                                  ; Length of the record
00000000000068f4         dd         0x00000184                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
00000000000068f8         db         0xf8, 0xad, 2 dup (0xff)                    ; begin 0x16f0
00000000000068fc         db         0x60, 0x07, 2 dup (0x00)                    ; length 0x760 (end at 0x1e50)
0000000000006900         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006901         db  0x42 ; 'B'
0000000000006902         db  0x0e ; '.'
0000000000006903         db  0x10 ; '.'
0000000000006904         db  0x8f ; '.'
0000000000006905         db  0x02 ; '.'
0000000000006906         db  0x42 ; 'B'
0000000000006907         db  0x0e ; '.'
0000000000006908         db  0x18 ; '.'
0000000000006909         db  0x8e ; '.'
000000000000690a         db  0x03 ; '.'
000000000000690b         db  0x42 ; 'B'
000000000000690c         db  0x0e ; '.'
000000000000690d         db  0x20 ; ' '
000000000000690e         db  0x8d ; '.'
000000000000690f         db  0x04 ; '.'
0000000000006910         db  0x42 ; 'B'
0000000000006911         db  0x0e ; '.'
0000000000006912         db  0x28 ; '('
0000000000006913         db  0x8c ; '.'
0000000000006914         db  0x05 ; '.'
0000000000006915         db  0x41 ; 'A'
0000000000006916         db  0x0e ; '.'
0000000000006917         db  0x30 ; '0'
0000000000006918         db  0x86 ; '.'
0000000000006919         db  0x06 ; '.'
000000000000691a         db  0x41 ; 'A'
000000000000691b         db  0x0e ; '.'
000000000000691c         db  0x38 ; '8'
000000000000691d         db  0x83 ; '.'
000000000000691e         db  0x07 ; '.'
000000000000691f         db  0x49 ; 'I'
0000000000006920         db  0x0e ; '.'
0000000000006921         db  0x90 ; '.'
0000000000006922         db  0x01 ; '.'
0000000000006923         db  0x02 ; '.'
0000000000006924         db  0x5f ; '_'
0000000000006925         db  0x0e ; '.'
0000000000006926         db  0x98 ; '.'
0000000000006927         db  0x01 ; '.'
0000000000006928         db  0x49 ; 'I'
0000000000006929         db  0x0e ; '.'
000000000000692a         db  0xa0 ; '.'
000000000000692b         db  0x01 ; '.'
000000000000692c         db  0x4f ; 'O'
000000000000692d         db  0x0e ; '.'
000000000000692e         db  0xa8 ; '.'
000000000000692f         db  0x01 ; '.'
0000000000006930         db  0x53 ; 'S'
0000000000006931         db  0x0e ; '.'
0000000000006932         db  0xb0 ; '.'
0000000000006933         db  0x01 ; '.'
0000000000006934         db  0x54 ; 'T'
0000000000006935         db  0x0e ; '.'
0000000000006936         db  0x90 ; '.'
0000000000006937         db  0x01 ; '.'
0000000000006938         db  0x03 ; '.'
0000000000006939         db  0xff ; '.'
000000000000693a         db  0x03 ; '.'
000000000000693b         db  0x0a ; '.'
000000000000693c         db  0x0e ; '.'
000000000000693d         db  0x38 ; '8'
000000000000693e         db  0x41 ; 'A'
000000000000693f         db  0x0e ; '.'
0000000000006940         db  0x30 ; '0'
0000000000006941         db  0x41 ; 'A'
0000000000006942         db  0x0e ; '.'
0000000000006943         db  0x28 ; '('
0000000000006944         db  0x42 ; 'B'
0000000000006945         db  0x0e ; '.'
0000000000006946         db  0x20 ; ' '
0000000000006947         db  0x42 ; 'B'
0000000000006948         db  0x0e ; '.'
0000000000006949         db  0x18 ; '.'
000000000000694a         db  0x42 ; 'B'
000000000000694b         db  0x0e ; '.'
000000000000694c         db  0x10 ; '.'
000000000000694d         db  0x42 ; 'B'
000000000000694e         db  0x0e ; '.'
000000000000694f         db  0x08 ; '.'
0000000000006950         db  0x46 ; 'F'
0000000000006951         db  0x0b ; '.'
0000000000006952         db  0x00 ; '.'
0000000000006953         db  0x00 ; '.'
0000000000006954         db  0x00 ; '.'
0000000000006955         db  0x00 ; '.'
0000000000006956         db  0x00 ; '.'
0000000000006957         db  0x00 ; '.'
0000000000006958         dd         0x00000010                                  ; Length of the record
000000000000695c         dd         0x000001ec                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006960         db         0xe0, 0xbb, 2 dup (0xff)                    ; begin 0x2540
0000000000006964         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2548)
0000000000006968         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006969         align      4
000000000000696c         dd         0x00000010                                  ; Length of the record
0000000000006970         dd         0x00000200                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006974         db         0xdc, 0xbb, 2 dup (0xff)                    ; begin 0x2550
0000000000006978         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2558)
000000000000697c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000697d         align      128
0000000000006980         dd         0x0000002c                                  ; Length of the record
0000000000006984         dd         0x00000214                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006988         db         0xd8, 0xbb, 2 dup (0xff)                    ; begin 0x2560
000000000000698c         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x2604)
0000000000006990         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006991         db  0x41 ; 'A'
0000000000006992         db  0x0e ; '.'
0000000000006993         db  0x10 ; '.'
0000000000006994         db  0x86 ; '.'
0000000000006995         db  0x02 ; '.'
0000000000006996         db  0x41 ; 'A'
0000000000006997         db  0x0e ; '.'
0000000000006998         db  0x18 ; '.'
0000000000006999         db  0x83 ; '.'
000000000000699a         db  0x03 ; '.'
000000000000699b         db  0x44 ; 'D'
000000000000699c         db  0x0e ; '.'
000000000000699d         db  0x20 ; ' '
000000000000699e         db  0x7a ; 'z'
000000000000699f         db  0x0a ; '.'
00000000000069a0         db  0x0e ; '.'
00000000000069a1         db  0x18 ; '.'
00000000000069a2         db  0x41 ; 'A'
00000000000069a3         db  0x0e ; '.'
00000000000069a4         db  0x10 ; '.'
00000000000069a5         db  0x41 ; 'A'
00000000000069a6         db  0x0e ; '.'
00000000000069a7         db  0x08 ; '.'
00000000000069a8         db  0x41 ; 'A'
00000000000069a9         db  0x0b ; '.'
00000000000069aa         db  0x00 ; '.'
00000000000069ab         db  0x00 ; '.'
00000000000069ac         db  0x00 ; '.'
00000000000069ad         db  0x00 ; '.'
00000000000069ae         db  0x00 ; '.'
00000000000069af         db  0x00 ; '.'
00000000000069b0         dd         0x00000010                                  ; Length of the record
00000000000069b4         dd         0x00000244                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
00000000000069b8         db         0x58, 0xbc, 2 dup (0xff)                    ; begin 0x2610
00000000000069bc         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x2615)
00000000000069c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000069c1         align      4
00000000000069c4         dd         0x00000018                                  ; Length of the record
00000000000069c8         dd         0x00000258                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
00000000000069cc         db         0x54, 0xbc, 2 dup (0xff)                    ; begin 0x2620
00000000000069d0         db         0x22, 3 dup (0x00)                          ; length 0x22 (end at 0x2642)
00000000000069d4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000069d5         db  0x46 ; 'F'
00000000000069d6         db  0x0e ; '.'
00000000000069d7         db  0x10 ; '.'
00000000000069d8         db  0x83 ; '.'
00000000000069d9         db  0x02 ; '.'
00000000000069da         db  0x4e ; 'N'
00000000000069db         db  0xc3 ; '.'
00000000000069dc         db  0x0e ; '.'
00000000000069dd         db  0x08 ; '.'
00000000000069de         db  0x00 ; '.'
00000000000069df         db  0x00 ; '.'
00000000000069e0         dd         0x00000024                                  ; Length of the record
00000000000069e4         dd         0x00000274                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
00000000000069e8         db         0x68, 0xbc, 2 dup (0xff)                    ; begin 0x2650
00000000000069ec         db         0x42, 3 dup (0x00)                          ; length 0x42 (end at 0x2692)
00000000000069f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000069f1         db  0x41 ; 'A'
00000000000069f2         db  0x0e ; '.'
00000000000069f3         db  0x10 ; '.'
00000000000069f4         db  0x86 ; '.'
00000000000069f5         db  0x02 ; '.'
00000000000069f6         db  0x41 ; 'A'
00000000000069f7         db  0x0e ; '.'
00000000000069f8         db  0x18 ; '.'
00000000000069f9         db  0x83 ; '.'
00000000000069fa         db  0x03 ; '.'
00000000000069fb         db  0x51 ; 'Q'
00000000000069fc         db  0x0e ; '.'
00000000000069fd         db  0x20 ; ' '
00000000000069fe         db  0x6a ; 'j'
00000000000069ff         db  0x0e ; '.'
0000000000006a00         db  0x18 ; '.'
0000000000006a01         db  0x43 ; 'C'
0000000000006a02         db  0x0e ; '.'
0000000000006a03         db  0x10 ; '.'
0000000000006a04         db  0x41 ; 'A'
0000000000006a05         db  0x0e ; '.'
0000000000006a06         db  0x08 ; '.'
0000000000006a07         db  0x00 ; '.'
0000000000006a08         dd         0x0000004c                                  ; Length of the record
0000000000006a0c         dd         0x0000029c                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006a10         db         0x90, 0xbc, 2 dup (0xff)                    ; begin 0x26a0
0000000000006a14         db         0xae, 0x01, 2 dup (0x00)                    ; length 0x1ae (end at 0x284e)
0000000000006a18         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006a19         db  0x42 ; 'B'
0000000000006a1a         db  0x0e ; '.'
0000000000006a1b         db  0x10 ; '.'
0000000000006a1c         db  0x8f ; '.'
0000000000006a1d         db  0x02 ; '.'
0000000000006a1e         db  0x42 ; 'B'
0000000000006a1f         db  0x0e ; '.'
0000000000006a20         db  0x18 ; '.'
0000000000006a21         db  0x8e ; '.'
0000000000006a22         db  0x03 ; '.'
0000000000006a23         db  0x45 ; 'E'
0000000000006a24         db  0x0e ; '.'
0000000000006a25         db  0x20 ; ' '
0000000000006a26         db  0x8d ; '.'
0000000000006a27         db  0x04 ; '.'
0000000000006a28         db  0x42 ; 'B'
0000000000006a29         db  0x0e ; '.'
0000000000006a2a         db  0x28 ; '('
0000000000006a2b         db  0x8c ; '.'
0000000000006a2c         db  0x05 ; '.'
0000000000006a2d         db  0x44 ; 'D'
0000000000006a2e         db  0x0e ; '.'
0000000000006a2f         db  0x30 ; '0'
0000000000006a30         db  0x86 ; '.'
0000000000006a31         db  0x06 ; '.'
0000000000006a32         db  0x41 ; 'A'
0000000000006a33         db  0x0e ; '.'
0000000000006a34         db  0x38 ; '8'
0000000000006a35         db  0x83 ; '.'
0000000000006a36         db  0x07 ; '.'
0000000000006a37         db  0x44 ; 'D'
0000000000006a38         db  0x0e ; '.'
0000000000006a39         db  0x50 ; 'P'
0000000000006a3a         db  0x02 ; '.'
0000000000006a3b         db  0xd0 ; '.'
0000000000006a3c         db  0x0a ; '.'
0000000000006a3d         db  0x0e ; '.'
0000000000006a3e         db  0x38 ; '8'
0000000000006a3f         db  0x44 ; 'D'
0000000000006a40         db  0x0e ; '.'
0000000000006a41         db  0x30 ; '0'
0000000000006a42         db  0x41 ; 'A'
0000000000006a43         db  0x0e ; '.'
0000000000006a44         db  0x28 ; '('
0000000000006a45         db  0x42 ; 'B'
0000000000006a46         db  0x0e ; '.'
0000000000006a47         db  0x20 ; ' '
0000000000006a48         db  0x42 ; 'B'
0000000000006a49         db  0x0e ; '.'
0000000000006a4a         db  0x18 ; '.'
0000000000006a4b         db  0x42 ; 'B'
0000000000006a4c         db  0x0e ; '.'
0000000000006a4d         db  0x10 ; '.'
0000000000006a4e         db  0x42 ; 'B'
0000000000006a4f         db  0x0e ; '.'
0000000000006a50         db  0x08 ; '.'
0000000000006a51         db  0x47 ; 'G'
0000000000006a52         db  0x0b ; '.'
0000000000006a53         db  0x00 ; '.'
0000000000006a54         db  0x00 ; '.'
0000000000006a55         db  0x00 ; '.'
0000000000006a56         db  0x00 ; '.'
0000000000006a57         db  0x00 ; '.'
0000000000006a58         dd         0x00000038                                  ; Length of the record
0000000000006a5c         dd         0x000002ec                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006a60         db         0xf0, 0xbd, 2 dup (0xff)                    ; begin 0x2850
0000000000006a64         db         0x3f, 0x01, 2 dup (0x00)                    ; length 0x13f (end at 0x298f)
0000000000006a68         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006a69         db  0x42 ; 'B'
0000000000006a6a         db  0x0e ; '.'
0000000000006a6b         db  0x10 ; '.'
0000000000006a6c         db  0x8d ; '.'
0000000000006a6d         db  0x02 ; '.'
0000000000006a6e         db  0x42 ; 'B'
0000000000006a6f         db  0x0e ; '.'
0000000000006a70         db  0x18 ; '.'
0000000000006a71         db  0x8c ; '.'
0000000000006a72         db  0x03 ; '.'
0000000000006a73         db  0x44 ; 'D'
0000000000006a74         db  0x0e ; '.'
0000000000006a75         db  0x20 ; ' '
0000000000006a76         db  0x86 ; '.'
0000000000006a77         db  0x04 ; '.'
0000000000006a78         db  0x41 ; 'A'
0000000000006a79         db  0x0e ; '.'
0000000000006a7a         db  0x28 ; '('
0000000000006a7b         db  0x83 ; '.'
0000000000006a7c         db  0x05 ; '.'
0000000000006a7d         db  0x4d ; 'M'
0000000000006a7e         db  0x0e ; '.'
0000000000006a7f         db  0x90 ; '.'
0000000000006a80         db  0x02 ; '.'
0000000000006a81         db  0x02 ; '.'
0000000000006a82         db  0x8e ; '.'
0000000000006a83         db  0x0a ; '.'
0000000000006a84         db  0x0e ; '.'
0000000000006a85         db  0x28 ; '('
0000000000006a86         db  0x41 ; 'A'
0000000000006a87         db  0x0e ; '.'
0000000000006a88         db  0x20 ; ' '
0000000000006a89         db  0x41 ; 'A'
0000000000006a8a         db  0x0e ; '.'
0000000000006a8b         db  0x18 ; '.'
0000000000006a8c         db  0x42 ; 'B'
0000000000006a8d         db  0x0e ; '.'
0000000000006a8e         db  0x10 ; '.'
0000000000006a8f         db  0x42 ; 'B'
0000000000006a90         db  0x0e ; '.'
0000000000006a91         db  0x08 ; '.'
0000000000006a92         db  0x46 ; 'F'
0000000000006a93         db  0x0b ; '.'
0000000000006a94         dd         0x00000048                                  ; Length of the record
0000000000006a98         dd         0x00000328                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006a9c         db         0xf4, 0xbe, 2 dup (0xff)                    ; begin 0x2990
0000000000006aa0         db         0x3b, 0x01, 2 dup (0x00)                    ; length 0x13b (end at 0x2acb)
0000000000006aa4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006aa5         db  0x42 ; 'B'
0000000000006aa6         db  0x0e ; '.'
0000000000006aa7         db  0x10 ; '.'
0000000000006aa8         db  0x8e ; '.'
0000000000006aa9         db  0x02 ; '.'
0000000000006aaa         db  0x42 ; 'B'
0000000000006aab         db  0x0e ; '.'
0000000000006aac         db  0x18 ; '.'
0000000000006aad         db  0x8d ; '.'
0000000000006aae         db  0x03 ; '.'
0000000000006aaf         db  0x45 ; 'E'
0000000000006ab0         db  0x0e ; '.'
0000000000006ab1         db  0x20 ; ' '
0000000000006ab2         db  0x8c ; '.'
0000000000006ab3         db  0x04 ; '.'
0000000000006ab4         db  0x41 ; 'A'
0000000000006ab5         db  0x0e ; '.'
0000000000006ab6         db  0x28 ; '('
0000000000006ab7         db  0x86 ; '.'
0000000000006ab8         db  0x05 ; '.'
0000000000006ab9         db  0x44 ; 'D'
0000000000006aba         db  0x0e ; '.'
0000000000006abb         db  0x30 ; '0'
0000000000006abc         db  0x83 ; '.'
0000000000006abd         db  0x06 ; '.'
0000000000006abe         db  0x4a ; 'J'
0000000000006abf         db  0x0e ; '.'
0000000000006ac0         db  0x80 ; '.'
0000000000006ac1         db  0x02 ; '.'
0000000000006ac2         db  0x03 ; '.'
0000000000006ac3         db  0x0d ; '.'
0000000000006ac4         db  0x01 ; '.'
0000000000006ac5         db  0x0a ; '.'
0000000000006ac6         db  0x0e ; '.'
0000000000006ac7         db  0x30 ; '0'
0000000000006ac8         db  0x41 ; 'A'
0000000000006ac9         db  0x0e ; '.'
0000000000006aca         db  0x28 ; '('
0000000000006acb         db  0x41 ; 'A'
0000000000006acc         db  0x0e ; '.'
0000000000006acd         db  0x20 ; ' '
0000000000006ace         db  0x42 ; 'B'
0000000000006acf         db  0x0e ; '.'
0000000000006ad0         db  0x18 ; '.'
0000000000006ad1         db  0x42 ; 'B'
0000000000006ad2         db  0x0e ; '.'
0000000000006ad3         db  0x10 ; '.'
0000000000006ad4         db  0x42 ; 'B'
0000000000006ad5         db  0x0e ; '.'
0000000000006ad6         db  0x08 ; '.'
0000000000006ad7         db  0x43 ; 'C'
0000000000006ad8         db  0x0b ; '.'
0000000000006ad9         db  0x00 ; '.'
0000000000006ada         db  0x00 ; '.'
0000000000006adb         db  0x00 ; '.'
0000000000006adc         db  0x00 ; '.'
0000000000006add         db  0x00 ; '.'
0000000000006ade         db  0x00 ; '.'
0000000000006adf         db  0x00 ; '.'
0000000000006ae0         dd         0x0000001c                                  ; Length of the record
0000000000006ae4         dd         0x00000374                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006ae8         db         0xe8, 0xbf, 2 dup (0xff)                    ; begin 0x2ad0
0000000000006aec         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x2b6f)
0000000000006af0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006af1         db  0x44 ; 'D'
0000000000006af2         db  0x0e ; '.'
0000000000006af3         db  0x10 ; '.'
0000000000006af4         db  0x83 ; '.'
0000000000006af5         db  0x02 ; '.'
0000000000006af6         db  0x02 ; '.'
0000000000006af7         db  0x78 ; 'x'
0000000000006af8         db  0x0a ; '.'
0000000000006af9         db  0x0e ; '.'
0000000000006afa         db  0x08 ; '.'
0000000000006afb         db  0x41 ; 'A'
0000000000006afc         db  0x0b ; '.'
0000000000006afd         db  0x00 ; '.'
0000000000006afe         db  0x00 ; '.'
0000000000006aff         db  0x00 ; '.'
0000000000006b00         dd         0x00000040                                  ; Length of the record
0000000000006b04         dd         0x00000394                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006b08         db         0x68, 0xc0, 2 dup (0xff)                    ; begin 0x2b70
0000000000006b0c         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x2c57)
0000000000006b10         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b11         db  0x41 ; 'A'
0000000000006b12         db  0x0e ; '.'
0000000000006b13         db  0x10 ; '.'
0000000000006b14         db  0x86 ; '.'
0000000000006b15         db  0x02 ; '.'
0000000000006b16         db  0x41 ; 'A'
0000000000006b17         db  0x0e ; '.'
0000000000006b18         db  0x18 ; '.'
0000000000006b19         db  0x83 ; '.'
0000000000006b1a         db  0x03 ; '.'
0000000000006b1b         db  0x49 ; 'I'
0000000000006b1c         db  0x0e ; '.'
0000000000006b1d         db  0x20 ; ' '
0000000000006b1e         db  0x6e ; 'n'
0000000000006b1f         db  0x0a ; '.'
0000000000006b20         db  0x0e ; '.'
0000000000006b21         db  0x18 ; '.'
0000000000006b22         db  0x41 ; 'A'
0000000000006b23         db  0x0e ; '.'
0000000000006b24         db  0x10 ; '.'
0000000000006b25         db  0x41 ; 'A'
0000000000006b26         db  0x0e ; '.'
0000000000006b27         db  0x08 ; '.'
0000000000006b28         db  0x45 ; 'E'
0000000000006b29         db  0x0b ; '.'
0000000000006b2a         db  0x02 ; '.'
0000000000006b2b         db  0x4a ; 'J'
0000000000006b2c         db  0x0a ; '.'
0000000000006b2d         db  0x0e ; '.'
0000000000006b2e         db  0x18 ; '.'
0000000000006b2f         db  0x41 ; 'A'
0000000000006b30         db  0x0e ; '.'
0000000000006b31         db  0x10 ; '.'
0000000000006b32         db  0x41 ; 'A'
0000000000006b33         db  0x0e ; '.'
0000000000006b34         db  0x08 ; '.'
0000000000006b35         db  0x44 ; 'D'
0000000000006b36         db  0x0b ; '.'
0000000000006b37         db  0x02 ; '.'
0000000000006b38         db  0x54 ; 'T'
0000000000006b39         db  0x0e ; '.'
0000000000006b3a         db  0x18 ; '.'
0000000000006b3b         db  0x41 ; 'A'
0000000000006b3c         db  0x0e ; '.'
0000000000006b3d         db  0x10 ; '.'
0000000000006b3e         db  0x41 ; 'A'
0000000000006b3f         db  0x0e ; '.'
0000000000006b40         db  0x08 ; '.'
0000000000006b41         db  0x00 ; '.'
0000000000006b42         db  0x00 ; '.'
0000000000006b43         db  0x00 ; '.'
0000000000006b44         dd         0x00000074                                  ; Length of the record
0000000000006b48         dd         0x000003d8                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006b4c         db         0x14, 0xc1, 2 dup (0xff)                    ; begin 0x2c60
0000000000006b50         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x3e94)
0000000000006b54         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b55         db  0x42 ; 'B'
0000000000006b56         db  0x0e ; '.'
0000000000006b57         db  0x10 ; '.'
0000000000006b58         db  0x8f ; '.'
0000000000006b59         db  0x02 ; '.'
0000000000006b5a         db  0x42 ; 'B'
0000000000006b5b         db  0x0e ; '.'
0000000000006b5c         db  0x18 ; '.'
0000000000006b5d         db  0x8e ; '.'
0000000000006b5e         db  0x03 ; '.'
0000000000006b5f         db  0x45 ; 'E'
0000000000006b60         db  0x0e ; '.'
0000000000006b61         db  0x20 ; ' '
0000000000006b62         db  0x8d ; '.'
0000000000006b63         db  0x04 ; '.'
0000000000006b64         db  0x42 ; 'B'
0000000000006b65         db  0x0e ; '.'
0000000000006b66         db  0x28 ; '('
0000000000006b67         db  0x8c ; '.'
0000000000006b68         db  0x05 ; '.'
0000000000006b69         db  0x44 ; 'D'
0000000000006b6a         db  0x0e ; '.'
0000000000006b6b         db  0x30 ; '0'
0000000000006b6c         db  0x86 ; '.'
0000000000006b6d         db  0x06 ; '.'
0000000000006b6e         db  0x41 ; 'A'
0000000000006b6f         db  0x0e ; '.'
0000000000006b70         db  0x38 ; '8'
0000000000006b71         db  0x83 ; '.'
0000000000006b72         db  0x07 ; '.'
0000000000006b73         db  0x53 ; 'S'
0000000000006b74         db  0x0e ; '.'
0000000000006b75         db  0xf0 ; '.'
0000000000006b76         db  0x01 ; '.'
0000000000006b77         db  0x03 ; '.'
0000000000006b78         db  0x81 ; '.'
0000000000006b79         db  0x0b ; '.'
0000000000006b7a         db  0x0e ; '.'
0000000000006b7b         db  0xf8 ; '.'
0000000000006b7c         db  0x01 ; '.'
0000000000006b7d         db  0x4a ; 'J'
0000000000006b7e         db  0x0e ; '.'
0000000000006b7f         db  0x80 ; '.'
0000000000006b80         db  0x02 ; '.'
0000000000006b81         db  0x44 ; 'D'
0000000000006b82         db  0x0e ; '.'
0000000000006b83         db  0x88 ; '.'
0000000000006b84         db  0x02 ; '.'
0000000000006b85         db  0x45 ; 'E'
0000000000006b86         db  0x0e ; '.'
0000000000006b87         db  0x90 ; '.'
0000000000006b88         db  0x02 ; '.'
0000000000006b89         db  0x5f ; '_'
0000000000006b8a         db  0x0e ; '.'
0000000000006b8b         db  0xf0 ; '.'
0000000000006b8c         db  0x01 ; '.'
0000000000006b8d         db  0x64 ; 'd'
0000000000006b8e         db  0x0a ; '.'
0000000000006b8f         db  0x0e ; '.'
0000000000006b90         db  0x38 ; '8'
0000000000006b91         db  0x41 ; 'A'
0000000000006b92         db  0x0e ; '.'
0000000000006b93         db  0x30 ; '0'
0000000000006b94         db  0x41 ; 'A'
0000000000006b95         db  0x0e ; '.'
0000000000006b96         db  0x28 ; '('
0000000000006b97         db  0x42 ; 'B'
0000000000006b98         db  0x0e ; '.'
0000000000006b99         db  0x20 ; ' '
0000000000006b9a         db  0x42 ; 'B'
0000000000006b9b         db  0x0e ; '.'
0000000000006b9c         db  0x18 ; '.'
0000000000006b9d         db  0x42 ; 'B'
0000000000006b9e         db  0x0e ; '.'
0000000000006b9f         db  0x10 ; '.'
0000000000006ba0         db  0x42 ; 'B'
0000000000006ba1         db  0x0e ; '.'
0000000000006ba2         db  0x08 ; '.'
0000000000006ba3         db  0x44 ; 'D'
0000000000006ba4         db  0x0b ; '.'
0000000000006ba5         db  0x03 ; '.'
0000000000006ba6         db  0x99 ; '.'
0000000000006ba7         db  0x05 ; '.'
0000000000006ba8         db  0x0e ; '.'
0000000000006ba9         db  0xf8 ; '.'
0000000000006baa         db  0x01 ; '.'
0000000000006bab         db  0x4d ; 'M'
0000000000006bac         db  0x0e ; '.'
0000000000006bad         db  0x80 ; '.'
0000000000006bae         db  0x02 ; '.'
0000000000006baf         db  0x44 ; 'D'
0000000000006bb0         db  0x0e ; '.'
0000000000006bb1         db  0x88 ; '.'
0000000000006bb2         db  0x02 ; '.'
0000000000006bb3         db  0x47 ; 'G'
0000000000006bb4         db  0x0e ; '.'
0000000000006bb5         db  0x90 ; '.'
0000000000006bb6         db  0x02 ; '.'
0000000000006bb7         db  0x5b ; '['
0000000000006bb8         db  0x0e ; '.'
0000000000006bb9         db  0xf0 ; '.'
0000000000006bba         db  0x01 ; '.'
0000000000006bbb         db  0x00 ; '.'
0000000000006bbc         dd         0x00000068                                  ; Length of the record
0000000000006bc0         dd         0x00000450                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006bc4         db         0xdc, 0xd2, 2 dup (0xff)                    ; begin 0x3ea0
0000000000006bc8         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x404b)
0000000000006bcc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006bcd         db  0x42 ; 'B'
0000000000006bce         db  0x0e ; '.'
0000000000006bcf         db  0x10 ; '.'
0000000000006bd0         db  0x8f ; '.'
0000000000006bd1         db  0x02 ; '.'
0000000000006bd2         db  0x42 ; 'B'
0000000000006bd3         db  0x0e ; '.'
0000000000006bd4         db  0x18 ; '.'
0000000000006bd5         db  0x8e ; '.'
0000000000006bd6         db  0x03 ; '.'
0000000000006bd7         db  0x45 ; 'E'
0000000000006bd8         db  0x0e ; '.'
0000000000006bd9         db  0x20 ; ' '
0000000000006bda         db  0x8d ; '.'
0000000000006bdb         db  0x04 ; '.'
0000000000006bdc         db  0x42 ; 'B'
0000000000006bdd         db  0x0e ; '.'
0000000000006bde         db  0x28 ; '('
0000000000006bdf         db  0x8c ; '.'
0000000000006be0         db  0x05 ; '.'
0000000000006be1         db  0x44 ; 'D'
0000000000006be2         db  0x0e ; '.'
0000000000006be3         db  0x30 ; '0'
0000000000006be4         db  0x86 ; '.'
0000000000006be5         db  0x06 ; '.'
0000000000006be6         db  0x41 ; 'A'
0000000000006be7         db  0x0e ; '.'
0000000000006be8         db  0x38 ; '8'
0000000000006be9         db  0x83 ; '.'
0000000000006bea         db  0x07 ; '.'
0000000000006beb         db  0x47 ; 'G'
0000000000006bec         db  0x0e ; '.'
0000000000006bed         db  0x60 ; '`'
0000000000006bee         db  0x02 ; '.'
0000000000006bef         db  0x99 ; '.'
0000000000006bf0         db  0x0e ; '.'
0000000000006bf1         db  0x68 ; 'h'
0000000000006bf2         db  0x5f ; '_'
0000000000006bf3         db  0x0e ; '.'
0000000000006bf4         db  0x70 ; 'p'
0000000000006bf5         db  0x46 ; 'F'
0000000000006bf6         db  0x0e ; '.'
0000000000006bf7         db  0x78 ; 'x'
0000000000006bf8         db  0x42 ; 'B'
0000000000006bf9         db  0x0e ; '.'
0000000000006bfa         db  0x80 ; '.'
0000000000006bfb         db  0x01 ; '.'
0000000000006bfc         db  0x59 ; 'Y'
0000000000006bfd         db  0x0e ; '.'
0000000000006bfe         db  0x60 ; '`'
0000000000006bff         db  0x02 ; '.'
0000000000006c00         db  0x40 ; '@'
0000000000006c01         db  0x0e ; '.'
0000000000006c02         db  0x68 ; 'h'
0000000000006c03         db  0x4b ; 'K'
0000000000006c04         db  0x0e ; '.'
0000000000006c05         db  0x70 ; 'p'
0000000000006c06         db  0x43 ; 'C'
0000000000006c07         db  0x0e ; '.'
0000000000006c08         db  0x78 ; 'x'
0000000000006c09         db  0x45 ; 'E'
0000000000006c0a         db  0x0e ; '.'
0000000000006c0b         db  0x80 ; '.'
0000000000006c0c         db  0x01 ; '.'
0000000000006c0d         db  0x5e ; '^'
0000000000006c0e         db  0x0e ; '.'
0000000000006c0f         db  0x60 ; '`'
0000000000006c10         db  0x4c ; 'L'
0000000000006c11         db  0x0a ; '.'
0000000000006c12         db  0x0e ; '.'
0000000000006c13         db  0x38 ; '8'
0000000000006c14         db  0x44 ; 'D'
0000000000006c15         db  0x0e ; '.'
0000000000006c16         db  0x30 ; '0'
0000000000006c17         db  0x41 ; 'A'
0000000000006c18         db  0x0e ; '.'
0000000000006c19         db  0x28 ; '('
0000000000006c1a         db  0x42 ; 'B'
0000000000006c1b         db  0x0e ; '.'
0000000000006c1c         db  0x20 ; ' '
0000000000006c1d         db  0x42 ; 'B'
0000000000006c1e         db  0x0e ; '.'
0000000000006c1f         db  0x18 ; '.'
0000000000006c20         db  0x42 ; 'B'
0000000000006c21         db  0x0e ; '.'
0000000000006c22         db  0x10 ; '.'
0000000000006c23         db  0x42 ; 'B'
0000000000006c24         db  0x0e ; '.'
0000000000006c25         db  0x08 ; '.'
0000000000006c26         db  0x46 ; 'F'
0000000000006c27         db  0x0b ; '.'
0000000000006c28         dd         0x00000028                                  ; Length of the record
0000000000006c2c         dd         0x000004bc                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006c30         db         0x20, 0xd4, 2 dup (0xff)                    ; begin 0x4050
0000000000006c34         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x4086)
0000000000006c38         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006c39         db  0x42 ; 'B'
0000000000006c3a         db  0x0e ; '.'
0000000000006c3b         db  0x10 ; '.'
0000000000006c3c         db  0x8c ; '.'
0000000000006c3d         db  0x02 ; '.'
0000000000006c3e         db  0x41 ; 'A'
0000000000006c3f         db  0x0e ; '.'
0000000000006c40         db  0x18 ; '.'
0000000000006c41         db  0x86 ; '.'
0000000000006c42         db  0x03 ; '.'
0000000000006c43         db  0x41 ; 'A'
0000000000006c44         db  0x0e ; '.'
0000000000006c45         db  0x20 ; ' '
0000000000006c46         db  0x83 ; '.'
0000000000006c47         db  0x04 ; '.'
0000000000006c48         db  0x6e ; 'n'
0000000000006c49         db  0x0e ; '.'
0000000000006c4a         db  0x18 ; '.'
0000000000006c4b         db  0x41 ; 'A'
0000000000006c4c         db  0x0e ; '.'
0000000000006c4d         db  0x10 ; '.'
0000000000006c4e         db  0x42 ; 'B'
0000000000006c4f         db  0x0e ; '.'
0000000000006c50         db  0x08 ; '.'
0000000000006c51         db  0x00 ; '.'
0000000000006c52         db  0x00 ; '.'
0000000000006c53         db  0x00 ; '.'
0000000000006c54         dd         0x00000010                                  ; Length of the record
0000000000006c58         dd         0x000004e8                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006c5c         db         0x34, 0xd4, 2 dup (0xff)                    ; begin 0x4090
0000000000006c60         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x40a1)
0000000000006c64         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006c65         align      8
0000000000006c68         dd         0x00000010                                  ; Length of the record
0000000000006c6c         dd         0x000004fc                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006c70         db         0x40, 0xd4, 2 dup (0xff)                    ; begin 0x40b0
0000000000006c74         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x40c1)
0000000000006c78         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006c79         align      4
0000000000006c7c         dd         0x00000010                                  ; Length of the record
0000000000006c80         dd         0x00000510                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006c84         db         0x4c, 0xd4, 2 dup (0xff)                    ; begin 0x40d0
0000000000006c88         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x4105)
0000000000006c8c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006c8d         align      16
0000000000006c90         dd         0x00000010                                  ; Length of the record
0000000000006c94         dd         0x00000524                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006c98         db         0x78, 0xd4, 2 dup (0xff)                    ; begin 0x4110
0000000000006c9c         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x4125)
0000000000006ca0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ca1         align      4
0000000000006ca4         dd         0x00000010                                  ; Length of the record
0000000000006ca8         dd         0x00000538                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006cac         db         0x84, 0xd4, 2 dup (0xff)                    ; begin 0x4130
0000000000006cb0         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x4160)
0000000000006cb4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006cb5         db  0x6b ; 'k'
0000000000006cb6         db  0x0e ; '.'
0000000000006cb7         db  0x10 ; '.'
0000000000006cb8         dd         0x00000050                                  ; Length of the record
0000000000006cbc         dd         0x0000054c                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006cc0         db         0xa0, 0xd4, 2 dup (0xff)                    ; begin 0x4160
0000000000006cc4         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x41d4)
0000000000006cc8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006cc9         db  0x42 ; 'B'
0000000000006cca         db  0x0e ; '.'
0000000000006ccb         db  0x10 ; '.'
0000000000006ccc         db  0x8f ; '.'
0000000000006ccd         db  0x02 ; '.'
0000000000006cce         db  0x42 ; 'B'
0000000000006ccf         db  0x0e ; '.'
0000000000006cd0         db  0x18 ; '.'
0000000000006cd1         db  0x8e ; '.'
0000000000006cd2         db  0x03 ; '.'
0000000000006cd3         db  0x49 ; 'I'
0000000000006cd4         db  0x0e ; '.'
0000000000006cd5         db  0x20 ; ' '
0000000000006cd6         db  0x8d ; '.'
0000000000006cd7         db  0x04 ; '.'
0000000000006cd8         db  0x42 ; 'B'
0000000000006cd9         db  0x0e ; '.'
0000000000006cda         db  0x28 ; '('
0000000000006cdb         db  0x8c ; '.'
0000000000006cdc         db  0x05 ; '.'
0000000000006cdd         db  0x44 ; 'D'
0000000000006cde         db  0x0e ; '.'
0000000000006cdf         db  0x30 ; '0'
0000000000006ce0         db  0x86 ; '.'
0000000000006ce1         db  0x06 ; '.'
0000000000006ce2         db  0x41 ; 'A'
0000000000006ce3         db  0x0e ; '.'
0000000000006ce4         db  0x38 ; '8'
0000000000006ce5         db  0x83 ; '.'
0000000000006ce6         db  0x07 ; '.'
0000000000006ce7         db  0x4d ; 'M'
0000000000006ce8         db  0x0e ; '.'
0000000000006ce9         db  0x50 ; 'P'
0000000000006cea         db  0x5f ; '_'
0000000000006ceb         db  0x0e ; '.'
0000000000006cec         db  0x58 ; 'X'
0000000000006ced         db  0x47 ; 'G'
0000000000006cee         db  0x0e ; '.'
0000000000006cef         db  0x60 ; '`'
0000000000006cf0         db  0x46 ; 'F'
0000000000006cf1         db  0x0e ; '.'
0000000000006cf2         db  0x68 ; 'h'
0000000000006cf3         db  0x44 ; 'D'
0000000000006cf4         db  0x0e ; '.'
0000000000006cf5         db  0x70 ; 'p'
0000000000006cf6         db  0x58 ; 'X'
0000000000006cf7         db  0x0e ; '.'
0000000000006cf8         db  0x38 ; '8'
0000000000006cf9         db  0x41 ; 'A'
0000000000006cfa         db  0x0e ; '.'
0000000000006cfb         db  0x30 ; '0'
0000000000006cfc         db  0x41 ; 'A'
0000000000006cfd         db  0x0e ; '.'
0000000000006cfe         db  0x28 ; '('
0000000000006cff         db  0x42 ; 'B'
0000000000006d00         db  0x0e ; '.'
0000000000006d01         db  0x20 ; ' '
0000000000006d02         db  0x42 ; 'B'
0000000000006d03         db  0x0e ; '.'
0000000000006d04         db  0x18 ; '.'
0000000000006d05         db  0x42 ; 'B'
0000000000006d06         db  0x0e ; '.'
0000000000006d07         db  0x10 ; '.'
0000000000006d08         db  0x42 ; 'B'
0000000000006d09         db  0x0e ; '.'
0000000000006d0a         db  0x08 ; '.'
0000000000006d0b         db  0x00 ; '.'
0000000000006d0c         dd         0x00000068                                  ; Length of the record
0000000000006d10         dd         0x000005a0                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006d14         db         0xcc, 0xd4, 2 dup (0xff)                    ; begin 0x41e0
0000000000006d18         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x42c3)
0000000000006d1c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d1d         db  0x42 ; 'B'
0000000000006d1e         db  0x0e ; '.'
0000000000006d1f         db  0x10 ; '.'
0000000000006d20         db  0x8f ; '.'
0000000000006d21         db  0x02 ; '.'
0000000000006d22         db  0x42 ; 'B'
0000000000006d23         db  0x0e ; '.'
0000000000006d24         db  0x18 ; '.'
0000000000006d25         db  0x8e ; '.'
0000000000006d26         db  0x03 ; '.'
0000000000006d27         db  0x49 ; 'I'
0000000000006d28         db  0x0e ; '.'
0000000000006d29         db  0x20 ; ' '
0000000000006d2a         db  0x8d ; '.'
0000000000006d2b         db  0x04 ; '.'
0000000000006d2c         db  0x42 ; 'B'
0000000000006d2d         db  0x0e ; '.'
0000000000006d2e         db  0x28 ; '('
0000000000006d2f         db  0x8c ; '.'
0000000000006d30         db  0x05 ; '.'
0000000000006d31         db  0x44 ; 'D'
0000000000006d32         db  0x0e ; '.'
0000000000006d33         db  0x30 ; '0'
0000000000006d34         db  0x86 ; '.'
0000000000006d35         db  0x06 ; '.'
0000000000006d36         db  0x41 ; 'A'
0000000000006d37         db  0x0e ; '.'
0000000000006d38         db  0x38 ; '8'
0000000000006d39         db  0x83 ; '.'
0000000000006d3a         db  0x07 ; '.'
0000000000006d3b         db  0x4d ; 'M'
0000000000006d3c         db  0x0e ; '.'
0000000000006d3d         db  0x70 ; 'p'
0000000000006d3e         db  0x65 ; 'e'
0000000000006d3f         db  0x0e ; '.'
0000000000006d40         db  0x78 ; 'x'
0000000000006d41         db  0x4d ; 'M'
0000000000006d42         db  0x0e ; '.'
0000000000006d43         db  0x80 ; '.'
0000000000006d44         db  0x01 ; '.'
0000000000006d45         db  0x46 ; 'F'
0000000000006d46         db  0x0e ; '.'
0000000000006d47         db  0x88 ; '.'
0000000000006d48         db  0x01 ; '.'
0000000000006d49         db  0x42 ; 'B'
0000000000006d4a         db  0x0e ; '.'
0000000000006d4b         db  0x90 ; '.'
0000000000006d4c         db  0x01 ; '.'
0000000000006d4d         db  0x5e ; '^'
0000000000006d4e         db  0x0e ; '.'
0000000000006d4f         db  0x70 ; 'p'
0000000000006d50         db  0x56 ; 'V'
0000000000006d51         db  0x0e ; '.'
0000000000006d52         db  0x78 ; 'x'
0000000000006d53         db  0x43 ; 'C'
0000000000006d54         db  0x0e ; '.'
0000000000006d55         db  0x80 ; '.'
0000000000006d56         db  0x01 ; '.'
0000000000006d57         db  0x43 ; 'C'
0000000000006d58         db  0x0e ; '.'
0000000000006d59         db  0x88 ; '.'
0000000000006d5a         db  0x01 ; '.'
0000000000006d5b         db  0x56 ; 'V'
0000000000006d5c         db  0x0e ; '.'
0000000000006d5d         db  0x90 ; '.'
0000000000006d5e         db  0x01 ; '.'
0000000000006d5f         db  0x52 ; 'R'
0000000000006d60         db  0x0e ; '.'
0000000000006d61         db  0x70 ; 'p'
0000000000006d62         db  0x5b ; '['
0000000000006d63         db  0x0e ; '.'
0000000000006d64         db  0x38 ; '8'
0000000000006d65         db  0x41 ; 'A'
0000000000006d66         db  0x0e ; '.'
0000000000006d67         db  0x30 ; '0'
0000000000006d68         db  0x41 ; 'A'
0000000000006d69         db  0x0e ; '.'
0000000000006d6a         db  0x28 ; '('
0000000000006d6b         db  0x42 ; 'B'
0000000000006d6c         db  0x0e ; '.'
0000000000006d6d         db  0x20 ; ' '
0000000000006d6e         db  0x42 ; 'B'
0000000000006d6f         db  0x0e ; '.'
0000000000006d70         db  0x18 ; '.'
0000000000006d71         db  0x42 ; 'B'
0000000000006d72         db  0x0e ; '.'
0000000000006d73         db  0x10 ; '.'
0000000000006d74         db  0x42 ; 'B'
0000000000006d75         db  0x0e ; '.'
0000000000006d76         db  0x08 ; '.'
0000000000006d77         db  0x00 ; '.'
0000000000006d78         dd         0x00000010                                  ; Length of the record
0000000000006d7c         dd         0x0000060c                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006d80         db         0x50, 0xd5, 2 dup (0xff)                    ; begin 0x42d0
0000000000006d84         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x42da)
0000000000006d88         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d89         align      4
0000000000006d8c         dd         0x00000028                                  ; Length of the record
0000000000006d90         dd         0x00000620                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006d94         db         0x4c, 0xd5, 2 dup (0xff)                    ; begin 0x42e0
0000000000006d98         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x4373)
0000000000006d9c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d9d         db  0x48 ; 'H'
0000000000006d9e         db  0x0e ; '.'
0000000000006d9f         db  0x10 ; '.'
0000000000006da0         db  0x8c ; '.'
0000000000006da1         db  0x02 ; '.'
0000000000006da2         db  0x48 ; 'H'
0000000000006da3         db  0x0e ; '.'
0000000000006da4         db  0x18 ; '.'
0000000000006da5         db  0x86 ; '.'
0000000000006da6         db  0x03 ; '.'
0000000000006da7         db  0x41 ; 'A'
0000000000006da8         db  0x0e ; '.'
0000000000006da9         db  0x20 ; ' '
0000000000006daa         db  0x83 ; '.'
0000000000006dab         db  0x04 ; '.'
0000000000006dac         db  0x02 ; '.'
0000000000006dad         db  0x74 ; 't'
0000000000006dae         db  0x0e ; '.'
0000000000006daf         db  0x18 ; '.'
0000000000006db0         db  0x4b ; 'K'
0000000000006db1         db  0x0e ; '.'
0000000000006db2         db  0x10 ; '.'
0000000000006db3         db  0x42 ; 'B'
0000000000006db4         db  0x0e ; '.'
0000000000006db5         db  0x08 ; '.'
0000000000006db6         db  0x00 ; '.'
0000000000006db7         db  0x00 ; '.'
0000000000006db8         dd         0x00000010                                  ; Length of the record
0000000000006dbc         dd         0x0000064c                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006dc0         db         0xc0, 0xd5, 2 dup (0xff)                    ; begin 0x4380
0000000000006dc4         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4393)
0000000000006dc8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006dc9         align      4
0000000000006dcc         dd         0x00000010                                  ; Length of the record
0000000000006dd0         dd         0x00000660                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006dd4         db         0xcc, 0xd5, 2 dup (0xff)                    ; begin 0x43a0
0000000000006dd8         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x43ac)
0000000000006ddc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ddd         align      32
0000000000006de0         dd         0x00000010                                  ; Length of the record
0000000000006de4         dd         0x00000674                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006de8         db         0xc8, 0xd5, 2 dup (0xff)                    ; begin 0x43b0
0000000000006dec         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x43c8)
0000000000006df0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006df1         align      4
0000000000006df4         dd         0x00000010                                  ; Length of the record
0000000000006df8         dd         0x00000688                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006dfc         db         0xd4, 0xd5, 2 dup (0xff)                    ; begin 0x43d0
0000000000006e00         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x43e4)
0000000000006e04         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006e05         align      8
0000000000006e08         dd         0x00000018                                  ; Length of the record
0000000000006e0c         dd         0x0000069c                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006e10         db         0xe0, 0xd5, 2 dup (0xff)                    ; begin 0x43f0
0000000000006e14         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x447e)
0000000000006e18         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006e19         db  0x44 ; 'D'
0000000000006e1a         db  0x0e ; '.'
0000000000006e1b         db  0x50 ; 'P'
0000000000006e1c         db  0x02 ; '.'
0000000000006e1d         db  0x7f ; '.'
0000000000006e1e         db  0x0a ; '.'
0000000000006e1f         db  0x0e ; '.'
0000000000006e20         db  0x08 ; '.'
0000000000006e21         db  0x41 ; 'A'
0000000000006e22         db  0x0b ; '.'
0000000000006e23         db  0x00 ; '.'
0000000000006e24         dd         0x00000018                                  ; Length of the record
0000000000006e28         dd         0x000006b8                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006e2c         db         0x54, 0xd6, 2 dup (0xff)                    ; begin 0x4480
0000000000006e30         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x450a)
0000000000006e34         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006e35         db  0x44 ; 'D'
0000000000006e36         db  0x0e ; '.'
0000000000006e37         db  0x50 ; 'P'
0000000000006e38         db  0x02 ; '.'
0000000000006e39         db  0x7b ; '{'
0000000000006e3a         db  0x0a ; '.'
0000000000006e3b         db  0x0e ; '.'
0000000000006e3c         db  0x08 ; '.'
0000000000006e3d         db  0x41 ; 'A'
0000000000006e3e         db  0x0b ; '.'
0000000000006e3f         db  0x00 ; '.'
0000000000006e40         dd         0x00000010                                  ; Length of the record
0000000000006e44         dd         0x000006d4                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006e48         db         0xc8, 0xd6, 2 dup (0xff)                    ; begin 0x4510
0000000000006e4c         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x451c)
0000000000006e50         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006e51         align      4
0000000000006e54         dd         0x00000010                                  ; Length of the record
0000000000006e58         dd         0x000006e8                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006e5c         db         0xc4, 0xd6, 2 dup (0xff)                    ; begin 0x4520
0000000000006e60         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x452f)
0000000000006e64         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006e65         align      8
0000000000006e68         dd         0x00000018                                  ; Length of the record
0000000000006e6c         dd         0x000006fc                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006e70         db         0xc0, 0xd6, 2 dup (0xff)                    ; begin 0x4530
0000000000006e74         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x45c8)
0000000000006e78         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006e79         db  0x44 ; 'D'
0000000000006e7a         db  0x0e ; '.'
0000000000006e7b         db  0x50 ; 'P'
0000000000006e7c         db  0x02 ; '.'
0000000000006e7d         db  0x8e ; '.'
0000000000006e7e         db  0x0a ; '.'
0000000000006e7f         db  0x0e ; '.'
0000000000006e80         db  0x08 ; '.'
0000000000006e81         db  0x41 ; 'A'
0000000000006e82         db  0x0b ; '.'
0000000000006e83         db  0x00 ; '.'
0000000000006e84         dd         0x00000010                                  ; Length of the record
0000000000006e88         dd         0x00000718                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006e8c         db         0x44, 0xd7, 2 dup (0xff)                    ; begin 0x45d0
0000000000006e90         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x45e0)
0000000000006e94         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006e95         align      8
0000000000006e98         dd         0x00000010                                  ; Length of the record
0000000000006e9c         dd         0x0000072c                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006ea0         db         0x40, 0xd7, 2 dup (0xff)                    ; begin 0x45e0
0000000000006ea4         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x45f1)
0000000000006ea8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ea9         align      4
0000000000006eac         dd         0x00000010                                  ; Length of the record
0000000000006eb0         dd         0x00000740                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006eb4         db         0x4c, 0xd7, 2 dup (0xff)                    ; begin 0x4600
0000000000006eb8         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x460a)
0000000000006ebc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ebd         align      64
0000000000006ec0         dd         0x00000018                                  ; Length of the record
0000000000006ec4         dd         0x00000754                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006ec8         db         0x48, 0xd7, 2 dup (0xff)                    ; begin 0x4610
0000000000006ecc         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x469e)
0000000000006ed0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ed1         db  0x44 ; 'D'
0000000000006ed2         db  0x0e ; '.'
0000000000006ed3         db  0x50 ; 'P'
0000000000006ed4         db  0x02 ; '.'
0000000000006ed5         db  0x7f ; '.'
0000000000006ed6         db  0x0a ; '.'
0000000000006ed7         db  0x0e ; '.'
0000000000006ed8         db  0x08 ; '.'
0000000000006ed9         db  0x41 ; 'A'
0000000000006eda         db  0x0b ; '.'
0000000000006edb         db  0x00 ; '.'
0000000000006edc         dd         0x00000018                                  ; Length of the record
0000000000006ee0         dd         0x00000770                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006ee4         db         0xbc, 0xd7, 2 dup (0xff)                    ; begin 0x46a0
0000000000006ee8         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x4731)
0000000000006eec         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006eed         db  0x44 ; 'D'
0000000000006eee         db  0x0e ; '.'
0000000000006eef         db  0x50 ; 'P'
0000000000006ef0         db  0x02 ; '.'
0000000000006ef1         db  0x82 ; '.'
0000000000006ef2         db  0x0a ; '.'
0000000000006ef3         db  0x0e ; '.'
0000000000006ef4         db  0x08 ; '.'
0000000000006ef5         db  0x41 ; 'A'
0000000000006ef6         db  0x0b ; '.'
0000000000006ef7         db  0x00 ; '.'
0000000000006ef8         dd         0x00000010                                  ; Length of the record
0000000000006efc         dd         0x0000078c                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006f00         db         0x40, 0xd8, 2 dup (0xff)                    ; begin 0x4740
0000000000006f04         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x474c)
0000000000006f08         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f09         align      4
0000000000006f0c         dd         0x00000010                                  ; Length of the record
0000000000006f10         dd         0x000007a0                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006f14         db         0x3c, 0xd8, 2 dup (0xff)                    ; begin 0x4750
0000000000006f18         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x4767)
0000000000006f1c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f1d         align      32
0000000000006f20         dd         0x00000010                                  ; Length of the record
0000000000006f24         dd         0x000007b4                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006f28         db         0x48, 0xd8, 2 dup (0xff)                    ; begin 0x4770
0000000000006f2c         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4783)
0000000000006f30         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f31         align      4
0000000000006f34         dd         0x00000010                                  ; Length of the record
0000000000006f38         dd         0x000007c8                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006f3c         db         0x54, 0xd8, 2 dup (0xff)                    ; begin 0x4790
0000000000006f40         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x479c)
0000000000006f44         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f45         align      8
0000000000006f48         dd         0x00000010                                  ; Length of the record
0000000000006f4c         dd         0x000007dc                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006f50         db         0x50, 0xd8, 2 dup (0xff)                    ; begin 0x47a0
0000000000006f54         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x47b4)
0000000000006f58         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f59         align      4
0000000000006f5c         dd         0x00000010                                  ; Length of the record
0000000000006f60         dd         0x000007f0                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006f64         db         0x5c, 0xd8, 2 dup (0xff)                    ; begin 0x47c0
0000000000006f68         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x47d3)
0000000000006f6c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f6d         align      16
0000000000006f70         dd         0x00000014                                  ; Length of the record
0000000000006f74         dd         0x00000804                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006f78         db         0x68, 0xd8, 2 dup (0xff)                    ; begin 0x47e0
0000000000006f7c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x47f8)
0000000000006f80         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f81         align      8
0000000000006f88         dd         0x00000010                                  ; Length of the record
0000000000006f8c         dd         0x0000081c                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006f90         db         0x70, 0xd8, 2 dup (0xff)                    ; begin 0x4800
0000000000006f94         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x4810)
0000000000006f98         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f99         align      4
0000000000006f9c         dd         0x00000048                                  ; Length of the record
0000000000006fa0         dd         0x00000830                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006fa4         db         0x6c, 0xd8, 2 dup (0xff)                    ; begin 0x4810
0000000000006fa8         db         0xce, 0x01, 2 dup (0x00)                    ; length 0x1ce (end at 0x49de)
0000000000006fac         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006fad         db  0x42 ; 'B'
0000000000006fae         db  0x0e ; '.'
0000000000006faf         db  0x10 ; '.'
0000000000006fb0         db  0x8f ; '.'
0000000000006fb1         db  0x02 ; '.'
0000000000006fb2         db  0x42 ; 'B'
0000000000006fb3         db  0x0e ; '.'
0000000000006fb4         db  0x18 ; '.'
0000000000006fb5         db  0x8e ; '.'
0000000000006fb6         db  0x03 ; '.'
0000000000006fb7         db  0x42 ; 'B'
0000000000006fb8         db  0x0e ; '.'
0000000000006fb9         db  0x20 ; ' '
0000000000006fba         db  0x8d ; '.'
0000000000006fbb         db  0x04 ; '.'
0000000000006fbc         db  0x42 ; 'B'
0000000000006fbd         db  0x0e ; '.'
0000000000006fbe         db  0x28 ; '('
0000000000006fbf         db  0x8c ; '.'
0000000000006fc0         db  0x05 ; '.'
0000000000006fc1         db  0x44 ; 'D'
0000000000006fc2         db  0x0e ; '.'
0000000000006fc3         db  0x30 ; '0'
0000000000006fc4         db  0x86 ; '.'
0000000000006fc5         db  0x06 ; '.'
0000000000006fc6         db  0x41 ; 'A'
0000000000006fc7         db  0x0e ; '.'
0000000000006fc8         db  0x38 ; '8'
0000000000006fc9         db  0x83 ; '.'
0000000000006fca         db  0x07 ; '.'
0000000000006fcb         db  0x4b ; 'K'
0000000000006fcc         db  0x0e ; '.'
0000000000006fcd         db  0x70 ; 'p'
0000000000006fce         db  0x03 ; '.'
0000000000006fcf         db  0x7a ; 'z'
0000000000006fd0         db  0x01 ; '.'
0000000000006fd1         db  0x0a ; '.'
0000000000006fd2         db  0x0e ; '.'
0000000000006fd3         db  0x38 ; '8'
0000000000006fd4         db  0x41 ; 'A'
0000000000006fd5         db  0x0e ; '.'
0000000000006fd6         db  0x30 ; '0'
0000000000006fd7         db  0x41 ; 'A'
0000000000006fd8         db  0x0e ; '.'
0000000000006fd9         db  0x28 ; '('
0000000000006fda         db  0x42 ; 'B'
0000000000006fdb         db  0x0e ; '.'
0000000000006fdc         db  0x20 ; ' '
0000000000006fdd         db  0x42 ; 'B'
0000000000006fde         db  0x0e ; '.'
0000000000006fdf         db  0x18 ; '.'
0000000000006fe0         db  0x42 ; 'B'
0000000000006fe1         db  0x0e ; '.'
0000000000006fe2         db  0x10 ; '.'
0000000000006fe3         db  0x42 ; 'B'
0000000000006fe4         db  0x0e ; '.'
0000000000006fe5         db  0x08 ; '.'
0000000000006fe6         db  0x44 ; 'D'
0000000000006fe7         db  0x0b ; '.'
0000000000006fe8         dd         0x0000004c                                  ; Length of the record
0000000000006fec         dd         0x0000087c                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000006ff0         db         0xf0, 0xd9, 2 dup (0xff)                    ; begin 0x49e0
0000000000006ff4         db         0x36, 0x02, 2 dup (0x00)                    ; length 0x236 (end at 0x4c16)
0000000000006ff8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ff9         db  0x42 ; 'B'
0000000000006ffa         db  0x0e ; '.'
0000000000006ffb         db  0x10 ; '.'
0000000000006ffc         db  0x8f ; '.'
0000000000006ffd         db  0x02 ; '.'
0000000000006ffe         db  0x42 ; 'B'
0000000000006fff         db  0x0e ; '.'
0000000000007000         db  0x18 ; '.'
0000000000007001         db  0x8e ; '.'
0000000000007002         db  0x03 ; '.'
0000000000007003         db  0x42 ; 'B'
0000000000007004         db  0x0e ; '.'
0000000000007005         db  0x20 ; ' '
0000000000007006         db  0x8d ; '.'
0000000000007007         db  0x04 ; '.'
0000000000007008         db  0x42 ; 'B'
0000000000007009         db  0x0e ; '.'
000000000000700a         db  0x28 ; '('
000000000000700b         db  0x8c ; '.'
000000000000700c         db  0x05 ; '.'
000000000000700d         db  0x41 ; 'A'
000000000000700e         db  0x0e ; '.'
000000000000700f         db  0x30 ; '0'
0000000000007010         db  0x86 ; '.'
0000000000007011         db  0x06 ; '.'
0000000000007012         db  0x41 ; 'A'
0000000000007013         db  0x0e ; '.'
0000000000007014         db  0x38 ; '8'
0000000000007015         db  0x83 ; '.'
0000000000007016         db  0x07 ; '.'
0000000000007017         db  0x48 ; 'H'
0000000000007018         db  0x0e ; '.'
0000000000007019         db  0xa0 ; '.'
000000000000701a         db  0x01 ; '.'
000000000000701b         db  0x03 ; '.'
000000000000701c         db  0xa4 ; '.'
000000000000701d         db  0x01 ; '.'
000000000000701e         db  0x0a ; '.'
000000000000701f         db  0x0e ; '.'
0000000000007020         db  0x38 ; '8'
0000000000007021         db  0x41 ; 'A'
0000000000007022         db  0x0e ; '.'
0000000000007023         db  0x30 ; '0'
0000000000007024         db  0x41 ; 'A'
0000000000007025         db  0x0e ; '.'
0000000000007026         db  0x28 ; '('
0000000000007027         db  0x42 ; 'B'
0000000000007028         db  0x0e ; '.'
0000000000007029         db  0x20 ; ' '
000000000000702a         db  0x42 ; 'B'
000000000000702b         db  0x0e ; '.'
000000000000702c         db  0x18 ; '.'
000000000000702d         db  0x42 ; 'B'
000000000000702e         db  0x0e ; '.'
000000000000702f         db  0x10 ; '.'
0000000000007030         db  0x42 ; 'B'
0000000000007031         db  0x0e ; '.'
0000000000007032         db  0x08 ; '.'
0000000000007033         db  0x48 ; 'H'
0000000000007034         db  0x0b ; '.'
0000000000007035         db  0x00 ; '.'
0000000000007036         db  0x00 ; '.'
0000000000007037         db  0x00 ; '.'
0000000000007038         dd         0x00000110                                  ; Length of the record
000000000000703c         dd         0x000008cc                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000007040         db         0xe0, 0xdb, 2 dup (0xff)                    ; begin 0x4c20
0000000000007044         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x5037)
0000000000007048         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007049         db  0x42 ; 'B'
000000000000704a         db  0x0e ; '.'
000000000000704b         db  0x10 ; '.'
000000000000704c         db  0x8f ; '.'
000000000000704d         db  0x02 ; '.'
000000000000704e         db  0x42 ; 'B'
000000000000704f         db  0x0e ; '.'
0000000000007050         db  0x18 ; '.'
0000000000007051         db  0x8e ; '.'
0000000000007052         db  0x03 ; '.'
0000000000007053         db  0x42 ; 'B'
0000000000007054         db  0x0e ; '.'
0000000000007055         db  0x20 ; ' '
0000000000007056         db  0x8d ; '.'
0000000000007057         db  0x04 ; '.'
0000000000007058         db  0x42 ; 'B'
0000000000007059         db  0x0e ; '.'
000000000000705a         db  0x28 ; '('
000000000000705b         db  0x8c ; '.'
000000000000705c         db  0x05 ; '.'
000000000000705d         db  0x44 ; 'D'
000000000000705e         db  0x0e ; '.'
000000000000705f         db  0x30 ; '0'
0000000000007060         db  0x86 ; '.'
0000000000007061         db  0x06 ; '.'
0000000000007062         db  0x41 ; 'A'
0000000000007063         db  0x0e ; '.'
0000000000007064         db  0x38 ; '8'
0000000000007065         db  0x83 ; '.'
0000000000007066         db  0x07 ; '.'
0000000000007067         db  0x4a ; 'J'
0000000000007068         db  0x0e ; '.'
0000000000007069         db  0x60 ; '`'
000000000000706a         db  0x02 ; '.'
000000000000706b         db  0xdd ; '.'
000000000000706c         db  0x0e ; '.'
000000000000706d         db  0x68 ; 'h'
000000000000706e         db  0x57 ; 'W'
000000000000706f         db  0x0e ; '.'
0000000000007070         db  0x70 ; 'p'
0000000000007071         db  0x42 ; 'B'
0000000000007072         db  0x0e ; '.'
0000000000007073         db  0x78 ; 'x'
0000000000007074         db  0x42 ; 'B'
0000000000007075         db  0x0e ; '.'
0000000000007076         db  0x80 ; '.'
0000000000007077         db  0x01 ; '.'
0000000000007078         db  0x42 ; 'B'
0000000000007079         db  0x0e ; '.'
000000000000707a         db  0x88 ; '.'
000000000000707b         db  0x01 ; '.'
000000000000707c         db  0x42 ; 'B'
000000000000707d         db  0x0e ; '.'
000000000000707e         db  0x90 ; '.'
000000000000707f         db  0x01 ; '.'
0000000000007080         db  0x53 ; 'S'
0000000000007081         db  0x0e ; '.'
0000000000007082         db  0x60 ; '`'
0000000000007083         db  0x44 ; 'D'
0000000000007084         db  0x0a ; '.'
0000000000007085         db  0x0e ; '.'
0000000000007086         db  0x38 ; '8'
0000000000007087         db  0x41 ; 'A'
0000000000007088         db  0x0e ; '.'
0000000000007089         db  0x30 ; '0'
000000000000708a         db  0x41 ; 'A'
000000000000708b         db  0x0e ; '.'
000000000000708c         db  0x28 ; '('
000000000000708d         db  0x42 ; 'B'
000000000000708e         db  0x0e ; '.'
000000000000708f         db  0x20 ; ' '
0000000000007090         db  0x42 ; 'B'
0000000000007091         db  0x0e ; '.'
0000000000007092         db  0x18 ; '.'
0000000000007093         db  0x42 ; 'B'
0000000000007094         db  0x0e ; '.'
0000000000007095         db  0x10 ; '.'
0000000000007096         db  0x42 ; 'B'
0000000000007097         db  0x0e ; '.'
0000000000007098         db  0x08 ; '.'
0000000000007099         db  0x44 ; 'D'
000000000000709a         db  0x0b ; '.'
000000000000709b         db  0x02 ; '.'
000000000000709c         db  0x78 ; 'x'
000000000000709d         db  0x0a ; '.'
000000000000709e         db  0x0e ; '.'
000000000000709f         db  0x68 ; 'h'
00000000000070a0         db  0x48 ; 'H'
00000000000070a1         db  0x0b ; '.'
00000000000070a2         db  0x5a ; 'Z'
00000000000070a3         db  0x0a ; '.'
00000000000070a4         db  0x0e ; '.'
00000000000070a5         db  0x38 ; '8'
00000000000070a6         db  0x47 ; 'G'
00000000000070a7         db  0x0e ; '.'
00000000000070a8         db  0x30 ; '0'
00000000000070a9         db  0x41 ; 'A'
00000000000070aa         db  0x0e ; '.'
00000000000070ab         db  0x28 ; '('
00000000000070ac         db  0x42 ; 'B'
00000000000070ad         db  0x0e ; '.'
00000000000070ae         db  0x20 ; ' '
00000000000070af         db  0x42 ; 'B'
00000000000070b0         db  0x0e ; '.'
00000000000070b1         db  0x18 ; '.'
00000000000070b2         db  0x42 ; 'B'
00000000000070b3         db  0x0e ; '.'
00000000000070b4         db  0x10 ; '.'
00000000000070b5         db  0x42 ; 'B'
00000000000070b6         db  0x0e ; '.'
00000000000070b7         db  0x08 ; '.'
00000000000070b8         db  0x56 ; 'V'
00000000000070b9         db  0x0b ; '.'
00000000000070ba         db  0x5e ; '^'
00000000000070bb         db  0x0a ; '.'
00000000000070bc         db  0x0e ; '.'
00000000000070bd         db  0x38 ; '8'
00000000000070be         db  0x52 ; 'R'
00000000000070bf         db  0x0e ; '.'
00000000000070c0         db  0x30 ; '0'
00000000000070c1         db  0x41 ; 'A'
00000000000070c2         db  0x0e ; '.'
00000000000070c3         db  0x28 ; '('
00000000000070c4         db  0x42 ; 'B'
00000000000070c5         db  0x0e ; '.'
00000000000070c6         db  0x20 ; ' '
00000000000070c7         db  0x42 ; 'B'
00000000000070c8         db  0x0e ; '.'
00000000000070c9         db  0x18 ; '.'
00000000000070ca         db  0x42 ; 'B'
00000000000070cb         db  0x0e ; '.'
00000000000070cc         db  0x10 ; '.'
00000000000070cd         db  0x42 ; 'B'
00000000000070ce         db  0x0e ; '.'
00000000000070cf         db  0x08 ; '.'
00000000000070d0         db  0x4f ; 'O'
00000000000070d1         db  0x0b ; '.'
00000000000070d2         db  0x62 ; 'b'
00000000000070d3         db  0x0a ; '.'
00000000000070d4         db  0x0e ; '.'
00000000000070d5         db  0x38 ; '8'
00000000000070d6         db  0x50 ; 'P'
00000000000070d7         db  0x0e ; '.'
00000000000070d8         db  0x30 ; '0'
00000000000070d9         db  0x41 ; 'A'
00000000000070da         db  0x0e ; '.'
00000000000070db         db  0x28 ; '('
00000000000070dc         db  0x42 ; 'B'
00000000000070dd         db  0x0e ; '.'
00000000000070de         db  0x20 ; ' '
00000000000070df         db  0x42 ; 'B'
00000000000070e0         db  0x0e ; '.'
00000000000070e1         db  0x18 ; '.'
00000000000070e2         db  0x42 ; 'B'
00000000000070e3         db  0x0e ; '.'
00000000000070e4         db  0x10 ; '.'
00000000000070e5         db  0x42 ; 'B'
00000000000070e6         db  0x0e ; '.'
00000000000070e7         db  0x08 ; '.'
00000000000070e8         db  0x55 ; 'U'
00000000000070e9         db  0x0b ; '.'
00000000000070ea         db  0x66 ; 'f'
00000000000070eb         db  0x0e ; '.'
00000000000070ec         db  0x68 ; 'h'
00000000000070ed         db  0x42 ; 'B'
00000000000070ee         db  0x0e ; '.'
00000000000070ef         db  0x70 ; 'p'
00000000000070f0         db  0x5c ; '\'
00000000000070f1         db  0x0e ; '.'
00000000000070f2         db  0x68 ; 'h'
00000000000070f3         db  0x41 ; 'A'
00000000000070f4         db  0x0e ; '.'
00000000000070f5         db  0x60 ; '`'
00000000000070f6         db  0x44 ; 'D'
00000000000070f7         db  0x0a ; '.'
00000000000070f8         db  0x0e ; '.'
00000000000070f9         db  0x38 ; '8'
00000000000070fa         db  0x41 ; 'A'
00000000000070fb         db  0x0e ; '.'
00000000000070fc         db  0x30 ; '0'
00000000000070fd         db  0x41 ; 'A'
00000000000070fe         db  0x0e ; '.'
00000000000070ff         db  0x28 ; '('
0000000000007100         db  0x42 ; 'B'
0000000000007101         db  0x0e ; '.'
0000000000007102         db  0x20 ; ' '
0000000000007103         db  0x42 ; 'B'
0000000000007104         db  0x0e ; '.'
0000000000007105         db  0x18 ; '.'
0000000000007106         db  0x42 ; 'B'
0000000000007107         db  0x0e ; '.'
0000000000007108         db  0x10 ; '.'
0000000000007109         db  0x42 ; 'B'
000000000000710a         db  0x0e ; '.'
000000000000710b         db  0x08 ; '.'
000000000000710c         db  0x45 ; 'E'
000000000000710d         db  0x0b ; '.'
000000000000710e         db  0x68 ; 'h'
000000000000710f         db  0x0a ; '.'
0000000000007110         db  0x0e ; '.'
0000000000007111         db  0x68 ; 'h'
0000000000007112         db  0x48 ; 'H'
0000000000007113         db  0x0b ; '.'
0000000000007114         db  0x72 ; 'r'
0000000000007115         db  0x0e ; '.'
0000000000007116         db  0x68 ; 'h'
0000000000007117         db  0x45 ; 'E'
0000000000007118         db  0x0e ; '.'
0000000000007119         db  0x70 ; 'p'
000000000000711a         db  0x42 ; 'B'
000000000000711b         db  0x0e ; '.'
000000000000711c         db  0x78 ; 'x'
000000000000711d         db  0x42 ; 'B'
000000000000711e         db  0x0e ; '.'
000000000000711f         db  0x80 ; '.'
0000000000007120         db  0x01 ; '.'
0000000000007121         db  0x5e ; '^'
0000000000007122         db  0x0e ; '.'
0000000000007123         db  0x60 ; '`'
0000000000007124         db  0x44 ; 'D'
0000000000007125         db  0x0a ; '.'
0000000000007126         db  0x0e ; '.'
0000000000007127         db  0x38 ; '8'
0000000000007128         db  0x41 ; 'A'
0000000000007129         db  0x0e ; '.'
000000000000712a         db  0x30 ; '0'
000000000000712b         db  0x41 ; 'A'
000000000000712c         db  0x0e ; '.'
000000000000712d         db  0x28 ; '('
000000000000712e         db  0x42 ; 'B'
000000000000712f         db  0x0e ; '.'
0000000000007130         db  0x20 ; ' '
0000000000007131         db  0x42 ; 'B'
0000000000007132         db  0x0e ; '.'
0000000000007133         db  0x18 ; '.'
0000000000007134         db  0x42 ; 'B'
0000000000007135         db  0x0e ; '.'
0000000000007136         db  0x10 ; '.'
0000000000007137         db  0x42 ; 'B'
0000000000007138         db  0x0e ; '.'
0000000000007139         db  0x08 ; '.'
000000000000713a         db  0x41 ; 'A'
000000000000713b         db  0x0b ; '.'
000000000000713c         db  0x79 ; 'y'
000000000000713d         db  0x0a ; '.'
000000000000713e         db  0x0e ; '.'
000000000000713f         db  0x68 ; 'h'
0000000000007140         db  0x42 ; 'B'
0000000000007141         db  0x0e ; '.'
0000000000007142         db  0x70 ; 'p'
0000000000007143         db  0x42 ; 'B'
0000000000007144         db  0x0e ; '.'
0000000000007145         db  0x78 ; 'x'
0000000000007146         db  0x42 ; 'B'
0000000000007147         db  0x0e ; '.'
0000000000007148         db  0x80 ; '.'
0000000000007149         db  0x01 ; '.'
000000000000714a         db  0x51 ; 'Q'
000000000000714b         db  0x0b ; '.'
000000000000714c         dd         0x00000010                                  ; Length of the record
0000000000007150         dd         0x000009e0                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000007154         db         0xec, 0xde, 2 dup (0xff)                    ; begin 0x5040
0000000000007158         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x5060)
000000000000715c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000715d         align      32
0000000000007160         dd         0x00000018                                  ; Length of the record
0000000000007164         dd         0x000009f4                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000007168         db         0xf8, 0xde, 2 dup (0xff)                    ; begin 0x5060
000000000000716c         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x50d8)
0000000000007170         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007171         db  0x44 ; 'D'
0000000000007172         db  0x0e ; '.'
0000000000007173         db  0x70 ; 'p'
0000000000007174         db  0x02 ; '.'
0000000000007175         db  0x60 ; '`'
0000000000007176         db  0x0a ; '.'
0000000000007177         db  0x0e ; '.'
0000000000007178         db  0x08 ; '.'
0000000000007179         db  0x41 ; 'A'
000000000000717a         db  0x0b ; '.'
000000000000717b         db  0x00 ; '.'
000000000000717c         dd         0x00000028                                  ; Length of the record
0000000000007180         dd         0x00000a10                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000007184         db         0x5c, 0xdf, 2 dup (0xff)                    ; begin 0x50e0
0000000000007188         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x51b5)
000000000000718c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000718d         db  0x41 ; 'A'
000000000000718e         db  0x0e ; '.'
000000000000718f         db  0x10 ; '.'
0000000000007190         db  0x86 ; '.'
0000000000007191         db  0x02 ; '.'
0000000000007192         db  0x41 ; 'A'
0000000000007193         db  0x0e ; '.'
0000000000007194         db  0x18 ; '.'
0000000000007195         db  0x83 ; '.'
0000000000007196         db  0x03 ; '.'
0000000000007197         db  0x50 ; 'P'
0000000000007198         db  0x0e ; '.'
0000000000007199         db  0xd0 ; '.'
000000000000719a         db  0x01 ; '.'
000000000000719b         db  0x02 ; '.'
000000000000719c         db  0xab ; '.'
000000000000719d         db  0x0a ; '.'
000000000000719e         db  0x0e ; '.'
000000000000719f         db  0x18 ; '.'
00000000000071a0         db  0x41 ; 'A'
00000000000071a1         db  0x0e ; '.'
00000000000071a2         db  0x10 ; '.'
00000000000071a3         db  0x41 ; 'A'
00000000000071a4         db  0x0e ; '.'
00000000000071a5         db  0x08 ; '.'
00000000000071a6         db  0x41 ; 'A'
00000000000071a7         db  0x0b ; '.'
00000000000071a8         dd         0x0000001c                                  ; Length of the record
00000000000071ac         dd         0x00000a3c                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
00000000000071b0         db         0x10, 0xe0, 2 dup (0xff)                    ; begin 0x51c0
00000000000071b4         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x5240)
00000000000071b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000071b9         db  0x41 ; 'A'
00000000000071ba         db  0x0e ; '.'
00000000000071bb         db  0x10 ; '.'
00000000000071bc         db  0x83 ; '.'
00000000000071bd         db  0x02 ; '.'
00000000000071be         db  0x02 ; '.'
00000000000071bf         db  0x7a ; 'z'
00000000000071c0         db  0x0e ; '.'
00000000000071c1         db  0x08 ; '.'
00000000000071c2         db  0x00 ; '.'
00000000000071c3         db  0x00 ; '.'
00000000000071c4         db  0x00 ; '.'
00000000000071c5         db  0x00 ; '.'
00000000000071c6         db  0x00 ; '.'
00000000000071c7         db  0x00 ; '.'
00000000000071c8         dd         0x00000018                                  ; Length of the record
00000000000071cc         dd         0x00000a5c                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
00000000000071d0         db         0x70, 0xe0, 2 dup (0xff)                    ; begin 0x5240
00000000000071d4         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x525a)
00000000000071d8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000071d9         db  0x41 ; 'A'
00000000000071da         db  0x0e ; '.'
00000000000071db         db  0x10 ; '.'
00000000000071dc         db  0x83 ; '.'
00000000000071dd         db  0x02 ; '.'
00000000000071de         db  0x53 ; 'S'
00000000000071df         db  0x0a ; '.'
00000000000071e0         db  0x0e ; '.'
00000000000071e1         db  0x08 ; '.'
00000000000071e2         db  0x41 ; 'A'
00000000000071e3         db  0x0b ; '.'
00000000000071e4         dd         0x00000010                                  ; Length of the record
00000000000071e8         dd         0x00000a78                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
00000000000071ec         db         0x74, 0xe0, 2 dup (0xff)                    ; begin 0x5260
00000000000071f0         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x5284)
00000000000071f4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000071f5         db  0x5f ; '_'
00000000000071f6         db  0x0e ; '.'
00000000000071f7         db  0x10 ; '.'
00000000000071f8         dd         0x00000010                                  ; Length of the record
00000000000071fc         dd         0x00000a8c                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000007200         db         0x90, 0xe0, 2 dup (0xff)                    ; begin 0x5290
0000000000007204         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x5292)
0000000000007208         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007209         align      4
000000000000720c         dd         0x00000020                                  ; Length of the record
0000000000007210         dd         0x00000aa0                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000007214         db         0x8c, 0xe0, 2 dup (0xff)                    ; begin 0x52a0
0000000000007218         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x52d6)
000000000000721c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000721d         db  0x44 ; 'D'
000000000000721e         db  0x0e ; '.'
000000000000721f         db  0x10 ; '.'
0000000000007220         db  0x83 ; '.'
0000000000007221         db  0x02 ; '.'
0000000000007222         db  0x5d ; ']'
0000000000007223         db  0x0a ; '.'
0000000000007224         db  0x0e ; '.'
0000000000007225         db  0x08 ; '.'
0000000000007226         db  0x47 ; 'G'
0000000000007227         db  0x0b ; '.'
0000000000007228         db  0x48 ; 'H'
0000000000007229         db  0x0a ; '.'
000000000000722a         db  0x0e ; '.'
000000000000722b         db  0x08 ; '.'
000000000000722c         db  0x41 ; 'A'
000000000000722d         db  0x0b ; '.'
000000000000722e         db  0x00 ; '.'
000000000000722f         db  0x00 ; '.'
0000000000007230         dd         0x00000010                                  ; Length of the record
0000000000007234         dd         0x00000ac4                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000007238         db         0xa8, 0xe0, 2 dup (0xff)                    ; begin 0x52e0
000000000000723c         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x5304)
0000000000007240         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007241         db  0x5f ; '_'
0000000000007242         db  0x0e ; '.'
0000000000007243         db  0x10 ; '.'
0000000000007244         dd         0x00000014                                  ; Length of the record
0000000000007248         dd         0x00000ad8                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
000000000000724c         db         0xc4, 0xe0, 2 dup (0xff)                    ; begin 0x5310
0000000000007250         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x5392)
0000000000007254         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007255         db  0x02 ; '.'
0000000000007256         db  0x5f ; '_'
0000000000007257         db  0x0e ; '.'
0000000000007258         db  0x10 ; '.'
0000000000007259         db  0x49 ; 'I'
000000000000725a         db  0x0e ; '.'
000000000000725b         db  0x08 ; '.'
000000000000725c         dd         0x00000014                                  ; Length of the record
0000000000007260         dd         0x00000af0                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000007264         db         0x3c, 0xe1, 2 dup (0xff)                    ; begin 0x53a0
0000000000007268         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x53ea)
000000000000726c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000726d         db  0x02 ; '.'
000000000000726e         db  0x45 ; 'E'
000000000000726f         db  0x0e ; '.'
0000000000007270         db  0x10 ; '.'
0000000000007271         db  0x00 ; '.'
0000000000007272         db  0x00 ; '.'
0000000000007273         db  0x00 ; '.'
0000000000007274         dd         0x00000018                                  ; Length of the record
0000000000007278         dd         0x00000b08                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
000000000000727c         db         0x74, 0xe1, 2 dup (0xff)                    ; begin 0x53f0
0000000000007280         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x5407)
0000000000007284         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007285         db  0x41 ; 'A'
0000000000007286         db  0x0e ; '.'
0000000000007287         db  0x10 ; '.'
0000000000007288         db  0x83 ; '.'
0000000000007289         db  0x02 ; '.'
000000000000728a         db  0x51 ; 'Q'
000000000000728b         db  0x0e ; '.'
000000000000728c         db  0x08 ; '.'
000000000000728d         db  0x00 ; '.'
000000000000728e         db  0x00 ; '.'
000000000000728f         db  0x00 ; '.'
0000000000007290         dd         0x00000018                                  ; Length of the record
0000000000007294         dd         0x00000b24                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000007298         db         0x78, 0xe1, 2 dup (0xff)                    ; begin 0x5410
000000000000729c         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x543e)
00000000000072a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000072a1         db  0x47 ; 'G'
00000000000072a2         db  0x0e ; '.'
00000000000072a3         db  0x10 ; '.'
00000000000072a4         db  0x61 ; 'a'
00000000000072a5         db  0x0a ; '.'
00000000000072a6         db  0x0e ; '.'
00000000000072a7         db  0x08 ; '.'
00000000000072a8         db  0x41 ; 'A'
00000000000072a9         db  0x0b ; '.'
00000000000072aa         db  0x00 ; '.'
00000000000072ab         db  0x00 ; '.'
00000000000072ac         dd         0x00000024                                  ; Length of the record
00000000000072b0         dd         0x00000b40                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
00000000000072b4         db         0x8c, 0xe1, 2 dup (0xff)                    ; begin 0x5440
00000000000072b8         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x5468)
00000000000072bc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000072bd         db  0x41 ; 'A'
00000000000072be         db  0x0e ; '.'
00000000000072bf         db  0x10 ; '.'
00000000000072c0         db  0x86 ; '.'
00000000000072c1         db  0x02 ; '.'
00000000000072c2         db  0x41 ; 'A'
00000000000072c3         db  0x0e ; '.'
00000000000072c4         db  0x18 ; '.'
00000000000072c5         db  0x83 ; '.'
00000000000072c6         db  0x03 ; '.'
00000000000072c7         db  0x4d ; 'M'
00000000000072c8         db  0x0e ; '.'
00000000000072c9         db  0x20 ; ' '
00000000000072ca         db  0x49 ; 'I'
00000000000072cb         db  0x0e ; '.'
00000000000072cc         db  0x18 ; '.'
00000000000072cd         db  0x47 ; 'G'
00000000000072ce         db  0x0e ; '.'
00000000000072cf         db  0x10 ; '.'
00000000000072d0         db  0x41 ; 'A'
00000000000072d1         db  0x0e ; '.'
00000000000072d2         db  0x08 ; '.'
00000000000072d3         db  0x00 ; '.'
00000000000072d4         dd         0x00000018                                  ; Length of the record
00000000000072d8         dd         0x00000b68                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
00000000000072dc         db         0x94, 0xe1, 2 dup (0xff)                    ; begin 0x5470
00000000000072e0         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5483)
00000000000072e4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000072e5         db  0x41 ; 'A'
00000000000072e6         db  0x0e ; '.'
00000000000072e7         db  0x10 ; '.'
00000000000072e8         db  0x83 ; '.'
00000000000072e9         db  0x02 ; '.'
00000000000072ea         db  0x50 ; 'P'
00000000000072eb         db  0x0e ; '.'
00000000000072ec         db  0x08 ; '.'
00000000000072ed         db  0x00 ; '.'
00000000000072ee         db  0x00 ; '.'
00000000000072ef         db  0x00 ; '.'
00000000000072f0         dd         0x00000014                                  ; Length of the record
00000000000072f4         dd         0x00000b84                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
00000000000072f8         db         0x98, 0xe1, 2 dup (0xff)                    ; begin 0x5490
00000000000072fc         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x54c5)
0000000000007300         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007301         db  0x4b ; 'K'
0000000000007302         db  0x0e ; '.'
0000000000007303         db  0x10 ; '.'
0000000000007304         db  0x00 ; '.'
0000000000007305         db  0x00 ; '.'
0000000000007306         db  0x00 ; '.'
0000000000007307         db  0x00 ; '.'
0000000000007308         dd         0x00000034                                  ; Length of the record
000000000000730c         dd         0x00000b9c                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000007310         db         0xc0, 0xe1, 2 dup (0xff)                    ; begin 0x54d0
0000000000007314         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x554b)
0000000000007318         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007319         db  0x42 ; 'B'
000000000000731a         db  0x0e ; '.'
000000000000731b         db  0x10 ; '.'
000000000000731c         db  0x8c ; '.'
000000000000731d         db  0x02 ; '.'
000000000000731e         db  0x41 ; 'A'
000000000000731f         db  0x0e ; '.'
0000000000007320         db  0x18 ; '.'
0000000000007321         db  0x86 ; '.'
0000000000007322         db  0x03 ; '.'
0000000000007323         db  0x41 ; 'A'
0000000000007324         db  0x0e ; '.'
0000000000007325         db  0x20 ; ' '
0000000000007326         db  0x83 ; '.'
0000000000007327         db  0x04 ; '.'
0000000000007328         db  0x7d ; '}'
0000000000007329         db  0x0a ; '.'
000000000000732a         db  0x0e ; '.'
000000000000732b         db  0x18 ; '.'
000000000000732c         db  0x41 ; 'A'
000000000000732d         db  0x0e ; '.'
000000000000732e         db  0x10 ; '.'
000000000000732f         db  0x42 ; 'B'
0000000000007330         db  0x0e ; '.'
0000000000007331         db  0x08 ; '.'
0000000000007332         db  0x44 ; 'D'
0000000000007333         db  0x0b ; '.'
0000000000007334         db  0x60 ; '`'
0000000000007335         db  0x0a ; '.'
0000000000007336         db  0x0e ; '.'
0000000000007337         db  0x18 ; '.'
0000000000007338         db  0x41 ; 'A'
0000000000007339         db  0x0e ; '.'
000000000000733a         db  0x10 ; '.'
000000000000733b         db  0x42 ; 'B'
000000000000733c         db  0x0e ; '.'
000000000000733d         db  0x08 ; '.'
000000000000733e         db  0x45 ; 'E'
000000000000733f         db  0x0b ; '.'
0000000000007340         dd         0x0000001c                                  ; Length of the record
0000000000007344         dd         0x00000bd4                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000007348         db         0x08, 0xe2, 2 dup (0xff)                    ; begin 0x5550
000000000000734c         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x5590)
0000000000007350         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007351         db  0x44 ; 'D'
0000000000007352         db  0x0e ; '.'
0000000000007353         db  0x10 ; '.'
0000000000007354         db  0x83 ; '.'
0000000000007355         db  0x02 ; '.'
0000000000007356         db  0x5a ; 'Z'
0000000000007357         db  0x0a ; '.'
0000000000007358         db  0x0e ; '.'
0000000000007359         db  0x08 ; '.'
000000000000735a         db  0x4a ; 'J'
000000000000735b         db  0x0b ; '.'
000000000000735c         db  0x53 ; 'S'
000000000000735d         db  0x0e ; '.'
000000000000735e         db  0x08 ; '.'
000000000000735f         db  0x00 ; '.'
0000000000007360         dd         0x0000002c                                  ; Length of the record
0000000000007364         dd         0x00000bf4                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000007368         db         0x28, 0xe2, 2 dup (0xff)                    ; begin 0x5590
000000000000736c         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x55e7)
0000000000007370         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007371         db  0x63 ; 'c'
0000000000007372         db  0x0e ; '.'
0000000000007373         db  0x10 ; '.'
0000000000007374         db  0x8c ; '.'
0000000000007375         db  0x02 ; '.'
0000000000007376         db  0x41 ; 'A'
0000000000007377         db  0x0e ; '.'
0000000000007378         db  0x18 ; '.'
0000000000007379         db  0x86 ; '.'
000000000000737a         db  0x03 ; '.'
000000000000737b         db  0x44 ; 'D'
000000000000737c         db  0x0e ; '.'
000000000000737d         db  0x20 ; ' '
000000000000737e         db  0x83 ; '.'
000000000000737f         db  0x04 ; '.'
0000000000007380         db  0x6b ; 'k'
0000000000007381         db  0x0e ; '.'
0000000000007382         db  0x18 ; '.'
0000000000007383         db  0x41 ; 'A'
0000000000007384         db  0x0e ; '.'
0000000000007385         db  0x10 ; '.'
0000000000007386         db  0x42 ; 'B'
0000000000007387         db  0x0e ; '.'
0000000000007388         db  0x08 ; '.'
0000000000007389         db  0x00 ; '.'
000000000000738a         db  0x00 ; '.'
000000000000738b         db  0x00 ; '.'
000000000000738c         db  0x00 ; '.'
000000000000738d         db  0x00 ; '.'
000000000000738e         db  0x00 ; '.'
000000000000738f         db  0x00 ; '.'
0000000000007390         dd         0x0000003c                                  ; Length of the record
0000000000007394         dd         0x00000c24                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000007398         db         0x58, 0xe2, 2 dup (0xff)                    ; begin 0x55f0
000000000000739c         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x5673)
00000000000073a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000073a1         db  0x42 ; 'B'
00000000000073a2         db  0x0e ; '.'
00000000000073a3         db  0x10 ; '.'
00000000000073a4         db  0x8d ; '.'
00000000000073a5         db  0x02 ; '.'
00000000000073a6         db  0x42 ; 'B'
00000000000073a7         db  0x0e ; '.'
00000000000073a8         db  0x18 ; '.'
00000000000073a9         db  0x8c ; '.'
00000000000073aa         db  0x03 ; '.'
00000000000073ab         db  0x44 ; 'D'
00000000000073ac         db  0x0e ; '.'
00000000000073ad         db  0x20 ; ' '
00000000000073ae         db  0x86 ; '.'
00000000000073af         db  0x04 ; '.'
00000000000073b0         db  0x41 ; 'A'
00000000000073b1         db  0x0e ; '.'
00000000000073b2         db  0x28 ; '('
00000000000073b3         db  0x83 ; '.'
00000000000073b4         db  0x05 ; '.'
00000000000073b5         db  0x4a ; 'J'
00000000000073b6         db  0x0e ; '.'
00000000000073b7         db  0x40 ; '@'
00000000000073b8         db  0x02 ; '.'
00000000000073b9         db  0x64 ; 'd'
00000000000073ba         db  0x0a ; '.'
00000000000073bb         db  0x0e ; '.'
00000000000073bc         db  0x28 ; '('
00000000000073bd         db  0x41 ; 'A'
00000000000073be         db  0x0e ; '.'
00000000000073bf         db  0x20 ; ' '
00000000000073c0         db  0x41 ; 'A'
00000000000073c1         db  0x0e ; '.'
00000000000073c2         db  0x18 ; '.'
00000000000073c3         db  0x42 ; 'B'
00000000000073c4         db  0x0e ; '.'
00000000000073c5         db  0x10 ; '.'
00000000000073c6         db  0x42 ; 'B'
00000000000073c7         db  0x0e ; '.'
00000000000073c8         db  0x08 ; '.'
00000000000073c9         db  0x41 ; 'A'
00000000000073ca         db  0x0b ; '.'
00000000000073cb         db  0x00 ; '.'
00000000000073cc         db  0x00 ; '.'
00000000000073cd         db  0x00 ; '.'
00000000000073ce         db  0x00 ; '.'
00000000000073cf         db  0x00 ; '.'
00000000000073d0         dd         0x0000004c                                  ; Length of the record
00000000000073d4         dd         0x00000c64                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
00000000000073d8         db         0xa8, 0xe2, 2 dup (0xff)                    ; begin 0x5680
00000000000073dc         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x56fd)
00000000000073e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000073e1         db  0x42 ; 'B'
00000000000073e2         db  0x0e ; '.'
00000000000073e3         db  0x10 ; '.'
00000000000073e4         db  0x8c ; '.'
00000000000073e5         db  0x02 ; '.'
00000000000073e6         db  0x41 ; 'A'
00000000000073e7         db  0x0e ; '.'
00000000000073e8         db  0x18 ; '.'
00000000000073e9         db  0x86 ; '.'
00000000000073ea         db  0x03 ; '.'
00000000000073eb         db  0x44 ; 'D'
00000000000073ec         db  0x0e ; '.'
00000000000073ed         db  0x20 ; ' '
00000000000073ee         db  0x83 ; '.'
00000000000073ef         db  0x04 ; '.'
00000000000073f0         db  0x69 ; 'i'
00000000000073f1         db  0x0a ; '.'
00000000000073f2         db  0x0e ; '.'
00000000000073f3         db  0x18 ; '.'
00000000000073f4         db  0x41 ; 'A'
00000000000073f5         db  0x0e ; '.'
00000000000073f6         db  0x10 ; '.'
00000000000073f7         db  0x42 ; 'B'
00000000000073f8         db  0x0e ; '.'
00000000000073f9         db  0x08 ; '.'
00000000000073fa         db  0x45 ; 'E'
00000000000073fb         db  0x0b ; '.'
00000000000073fc         db  0x55 ; 'U'
00000000000073fd         db  0x0a ; '.'
00000000000073fe         db  0x0e ; '.'
00000000000073ff         db  0x18 ; '.'
0000000000007400         db  0x41 ; 'A'
0000000000007401         db  0x0e ; '.'
0000000000007402         db  0x10 ; '.'
0000000000007403         db  0x42 ; 'B'
0000000000007404         db  0x0e ; '.'
0000000000007405         db  0x08 ; '.'
0000000000007406         db  0x48 ; 'H'
0000000000007407         db  0x0b ; '.'
0000000000007408         db  0x41 ; 'A'
0000000000007409         db  0x0a ; '.'
000000000000740a         db  0x0e ; '.'
000000000000740b         db  0x18 ; '.'
000000000000740c         db  0x46 ; 'F'
000000000000740d         db  0x0e ; '.'
000000000000740e         db  0x10 ; '.'
000000000000740f         db  0x42 ; 'B'
0000000000007410         db  0x0e ; '.'
0000000000007411         db  0x08 ; '.'
0000000000007412         db  0x47 ; 'G'
0000000000007413         db  0x0b ; '.'
0000000000007414         db  0x49 ; 'I'
0000000000007415         db  0x0e ; '.'
0000000000007416         db  0x18 ; '.'
0000000000007417         db  0x41 ; 'A'
0000000000007418         db  0x0e ; '.'
0000000000007419         db  0x10 ; '.'
000000000000741a         db  0x42 ; 'B'
000000000000741b         db  0x0e ; '.'
000000000000741c         db  0x08 ; '.'
000000000000741d         db  0x00 ; '.'
000000000000741e         db  0x00 ; '.'
000000000000741f         db  0x00 ; '.'
0000000000007420         dd         0x0000001c                                  ; Length of the record
0000000000007424         dd         0x00000cb4                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000007428         db         0xd8, 0xe2, 2 dup (0xff)                    ; begin 0x5700
000000000000742c         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x5760)
0000000000007430         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007431         db  0x44 ; 'D'
0000000000007432         db  0x0e ; '.'
0000000000007433         db  0x10 ; '.'
0000000000007434         db  0x75 ; 'u'
0000000000007435         db  0x0a ; '.'
0000000000007436         db  0x0e ; '.'
0000000000007437         db  0x08 ; '.'
0000000000007438         db  0x47 ; 'G'
0000000000007439         db  0x0b ; '.'
000000000000743a         db  0x5f ; '_'
000000000000743b         db  0x0e ; '.'
000000000000743c         db  0x08 ; '.'
000000000000743d         db  0x00 ; '.'
000000000000743e         db  0x00 ; '.'
000000000000743f         db  0x00 ; '.'
0000000000007440         dd         0x0000001c                                  ; Length of the record
0000000000007444         dd         0x00000cd4                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000007448         db         0x18, 0xe3, 2 dup (0xff)                    ; begin 0x5760
000000000000744c         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x579c)
0000000000007450         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007451         db  0x44 ; 'D'
0000000000007452         db  0x0e ; '.'
0000000000007453         db  0x10 ; '.'
0000000000007454         db  0x61 ; 'a'
0000000000007455         db  0x0a ; '.'
0000000000007456         db  0x0e ; '.'
0000000000007457         db  0x08 ; '.'
0000000000007458         db  0x4b ; 'K'
0000000000007459         db  0x0b ; '.'
000000000000745a         db  0x4b ; 'K'
000000000000745b         db  0x0e ; '.'
000000000000745c         db  0x08 ; '.'
000000000000745d         db  0x00 ; '.'
000000000000745e         db  0x00 ; '.'
000000000000745f         db  0x00 ; '.'
0000000000007460         dd         0x00000044                                  ; Length of the record
0000000000007464         dd         0x00000cf4                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
0000000000007468         db         0x38, 0xe3, 2 dup (0xff)                    ; begin 0x57a0
000000000000746c         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x5805)
0000000000007470         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007471         db  0x42 ; 'B'
0000000000007472         db  0x0e ; '.'
0000000000007473         db  0x10 ; '.'
0000000000007474         db  0x8f ; '.'
0000000000007475         db  0x02 ; '.'
0000000000007476         db  0x42 ; 'B'
0000000000007477         db  0x0e ; '.'
0000000000007478         db  0x18 ; '.'
0000000000007479         db  0x8e ; '.'
000000000000747a         db  0x03 ; '.'
000000000000747b         db  0x45 ; 'E'
000000000000747c         db  0x0e ; '.'
000000000000747d         db  0x20 ; ' '
000000000000747e         db  0x8d ; '.'
000000000000747f         db  0x04 ; '.'
0000000000007480         db  0x42 ; 'B'
0000000000007481         db  0x0e ; '.'
0000000000007482         db  0x28 ; '('
0000000000007483         db  0x8c ; '.'
0000000000007484         db  0x05 ; '.'
0000000000007485         db  0x48 ; 'H'
0000000000007486         db  0x0e ; '.'
0000000000007487         db  0x30 ; '0'
0000000000007488         db  0x86 ; '.'
0000000000007489         db  0x06 ; '.'
000000000000748a         db  0x48 ; 'H'
000000000000748b         db  0x0e ; '.'
000000000000748c         db  0x38 ; '8'
000000000000748d         db  0x83 ; '.'
000000000000748e         db  0x07 ; '.'
000000000000748f         db  0x4d ; 'M'
0000000000007490         db  0x0e ; '.'
0000000000007491         db  0x40 ; '@'
0000000000007492         db  0x72 ; 'r'
0000000000007493         db  0x0e ; '.'
0000000000007494         db  0x38 ; '8'
0000000000007495         db  0x41 ; 'A'
0000000000007496         db  0x0e ; '.'
0000000000007497         db  0x30 ; '0'
0000000000007498         db  0x41 ; 'A'
0000000000007499         db  0x0e ; '.'
000000000000749a         db  0x28 ; '('
000000000000749b         db  0x42 ; 'B'
000000000000749c         db  0x0e ; '.'
000000000000749d         db  0x20 ; ' '
000000000000749e         db  0x42 ; 'B'
000000000000749f         db  0x0e ; '.'
00000000000074a0         db  0x18 ; '.'
00000000000074a1         db  0x42 ; 'B'
00000000000074a2         db  0x0e ; '.'
00000000000074a3         db  0x10 ; '.'
00000000000074a4         db  0x42 ; 'B'
00000000000074a5         db  0x0e ; '.'
00000000000074a6         db  0x08 ; '.'
00000000000074a7         db  0x00 ; '.'
00000000000074a8         dd         0x00000014                                  ; Length of the record
00000000000074ac         dd         0x00000d3c                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
00000000000074b0         db         0x60, 0xe3, 2 dup (0xff)                    ; begin 0x5810
00000000000074b4         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x5812)
00000000000074b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000074b9         align      64
00000000000074c0         dd         0x00000010                                  ; Length of the record
00000000000074c4         dd         0x00000d54                                  ; FDE: parent CIE at 0x6770 (FDE encoding = 0x1B)
00000000000074c8         db         0x58, 0xe3, 2 dup (0xff)                    ; begin 0x5820
00000000000074cc         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x582e)
00000000000074d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000074d1         align      8


        ; Segment Segment 3
        ; Range: [0x207b70; 0x208278[ (1800 bytes)
        ; File offset : [31600; 32896[ (1296 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x207b70; 0x207b78[ (8 bytes)
        ; File offset : [31600; 31608[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
0000000000207b70         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x207b78; 0x207b80[ (8 bytes)
        ; File offset : [31608; 31616[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
0000000000207b78         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x207b80; 0x207c38[ (184 bytes)
        ; File offset : [31616; 31800[ (184 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     long_options:
0000000000207b80         db  0xe6 ; '.'                                         ; DATA XREF=parse_long_options+176, parse_gnu_standard_options_only+124
0000000000207b81         db  0x5b ; '['
0000000000207b82         db  0x00 ; '.'
0000000000207b83         db  0x00 ; '.'
0000000000207b84         db  0x00 ; '.'
0000000000207b85         db  0x00 ; '.'
0000000000207b86         db  0x00 ; '.'
0000000000207b87         db  0x00 ; '.'
0000000000207b88         db  0x00 ; '.'
0000000000207b89         db  0x00 ; '.'
0000000000207b8a         db  0x00 ; '.'
0000000000207b8b         db  0x00 ; '.'
0000000000207b8c         db  0x00 ; '.'
0000000000207b8d         db  0x00 ; '.'
0000000000207b8e         db  0x00 ; '.'
0000000000207b8f         db  0x00 ; '.'
0000000000207b90         db  0x00 ; '.'
0000000000207b91         db  0x00 ; '.'
0000000000207b92         db  0x00 ; '.'
0000000000207b93         db  0x00 ; '.'
0000000000207b94         db  0x00 ; '.'
0000000000207b95         db  0x00 ; '.'
0000000000207b96         db  0x00 ; '.'
0000000000207b97         db  0x00 ; '.'
0000000000207b98         db  0x68 ; 'h'
0000000000207b99         db  0x00 ; '.'
0000000000207b9a         db  0x00 ; '.'
0000000000207b9b         db  0x00 ; '.'
0000000000207b9c         db  0x00 ; '.'
0000000000207b9d         db  0x00 ; '.'
0000000000207b9e         db  0x00 ; '.'
0000000000207b9f         db  0x00 ; '.'
0000000000207ba0         db  0xeb ; '.'
0000000000207ba1         db  0x5b ; '['
0000000000207ba2         db  0x00 ; '.'
0000000000207ba3         db  0x00 ; '.'
0000000000207ba4         db  0x00 ; '.'
0000000000207ba5         db  0x00 ; '.'
0000000000207ba6         db  0x00 ; '.'
0000000000207ba7         db  0x00 ; '.'
0000000000207ba8         db  0x00 ; '.'
0000000000207ba9         db  0x00 ; '.'
0000000000207baa         db  0x00 ; '.'
0000000000207bab         db  0x00 ; '.'
0000000000207bac         db  0x00 ; '.'
0000000000207bad         db  0x00 ; '.'
0000000000207bae         db  0x00 ; '.'
0000000000207baf         db  0x00 ; '.'
0000000000207bb0         db  0x00 ; '.'
0000000000207bb1         db  0x00 ; '.'
0000000000207bb2         db  0x00 ; '.'
0000000000207bb3         db  0x00 ; '.'
0000000000207bb4         db  0x00 ; '.'
0000000000207bb5         db  0x00 ; '.'
0000000000207bb6         db  0x00 ; '.'
0000000000207bb7         db  0x00 ; '.'
0000000000207bb8         db  0x76 ; 'v'
0000000000207bb9         db  0x00 ; '.'
0000000000207bba         db  0x00 ; '.'
0000000000207bbb         db  0x00 ; '.'
0000000000207bbc         db  0x00 ; '.'
0000000000207bbd         db  0x00 ; '.'
0000000000207bbe         db  0x00 ; '.'
0000000000207bbf         db  0x00 ; '.'
0000000000207bc0         db  0x00 ; '.'
0000000000207bc1         db  0x00 ; '.'
0000000000207bc2         db  0x00 ; '.'
0000000000207bc3         db  0x00 ; '.'
0000000000207bc4         db  0x00 ; '.'
0000000000207bc5         db  0x00 ; '.'
0000000000207bc6         db  0x00 ; '.'
0000000000207bc7         db  0x00 ; '.'
0000000000207bc8         db  0x00 ; '.'
0000000000207bc9         db  0x00 ; '.'
0000000000207bca         db  0x00 ; '.'
0000000000207bcb         db  0x00 ; '.'
0000000000207bcc         db  0x00 ; '.'
0000000000207bcd         db  0x00 ; '.'
0000000000207bce         db  0x00 ; '.'
0000000000207bcf         db  0x00 ; '.'
0000000000207bd0         db  0x00 ; '.'
0000000000207bd1         db  0x00 ; '.'
0000000000207bd2         db  0x00 ; '.'
0000000000207bd3         db  0x00 ; '.'
0000000000207bd4         db  0x00 ; '.'
0000000000207bd5         db  0x00 ; '.'
0000000000207bd6         db  0x00 ; '.'
0000000000207bd7         db  0x00 ; '.'
0000000000207bd8         db  0x00 ; '.'
0000000000207bd9         db  0x00 ; '.'
0000000000207bda         db  0x00 ; '.'
0000000000207bdb         db  0x00 ; '.'
0000000000207bdc         db  0x00 ; '.'
0000000000207bdd         db  0x00 ; '.'
0000000000207bde         db  0x00 ; '.'
0000000000207bdf         db  0x00 ; '.'
                     quoting_style_args:
0000000000207be0         db  0x51 ; 'Q'
0000000000207be1         db  0x5c ; '\'
0000000000207be2         db  0x00 ; '.'
0000000000207be3         db  0x00 ; '.'
0000000000207be4         db  0x00 ; '.'
0000000000207be5         db  0x00 ; '.'
0000000000207be6         db  0x00 ; '.'
0000000000207be7         db  0x00 ; '.'
0000000000207be8         db  0x59 ; 'Y'
0000000000207be9         db  0x5c ; '\'
0000000000207bea         db  0x00 ; '.'
0000000000207beb         db  0x00 ; '.'
0000000000207bec         db  0x00 ; '.'
0000000000207bed         db  0x00 ; '.'
0000000000207bee         db  0x00 ; '.'
0000000000207bef         db  0x00 ; '.'
0000000000207bf0         db  0x5f ; '_'
0000000000207bf1         db  0x5c ; '\'
0000000000207bf2         db  0x00 ; '.'
0000000000207bf3         db  0x00 ; '.'
0000000000207bf4         db  0x00 ; '.'
0000000000207bf5         db  0x00 ; '.'
0000000000207bf6         db  0x00 ; '.'
0000000000207bf7         db  0x00 ; '.'
0000000000207bf8         db  0x6c ; 'l'
0000000000207bf9         db  0x5c ; '\'
0000000000207bfa         db  0x00 ; '.'
0000000000207bfb         db  0x00 ; '.'
0000000000207bfc         db  0x00 ; '.'
0000000000207bfd         db  0x00 ; '.'
0000000000207bfe         db  0x00 ; '.'
0000000000207bff         db  0x00 ; '.'
0000000000207c00         db  0x79 ; 'y'
0000000000207c01         db  0x5c ; '\'
0000000000207c02         db  0x00 ; '.'
0000000000207c03         db  0x00 ; '.'
0000000000207c04         db  0x00 ; '.'
0000000000207c05         db  0x00 ; '.'
0000000000207c06         db  0x00 ; '.'
0000000000207c07         db  0x00 ; '.'
0000000000207c08         db  0x44 ; 'D'
0000000000207c09         db  0x59 ; 'Y'
0000000000207c0a         db  0x00 ; '.'
0000000000207c0b         db  0x00 ; '.'
0000000000207c0c         db  0x00 ; '.'
0000000000207c0d         db  0x00 ; '.'
0000000000207c0e         db  0x00 ; '.'
0000000000207c0f         db  0x00 ; '.'
0000000000207c10         db  0x8d ; '.'
0000000000207c11         db  0x5c ; '\'
0000000000207c12         db  0x00 ; '.'
0000000000207c13         db  0x00 ; '.'
0000000000207c14         db  0x00 ; '.'
0000000000207c15         db  0x00 ; '.'
0000000000207c16         db  0x00 ; '.'
0000000000207c17         db  0x00 ; '.'
0000000000207c18         db  0x72 ; 'r'
0000000000207c19         db  0x5c ; '\'
0000000000207c1a         db  0x00 ; '.'
0000000000207c1b         db  0x00 ; '.'
0000000000207c1c         db  0x00 ; '.'
0000000000207c1d         db  0x00 ; '.'
0000000000207c1e         db  0x00 ; '.'
0000000000207c1f         db  0x00 ; '.'
0000000000207c20         db  0xfe ; '.'
0000000000207c21         db  0x58 ; 'X'
0000000000207c22         db  0x00 ; '.'
0000000000207c23         db  0x00 ; '.'
0000000000207c24         db  0x00 ; '.'
0000000000207c25         db  0x00 ; '.'
0000000000207c26         db  0x00 ; '.'
0000000000207c27         db  0x00 ; '.'
0000000000207c28         db  0x95 ; '.'
0000000000207c29         db  0x5c ; '\'
0000000000207c2a         db  0x00 ; '.'
0000000000207c2b         db  0x00 ; '.'
0000000000207c2c         db  0x00 ; '.'
0000000000207c2d         db  0x00 ; '.'
0000000000207c2e         db  0x00 ; '.'
0000000000207c2f         db  0x00 ; '.'
0000000000207c30         db  0x00 ; '.'
0000000000207c31         db  0x00 ; '.'
0000000000207c32         db  0x00 ; '.'
0000000000207c33         db  0x00 ; '.'
0000000000207c34         db  0x00 ; '.'
0000000000207c35         db  0x00 ; '.'
0000000000207c36         db  0x00 ; '.'
0000000000207c37         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x207c38; 0x207e28[ (496 bytes)
        ; File offset : [31800; 32296[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
0000000000207c38         db  0x01 ; '.'
0000000000207c39         db  0x00 ; '.'
0000000000207c3a         db  0x00 ; '.'
0000000000207c3b         db  0x00 ; '.'
0000000000207c3c         db  0x00 ; '.'
0000000000207c3d         db  0x00 ; '.'
0000000000207c3e         db  0x00 ; '.'
0000000000207c3f         db  0x00 ; '.'
0000000000207c40         db  0x01 ; '.'
0000000000207c41         db  0x00 ; '.'
0000000000207c42         db  0x00 ; '.'
0000000000207c43         db  0x00 ; '.'
0000000000207c44         db  0x00 ; '.'
0000000000207c45         db  0x00 ; '.'
0000000000207c46         db  0x00 ; '.'
0000000000207c47         db  0x00 ; '.'
0000000000207c48         db  0x0c ; '.'
0000000000207c49         db  0x00 ; '.'
0000000000207c4a         db  0x00 ; '.'
0000000000207c4b         db  0x00 ; '.'
0000000000207c4c         db  0x00 ; '.'
0000000000207c4d         db  0x00 ; '.'
0000000000207c4e         db  0x00 ; '.'
0000000000207c4f         db  0x00 ; '.'
0000000000207c50         db  0xb8 ; '.'
0000000000207c51         db  0x13 ; '.'
0000000000207c52         db  0x00 ; '.'
0000000000207c53         db  0x00 ; '.'
0000000000207c54         db  0x00 ; '.'
0000000000207c55         db  0x00 ; '.'
0000000000207c56         db  0x00 ; '.'
0000000000207c57         db  0x00 ; '.'
0000000000207c58         db  0x0d ; '.'
0000000000207c59         db  0x00 ; '.'
0000000000207c5a         db  0x00 ; '.'
0000000000207c5b         db  0x00 ; '.'
0000000000207c5c         db  0x00 ; '.'
0000000000207c5d         db  0x00 ; '.'
0000000000207c5e         db  0x00 ; '.'
0000000000207c5f         db  0x00 ; '.'
0000000000207c60         db  0x30 ; '0'
0000000000207c61         db  0x58 ; 'X'
0000000000207c62         db  0x00 ; '.'
0000000000207c63         db  0x00 ; '.'
0000000000207c64         db  0x00 ; '.'
0000000000207c65         db  0x00 ; '.'
0000000000207c66         db  0x00 ; '.'
0000000000207c67         db  0x00 ; '.'
0000000000207c68         db  0x19 ; '.'
0000000000207c69         db  0x00 ; '.'
0000000000207c6a         db  0x00 ; '.'
0000000000207c6b         db  0x00 ; '.'
0000000000207c6c         db  0x00 ; '.'
0000000000207c6d         db  0x00 ; '.'
0000000000207c6e         db  0x00 ; '.'
0000000000207c6f         db  0x00 ; '.'
0000000000207c70         db  0x70 ; 'p'
0000000000207c71         db  0x7b ; '{'
0000000000207c72         db  0x20 ; ' '
0000000000207c73         db  0x00 ; '.'
0000000000207c74         db  0x00 ; '.'
0000000000207c75         db  0x00 ; '.'
0000000000207c76         db  0x00 ; '.'
0000000000207c77         db  0x00 ; '.'
0000000000207c78         db  0x1b ; '.'
0000000000207c79         db  0x00 ; '.'
0000000000207c7a         db  0x00 ; '.'
0000000000207c7b         db  0x00 ; '.'
0000000000207c7c         db  0x00 ; '.'
0000000000207c7d         db  0x00 ; '.'
0000000000207c7e         db  0x00 ; '.'
0000000000207c7f         db  0x00 ; '.'
0000000000207c80         db  0x08 ; '.'
0000000000207c81         db  0x00 ; '.'
0000000000207c82         db  0x00 ; '.'
0000000000207c83         db  0x00 ; '.'
0000000000207c84         db  0x00 ; '.'
0000000000207c85         db  0x00 ; '.'
0000000000207c86         db  0x00 ; '.'
0000000000207c87         db  0x00 ; '.'
0000000000207c88         db  0x1a ; '.'
0000000000207c89         db  0x00 ; '.'
0000000000207c8a         db  0x00 ; '.'
0000000000207c8b         db  0x00 ; '.'
0000000000207c8c         db  0x00 ; '.'
0000000000207c8d         db  0x00 ; '.'
0000000000207c8e         db  0x00 ; '.'
0000000000207c8f         db  0x00 ; '.'
0000000000207c90         db  0x78 ; 'x'
0000000000207c91         db  0x7b ; '{'
0000000000207c92         db  0x20 ; ' '
0000000000207c93         db  0x00 ; '.'
0000000000207c94         db  0x00 ; '.'
0000000000207c95         db  0x00 ; '.'
0000000000207c96         db  0x00 ; '.'
0000000000207c97         db  0x00 ; '.'
0000000000207c98         db  0x1c ; '.'
0000000000207c99         db  0x00 ; '.'
0000000000207c9a         db  0x00 ; '.'
0000000000207c9b         db  0x00 ; '.'
0000000000207c9c         db  0x00 ; '.'
0000000000207c9d         db  0x00 ; '.'
0000000000207c9e         db  0x00 ; '.'
0000000000207c9f         db  0x00 ; '.'
0000000000207ca0         db  0x08 ; '.'
0000000000207ca1         db  0x00 ; '.'
0000000000207ca2         db  0x00 ; '.'
0000000000207ca3         db  0x00 ; '.'
0000000000207ca4         db  0x00 ; '.'
0000000000207ca5         db  0x00 ; '.'
0000000000207ca6         db  0x00 ; '.'
0000000000207ca7         db  0x00 ; '.'
0000000000207ca8         db  0xf5 ; '.'
0000000000207ca9         db  0xfe ; '.'
0000000000207caa         db  0xff ; '.'
0000000000207cab         db  0x6f ; 'o'
0000000000207cac         db  0x00 ; '.'
0000000000207cad         db  0x00 ; '.'
0000000000207cae         db  0x00 ; '.'
0000000000207caf         db  0x00 ; '.'
0000000000207cb0         db  0x98 ; '.'
0000000000207cb1         db  0x02 ; '.'
0000000000207cb2         db  0x00 ; '.'
0000000000207cb3         db  0x00 ; '.'
0000000000207cb4         db  0x00 ; '.'
0000000000207cb5         db  0x00 ; '.'
0000000000207cb6         db  0x00 ; '.'
0000000000207cb7         db  0x00 ; '.'
0000000000207cb8         db  0x05 ; '.'
0000000000207cb9         db  0x00 ; '.'
0000000000207cba         db  0x00 ; '.'
0000000000207cbb         db  0x00 ; '.'
0000000000207cbc         db  0x00 ; '.'
0000000000207cbd         db  0x00 ; '.'
0000000000207cbe         db  0x00 ; '.'
0000000000207cbf         db  0x00 ; '.'
0000000000207cc0         db  0xc8 ; '.'
0000000000207cc1         db  0x08 ; '.'
0000000000207cc2         db  0x00 ; '.'
0000000000207cc3         db  0x00 ; '.'
0000000000207cc4         db  0x00 ; '.'
0000000000207cc5         db  0x00 ; '.'
0000000000207cc6         db  0x00 ; '.'
0000000000207cc7         db  0x00 ; '.'
0000000000207cc8         db  0x06 ; '.'
0000000000207cc9         db  0x00 ; '.'
0000000000207cca         db  0x00 ; '.'
0000000000207ccb         db  0x00 ; '.'
0000000000207ccc         db  0x00 ; '.'
0000000000207ccd         db  0x00 ; '.'
0000000000207cce         db  0x00 ; '.'
0000000000207ccf         db  0x00 ; '.'
0000000000207cd0         db  0xe0 ; '.'
0000000000207cd1         db  0x02 ; '.'
0000000000207cd2         db  0x00 ; '.'
0000000000207cd3         db  0x00 ; '.'
0000000000207cd4         db  0x00 ; '.'
0000000000207cd5         db  0x00 ; '.'
0000000000207cd6         db  0x00 ; '.'
0000000000207cd7         db  0x00 ; '.'
0000000000207cd8         db  0x0a ; '.'
0000000000207cd9         db  0x00 ; '.'
0000000000207cda         db  0x00 ; '.'
0000000000207cdb         db  0x00 ; '.'
0000000000207cdc         db  0x00 ; '.'
0000000000207cdd         db  0x00 ; '.'
0000000000207cde         db  0x00 ; '.'
0000000000207cdf         db  0x00 ; '.'
0000000000207ce0         db  0xc2 ; '.'
0000000000207ce1         db  0x02 ; '.'
0000000000207ce2         db  0x00 ; '.'
0000000000207ce3         db  0x00 ; '.'
0000000000207ce4         db  0x00 ; '.'
0000000000207ce5         db  0x00 ; '.'
0000000000207ce6         db  0x00 ; '.'
0000000000207ce7         db  0x00 ; '.'
0000000000207ce8         db  0x0b ; '.'
0000000000207ce9         db  0x00 ; '.'
0000000000207cea         db  0x00 ; '.'
0000000000207ceb         db  0x00 ; '.'
0000000000207cec         db  0x00 ; '.'
0000000000207ced         db  0x00 ; '.'
0000000000207cee         db  0x00 ; '.'
0000000000207cef         db  0x00 ; '.'
0000000000207cf0         db  0x18 ; '.'
0000000000207cf1         db  0x00 ; '.'
0000000000207cf2         db  0x00 ; '.'
0000000000207cf3         db  0x00 ; '.'
0000000000207cf4         db  0x00 ; '.'
0000000000207cf5         db  0x00 ; '.'
0000000000207cf6         db  0x00 ; '.'
0000000000207cf7         db  0x00 ; '.'
0000000000207cf8         db  0x15 ; '.'
0000000000207cf9         db  0x00 ; '.'
0000000000207cfa         db  0x00 ; '.'
0000000000207cfb         db  0x00 ; '.'
0000000000207cfc         db  0x00 ; '.'
0000000000207cfd         db  0x00 ; '.'
0000000000207cfe         db  0x00 ; '.'
0000000000207cff         db  0x00 ; '.'
0000000000207d00         db  0x00 ; '.'
0000000000207d01         db  0x00 ; '.'
0000000000207d02         db  0x00 ; '.'
0000000000207d03         db  0x00 ; '.'
0000000000207d04         db  0x00 ; '.'
0000000000207d05         db  0x00 ; '.'
0000000000207d06         db  0x00 ; '.'
0000000000207d07         db  0x00 ; '.'
0000000000207d08         db  0x03 ; '.'
0000000000207d09         db  0x00 ; '.'
0000000000207d0a         db  0x00 ; '.'
0000000000207d0b         db  0x00 ; '.'
0000000000207d0c         db  0x00 ; '.'
0000000000207d0d         db  0x00 ; '.'
0000000000207d0e         db  0x00 ; '.'
0000000000207d0f         db  0x00 ; '.'
0000000000207d10         db  0x28 ; '('
0000000000207d11         db  0x7e ; '~'
0000000000207d12         db  0x20 ; ' '
0000000000207d13         db  0x00 ; '.'
0000000000207d14         db  0x00 ; '.'
0000000000207d15         db  0x00 ; '.'
0000000000207d16         db  0x00 ; '.'
0000000000207d17         db  0x00 ; '.'
0000000000207d18         db  0x02 ; '.'
0000000000207d19         db  0x00 ; '.'
0000000000207d1a         db  0x00 ; '.'
0000000000207d1b         db  0x00 ; '.'
0000000000207d1c         db  0x00 ; '.'
0000000000207d1d         db  0x00 ; '.'
0000000000207d1e         db  0x00 ; '.'
0000000000207d1f         db  0x00 ; '.'
0000000000207d20         db  0x80 ; '.'
0000000000207d21         db  0x04 ; '.'
0000000000207d22         db  0x00 ; '.'
0000000000207d23         db  0x00 ; '.'
0000000000207d24         db  0x00 ; '.'
0000000000207d25         db  0x00 ; '.'
0000000000207d26         db  0x00 ; '.'
0000000000207d27         db  0x00 ; '.'
0000000000207d28         db  0x14 ; '.'
0000000000207d29         db  0x00 ; '.'
0000000000207d2a         db  0x00 ; '.'
0000000000207d2b         db  0x00 ; '.'
0000000000207d2c         db  0x00 ; '.'
0000000000207d2d         db  0x00 ; '.'
0000000000207d2e         db  0x00 ; '.'
0000000000207d2f         db  0x00 ; '.'
0000000000207d30         db  0x07 ; '.'
0000000000207d31         db  0x00 ; '.'
0000000000207d32         db  0x00 ; '.'
0000000000207d33         db  0x00 ; '.'
0000000000207d34         db  0x00 ; '.'
0000000000207d35         db  0x00 ; '.'
0000000000207d36         db  0x00 ; '.'
0000000000207d37         db  0x00 ; '.'
0000000000207d38         db  0x17 ; '.'
0000000000207d39         db  0x00 ; '.'
0000000000207d3a         db  0x00 ; '.'
0000000000207d3b         db  0x00 ; '.'
0000000000207d3c         db  0x00 ; '.'
0000000000207d3d         db  0x00 ; '.'
0000000000207d3e         db  0x00 ; '.'
0000000000207d3f         db  0x00 ; '.'
0000000000207d40         db  0x38 ; '8'
0000000000207d41         db  0x0f ; '.'
0000000000207d42         db  0x00 ; '.'
0000000000207d43         db  0x00 ; '.'
0000000000207d44         db  0x00 ; '.'
0000000000207d45         db  0x00 ; '.'
0000000000207d46         db  0x00 ; '.'
0000000000207d47         db  0x00 ; '.'
0000000000207d48         db  0x07 ; '.'
0000000000207d49         db  0x00 ; '.'
0000000000207d4a         db  0x00 ; '.'
0000000000207d4b         db  0x00 ; '.'
0000000000207d4c         db  0x00 ; '.'
0000000000207d4d         db  0x00 ; '.'
0000000000207d4e         db  0x00 ; '.'
0000000000207d4f         db  0x00 ; '.'
0000000000207d50         db  0x68 ; 'h'
0000000000207d51         db  0x0c ; '.'
0000000000207d52         db  0x00 ; '.'
0000000000207d53         db  0x00 ; '.'
0000000000207d54         db  0x00 ; '.'
0000000000207d55         db  0x00 ; '.'
0000000000207d56         db  0x00 ; '.'
0000000000207d57         db  0x00 ; '.'
0000000000207d58         db  0x08 ; '.'
0000000000207d59         db  0x00 ; '.'
0000000000207d5a         db  0x00 ; '.'
0000000000207d5b         db  0x00 ; '.'
0000000000207d5c         db  0x00 ; '.'
0000000000207d5d         db  0x00 ; '.'
0000000000207d5e         db  0x00 ; '.'
0000000000207d5f         db  0x00 ; '.'
0000000000207d60         db  0xd0 ; '.'
0000000000207d61         db  0x02 ; '.'
0000000000207d62         db  0x00 ; '.'
0000000000207d63         db  0x00 ; '.'
0000000000207d64         db  0x00 ; '.'
0000000000207d65         db  0x00 ; '.'
0000000000207d66         db  0x00 ; '.'
0000000000207d67         db  0x00 ; '.'
0000000000207d68         db  0x09 ; '.'
0000000000207d69         db  0x00 ; '.'
0000000000207d6a         db  0x00 ; '.'
0000000000207d6b         db  0x00 ; '.'
0000000000207d6c         db  0x00 ; '.'
0000000000207d6d         db  0x00 ; '.'
0000000000207d6e         db  0x00 ; '.'
0000000000207d6f         db  0x00 ; '.'
0000000000207d70         db  0x18 ; '.'
0000000000207d71         db  0x00 ; '.'
0000000000207d72         db  0x00 ; '.'
0000000000207d73         db  0x00 ; '.'
0000000000207d74         db  0x00 ; '.'
0000000000207d75         db  0x00 ; '.'
0000000000207d76         db  0x00 ; '.'
0000000000207d77         db  0x00 ; '.'
0000000000207d78         db  0x1e ; '.'
0000000000207d79         db  0x00 ; '.'
0000000000207d7a         db  0x00 ; '.'
0000000000207d7b         db  0x00 ; '.'
0000000000207d7c         db  0x00 ; '.'
0000000000207d7d         db  0x00 ; '.'
0000000000207d7e         db  0x00 ; '.'
0000000000207d7f         db  0x00 ; '.'
0000000000207d80         db  0x08 ; '.'
0000000000207d81         db  0x00 ; '.'
0000000000207d82         db  0x00 ; '.'
0000000000207d83         db  0x00 ; '.'
0000000000207d84         db  0x00 ; '.'
0000000000207d85         db  0x00 ; '.'
0000000000207d86         db  0x00 ; '.'
0000000000207d87         db  0x00 ; '.'
0000000000207d88         db  0xfb ; '.'
0000000000207d89         db  0xff ; '.'
0000000000207d8a         db  0xff ; '.'
0000000000207d8b         db  0x6f ; 'o'
0000000000207d8c         db  0x00 ; '.'
0000000000207d8d         db  0x00 ; '.'
0000000000207d8e         db  0x00 ; '.'
0000000000207d8f         db  0x00 ; '.'
0000000000207d90         db  0x01 ; '.'
0000000000207d91         db  0x00 ; '.'
0000000000207d92         db  0x00 ; '.'
0000000000207d93         db  0x08 ; '.'
0000000000207d94         db  0x00 ; '.'
0000000000207d95         db  0x00 ; '.'
0000000000207d96         db  0x00 ; '.'
0000000000207d97         db  0x00 ; '.'
0000000000207d98         db  0xfe ; '.'
0000000000207d99         db  0xff ; '.'
0000000000207d9a         db  0xff ; '.'
0000000000207d9b         db  0x6f ; 'o'
0000000000207d9c         db  0x00 ; '.'
0000000000207d9d         db  0x00 ; '.'
0000000000207d9e         db  0x00 ; '.'
0000000000207d9f         db  0x00 ; '.'
0000000000207da0         db  0x08 ; '.'
0000000000207da1         db  0x0c ; '.'
0000000000207da2         db  0x00 ; '.'
0000000000207da3         db  0x00 ; '.'
0000000000207da4         db  0x00 ; '.'
0000000000207da5         db  0x00 ; '.'
0000000000207da6         db  0x00 ; '.'
0000000000207da7         db  0x00 ; '.'
0000000000207da8         db  0xff ; '.'
0000000000207da9         db  0xff ; '.'
0000000000207daa         db  0xff ; '.'
0000000000207dab         db  0x6f ; 'o'
0000000000207dac         db  0x00 ; '.'
0000000000207dad         db  0x00 ; '.'
0000000000207dae         db  0x00 ; '.'
0000000000207daf         db  0x00 ; '.'
0000000000207db0         db  0x01 ; '.'
0000000000207db1         db  0x00 ; '.'
0000000000207db2         db  0x00 ; '.'
0000000000207db3         db  0x00 ; '.'
0000000000207db4         db  0x00 ; '.'
0000000000207db5         db  0x00 ; '.'
0000000000207db6         db  0x00 ; '.'
0000000000207db7         db  0x00 ; '.'
0000000000207db8         db  0xf0 ; '.'
0000000000207db9         db  0xff ; '.'
0000000000207dba         db  0xff ; '.'
0000000000207dbb         db  0x6f ; 'o'
0000000000207dbc         db  0x00 ; '.'
0000000000207dbd         db  0x00 ; '.'
0000000000207dbe         db  0x00 ; '.'
0000000000207dbf         db  0x00 ; '.'
0000000000207dc0         db  0x8a ; '.'
0000000000207dc1         db  0x0b ; '.'
0000000000207dc2         db  0x00 ; '.'
0000000000207dc3         db  0x00 ; '.'
0000000000207dc4         db  0x00 ; '.'
0000000000207dc5         db  0x00 ; '.'
0000000000207dc6         db  0x00 ; '.'
0000000000207dc7         db  0x00 ; '.'
0000000000207dc8         db  0xf9 ; '.'
0000000000207dc9         db  0xff ; '.'
0000000000207dca         db  0xff ; '.'
0000000000207dcb         db  0x6f ; 'o'
0000000000207dcc         db  0x00 ; '.'
0000000000207dcd         db  0x00 ; '.'
0000000000207dce         db  0x00 ; '.'
0000000000207dcf         db  0x00 ; '.'
0000000000207dd0         db  0x12 ; '.'
0000000000207dd1         db  0x00 ; '.'
0000000000207dd2         db  0x00 ; '.'
0000000000207dd3         db  0x00 ; '.'
0000000000207dd4         db  0x00 ; '.'
0000000000207dd5         db  0x00 ; '.'
0000000000207dd6         db  0x00 ; '.'
0000000000207dd7         db  0x00 ; '.'
0000000000207dd8         db  0x00 ; '.'
0000000000207dd9         db  0x00 ; '.'
0000000000207dda         db  0x00 ; '.'
0000000000207ddb         db  0x00 ; '.'
0000000000207ddc         db  0x00 ; '.'
0000000000207ddd         db  0x00 ; '.'
0000000000207dde         db  0x00 ; '.'
0000000000207ddf         db  0x00 ; '.'
0000000000207de0         db  0x00 ; '.'
0000000000207de1         db  0x00 ; '.'
0000000000207de2         db  0x00 ; '.'
0000000000207de3         db  0x00 ; '.'
0000000000207de4         db  0x00 ; '.'
0000000000207de5         db  0x00 ; '.'
0000000000207de6         db  0x00 ; '.'
0000000000207de7         db  0x00 ; '.'
0000000000207de8         db  0x00 ; '.'
0000000000207de9         db  0x00 ; '.'
0000000000207dea         db  0x00 ; '.'
0000000000207deb         db  0x00 ; '.'
0000000000207dec         db  0x00 ; '.'
0000000000207ded         db  0x00 ; '.'
0000000000207dee         db  0x00 ; '.'
0000000000207def         db  0x00 ; '.'
0000000000207df0         db  0x00 ; '.'
0000000000207df1         db  0x00 ; '.'
0000000000207df2         db  0x00 ; '.'
0000000000207df3         db  0x00 ; '.'
0000000000207df4         db  0x00 ; '.'
0000000000207df5         db  0x00 ; '.'
0000000000207df6         db  0x00 ; '.'
0000000000207df7         db  0x00 ; '.'
0000000000207df8         db  0x00 ; '.'
0000000000207df9         db  0x00 ; '.'
0000000000207dfa         db  0x00 ; '.'
0000000000207dfb         db  0x00 ; '.'
0000000000207dfc         db  0x00 ; '.'
0000000000207dfd         db  0x00 ; '.'
0000000000207dfe         db  0x00 ; '.'
0000000000207dff         db  0x00 ; '.'
0000000000207e00         db  0x00 ; '.'
0000000000207e01         db  0x00 ; '.'
0000000000207e02         db  0x00 ; '.'
0000000000207e03         db  0x00 ; '.'
0000000000207e04         db  0x00 ; '.'
0000000000207e05         db  0x00 ; '.'
0000000000207e06         db  0x00 ; '.'
0000000000207e07         db  0x00 ; '.'
0000000000207e08         db  0x00 ; '.'
0000000000207e09         db  0x00 ; '.'
0000000000207e0a         db  0x00 ; '.'
0000000000207e0b         db  0x00 ; '.'
0000000000207e0c         db  0x00 ; '.'
0000000000207e0d         db  0x00 ; '.'
0000000000207e0e         db  0x00 ; '.'
0000000000207e0f         db  0x00 ; '.'
0000000000207e10         db  0x00 ; '.'
0000000000207e11         db  0x00 ; '.'
0000000000207e12         db  0x00 ; '.'
0000000000207e13         db  0x00 ; '.'
0000000000207e14         db  0x00 ; '.'
0000000000207e15         db  0x00 ; '.'
0000000000207e16         db  0x00 ; '.'
0000000000207e17         db  0x00 ; '.'
0000000000207e18         db  0x00 ; '.'
0000000000207e19         db  0x00 ; '.'
0000000000207e1a         db  0x00 ; '.'
0000000000207e1b         db  0x00 ; '.'
0000000000207e1c         db  0x00 ; '.'
0000000000207e1d         db  0x00 ; '.'
0000000000207e1e         db  0x00 ; '.'
0000000000207e1f         db  0x00 ; '.'
0000000000207e20         db  0x00 ; '.'
0000000000207e21         db  0x00 ; '.'
0000000000207e22         db  0x00 ; '.'
0000000000207e23         db  0x00 ; '.'
0000000000207e24         db  0x00 ; '.'
0000000000207e25         db  0x00 ; '.'
0000000000207e26         db  0x00 ; '.'
0000000000207e27         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x207e28; 0x207fe8[ (448 bytes)
        ; File offset : [32296; 32744[ (448 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
0000000000207e28         db  0x38 ; '8'
0000000000207e29         db  0x7c ; '|'
0000000000207e2a         db  0x20 ; ' '
0000000000207e2b         db  0x00 ; '.'
0000000000207e2c         db  0x00 ; '.'
0000000000207e2d         db  0x00 ; '.'
0000000000207e2e         db  0x00 ; '.'
0000000000207e2f         db  0x00 ; '.'
                     qword_207e30:
0000000000207e30         dq         0x0000000000000000                          ; DATA XREF=0x13d0
0000000000207e38         db  0x00 ; '.'                                         ; DATA XREF=0x13d6
0000000000207e39         db  0x00 ; '.'
0000000000207e3a         db  0x00 ; '.'
0000000000207e3b         db  0x00 ; '.'
0000000000207e3c         db  0x00 ; '.'
0000000000207e3d         db  0x00 ; '.'
0000000000207e3e         db  0x00 ; '.'
0000000000207e3f         db  0x00 ; '.'
                     __uflow@GOT:        // __uflow
0000000000207e40         dq         0x0000000000208280                          ; DATA XREF=j___uflow
                     free@GOT:        // free
0000000000207e48         dq         0x0000000000208288                          ; DATA XREF=j_free
                     abort@GOT:        // abort
0000000000207e50         dq         0x0000000000208290                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
0000000000207e58         dq         0x0000000000208298                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
0000000000207e60         dq         0x00000000002082a0                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
0000000000207e68         dq         0x00000000002082b0                          ; DATA XREF=j__exit
                     __fpending@GOT:        // __fpending
0000000000207e70         dq         0x00000000002082b8                          ; DATA XREF=j___fpending
                     puts@GOT:        // puts
0000000000207e78         dq         0x00000000002082c0                          ; DATA XREF=j_puts
                     textdomain@GOT:        // textdomain
0000000000207e80         dq         0x00000000002082c8                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
0000000000207e88         dq         0x00000000002082d0                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
0000000000207e90         dq         0x00000000002082d8                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
0000000000207e98         dq         0x00000000002082e0                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
0000000000207ea0         dq         0x00000000002082e8                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
0000000000207ea8         dq         0x00000000002082f0                          ; DATA XREF=j_strlen
                     __stack_chk_fail@GOT:        // __stack_chk_fail
0000000000207eb0         dq         0x00000000002082f8                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
0000000000207eb8         dq         0x0000000000208300                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
0000000000207ec0         dq         0x0000000000208308                          ; DATA XREF=j_mbrtowc
                     dup2@GOT:        // dup2
0000000000207ec8         dq         0x0000000000208310                          ; DATA XREF=j_dup2
                     strrchr@GOT:        // strrchr
0000000000207ed0         dq         0x0000000000208318                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
0000000000207ed8         dq         0x0000000000208320                          ; DATA XREF=j_lseek
                     __assert_fail@GOT:        // __assert_fail
0000000000207ee0         dq         0x0000000000208328                          ; DATA XREF=j___assert_fail
                     memset@GOT:        // memset
0000000000207ee8         dq         0x0000000000208330                          ; DATA XREF=j_memset
                     freopen@GOT:        // freopen
0000000000207ef0         dq         0x0000000000208338                          ; DATA XREF=j_freopen
                     close@GOT:        // close
0000000000207ef8         dq         0x0000000000208340                          ; DATA XREF=j_close
                     posix_fadvise@GOT:        // posix_fadvise
0000000000207f00         dq         0x0000000000208348                          ; DATA XREF=j_posix_fadvise
                     memcmp@GOT:        // memcmp
0000000000207f08         dq         0x0000000000208358                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
0000000000207f10         dq         0x0000000000208360                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
0000000000207f18         dq         0x0000000000208368                          ; DATA XREF=j_calloc
                     strcmp@GOT:        // strcmp
0000000000207f20         dq         0x0000000000208370                          ; DATA XREF=j_strcmp
                     memcpy@GOT:        // memcpy
0000000000207f28         dq         0x0000000000208380                          ; DATA XREF=j_memcpy
                     fileno@GOT:        // fileno
0000000000207f30         dq         0x0000000000208388                          ; DATA XREF=j_fileno
                     malloc@GOT:        // malloc
0000000000207f38         dq         0x0000000000208390                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
0000000000207f40         dq         0x0000000000208398                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
0000000000207f48         dq         0x00000000002083a0                          ; DATA XREF=j_nl_langinfo
                     __freading@GOT:        // __freading
0000000000207f50         dq         0x00000000002083a8                          ; DATA XREF=j___freading
                     realloc@GOT:        // realloc
0000000000207f58         dq         0x00000000002083b0                          ; DATA XREF=j_realloc
                     setlocale@GOT:        // setlocale
0000000000207f60         dq         0x00000000002083b8                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
0000000000207f68         dq         0x00000000002083c0                          ; DATA XREF=j___printf_chk
                     error@GOT:        // error
0000000000207f70         dq         0x00000000002083c8                          ; DATA XREF=j_error
                     open@GOT:        // open
0000000000207f78         dq         0x00000000002083d0                          ; DATA XREF=j_open
                     fseeko@GOT:        // fseeko
0000000000207f80         dq         0x00000000002083d8                          ; DATA XREF=j_fseeko
                     __cxa_atexit@GOT:        // __cxa_atexit
0000000000207f88         dq         0x00000000002083e0                          ; DATA XREF=j___cxa_atexit
                     exit@GOT:        // exit
0000000000207f90         dq         0x00000000002083e8                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
0000000000207f98         dq         0x00000000002083f0                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
0000000000207fa0         dq         0x00000000002083f8                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
0000000000207fa8         dq         0x0000000000208408                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
0000000000207fb0         dq         0x0000000000208410                          ; DATA XREF=j_iswprint
                     __ctype_b_loc@GOT:        // __ctype_b_loc
0000000000207fb8         dq         0x0000000000208420                          ; DATA XREF=j___ctype_b_loc
                     qword_207fc0:
0000000000207fc0         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
0000000000207fc8         db  0x00 ; '.'                                         ; DATA XREF=_start+36
0000000000207fc9         db  0x00 ; '.'
0000000000207fca         db  0x00 ; '.'
0000000000207fcb         db  0x00 ; '.'
0000000000207fcc         db  0x00 ; '.'
0000000000207fcd         db  0x00 ; '.'
0000000000207fce         db  0x00 ; '.'
0000000000207fcf         db  0x00 ; '.'
                     qword_207fd0:
0000000000207fd0         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_207fd8:
0000000000207fd8         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_207fe0:
0000000000207fe0         dq         0x0000000000000000                          ; DATA XREF=j_qword_207fe0, __do_global_dtors_aux+9
0000000000207fe8         db  0x00 ; '.'
0000000000207fe9         db  0x00 ; '.'
0000000000207fea         db  0x00 ; '.'
0000000000207feb         db  0x00 ; '.'
0000000000207fec         db  0x00 ; '.'
0000000000207fed         db  0x00 ; '.'
0000000000207fee         db  0x00 ; '.'
0000000000207fef         db  0x00 ; '.'
0000000000207ff0         db  0x00 ; '.'
0000000000207ff1         db  0x00 ; '.'
0000000000207ff2         db  0x00 ; '.'
0000000000207ff3         db  0x00 ; '.'
0000000000207ff4         db  0x00 ; '.'
0000000000207ff5         db  0x00 ; '.'
0000000000207ff6         db  0x00 ; '.'
0000000000207ff7         db  0x00 ; '.'
0000000000207ff8         db  0x00 ; '.'
0000000000207ff9         db  0x00 ; '.'
0000000000207ffa         db  0x00 ; '.'
0000000000207ffb         db  0x00 ; '.'
0000000000207ffc         db  0x00 ; '.'
0000000000207ffd         db  0x00 ; '.'
0000000000207ffe         db  0x00 ; '.'
0000000000207fff         db  0x00 ; '.'


        ; Section .data
        ; Range: [0x208000; 0x208080[ (128 bytes)
        ; File offset : [32768; 32896[ (128 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

0000000000208000         db  0x00 ; '.'
0000000000208001         db  0x00 ; '.'
0000000000208002         db  0x00 ; '.'
0000000000208003         db  0x00 ; '.'
0000000000208004         db  0x00 ; '.'
0000000000208005         db  0x00 ; '.'
0000000000208006         db  0x00 ; '.'
0000000000208007         db  0x00 ; '.'
                     __dso_handle:
0000000000208008         dq         0x0000000000208008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     Version:
0000000000208010         dq         0x0000000000005bc2                          ; "8.31", DATA XREF=main+114
                     exit_failure:
0000000000208018         dd         0x00000001                                  ; DATA XREF=close_stdout+130, parse_gnu_standard_options_only+256, xalloc_die+23
000000000020801c         db  0x00 ; '.'
000000000020801d         db  0x00 ; '.'
000000000020801e         db  0x00 ; '.'
000000000020801f         db  0x00 ; '.'
                     quote_quoting_options:
0000000000208020         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
0000000000208021         db  0x00 ; '.'
0000000000208022         db  0x00 ; '.'
0000000000208023         db  0x00 ; '.'
0000000000208024         db  0x00 ; '.'
0000000000208025         db  0x00 ; '.'
0000000000208026         db  0x00 ; '.'
0000000000208027         db  0x00 ; '.'
0000000000208028         db  0x00 ; '.'
0000000000208029         db  0x00 ; '.'
000000000020802a         db  0x00 ; '.'
000000000020802b         db  0x00 ; '.'
000000000020802c         db  0x00 ; '.'
000000000020802d         db  0x00 ; '.'
000000000020802e         db  0x00 ; '.'
000000000020802f         db  0x00 ; '.'
0000000000208030         db  0x00 ; '.'
0000000000208031         db  0x00 ; '.'
0000000000208032         db  0x00 ; '.'
0000000000208033         db  0x00 ; '.'
0000000000208034         db  0x00 ; '.'
0000000000208035         db  0x00 ; '.'
0000000000208036         db  0x00 ; '.'
0000000000208037         db  0x00 ; '.'
0000000000208038         db  0x00 ; '.'
0000000000208039         db  0x00 ; '.'
000000000020803a         db  0x00 ; '.'
000000000020803b         db  0x00 ; '.'
000000000020803c         db  0x00 ; '.'
000000000020803d         db  0x00 ; '.'
000000000020803e         db  0x00 ; '.'
000000000020803f         db  0x00 ; '.'
0000000000208040         db  0x00 ; '.'
0000000000208041         db  0x00 ; '.'
0000000000208042         db  0x00 ; '.'
0000000000208043         db  0x00 ; '.'
0000000000208044         db  0x00 ; '.'
0000000000208045         db  0x00 ; '.'
0000000000208046         db  0x00 ; '.'
0000000000208047         db  0x00 ; '.'
0000000000208048         db  0x00 ; '.'
0000000000208049         db  0x00 ; '.'
000000000020804a         db  0x00 ; '.'
000000000020804b         db  0x00 ; '.'
000000000020804c         db  0x00 ; '.'
000000000020804d         db  0x00 ; '.'
000000000020804e         db  0x00 ; '.'
000000000020804f         db  0x00 ; '.'
0000000000208050         db  0x00 ; '.'
0000000000208051         db  0x00 ; '.'
0000000000208052         db  0x00 ; '.'
0000000000208053         db  0x00 ; '.'
0000000000208054         db  0x00 ; '.'
0000000000208055         db  0x00 ; '.'
0000000000208056         db  0x00 ; '.'
0000000000208057         db  0x00 ; '.'
                     nslots:
0000000000208058         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020805c         align      32
                     slotvec:
0000000000208060         dq         0x0000000000208070                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
0000000000208068         db  0x00 ; '.'
0000000000208069         db  0x00 ; '.'
000000000020806a         db  0x00 ; '.'
000000000020806b         db  0x00 ; '.'
000000000020806c         db  0x00 ; '.'
000000000020806d         db  0x00 ; '.'
000000000020806e         db  0x00 ; '.'
000000000020806f         db  0x00 ; '.'
                     slotvec0:
0000000000208070         dq         1.26481e-321, 1.05248e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec


        ; Section .bss
        ; Range: [0x208080; 0x208278[ (504 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
0000000000208080         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
0000000000208081         db  0x00 ; '.'
0000000000208082         db  0x00 ; '.'
0000000000208083         db  0x00 ; '.'
0000000000208084         db  0x00 ; '.'
0000000000208085         db  0x00 ; '.'
0000000000208086         db  0x00 ; '.'
0000000000208087         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
0000000000208088         db  0x00 ; '.'                                         ; DATA XREF=usage+125, usage+162, usage+199, usage+236, usage+832, close_stdout+6, parse_long_options+231, parse_gnu_standard_options_only+186, emit_bug_reporting_address+90
0000000000208089         db  0x00 ; '.'
000000000020808a         db  0x00 ; '.'
000000000020808b         db  0x00 ; '.'
000000000020808c         db  0x00 ; '.'
000000000020808d         db  0x00 ; '.'
000000000020808e         db  0x00 ; '.'
000000000020808f         db  0x00 ; '.'
                     stdin@@GLIBC_2.2.5:
0000000000208090         db  0x00 ; '.'                                         ; DATA XREF=main+250, main+281, main+333, main+1149
0000000000208091         db  0x00 ; '.'
0000000000208092         db  0x00 ; '.'
0000000000208093         db  0x00 ; '.'
0000000000208094         db  0x00 ; '.'
0000000000208095         db  0x00 ; '.'
0000000000208096         db  0x00 ; '.'
0000000000208097         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
0000000000208098         db  0x00 ; '.'                                         ; DATA XREF=main+164, parse_long_options+141
0000000000208099         db  0x00 ; '.'
000000000020809a         db  0x00 ; '.'
000000000020809b         db  0x00 ; '.'
000000000020809c         db  0x00 ; '.'
000000000020809d         db  0x00 ; '.'
000000000020809e         db  0x00 ; '.'
000000000020809f         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
00000000002080a0         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
00000000002080a1         db  0x00 ; '.'
00000000002080a2         db  0x00 ; '.'
00000000002080a3         db  0x00 ; '.'
00000000002080a4         db  0x00 ; '.'
00000000002080a5         db  0x00 ; '.'
00000000002080a6         db  0x00 ; '.'
00000000002080a7         db  0x00 ; '.'
00000000002080a8         db  0x00 ; '.'
00000000002080a9         db  0x00 ; '.'
00000000002080aa         db  0x00 ; '.'
00000000002080ab         db  0x00 ; '.'
00000000002080ac         db  0x00 ; '.'
00000000002080ad         db  0x00 ; '.'
00000000002080ae         db  0x00 ; '.'
00000000002080af         db  0x00 ; '.'
00000000002080b0         db  0x00 ; '.'
00000000002080b1         db  0x00 ; '.'
00000000002080b2         db  0x00 ; '.'
00000000002080b3         db  0x00 ; '.'
00000000002080b4         db  0x00 ; '.'
00000000002080b5         db  0x00 ; '.'
00000000002080b6         db  0x00 ; '.'
00000000002080b7         db  0x00 ; '.'
00000000002080b8         db  0x00 ; '.'
00000000002080b9         db  0x00 ; '.'
00000000002080ba         db  0x00 ; '.'
00000000002080bb         db  0x00 ; '.'
00000000002080bc         db  0x00 ; '.'
00000000002080bd         db  0x00 ; '.'
00000000002080be         db  0x00 ; '.'
00000000002080bf         db  0x00 ; '.'
                     opterr@@GLIBC_2.2.5:
00000000002080c0         db  0x00 ; '.'                                         ; DATA XREF=parse_long_options+103, parse_long_options+109, parse_long_options+135, parse_gnu_standard_options_only+138, parse_gnu_standard_options_only+144, parse_gnu_standard_options_only+278
00000000002080c1         db  0x00 ; '.'
00000000002080c2         db  0x00 ; '.'
00000000002080c3         db  0x00 ; '.'
00000000002080c4         db  0x00 ; '.'
00000000002080c5         db  0x00 ; '.'
00000000002080c6         db  0x00 ; '.'
00000000002080c7         db  0x00 ; '.'
00000000002080c8         db  0x00 ; '.'
00000000002080c9         db  0x00 ; '.'
00000000002080ca         db  0x00 ; '.'
00000000002080cb         db  0x00 ; '.'
00000000002080cc         db  0x00 ; '.'
00000000002080cd         db  0x00 ; '.'
00000000002080ce         db  0x00 ; '.'
00000000002080cf         db  0x00 ; '.'
00000000002080d0         db  0x00 ; '.'
00000000002080d1         db  0x00 ; '.'
00000000002080d2         db  0x00 ; '.'
00000000002080d3         db  0x00 ; '.'
00000000002080d4         db  0x00 ; '.'
00000000002080d5         db  0x00 ; '.'
00000000002080d6         db  0x00 ; '.'
00000000002080d7         db  0x00 ; '.'
00000000002080d8         db  0x00 ; '.'
00000000002080d9         db  0x00 ; '.'
00000000002080da         db  0x00 ; '.'
00000000002080db         db  0x00 ; '.'
00000000002080dc         db  0x00 ; '.'
00000000002080dd         db  0x00 ; '.'
00000000002080de         db  0x00 ; '.'
00000000002080df         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
00000000002080e0         db  0x00 ; '.'                                         ; DATA XREF=usage+61, close_stdout+44, set_program_name+125
00000000002080e1         db  0x00 ; '.'
00000000002080e2         db  0x00 ; '.'
00000000002080e3         db  0x00 ; '.'
00000000002080e4         db  0x00 ; '.'
00000000002080e5         db  0x00 ; '.'
00000000002080e6         db  0x00 ; '.'
00000000002080e7         db  0x00 ; '.'
                     completed.7697:
00000000002080e8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
00000000002080e9         db  0x00 ; '.'
00000000002080ea         db  0x00 ; '.'
00000000002080eb         db  0x00 ; '.'
00000000002080ec         db  0x00 ; '.'
00000000002080ed         db  0x00 ; '.'
00000000002080ee         db  0x00 ; '.'
00000000002080ef         db  0x00 ; '.'
                     n_strings:
00000000002080f0         db  0x00 ; '.'                                         ; DATA XREF=main+962, main+1036, main+1073, main+1332, count_items
00000000002080f1         db  0x00 ; '.'
00000000002080f2         db  0x00 ; '.'
00000000002080f3         db  0x00 ; '.'
00000000002080f4         db  0x00 ; '.'
00000000002080f5         db  0x00 ; '.'
00000000002080f6         db  0x00 ; '.'
00000000002080f7         db  0x00 ; '.'
                     loop:
00000000002080f8         db  0x00 ; '.'                                         ; DATA XREF=main+1317, detect_loop+22, detect_loop+96, detect_loop+155, detect_loop+188, detect_loop+244, detect_loop+276
00000000002080f9         db  0x00 ; '.'
00000000002080fa         db  0x00 ; '.'
00000000002080fb         db  0x00 ; '.'
00000000002080fc         db  0x00 ; '.'
00000000002080fd         db  0x00 ; '.'
00000000002080fe         db  0x00 ; '.'
00000000002080ff         db  0x00 ; '.'
                     zeros:
0000000000208100         db  0x00 ; '.'                                         ; DATA XREF=main+1055, main+1697, scan_zeros+23, scan_zeros+34
0000000000208101         db  0x00 ; '.'
0000000000208102         db  0x00 ; '.'
0000000000208103         db  0x00 ; '.'
0000000000208104         db  0x00 ; '.'
0000000000208105         db  0x00 ; '.'
0000000000208106         db  0x00 ; '.'
0000000000208107         db  0x00 ; '.'
                     head:
0000000000208108         db  0x00 ; '.'                                         ; DATA XREF=main+1001, main+1043, main+1135, main+1216, scan_zeros+13, scan_zeros+48
0000000000208109         db  0x00 ; '.'
000000000020810a         db  0x00 ; '.'
000000000020810b         db  0x00 ; '.'
000000000020810c         db  0x00 ; '.'
000000000020810d         db  0x00 ; '.'
000000000020810e         db  0x00 ; '.'
000000000020810f         db  0x00 ; '.'
                     ignore_EPIPE:
0000000000208110         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
0000000000208111         db  0x00 ; '.'
0000000000208112         db  0x00 ; '.'
0000000000208113         db  0x00 ; '.'
0000000000208114         db  0x00 ; '.'
0000000000208115         db  0x00 ; '.'
0000000000208116         db  0x00 ; '.'
0000000000208117         db  0x00 ; '.'
                     file_name:
0000000000208118         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
0000000000208119         db  0x00 ; '.'
000000000020811a         db  0x00 ; '.'
000000000020811b         db  0x00 ; '.'
000000000020811c         db  0x00 ; '.'
000000000020811d         db  0x00 ; '.'
000000000020811e         db  0x00 ; '.'
000000000020811f         db  0x00 ; '.'
                     program_name:
0000000000208120         db  0x00 ; '.'                                         ; DATA XREF=usage+20, set_program_name+109
0000000000208121         db  0x00 ; '.'
0000000000208122         db  0x00 ; '.'
0000000000208123         db  0x00 ; '.'
0000000000208124         db  0x00 ; '.'
0000000000208125         db  0x00 ; '.'
0000000000208126         db  0x00 ; '.'
0000000000208127         db  0x00 ; '.'
0000000000208128         db  0x00 ; '.'
0000000000208129         db  0x00 ; '.'
000000000020812a         db  0x00 ; '.'
000000000020812b         db  0x00 ; '.'
000000000020812c         db  0x00 ; '.'
000000000020812d         db  0x00 ; '.'
000000000020812e         db  0x00 ; '.'
000000000020812f         db  0x00 ; '.'
0000000000208130         db  0x00 ; '.'
0000000000208131         db  0x00 ; '.'
0000000000208132         db  0x00 ; '.'
0000000000208133         db  0x00 ; '.'
0000000000208134         db  0x00 ; '.'
0000000000208135         db  0x00 ; '.'
0000000000208136         db  0x00 ; '.'
0000000000208137         db  0x00 ; '.'
0000000000208138         db  0x00 ; '.'
0000000000208139         db  0x00 ; '.'
000000000020813a         db  0x00 ; '.'
000000000020813b         db  0x00 ; '.'
000000000020813c         db  0x00 ; '.'
000000000020813d         db  0x00 ; '.'
000000000020813e         db  0x00 ; '.'
000000000020813f         db  0x00 ; '.'
                     slot0:
0000000000208140         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
0000000000208141         db  0x00 ; '.'
0000000000208142         db  0x00 ; '.'
0000000000208143         db  0x00 ; '.'
0000000000208144         db  0x00 ; '.'
0000000000208145         db  0x00 ; '.'
0000000000208146         db  0x00 ; '.'
0000000000208147         db  0x00 ; '.'
0000000000208148         db  0x00 ; '.'
0000000000208149         db  0x00 ; '.'
000000000020814a         db  0x00 ; '.'
000000000020814b         db  0x00 ; '.'
000000000020814c         db  0x00 ; '.'
000000000020814d         db  0x00 ; '.'
000000000020814e         db  0x00 ; '.'
000000000020814f         db  0x00 ; '.'
0000000000208150         db  0x00 ; '.'
0000000000208151         db  0x00 ; '.'
0000000000208152         db  0x00 ; '.'
0000000000208153         db  0x00 ; '.'
0000000000208154         db  0x00 ; '.'
0000000000208155         db  0x00 ; '.'
0000000000208156         db  0x00 ; '.'
0000000000208157         db  0x00 ; '.'
0000000000208158         db  0x00 ; '.'
0000000000208159         db  0x00 ; '.'
000000000020815a         db  0x00 ; '.'
000000000020815b         db  0x00 ; '.'
000000000020815c         db  0x00 ; '.'
000000000020815d         db  0x00 ; '.'
000000000020815e         db  0x00 ; '.'
000000000020815f         db  0x00 ; '.'
0000000000208160         db  0x00 ; '.'
0000000000208161         db  0x00 ; '.'
0000000000208162         db  0x00 ; '.'
0000000000208163         db  0x00 ; '.'
0000000000208164         db  0x00 ; '.'
0000000000208165         db  0x00 ; '.'
0000000000208166         db  0x00 ; '.'
0000000000208167         db  0x00 ; '.'
0000000000208168         db  0x00 ; '.'
0000000000208169         db  0x00 ; '.'
000000000020816a         db  0x00 ; '.'
000000000020816b         db  0x00 ; '.'
000000000020816c         db  0x00 ; '.'
000000000020816d         db  0x00 ; '.'
000000000020816e         db  0x00 ; '.'
000000000020816f         db  0x00 ; '.'
0000000000208170         db  0x00 ; '.'
0000000000208171         db  0x00 ; '.'
0000000000208172         db  0x00 ; '.'
0000000000208173         db  0x00 ; '.'
0000000000208174         db  0x00 ; '.'
0000000000208175         db  0x00 ; '.'
0000000000208176         db  0x00 ; '.'
0000000000208177         db  0x00 ; '.'
0000000000208178         db  0x00 ; '.'
0000000000208179         db  0x00 ; '.'
000000000020817a         db  0x00 ; '.'
000000000020817b         db  0x00 ; '.'
000000000020817c         db  0x00 ; '.'
000000000020817d         db  0x00 ; '.'
000000000020817e         db  0x00 ; '.'
000000000020817f         db  0x00 ; '.'
0000000000208180         db  0x00 ; '.'
0000000000208181         db  0x00 ; '.'
0000000000208182         db  0x00 ; '.'
0000000000208183         db  0x00 ; '.'
0000000000208184         db  0x00 ; '.'
0000000000208185         db  0x00 ; '.'
0000000000208186         db  0x00 ; '.'
0000000000208187         db  0x00 ; '.'
0000000000208188         db  0x00 ; '.'
0000000000208189         db  0x00 ; '.'
000000000020818a         db  0x00 ; '.'
000000000020818b         db  0x00 ; '.'
000000000020818c         db  0x00 ; '.'
000000000020818d         db  0x00 ; '.'
000000000020818e         db  0x00 ; '.'
000000000020818f         db  0x00 ; '.'
0000000000208190         db  0x00 ; '.'
0000000000208191         db  0x00 ; '.'
0000000000208192         db  0x00 ; '.'
0000000000208193         db  0x00 ; '.'
0000000000208194         db  0x00 ; '.'
0000000000208195         db  0x00 ; '.'
0000000000208196         db  0x00 ; '.'
0000000000208197         db  0x00 ; '.'
0000000000208198         db  0x00 ; '.'
0000000000208199         db  0x00 ; '.'
000000000020819a         db  0x00 ; '.'
000000000020819b         db  0x00 ; '.'
000000000020819c         db  0x00 ; '.'
000000000020819d         db  0x00 ; '.'
000000000020819e         db  0x00 ; '.'
000000000020819f         db  0x00 ; '.'
00000000002081a0         db  0x00 ; '.'
00000000002081a1         db  0x00 ; '.'
00000000002081a2         db  0x00 ; '.'
00000000002081a3         db  0x00 ; '.'
00000000002081a4         db  0x00 ; '.'
00000000002081a5         db  0x00 ; '.'
00000000002081a6         db  0x00 ; '.'
00000000002081a7         db  0x00 ; '.'
00000000002081a8         db  0x00 ; '.'
00000000002081a9         db  0x00 ; '.'
00000000002081aa         db  0x00 ; '.'
00000000002081ab         db  0x00 ; '.'
00000000002081ac         db  0x00 ; '.'
00000000002081ad         db  0x00 ; '.'
00000000002081ae         db  0x00 ; '.'
00000000002081af         db  0x00 ; '.'
00000000002081b0         db  0x00 ; '.'
00000000002081b1         db  0x00 ; '.'
00000000002081b2         db  0x00 ; '.'
00000000002081b3         db  0x00 ; '.'
00000000002081b4         db  0x00 ; '.'
00000000002081b5         db  0x00 ; '.'
00000000002081b6         db  0x00 ; '.'
00000000002081b7         db  0x00 ; '.'
00000000002081b8         db  0x00 ; '.'
00000000002081b9         db  0x00 ; '.'
00000000002081ba         db  0x00 ; '.'
00000000002081bb         db  0x00 ; '.'
00000000002081bc         db  0x00 ; '.'
00000000002081bd         db  0x00 ; '.'
00000000002081be         db  0x00 ; '.'
00000000002081bf         db  0x00 ; '.'
00000000002081c0         db  0x00 ; '.'
00000000002081c1         db  0x00 ; '.'
00000000002081c2         db  0x00 ; '.'
00000000002081c3         db  0x00 ; '.'
00000000002081c4         db  0x00 ; '.'
00000000002081c5         db  0x00 ; '.'
00000000002081c6         db  0x00 ; '.'
00000000002081c7         db  0x00 ; '.'
00000000002081c8         db  0x00 ; '.'
00000000002081c9         db  0x00 ; '.'
00000000002081ca         db  0x00 ; '.'
00000000002081cb         db  0x00 ; '.'
00000000002081cc         db  0x00 ; '.'
00000000002081cd         db  0x00 ; '.'
00000000002081ce         db  0x00 ; '.'
00000000002081cf         db  0x00 ; '.'
00000000002081d0         db  0x00 ; '.'
00000000002081d1         db  0x00 ; '.'
00000000002081d2         db  0x00 ; '.'
00000000002081d3         db  0x00 ; '.'
00000000002081d4         db  0x00 ; '.'
00000000002081d5         db  0x00 ; '.'
00000000002081d6         db  0x00 ; '.'
00000000002081d7         db  0x00 ; '.'
00000000002081d8         db  0x00 ; '.'
00000000002081d9         db  0x00 ; '.'
00000000002081da         db  0x00 ; '.'
00000000002081db         db  0x00 ; '.'
00000000002081dc         db  0x00 ; '.'
00000000002081dd         db  0x00 ; '.'
00000000002081de         db  0x00 ; '.'
00000000002081df         db  0x00 ; '.'
00000000002081e0         db  0x00 ; '.'
00000000002081e1         db  0x00 ; '.'
00000000002081e2         db  0x00 ; '.'
00000000002081e3         db  0x00 ; '.'
00000000002081e4         db  0x00 ; '.'
00000000002081e5         db  0x00 ; '.'
00000000002081e6         db  0x00 ; '.'
00000000002081e7         db  0x00 ; '.'
00000000002081e8         db  0x00 ; '.'
00000000002081e9         db  0x00 ; '.'
00000000002081ea         db  0x00 ; '.'
00000000002081eb         db  0x00 ; '.'
00000000002081ec         db  0x00 ; '.'
00000000002081ed         db  0x00 ; '.'
00000000002081ee         db  0x00 ; '.'
00000000002081ef         db  0x00 ; '.'
00000000002081f0         db  0x00 ; '.'
00000000002081f1         db  0x00 ; '.'
00000000002081f2         db  0x00 ; '.'
00000000002081f3         db  0x00 ; '.'
00000000002081f4         db  0x00 ; '.'
00000000002081f5         db  0x00 ; '.'
00000000002081f6         db  0x00 ; '.'
00000000002081f7         db  0x00 ; '.'
00000000002081f8         db  0x00 ; '.'
00000000002081f9         db  0x00 ; '.'
00000000002081fa         db  0x00 ; '.'
00000000002081fb         db  0x00 ; '.'
00000000002081fc         db  0x00 ; '.'
00000000002081fd         db  0x00 ; '.'
00000000002081fe         db  0x00 ; '.'
00000000002081ff         db  0x00 ; '.'
0000000000208200         db  0x00 ; '.'
0000000000208201         db  0x00 ; '.'
0000000000208202         db  0x00 ; '.'
0000000000208203         db  0x00 ; '.'
0000000000208204         db  0x00 ; '.'
0000000000208205         db  0x00 ; '.'
0000000000208206         db  0x00 ; '.'
0000000000208207         db  0x00 ; '.'
0000000000208208         db  0x00 ; '.'
0000000000208209         db  0x00 ; '.'
000000000020820a         db  0x00 ; '.'
000000000020820b         db  0x00 ; '.'
000000000020820c         db  0x00 ; '.'
000000000020820d         db  0x00 ; '.'
000000000020820e         db  0x00 ; '.'
000000000020820f         db  0x00 ; '.'
0000000000208210         db  0x00 ; '.'
0000000000208211         db  0x00 ; '.'
0000000000208212         db  0x00 ; '.'
0000000000208213         db  0x00 ; '.'
0000000000208214         db  0x00 ; '.'
0000000000208215         db  0x00 ; '.'
0000000000208216         db  0x00 ; '.'
0000000000208217         db  0x00 ; '.'
0000000000208218         db  0x00 ; '.'
0000000000208219         db  0x00 ; '.'
000000000020821a         db  0x00 ; '.'
000000000020821b         db  0x00 ; '.'
000000000020821c         db  0x00 ; '.'
000000000020821d         db  0x00 ; '.'
000000000020821e         db  0x00 ; '.'
000000000020821f         db  0x00 ; '.'
0000000000208220         db  0x00 ; '.'
0000000000208221         db  0x00 ; '.'
0000000000208222         db  0x00 ; '.'
0000000000208223         db  0x00 ; '.'
0000000000208224         db  0x00 ; '.'
0000000000208225         db  0x00 ; '.'
0000000000208226         db  0x00 ; '.'
0000000000208227         db  0x00 ; '.'
0000000000208228         db  0x00 ; '.'
0000000000208229         db  0x00 ; '.'
000000000020822a         db  0x00 ; '.'
000000000020822b         db  0x00 ; '.'
000000000020822c         db  0x00 ; '.'
000000000020822d         db  0x00 ; '.'
000000000020822e         db  0x00 ; '.'
000000000020822f         db  0x00 ; '.'
0000000000208230         db  0x00 ; '.'
0000000000208231         db  0x00 ; '.'
0000000000208232         db  0x00 ; '.'
0000000000208233         db  0x00 ; '.'
0000000000208234         db  0x00 ; '.'
0000000000208235         db  0x00 ; '.'
0000000000208236         db  0x00 ; '.'
0000000000208237         db  0x00 ; '.'
0000000000208238         db  0x00 ; '.'
0000000000208239         db  0x00 ; '.'
000000000020823a         db  0x00 ; '.'
000000000020823b         db  0x00 ; '.'
000000000020823c         db  0x00 ; '.'
000000000020823d         db  0x00 ; '.'
000000000020823e         db  0x00 ; '.'
000000000020823f         db  0x00 ; '.'
                     default_quoting_options:
0000000000208240         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
0000000000208241         db  0x00 ; '.'
0000000000208242         db  0x00 ; '.'
0000000000208243         db  0x00 ; '.'
0000000000208244         db  0x00 ; '.'
0000000000208245         db  0x00 ; '.'
0000000000208246         db  0x00 ; '.'
0000000000208247         db  0x00 ; '.'
0000000000208248         db  0x00 ; '.'
0000000000208249         db  0x00 ; '.'
000000000020824a         db  0x00 ; '.'
000000000020824b         db  0x00 ; '.'
000000000020824c         db  0x00 ; '.'
000000000020824d         db  0x00 ; '.'
000000000020824e         db  0x00 ; '.'
000000000020824f         db  0x00 ; '.'
0000000000208250         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
0000000000208251         db  0x00 ; '.'
0000000000208252         db  0x00 ; '.'
0000000000208253         db  0x00 ; '.'
0000000000208254         db  0x00 ; '.'
0000000000208255         db  0x00 ; '.'
0000000000208256         db  0x00 ; '.'
0000000000208257         db  0x00 ; '.'
0000000000208258         db  0x00 ; '.'
0000000000208259         db  0x00 ; '.'
000000000020825a         db  0x00 ; '.'
000000000020825b         db  0x00 ; '.'
000000000020825c         db  0x00 ; '.'
000000000020825d         db  0x00 ; '.'
000000000020825e         db  0x00 ; '.'
000000000020825f         db  0x00 ; '.'
0000000000208260         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
0000000000208261         db  0x00 ; '.'
0000000000208262         db  0x00 ; '.'
0000000000208263         db  0x00 ; '.'
0000000000208264         db  0x00 ; '.'
0000000000208265         db  0x00 ; '.'
0000000000208266         db  0x00 ; '.'
0000000000208267         db  0x00 ; '.'
0000000000208268         db  0x00 ; '.'
0000000000208269         db  0x00 ; '.'
000000000020826a         db  0x00 ; '.'
000000000020826b         db  0x00 ; '.'
000000000020826c         db  0x00 ; '.'
000000000020826d         db  0x00 ; '.'
000000000020826e         db  0x00 ; '.'
000000000020826f         db  0x00 ; '.'
                     qword_208270:
0000000000208270         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
0000000000208271         db  0x00 ; '.'
0000000000208272         db  0x00 ; '.'
0000000000208273         db  0x00 ; '.'
0000000000208274         db  0x00 ; '.'
0000000000208275         db  0x00 ; '.'
0000000000208276         db  0x00 ; '.'
0000000000208277         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x208280; 0x2085d0[ (848 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x208280; 0x410850[ (2131408 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     __uflow:
0000000000208280         extern function code                                   ; DATA XREF=__uflow@GOT
                     free:
0000000000208288         extern function code                                   ; DATA XREF=free@GOT
                     abort:
0000000000208290         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
0000000000208298         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
00000000002082a0         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
00000000002082a8         extern function code
                     _exit:
00000000002082b0         extern function code                                   ; DATA XREF=_exit@GOT
                     __fpending:
00000000002082b8         extern function code                                   ; DATA XREF=__fpending@GOT
                     puts:
00000000002082c0         extern function code                                   ; DATA XREF=puts@GOT
                     textdomain:
00000000002082c8         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
00000000002082d0         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
00000000002082d8         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
00000000002082e0         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
00000000002082e8         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
00000000002082f0         extern function code                                   ; DATA XREF=strlen@GOT
                     __stack_chk_fail:
00000000002082f8         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
0000000000208300         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
0000000000208308         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     dup2:
0000000000208310         extern function code                                   ; DATA XREF=dup2@GOT
                     strrchr:
0000000000208318         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
0000000000208320         extern function code                                   ; DATA XREF=lseek@GOT
                     __assert_fail:
0000000000208328         extern function code                                   ; DATA XREF=__assert_fail@GOT
                     memset:
0000000000208330         extern function code                                   ; DATA XREF=memset@GOT
                     freopen:
0000000000208338         extern function code                                   ; DATA XREF=freopen@GOT
                     close:
0000000000208340         extern function code                                   ; DATA XREF=close@GOT
                     posix_fadvise:
0000000000208348         extern function code                                   ; DATA XREF=posix_fadvise@GOT
                     __libc_start_main:
0000000000208350         extern function code
                     memcmp:
0000000000208358         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
0000000000208360         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
0000000000208368         extern function code                                   ; DATA XREF=calloc@GOT
                     strcmp:
0000000000208370         extern function code                                   ; DATA XREF=strcmp@GOT
                     __gmon_start__:
0000000000208378         extern function code
                     memcpy:
0000000000208380         extern function code                                   ; DATA XREF=memcpy@GOT
                     fileno:
0000000000208388         extern function code                                   ; DATA XREF=fileno@GOT
                     malloc:
0000000000208390         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
0000000000208398         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
00000000002083a0         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __freading:
00000000002083a8         extern function code                                   ; DATA XREF=__freading@GOT
                     realloc:
00000000002083b0         extern function code                                   ; DATA XREF=realloc@GOT
                     setlocale:
00000000002083b8         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
00000000002083c0         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     error:
00000000002083c8         extern function code                                   ; DATA XREF=error@GOT
                     open:
00000000002083d0         extern function code                                   ; DATA XREF=open@GOT
                     fseeko:
00000000002083d8         extern function code                                   ; DATA XREF=fseeko@GOT
                     __cxa_atexit:
00000000002083e0         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     exit:
00000000002083e8         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
00000000002083f0         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
00000000002083f8         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
0000000000208400         extern function code
                     mbsinit:
0000000000208408         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
0000000000208410         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
0000000000208418         extern function code
                     __ctype_b_loc:
0000000000208420         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     __uflow@@GLIBC_2.2.5:
0000000000208428         extern function code
                     free@@GLIBC_2.2.5:
0000000000208430         extern function code
                     abort@@GLIBC_2.2.5:
0000000000208438         extern function code
                     __errno_location@@GLIBC_2.2.5:
0000000000208440         extern function code
                     strncmp@@GLIBC_2.2.5:
0000000000208448         extern function code
                     _ITM_deregisterTMCloneTable_208450:        // _ITM_deregisterTMCloneTable
0000000000208450         extern function code
                     _exit@@GLIBC_2.2.5:
0000000000208458         extern function code
                     __fpending@@GLIBC_2.2.5:
0000000000208460         extern function code
                     puts@@GLIBC_2.2.5:
0000000000208468         extern function code
                     textdomain@@GLIBC_2.2.5:
0000000000208470         extern function code
                     fclose@@GLIBC_2.2.5:
0000000000208478         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
0000000000208480         extern function code
                     dcgettext@@GLIBC_2.2.5:
0000000000208488         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
0000000000208490         extern function code
                     strlen@@GLIBC_2.2.5:
0000000000208498         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
00000000002084a0         extern function code
                     getopt_long@@GLIBC_2.2.5:
00000000002084a8         extern function code
                     mbrtowc@@GLIBC_2.2.5:
00000000002084b0         extern function code
                     dup2@@GLIBC_2.2.5:
00000000002084b8         extern function code
                     strrchr@@GLIBC_2.2.5:
00000000002084c0         extern function code
                     lseek@@GLIBC_2.2.5:
00000000002084c8         extern function code
                     __assert_fail@@GLIBC_2.2.5:
00000000002084d0         extern function code
                     memset@@GLIBC_2.2.5:
00000000002084d8         extern function code
                     freopen@@GLIBC_2.2.5:
00000000002084e0         extern function code
                     close@@GLIBC_2.2.5:
00000000002084e8         extern function code
                     posix_fadvise@@GLIBC_2.2.5:
00000000002084f0         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
00000000002084f8         extern function code
                     memcmp@@GLIBC_2.2.5:
0000000000208500         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
0000000000208508         extern function code
                     calloc@@GLIBC_2.2.5:
0000000000208510         extern function code
                     strcmp@@GLIBC_2.2.5:
0000000000208518         extern function code
                     __gmon_start___208520:        // __gmon_start__
0000000000208520         extern function code
                     memcpy@@GLIBC_2.14:
0000000000208528         extern function code
                     fileno@@GLIBC_2.2.5:
0000000000208530         extern function code
                     malloc@@GLIBC_2.2.5:
0000000000208538         extern function code
                     fflush@@GLIBC_2.2.5:
0000000000208540         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
0000000000208548         extern function code
                     __freading@@GLIBC_2.2.5:
0000000000208550         extern function code
                     realloc@@GLIBC_2.2.5:
0000000000208558         extern function code
                     setlocale@@GLIBC_2.2.5:
0000000000208560         extern function code
                     __printf_chk@@GLIBC_2.3.4:
0000000000208568         extern function code
                     error@@GLIBC_2.2.5:
0000000000208570         extern function code
                     open@@GLIBC_2.2.5:
0000000000208578         extern function code
                     fseeko@@GLIBC_2.2.5:
0000000000208580         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
0000000000208588         extern function code
                     exit@@GLIBC_2.2.5:
0000000000208590         extern function code
                     fwrite@@GLIBC_2.2.5:
0000000000208598         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
00000000002085a0         extern function code
                     _ITM_registerTMCloneTable_2085a8:        // _ITM_registerTMCloneTable
00000000002085a8         extern function code
                     mbsinit@@GLIBC_2.2.5:
00000000002085b0         extern function code
                     iswprint@@GLIBC_2.2.5:
00000000002085b8         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
00000000002085c0         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
00000000002085c8         extern function code
