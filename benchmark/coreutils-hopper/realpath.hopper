
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/realpath
        UUID: 592ABC59-2D93-79DA-F37E-546A6F7F5E3F
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0x95b0[ (38320 bytes)
        ; File offset : [0; 38320[ (38320 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0x90 ; '.'
0000000000000019         db  0x1c ; '.'
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0xd0 ; '.'
0000000000000029         db  0x4f ; 'O'
000000000000002a         db  0x03 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0xb0 ; '.'
00000000000000d1         db  0x95 ; '.'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0xb0 ; '.'
00000000000000d9         db  0x95 ; '.'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0x30 ; '0'
00000000000000f1         db  0x9a ; '.'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0x30 ; '0'
00000000000000f9         db  0x9a ; '.'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0x30 ; '0'                                         ; DATA XREF=quotearg_free+87, same_nameat.part.0+51, same_nameat.part.0+108, rpl_fflush+18, slotvec0
0000000000000101         db  0x9a ; '.'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0x70 ; 'p'
0000000000000109         db  0x06 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0x28 ; '('
0000000000000111         db  0x08 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0x38 ; '8'
0000000000000129         db  0x9c ; '.'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0x38 ; '8'
0000000000000131         db  0x9c ; '.'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0x38 ; '8'                                         ; DATA XREF=same_nameat.part.0+17, same_nameat.part.0+198
0000000000000139         db  0x9c ; '.'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0x70 ; 'p'
0000000000000199         db  0x7e ; '~'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0x70 ; 'p'
00000000000001a1         db  0x7e ; '~'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0x70 ; 'p'
00000000000001a9         db  0x7e ; '~'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0xd4 ; '.'
00000000000001b1         db  0x03 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0xd4 ; '.'
00000000000001b9         db  0x03 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0x30 ; '0'
0000000000000209         db  0x9a ; '.'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0x30 ; '0'
0000000000000211         db  0x9a ; '.'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0x30 ; '0'
0000000000000219         db  0x9a ; '.'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0xd0 ; '.'
0000000000000221         db  0x05 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0xd0 ; '.'
0000000000000229         db  0x05 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0x59 ; 'Y'
0000000000000285         db  0x2a ; '*'
0000000000000286         db  0xbc ; '.'
0000000000000287         db  0x59 ; 'Y'
0000000000000288         db  0x2d ; '-'
0000000000000289         db  0x93 ; '.'
000000000000028a         db  0x79 ; 'y'
000000000000028b         db  0xda ; '.'
000000000000028c         db  0xf3 ; '.'
000000000000028d         db  0x7e ; '~'
000000000000028e         db  0x54 ; 'T'
000000000000028f         db  0x6a ; 'j'
0000000000000290         db  0x6f ; 'o'
0000000000000291         db  0x7f ; '.'
0000000000000292         db  0x5e ; '^'
0000000000000293         db  0x3f ; '?'
0000000000000294         db  0xde ; '.'
0000000000000295         db  0xed ; '.'
0000000000000296         db  0x61 ; 'a'
0000000000000297         db  0x5a ; 'Z'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2dc[ (68 bytes)
        ; File offset : [664; 732[ (68 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x36 ; '6'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'
00000000000002a9         db  0x4d ; 'M'
00000000000002aa         db  0x41 ; 'A'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0x20 ; ' '
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x1c ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x36 ; '6'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x37 ; '7'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x3c ; '<'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x96 ; '.'
00000000000002c5         db  0xa0 ; '.'
00000000000002c6         db  0x89 ; '.'
00000000000002c7         db  0x97 ; '.'
00000000000002c8         db  0xce ; '.'
00000000000002c9         db  0x2c ; ','
00000000000002ca         db  0x63 ; 'c'
00000000000002cb         db  0x72 ; 'r'
00000000000002cc         db  0xe4 ; '.'
00000000000002cd         db  0x62 ; 'b'
00000000000002ce         db  0x41 ; 'A'
00000000000002cf         db  0xf5 ; '.'
00000000000002d0         db  0x39 ; '9'
00000000000002d1         db  0xf2 ; '.'
00000000000002d2         db  0x8b ; '.'
00000000000002d3         db  0x1c ; '.'
00000000000002d4         db  0x32 ; '2'
00000000000002d5         db  0xc4 ; '.'
00000000000002d6         db  0xf7 ; '.'
00000000000002d7         db  0x12 ; '.'
00000000000002d8         db  0xb3 ; '.'
00000000000002d9         db  0xa2 ; '.'
00000000000002da         db  0xf7 ; '.'
00000000000002db         db  0x12 ; '.'
00000000000002dc         db  0x00 ; '.'
00000000000002dd         db  0x00 ; '.'
00000000000002de         db  0x00 ; '.'
00000000000002df         db  0x00 ; '.'


        ; Section .dynsym
        ; Range: [0x2e0; 0x8b0[ (1488 bytes)
        ; File offset : [736; 2224[ (1488 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0x23 ; '#'
00000000000002f9         db  0x02 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x12 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x83 ; '.'
0000000000000311         db  0x00 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x12 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0xda ; '.'
0000000000000329         db  0x00 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x12 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0x31 ; '1'
0000000000000341         db  0x00 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x12 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0x87 ; '.'
0000000000000359         db  0x02 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x20 ; ' '
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0x89 ; '.'
0000000000000371         db  0x00 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x12 ; '.'
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0x87 ; '.'
0000000000000389         db  0x01 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x12 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0x5d ; ']'
00000000000003a1         db  0x01 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x12 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0xd3 ; '.'
00000000000003b9         db  0x01 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x12 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0x14 ; '.'
00000000000003d1         db  0x01 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x12 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0xcf ; '.'
00000000000003e9         db  0x01 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x12 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0x48 ; 'H'
0000000000000401         db  0x00 ; '.'                                         ; DATA XREF=areadlink_with_size+4, areadlink_with_size+46
0000000000000402         db  0x00 ; '.'
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x12 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'
0000000000000407         db  0x00 ; '.'
0000000000000408         db  0x00 ; '.'
0000000000000409         db  0x00 ; '.'
000000000000040a         db  0x00 ; '.'
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0xae ; '.'
0000000000000419         db  0x00 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x12 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0xcc ; '.'
0000000000000431         db  0x00 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x12 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0x69 ; 'i'
0000000000000449         db  0x00 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x12 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0x58 ; 'X'
0000000000000461         db  0x00 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x12 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x66 ; 'f'
0000000000000479         db  0x01 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x12 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0x29 ; ')'
0000000000000491         db  0x00 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x12 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0xde ; '.'
00000000000004a9         db  0x01 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x12 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0x09 ; '.'
00000000000004c1         db  0x02 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x12 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x40 ; '@'
00000000000004d9         db  0x00 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x12 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0x07 ; '.'
00000000000004f1         db  0x01 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x12 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0xd3 ; '.'
0000000000000509         db  0x00 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x12 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0x79 ; 'y'
0000000000000521         db  0x01 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x12 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0x8f ; '.'
0000000000000539         db  0x00 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x12 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0xf0 ; '.'
0000000000000551         db  0x01 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x12 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0xeb ; '.'
0000000000000569         db  0x00 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x12 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0x14 ; '.'
0000000000000581         db  0x02 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x12 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0xc5 ; '.'
0000000000000599         db  0x00 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x12 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0xe9 ; '.'
00000000000005b1         db  0x01 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x12 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0xa3 ; '.'
00000000000005c9         db  0x02 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x20 ; ' '
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0x0d ; '.'
00000000000005e1         db  0x01 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x12 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x72 ; 'r'
00000000000005f9         db  0x01 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x12 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0xbf ; '.'
0000000000000611         db  0x01 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x12 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0x1b ; '.'
0000000000000629         db  0x01 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x12 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x0b ; '.'
0000000000000641         db  0x00 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x12 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x2a ; '*'
0000000000000659         db  0x01 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x12 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x4b ; 'K'
0000000000000671         db  0x01 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x12 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0x7b ; '{'
0000000000000689         db  0x00 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x12 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x1f ; '.'
00000000000006a1         db  0x00 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x12 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x12 ; '.'
00000000000006b9         db  0x00 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x12 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0xc7 ; '.'
00000000000006d1         db  0x01 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x12 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0x52 ; 'R'
00000000000006e9         db  0x00 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x12 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x02 ; '.'
0000000000000701         db  0x02 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x12 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x43 ; 'C'
0000000000000719         db  0x02 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x12 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x8a ; '.'
0000000000000731         db  0x00 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x12 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0x80 ; '.'
0000000000000749         db  0x01 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x12 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0xf2 ; '.'
0000000000000761         db  0x00 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x12 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0xb2 ; '.'
0000000000000779         db  0x02 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x20 ; ' '
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x22 ; '"'
0000000000000791         db  0x01 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x12 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0x72 ; 'r'
00000000000007a9         db  0x00 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x12 ; '.'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x00 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0xb0 ; '.'
00000000000007c1         db  0x01 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x22 ; '"'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x00 ; '.'
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x36 ; '6'
00000000000007d9         db  0x01 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x12 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x00 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0x00 ; '.'
00000000000007f1         db  0x01 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x11 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x19 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0xa8 ; '.'
00000000000007f9         db  0xa0 ; '.'
00000000000007fa         db  0x20 ; ' '
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x08 ; '.'
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x28 ; '('
0000000000000809         db  0x02 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x11 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x19 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0xa0 ; '.'
0000000000000811         db  0xa0 ; '.'
0000000000000812         db  0x20 ; ' '
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x08 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0x96 ; '.'
0000000000000821         db  0x00 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x21 ; '!'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x19 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0xc0 ; '.'
0000000000000829         db  0xa0 ; '.'
000000000000082a         db  0x20 ; ' '
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x08 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x33 ; '3'
0000000000000839         db  0x02 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x11 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x19 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0xc0 ; '.'
0000000000000841         db  0xa0 ; '.'
0000000000000842         db  0x20 ; ' '
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x08 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0x92 ; '.'
0000000000000851         db  0x01 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x21 ; '!'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x19 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0xa0 ; '.'
0000000000000859         db  0xa0 ; '.'
000000000000085a         db  0x20 ; ' '
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x08 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0x56 ; 'V'
0000000000000869         db  0x01 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x11 ; '.'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x19 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0xe0 ; '.'
0000000000000871         db  0xa0 ; '.'
0000000000000872         db  0x20 ; ' '
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x08 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0x39 ; '9'
0000000000000881         db  0x00 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x11 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x19 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0xb0 ; '.'
0000000000000889         db  0xa0 ; '.'
000000000000088a         db  0x20 ; ' '
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x04 ; '.'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x00 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0x44 ; 'D'
0000000000000899         db  0x01 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x11 ; '.'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x19 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0xb8 ; '.'
00000000000008a1         db  0xa0 ; '.'
00000000000008a2         db  0x20 ; ' '
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x00 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x08 ; '.'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x00 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0x8b0; 0xb7c[ (716 bytes)
        ; File offset : [2224; 2940[ (716 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

00000000000008b0         db  0x00 ; '.'
00000000000008b1         db  0x6c ; 'l'
00000000000008b2         db  0x69 ; 'i'
00000000000008b3         db  0x62 ; 'b'
00000000000008b4         db  0x63 ; 'c'
00000000000008b5         db  0x2e ; '.'
00000000000008b6         db  0x73 ; 's'
00000000000008b7         db  0x6f ; 'o'
00000000000008b8         db  0x2e ; '.'
00000000000008b9         db  0x36 ; '6'
00000000000008ba         db  0x00 ; '.'
00000000000008bb         db  0x66 ; 'f'
00000000000008bc         db  0x66 ; 'f'
00000000000008bd         db  0x6c ; 'l'
00000000000008be         db  0x75 ; 'u'
00000000000008bf         db  0x73 ; 's'
00000000000008c0         db  0x68 ; 'h'
00000000000008c1         db  0x00 ; '.'
00000000000008c2         db  0x5f ; '_'
00000000000008c3         db  0x5f ; '_'
00000000000008c4         db  0x70 ; 'p'
00000000000008c5         db  0x72 ; 'r'
00000000000008c6         db  0x69 ; 'i'
00000000000008c7         db  0x6e ; 'n'
00000000000008c8         db  0x74 ; 't'
00000000000008c9         db  0x66 ; 'f'
00000000000008ca         db  0x5f ; '_'
00000000000008cb         db  0x63 ; 'c'
00000000000008cc         db  0x68 ; 'h'
00000000000008cd         db  0x6b ; 'k'
00000000000008ce         db  0x00 ; '.'
00000000000008cf         db  0x73 ; 's'
00000000000008d0         db  0x65 ; 'e'
00000000000008d1         db  0x74 ; 't'
00000000000008d2         db  0x6c ; 'l'
00000000000008d3         db  0x6f ; 'o'
00000000000008d4         db  0x63 ; 'c'
00000000000008d5         db  0x61 ; 'a'
00000000000008d6         db  0x6c ; 'l'
00000000000008d7         db  0x65 ; 'e'
00000000000008d8         db  0x00 ; '.'
00000000000008d9         db  0x6d ; 'm'
00000000000008da         db  0x62 ; 'b'
00000000000008db         db  0x72 ; 'r'
00000000000008dc         db  0x74 ; 't'
00000000000008dd         db  0x6f ; 'o'
00000000000008de         db  0x77 ; 'w'
00000000000008df         db  0x63 ; 'c'
00000000000008e0         db  0x00 ; '.'
00000000000008e1         db  0x73 ; 's'
00000000000008e2         db  0x74 ; 't'
00000000000008e3         db  0x72 ; 'r'
00000000000008e4         db  0x6e ; 'n'
00000000000008e5         db  0x63 ; 'c'
00000000000008e6         db  0x6d ; 'm'
00000000000008e7         db  0x70 ; 'p'
00000000000008e8         db  0x00 ; '.'
00000000000008e9         db  0x6f ; 'o'
00000000000008ea         db  0x70 ; 'p'
00000000000008eb         db  0x74 ; 't'
00000000000008ec         db  0x69 ; 'i'
00000000000008ed         db  0x6e ; 'n'
00000000000008ee         db  0x64 ; 'd'
00000000000008ef         db  0x00 ; '.'
00000000000008f0         db  0x73 ; 's'
00000000000008f1         db  0x74 ; 't'
00000000000008f2         db  0x72 ; 'r'
00000000000008f3         db  0x72 ; 'r'
00000000000008f4         db  0x63 ; 'c'
00000000000008f5         db  0x68 ; 'h'
00000000000008f6         db  0x72 ; 'r'
00000000000008f7         db  0x00 ; '.'
00000000000008f8         db  0x64 ; 'd'
00000000000008f9         db  0x63 ; 'c'
00000000000008fa         db  0x67 ; 'g'
00000000000008fb         db  0x65 ; 'e'
00000000000008fc         db  0x74 ; 't'
00000000000008fd         db  0x74 ; 't'
00000000000008fe         db  0x65 ; 'e'
00000000000008ff         db  0x78 ; 'x'
0000000000000900         db  0x74 ; 't'
0000000000000901         db  0x00 ; '.'
0000000000000902         db  0x65 ; 'e'
0000000000000903         db  0x72 ; 'r'
0000000000000904         db  0x72 ; 'r'
0000000000000905         db  0x6f ; 'o'
0000000000000906         db  0x72 ; 'r'
0000000000000907         db  0x00 ; '.'
0000000000000908         db  0x5f ; '_'
0000000000000909         db  0x5f ; '_'
000000000000090a         db  0x73 ; 's'
000000000000090b         db  0x74 ; 't'
000000000000090c         db  0x61 ; 'a'
000000000000090d         db  0x63 ; 'c'
000000000000090e         db  0x6b ; 'k'
000000000000090f         db  0x5f ; '_'
0000000000000910         db  0x63 ; 'c'
0000000000000911         db  0x68 ; 'h'
0000000000000912         db  0x6b ; 'k'
0000000000000913         db  0x5f ; '_'
0000000000000914         db  0x66 ; 'f'
0000000000000915         db  0x61 ; 'a'
0000000000000916         db  0x69 ; 'i'
0000000000000917         db  0x6c ; 'l'
0000000000000918         db  0x00 ; '.'
0000000000000919         db  0x5f ; '_'
000000000000091a         db  0x5f ; '_'
000000000000091b         db  0x6c ; 'l'
000000000000091c         db  0x78 ; 'x'
000000000000091d         db  0x73 ; 's'
000000000000091e         db  0x74 ; 't'
000000000000091f         db  0x61 ; 'a'
0000000000000920         db  0x74 ; 't'
0000000000000921         db  0x00 ; '.'
0000000000000922         db  0x69 ; 'i'
0000000000000923         db  0x73 ; 's'
0000000000000924         db  0x77 ; 'w'
0000000000000925         db  0x70 ; 'p'
0000000000000926         db  0x72 ; 'r'
0000000000000927         db  0x69 ; 'i'
0000000000000928         db  0x6e ; 'n'
0000000000000929         db  0x74 ; 't'
000000000000092a         db  0x00 ; '.'
000000000000092b         db  0x72 ; 'r'
000000000000092c         db  0x65 ; 'e'
000000000000092d         db  0x61 ; 'a'
000000000000092e         db  0x6c ; 'l'
000000000000092f         db  0x6c ; 'l'
0000000000000930         db  0x6f ; 'o'
0000000000000931         db  0x63 ; 'c'
0000000000000932         db  0x00 ; '.'
0000000000000933         db  0x61 ; 'a'
0000000000000934         db  0x62 ; 'b'
0000000000000935         db  0x6f ; 'o'
0000000000000936         db  0x72 ; 'r'
0000000000000937         db  0x74 ; 't'
0000000000000938         db  0x00 ; '.'
0000000000000939         db  0x5f ; '_'
000000000000093a         db  0x65 ; 'e'
000000000000093b         db  0x78 ; 'x'
000000000000093c         db  0x69 ; 'i'
000000000000093d         db  0x74 ; 't'
000000000000093e         db  0x00 ; '.'
000000000000093f         db  0x73 ; 's'
0000000000000940         db  0x74 ; 't'
0000000000000941         db  0x72 ; 'r'
0000000000000942         db  0x73 ; 's'
0000000000000943         db  0x70 ; 'p'
0000000000000944         db  0x6e ; 'n'
0000000000000945         db  0x00 ; '.'
0000000000000946         db  0x70 ; 'p'
0000000000000947         db  0x72 ; 'r'
0000000000000948         db  0x6f ; 'o'
0000000000000949         db  0x67 ; 'g'
000000000000094a         db  0x72 ; 'r'
000000000000094b         db  0x61 ; 'a'
000000000000094c         db  0x6d ; 'm'
000000000000094d         db  0x5f ; '_'
000000000000094e         db  0x69 ; 'i'
000000000000094f         db  0x6e ; 'n'
0000000000000950         db  0x76 ; 'v'
0000000000000951         db  0x6f ; 'o'
0000000000000952         db  0x63 ; 'c'
0000000000000953         db  0x61 ; 'a'
0000000000000954         db  0x74 ; 't'
0000000000000955         db  0x69 ; 'i'
0000000000000956         db  0x6f ; 'o'
0000000000000957         db  0x6e ; 'n'
0000000000000958         db  0x5f ; '_'
0000000000000959         db  0x6e ; 'n'
000000000000095a         db  0x61 ; 'a'
000000000000095b         db  0x6d ; 'm'
000000000000095c         db  0x65 ; 'e'
000000000000095d         db  0x00 ; '.'
000000000000095e         db  0x5f ; '_'
000000000000095f         db  0x5f ; '_'
0000000000000960         db  0x63 ; 'c'
0000000000000961         db  0x74 ; 't'
0000000000000962         db  0x79 ; 'y'
0000000000000963         db  0x70 ; 'p'
0000000000000964         db  0x65 ; 'e'
0000000000000965         db  0x5f ; '_'
0000000000000966         db  0x67 ; 'g'
0000000000000967         db  0x65 ; 'e'
0000000000000968         db  0x74 ; 't'
0000000000000969         db  0x5f ; '_'
000000000000096a         db  0x6d ; 'm'
000000000000096b         db  0x62 ; 'b'
000000000000096c         db  0x5f ; '_'
000000000000096d         db  0x63 ; 'c'
000000000000096e         db  0x75 ; 'u'
000000000000096f         db  0x72 ; 'r'
0000000000000970         db  0x5f ; '_'
0000000000000971         db  0x6d ; 'm'
0000000000000972         db  0x61 ; 'a'
0000000000000973         db  0x78 ; 'x'
0000000000000974         db  0x00 ; '.'
0000000000000975         db  0x63 ; 'c'
0000000000000976         db  0x61 ; 'a'
0000000000000977         db  0x6c ; 'l'
0000000000000978         db  0x6c ; 'l'
0000000000000979         db  0x6f ; 'o'
000000000000097a         db  0x63 ; 'c'
000000000000097b         db  0x00 ; '.'
000000000000097c         db  0x73 ; 's'
000000000000097d         db  0x74 ; 't'
000000000000097e         db  0x72 ; 'r'
000000000000097f         db  0x6c ; 'l'
0000000000000980         db  0x65 ; 'e'
0000000000000981         db  0x6e ; 'n'
0000000000000982         db  0x00 ; '.'
0000000000000983         db  0x6d ; 'm'
0000000000000984         db  0x65 ; 'e'
0000000000000985         db  0x6d ; 'm'
0000000000000986         db  0x73 ; 's'
0000000000000987         db  0x65 ; 'e'
0000000000000988         db  0x74 ; 't'
0000000000000989         db  0x00 ; '.'
000000000000098a         db  0x5f ; '_'
000000000000098b         db  0x5f ; '_'
000000000000098c         db  0x65 ; 'e'
000000000000098d         db  0x72 ; 'r'
000000000000098e         db  0x72 ; 'r'
000000000000098f         db  0x6e ; 'n'
0000000000000990         db  0x6f ; 'o'
0000000000000991         db  0x5f ; '_'
0000000000000992         db  0x6c ; 'l'
0000000000000993         db  0x6f ; 'o'
0000000000000994         db  0x63 ; 'c'
0000000000000995         db  0x61 ; 'a'
0000000000000996         db  0x74 ; 't'
0000000000000997         db  0x69 ; 'i'
0000000000000998         db  0x6f ; 'o'
0000000000000999         db  0x6e ; 'n'
000000000000099a         db  0x00 ; '.'
000000000000099b         db  0x6d ; 'm'
000000000000099c         db  0x65 ; 'e'
000000000000099d         db  0x6d ; 'm'
000000000000099e         db  0x63 ; 'c'
000000000000099f         db  0x6d ; 'm'
00000000000009a0         db  0x70 ; 'p'
00000000000009a1         db  0x00 ; '.'
00000000000009a2         db  0x5f ; '_'
00000000000009a3         db  0x5f ; '_'
00000000000009a4         db  0x66 ; 'f'
00000000000009a5         db  0x70 ; 'p'
00000000000009a6         db  0x72 ; 'r'
00000000000009a7         db  0x69 ; 'i'
00000000000009a8         db  0x6e ; 'n'
00000000000009a9         db  0x74 ; 't'
00000000000009aa         db  0x66 ; 'f'
00000000000009ab         db  0x5f ; '_'
00000000000009ac         db  0x63 ; 'c'
00000000000009ad         db  0x68 ; 'h'
00000000000009ae         db  0x6b ; 'k'
00000000000009af         db  0x00 ; '.'
00000000000009b0         db  0x73 ; 's'
00000000000009b1         db  0x74 ; 't'
00000000000009b2         db  0x64 ; 'd'
00000000000009b3         db  0x6f ; 'o'
00000000000009b4         db  0x75 ; 'u'
00000000000009b5         db  0x74 ; 't'
00000000000009b6         db  0x00 ; '.'
00000000000009b7         db  0x6c ; 'l'
00000000000009b8         db  0x73 ; 's'
00000000000009b9         db  0x65 ; 'e'
00000000000009ba         db  0x65 ; 'e'
00000000000009bb         db  0x6b ; 'k'
00000000000009bc         db  0x00 ; '.'
00000000000009bd         db  0x6d ; 'm'
00000000000009be         db  0x65 ; 'e'
00000000000009bf         db  0x6d ; 'm'
00000000000009c0         db  0x63 ; 'c'
00000000000009c1         db  0x70 ; 'p'
00000000000009c2         db  0x79 ; 'y'
00000000000009c3         db  0x00 ; '.'
00000000000009c4         db  0x66 ; 'f'
00000000000009c5         db  0x63 ; 'c'
00000000000009c6         db  0x6c ; 'l'
00000000000009c7         db  0x6f ; 'o'
00000000000009c8         db  0x73 ; 's'
00000000000009c9         db  0x65 ; 'e'
00000000000009ca         db  0x00 ; '.'
00000000000009cb         db  0x6d ; 'm'
00000000000009cc         db  0x61 ; 'a'
00000000000009cd         db  0x6c ; 'l'
00000000000009ce         db  0x6c ; 'l'
00000000000009cf         db  0x6f ; 'o'
00000000000009d0         db  0x63 ; 'c'
00000000000009d1         db  0x00 ; '.'
00000000000009d2         db  0x6d ; 'm'
00000000000009d3         db  0x62 ; 'b'
00000000000009d4         db  0x73 ; 's'
00000000000009d5         db  0x69 ; 'i'
00000000000009d6         db  0x6e ; 'n'
00000000000009d7         db  0x69 ; 'i'
00000000000009d8         db  0x74 ; 't'
00000000000009d9         db  0x00 ; '.'
00000000000009da         db  0x6e ; 'n'
00000000000009db         db  0x6c ; 'l'
00000000000009dc         db  0x5f ; '_'
00000000000009dd         db  0x6c ; 'l'
00000000000009de         db  0x61 ; 'a'
00000000000009df         db  0x6e ; 'n'
00000000000009e0         db  0x67 ; 'g'
00000000000009e1         db  0x69 ; 'i'
00000000000009e2         db  0x6e ; 'n'
00000000000009e3         db  0x66 ; 'f'
00000000000009e4         db  0x6f ; 'o'
00000000000009e5         db  0x00 ; '.'
00000000000009e6         db  0x5f ; '_'
00000000000009e7         db  0x5f ; '_'
00000000000009e8         db  0x63 ; 'c'
00000000000009e9         db  0x74 ; 't'
00000000000009ea         db  0x79 ; 'y'
00000000000009eb         db  0x70 ; 'p'
00000000000009ec         db  0x65 ; 'e'
00000000000009ed         db  0x5f ; '_'
00000000000009ee         db  0x62 ; 'b'
00000000000009ef         db  0x5f ; '_'
00000000000009f0         db  0x6c ; 'l'
00000000000009f1         db  0x6f ; 'o'
00000000000009f2         db  0x63 ; 'c'
00000000000009f3         db  0x00 ; '.'
00000000000009f4         db  0x6f ; 'o'
00000000000009f5         db  0x70 ; 'p'
00000000000009f6         db  0x74 ; 't'
00000000000009f7         db  0x61 ; 'a'
00000000000009f8         db  0x72 ; 'r'
00000000000009f9         db  0x67 ; 'g'
00000000000009fa         db  0x00 ; '.'
00000000000009fb         db  0x5f ; '_'
00000000000009fc         db  0x5f ; '_'
00000000000009fd         db  0x66 ; 'f'
00000000000009fe         db  0x72 ; 'r'
00000000000009ff         db  0x65 ; 'e'
                     aAding:
0000000000000a00         db         "ading", 0
0000000000000a06         db  0x73 ; 's'
0000000000000a07         db  0x74 ; 't'
0000000000000a08         db  0x64 ; 'd'
0000000000000a09         db  0x65 ; 'e'
0000000000000a0a         db  0x72 ; 'r'
0000000000000a0b         db  0x72 ; 'r'
0000000000000a0c         db  0x00 ; '.'
0000000000000a0d         db  0x72 ; 'r'
0000000000000a0e         db  0x65 ; 'e'
0000000000000a0f         db  0x61 ; 'a'
0000000000000a10         db  0x64 ; 'd'
0000000000000a11         db  0x6c ; 'l'
0000000000000a12         db  0x69 ; 'i'
0000000000000a13         db  0x6e ; 'n'
0000000000000a14         db  0x6b ; 'k'
0000000000000a15         db  0x00 ; '.'
0000000000000a16         db  0x67 ; 'g'
0000000000000a17         db  0x65 ; 'e'
0000000000000a18         db  0x74 ; 't'
0000000000000a19         db  0x6f ; 'o'
0000000000000a1a         db  0x70 ; 'p'
0000000000000a1b         db  0x74 ; 't'
0000000000000a1c         db  0x5f ; '_'
0000000000000a1d         db  0x6c ; 'l'
0000000000000a1e         db  0x6f ; 'o'
0000000000000a1f         db  0x6e ; 'n'
0000000000000a20         db  0x67 ; 'g'
0000000000000a21         db  0x00 ; '.'
0000000000000a22         db  0x66 ; 'f'
0000000000000a23         db  0x69 ; 'i'
0000000000000a24         db  0x6c ; 'l'
0000000000000a25         db  0x65 ; 'e'
0000000000000a26         db  0x6e ; 'n'
0000000000000a27         db  0x6f ; 'o'
0000000000000a28         db  0x00 ; '.'
0000000000000a29         db  0x67 ; 'g'
0000000000000a2a         db  0x65 ; 'e'
0000000000000a2b         db  0x74 ; 't'
0000000000000a2c         db  0x63 ; 'c'
0000000000000a2d         db  0x77 ; 'w'
0000000000000a2e         db  0x64 ; 'd'
0000000000000a2f         db  0x00 ; '.'
0000000000000a30         db  0x66 ; 'f'
0000000000000a31         db  0x77 ; 'w'
0000000000000a32         db  0x72 ; 'r'
0000000000000a33         db  0x69 ; 'i'
0000000000000a34         db  0x74 ; 't'
0000000000000a35         db  0x65 ; 'e'
0000000000000a36         db  0x00 ; '.'
0000000000000a37         db  0x5f ; '_'
0000000000000a38         db  0x5f ; '_'
0000000000000a39         db  0x66 ; 'f'
0000000000000a3a         db  0x70 ; 'p'
0000000000000a3b         db  0x65 ; 'e'
0000000000000a3c         db  0x6e ; 'n'
0000000000000a3d         db  0x64 ; 'd'
0000000000000a3e         db  0x69 ; 'i'
0000000000000a3f         db  0x6e ; 'n'
0000000000000a40         db  0x67 ; 'g'
0000000000000a41         db  0x00 ; '.'
0000000000000a42         db  0x70 ; 'p'
0000000000000a43         db  0x72 ; 'r'
0000000000000a44         db  0x6f ; 'o'
0000000000000a45         db  0x67 ; 'g'
0000000000000a46         db  0x72 ; 'r'
0000000000000a47         db  0x61 ; 'a'
0000000000000a48         db  0x6d ; 'm'
0000000000000a49         db  0x5f ; '_'
0000000000000a4a         db  0x69 ; 'i'
0000000000000a4b         db  0x6e ; 'n'
0000000000000a4c         db  0x76 ; 'v'
0000000000000a4d         db  0x6f ; 'o'
0000000000000a4e         db  0x63 ; 'c'
0000000000000a4f         db  0x61 ; 'a'
0000000000000a50         db  0x74 ; 't'
0000000000000a51         db  0x69 ; 'i'
0000000000000a52         db  0x6f ; 'o'
0000000000000a53         db  0x6e ; 'n'
0000000000000a54         db  0x5f ; '_'
0000000000000a55         db  0x73 ; 's'
0000000000000a56         db  0x68 ; 'h'
0000000000000a57         db  0x6f ; 'o'
0000000000000a58         db  0x72 ; 'r'
0000000000000a59         db  0x74 ; 't'
0000000000000a5a         db  0x5f ; '_'
0000000000000a5b         db  0x6e ; 'n'
0000000000000a5c         db  0x61 ; 'a'
0000000000000a5d         db  0x6d ; 'm'
0000000000000a5e         db  0x65 ; 'e'
0000000000000a5f         db  0x00 ; '.'
0000000000000a60         db  0x5f ; '_'
0000000000000a61         db  0x5f ; '_'
0000000000000a62         db  0x63 ; 'c'
0000000000000a63         db  0x78 ; 'x'
0000000000000a64         db  0x61 ; 'a'
0000000000000a65         db  0x5f ; '_'
0000000000000a66         db  0x66 ; 'f'
0000000000000a67         db  0x69 ; 'i'
0000000000000a68         db  0x6e ; 'n'
0000000000000a69         db  0x61 ; 'a'
0000000000000a6a         db  0x6c ; 'l'
0000000000000a6b         db  0x69 ; 'i'
0000000000000a6c         db  0x7a ; 'z'
0000000000000a6d         db  0x65 ; 'e'
0000000000000a6e         db  0x00 ; '.'
0000000000000a6f         db  0x5f ; '_'
0000000000000a70         db  0x5f ; '_'
0000000000000a71         db  0x78 ; 'x'
0000000000000a72         db  0x73 ; 's'
0000000000000a73         db  0x74 ; 't'
0000000000000a74         db  0x61 ; 'a'
0000000000000a75         db  0x74 ; 't'
0000000000000a76         db  0x00 ; '.'
0000000000000a77         db  0x6d ; 'm'
0000000000000a78         db  0x65 ; 'e'
0000000000000a79         db  0x6d ; 'm'
0000000000000a7a         db  0x6d ; 'm'
0000000000000a7b         db  0x6f ; 'o'
0000000000000a7c         db  0x76 ; 'v'
0000000000000a7d         db  0x65 ; 'e'
0000000000000a7e         db  0x00 ; '.'
0000000000000a7f         db  0x62 ; 'b'
0000000000000a80         db  0x69 ; 'i'
0000000000000a81         db  0x6e ; 'n'
0000000000000a82         db  0x64 ; 'd'
0000000000000a83         db  0x74 ; 't'
0000000000000a84         db  0x65 ; 'e'
0000000000000a85         db  0x78 ; 'x'
0000000000000a86         db  0x74 ; 't'
0000000000000a87         db  0x64 ; 'd'
0000000000000a88         db  0x6f ; 'o'
0000000000000a89         db  0x6d ; 'm'
0000000000000a8a         db  0x61 ; 'a'
0000000000000a8b         db  0x69 ; 'i'
0000000000000a8c         db  0x6e ; 'n'
0000000000000a8d         db  0x00 ; '.'
0000000000000a8e         db  0x5f ; '_'
0000000000000a8f         db  0x5f ; '_'
0000000000000a90         db  0x66 ; 'f'
0000000000000a91         db  0x78 ; 'x'
0000000000000a92         db  0x73 ; 's'
0000000000000a93         db  0x74 ; 't'
0000000000000a94         db  0x61 ; 'a'
0000000000000a95         db  0x74 ; 't'
0000000000000a96         db  0x61 ; 'a'
0000000000000a97         db  0x74 ; 't'
0000000000000a98         db  0x00 ; '.'
0000000000000a99         db  0x73 ; 's'
0000000000000a9a         db  0x74 ; 't'
0000000000000a9b         db  0x72 ; 'r'
0000000000000a9c         db  0x63 ; 'c'
0000000000000a9d         db  0x6d ; 'm'
0000000000000a9e         db  0x70 ; 'p'
0000000000000a9f         db  0x00 ; '.'
0000000000000aa0         db  0x5f ; '_'
0000000000000aa1         db  0x5f ; '_'
0000000000000aa2         db  0x6c ; 'l'
0000000000000aa3         db  0x69 ; 'i'
0000000000000aa4         db  0x62 ; 'b'
0000000000000aa5         db  0x63 ; 'c'
0000000000000aa6         db  0x5f ; '_'
0000000000000aa7         db  0x73 ; 's'
0000000000000aa8         db  0x74 ; 't'
0000000000000aa9         db  0x61 ; 'a'
0000000000000aaa         db  0x72 ; 'r'
0000000000000aab         db  0x74 ; 't'
0000000000000aac         db  0x5f ; '_'
0000000000000aad         db  0x6d ; 'm'
0000000000000aae         db  0x61 ; 'a'
0000000000000aaf         db  0x69 ; 'i'
0000000000000ab0         db  0x6e ; 'n'
0000000000000ab1         db  0x00 ; '.'
0000000000000ab2         db  0x66 ; 'f'
0000000000000ab3         db  0x73 ; 's'
0000000000000ab4         db  0x65 ; 'e'
0000000000000ab5         db  0x65 ; 'e'
0000000000000ab6         db  0x6b ; 'k'
0000000000000ab7         db  0x6f ; 'o'
0000000000000ab8         db  0x00 ; '.'
0000000000000ab9         db  0x5f ; '_'
0000000000000aba         db  0x5f ; '_'
0000000000000abb         db  0x6f ; 'o'
0000000000000abc         db  0x76 ; 'v'
0000000000000abd         db  0x65 ; 'e'
0000000000000abe         db  0x72 ; 'r'
0000000000000abf         db  0x66 ; 'f'
0000000000000ac0         db  0x6c ; 'l'
0000000000000ac1         db  0x6f ; 'o'
0000000000000ac2         db  0x77 ; 'w'
0000000000000ac3         db  0x00 ; '.'
0000000000000ac4         db  0x66 ; 'f'
0000000000000ac5         db  0x70 ; 'p'
0000000000000ac6         db  0x75 ; 'u'
0000000000000ac7         db  0x74 ; 't'
0000000000000ac8         db  0x73 ; 's'
0000000000000ac9         db  0x5f ; '_'
0000000000000aca         db  0x75 ; 'u'
0000000000000acb         db  0x6e ; 'n'
0000000000000acc         db  0x6c ; 'l'
0000000000000acd         db  0x6f ; 'o'
0000000000000ace         db  0x63 ; 'c'
0000000000000acf         db  0x6b ; 'k'
0000000000000ad0         db  0x65 ; 'e'
0000000000000ad1         db  0x64 ; 'd'
0000000000000ad2         db  0x00 ; '.'
0000000000000ad3         db  0x66 ; 'f'
0000000000000ad4         db  0x72 ; 'r'
0000000000000ad5         db  0x65 ; 'e'
0000000000000ad6         db  0x65 ; 'e'
0000000000000ad7         db  0x00 ; '.'
0000000000000ad8         db  0x5f ; '_'
0000000000000ad9         db  0x5f ; '_'
0000000000000ada         db  0x70 ; 'p'
0000000000000adb         db  0x72 ; 'r'
0000000000000adc         db  0x6f ; 'o'
0000000000000add         db  0x67 ; 'g'
0000000000000ade         db  0x6e ; 'n'
0000000000000adf         db  0x61 ; 'a'
0000000000000ae0         db  0x6d ; 'm'
0000000000000ae1         db  0x65 ; 'e'
0000000000000ae2         db  0x00 ; '.'
0000000000000ae3         db  0x5f ; '_'
0000000000000ae4         db  0x5f ; '_'
0000000000000ae5         db  0x70 ; 'p'
0000000000000ae6         db  0x72 ; 'r'
0000000000000ae7         db  0x6f ; 'o'
0000000000000ae8         db  0x67 ; 'g'
0000000000000ae9         db  0x6e ; 'n'
0000000000000aea         db  0x61 ; 'a'
0000000000000aeb         db  0x6d ; 'm'
0000000000000aec         db  0x65 ; 'e'
0000000000000aed         db  0x5f ; '_'
0000000000000aee         db  0x66 ; 'f'
0000000000000aef         db  0x75 ; 'u'
0000000000000af0         db  0x6c ; 'l'
0000000000000af1         db  0x6c ; 'l'
0000000000000af2         db  0x00 ; '.'
0000000000000af3         db  0x5f ; '_'
0000000000000af4         db  0x5f ; '_'
0000000000000af5         db  0x63 ; 'c'
0000000000000af6         db  0x78 ; 'x'
0000000000000af7         db  0x61 ; 'a'
0000000000000af8         db  0x5f ; '_'
0000000000000af9         db  0x61 ; 'a'
0000000000000afa         db  0x74 ; 't'
0000000000000afb         db  0x65 ; 'e'
0000000000000afc         db  0x78 ; 'x'
0000000000000afd         db  0x69 ; 'i'
0000000000000afe         db  0x74 ; 't'
0000000000000aff         db  0x00 ; '.'
                     aGlibc23:
0000000000000b00         db         "GLIBC_2.3", 0
0000000000000b0a         db  0x47 ; 'G'
0000000000000b0b         db  0x4c ; 'L'
0000000000000b0c         db  0x49 ; 'I'
0000000000000b0d         db  0x42 ; 'B'
0000000000000b0e         db  0x43 ; 'C'
0000000000000b0f         db  0x5f ; '_'
0000000000000b10         db  0x32 ; '2'
0000000000000b11         db  0x2e ; '.'
0000000000000b12         db  0x33 ; '3'
0000000000000b13         db  0x2e ; '.'
0000000000000b14         db  0x34 ; '4'
0000000000000b15         db  0x00 ; '.'
0000000000000b16         db  0x47 ; 'G'
0000000000000b17         db  0x4c ; 'L'
0000000000000b18         db  0x49 ; 'I'
0000000000000b19         db  0x42 ; 'B'
0000000000000b1a         db  0x43 ; 'C'
0000000000000b1b         db  0x5f ; '_'
0000000000000b1c         db  0x32 ; '2'
0000000000000b1d         db  0x2e ; '.'
0000000000000b1e         db  0x31 ; '1'
0000000000000b1f         db  0x34 ; '4'
0000000000000b20         db  0x00 ; '.'
0000000000000b21         db  0x47 ; 'G'
0000000000000b22         db  0x4c ; 'L'
0000000000000b23         db  0x49 ; 'I'
0000000000000b24         db  0x42 ; 'B'
0000000000000b25         db  0x43 ; 'C'
0000000000000b26         db  0x5f ; '_'
0000000000000b27         db  0x32 ; '2'
0000000000000b28         db  0x2e ; '.'
0000000000000b29         db  0x34 ; '4'
0000000000000b2a         db  0x00 ; '.'
0000000000000b2b         db  0x47 ; 'G'
0000000000000b2c         db  0x4c ; 'L'
0000000000000b2d         db  0x49 ; 'I'
0000000000000b2e         db  0x42 ; 'B'
0000000000000b2f         db  0x43 ; 'C'
0000000000000b30         db  0x5f ; '_'
0000000000000b31         db  0x32 ; '2'
0000000000000b32         db  0x2e ; '.'
0000000000000b33         db  0x32 ; '2'
0000000000000b34         db  0x2e ; '.'
0000000000000b35         db  0x35 ; '5'
0000000000000b36         db  0x00 ; '.'
0000000000000b37         db  0x5f ; '_'
0000000000000b38         db  0x49 ; 'I'
0000000000000b39         db  0x54 ; 'T'
0000000000000b3a         db  0x4d ; 'M'
0000000000000b3b         db  0x5f ; '_'
0000000000000b3c         db  0x64 ; 'd'
0000000000000b3d         db  0x65 ; 'e'
0000000000000b3e         db  0x72 ; 'r'
0000000000000b3f         db  0x65 ; 'e'
0000000000000b40         db  0x67 ; 'g'
                     aIstertmcloneta:
0000000000000b41         db         "isterTMCloneTable", 0
0000000000000b53         db  0x5f ; '_'
0000000000000b54         db  0x5f ; '_'
0000000000000b55         db  0x67 ; 'g'
0000000000000b56         db  0x6d ; 'm'
0000000000000b57         db  0x6f ; 'o'
0000000000000b58         db  0x6e ; 'n'
0000000000000b59         db  0x5f ; '_'
0000000000000b5a         db  0x73 ; 's'
0000000000000b5b         db  0x74 ; 't'
0000000000000b5c         db  0x61 ; 'a'
0000000000000b5d         db  0x72 ; 'r'
0000000000000b5e         db  0x74 ; 't'
0000000000000b5f         db  0x5f ; '_'
0000000000000b60         db  0x5f ; '_'
0000000000000b61         db  0x00 ; '.'
0000000000000b62         db  0x5f ; '_'
0000000000000b63         db  0x49 ; 'I'
0000000000000b64         db  0x54 ; 'T'
0000000000000b65         db  0x4d ; 'M'
0000000000000b66         db  0x5f ; '_'
0000000000000b67         db  0x72 ; 'r'
0000000000000b68         db  0x65 ; 'e'
0000000000000b69         db  0x67 ; 'g'
0000000000000b6a         db  0x69 ; 'i'
0000000000000b6b         db  0x73 ; 's'
0000000000000b6c         db  0x74 ; 't'
0000000000000b6d         db  0x65 ; 'e'
0000000000000b6e         db  0x72 ; 'r'
0000000000000b6f         db  0x54 ; 'T'
0000000000000b70         db  0x4d ; 'M'
0000000000000b71         db  0x43 ; 'C'
0000000000000b72         db  0x6c ; 'l'
0000000000000b73         db  0x6f ; 'o'
0000000000000b74         db  0x6e ; 'n'
0000000000000b75         db  0x65 ; 'e'
0000000000000b76         db  0x54 ; 'T'
0000000000000b77         db  0x61 ; 'a'
0000000000000b78         db  0x62 ; 'b'
0000000000000b79         db  0x6c ; 'l'
0000000000000b7a         db  0x65 ; 'e'
0000000000000b7b         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xb7c; 0xbf8[ (124 bytes)
        ; File offset : [2940; 3064[ (124 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000b7c         db  0x00 ; '.'
0000000000000b7d         db  0x00 ; '.'
0000000000000b7e         db  0x02 ; '.'
0000000000000b7f         db  0x00 ; '.'
0000000000000b80         db  0x02 ; '.'
0000000000000b81         db  0x00 ; '.'
0000000000000b82         db  0x02 ; '.'
0000000000000b83         db  0x00 ; '.'
0000000000000b84         db  0x02 ; '.'
0000000000000b85         db  0x00 ; '.'
0000000000000b86         db  0x00 ; '.'
0000000000000b87         db  0x00 ; '.'
0000000000000b88         db  0x02 ; '.'
0000000000000b89         db  0x00 ; '.'
0000000000000b8a         db  0x02 ; '.'
0000000000000b8b         db  0x00 ; '.'
0000000000000b8c         db  0x02 ; '.'
0000000000000b8d         db  0x00 ; '.'
0000000000000b8e         db  0x02 ; '.'
0000000000000b8f         db  0x00 ; '.'
0000000000000b90         db  0x02 ; '.'
0000000000000b91         db  0x00 ; '.'
0000000000000b92         db  0x02 ; '.'
0000000000000b93         db  0x00 ; '.'
0000000000000b94         db  0x02 ; '.'
0000000000000b95         db  0x00 ; '.'
0000000000000b96         db  0x02 ; '.'
0000000000000b97         db  0x00 ; '.'
0000000000000b98         db  0x02 ; '.'
0000000000000b99         db  0x00 ; '.'
0000000000000b9a         db  0x02 ; '.'
0000000000000b9b         db  0x00 ; '.'
0000000000000b9c         db  0x03 ; '.'
0000000000000b9d         db  0x00 ; '.'
0000000000000b9e         db  0x02 ; '.'
0000000000000b9f         db  0x00 ; '.'
0000000000000ba0         db  0x02 ; '.'
0000000000000ba1         db  0x00 ; '.'
0000000000000ba2         db  0x03 ; '.'
0000000000000ba3         db  0x00 ; '.'
0000000000000ba4         db  0x02 ; '.'
0000000000000ba5         db  0x00 ; '.'
0000000000000ba6         db  0x02 ; '.'
0000000000000ba7         db  0x00 ; '.'
0000000000000ba8         db  0x02 ; '.'
0000000000000ba9         db  0x00 ; '.'
0000000000000baa         db  0x02 ; '.'
0000000000000bab         db  0x00 ; '.'
0000000000000bac         db  0x02 ; '.'
0000000000000bad         db  0x00 ; '.'
0000000000000bae         db  0x02 ; '.'
0000000000000baf         db  0x00 ; '.'
0000000000000bb0         db  0x02 ; '.'
0000000000000bb1         db  0x00 ; '.'
0000000000000bb2         db  0x02 ; '.'
0000000000000bb3         db  0x00 ; '.'
0000000000000bb4         db  0x02 ; '.'
0000000000000bb5         db  0x00 ; '.'
0000000000000bb6         db  0x02 ; '.'
0000000000000bb7         db  0x00 ; '.'
0000000000000bb8         db  0x02 ; '.'
0000000000000bb9         db  0x00 ; '.'
0000000000000bba         db  0x00 ; '.'
0000000000000bbb         db  0x00 ; '.'
0000000000000bbc         db  0x04 ; '.'
0000000000000bbd         db  0x00 ; '.'
0000000000000bbe         db  0x02 ; '.'
0000000000000bbf         db  0x00 ; '.'
0000000000000bc0         db  0x02 ; '.'
0000000000000bc1         db  0x00 ; '.'
0000000000000bc2         db  0x02 ; '.'
0000000000000bc3         db  0x00 ; '.'
0000000000000bc4         db  0x02 ; '.'
0000000000000bc5         db  0x00 ; '.'
0000000000000bc6         db  0x02 ; '.'
0000000000000bc7         db  0x00 ; '.'
0000000000000bc8         db  0x02 ; '.'
0000000000000bc9         db  0x00 ; '.'
0000000000000bca         db  0x02 ; '.'
0000000000000bcb         db  0x00 ; '.'
0000000000000bcc         db  0x02 ; '.'
0000000000000bcd         db  0x00 ; '.'
0000000000000bce         db  0x05 ; '.'
0000000000000bcf         db  0x00 ; '.'
0000000000000bd0         db  0x02 ; '.'
0000000000000bd1         db  0x00 ; '.'
0000000000000bd2         db  0x02 ; '.'
0000000000000bd3         db  0x00 ; '.'
0000000000000bd4         db  0x02 ; '.'
0000000000000bd5         db  0x00 ; '.'
0000000000000bd6         db  0x02 ; '.'
0000000000000bd7         db  0x00 ; '.'
0000000000000bd8         db  0x02 ; '.'
0000000000000bd9         db  0x00 ; '.'
0000000000000bda         db  0x02 ; '.'
0000000000000bdb         db  0x00 ; '.'
0000000000000bdc         db  0x05 ; '.'
0000000000000bdd         db  0x00 ; '.'
0000000000000bde         db  0x00 ; '.'
0000000000000bdf         db  0x00 ; '.'
0000000000000be0         db  0x02 ; '.'
0000000000000be1         db  0x00 ; '.'
0000000000000be2         db  0x02 ; '.'
0000000000000be3         db  0x00 ; '.'
0000000000000be4         db  0x02 ; '.'
0000000000000be5         db  0x00 ; '.'
0000000000000be6         db  0x06 ; '.'
0000000000000be7         db  0x00 ; '.'
0000000000000be8         db  0x02 ; '.'
0000000000000be9         db  0x00 ; '.'
0000000000000bea         db  0x02 ; '.'
0000000000000beb         db  0x00 ; '.'
0000000000000bec         db  0x02 ; '.'
0000000000000bed         db  0x00 ; '.'
0000000000000bee         db  0x02 ; '.'
0000000000000bef         db  0x00 ; '.'
0000000000000bf0         db  0x02 ; '.'
0000000000000bf1         db  0x00 ; '.'
0000000000000bf2         db  0x02 ; '.'
0000000000000bf3         db  0x00 ; '.'
0000000000000bf4         db  0x02 ; '.'
0000000000000bf5         db  0x00 ; '.'
0000000000000bf6         db  0x02 ; '.'
0000000000000bf7         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xbf8; 0xc58[ (96 bytes)
        ; File offset : [3064; 3160[ (96 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000bf8         db  0x01 ; '.'
0000000000000bf9         db  0x00 ; '.'
0000000000000bfa         db  0x05 ; '.'
0000000000000bfb         db  0x00 ; '.'
0000000000000bfc         db  0x01 ; '.'
0000000000000bfd         db  0x00 ; '.'
0000000000000bfe         db  0x00 ; '.'
0000000000000bff         db  0x00 ; '.'
0000000000000c00         db  0x10 ; '.'
0000000000000c01         db  0x00 ; '.'
0000000000000c02         db  0x00 ; '.'
0000000000000c03         db  0x00 ; '.'
0000000000000c04         db  0x00 ; '.'
0000000000000c05         db  0x00 ; '.'
0000000000000c06         db  0x00 ; '.'
0000000000000c07         db  0x00 ; '.'
0000000000000c08         db  0x13 ; '.'
0000000000000c09         db  0x69 ; 'i'
0000000000000c0a         db  0x69 ; 'i'
0000000000000c0b         db  0x0d ; '.'
0000000000000c0c         db  0x00 ; '.'
0000000000000c0d         db  0x00 ; '.'
0000000000000c0e         db  0x06 ; '.'
0000000000000c0f         db  0x00 ; '.'
0000000000000c10         db  0x50 ; 'P'
0000000000000c11         db  0x02 ; '.'
0000000000000c12         db  0x00 ; '.'
0000000000000c13         db  0x00 ; '.'
0000000000000c14         db  0x10 ; '.'
0000000000000c15         db  0x00 ; '.'
0000000000000c16         db  0x00 ; '.'
0000000000000c17         db  0x00 ; '.'
0000000000000c18         db  0x74 ; 't'
0000000000000c19         db  0x19 ; '.'
0000000000000c1a         db  0x69 ; 'i'
0000000000000c1b         db  0x09 ; '.'
0000000000000c1c         db  0x00 ; '.'
0000000000000c1d         db  0x00 ; '.'
0000000000000c1e         db  0x05 ; '.'
0000000000000c1f         db  0x00 ; '.'
0000000000000c20         db  0x5a ; 'Z'
0000000000000c21         db  0x02 ; '.'
0000000000000c22         db  0x00 ; '.'
0000000000000c23         db  0x00 ; '.'
0000000000000c24         db  0x10 ; '.'
0000000000000c25         db  0x00 ; '.'
0000000000000c26         db  0x00 ; '.'
0000000000000c27         db  0x00 ; '.'
0000000000000c28         db  0x94 ; '.'
0000000000000c29         db  0x91 ; '.'
0000000000000c2a         db  0x96 ; '.'
0000000000000c2b         db  0x06 ; '.'
0000000000000c2c         db  0x00 ; '.'
0000000000000c2d         db  0x00 ; '.'
0000000000000c2e         db  0x04 ; '.'
0000000000000c2f         db  0x00 ; '.'
0000000000000c30         db  0x66 ; 'f'
0000000000000c31         db  0x02 ; '.'
0000000000000c32         db  0x00 ; '.'
0000000000000c33         db  0x00 ; '.'
0000000000000c34         db  0x10 ; '.'
0000000000000c35         db  0x00 ; '.'
0000000000000c36         db  0x00 ; '.'
0000000000000c37         db  0x00 ; '.'
0000000000000c38         db  0x14 ; '.'
0000000000000c39         db  0x69 ; 'i'
0000000000000c3a         db  0x69 ; 'i'
0000000000000c3b         db  0x0d ; '.'
0000000000000c3c         db  0x00 ; '.'
0000000000000c3d         db  0x00 ; '.'
0000000000000c3e         db  0x03 ; '.'
0000000000000c3f         db  0x00 ; '.'
0000000000000c40         db  0x71 ; 'q'
0000000000000c41         db  0x02 ; '.'
0000000000000c42         db  0x00 ; '.'
0000000000000c43         db  0x00 ; '.'
0000000000000c44         db  0x10 ; '.'
0000000000000c45         db  0x00 ; '.'
0000000000000c46         db  0x00 ; '.'
0000000000000c47         db  0x00 ; '.'
0000000000000c48         db  0x75 ; 'u'
0000000000000c49         db  0x1a ; '.'
0000000000000c4a         db  0x69 ; 'i'
0000000000000c4b         db  0x09 ; '.'
0000000000000c4c         db  0x00 ; '.'
0000000000000c4d         db  0x00 ; '.'
0000000000000c4e         db  0x02 ; '.'
0000000000000c4f         db  0x00 ; '.'
0000000000000c50         db  0x7b ; '{'
0000000000000c51         db  0x02 ; '.'
0000000000000c52         db  0x00 ; '.'
0000000000000c53         db  0x00 ; '.'
0000000000000c54         db  0x00 ; '.'
0000000000000c55         db  0x00 ; '.'
0000000000000c56         db  0x00 ; '.'
0000000000000c57         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xc58; 0x1000[ (936 bytes)
        ; File offset : [3160; 4096[ (936 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000c58         db  0x30 ; '0'
0000000000000c59         db  0x9a ; '.'
0000000000000c5a         db  0x20 ; ' '
0000000000000c5b         db  0x00 ; '.'
0000000000000c5c         db  0x00 ; '.'
0000000000000c5d         db  0x00 ; '.'
0000000000000c5e         db  0x00 ; '.'
0000000000000c5f         db  0x00 ; '.'
0000000000000c60         db  0x08 ; '.'
0000000000000c61         db  0x00 ; '.'
0000000000000c62         db  0x00 ; '.'
0000000000000c63         db  0x00 ; '.'
0000000000000c64         db  0x00 ; '.'
0000000000000c65         db  0x00 ; '.'
0000000000000c66         db  0x00 ; '.'
0000000000000c67         db  0x00 ; '.'
0000000000000c68         db  0x90 ; '.'
0000000000000c69         db  0x1d ; '.'
0000000000000c6a         db  0x00 ; '.'
0000000000000c6b         db  0x00 ; '.'
0000000000000c6c         db  0x00 ; '.'
0000000000000c6d         db  0x00 ; '.'
0000000000000c6e         db  0x00 ; '.'
0000000000000c6f         db  0x00 ; '.'
0000000000000c70         db  0x38 ; '8'
0000000000000c71         db  0x9a ; '.'
0000000000000c72         db  0x20 ; ' '
0000000000000c73         db  0x00 ; '.'
0000000000000c74         db  0x00 ; '.'
0000000000000c75         db  0x00 ; '.'
0000000000000c76         db  0x00 ; '.'
0000000000000c77         db  0x00 ; '.'
0000000000000c78         db  0x08 ; '.'
0000000000000c79         db  0x00 ; '.'
0000000000000c7a         db  0x00 ; '.'
0000000000000c7b         db  0x00 ; '.'
0000000000000c7c         db  0x00 ; '.'
0000000000000c7d         db  0x00 ; '.'
0000000000000c7e         db  0x00 ; '.'
0000000000000c7f         db  0x00 ; '.'
0000000000000c80         db  0x50 ; 'P'
0000000000000c81         db  0x1d ; '.'
0000000000000c82         db  0x00 ; '.'
0000000000000c83         db  0x00 ; '.'
0000000000000c84         db  0x00 ; '.'
0000000000000c85         db  0x00 ; '.'
0000000000000c86         db  0x00 ; '.'
0000000000000c87         db  0x00 ; '.'
0000000000000c88         db  0x40 ; '@'
0000000000000c89         db  0x9a ; '.'
0000000000000c8a         db  0x20 ; ' '
0000000000000c8b         db  0x00 ; '.'
0000000000000c8c         db  0x00 ; '.'
0000000000000c8d         db  0x00 ; '.'
0000000000000c8e         db  0x00 ; '.'
0000000000000c8f         db  0x00 ; '.'
0000000000000c90         db  0x08 ; '.'
0000000000000c91         db  0x00 ; '.'
0000000000000c92         db  0x00 ; '.'
0000000000000c93         db  0x00 ; '.'
0000000000000c94         db  0x00 ; '.'
0000000000000c95         db  0x00 ; '.'
0000000000000c96         db  0x00 ; '.'
0000000000000c97         db  0x00 ; '.'
0000000000000c98         db  0x3d ; '='
0000000000000c99         db  0x70 ; 'p'
0000000000000c9a         db  0x00 ; '.'
0000000000000c9b         db  0x00 ; '.'
0000000000000c9c         db  0x00 ; '.'
0000000000000c9d         db  0x00 ; '.'
0000000000000c9e         db  0x00 ; '.'
0000000000000c9f         db  0x00 ; '.'
0000000000000ca0         db  0x60 ; '`'
0000000000000ca1         db  0x9a ; '.'
0000000000000ca2         db  0x20 ; ' '
0000000000000ca3         db  0x00 ; '.'
0000000000000ca4         db  0x00 ; '.'
0000000000000ca5         db  0x00 ; '.'
0000000000000ca6         db  0x00 ; '.'
0000000000000ca7         db  0x00 ; '.'
0000000000000ca8         db  0x08 ; '.'
0000000000000ca9         db  0x00 ; '.'
0000000000000caa         db  0x00 ; '.'
0000000000000cab         db  0x00 ; '.'
0000000000000cac         db  0x00 ; '.'
0000000000000cad         db  0x00 ; '.'
0000000000000cae         db  0x00 ; '.'
0000000000000caf         db  0x00 ; '.'
0000000000000cb0         db  0x53 ; 'S'
0000000000000cb1         db  0x70 ; 'p'
0000000000000cb2         db  0x00 ; '.'
0000000000000cb3         db  0x00 ; '.'
0000000000000cb4         db  0x00 ; '.'
0000000000000cb5         db  0x00 ; '.'
0000000000000cb6         db  0x00 ; '.'
0000000000000cb7         db  0x00 ; '.'
0000000000000cb8         db  0x80 ; '.'
0000000000000cb9         db  0x9a ; '.'
0000000000000cba         db  0x20 ; ' '
0000000000000cbb         db  0x00 ; '.'
0000000000000cbc         db  0x00 ; '.'
0000000000000cbd         db  0x00 ; '.'
0000000000000cbe         db  0x00 ; '.'
0000000000000cbf         db  0x00 ; '.'
0000000000000cc0         db  0x08 ; '.'
0000000000000cc1         db  0x00 ; '.'
0000000000000cc2         db  0x00 ; '.'
0000000000000cc3         db  0x00 ; '.'
0000000000000cc4         db  0x00 ; '.'
0000000000000cc5         db  0x00 ; '.'
0000000000000cc6         db  0x00 ; '.'
0000000000000cc7         db  0x00 ; '.'
0000000000000cc8         db  0x68 ; 'h'
0000000000000cc9         db  0x70 ; 'p'
0000000000000cca         db  0x00 ; '.'
0000000000000ccb         db  0x00 ; '.'
0000000000000ccc         db  0x00 ; '.'
0000000000000ccd         db  0x00 ; '.'
0000000000000cce         db  0x00 ; '.'
0000000000000ccf         db  0x00 ; '.'
0000000000000cd0         db  0xa0 ; '.'
0000000000000cd1         db  0x9a ; '.'
0000000000000cd2         db  0x20 ; ' '
0000000000000cd3         db  0x00 ; '.'
0000000000000cd4         db  0x00 ; '.'
0000000000000cd5         db  0x00 ; '.'
0000000000000cd6         db  0x00 ; '.'
0000000000000cd7         db  0x00 ; '.'
0000000000000cd8         db  0x08 ; '.'
0000000000000cd9         db  0x00 ; '.'
0000000000000cda         db  0x00 ; '.'
0000000000000cdb         db  0x00 ; '.'
0000000000000cdc         db  0x00 ; '.'
0000000000000cdd         db  0x00 ; '.'
0000000000000cde         db  0x00 ; '.'
0000000000000cdf         db  0x00 ; '.'
0000000000000ce0         db  0x74 ; 't'
0000000000000ce1         db  0x70 ; 'p'
0000000000000ce2         db  0x00 ; '.'
0000000000000ce3         db  0x00 ; '.'
0000000000000ce4         db  0x00 ; '.'
0000000000000ce5         db  0x00 ; '.'
0000000000000ce6         db  0x00 ; '.'
0000000000000ce7         db  0x00 ; '.'
0000000000000ce8         db  0xc0 ; '.'
0000000000000ce9         db  0x9a ; '.'
0000000000000cea         db  0x20 ; ' '
0000000000000ceb         db  0x00 ; '.'
0000000000000cec         db  0x00 ; '.'
0000000000000ced         db  0x00 ; '.'
0000000000000cee         db  0x00 ; '.'
0000000000000cef         db  0x00 ; '.'
0000000000000cf0         db  0x08 ; '.'
0000000000000cf1         db  0x00 ; '.'
0000000000000cf2         db  0x00 ; '.'
0000000000000cf3         db  0x00 ; '.'
0000000000000cf4         db  0x00 ; '.'
0000000000000cf5         db  0x00 ; '.'
0000000000000cf6         db  0x00 ; '.'
0000000000000cf7         db  0x00 ; '.'
0000000000000cf8         db  0x82 ; '.'
0000000000000cf9         db  0x70 ; 'p'
0000000000000cfa         db  0x00 ; '.'
0000000000000cfb         db  0x00 ; '.'
0000000000000cfc         db  0x00 ; '.'
0000000000000cfd         db  0x00 ; '.'
0000000000000cfe         db  0x00 ; '.'
0000000000000cff         db  0x00 ; '.'
0000000000000d00         db  0xe0 ; '.'
0000000000000d01         db  0x9a ; '.'
0000000000000d02         db  0x20 ; ' '
0000000000000d03         db  0x00 ; '.'
0000000000000d04         db  0x00 ; '.'
0000000000000d05         db  0x00 ; '.'
0000000000000d06         db  0x00 ; '.'
0000000000000d07         db  0x00 ; '.'
0000000000000d08         db  0x08 ; '.'
0000000000000d09         db  0x00 ; '.'
0000000000000d0a         db  0x00 ; '.'
0000000000000d0b         db  0x00 ; '.'
0000000000000d0c         db  0x00 ; '.'
0000000000000d0d         db  0x00 ; '.'
0000000000000d0e         db  0x00 ; '.'
0000000000000d0f         db  0x00 ; '.'
0000000000000d10         db  0x88 ; '.'
0000000000000d11         db  0x70 ; 'p'
0000000000000d12         db  0x00 ; '.'
0000000000000d13         db  0x00 ; '.'
0000000000000d14         db  0x00 ; '.'
0000000000000d15         db  0x00 ; '.'
0000000000000d16         db  0x00 ; '.'
0000000000000d17         db  0x00 ; '.'
0000000000000d18         db  0x00 ; '.'
0000000000000d19         db  0x9b ; '.'
0000000000000d1a         db  0x20 ; ' '
0000000000000d1b         db  0x00 ; '.'
0000000000000d1c         db  0x00 ; '.'
0000000000000d1d         db  0x00 ; '.'
0000000000000d1e         db  0x00 ; '.'
0000000000000d1f         db  0x00 ; '.'
0000000000000d20         db  0x08 ; '.'
0000000000000d21         db  0x00 ; '.'
0000000000000d22         db  0x00 ; '.'
0000000000000d23         db  0x00 ; '.'
0000000000000d24         db  0x00 ; '.'
0000000000000d25         db  0x00 ; '.'
0000000000000d26         db  0x00 ; '.'
0000000000000d27         db  0x00 ; '.'
0000000000000d28         db  0x8e ; '.'
0000000000000d29         db  0x70 ; 'p'
0000000000000d2a         db  0x00 ; '.'
0000000000000d2b         db  0x00 ; '.'
0000000000000d2c         db  0x00 ; '.'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x00 ; '.'
0000000000000d2f         db  0x00 ; '.'
0000000000000d30         db  0x20 ; ' '
0000000000000d31         db  0x9b ; '.'
0000000000000d32         db  0x20 ; ' '
0000000000000d33         db  0x00 ; '.'
0000000000000d34         db  0x00 ; '.'
0000000000000d35         db  0x00 ; '.'
0000000000000d36         db  0x00 ; '.'
0000000000000d37         db  0x00 ; '.'
0000000000000d38         db  0x08 ; '.'
0000000000000d39         db  0x00 ; '.'
0000000000000d3a         db  0x00 ; '.'
0000000000000d3b         db  0x00 ; '.'
0000000000000d3c         db  0x00 ; '.'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x00 ; '.'
0000000000000d3f         db  0x00 ; '.'
0000000000000d40         db  0x9a ; '.'
0000000000000d41         db  0x70 ; 'p'
0000000000000d42         db  0x00 ; '.'
0000000000000d43         db  0x00 ; '.'
0000000000000d44         db  0x00 ; '.'
0000000000000d45         db  0x00 ; '.'
0000000000000d46         db  0x00 ; '.'
0000000000000d47         db  0x00 ; '.'
0000000000000d48         db  0x40 ; '@'
0000000000000d49         db  0x9b ; '.'
0000000000000d4a         db  0x20 ; ' '
0000000000000d4b         db  0x00 ; '.'
0000000000000d4c         db  0x00 ; '.'
0000000000000d4d         db  0x00 ; '.'
0000000000000d4e         db  0x00 ; '.'
0000000000000d4f         db  0x00 ; '.'
0000000000000d50         db  0x08 ; '.'
0000000000000d51         db  0x00 ; '.'
0000000000000d52         db  0x00 ; '.'
0000000000000d53         db  0x00 ; '.'
0000000000000d54         db  0x00 ; '.'
0000000000000d55         db  0x00 ; '.'
0000000000000d56         db  0x00 ; '.'
0000000000000d57         db  0x00 ; '.'
0000000000000d58         db  0x9f ; '.'
0000000000000d59         db  0x70 ; 'p'
0000000000000d5a         db  0x00 ; '.'
0000000000000d5b         db  0x00 ; '.'
0000000000000d5c         db  0x00 ; '.'
0000000000000d5d         db  0x00 ; '.'
0000000000000d5e         db  0x00 ; '.'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0x60 ; '`'
0000000000000d61         db  0x9b ; '.'
0000000000000d62         db  0x20 ; ' '
0000000000000d63         db  0x00 ; '.'
0000000000000d64         db  0x00 ; '.'
0000000000000d65         db  0x00 ; '.'
0000000000000d66         db  0x00 ; '.'
0000000000000d67         db  0x00 ; '.'
0000000000000d68         db  0x08 ; '.'
0000000000000d69         db  0x00 ; '.'
0000000000000d6a         db  0x00 ; '.'
0000000000000d6b         db  0x00 ; '.'
0000000000000d6c         db  0x00 ; '.'
0000000000000d6d         db  0x00 ; '.'
0000000000000d6e         db  0x00 ; '.'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0xa7 ; '.'
0000000000000d71         db  0x70 ; 'p'
0000000000000d72         db  0x00 ; '.'
0000000000000d73         db  0x00 ; '.'
0000000000000d74         db  0x00 ; '.'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x00 ; '.'
0000000000000d77         db  0x00 ; '.'
0000000000000d78         db  0x80 ; '.'
0000000000000d79         db  0x9b ; '.'
0000000000000d7a         db  0x20 ; ' '
0000000000000d7b         db  0x00 ; '.'
0000000000000d7c         db  0x00 ; '.'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x00 ; '.'
0000000000000d7f         db  0x00 ; '.'
0000000000000d80         db  0x08 ; '.'
0000000000000d81         db  0x00 ; '.'
0000000000000d82         db  0x00 ; '.'
0000000000000d83         db  0x00 ; '.'
0000000000000d84         db  0x00 ; '.'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x00 ; '.'
0000000000000d87         db  0x00 ; '.'
0000000000000d88         db  0xb0 ; '.'
0000000000000d89         db  0x70 ; 'p'
0000000000000d8a         db  0x00 ; '.'
0000000000000d8b         db  0x00 ; '.'
0000000000000d8c         db  0x00 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x00 ; '.'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0xa0 ; '.'
0000000000000d91         db  0x9b ; '.'
0000000000000d92         db  0x20 ; ' '
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x00 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x00 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0x08 ; '.'
0000000000000d99         db  0x00 ; '.'
0000000000000d9a         db  0x00 ; '.'
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x00 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x00 ; '.'
0000000000000d9f         db  0x00 ; '.'
0000000000000da0         db  0xb5 ; '.'
0000000000000da1         db  0x70 ; 'p'
0000000000000da2         db  0x00 ; '.'
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x00 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x00 ; '.'
0000000000000da7         db  0x00 ; '.'
0000000000000da8         db  0xe0 ; '.'
0000000000000da9         db  0x9b ; '.'
0000000000000daa         db  0x20 ; ' '
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x00 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x00 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0x08 ; '.'
0000000000000db1         db  0x00 ; '.'
0000000000000db2         db  0x00 ; '.'
0000000000000db3         db  0x00 ; '.'
0000000000000db4         db  0x00 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x00 ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0x19 ; '.'
0000000000000db9         db  0x76 ; 'v'
0000000000000dba         db  0x00 ; '.'
0000000000000dbb         db  0x00 ; '.'
0000000000000dbc         db  0x00 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x00 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0xe8 ; '.'
0000000000000dc1         db  0x9b ; '.'
0000000000000dc2         db  0x20 ; ' '
0000000000000dc3         db  0x00 ; '.'
0000000000000dc4         db  0x00 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x00 ; '.'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0x08 ; '.'
0000000000000dc9         db  0x00 ; '.'
0000000000000dca         db  0x00 ; '.'
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x00 ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x00 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0x21 ; '!'
0000000000000dd1         db  0x76 ; 'v'
0000000000000dd2         db  0x00 ; '.'
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x00 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x00 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0xf0 ; '.'
0000000000000dd9         db  0x9b ; '.'
0000000000000dda         db  0x20 ; ' '
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x00 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x00 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0x08 ; '.'
0000000000000de1         db  0x00 ; '.'
0000000000000de2         db  0x00 ; '.'
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x00 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x00 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0x27 ; '''
0000000000000de9         db  0x76 ; 'v'
0000000000000dea         db  0x00 ; '.'
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x00 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x00 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0xf8 ; '.'
0000000000000df1         db  0x9b ; '.'
0000000000000df2         db  0x20 ; ' '
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x00 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x00 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0x08 ; '.'
0000000000000df9         db  0x00 ; '.'
0000000000000dfa         db  0x00 ; '.'
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x00 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x00 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0x34 ; '4'
0000000000000e01         db  0x76 ; 'v'
0000000000000e02         db  0x00 ; '.'
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x00 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x00 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0x00 ; '.'
0000000000000e09         db  0x9c ; '.'
0000000000000e0a         db  0x20 ; ' '
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x00 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x00 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0x08 ; '.'
0000000000000e11         db  0x00 ; '.'
0000000000000e12         db  0x00 ; '.'
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x00 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x00 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0x41 ; 'A'
0000000000000e19         db  0x76 ; 'v'
0000000000000e1a         db  0x00 ; '.'
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x00 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x00 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0x08 ; '.'
0000000000000e21         db  0x9c ; '.'
0000000000000e22         db  0x20 ; ' '
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x00 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x00 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0x08 ; '.'
0000000000000e29         db  0x00 ; '.'
0000000000000e2a         db  0x00 ; '.'
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x00 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x00 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0x55 ; 'U'
0000000000000e31         db  0x76 ; 'v'
0000000000000e32         db  0x00 ; '.'
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0x10 ; '.'
0000000000000e39         db  0x9c ; '.'
0000000000000e3a         db  0x20 ; ' '
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x00 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x00 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0x08 ; '.'
0000000000000e41         db  0x00 ; '.'
0000000000000e42         db  0x00 ; '.'
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x00 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0x57 ; 'W'
0000000000000e49         db  0x76 ; 'v'
0000000000000e4a         db  0x00 ; '.'
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x00 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0x18 ; '.'
0000000000000e51         db  0x9c ; '.'
0000000000000e52         db  0x20 ; ' '
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x00 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x00 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0x08 ; '.'
0000000000000e59         db  0x00 ; '.'
0000000000000e5a         db  0x00 ; '.'
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x00 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x00 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0x3a ; ':'
0000000000000e61         db  0x76 ; 'v'
0000000000000e62         db  0x00 ; '.'
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x00 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0x20 ; ' '
0000000000000e69         db  0x9c ; '.'
0000000000000e6a         db  0x20 ; ' '
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x00 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x00 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0x08 ; '.'
0000000000000e71         db  0x00 ; '.'
0000000000000e72         db  0x00 ; '.'
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x00 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0x10 ; '.'
0000000000000e79         db  0x70 ; 'p'
0000000000000e7a         db  0x00 ; '.'
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x00 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0x28 ; '('
0000000000000e81         db  0x9c ; '.'
0000000000000e82         db  0x20 ; ' '
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x00 ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0x08 ; '.'
0000000000000e89         db  0x00 ; '.'
0000000000000e8a         db  0x00 ; '.'
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x00 ; '.'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0x5f ; '_'
0000000000000e91         db  0x76 ; 'v'
0000000000000e92         db  0x00 ; '.'
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'
0000000000000e98         db  0x08 ; '.'
0000000000000e99         db  0xa0 ; '.'
0000000000000e9a         db  0x20 ; ' '
0000000000000e9b         db  0x00 ; '.'
0000000000000e9c         db  0x00 ; '.'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x00 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0x08 ; '.'
0000000000000ea1         db  0x00 ; '.'
0000000000000ea2         db  0x00 ; '.'
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x00 ; '.'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0x08 ; '.'
0000000000000ea9         db  0xa0 ; '.'
0000000000000eaa         db  0x20 ; ' '
0000000000000eab         db  0x00 ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x00 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0x18 ; '.'
0000000000000eb1         db  0xa0 ; '.'
0000000000000eb2         db  0x20 ; ' '
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x00 ; '.'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0x08 ; '.'
0000000000000eb9         db  0x00 ; '.'
0000000000000eba         db  0x00 ; '.'
0000000000000ebb         db  0x00 ; '.'
0000000000000ebc         db  0x00 ; '.'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x00 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0xf8 ; '.'
0000000000000ec1         db  0x74 ; 't'
0000000000000ec2         db  0x00 ; '.'
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x00 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0x80 ; '.'
0000000000000ec9         db  0xa0 ; '.'
0000000000000eca         db  0x20 ; ' '
0000000000000ecb         db  0x00 ; '.'
0000000000000ecc         db  0x00 ; '.'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0x08 ; '.'
0000000000000ed1         db  0x00 ; '.'
0000000000000ed2         db  0x00 ; '.'
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x00 ; '.'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0x90 ; '.'
0000000000000ed9         db  0xa0 ; '.'
0000000000000eda         db  0x20 ; ' '
0000000000000edb         db  0x00 ; '.'
0000000000000edc         db  0x00 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0x98 ; '.'
0000000000000ee1         db  0xa0 ; '.'
0000000000000ee2         db  0x20 ; ' '
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x00 ; '.'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0x08 ; '.'
0000000000000ee9         db  0x00 ; '.'
0000000000000eea         db  0x00 ; '.'
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x00 ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x00 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0x20 ; ' '
0000000000000ef1         db  0xa1 ; '.'
0000000000000ef2         db  0x20 ; ' '
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0xc0 ; '.'
0000000000000ef9         db  0x9f ; '.'
0000000000000efa         db  0x20 ; ' '
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x00 ; '.'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0x06 ; '.'
0000000000000f01         db  0x00 ; '.'
0000000000000f02         db  0x00 ; '.'
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x05 ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0x00 ; '.'
0000000000000f09         db  0x00 ; '.'
0000000000000f0a         db  0x00 ; '.'
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x00 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0xc8 ; '.'
0000000000000f11         db  0x9f ; '.'
0000000000000f12         db  0x20 ; ' '
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x00 ; '.'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0x06 ; '.'
0000000000000f19         db  0x00 ; '.'
0000000000000f1a         db  0x00 ; '.'
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x1a ; '.'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0x00 ; '.'
0000000000000f21         db  0x00 ; '.'
0000000000000f22         db  0x00 ; '.'
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x00 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0xd0 ; '.'
0000000000000f29         db  0x9f ; '.'
0000000000000f2a         db  0x20 ; ' '
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x00 ; '.'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0x06 ; '.'
0000000000000f31         db  0x00 ; '.'
0000000000000f32         db  0x00 ; '.'
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x1f ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0x00 ; '.'
0000000000000f39         db  0x00 ; '.'
0000000000000f3a         db  0x00 ; '.'
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x00 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0xd8 ; '.'
0000000000000f41         db  0x9f ; '.'
0000000000000f42         db  0x20 ; ' '
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x00 ; '.'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0x06 ; '.'
0000000000000f49         db  0x00 ; '.'
0000000000000f4a         db  0x00 ; '.'
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x31 ; '1'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0x00 ; '.'
0000000000000f51         db  0x00 ; '.'
0000000000000f52         db  0x00 ; '.'
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0xe0 ; '.'
0000000000000f59         db  0x9f ; '.'
0000000000000f5a         db  0x20 ; ' '
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x00 ; '.'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0x06 ; '.'
0000000000000f61         db  0x00 ; '.'
0000000000000f62         db  0x00 ; '.'
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x34 ; '4'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0x00 ; '.'
0000000000000f69         db  0x00 ; '.'
0000000000000f6a         db  0x00 ; '.'
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0xa0 ; '.'
0000000000000f71         db  0xa0 ; '.'
0000000000000f72         db  0x20 ; ' '
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x00 ; '.'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0x05 ; '.'
0000000000000f79         db  0x00 ; '.'
0000000000000f7a         db  0x00 ; '.'
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x37 ; '7'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0x00 ; '.'
0000000000000f81         db  0x00 ; '.'
0000000000000f82         db  0x00 ; '.'
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x00 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0xa8 ; '.'
0000000000000f89         db  0xa0 ; '.'
0000000000000f8a         db  0x20 ; ' '
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x00 ; '.'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0x05 ; '.'
0000000000000f91         db  0x00 ; '.'
0000000000000f92         db  0x00 ; '.'
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x36 ; '6'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0x00 ; '.'
0000000000000f99         db  0x00 ; '.'
0000000000000f9a         db  0x00 ; '.'
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'
0000000000000fa0         db  0xb0 ; '.'
0000000000000fa1         db  0xa0 ; '.'
0000000000000fa2         db  0x20 ; ' '
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x00 ; '.'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0x05 ; '.'
0000000000000fa9         db  0x00 ; '.'
0000000000000faa         db  0x00 ; '.'
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x3c ; '<'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0x00 ; '.'
0000000000000fb1         db  0x00 ; '.'
0000000000000fb2         db  0x00 ; '.'
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x00 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0xb8 ; '.'
0000000000000fb9         db  0xa0 ; '.'
0000000000000fba         db  0x20 ; ' '
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x00 ; '.'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0x05 ; '.'
0000000000000fc1         db  0x00 ; '.'
0000000000000fc2         db  0x00 ; '.'
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x3d ; '='
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0x00 ; '.'
0000000000000fc9         db  0x00 ; '.'
0000000000000fca         db  0x00 ; '.'
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0xc0 ; '.'
0000000000000fd1         db  0xa0 ; '.'
0000000000000fd2         db  0x20 ; ' '
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x00 ; '.'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x05 ; '.'
0000000000000fd9         db  0x00 ; '.'
0000000000000fda         db  0x00 ; '.'
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x39 ; '9'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0x00 ; '.'
0000000000000fe1         db  0x00 ; '.'
0000000000000fe2         db  0x00 ; '.'
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x00 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0xe0 ; '.'
0000000000000fe9         db  0xa0 ; '.'
0000000000000fea         db  0x20 ; ' '
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x00 ; '.'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x05 ; '.'
0000000000000ff1         db  0x00 ; '.'
0000000000000ff2         db  0x00 ; '.'
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x3b ; ';'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0x00 ; '.'
0000000000000ff9         db  0x00 ; '.'
0000000000000ffa         db  0x00 ; '.'
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'                                         ; DATA XREF=canonicalize_filename_mode+124


        ; Section .rela.plt
        ; Range: [0x1000; 0x1480[ (1152 bytes)
        ; File offset : [4096; 5248[ (1152 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000001000         db  0x40 ; '@'                                         ; DATA XREF=canonicalize_filename_mode+343, canonicalize_filename_mode+350, sub_2a7a+6, sub_2a7a+41, sub_2a7a+69, sub_2a7a+76
0000000000001001         db  0x9e ; '.'
0000000000001002         db  0x20 ; ' '
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x00 ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x07 ; '.'
0000000000001009         db  0x00 ; '.'
000000000000100a         db  0x00 ; '.'
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x01 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0x00 ; '.'
0000000000001011         db  0x00 ; '.'
0000000000001012         db  0x00 ; '.'
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0x48 ; 'H'
0000000000001019         db  0x9e ; '.'
000000000000101a         db  0x20 ; ' '
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x00 ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x07 ; '.'
0000000000001021         db  0x00 ; '.'
0000000000001022         db  0x00 ; '.'
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x02 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x00 ; '.'
0000000000001029         db  0x00 ; '.'
000000000000102a         db  0x00 ; '.'
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x00 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0x50 ; 'P'
0000000000001031         db  0x9e ; '.'
0000000000001032         db  0x20 ; ' '
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x00 ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x07 ; '.'
0000000000001039         db  0x00 ; '.'
000000000000103a         db  0x00 ; '.'
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x03 ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0x00 ; '.'
0000000000001041         db  0x00 ; '.'
0000000000001042         db  0x00 ; '.'
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x00 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0x58 ; 'X'
0000000000001049         db  0x9e ; '.'
000000000000104a         db  0x20 ; ' '
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x00 ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x07 ; '.'
0000000000001051         db  0x00 ; '.'
0000000000001052         db  0x00 ; '.'
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x04 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0x00 ; '.'
0000000000001059         db  0x00 ; '.'
000000000000105a         db  0x00 ; '.'
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0x60 ; '`'
0000000000001061         db  0x9e ; '.'
0000000000001062         db  0x20 ; ' '
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x00 ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x07 ; '.'
0000000000001069         db  0x00 ; '.'
000000000000106a         db  0x00 ; '.'
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x06 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0x00 ; '.'
0000000000001071         db  0x00 ; '.'
0000000000001072         db  0x00 ; '.'
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x00 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0x68 ; 'h'
0000000000001079         db  0x9e ; '.'
000000000000107a         db  0x20 ; ' '
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x00 ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x07 ; '.'
0000000000001081         db  0x00 ; '.'
0000000000001082         db  0x00 ; '.'
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x07 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0x00 ; '.'
0000000000001089         db  0x00 ; '.'
000000000000108a         db  0x00 ; '.'
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x00 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0x70 ; 'p'
0000000000001091         db  0x9e ; '.'
0000000000001092         db  0x20 ; ' '
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x00 ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x07 ; '.'
0000000000001099         db  0x00 ; '.'
000000000000109a         db  0x00 ; '.'
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x08 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0x00 ; '.'
00000000000010a1         db  0x00 ; '.'
00000000000010a2         db  0x00 ; '.'
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x00 ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0x78 ; 'x'
00000000000010a9         db  0x9e ; '.'
00000000000010aa         db  0x20 ; ' '
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x00 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x07 ; '.'
00000000000010b1         db  0x00 ; '.'
00000000000010b2         db  0x00 ; '.'
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x09 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0x00 ; '.'
00000000000010b9         db  0x00 ; '.'
00000000000010ba         db  0x00 ; '.'
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x00 ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0x80 ; '.'
00000000000010c1         db  0x9e ; '.'
00000000000010c2         db  0x20 ; ' '
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x00 ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x07 ; '.'
00000000000010c9         db  0x00 ; '.'
00000000000010ca         db  0x00 ; '.'
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x0a ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0x00 ; '.'
00000000000010d1         db  0x00 ; '.'
00000000000010d2         db  0x00 ; '.'
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x00 ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0x88 ; '.'
00000000000010d9         db  0x9e ; '.'
00000000000010da         db  0x20 ; ' '
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x00 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x07 ; '.'
00000000000010e1         db  0x00 ; '.'
00000000000010e2         db  0x00 ; '.'
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x0b ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0x00 ; '.'
00000000000010e9         db  0x00 ; '.'
00000000000010ea         db  0x00 ; '.'
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x00 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0x90 ; '.'
00000000000010f1         db  0x9e ; '.'
00000000000010f2         db  0x20 ; ' '
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x00 ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0x07 ; '.'
00000000000010f9         db  0x00 ; '.'
00000000000010fa         db  0x00 ; '.'
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x0c ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0x00 ; '.'
0000000000001101         db  0x00 ; '.'
0000000000001102         db  0x00 ; '.'
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x00 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0x98 ; '.'
0000000000001109         db  0x9e ; '.'
000000000000110a         db  0x20 ; ' '
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x00 ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0x07 ; '.'
0000000000001111         db  0x00 ; '.'
0000000000001112         db  0x00 ; '.'
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x0d ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0x00 ; '.'
0000000000001119         db  0x00 ; '.'
000000000000111a         db  0x00 ; '.'
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x00 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0xa0 ; '.'
0000000000001121         db  0x9e ; '.'
0000000000001122         db  0x20 ; ' '
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x00 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0x07 ; '.'
0000000000001129         db  0x00 ; '.'
000000000000112a         db  0x00 ; '.'
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x0e ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0x00 ; '.'
0000000000001131         db  0x00 ; '.'
0000000000001132         db  0x00 ; '.'
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x00 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0xa8 ; '.'
0000000000001139         db  0x9e ; '.'
000000000000113a         db  0x20 ; ' '
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x00 ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0x07 ; '.'
0000000000001141         db  0x00 ; '.'
0000000000001142         db  0x00 ; '.'
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x0f ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0x00 ; '.'
0000000000001149         db  0x00 ; '.'
000000000000114a         db  0x00 ; '.'
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x00 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0xb0 ; '.'
0000000000001151         db  0x9e ; '.'
0000000000001152         db  0x20 ; ' '
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x00 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0x07 ; '.'
0000000000001159         db  0x00 ; '.'
000000000000115a         db  0x00 ; '.'
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x10 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0x00 ; '.'
0000000000001161         db  0x00 ; '.'
0000000000001162         db  0x00 ; '.'
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x00 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0xb8 ; '.'
0000000000001169         db  0x9e ; '.'
000000000000116a         db  0x20 ; ' '
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x00 ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0x07 ; '.'
0000000000001171         db  0x00 ; '.'
0000000000001172         db  0x00 ; '.'
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x11 ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0x00 ; '.'
0000000000001179         db  0x00 ; '.'
000000000000117a         db  0x00 ; '.'
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x00 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0xc0 ; '.'
0000000000001181         db  0x9e ; '.'
0000000000001182         db  0x20 ; ' '
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x00 ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x07 ; '.'
0000000000001189         db  0x00 ; '.'
000000000000118a         db  0x00 ; '.'
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x12 ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0x00 ; '.'
0000000000001191         db  0x00 ; '.'
0000000000001192         db  0x00 ; '.'
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x00 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0xc8 ; '.'
0000000000001199         db  0x9e ; '.'
000000000000119a         db  0x20 ; ' '
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x00 ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x07 ; '.'
00000000000011a1         db  0x00 ; '.'
00000000000011a2         db  0x00 ; '.'
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x13 ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0x00 ; '.'
00000000000011a9         db  0x00 ; '.'
00000000000011aa         db  0x00 ; '.'
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x00 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0xd0 ; '.'
00000000000011b1         db  0x9e ; '.'
00000000000011b2         db  0x20 ; ' '
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x00 ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x07 ; '.'
00000000000011b9         db  0x00 ; '.'
00000000000011ba         db  0x00 ; '.'
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x14 ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0x00 ; '.'
00000000000011c1         db  0x00 ; '.'
00000000000011c2         db  0x00 ; '.'
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x00 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0xd8 ; '.'
00000000000011c9         db  0x9e ; '.'
00000000000011ca         db  0x20 ; ' '
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x00 ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x07 ; '.'
00000000000011d1         db  0x00 ; '.'
00000000000011d2         db  0x00 ; '.'
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x15 ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0x00 ; '.'
00000000000011d9         db  0x00 ; '.'
00000000000011da         db  0x00 ; '.'
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x00 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0xe0 ; '.'
00000000000011e1         db  0x9e ; '.'
00000000000011e2         db  0x20 ; ' '
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x00 ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x07 ; '.'
00000000000011e9         db  0x00 ; '.'
00000000000011ea         db  0x00 ; '.'
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x16 ; '.'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0x00 ; '.'
00000000000011f1         db  0x00 ; '.'
00000000000011f2         db  0x00 ; '.'
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x00 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0xe8 ; '.'
00000000000011f9         db  0x9e ; '.'
00000000000011fa         db  0x20 ; ' '
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x00 ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x07 ; '.'
0000000000001201         db  0x00 ; '.'
0000000000001202         db  0x00 ; '.'
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x17 ; '.'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0x00 ; '.'
0000000000001209         db  0x00 ; '.'
000000000000120a         db  0x00 ; '.'
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x00 ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0xf0 ; '.'
0000000000001211         db  0x9e ; '.'
0000000000001212         db  0x20 ; ' '
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x00 ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x07 ; '.'
0000000000001219         db  0x00 ; '.'
000000000000121a         db  0x00 ; '.'
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x18 ; '.'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0x00 ; '.'
0000000000001221         db  0x00 ; '.'
0000000000001222         db  0x00 ; '.'
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x00 ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0xf8 ; '.'
0000000000001229         db  0x9e ; '.'
000000000000122a         db  0x20 ; ' '
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x00 ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x07 ; '.'
0000000000001231         db  0x00 ; '.'
0000000000001232         db  0x00 ; '.'
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x19 ; '.'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0x00 ; '.'
0000000000001239         db  0x00 ; '.'
000000000000123a         db  0x00 ; '.'
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x00 ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x00 ; '.'
0000000000001241         db  0x9f ; '.'
0000000000001242         db  0x20 ; ' '
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x00 ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x07 ; '.'
0000000000001249         db  0x00 ; '.'
000000000000124a         db  0x00 ; '.'
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x1b ; '.'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0x00 ; '.'
0000000000001251         db  0x00 ; '.'
0000000000001252         db  0x00 ; '.'
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x00 ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0x08 ; '.'
0000000000001259         db  0x9f ; '.'
000000000000125a         db  0x20 ; ' '
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x00 ; '.'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x07 ; '.'
0000000000001261         db  0x00 ; '.'
0000000000001262         db  0x00 ; '.'
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x1c ; '.'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x00 ; '.'
0000000000001269         db  0x00 ; '.'
000000000000126a         db  0x00 ; '.'
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x00 ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x10 ; '.'
0000000000001271         db  0x9f ; '.'
0000000000001272         db  0x20 ; ' '
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x00 ; '.'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x07 ; '.'
0000000000001279         db  0x00 ; '.'
000000000000127a         db  0x00 ; '.'
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x1d ; '.'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x00 ; '.'
0000000000001281         db  0x00 ; '.'
0000000000001282         db  0x00 ; '.'
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x00 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0x18 ; '.'
0000000000001289         db  0x9f ; '.'
000000000000128a         db  0x20 ; ' '
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x00 ; '.'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x07 ; '.'
0000000000001291         db  0x00 ; '.'
0000000000001292         db  0x00 ; '.'
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x1e ; '.'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x00 ; '.'
0000000000001299         db  0x00 ; '.'
000000000000129a         db  0x00 ; '.'
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x00 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0x20 ; ' '
00000000000012a1         db  0x9f ; '.'
00000000000012a2         db  0x20 ; ' '
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x00 ; '.'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x07 ; '.'
00000000000012a9         db  0x00 ; '.'
00000000000012aa         db  0x00 ; '.'
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x20 ; ' '
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x00 ; '.'
00000000000012b1         db  0x00 ; '.'
00000000000012b2         db  0x00 ; '.'
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x00 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0x28 ; '('
00000000000012b9         db  0x9f ; '.'
00000000000012ba         db  0x20 ; ' '
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x00 ; '.'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x07 ; '.'
00000000000012c1         db  0x00 ; '.'
00000000000012c2         db  0x00 ; '.'
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x21 ; '!'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0x00 ; '.'
00000000000012c9         db  0x00 ; '.'
00000000000012ca         db  0x00 ; '.'
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x00 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0x30 ; '0'
00000000000012d1         db  0x9f ; '.'
00000000000012d2         db  0x20 ; ' '
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x00 ; '.'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x07 ; '.'
00000000000012d9         db  0x00 ; '.'
00000000000012da         db  0x00 ; '.'
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x22 ; '"'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0x00 ; '.'
00000000000012e1         db  0x00 ; '.'
00000000000012e2         db  0x00 ; '.'
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x00 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0x38 ; '8'
00000000000012e9         db  0x9f ; '.'
00000000000012ea         db  0x20 ; ' '
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x00 ; '.'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x07 ; '.'
00000000000012f1         db  0x00 ; '.'
00000000000012f2         db  0x00 ; '.'
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x23 ; '#'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x00 ; '.'
00000000000012f9         db  0x00 ; '.'
00000000000012fa         db  0x00 ; '.'
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x00 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0x40 ; '@'
0000000000001301         db  0x9f ; '.'
0000000000001302         db  0x20 ; ' '
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x00 ; '.'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x07 ; '.'
0000000000001309         db  0x00 ; '.'
000000000000130a         db  0x00 ; '.'
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x24 ; '$'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0x00 ; '.'
0000000000001311         db  0x00 ; '.'
0000000000001312         db  0x00 ; '.'
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x00 ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0x48 ; 'H'
0000000000001319         db  0x9f ; '.'
000000000000131a         db  0x20 ; ' '
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x00 ; '.'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x07 ; '.'
0000000000001321         db  0x00 ; '.'
0000000000001322         db  0x00 ; '.'
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x25 ; '%'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0x00 ; '.'
0000000000001329         db  0x00 ; '.'
000000000000132a         db  0x00 ; '.'
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x00 ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0x50 ; 'P'
0000000000001331         db  0x9f ; '.'
0000000000001332         db  0x20 ; ' '
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x00 ; '.'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x07 ; '.'
0000000000001339         db  0x00 ; '.'
000000000000133a         db  0x00 ; '.'
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x26 ; '&'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0x00 ; '.'
0000000000001341         db  0x00 ; '.'
0000000000001342         db  0x00 ; '.'
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x00 ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0x58 ; 'X'
0000000000001349         db  0x9f ; '.'
000000000000134a         db  0x20 ; ' '
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x00 ; '.'
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x07 ; '.'
0000000000001351         db  0x00 ; '.'
0000000000001352         db  0x00 ; '.'
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x27 ; '''
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0x00 ; '.'
0000000000001359         db  0x00 ; '.'
000000000000135a         db  0x00 ; '.'
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x00 ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0x60 ; '`'
0000000000001361         db  0x9f ; '.'
0000000000001362         db  0x20 ; ' '
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x00 ; '.'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0x07 ; '.'
0000000000001369         db  0x00 ; '.'
000000000000136a         db  0x00 ; '.'
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x28 ; '('
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0x00 ; '.'
0000000000001371         db  0x00 ; '.'
0000000000001372         db  0x00 ; '.'
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x00 ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x68 ; 'h'
0000000000001379         db  0x9f ; '.'
000000000000137a         db  0x20 ; ' '
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x00 ; '.'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0x07 ; '.'
0000000000001381         db  0x00 ; '.'
0000000000001382         db  0x00 ; '.'
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x29 ; ')'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0x00 ; '.'
0000000000001389         db  0x00 ; '.'
000000000000138a         db  0x00 ; '.'
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x00 ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x70 ; 'p'
0000000000001391         db  0x9f ; '.'
0000000000001392         db  0x20 ; ' '
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x00 ; '.'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0x07 ; '.'
0000000000001399         db  0x00 ; '.'
000000000000139a         db  0x00 ; '.'
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x2a ; '*'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0x00 ; '.'
00000000000013a1         db  0x00 ; '.'
00000000000013a2         db  0x00 ; '.'
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x00 ; '.'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x78 ; 'x'
00000000000013a9         db  0x9f ; '.'
00000000000013aa         db  0x20 ; ' '
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x00 ; '.'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x07 ; '.'
00000000000013b1         db  0x00 ; '.'
00000000000013b2         db  0x00 ; '.'
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x2b ; '+'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'
00000000000013b8         db  0x00 ; '.'
00000000000013b9         db  0x00 ; '.'
00000000000013ba         db  0x00 ; '.'
00000000000013bb         db  0x00 ; '.'
00000000000013bc         db  0x00 ; '.'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x00 ; '.'
00000000000013bf         db  0x00 ; '.'
00000000000013c0         db  0x80 ; '.'
00000000000013c1         db  0x9f ; '.'
00000000000013c2         db  0x20 ; ' '
00000000000013c3         db  0x00 ; '.'
00000000000013c4         db  0x00 ; '.'
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x00 ; '.'
00000000000013c7         db  0x00 ; '.'
00000000000013c8         db  0x07 ; '.'
00000000000013c9         db  0x00 ; '.'
00000000000013ca         db  0x00 ; '.'
00000000000013cb         db  0x00 ; '.'
00000000000013cc         db  0x2c ; ','
00000000000013cd         db  0x00 ; '.'
00000000000013ce         db  0x00 ; '.'
00000000000013cf         db  0x00 ; '.'
00000000000013d0         db  0x00 ; '.'
00000000000013d1         db  0x00 ; '.'
00000000000013d2         db  0x00 ; '.'
00000000000013d3         db  0x00 ; '.'
00000000000013d4         db  0x00 ; '.'
00000000000013d5         db  0x00 ; '.'
00000000000013d6         db  0x00 ; '.'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0x88 ; '.'
00000000000013d9         db  0x9f ; '.'
00000000000013da         db  0x20 ; ' '
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x00 ; '.'
00000000000013dd         db  0x00 ; '.'
00000000000013de         db  0x00 ; '.'
00000000000013df         db  0x00 ; '.'
00000000000013e0         db  0x07 ; '.'
00000000000013e1         db  0x00 ; '.'
00000000000013e2         db  0x00 ; '.'
00000000000013e3         db  0x00 ; '.'
00000000000013e4         db  0x2d ; '-'
00000000000013e5         db  0x00 ; '.'
00000000000013e6         db  0x00 ; '.'
00000000000013e7         db  0x00 ; '.'
00000000000013e8         db  0x00 ; '.'
00000000000013e9         db  0x00 ; '.'
00000000000013ea         db  0x00 ; '.'
00000000000013eb         db  0x00 ; '.'
00000000000013ec         db  0x00 ; '.'
00000000000013ed         db  0x00 ; '.'
00000000000013ee         db  0x00 ; '.'
00000000000013ef         db  0x00 ; '.'
00000000000013f0         db  0x90 ; '.'
00000000000013f1         db  0x9f ; '.'
00000000000013f2         db  0x20 ; ' '
00000000000013f3         db  0x00 ; '.'
00000000000013f4         db  0x00 ; '.'
00000000000013f5         db  0x00 ; '.'
00000000000013f6         db  0x00 ; '.'
00000000000013f7         db  0x00 ; '.'
00000000000013f8         db  0x07 ; '.'
00000000000013f9         db  0x00 ; '.'
00000000000013fa         db  0x00 ; '.'
00000000000013fb         db  0x00 ; '.'
00000000000013fc         db  0x2e ; '.'
00000000000013fd         db  0x00 ; '.'
00000000000013fe         db  0x00 ; '.'
00000000000013ff         db  0x00 ; '.'
0000000000001400         db  0x00 ; '.'
0000000000001401         db  0x00 ; '.'
0000000000001402         db  0x00 ; '.'
0000000000001403         db  0x00 ; '.'
0000000000001404         db  0x00 ; '.'
0000000000001405         db  0x00 ; '.'
0000000000001406         db  0x00 ; '.'
0000000000001407         db  0x00 ; '.'
0000000000001408         db  0x98 ; '.'
0000000000001409         db  0x9f ; '.'
000000000000140a         db  0x20 ; ' '
000000000000140b         db  0x00 ; '.'
000000000000140c         db  0x00 ; '.'
000000000000140d         db  0x00 ; '.'
000000000000140e         db  0x00 ; '.'
000000000000140f         db  0x00 ; '.'
0000000000001410         db  0x07 ; '.'
0000000000001411         db  0x00 ; '.'
0000000000001412         db  0x00 ; '.'
0000000000001413         db  0x00 ; '.'
0000000000001414         db  0x2f ; '/'
0000000000001415         db  0x00 ; '.'
0000000000001416         db  0x00 ; '.'
0000000000001417         db  0x00 ; '.'
0000000000001418         db  0x00 ; '.'
0000000000001419         db  0x00 ; '.'
000000000000141a         db  0x00 ; '.'
000000000000141b         db  0x00 ; '.'
000000000000141c         db  0x00 ; '.'
000000000000141d         db  0x00 ; '.'
000000000000141e         db  0x00 ; '.'
000000000000141f         db  0x00 ; '.'
0000000000001420         db  0xa0 ; '.'
0000000000001421         db  0x9f ; '.'
0000000000001422         db  0x20 ; ' '
0000000000001423         db  0x00 ; '.'
0000000000001424         db  0x00 ; '.'
0000000000001425         db  0x00 ; '.'
0000000000001426         db  0x00 ; '.'
0000000000001427         db  0x00 ; '.'
0000000000001428         db  0x07 ; '.'
0000000000001429         db  0x00 ; '.'
000000000000142a         db  0x00 ; '.'
000000000000142b         db  0x00 ; '.'
000000000000142c         db  0x30 ; '0'
000000000000142d         db  0x00 ; '.'
000000000000142e         db  0x00 ; '.'
000000000000142f         db  0x00 ; '.'
0000000000001430         db  0x00 ; '.'
0000000000001431         db  0x00 ; '.'
0000000000001432         db  0x00 ; '.'
0000000000001433         db  0x00 ; '.'
0000000000001434         db  0x00 ; '.'
0000000000001435         db  0x00 ; '.'
0000000000001436         db  0x00 ; '.'
0000000000001437         db  0x00 ; '.'
0000000000001438         db  0xa8 ; '.'
0000000000001439         db  0x9f ; '.'
000000000000143a         db  0x20 ; ' '
000000000000143b         db  0x00 ; '.'
000000000000143c         db  0x00 ; '.'
000000000000143d         db  0x00 ; '.'
000000000000143e         db  0x00 ; '.'
000000000000143f         db  0x00 ; '.'
0000000000001440         db  0x07 ; '.'
0000000000001441         db  0x00 ; '.'
0000000000001442         db  0x00 ; '.'
0000000000001443         db  0x00 ; '.'
0000000000001444         db  0x32 ; '2'
0000000000001445         db  0x00 ; '.'
0000000000001446         db  0x00 ; '.'
0000000000001447         db  0x00 ; '.'
0000000000001448         db  0x00 ; '.'
0000000000001449         db  0x00 ; '.'
000000000000144a         db  0x00 ; '.'
000000000000144b         db  0x00 ; '.'
000000000000144c         db  0x00 ; '.'
000000000000144d         db  0x00 ; '.'
000000000000144e         db  0x00 ; '.'
000000000000144f         db  0x00 ; '.'
0000000000001450         db  0xb0 ; '.'
0000000000001451         db  0x9f ; '.'
0000000000001452         db  0x20 ; ' '
0000000000001453         db  0x00 ; '.'
0000000000001454         db  0x00 ; '.'
0000000000001455         db  0x00 ; '.'
0000000000001456         db  0x00 ; '.'
0000000000001457         db  0x00 ; '.'
0000000000001458         db  0x07 ; '.'
0000000000001459         db  0x00 ; '.'
000000000000145a         db  0x00 ; '.'
000000000000145b         db  0x00 ; '.'
000000000000145c         db  0x33 ; '3'
000000000000145d         db  0x00 ; '.'
000000000000145e         db  0x00 ; '.'
000000000000145f         db  0x00 ; '.'
0000000000001460         db  0x00 ; '.'
0000000000001461         db  0x00 ; '.'
0000000000001462         db  0x00 ; '.'
0000000000001463         db  0x00 ; '.'
0000000000001464         db  0x00 ; '.'
0000000000001465         db  0x00 ; '.'
0000000000001466         db  0x00 ; '.'
0000000000001467         db  0x00 ; '.'
0000000000001468         db  0xb8 ; '.'
0000000000001469         db  0x9f ; '.'
000000000000146a         db  0x20 ; ' '
000000000000146b         db  0x00 ; '.'
000000000000146c         db  0x00 ; '.'
000000000000146d         db  0x00 ; '.'
000000000000146e         db  0x00 ; '.'
000000000000146f         db  0x00 ; '.'
0000000000001470         db  0x07 ; '.'
0000000000001471         db  0x00 ; '.'
0000000000001472         db  0x00 ; '.'
0000000000001473         db  0x00 ; '.'
0000000000001474         db  0x35 ; '5'
0000000000001475         db  0x00 ; '.'
0000000000001476         db  0x00 ; '.'
0000000000001477         db  0x00 ; '.'
0000000000001478         db  0x00 ; '.'
0000000000001479         db  0x00 ; '.'
000000000000147a         db  0x00 ; '.'
000000000000147b         db  0x00 ; '.'
000000000000147c         db  0x00 ; '.'
000000000000147d         db  0x00 ; '.'
000000000000147e         db  0x00 ; '.'
000000000000147f         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x1480; 0x1497[ (23 bytes)
        ; File offset : [5248; 5271[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
0000000000001480         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
0000000000001484         mov        rax, qword [qword_209fd0]                   ; qword_209fd0
000000000000148b         test       rax, rax
000000000000148e         je         loc_1492

0000000000001490         call       rax

                     loc_1492:
0000000000001492         add        rsp, 0x8                                    ; CODE XREF=_init+14
0000000000001496         ret
                        ; endp
0000000000001497         db  0x00 ; '.'
0000000000001498         db  0x00 ; '.'
0000000000001499         db  0x00 ; '.'
000000000000149a         db  0x00 ; '.'
000000000000149b         db  0x00 ; '.'
000000000000149c         db  0x00 ; '.'
000000000000149d         db  0x00 ; '.'
000000000000149e         db  0x00 ; '.'
000000000000149f         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x14a0; 0x17b0[ (784 bytes)
        ; File offset : [5280; 6064[ (784 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_14a0:
00000000000014a0         push       qword [qword_209e30]                        ; Begin of unwind block (FDE at 0x8294), qword_209e30, CODE XREF=sub_14b6+5
00000000000014a6         jmp        qword [qword_209e30+8]                      ; 0x209e38
                        ; endp
00000000000014ac         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
00000000000014b0         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=main+741, main+1039, realpath_canon+52, canonicalize_filename_mode+519, canonicalize_filename_mode+714, canonicalize_filename_mode+722, canonicalize_filename_mode+889, canonicalize_filename_mode+897, canonicalize_filename_mode+1244, hash_initialize+245, hash_free+132
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14b6:
00000000000014b6         push       0x0
00000000000014bb         jmp        loc_14a0


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
00000000000014c0         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=safe_hasher+29, hash_get_first+60, hash_rehash+569, hash_insert_if_absent+477, set_program_name+154, sub_49e0+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14c6:
00000000000014c6         push       0x1
00000000000014cb         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
00000000000014d0         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=main+826, main+1142, main+1189, isdir+135, canonicalize_filename_mode+635, canonicalize_filename_mode+867, sub_2a7a+118, sub_2a7a+136, sub_2a7a+182, sub_2a7a+253, close_stdout+22
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14d6:
00000000000014d6         push       0x2
00000000000014db         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
00000000000014e0         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+556, usage+749
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14e6:
00000000000014e6         push       0x3
00000000000014eb         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
00000000000014f0         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14f6:
00000000000014f6         push       0x4
00000000000014fb         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
0000000000001500         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1506:
0000000000001506         push       0x5
000000000000150b         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_readlink:        // readlink
0000000000001510         jmp        qword [readlink@GOT]                        ; readlink, readlink@GOT, CODE XREF=areadlink_with_size+89
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1516:
0000000000001516         push       0x6
000000000000151b         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
0000000000001520         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+89
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1526:
0000000000001526         push       0x7
000000000000152b         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
0000000000001530         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1536:
0000000000001536         push       0x8
000000000000153b         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
0000000000001540         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+77
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1546:
0000000000001546         push       0x9
000000000000154b         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
0000000000001550         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+1095, isdir+127, usage+56, usage+102, usage+146, usage+183, usage+220, usage+257, usage+490, usage+583, usage+652
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1556:
0000000000001556         push       0xa
000000000000155b         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
0000000000001560         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1566:
0000000000001566         push       0xb
000000000000156b         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
0000000000001570         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=buffer_or_output+25, canonicalize_filename_mode+119, canonicalize_filename_mode+1088, canonicalize_filename_mode+1104, quotearg_buffer_restyled+343, sub_49e0+411, sub_49e0+1742, xstrdup+4, base_len+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1576:
0000000000001576         push       0xc
000000000000157b         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___lxstat:        // __lxstat
0000000000001580         jmp        qword [__lxstat@GOT]                        ; __lxstat, __lxstat@GOT, CODE XREF=canonicalize_filename_mode+800
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1586:
0000000000001586         push       0xd
000000000000158b         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
0000000000001590         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=isdir+160, sub_2a7a+279, seen_file+81, hash_rehash+554, hash_insert_if_absent+639, hash_insert+84, hash_delete+510, sub_49e0+2739, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1596:
0000000000001596         push       0xe
000000000000159b         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
00000000000015a0         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+131
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15a6:
00000000000015a6         push       0xf
00000000000015ab         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
00000000000015b0         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15b6:
00000000000015b6         push       0x10
00000000000015bb         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fxstatat:        // __fxstatat
00000000000015c0         jmp        qword [__fxstatat@GOT]                      ; __fxstatat, __fxstatat@GOT, CODE XREF=same_nameat.part.0+71, same_nameat.part.0+127
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15c6:
00000000000015c6         push       0x11
00000000000015cb         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___overflow:        // __overflow
00000000000015d0         jmp        qword [__overflow@GOT]                      ; __overflow, __overflow@GOT, CODE XREF=main+891
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15d6:
00000000000015d6         push       0x12
00000000000015db         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
00000000000015e0         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15e6:
00000000000015e6         push       0x13
00000000000015eb         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
00000000000015f0         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15f6:
00000000000015f6         push       0x14
00000000000015fb         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
0000000000001600         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1606:
0000000000001606         push       0x15
000000000000160b         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getcwd:        // getcwd
0000000000001610         jmp        qword [getcwd@GOT]                          ; getcwd, getcwd@GOT, CODE XREF=xgetcwd+5
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1616:
0000000000001616         push       0x16
000000000000161b         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strspn:        // strspn
0000000000001620         jmp        qword [strspn@GOT]                          ; strspn, strspn@GOT, CODE XREF=canonicalize_filename_mode+676
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1626:
0000000000001626         push       0x17
000000000000162b         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
0000000000001630         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=quotearg_buffer_restyled+410, same_nameat+105
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1636:
0000000000001636         push       0x18
000000000000163b         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
0000000000001640         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=main+689, usage+157, usage+194, usage+231, usage+275, usage+864, buffer_or_output+103, version_etc_arn+135, emit_bug_reporting_address+123
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1646:
0000000000001646         push       0x19
000000000000164b         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
0000000000001650         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=hash_initialize+177, hash_rehash+198, xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1656:
0000000000001656         push       0x1a
000000000000165b         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcmp:        // strcmp
0000000000001660         jmp        qword [strcmp@GOT]                          ; strcmp, strcmp@GOT, CODE XREF=triple_compare_ino_str+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1666:
0000000000001666         push       0x1b
000000000000166b         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
0000000000001670         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=buffer_or_output+66, canonicalize_filename_mode+387, canonicalize_filename_mode+1208, xmemdup+35, mdir_name+53
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1676:
0000000000001676         push       0x1c
000000000000167b         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
0000000000001680         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1686:
0000000000001686         push       0x1d
000000000000168b         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___xstat:        // __xstat
0000000000001690         jmp        qword [__xstat@GOT]                         ; __xstat, __xstat@GOT, CODE XREF=isdir+42, canonicalize_filename_mode+617
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1696:
0000000000001696         push       0x1e
000000000000169b         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
00000000000016a0         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=transfer_entries+293, hash_initialize+62, hash_insert_if_absent+517, xmalloc+4, areadlink_with_size+67, areadlink_with_size+126, mdir_name+31
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16a6:
00000000000016a6         push       0x1f
00000000000016ab         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
00000000000016b0         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16b6:
00000000000016b6         push       0x20
00000000000016bb         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
00000000000016c0         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16c6:
00000000000016c6         push       0x21
00000000000016cb         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
00000000000016d0         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16d6:
00000000000016d6         push       0x22
00000000000016db         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
00000000000016e0         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16e6:
00000000000016e6         push       0x23
00000000000016eb         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
00000000000016f0         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+58, usage+531, usage+724, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16f6:
00000000000016f6         push       0x24
00000000000016fb         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
0000000000001700         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=usage+120, usage+519, usage+612, usage+673, usage+712, usage+815, emit_bug_reporting_address+37, emit_bug_reporting_address+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1706:
0000000000001706         push       0x25
000000000000170b         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memmove:        // memmove
0000000000001710         jmp        qword [memmove@GOT]                         ; memmove, memmove@GOT, CODE XREF=canonicalize_filename_mode+1192
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1716:
0000000000001716         push       0x26
000000000000171b         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
0000000000001720         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+850, main+973, main+1031, main+1109, main+1166, main+1213, isdir+155, relpath+518, close_stdout+125, close_stdout+157, same_nameat.part.0+240
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1726:
0000000000001726         push       0x27
000000000000172b         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
0000000000001730         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1736:
0000000000001736         push       0x28
000000000000173b         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000001740         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1746:
0000000000001746         push       0x29
000000000000174b         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000001750         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+338, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1756:
0000000000001756         push       0x2a
000000000000175b         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
0000000000001760         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1766:
0000000000001766         push       0x2b
000000000000176b         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
0000000000001770         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, hash_print_statistics+118, hash_print_statistics+143, hash_print_statistics+211, hash_print_statistics+246, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1776:
0000000000001776         push       0x2c
000000000000177b         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
0000000000001780         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_49e0+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1786:
0000000000001786         push       0x2d
000000000000178b         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
0000000000001790         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_49e0+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1796:
0000000000001796         push       0x2e
000000000000179b         jmp        0x14a0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
00000000000017a0         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=sub_4780+51
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17a6:
00000000000017a6         push       0x2f
00000000000017ab         jmp        0x14a0
                        ; endp


        ; Section .plt.got
        ; Range: [0x17b0; 0x17b8[ (8 bytes)
        ; File offset : [6064; 6072[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_209fe0:        // qword_209fe0
00000000000017b0         jmp        qword [qword_209fe0]                        ; qword, End of unwind block (FDE at 0x8294), Begin of unwind block (FDE at 0x82bc), qword_209fe0, CODE XREF=__do_global_dtors_aux+30
                        ; endp
00000000000017b6         align      8
00000000000017b8         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x82bc)
00000000000017b9         db  0x00 ; '.'
00000000000017ba         db  0x00 ; '.'
00000000000017bb         db  0x00 ; '.'
00000000000017bc         db  0x00 ; '.'
00000000000017bd         db  0x00 ; '.'
00000000000017be         db  0x00 ; '.'
00000000000017bf         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x17c0; 0x6f2e[ (22382 bytes)
        ; File offset : [6080; 28462[ (22382 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     main:
00000000000017c0         push       r15                                         ; Begin of unwind block (FDE at 0x8368), DATA XREF=_start+29
00000000000017c2         push       r14
00000000000017c4         xor        r15d, r15d
00000000000017c7         push       r13
00000000000017c9         push       r12
00000000000017cb         mov        r12d, edi
00000000000017ce         push       rbp
00000000000017cf         push       rbx
00000000000017d0         mov        rbp, rsi
00000000000017d3         lea        r13, qword [longopts]                       ; longopts
00000000000017da         xor        r14d, r14d
00000000000017dd         mov        ebx, 0x1
00000000000017e2         sub        rsp, 0x8
00000000000017e6         mov        rdi, qword [rsi]
00000000000017e9         call       set_program_name                            ; set_program_name
00000000000017ee         lea        rsi, qword [aWrittenBySSAnd+27]             ; argument "__locale" for method j_setlocale, 0x7b41
00000000000017f5         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
00000000000017fa         call       j_setlocale                                 ; setlocale
00000000000017ff         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
0000000000001806         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
000000000000180d         call       j_bindtextdomain                            ; bindtextdomain
0000000000001812         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
0000000000001819         call       j_textdomain                                ; textdomain
000000000000181e         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
0000000000001825         call       atexit                                      ; atexit
000000000000182a         nop        word [rax+rax]

                     loc_1830:
0000000000001830         lea        rdx, qword [aElmpqsz]                       ; argument "__shortopts" for method j_getopt_long, "eLmPqsz", CODE XREF=main+195, main+232, main+269, main+358, main+375, main+391, main+410, main+426, main+439
0000000000001837         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
000000000000183a         mov        rcx, r13                                    ; argument "__longopts" for method j_getopt_long
000000000000183d         mov        rsi, rbp                                    ; argument "___argv" for method j_getopt_long
0000000000001840         mov        edi, r12d                                   ; argument "___argc" for method j_getopt_long
0000000000001843         call       j_getopt_long                               ; getopt_long
0000000000001848         cmp        eax, 0xffffffff
000000000000184b         je         loc_197c

0000000000001851         cmp        eax, 0x6d
0000000000001854         je         loc_1920

000000000000185a         jle        loc_1888

000000000000185c         cmp        eax, 0x7a
000000000000185f         je         loc_1940

0000000000001865         jg         loc_18b0

0000000000001867         cmp        eax, 0x71
000000000000186a         je         loc_1930

0000000000001870         cmp        eax, 0x73
0000000000001873         jne        loc_1c1a

0000000000001879         or         ebx, 0x4
000000000000187c         mov        byte [logical], 0x0                         ; logical
0000000000001883         jmp        loc_1830
0000000000001885         align      8

                     loc_1888:
0000000000001888         cmp        eax, 0x4c                                   ; CODE XREF=main+154
000000000000188b         je         loc_1960

0000000000001891         jle        loc_18d8

0000000000001893         cmp        eax, 0x50
0000000000001896         je         loc_1950

000000000000189c         cmp        eax, 0x65
000000000000189f         jne        loc_1c1a

00000000000018a5         and        ebx, 0xfffffffc
00000000000018a8         jmp        loc_1830
00000000000018aa         align      16

                     loc_18b0:
00000000000018b0         cmp        eax, 0x80                                   ; CODE XREF=main+165
00000000000018b5         je         loc_1970

00000000000018bb         cmp        eax, 0x81
00000000000018c0         jne        loc_1c1a

00000000000018c6         mov        r14, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
00000000000018cd         jmp        loc_1830
00000000000018d2         align      8

                     loc_18d8:
00000000000018d8         cmp        eax, 0xffffff7d                             ; CODE XREF=main+209
00000000000018dd         jne        loc_1beb

00000000000018e3         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000018ea         mov        rcx, qword [Version]                        ; Version
00000000000018f1         lea        r8, qword [aPadraigBrady]                   ; "Padraig Brady"
00000000000018f8         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6fd2
00000000000018ff         lea        rsi, qword [aRealpath]                      ; "realpath"
0000000000001906         xor        r9d, r9d
0000000000001909         xor        eax, eax
000000000000190b         call       version_etc                                 ; version_etc
0000000000001910         xor        edi, edi                                    ; argument "__status" for method j_exit
0000000000001912         call       j_exit                                      ; exit
                        ; endp
0000000000001917         align      32

                     loc_1920:
0000000000001920         and        ebx, 0xfffffffc                             ; CODE XREF=main+148
0000000000001923         or         ebx, 0x2
0000000000001926         jmp        loc_1830
000000000000192b         align      16

                     loc_1930:
0000000000001930         mov        byte [verbose], 0x0                         ; verbose, CODE XREF=main+170
0000000000001937         jmp        loc_1830
000000000000193c         align      64

                     loc_1940:
0000000000001940         mov        byte [use_nuls], 0x1                        ; use_nuls, CODE XREF=main+159
0000000000001947         jmp        loc_1830
000000000000194c         align      16

                     loc_1950:
0000000000001950         and        ebx, 0xfffffffb                             ; CODE XREF=main+214
0000000000001953         mov        byte [logical], 0x0                         ; logical
000000000000195a         jmp        loc_1830
000000000000195f         align      32

                     loc_1960:
0000000000001960         or         ebx, 0x4                                    ; CODE XREF=main+203
0000000000001963         mov        byte [logical], 0x1                         ; logical
000000000000196a         jmp        loc_1830
000000000000196f         align      16

                     loc_1970:
0000000000001970         mov        r15, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+245
0000000000001977         jmp        loc_1830

                     loc_197c:
000000000000197c         cmp        dword [optind@@GLIBC_2.2.5], r12d           ; optind@@GLIBC_2.2.5, CODE XREF=main+139
0000000000001983         jge        loc_1bf9

0000000000001989         mov        r13d, ebx
000000000000198c         and        r13d, 0x3
0000000000001990         test       r14, r14
0000000000001993         je         loc_1b19

0000000000001999         test       r15, r15
000000000000199c         jne        loc_1b19

00000000000019a2         mov        r15, r14

                     loc_19a5:
00000000000019a5         mov        esi, ebx                                    ; CODE XREF=main+866
00000000000019a7         mov        rdi, r15
00000000000019aa         call       realpath_canon                              ; realpath_canon
00000000000019af         test       rax, rax
00000000000019b2         mov        qword [can_relative_to], rax                ; can_relative_to
00000000000019b9         je         loc_1c24

00000000000019bf         test       r13d, r13d
00000000000019c2         je         loc_1b58

                     loc_19c8:
00000000000019c8         cmp        r14, r15                                    ; CODE XREF=main+860, main+930
00000000000019cb         je         loc_1b45

00000000000019d1         test       r14, r14
00000000000019d4         je         loc_1a16

00000000000019d6         mov        esi, ebx
00000000000019d8         mov        rdi, r14
00000000000019db         call       realpath_canon                              ; realpath_canon
00000000000019e0         test       rax, rax
00000000000019e3         mov        r15, rax
00000000000019e6         je         loc_1c53

00000000000019ec         test       r13d, r13d
00000000000019ef         je         loc_1b92

                     loc_19f5:
00000000000019f5         mov        r13, qword [can_relative_to]                ; can_relative_to, CODE XREF=main+988
00000000000019fc         mov        rdi, r15
00000000000019ff         mov        rsi, r13
0000000000001a02         call       path_prefix                                 ; path_prefix
0000000000001a07         test       al, al
0000000000001a09         je         loc_1bcc

0000000000001a0f         mov        qword [can_relative_base], r15              ; can_relative_base

                     loc_1a16:
0000000000001a16         mov        eax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+532, main+915, main+1062
0000000000001a1c         mov        r13d, 0x1
0000000000001a22         cmp        eax, r12d
0000000000001a25         jl         loc_1abe

0000000000001a2b         jmp        loc_1b27

                     loc_1a30:
0000000000001a30         mov        r9, qword [can_relative_to]                 ; can_relative_to, CODE XREF=main+789
0000000000001a37         test       r9, r9
0000000000001a3a         je         loc_1a67

0000000000001a3c         mov        rdi, qword [can_relative_base]              ; can_relative_base
0000000000001a43         test       rdi, rdi
0000000000001a46         je         loc_1a54

0000000000001a48         mov        rsi, rax
0000000000001a4b         call       path_prefix                                 ; path_prefix
0000000000001a50         test       al, al
0000000000001a52         je         loc_1a67

                     loc_1a54:
0000000000001a54         xor        ecx, ecx                                    ; CODE XREF=main+646
0000000000001a56         xor        edx, edx
0000000000001a58         mov        rsi, r9
0000000000001a5b         mov        rdi, r14
0000000000001a5e         call       relpath                                     ; relpath
0000000000001a63         test       al, al
0000000000001a65         jne        loc_1a76

                     loc_1a67:
0000000000001a67         mov        rsi, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fputs_unlocked, stdout@@GLIBC_2.2.5, CODE XREF=main+634, main+658
0000000000001a6e         mov        rdi, r14                                    ; argument "__s" for method j_fputs_unlocked
0000000000001a71         call       j_fputs_unlocked                            ; fputs_unlocked

                     loc_1a76:
0000000000001a76         cmp        byte [use_nuls], 0x1                        ; use_nuls, CODE XREF=main+677
0000000000001a7d         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001a84         mov        rax, qword [rdi+0x28]
0000000000001a88         sbb        esi, esi
0000000000001a8a         and        esi, 0xa
0000000000001a8d         cmp        rax, qword [rdi+0x30]
0000000000001a91         jae        loc_1b3b

0000000000001a97         lea        rdx, qword [rax+1]
0000000000001a9b         mov        qword [rdi+0x28], rdx
0000000000001a9f         mov        byte [rax], sil

                     loc_1aa2:
0000000000001aa2         mov        rdi, r14                                    ; argument "__ptr" for method j_free, CODE XREF=main+896
0000000000001aa5         call       j_free                                      ; free

                     loc_1aaa:
0000000000001aaa         mov        eax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+806, main+855
0000000000001ab0         add        eax, 0x1
0000000000001ab3         cmp        eax, r12d
0000000000001ab6         mov        dword [optind@@GLIBC_2.2.5], eax            ; optind@@GLIBC_2.2.5
0000000000001abc         jge        loc_1b27

                     loc_1abe:
0000000000001abe         cdqe                                                   ; CODE XREF=main+613
0000000000001ac0         mov        esi, ebx
0000000000001ac2         mov        r15, qword [rbp+rax*8]
0000000000001ac7         mov        rdi, r15
0000000000001aca         call       realpath_canon                              ; realpath_canon
0000000000001acf         test       rax, rax
0000000000001ad2         mov        r14, rax
0000000000001ad5         jne        loc_1a30

0000000000001adb         movzx      r13d, byte [verbose]                        ; verbose
0000000000001ae3         test       r13b, r13b
0000000000001ae6         je         loc_1aaa

0000000000001ae8         mov        rdx, r15
0000000000001aeb         mov        esi, 0x3
0000000000001af0         xor        edi, edi
0000000000001af2         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000001af7         mov        r13, rax
0000000000001afa         call       j___errno_location                          ; __errno_location
0000000000001aff         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001b01         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x750d
0000000000001b08         mov        rcx, r13
0000000000001b0b         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001b0d         xor        eax, eax
0000000000001b0f         xor        r13d, r13d
0000000000001b12         call       j_error                                     ; error
0000000000001b17         jmp        loc_1aaa

                     loc_1b19:
0000000000001b19         test       r15, r15                                    ; CODE XREF=main+467, main+476
0000000000001b1c         je         loc_19c8

0000000000001b22         jmp        loc_19a5

                     loc_1b27:
0000000000001b27         xor        r13d, 0x1                                   ; CODE XREF=main+619, main+764
0000000000001b2b         pop        rdx
0000000000001b2c         movzx      eax, r13b
0000000000001b30         pop        rbx
0000000000001b31         pop        rbp
0000000000001b32         pop        r12
0000000000001b34         pop        r13
0000000000001b36         pop        r14
0000000000001b38         pop        r15
0000000000001b3a         ret
                        ; endp

                     loc_1b3b:
0000000000001b3b         call       j___overflow                                ; __overflow, CODE XREF=main+721
0000000000001b40         jmp        loc_1aa2

                     loc_1b45:
0000000000001b45         mov        rax, qword [can_relative_to]                ; can_relative_to, CODE XREF=main+523
0000000000001b4c         mov        qword [can_relative_base], rax              ; can_relative_base
0000000000001b53         jmp        loc_1a16

                     loc_1b58:
0000000000001b58         mov        rdi, rax                                    ; CODE XREF=main+514
0000000000001b5b         call       isdir                                       ; isdir
0000000000001b60         test       al, al
0000000000001b62         jne        loc_19c8

0000000000001b68         mov        rdx, r15
0000000000001b6b         mov        esi, 0x3
0000000000001b70         xor        edi, edi
0000000000001b72         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000001b77         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x750d
0000000000001b7e         mov        rcx, rax
0000000000001b81         mov        esi, 0x14                                   ; argument "__errnum" for method j_error
0000000000001b86         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001b8b         xor        eax, eax
0000000000001b8d         call       j_error                                     ; error

                     loc_1b92:
0000000000001b92         mov        rdi, rax                                    ; CODE XREF=main+559
0000000000001b95         call       isdir                                       ; isdir
0000000000001b9a         test       al, al
0000000000001b9c         jne        loc_19f5

0000000000001ba2         mov        rdx, r14
0000000000001ba5         mov        esi, 0x3
0000000000001baa         xor        edi, edi
0000000000001bac         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000001bb1         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x750d
0000000000001bb8         mov        rcx, rax
0000000000001bbb         mov        esi, 0x14                                   ; argument "__errnum" for method j_error
0000000000001bc0         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001bc5         xor        eax, eax
0000000000001bc7         call       j_error                                     ; error

                     loc_1bcc:
0000000000001bcc         mov        rdi, r15                                    ; argument "__ptr" for method j_free, CODE XREF=main+585
0000000000001bcf         call       j_free                                      ; free
0000000000001bd4         mov        qword [can_relative_base], r13              ; can_relative_base
0000000000001bdb         mov        qword [can_relative_to], 0x0                ; can_relative_to
0000000000001be6         jmp        loc_1a16

                     loc_1beb:
0000000000001beb         cmp        eax, 0xffffff7e                             ; CODE XREF=main+285
0000000000001bf0         jne        loc_1c1a

0000000000001bf2         xor        edi, edi                                    ; argument #1 for method usage
0000000000001bf4         call       usage                                       ; usage

                     loc_1bf9:
0000000000001bf9         lea        rsi, qword [aMissingOperand]                ; argument "msgid" for method j_dcgettext, "missing operand", CODE XREF=main+451
0000000000001c00         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001c05         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001c07         call       j_dcgettext                                 ; dcgettext
0000000000001c0c         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001c0e         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001c11         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001c13         xor        eax, eax
0000000000001c15         call       j_error                                     ; error

                     loc_1c1a:
0000000000001c1a         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=main+179, main+223, main+256, main+1072
0000000000001c1f         call       usage                                       ; usage

                     loc_1c24:
0000000000001c24         mov        rdx, r15                                    ; CODE XREF=main+505
0000000000001c27         mov        esi, 0x3
0000000000001c2c         xor        edi, edi
0000000000001c2e         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000001c33         mov        rbx, rax
0000000000001c36         call       j___errno_location                          ; __errno_location
0000000000001c3b         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001c3d         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x750d
0000000000001c44         mov        rcx, rbx
0000000000001c47         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001c4c         xor        eax, eax
0000000000001c4e         call       j_error                                     ; error

                     loc_1c53:
0000000000001c53         mov        rdx, r14                                    ; CODE XREF=main+550
0000000000001c56         mov        esi, 0x3
0000000000001c5b         xor        edi, edi
0000000000001c5d         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000001c62         mov        rbx, rax
0000000000001c65         call       j___errno_location                          ; __errno_location
0000000000001c6a         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001c6c         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x750d
0000000000001c73         mov        rcx, rbx
0000000000001c76         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001c7b         xor        eax, eax
0000000000001c7d         call       j_error                                     ; error
0000000000001c82         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x8368)
0000000000001c8c         nop        dword [rax]
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
0000000000001c90         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x8264)
0000000000001c92         mov        r9, rdx
0000000000001c95         pop        rsi
0000000000001c96         mov        rdx, rsp
0000000000001c99         and        rsp, 0xfffffffffffffff0
0000000000001c9d         push       rax
0000000000001c9e         push       rsp
0000000000001c9f         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
0000000000001ca6         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
0000000000001cad         lea        rdi, qword [main]                           ; main
0000000000001cb4         call       qword [qword_209fc0+8]                      ; 0x209fc8
0000000000001cba         hlt
                        ; endp
0000000000001cbb         align      64                                          ; End of unwind block (FDE at 0x8264)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000001cc0         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
0000000000001cc7         push       rbp
0000000000001cc8         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000001ccf         cmp        rax, rdi
0000000000001cd2         mov        rbp, rsp
0000000000001cd5         je         loc_1cf0

0000000000001cd7         mov        rax, qword [qword_209fc0]                   ; qword_209fc0
0000000000001cde         test       rax, rax
0000000000001ce1         je         loc_1cf0

0000000000001ce3         pop        rbp
0000000000001ce4         jmp        rax
                        ; endp
0000000000001ce6         align      16

                     loc_1cf0:
0000000000001cf0         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
0000000000001cf1         ret
                        ; endp
0000000000001cf2         align      256

                     register_tm_clones:
0000000000001d00         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
0000000000001d07         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000001d0e         push       rbp
0000000000001d0f         sub        rsi, rdi
0000000000001d12         mov        rbp, rsp
0000000000001d15         sar        rsi, 0x3
0000000000001d19         mov        rax, rsi
0000000000001d1c         shr        rax, 0x3f
0000000000001d20         add        rsi, rax
0000000000001d23         sar        rsi, 0x1
0000000000001d26         je         loc_1d40

0000000000001d28         mov        rax, qword [qword_209fd8]                   ; qword_209fd8
0000000000001d2f         test       rax, rax
0000000000001d32         je         loc_1d40

0000000000001d34         pop        rbp
0000000000001d35         jmp        rax
                        ; endp
0000000000001d37         align      64

                     loc_1d40:
0000000000001d40         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000001d41         ret
                        ; endp
0000000000001d42         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
0000000000001d50         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
0000000000001d57         jne        loc_1d88

0000000000001d59         cmp        qword [qword_209fe0], 0x0                   ; qword_209fe0
0000000000001d61         push       rbp
0000000000001d62         mov        rbp, rsp
0000000000001d65         je         loc_1d73

0000000000001d67         mov        rdi, qword [__dso_handle]                   ; __dso_handle
0000000000001d6e         call       j_qword_209fe0                              ; qword_209fe0

                     loc_1d73:
0000000000001d73         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
0000000000001d78         mov        byte [completed.7697], 0x1                  ; completed.7697
0000000000001d7f         pop        rbp
0000000000001d80         ret
                        ; endp
0000000000001d81         align      8

                     loc_1d88:
0000000000001d88         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
0000000000001d8a         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000001d90         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000001d91         mov        rbp, rsp
0000000000001d94         pop        rbp
0000000000001d95         jmp        register_tm_clones                          ; register_tm_clones
0000000000001d9a         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     path_prefix:
0000000000001da0         movzx      eax, byte [rdi+1]                           ; Begin of unwind block (FDE at 0x82d4), CODE XREF=main+578, main+651
0000000000001da4         test       al, al
0000000000001da6         je         loc_1e00

0000000000001da8         cmp        al, 0x2f
0000000000001daa         je         loc_1e10

                     loc_1dac:
0000000000001dac         movzx      edx, byte [rsi+1]                           ; CODE XREF=path_prefix+116
0000000000001db0         cmp        al, dl
0000000000001db2         setne      al
0000000000001db5         test       dl, dl
0000000000001db7         sete       dl
0000000000001dba         or         al, dl
0000000000001dbc         jne        loc_1e28

0000000000001dbe         add        rdi, 0x1
0000000000001dc2         add        rsi, 0x1
0000000000001dc6         jmp        loc_1ddb
0000000000001dc8         align      16

                     loc_1dd0:
0000000000001dd0         movzx      ecx, byte [rsi]                             ; CODE XREF=path_prefix+72
0000000000001dd3         test       cl, cl
0000000000001dd5         je         loc_1dfa

0000000000001dd7         cmp        dl, cl
0000000000001dd9         jne        loc_1e20

                     loc_1ddb:
0000000000001ddb         add        rdi, 0x1                                    ; CODE XREF=path_prefix+38
0000000000001ddf         movzx      edx, byte [rdi]
0000000000001de2         add        rsi, 0x1
0000000000001de6         test       dl, dl
0000000000001de8         jne        loc_1dd0

0000000000001dea         movzx      edx, byte [rsi]
0000000000001ded         cmp        dl, 0x2f
0000000000001df0         sete       al
0000000000001df3         test       dl, dl
0000000000001df5         sete       dl
0000000000001df8         or         eax, edx

                     loc_1dfa:
0000000000001dfa         ret                                                    ; CODE XREF=path_prefix+53
                        ; endp
0000000000001dfc         align      512

                     loc_1e00:
0000000000001e00         cmp        byte [rsi+1], 0x2f                          ; CODE XREF=path_prefix+6
0000000000001e04         setne      al
0000000000001e07         ret
                        ; endp
0000000000001e08         align      16

                     loc_1e10:
0000000000001e10         cmp        byte [rdi+2], 0x0                           ; CODE XREF=path_prefix+10
0000000000001e14         jne        loc_1dac

0000000000001e16         cmp        byte [rsi+1], 0x2f
0000000000001e1a         sete       al
0000000000001e1d         ret
                        ; endp
0000000000001e1e         align      32

                     loc_1e20:
0000000000001e20         ret                                                    ; CODE XREF=path_prefix+57
                        ; endp
0000000000001e22         align      8

                     loc_1e28:
0000000000001e28         xor        eax, eax                                    ; CODE XREF=path_prefix+28
0000000000001e2a         ret
                        ; endp
0000000000001e2b         align      16                                          ; End of unwind block (FDE at 0x82d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     realpath_canon:
0000000000001e30         push       rbp                                         ; Begin of unwind block (FDE at 0x82e8), CODE XREF=main+490, main+539, main+778
0000000000001e31         push       rbx
0000000000001e32         mov        ebp, esi
0000000000001e34         sub        rsp, 0x8
0000000000001e38         call       canonicalize_filename_mode                  ; canonicalize_filename_mode
0000000000001e3d         cmp        byte [logical], 0x0                         ; logical
0000000000001e44         mov        rbx, rax
0000000000001e47         je         loc_1e69

0000000000001e49         test       rax, rax
0000000000001e4c         je         loc_1e69

0000000000001e4e         mov        esi, ebp
0000000000001e50         mov        rdi, rax
0000000000001e53         and        esi, 0xfffffffb
0000000000001e56         call       canonicalize_filename_mode                  ; canonicalize_filename_mode
0000000000001e5b         mov        rbp, rax
0000000000001e5e         mov        rdi, rbx                                    ; argument "__ptr" for method j_free
0000000000001e61         mov        rbx, rbp
0000000000001e64         call       j_free                                      ; free

                     loc_1e69:
0000000000001e69         add        rsp, 0x8                                    ; CODE XREF=realpath_canon+23, realpath_canon+28
0000000000001e6d         mov        rax, rbx
0000000000001e70         pop        rbx
0000000000001e71         pop        rbp
0000000000001e72         ret
                        ; endp
0000000000001e73         align      128                                         ; End of unwind block (FDE at 0x82e8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_A0: int32_t, -160


                     isdir:
0000000000001e80         push       rbp                                         ; Begin of unwind block (FDE at 0x8310), CODE XREF=main+923, main+981
0000000000001e81         push       rbx
0000000000001e82         mov        rsi, rdi                                    ; argument "__filename" for method j___xstat
0000000000001e85         mov        rbx, rdi
0000000000001e88         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
0000000000001e8d         sub        rsp, 0xa8
0000000000001e94         mov        rdx, rsp                                    ; argument "__stat_buf" for method j___xstat
0000000000001e97         mov        rax, qword [fs:0x28]
0000000000001ea0         mov        qword [rsp+0xb8+var_20], rax
0000000000001ea8         xor        eax, eax
0000000000001eaa         call       j___xstat                                   ; __xstat
0000000000001eaf         test       eax, eax
0000000000001eb1         jne        loc_1ee1

0000000000001eb3         mov        eax, dword [rsp+0xb8+var_A0]
0000000000001eb7         and        eax, 0xf000
0000000000001ebc         cmp        eax, 0x4000
0000000000001ec1         sete       al
0000000000001ec4         mov        rcx, qword [rsp+0xb8+var_20]
0000000000001ecc         xor        rcx, qword [fs:0x28]
0000000000001ed5         jne        loc_1f20

0000000000001ed7         add        rsp, 0xa8
0000000000001ede         pop        rbx
0000000000001edf         pop        rbp
0000000000001ee0         ret
                        ; endp

                     loc_1ee1:
0000000000001ee1         mov        rsi, rbx                                    ; CODE XREF=isdir+49
0000000000001ee4         mov        edi, 0x4
0000000000001ee9         call       quotearg_style                              ; quotearg_style
0000000000001eee         lea        rsi, qword [aCannotStatS]                   ; argument "msgid" for method j_dcgettext, "cannot stat %s"
0000000000001ef5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001efa         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001efc         mov        rbp, rax
0000000000001eff         call       j_dcgettext                                 ; dcgettext
0000000000001f04         mov        rbx, rax
0000000000001f07         call       j___errno_location                          ; __errno_location
0000000000001f0c         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001f0e         mov        rcx, rbp
0000000000001f11         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000001f14         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001f19         xor        eax, eax
0000000000001f1b         call       j_error                                     ; error

                     loc_1f20:
0000000000001f20         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=isdir+85
                        ; endp
0000000000001f25         align      16                                          ; End of unwind block (FDE at 0x8310)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
0000000000001f30         push       r13                                         ; Begin of unwind block (FDE at 0x833c), CODE XREF=main+1076, main+1119
0000000000001f32         push       r12
0000000000001f34         mov        edx, 0x5
0000000000001f39         push       rbp
0000000000001f3a         push       rbx
0000000000001f3b         mov        ebp, edi
0000000000001f3d         sub        rsp, 0x88
0000000000001f44         mov        rbx, qword [program_name]                   ; program_name
0000000000001f4b         mov        rax, qword [fs:0x28]
0000000000001f54         mov        qword [rsp+0xa8+var_30], rax
0000000000001f59         xor        eax, eax
0000000000001f5b         test       edi, edi
0000000000001f5d         je         loc_1f8d

0000000000001f5f         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
0000000000001f66         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001f68         call       j_dcgettext                                 ; dcgettext
0000000000001f6d         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000001f74         mov        rdx, rax
0000000000001f77         mov        rcx, rbx
0000000000001f7a         mov        esi, 0x1
0000000000001f7f         xor        eax, eax
0000000000001f81         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_1f86:
0000000000001f86         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+678
0000000000001f88         call       j_exit                                      ; exit
                        ; endp

                     loc_1f8d:
0000000000001f8d         lea        rsi, qword [aUsageSOptionFi]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... FILE...\\n", CODE XREF=usage+45
0000000000001f94         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001f96         call       j_dcgettext                                 ; dcgettext
0000000000001f9b         mov        rdx, rbx
0000000000001f9e         mov        rsi, rax
0000000000001fa1         mov        edi, 0x1
0000000000001fa6         xor        eax, eax
0000000000001fa8         call       j___printf_chk                              ; __printf_chk
0000000000001fad         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001fb4         lea        rsi, qword [aPrintTheResolv]                ; argument "msgid" for method j_dcgettext, "Print the resolved absolute file name;\\nall but the last component must exist\\n\\n"
0000000000001fbb         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001fc0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001fc2         call       j_dcgettext                                 ; dcgettext
0000000000001fc7         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001fca         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001fcd         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001fd2         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001fd9         lea        rsi, qword [aECanonicalizee]                ; argument "msgid" for method j_dcgettext, "  -e, --canonicalize-existing  all components of the path must exist\\n  -m, --canonicalize-missing   no path components need exist or be a directory\\n  -L, --logical                resolve '..' components before symlinks\\n  -P, --physical               resolv…"
0000000000001fe0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001fe5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001fe7         call       j_dcgettext                                 ; dcgettext
0000000000001fec         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001fef         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001ff2         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001ff7         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001ffe         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
0000000000002005         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000200a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000200c         call       j_dcgettext                                 ; dcgettext
0000000000002011         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002014         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002017         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000201c         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002023         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
000000000000202a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000202f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002031         call       j_dcgettext                                 ; dcgettext
0000000000002036         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002039         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000203c         lea        rbx, qword [aRealpath]                      ; "realpath"
0000000000002043         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002048         lea        rax, qword [aRealpath+9]                    ; 0x6f5c
000000000000204f         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
0000000000002056         mov        qword [rsp+0xa8+var_48], 0x0
000000000000205f         mov        qword [rsp+0xa8+var_40], 0x0
0000000000002068         mov        rdx, rsp
000000000000206b         mov        qword [rsp+0xa8+var_A8], rax
000000000000206f         lea        rax, qword [aTestInvocation]                ; "test invocation"
0000000000002076         mov        qword [rsp+0xa8+var_78], rcx
000000000000207b         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
0000000000002082         mov        qword [rsp+0xa8+var_A0], rax
0000000000002087         lea        rax, qword [aCoreutils]                     ; "coreutils"
000000000000208e         mov        qword [rsp+0xa8+var_68], rcx
0000000000002093         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
000000000000209a         mov        qword [rsp+0xa8+var_98], rax
000000000000209f         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
00000000000020a6         mov        qword [rsp+0xa8+var_58], rcx
00000000000020ab         mov        qword [rsp+0xa8+var_90], rax
00000000000020b0         lea        rax, qword [aSha224sum]                     ; "sha224sum"
00000000000020b7         mov        qword [rsp+0xa8+var_88], rax
00000000000020bc         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
00000000000020c3         mov        qword [rsp+0xa8+var_80], rax
00000000000020c8         mov        qword [rsp+0xa8+var_70], rax
00000000000020cd         mov        qword [rsp+0xa8+var_60], rax
00000000000020d2         mov        qword [rsp+0xa8+var_50], rax
00000000000020d7         nop        word [rax+rax]

                     loc_20e0:
00000000000020e0         add        rdx, 0x10                                   ; CODE XREF=usage+461
00000000000020e4         mov        rdi, qword [rdx]
00000000000020e7         test       rdi, rdi
00000000000020ea         je         loc_20ff

00000000000020ec         mov        ecx, 0x9
00000000000020f1         mov        rsi, rbx
00000000000020f4         rep  cmpsb byte [rsi], byte [rdi]
00000000000020f6         seta       al
00000000000020f9         sbb        al, 0x0
00000000000020fb         test       al, al
00000000000020fd         jne        loc_20e0

                     loc_20ff:
00000000000020ff         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+442
0000000000002103         xor        edi, edi
0000000000002105         mov        edx, 0x5
000000000000210a         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
0000000000002111         test       r12, r12
0000000000002114         je         loc_21db

000000000000211a         call       j_dcgettext                                 ; dcgettext
000000000000211f         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002126         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6fd2
000000000000212d         mov        rsi, rax
0000000000002130         mov        edi, 0x1
0000000000002135         xor        eax, eax
0000000000002137         call       j___printf_chk                              ; __printf_chk
000000000000213c         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000213e         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000002143         call       j_setlocale                                 ; setlocale
0000000000002148         test       rax, rax
000000000000214b         je         loc_2169

000000000000214d         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x6fe0
0000000000002154         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000002159         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
000000000000215c         call       j_strncmp                                   ; strncmp
0000000000002161         test       eax, eax
0000000000002163         jne        loc_2270

                     loc_2169:
0000000000002169         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+539, usage+869
0000000000002170         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002172         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002177         call       j_dcgettext                                 ; dcgettext
000000000000217c         lea        rcx, qword [aRealpath]                      ; "realpath"
0000000000002183         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
000000000000218a         mov        rsi, rax
000000000000218d         mov        edi, 0x1
0000000000002192         xor        eax, eax
0000000000002194         call       j___printf_chk                              ; __printf_chk
0000000000002199         cmp        r12, rbx
000000000000219c         lea        rcx, qword [aMulticallInvoc+10]             ; 0x6f78
00000000000021a3         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0x7b41
00000000000021aa         cmove      rbx, rcx

                     loc_21ae:
00000000000021ae         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+820
00000000000021b5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000021b7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000021bc         call       j_dcgettext                                 ; dcgettext
00000000000021c1         mov        rcx, rbx
00000000000021c4         mov        rsi, rax
00000000000021c7         mov        rdx, r12
00000000000021ca         mov        edi, 0x1
00000000000021cf         xor        eax, eax
00000000000021d1         call       j___printf_chk                              ; __printf_chk
00000000000021d6         jmp        loc_1f86

                     loc_21db:
00000000000021db         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+484
00000000000021e0         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000021e7         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6fd2
00000000000021ee         mov        rsi, rax
00000000000021f1         mov        edi, 0x1
00000000000021f6         xor        eax, eax
00000000000021f8         call       j___printf_chk                              ; __printf_chk
00000000000021fd         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
00000000000021ff         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000002204         call       j_setlocale                                 ; setlocale
0000000000002209         test       rax, rax
000000000000220c         je         loc_2226

000000000000220e         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x6fe0
0000000000002215         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
000000000000221a         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
000000000000221d         call       j_strncmp                                   ; strncmp
0000000000002222         test       eax, eax
0000000000002224         jne        loc_2269

                     loc_2226:
0000000000002226         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+732
000000000000222d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002232         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002234         lea        r12, qword [aRealpath]                      ; "realpath"
000000000000223b         lea        rbx, qword [aMulticallInvoc+10]             ; 0x6f78
0000000000002242         call       j_dcgettext                                 ; dcgettext
0000000000002247         lea        rcx, qword [aRealpath]                      ; "realpath"
000000000000224e         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002255         mov        rsi, rax
0000000000002258         mov        edi, 0x1
000000000000225d         xor        eax, eax
000000000000225f         call       j___printf_chk                              ; __printf_chk
0000000000002264         jmp        loc_21ae

                     loc_2269:
0000000000002269         lea        r12, qword [aRealpath]                      ; "realpath", CODE XREF=usage+756

                     loc_2270:
0000000000002270         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+563
0000000000002277         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
000000000000227e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002280         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002285         call       j_dcgettext                                 ; dcgettext
000000000000228a         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
000000000000228d         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002290         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002295         jmp        loc_2169
000000000000229a         align      32                                          ; End of unwind block (FDE at 0x833c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     buffer_or_output:
00000000000022a0         push       r14                                         ; Begin of unwind block (FDE at 0x83b4), CODE XREF=relpath+269, relpath+333, relpath+398, relpath+438, relpath+455
00000000000022a2         push       r13
00000000000022a4         mov        r14, rdi
00000000000022a7         push       r12
00000000000022a9         push       rbp
00000000000022aa         push       rbx
00000000000022ab         mov        r13, qword [rsi]
00000000000022ae         test       r13, r13
00000000000022b1         je         loc_2300

00000000000022b3         mov        r12, rdx
00000000000022b6         mov        rbx, rsi
00000000000022b9         call       j_strlen                                    ; strlen
00000000000022be         mov        rbp, rax
00000000000022c1         cmp        qword [r12], rbp
00000000000022c5         mov        eax, 0x1
00000000000022ca         ja         loc_22d8

00000000000022cc         pop        rbx
00000000000022cd         pop        rbp
00000000000022ce         pop        r12
00000000000022d0         pop        r13
00000000000022d2         pop        r14
00000000000022d4         ret
                        ; endp
00000000000022d5         align      8

                     loc_22d8:
00000000000022d8         lea        rdx, qword [rbp+1]                          ; argument "__n" for method j_memcpy, CODE XREF=buffer_or_output+42
00000000000022dc         mov        rsi, r14                                    ; argument "__src" for method j_memcpy
00000000000022df         mov        rdi, r13                                    ; argument "__dest" for method j_memcpy
00000000000022e2         call       j_memcpy                                    ; memcpy
00000000000022e7         add        qword [rbx], rbp
00000000000022ea         sub        qword [r12], rbp
00000000000022ee         xor        eax, eax
00000000000022f0         pop        rbx
00000000000022f1         pop        rbp
00000000000022f2         pop        r12
00000000000022f4         pop        r13
00000000000022f6         pop        r14
00000000000022f8         ret
                        ; endp
00000000000022f9         align      256

                     loc_2300:
0000000000002300         mov        rsi, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fputs_unlocked, stdout@@GLIBC_2.2.5, CODE XREF=buffer_or_output+17
0000000000002307         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000230c         pop        rbx
000000000000230d         xor        eax, eax
000000000000230f         pop        rbp
0000000000002310         pop        r12
0000000000002312         pop        r13
0000000000002314         pop        r14
0000000000002316         ret
                        ; endp
0000000000002317         align      32                                          ; End of unwind block (FDE at 0x83b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72


                     relpath:
0000000000002320         push       r15                                         ; Begin of unwind block (FDE at 0x8414), CODE XREF=main+670
0000000000002322         push       r14
0000000000002324         push       r13
0000000000002326         push       r12
0000000000002328         push       rbp
0000000000002329         push       rbx
000000000000232a         sub        rsp, 0x18
000000000000232e         movzx      r8d, byte [rdi+1]
0000000000002333         mov        qword [rsp+0x48+var_48], rcx
0000000000002337         movzx      ecx, byte [rsi+1]
000000000000233b         mov        qword [rsp+0x48+var_40], rdx
0000000000002340         cmp        cl, 0x2f
0000000000002343         sete       r9b
0000000000002347         cmp        r8b, 0x2f
000000000000234b         sete       dl
000000000000234e         xor        eax, eax
0000000000002350         cmp        r9b, dl
0000000000002353         je         loc_2368

                     loc_2355:
0000000000002355         add        rsp, 0x18                                   ; CODE XREF=relpath+88, relpath+193, relpath+562
0000000000002359         pop        rbx
000000000000235a         pop        rbp
000000000000235b         pop        r12
000000000000235d         pop        r13
000000000000235f         pop        r14
0000000000002361         pop        r15
0000000000002363         ret
                        ; endp
0000000000002364         align      8

                     loc_2368:
0000000000002368         movzx      edx, byte [rdi]                             ; CODE XREF=relpath+51
000000000000236b         movzx      r10d, byte [rsi]
000000000000236f         test       dl, dl
0000000000002371         sete       r9b
0000000000002375         test       r10b, r10b
0000000000002378         je         loc_2355

000000000000237a         cmp        r10b, dl
000000000000237d         setne      al
0000000000002380         or         al, r9b
0000000000002383         jne        loc_2550

0000000000002389         xor        edx, edx
000000000000238b         xor        r9d, r9d
000000000000238e         jmp        loc_23b4

                     loc_2390:
0000000000002390         add        rdx, 0x1                                    ; CODE XREF=relpath+169
0000000000002394         cmp        r8b, cl
0000000000002397         jne        loc_2530

000000000000239d         test       r10b, r10b
00000000000023a0         jne        loc_2530

00000000000023a6         mov        r10d, ecx
00000000000023a9         movzx      r8d, byte [rdi+rdx+1]
00000000000023af         movzx      ecx, byte [rsi+rdx+1]

                     loc_23b4:
00000000000023b4         lea        r11d, dword [rdx+1]                         ; CODE XREF=relpath+110
00000000000023b8         cmp        r10b, 0x2f
00000000000023bc         cmove      r9d, r11d
00000000000023c0         test       r8b, r8b
00000000000023c3         sete       r10b
00000000000023c7         test       cl, cl
00000000000023c9         jne        loc_2390

00000000000023cb         cmp        r8b, 0x2f
00000000000023cf         je         loc_2540

                     loc_23d5:
00000000000023d5         test       r10b, r10b                                  ; CODE XREF=relpath+531
00000000000023d8         jne        loc_2540

                     loc_23de:
00000000000023de         test       r9d, r9d                                    ; CODE XREF=relpath+537
00000000000023e1         je         loc_2355

                     loc_23e7:
00000000000023e7         movsxd     r9, r9d                                     ; CODE XREF=relpath+547
00000000000023ea         lea        r12, qword [rsi+r9]
00000000000023ee         lea        rbx, qword [rdi+r9]
00000000000023f2         movzx      eax, byte [r12]
00000000000023f7         cmp        al, 0x2f
00000000000023f9         jne        loc_2405

00000000000023fb         movzx      eax, byte [r12+1]
0000000000002401         add        r12, 0x1

                     loc_2405:
0000000000002405         xor        edx, edx                                    ; CODE XREF=relpath+217
0000000000002407         cmp        byte [rbx], 0x2f
000000000000240a         sete       dl
000000000000240d         add        rbx, rdx
0000000000002410         test       al, al
0000000000002412         jne        loc_2458

0000000000002414         cmp        byte [rbx], 0x0
0000000000002417         lea        rax, qword [aOrAvailableLoc+53]             ; 0x74dd
000000000000241e         lea        rsi, qword [rsp+0x48+var_40]
0000000000002423         mov        rdx, rsp
0000000000002426         cmove      rbx, rax
000000000000242a         mov        rdi, rbx
000000000000242d         call       buffer_or_output                            ; buffer_or_output
0000000000002432         mov        ebp, eax

                     loc_2434:
0000000000002434         test       bpl, bpl                                    ; CODE XREF=relpath+419, relpath+466
0000000000002437         jne        loc_2500

                     loc_243d:
000000000000243d         add        rsp, 0x18                                   ; CODE XREF=relpath+523
0000000000002441         mov        eax, ebp
0000000000002443         pop        rbx
0000000000002444         xor        eax, 0x1
0000000000002447         pop        rbp
0000000000002448         pop        r12
000000000000244a         pop        r13
000000000000244c         pop        r14
000000000000244e         pop        r15
0000000000002450         ret
                        ; endp
0000000000002451         align      8

                     loc_2458:
0000000000002458         lea        r13, qword [rsp+0x48+var_40]                ; CODE XREF=relpath+242
000000000000245d         mov        r14, rsp
0000000000002460         lea        rdi, qword [aOrAvailableLoc+52]             ; 0x74dc
0000000000002467         mov        rdx, r14
000000000000246a         mov        rsi, r13
000000000000246d         call       buffer_or_output                            ; buffer_or_output
0000000000002472         mov        ebp, eax
0000000000002474         movzx      eax, byte [r12]
0000000000002479         test       al, al
000000000000247b         je         loc_24c0

000000000000247d         lea        r15, qword [aOrAvailableLoc+51]             ; 0x74db
0000000000002484         jmp        loc_249d
0000000000002486         align      16

                     loc_2490:
0000000000002490         add        r12, 0x1                                    ; CODE XREF=relpath+383
0000000000002494         movzx      eax, byte [r12]
0000000000002499         test       al, al
000000000000249b         je         loc_24c0

                     loc_249d:
000000000000249d         cmp        al, 0x2f                                    ; CODE XREF=relpath+356, relpath+412
000000000000249f         jne        loc_2490

00000000000024a1         add        r12, 0x1
00000000000024a5         mov        rdx, r14
00000000000024a8         mov        rsi, r13
00000000000024ab         mov        rdi, r15
00000000000024ae         call       buffer_or_output                            ; buffer_or_output
00000000000024b3         or         ebp, eax
00000000000024b5         movzx      eax, byte [r12]
00000000000024ba         test       al, al
00000000000024bc         jne        loc_249d

00000000000024be         nop

                     loc_24c0:
00000000000024c0         cmp        byte [rbx], 0x0                             ; CODE XREF=relpath+347, relpath+379
00000000000024c3         je         loc_2434

00000000000024c9         lea        rdi, qword [aLibs+6]                        ; 0x75fe
00000000000024d0         mov        rdx, r14
00000000000024d3         mov        rsi, r13
00000000000024d6         call       buffer_or_output                            ; buffer_or_output
00000000000024db         mov        rdx, r14
00000000000024de         mov        r12d, eax
00000000000024e1         mov        rsi, r13
00000000000024e4         mov        rdi, rbx
00000000000024e7         call       buffer_or_output                            ; buffer_or_output
00000000000024ec         or         r12d, eax
00000000000024ef         or         ebp, r12d
00000000000024f2         jmp        loc_2434
00000000000024f7         align      256

                     loc_2500:
0000000000002500         lea        rsi, qword [aGeneratingRela]                ; argument "msgid" for method j_dcgettext, "generating relative path", CODE XREF=relpath+279
0000000000002507         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002509         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000250e         call       j_dcgettext                                 ; dcgettext
0000000000002513         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x750d
000000000000251a         mov        rcx, rax
000000000000251d         mov        esi, 0x24                                   ; argument "__errnum" for method j_error
0000000000002522         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002524         xor        eax, eax
0000000000002526         call       j_error                                     ; error
000000000000252b         jmp        loc_243d

                     loc_2530:
0000000000002530         cmp        cl, 0x2f                                    ; CODE XREF=relpath+119, relpath+128
0000000000002533         je         loc_23d5

0000000000002539         jmp        loc_23de
000000000000253e         align      64

                     loc_2540:
0000000000002540         mov        r9d, r11d                                   ; CODE XREF=relpath+175, relpath+184
0000000000002543         jmp        loc_23e7
0000000000002548         align      16

                     loc_2550:
0000000000002550         xor        eax, eax                                    ; CODE XREF=relpath+99
0000000000002552         jmp        loc_2355
0000000000002557         align      32                                          ; End of unwind block (FDE at 0x8414)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_A8: int64_t, -168
        ;    var_C0: int32_t, -192
        ;    var_D8: int8_t, -216
        ;    var_E0: int64_t, -224
        ;    var_E8: int64_t, -232
        ;    var_F0: int64_t, -240
        ;    var_F8: int64_t, -248
        ;    var_FC: int32_t, -252
        ;    var_FD: int8_t, -253
        ;    var_108: int64_t, -264
        ;    var_110: int64_t, -272
        ;    var_114: int32_t, -276


                     canonicalize_filename_mode:
0000000000002560         push       r15                                         ; Begin of unwind block (FDE at 0x847c), CODE XREF=realpath_canon+8, realpath_canon+38
0000000000002562         push       r14
0000000000002564         push       r13
0000000000002566         push       r12
0000000000002568         push       rbp
0000000000002569         push       rbx
000000000000256a         sub        rsp, 0xe8
0000000000002571         mov        rax, qword [fs:0x28]
000000000000257a         mov        qword [rsp+0x118+var_40], rax
0000000000002582         xor        eax, eax
0000000000002584         mov        eax, esi
0000000000002586         and        eax, 0x4
0000000000002589         setne      byte [rsp+0x118+var_FD]
000000000000258e         and        esi, 0x3
0000000000002591         mov        dword [rsp+0x118+var_FC], eax
0000000000002595         lea        eax, dword [rsi-1]
0000000000002598         mov        dword [rsp+0x118+var_114], esi
000000000000259c         test       esi, eax
000000000000259e         jne        loc_2af0

00000000000025a4         test       rdi, rdi
00000000000025a7         mov        r14, rdi
00000000000025aa         je         loc_2af0

00000000000025b0         movzx      eax, byte [rdi]
00000000000025b3         test       al, al
00000000000025b5         je         loc_2b30

00000000000025bb         cmp        al, 0x2f
00000000000025bd         je         loc_2a80

00000000000025c3         call       xgetcwd                                     ; xgetcwd
00000000000025c8         test       rax, rax
00000000000025cb         mov        rbp, rax
00000000000025ce         je         loc_2780

00000000000025d4         mov        rdi, rax                                    ; argument "__s" for method j_strlen
00000000000025d7         call       j_strlen                                    ; strlen
00000000000025dc         cmp        rax, 0xfff
00000000000025e2         mov        r15, rax
00000000000025e5         jbe        loc_2aa0

00000000000025eb         add        r15, rbp
00000000000025ee         mov        rbx, r15

                     loc_25f1:
00000000000025f1         lea        rax, qword [rsp+0x118+var_D8]               ; CODE XREF=sub_2a7a+33, sub_2a7a+64
00000000000025f6         mov        qword [rsp+0x118+var_F8], r14
00000000000025fb         mov        qword [rsp+0x118+var_108], 0x0
0000000000002604         mov        qword [rsp+0x118+var_E8], 0x0
000000000000260d         mov        qword [rsp+0x118+var_F0], 0x0
0000000000002616         mov        qword [rsp+0x118+var_110], rax

                     loc_261b:
000000000000261b         movzx      eax, byte [r14]                             ; CODE XREF=canonicalize_filename_mode+981, canonicalize_filename_mode+1008, sub_2a7a+274
000000000000261f         test       al, al
0000000000002621         je         loc_272f

0000000000002627         nop        word [rax+rax]

                     loc_2630:
0000000000002630         cmp        al, 0x2f                                    ; CODE XREF=canonicalize_filename_mode+457
0000000000002632         jne        loc_264c

0000000000002634         nop        dword [rax]

                     loc_2638:
0000000000002638         add        r14, 0x1                                    ; CODE XREF=canonicalize_filename_mode+226
000000000000263c         movzx      eax, byte [r14]
0000000000002640         cmp        al, 0x2f
0000000000002642         je         loc_2638

0000000000002644         test       al, al
0000000000002646         je         loc_2910

                     loc_264c:
000000000000264c         mov        r13, r14                                    ; CODE XREF=canonicalize_filename_mode+210
000000000000264f         jmp        loc_265d
0000000000002651         align      8

                     loc_2658:
0000000000002658         cmp        dl, 0x2f                                    ; CODE XREF=canonicalize_filename_mode+264
000000000000265b         je         loc_266a

                     loc_265d:
000000000000265d         add        r13, 0x1                                    ; CODE XREF=canonicalize_filename_mode+239
0000000000002661         movzx      edx, byte [r13]
0000000000002666         test       dl, dl
0000000000002668         jne        loc_2658

                     loc_266a:
000000000000266a         cmp        r13, r14                                    ; CODE XREF=canonicalize_filename_mode+251, canonicalize_filename_mode+947
000000000000266d         je         loc_272f

0000000000002673         mov        r12, r13
0000000000002676         sub        r12, r14
0000000000002679         cmp        r12, 0x1
000000000000267d         je         loc_2850

0000000000002683         cmp        r12, 0x2
0000000000002687         jne        loc_2691

0000000000002689         cmp        al, 0x2e
000000000000268b         je         loc_2920

                     loc_2691:
0000000000002691         cmp        byte [r15-1], 0x2f                          ; CODE XREF=canonicalize_filename_mode+295, canonicalize_filename_mode+754, canonicalize_filename_mode+965
0000000000002696         je         loc_26a0

0000000000002698         mov        byte [r15], 0x2f
000000000000269c         add        r15, 0x1

                     loc_26a0:
00000000000026a0         lea        rax, qword [r15+r12]                        ; CODE XREF=canonicalize_filename_mode+310
00000000000026a4         cmp        rbx, rax
00000000000026a7         ja         loc_26da

00000000000026a9         sub        rbx, rbp
00000000000026ac         sub        r15, rbp
00000000000026af         mov        rdi, rbp                                    ; argument #1 for method xrealloc
00000000000026b2         lea        rax, qword [r12+rbx+1]
00000000000026b7         add        rbx, 0x1000
00000000000026be         cmp        r12, 0x1000
00000000000026c5         cmovge     rbx, rax
00000000000026c9         mov        rsi, rbx                                    ; argument #2 for method xrealloc
00000000000026cc         call       xrealloc                                    ; xrealloc
00000000000026d1         mov        rbp, rax
00000000000026d4         add        rbx, rax
00000000000026d7         add        r15, rax

                     loc_26da:
00000000000026da         mov        rdi, r15                                    ; argument "__dest" for method j_memcpy, CODE XREF=canonicalize_filename_mode+327
00000000000026dd         mov        rdx, r12                                    ; argument "__n" for method j_memcpy
00000000000026e0         mov        rsi, r14                                    ; argument "__src" for method j_memcpy
00000000000026e3         call       j_memcpy                                    ; memcpy
00000000000026e8         cmp        dword [rsp+0x118+var_114], 0x2
00000000000026ed         lea        r15, qword [r15+r12]
00000000000026f1         mov        byte [r15], 0x0
00000000000026f5         jne        loc_27b0

00000000000026fb         cmp        byte [rsp+0x118+var_FD], 0x0
0000000000002700         je         loc_27b0

                     loc_2706:
0000000000002706         mov        dword [rsp+0x118+var_C0], 0x0               ; CODE XREF=canonicalize_filename_mode+656

                     loc_270e:
000000000000270e         cmp        byte [r13], 0x0                             ; CODE XREF=canonicalize_filename_mode+795
0000000000002713         je         loc_2720

0000000000002715         cmp        dword [rsp+0x118+var_114], 0x2
000000000000271a         jne        loc_2b77

                     loc_2720:
0000000000002720         mov        r14, r13                                    ; CODE XREF=canonicalize_filename_mode+435, canonicalize_filename_mode+696, canonicalize_filename_mode+760, canonicalize_filename_mode+789, canonicalize_filename_mode+861, canonicalize_filename_mode+1021, canonicalize_filename_mode+1032, canonicalize_filename_mode+1249, sub_2a7a+156
0000000000002723         movzx      eax, byte [r14]
0000000000002727         test       al, al
0000000000002729         jne        loc_2630

                     loc_272f:
000000000000272f         lea        rax, qword [rbp+1]                          ; CODE XREF=canonicalize_filename_mode+193, canonicalize_filename_mode+269
0000000000002733         cmp        r15, rax
0000000000002736         jbe        loc_2743

0000000000002738         cmp        byte [r15-1], 0x2f
000000000000273d         jne        loc_2743

000000000000273f         sub        r15, 0x1

                     loc_2743:
0000000000002743         lea        rax, qword [r15+1]                          ; CODE XREF=canonicalize_filename_mode+470, canonicalize_filename_mode+477
0000000000002747         mov        byte [r15], 0x0
000000000000274b         cmp        rbx, rax
000000000000274e         je         loc_2762

0000000000002750         sub        r15, rbp
0000000000002753         mov        rdi, rbp                                    ; argument #1 for method xrealloc
0000000000002756         lea        rsi, qword [r15+1]                          ; argument #2 for method xrealloc
000000000000275a         call       xrealloc                                    ; xrealloc
000000000000275f         mov        rbp, rax

                     loc_2762:
0000000000002762         mov        rdi, qword [rsp+0x118+var_F0]               ; argument "__ptr" for method j_free, CODE XREF=canonicalize_filename_mode+494
0000000000002767         call       j_free                                      ; free
000000000000276c         mov        rax, qword [rsp+0x118+var_108]
0000000000002771         test       rax, rax
0000000000002774         je         loc_2780

0000000000002776         mov        rdi, rax                                    ; argument #1 for method hash_free
0000000000002779         call       hash_free                                   ; hash_free
000000000000277e         nop

                     loc_2780:
0000000000002780         mov        rcx, qword [rsp+0x118+var_40]               ; CODE XREF=canonicalize_filename_mode+110, canonicalize_filename_mode+532, canonicalize_filename_mode+930, sub_2a7a+131, sub_2a7a+195
0000000000002788         xor        rcx, qword [fs:0x28]
0000000000002791         mov        rax, rbp
0000000000002794         jne        loc_2b91

000000000000279a         add        rsp, 0xe8
00000000000027a1         pop        rbx
00000000000027a2         pop        rbp
00000000000027a3         pop        r12
00000000000027a5         pop        r13
00000000000027a7         pop        r14
00000000000027a9         pop        r15
00000000000027ab         ret
                        ; endp
00000000000027ac         align      16

                     loc_27b0:
00000000000027b0         mov        eax, dword [rsp+0x118+var_FC]               ; CODE XREF=canonicalize_filename_mode+405, canonicalize_filename_mode+416
00000000000027b4         mov        rdx, qword [rsp+0x118+var_110]
00000000000027b9         mov        rsi, rbp
00000000000027bc         mov        edi, 0x1
00000000000027c1         test       eax, eax
00000000000027c3         je         loc_2880

00000000000027c9         call       j___xstat                                   ; __xstat
00000000000027ce         test       eax, eax
00000000000027d0         setne      al

                     loc_27d3:
00000000000027d3         test       al, al                                      ; CODE XREF=canonicalize_filename_mode+810
00000000000027d5         je         loc_2860

00000000000027db         call       j___errno_location                          ; __errno_location
00000000000027e0         mov        r14, rax
00000000000027e3         mov        edx, dword [rax]
00000000000027e5         mov        eax, dword [rsp+0x118+var_114]
00000000000027e9         test       eax, eax
00000000000027eb         je         loc_281e

00000000000027ed         cmp        eax, 0x1
00000000000027f0         jne        loc_2706

00000000000027f6         lea        rsi, qword [aLibs+6]                        ; argument "__accept" for method j_strspn, 0x75fe
00000000000027fd         mov        rdi, r13                                    ; argument "__s" for method j_strspn
0000000000002800         mov        dword [rsp+0x118+var_E0], edx
0000000000002804         call       j_strspn                                    ; strspn
0000000000002809         cmp        byte [r13+rax], 0x0
000000000000280f         mov        edx, dword [rsp+0x118+var_E0]
0000000000002813         jne        loc_281e

0000000000002815         cmp        edx, 0x2
0000000000002818         je         loc_2720

                     loc_281e:
000000000000281e         mov        r12, r14                                    ; CODE XREF=canonicalize_filename_mode+651, canonicalize_filename_mode+691

                     loc_2821:
0000000000002821         mov        rdi, qword [rsp+0x118+var_F0]               ; argument "__ptr" for method j_free, CODE XREF=sub_2a7a+266
0000000000002826         mov        dword [rsp+0x118+var_114], edx
000000000000282a         call       j_free                                      ; free
000000000000282f         mov        rdi, rbp                                    ; argument "__ptr" for method j_free
0000000000002832         call       j_free                                      ; free
0000000000002837         cmp        qword [rsp+0x118+var_108], 0x0
000000000000283d         mov        edx, dword [rsp+0x118+var_114]
0000000000002841         je         loc_28fc

0000000000002847         jmp        loc_28ea
000000000000284c         align      16

                     loc_2850:
0000000000002850         cmp        al, 0x2e                                    ; CODE XREF=canonicalize_filename_mode+285
0000000000002852         jne        loc_2691

0000000000002858         jmp        loc_2720
000000000000285d         align      32

                     loc_2860:
0000000000002860         mov        eax, dword [rsp+0x118+var_C0]               ; CODE XREF=canonicalize_filename_mode+629
0000000000002864         and        eax, 0xf000
0000000000002869         cmp        eax, 0xa000
000000000000286e         je         loc_2890

0000000000002870         cmp        eax, 0x4000
0000000000002875         je         loc_2720

000000000000287b         jmp        loc_270e

                     loc_2880:
0000000000002880         call       j___lxstat                                  ; __lxstat, CODE XREF=canonicalize_filename_mode+611
0000000000002885         test       eax, eax
0000000000002887         setne      al
000000000000288a         jmp        loc_27d3
000000000000288f         align      16

                     loc_2890:
0000000000002890         cmp        qword [rsp+0x118+var_108], 0x0              ; CODE XREF=canonicalize_filename_mode+782
0000000000002896         je         loc_2a46

                     loc_289c:
000000000000289c         mov        rdx, qword [rsp+0x118+var_110]              ; argument #3 for method seen_file, CODE XREF=canonicalize_filename_mode+1295
00000000000028a1         mov        rsi, qword [rsp+0x118+var_F8]               ; argument #2 for method seen_file
00000000000028a6         mov        rdi, qword [rsp+0x118+var_108]              ; argument #1 for method seen_file
00000000000028ab         call       seen_file                                   ; seen_file
00000000000028b0         test       al, al
00000000000028b2         je         loc_2970

00000000000028b8         cmp        dword [rsp+0x118+var_114], 0x2
00000000000028bd         je         loc_2720

00000000000028c3         call       j___errno_location                          ; __errno_location
00000000000028c8         mov        edx, 0x28
00000000000028cd         mov        r12, rax

                     loc_28d0:
00000000000028d0         mov        rdi, qword [rsp+0x118+var_F0]               ; argument "__ptr" for method j_free, CODE XREF=sub_2a7a+165
00000000000028d5         mov        dword [rsp+0x118+var_114], edx
00000000000028d9         call       j_free                                      ; free
00000000000028de         mov        rdi, rbp                                    ; argument "__ptr" for method j_free
00000000000028e1         call       j_free                                      ; free
00000000000028e6         mov        edx, dword [rsp+0x118+var_114]

                     loc_28ea:
00000000000028ea         mov        rdi, qword [rsp+0x118+var_108]              ; argument #1 for method hash_free, CODE XREF=canonicalize_filename_mode+743
00000000000028ef         mov        dword [rsp+0x118+var_114], edx
00000000000028f3         call       hash_free                                   ; hash_free
00000000000028f8         mov        edx, dword [rsp+0x118+var_114]

                     loc_28fc:
00000000000028fc         mov        dword [r12], edx                            ; CODE XREF=canonicalize_filename_mode+737
0000000000002900         xor        ebp, ebp
0000000000002902         jmp        loc_2780
0000000000002907         align      16

                     loc_2910:
0000000000002910         mov        r13, r14                                    ; CODE XREF=canonicalize_filename_mode+230
0000000000002913         jmp        loc_266a
0000000000002918         align      32

                     loc_2920:
0000000000002920         cmp        byte [r14+1], 0x2e                          ; CODE XREF=canonicalize_filename_mode+299
0000000000002925         jne        loc_2691

000000000000292b         lea        rax, qword [rbp+1]
000000000000292f         mov        r14, r13
0000000000002932         cmp        r15, rax
0000000000002935         jbe        loc_261b

000000000000293b         lea        rax, qword [r15-1]
000000000000293f         cmp        rbp, rax
0000000000002942         jae        loc_2b89

0000000000002948         cmp        byte [r15-2], 0x2f
000000000000294d         mov        r15, rax
0000000000002950         je         loc_261b

                     loc_2956:
0000000000002956         sub        r15, 0x1                                    ; CODE XREF=canonicalize_filename_mode+1038
000000000000295a         cmp        rbp, r15
000000000000295d         je         loc_2720

0000000000002963         cmp        byte [r15-1], 0x2f
0000000000002968         je         loc_2720

000000000000296e         jmp        loc_2956

                     loc_2970:
0000000000002970         mov        rdx, qword [rsp+0x118+var_110]              ; argument #3 for method record_file, CODE XREF=canonicalize_filename_mode+850
0000000000002975         mov        rsi, qword [rsp+0x118+var_F8]               ; argument #2 for method record_file
000000000000297a         mov        rdi, qword [rsp+0x118+var_108]              ; argument #1 for method record_file
000000000000297f         call       record_file                                 ; record_file
0000000000002984         mov        rsi, qword [rsp+0x118+var_A8]
0000000000002989         mov        rdi, rbp
000000000000298c         call       areadlink_with_size                         ; areadlink_with_size
0000000000002991         test       rax, rax
0000000000002994         mov        r14, rax
0000000000002997         je         loc_2b02

000000000000299d         mov        rdi, rax                                    ; argument "__s" for method j_strlen
00000000000029a0         call       j_strlen                                    ; strlen
00000000000029a5         mov        rdi, r13                                    ; argument "__s" for method j_strlen
00000000000029a8         mov        r12, rax
00000000000029ab         mov        qword [rsp+0x118+var_F8], rax
00000000000029b0         call       j_strlen                                    ; strlen
00000000000029b5         cmp        qword [rsp+0x118+var_E8], 0x0
00000000000029bb         mov        rdx, rax
00000000000029be         lea        rcx, qword [r12+rdx+1]
00000000000029c3         je         loc_2abf

00000000000029c9         cmp        qword [rsp+0x118+var_E8], rcx
00000000000029ce         jae        loc_29f1

00000000000029d0         mov        rdi, qword [rsp+0x118+var_F0]               ; argument #1 for method xrealloc
00000000000029d5         mov        rsi, rcx                                    ; argument #2 for method xrealloc
00000000000029d8         mov        qword [rsp+0x118+var_E0], rdx
00000000000029dd         mov        qword [rsp+0x118+var_E8], rcx
00000000000029e2         call       xrealloc                                    ; xrealloc
00000000000029e7         mov        rdx, qword [rsp+0x118+var_E0]
00000000000029ec         mov        qword [rsp+0x118+var_F0], rax

                     loc_29f1:
00000000000029f1         mov        r12, qword [rsp+0x118+var_F0]               ; CODE XREF=canonicalize_filename_mode+1134, sub_2a7a+113
00000000000029f6         mov        rdi, qword [rsp+0x118+var_F8]
00000000000029fb         add        rdx, 0x1                                    ; argument "__n" for method j_memmove
00000000000029ff         mov        rsi, r13                                    ; argument "__src" for method j_memmove
0000000000002a02         add        rdi, r12                                    ; argument "__dest" for method j_memmove
0000000000002a05         mov        r13, r12
0000000000002a08         call       j_memmove                                   ; memmove
0000000000002a0d         mov        rdx, qword [rsp+0x118+var_F8]               ; argument "__n" for method j_memcpy
0000000000002a12         mov        rsi, r14                                    ; argument "__src" for method j_memcpy
0000000000002a15         mov        rdi, r12                                    ; argument "__dest" for method j_memcpy
0000000000002a18         call       j_memcpy                                    ; memcpy
0000000000002a1d         cmp        byte [r14], 0x2f
0000000000002a21         mov        qword [rsp+0x118+var_F8], r12
0000000000002a26         lea        rax, qword [rbp+1]
0000000000002a2a         je         loc_2b24

0000000000002a30         cmp        r15, rax
0000000000002a33         ja         loc_2b42

                     loc_2a39:
0000000000002a39         mov        rdi, r14                                    ; argument "__ptr" for method j_free, CODE XREF=sub_2a7a+177, sub_2a7a+219, sub_2a7a+234, sub_2a7a+245
0000000000002a3c         call       j_free                                      ; free
0000000000002a41         jmp        loc_2720

                     loc_2a46:
0000000000002a46         lea        r8, qword [triple_free]                     ; argument #5 for method hash_initialize, triple_free, CODE XREF=canonicalize_filename_mode+822
0000000000002a4d         lea        rcx, qword [triple_compare_ino_str]         ; argument #4 for method hash_initialize, triple_compare_ino_str
0000000000002a54         xor        esi, esi                                    ; argument #2 for method hash_initialize
0000000000002a56         lea        rdx, qword [triple_hash]                    ; argument #3 for method hash_initialize, triple_hash
0000000000002a5d         mov        edi, 0x7                                    ; argument #1 for method hash_initialize
0000000000002a62         call       hash_initialize                             ; hash_initialize
0000000000002a67         test       rax, rax
0000000000002a6a         mov        qword [rsp+0x118+var_108], rax
0000000000002a6f         jne        loc_289c

0000000000002a75         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2a7a:
0000000000002a7a         nop        word [rax+rax]
                        ; endp

                     loc_2a80:
0000000000002a80         mov        edi, 0x1000                                 ; argument #1 for method xmalloc, CODE XREF=canonicalize_filename_mode+93
0000000000002a85         call       xmalloc                                     ; xmalloc
0000000000002a8a         mov        rbp, rax
0000000000002a8d         lea        rbx, qword [rax+0x1000]
0000000000002a94         lea        r15, qword [rax+1]
0000000000002a98         mov        byte [rax], 0x2f
0000000000002a9b         jmp        loc_25f1

                     loc_2aa0:
0000000000002aa0         mov        rdi, rbp                                    ; argument #1 for method xrealloc, CODE XREF=canonicalize_filename_mode+133
0000000000002aa3         mov        esi, 0x1000                                 ; argument #2 for method xrealloc
0000000000002aa8         call       xrealloc                                    ; xrealloc
0000000000002aad         mov        rbp, rax
0000000000002ab0         add        r15, rax
0000000000002ab3         lea        rbx, qword [rax+0x1000]
0000000000002aba         jmp        loc_25f1

                     loc_2abf:
0000000000002abf         cmp        rcx, 0x1000                                 ; CODE XREF=canonicalize_filename_mode+1123
0000000000002ac6         mov        eax, 0x1000
0000000000002acb         mov        qword [rsp+0x118+var_E0], rdx
0000000000002ad0         cmovae     rax, rcx
0000000000002ad4         mov        rdi, rax                                    ; argument #1 for method xmalloc
0000000000002ad7         mov        qword [rsp+0x118+var_E8], rax
0000000000002adc         call       xmalloc                                     ; xmalloc
0000000000002ae1         mov        rdx, qword [rsp+0x118+var_E0]
0000000000002ae6         mov        qword [rsp+0x118+var_F0], rax
0000000000002aeb         jmp        loc_29f1

                     loc_2af0:
0000000000002af0         call       j___errno_location                          ; __errno_location, CODE XREF=canonicalize_filename_mode+62, canonicalize_filename_mode+74
0000000000002af5         xor        ebp, ebp
0000000000002af7         mov        dword [rax], 0x16
0000000000002afd         jmp        loc_2780

                     loc_2b02:
0000000000002b02         call       j___errno_location                          ; __errno_location, CODE XREF=canonicalize_filename_mode+1079
0000000000002b07         cmp        dword [rsp+0x118+var_114], 0x2
0000000000002b0c         mov        r14, rax
0000000000002b0f         mov        edx, dword [rax]
0000000000002b11         jne        loc_2b1c

0000000000002b13         cmp        edx, 0xc
0000000000002b16         jne        loc_2720

                     loc_2b1c:
0000000000002b1c         mov        r12, r14                                    ; CODE XREF=sub_2a7a+151
0000000000002b1f         jmp        loc_28d0

                     loc_2b24:
0000000000002b24         mov        byte [rbp], 0x2f                            ; CODE XREF=canonicalize_filename_mode+1226
0000000000002b28         mov        r15, rax
0000000000002b2b         jmp        loc_2a39

                     loc_2b30:
0000000000002b30         call       j___errno_location                          ; __errno_location, CODE XREF=canonicalize_filename_mode+85
0000000000002b35         xor        ebp, ebp
0000000000002b37         mov        dword [rax], 0x2
0000000000002b3d         jmp        loc_2780

                     loc_2b42:
0000000000002b42         lea        rax, qword [r15-1]                          ; CODE XREF=canonicalize_filename_mode+1235
0000000000002b46         cmp        rbp, rax
0000000000002b49         jae        loc_2b52

0000000000002b4b         cmp        byte [r15-2], 0x2f
0000000000002b50         jne        loc_2b5d

                     loc_2b52:
0000000000002b52         mov        r15, rax                                    ; CODE XREF=sub_2a7a+207
0000000000002b55         jmp        loc_2a39

                     loc_2b5a:
0000000000002b5a         mov        rax, r15                                    ; CODE XREF=sub_2a7a+251

                     loc_2b5d:
0000000000002b5d         lea        r15, qword [rax-1]                          ; CODE XREF=sub_2a7a+214
0000000000002b61         cmp        rbp, r15
0000000000002b64         je         loc_2a39

0000000000002b6a         cmp        byte [r15-1], 0x2f
0000000000002b6f         je         loc_2a39

0000000000002b75         jmp        loc_2b5a

                     loc_2b77:
0000000000002b77         call       j___errno_location                          ; __errno_location, CODE XREF=canonicalize_filename_mode+442
0000000000002b7c         mov        edx, 0x14
0000000000002b81         mov        r12, rax
0000000000002b84         jmp        loc_2821

                     loc_2b89:
0000000000002b89         mov        r15, rax                                    ; CODE XREF=canonicalize_filename_mode+994
0000000000002b8c         jmp        loc_261b

                     loc_2b91:
0000000000002b91         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=canonicalize_filename_mode+564
                        ; endp
0000000000002b96         align      32                                          ; End of unwind block (FDE at 0x847c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
0000000000002ba0         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0x84cc), file_name
0000000000002ba7         ret
                        ; endp
0000000000002ba8         align      16                                          ; End of unwind block (FDE at 0x84cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
0000000000002bb0         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x84e0), ignore_EPIPE
0000000000002bb7         ret
                        ; endp
0000000000002bb8         align      64                                          ; End of unwind block (FDE at 0x84e0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
0000000000002bc0         push       rbp                                         ; Begin of unwind block (FDE at 0x84f4), DATA XREF=main+94
0000000000002bc1         push       rbx
0000000000002bc2         sub        rsp, 0x8
0000000000002bc6         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002bcd         call       close_stream                                ; close_stream
0000000000002bd2         test       eax, eax
0000000000002bd4         je         loc_2bec

0000000000002bd6         call       j___errno_location                          ; __errno_location
0000000000002bdb         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
0000000000002be2         mov        rbx, rax
0000000000002be5         je         loc_2c03

0000000000002be7         cmp        dword [rax], 0x20
0000000000002bea         jne        loc_2c03

                     loc_2bec:
0000000000002bec         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
0000000000002bf3         call       close_stream                                ; close_stream
0000000000002bf8         test       eax, eax
0000000000002bfa         jne        loc_2c42

0000000000002bfc         add        rsp, 0x8
0000000000002c00         pop        rbx
0000000000002c01         pop        rbp
0000000000002c02         ret
                        ; endp

                     loc_2c03:
0000000000002c03         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
0000000000002c0a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002c0c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002c11         call       j_dcgettext                                 ; dcgettext
0000000000002c16         mov        rdi, qword [file_name]                      ; file_name
0000000000002c1d         mov        rbp, rax
0000000000002c20         test       rdi, rdi
0000000000002c23         je         loc_2c4d

0000000000002c25         call       quotearg_colon                              ; quotearg_colon
0000000000002c2a         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
0000000000002c2c         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000002c33         mov        rcx, rax
0000000000002c36         mov        r8, rbp
0000000000002c39         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002c3b         xor        eax, eax
0000000000002c3d         call       j_error                                     ; error

                     loc_2c42:
0000000000002c42         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
0000000000002c48         call       j__exit                                     ; _exit
                        ; endp

                     loc_2c4d:
0000000000002c4d         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
0000000000002c4f         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x750d
0000000000002c56         mov        rcx, rax
0000000000002c59         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002c5b         xor        eax, eax
0000000000002c5d         call       j_error                                     ; error
0000000000002c62         jmp        loc_2c42
0000000000002c64         align      16                                          ; End of unwind block (FDE at 0x84f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_38: int64_t, -56
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     record_file:
0000000000002c70         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x8524), CODE XREF=canonicalize_filename_mode+1055
0000000000002c73         je         loc_2cf0

0000000000002c75         push       r13
0000000000002c77         push       r12
0000000000002c79         mov        r13, rdi
0000000000002c7c         push       rbp
0000000000002c7d         push       rbx
0000000000002c7e         mov        r12, rsi
0000000000002c81         mov        edi, 0x18                                   ; argument #1 for method xmalloc
0000000000002c86         mov        rbp, rdx
0000000000002c89         sub        rsp, 0x8
0000000000002c8d         call       xmalloc                                     ; xmalloc
0000000000002c92         mov        rdi, r12
0000000000002c95         mov        rbx, rax
0000000000002c98         call       xstrdup                                     ; xstrdup
0000000000002c9d         mov        qword [rbx], rax
0000000000002ca0         mov        rax, qword [rbp+8]
0000000000002ca4         mov        rsi, rbx                                    ; argument #2 for method hash_insert
0000000000002ca7         mov        rdi, r13                                    ; argument #1 for method hash_insert
0000000000002caa         mov        qword [rbx+8], rax
0000000000002cae         mov        rax, qword [rbp]
0000000000002cb2         mov        qword [rbx+0x10], rax
0000000000002cb6         call       hash_insert                                 ; hash_insert
0000000000002cbb         test       rax, rax
0000000000002cbe         je         loc_2cf2

0000000000002cc0         cmp        rbx, rax
0000000000002cc3         je         loc_2ce0

0000000000002cc5         add        rsp, 0x8
0000000000002cc9         mov        rdi, rbx
0000000000002ccc         pop        rbx
0000000000002ccd         pop        rbp
0000000000002cce         pop        r12
0000000000002cd0         pop        r13
0000000000002cd2         jmp        triple_free                                 ; triple_free
                        ; endp
0000000000002cd7         align      32

                     loc_2ce0:
0000000000002ce0         add        rsp, 0x8                                    ; CODE XREF=record_file+83
0000000000002ce4         pop        rbx
0000000000002ce5         pop        rbp
0000000000002ce6         pop        r12
0000000000002ce8         pop        r13
0000000000002cea         ret
                        ; endp
0000000000002ceb         align      16

                     loc_2cf0:
0000000000002cf0         ret                                                    ; CODE XREF=record_file+3
                        ; endp

                     loc_2cf2:
0000000000002cf2         call       xalloc_die                                  ; xalloc_die, CODE XREF=record_file+78
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40


                     sub_2cf7:
0000000000002cf7         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x8524)
                     seen_file:
0000000000002d00         sub        rsp, 0x28                                   ; Begin of unwind block (FDE at 0x8584), CODE XREF=canonicalize_filename_mode+843
0000000000002d04         mov        rax, qword [fs:0x28]
0000000000002d0d         mov        qword [rsp+0x28+var_10], rax
0000000000002d12         xor        eax, eax
0000000000002d14         test       rdi, rdi
0000000000002d17         je         loc_2d3c

0000000000002d19         mov        rax, qword [rdx+8]
0000000000002d1d         mov        qword [rsp+0x28+var_28], rsi
0000000000002d21         mov        rsi, rsp                                    ; argument #2 for method hash_lookup
0000000000002d24         mov        qword [rsp+0x28+var_20], rax
0000000000002d29         mov        rax, qword [rdx]
0000000000002d2c         mov        qword [rsp+0x28+var_18], rax
0000000000002d31         call       hash_lookup                                 ; hash_lookup
0000000000002d36         test       rax, rax
0000000000002d39         setne      al

                     loc_2d3c:
0000000000002d3c         mov        rcx, qword [rsp+0x28+var_10]                ; CODE XREF=seen_file+23
0000000000002d41         xor        rcx, qword [fs:0x28]
0000000000002d4a         jne        loc_2d51

0000000000002d4c         add        rsp, 0x28
0000000000002d50         ret
                        ; endp

                     loc_2d51:
0000000000002d51         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=seen_file+74
                        ; endp
0000000000002d56         align      32                                          ; End of unwind block (FDE at 0x8584)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     next_prime:
0000000000002d60         cmp        rdi, 0xa                                    ; Begin of unwind block (FDE at 0x85a4), CODE XREF=hash_initialize+123, hash_rehash+123
0000000000002d64         mov        eax, 0xa
0000000000002d69         movabs     r9, 0xaaaaaaaaaaaaaaab
0000000000002d73         cmovb      rdi, rax
0000000000002d77         or         rdi, 0x1
0000000000002d7b         cmp        rdi, 0xffffffffffffffff
0000000000002d7f         je         loc_2def

0000000000002d81         nop        dword [rax]

                     loc_2d88:
0000000000002d88         mov        rax, rdi                                    ; CODE XREF=next_prime+141
0000000000002d8b         mov        rcx, rdi
0000000000002d8e         mul        r9
0000000000002d91         mov        rax, rdx
0000000000002d94         shr        rax, 0x1
0000000000002d97         lea        rax, qword [rax+rax*2]
0000000000002d9b         sub        rcx, rax
0000000000002d9e         cmp        rdi, 0x9
0000000000002da2         mov        rax, rcx
0000000000002da5         jbe        loc_2de0

0000000000002da7         test       rcx, rcx
0000000000002daa         je         loc_2de5

0000000000002dac         mov        r8d, 0x10
0000000000002db2         mov        esi, 0x9
0000000000002db7         mov        ecx, 0x3
0000000000002dbc         jmp        loc_2dc9
0000000000002dbe         align      64

                     loc_2dc0:
0000000000002dc0         add        r8, 0x8                                     ; CODE XREF=next_prime+126
0000000000002dc4         test       rdx, rdx
0000000000002dc7         je         loc_2de5

                     loc_2dc9:
0000000000002dc9         add        rcx, 0x2                                    ; CODE XREF=next_prime+92
0000000000002dcd         xor        edx, edx
0000000000002dcf         mov        rax, rdi
0000000000002dd2         div        rcx
0000000000002dd5         add        rsi, r8
0000000000002dd8         cmp        rsi, rdi
0000000000002ddb         mov        rax, rdx
0000000000002dde         jb         loc_2dc0

                     loc_2de0:
0000000000002de0         test       rax, rax                                    ; CODE XREF=next_prime+69
0000000000002de3         jne        loc_2def

                     loc_2de5:
0000000000002de5         add        rdi, 0x2                                    ; CODE XREF=next_prime+74, next_prime+103
0000000000002de9         cmp        rdi, 0xffffffffffffffff
0000000000002ded         jne        loc_2d88

                     loc_2def:
0000000000002def         mov        rax, rdi                                    ; CODE XREF=next_prime+31, next_prime+131
0000000000002df2         ret
                        ; endp
0000000000002df3         align      512                                         ; End of unwind block (FDE at 0x85a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     raw_hasher:
0000000000002e00         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x85b8), DATA XREF=hash_initialize+4
0000000000002e03         xor        edx, edx
0000000000002e05         ror        rax, 0x3
0000000000002e09         div        rsi
0000000000002e0c         mov        rax, rdx
0000000000002e0f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     raw_comparator:
0000000000002e10         cmp        rdi, rsi                                    ; End of unwind block (FDE at 0x85b8), Begin of unwind block (FDE at 0x85cc), DATA XREF=hash_initialize+48
0000000000002e13         sete       al
0000000000002e16         ret
                        ; endp
0000000000002e17         align      32                                          ; End of unwind block (FDE at 0x85cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     safe_hasher:
0000000000002e20         push       rbx                                         ; Begin of unwind block (FDE at 0x85e0), CODE XREF=hash_find_entry+20, transfer_entries+101, transfer_entries+175, hash_lookup+10, hash_get_next+12
0000000000002e21         mov        rbx, rdi
0000000000002e24         mov        rdi, rsi
0000000000002e27         mov        rsi, qword [rbx+0x10]
0000000000002e2b         call       qword [rbx+0x30]
0000000000002e2e         cmp        qword [rbx+0x10], rax
0000000000002e32         jbe        loc_2e3d

0000000000002e34         shl        rax, 0x4
0000000000002e38         add        rax, qword [rbx]
0000000000002e3b         pop        rbx
0000000000002e3c         ret
                        ; endp

                     loc_2e3d:
0000000000002e3d         call       j_abort                                     ; abort, CODE XREF=safe_hasher+18
                        ; endp
0000000000002e42         align      16                                          ; End of unwind block (FDE at 0x85e0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_find_entry:
0000000000002e50         push       r14                                         ; Begin of unwind block (FDE at 0x85fc), CODE XREF=hash_insert_if_absent+52, hash_insert_if_absent+463, hash_delete+35
0000000000002e52         push       r13
0000000000002e54         mov        r14, rdx
0000000000002e57         push       r12
0000000000002e59         push       rbp
0000000000002e5a         mov        r12, rdi
0000000000002e5d         push       rbx
0000000000002e5e         mov        rbp, rsi
0000000000002e61         mov        r13d, ecx
0000000000002e64         call       safe_hasher                                 ; safe_hasher
0000000000002e69         mov        qword [r14], rax
0000000000002e6c         mov        rsi, qword [rax]
0000000000002e6f         test       rsi, rsi
0000000000002e72         je         loc_2f60

0000000000002e78         cmp        rsi, rbp
0000000000002e7b         mov        rbx, rax
0000000000002e7e         je         loc_2f13

0000000000002e84         mov        rdi, rbp
0000000000002e87         call       qword [r12+0x38]
0000000000002e8c         test       al, al
0000000000002e8e         jne        loc_2f10

0000000000002e94         mov        rax, qword [rbx+8]
0000000000002e98         test       rax, rax
0000000000002e9b         je         loc_2f60

0000000000002ea1         mov        rsi, qword [rax]
0000000000002ea4         cmp        rbp, rsi
0000000000002ea7         jne        loc_2ec9

0000000000002ea9         jmp        loc_2edc
0000000000002eab         align      16

                     loc_2eb0:
0000000000002eb0         mov        rbx, qword [rbx+8]                          ; CODE XREF=hash_find_entry+131
0000000000002eb4         mov        rax, qword [rbx+8]
0000000000002eb8         test       rax, rax
0000000000002ebb         je         loc_2f60

0000000000002ec1         mov        rsi, qword [rax]
0000000000002ec4         cmp        rsi, rbp
0000000000002ec7         je         loc_2edc

                     loc_2ec9:
0000000000002ec9         mov        rdi, rbp                                    ; CODE XREF=hash_find_entry+87
0000000000002ecc         call       qword [r12+0x38]
0000000000002ed1         test       al, al
0000000000002ed3         je         loc_2eb0

0000000000002ed5         mov        rax, qword [rbx+8]
0000000000002ed9         mov        rsi, qword [rax]

                     loc_2edc:
0000000000002edc         test       r13b, r13b                                  ; CODE XREF=hash_find_entry+89, hash_find_entry+119
0000000000002edf         je         loc_2efe

0000000000002ee1         mov        rdx, qword [rax+8]
0000000000002ee5         mov        qword [rbx+8], rdx
0000000000002ee9         mov        qword [rax], 0x0
0000000000002ef0         mov        rdx, qword [r12+0x48]
0000000000002ef5         mov        qword [rax+8], rdx
0000000000002ef9         mov        qword [r12+0x48], rax

                     loc_2efe:
0000000000002efe         pop        rbx                                         ; CODE XREF=hash_find_entry+143, hash_find_entry+198, hash_find_entry+263
0000000000002eff         mov        rax, rsi
0000000000002f02         pop        rbp
0000000000002f03         pop        r12
0000000000002f05         pop        r13
0000000000002f07         pop        r14
0000000000002f09         ret
                        ; endp
0000000000002f0a         align      16

                     loc_2f10:
0000000000002f10         mov        rsi, qword [rbx]                            ; CODE XREF=hash_find_entry+62

                     loc_2f13:
0000000000002f13         test       r13b, r13b                                  ; CODE XREF=hash_find_entry+46
0000000000002f16         je         loc_2efe

0000000000002f18         mov        rax, qword [rbx+8]
0000000000002f1c         test       rax, rax
0000000000002f1f         je         loc_2f50

0000000000002f21         movdqu     xmm0, xmmword [rax]
0000000000002f25         movups     xmmword [rbx], xmm0
0000000000002f28         mov        qword [rax], 0x0
0000000000002f2f         mov        rdx, qword [r12+0x48]
0000000000002f34         mov        qword [rax+8], rdx
0000000000002f38         mov        qword [r12+0x48], rax
0000000000002f3d         mov        rax, rsi
0000000000002f40         pop        rbx
0000000000002f41         pop        rbp
0000000000002f42         pop        r12
0000000000002f44         pop        r13
0000000000002f46         pop        r14
0000000000002f48         ret
                        ; endp
0000000000002f49         align      16

                     loc_2f50:
0000000000002f50         mov        qword [rbx], 0x0                            ; CODE XREF=hash_find_entry+207
0000000000002f57         jmp        loc_2efe
0000000000002f59         align      32

                     loc_2f60:
0000000000002f60         xor        esi, esi                                    ; CODE XREF=hash_find_entry+34, hash_find_entry+75, hash_find_entry+107
0000000000002f62         pop        rbx
0000000000002f63         mov        rax, rsi
0000000000002f66         pop        rbp
0000000000002f67         pop        r12
0000000000002f69         pop        r13
0000000000002f6b         pop        r14
0000000000002f6d         ret
                        ; endp
0000000000002f6e         align      16                                          ; End of unwind block (FDE at 0x85fc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     check_tuning.isra.0:
0000000000002f70         mov        rdx, qword [rdi]                            ; Begin of unwind block (FDE at 0x865c), CODE XREF=hash_initialize+96, hash_initialize+283, hash_insert_if_absent+324, hash_delete+165
0000000000002f73         lea        rcx, qword [default_tuning]                 ; default_tuning
0000000000002f7a         mov        eax, 0x1
0000000000002f7f         cmp        rdx, rcx
0000000000002f82         je         loc_2fe5

0000000000002f84         movss      xmm0, dword [rdx+8]
0000000000002f89         ucomiss    xmm0, dword [float_7594]                    ; float_7594
0000000000002f90         jbe        loc_2fe0

0000000000002f92         movss      xmm1, dword [float_7598]                    ; float_7598
0000000000002f9a         ucomiss    xmm1, xmm0
0000000000002f9d         jbe        loc_2fe0

0000000000002f9f         movss      xmm1, dword [rdx+0xc]
0000000000002fa4         ucomiss    xmm1, dword [float_759c]                    ; float_759c
0000000000002fab         jbe        loc_2fe0

0000000000002fad         movss      xmm1, dword [rdx]
0000000000002fb1         ucomiss    xmm1, dword [float_75a0]                    ; float_75a0
0000000000002fb8         jb         loc_2fe0

0000000000002fba         addss      xmm1, dword [float_7594]                    ; float_7594
0000000000002fc2         movss      xmm2, dword [rdx+4]
0000000000002fc7         ucomiss    xmm2, xmm1
0000000000002fca         jbe        loc_2fe0

0000000000002fcc         movss      xmm3, dword [float_75a4]                    ; float_75a4
0000000000002fd4         ucomiss    xmm3, xmm2
0000000000002fd7         jb         loc_2fe0

0000000000002fd9         ucomiss    xmm0, xmm1
0000000000002fdc         ja         loc_2fe5

0000000000002fde         nop

                     loc_2fe0:
0000000000002fe0         mov        qword [rdi], rcx                            ; CODE XREF=check_tuning.isra.0+32, check_tuning.isra.0+45, check_tuning.isra.0+59, check_tuning.isra.0+72, check_tuning.isra.0+90, check_tuning.isra.0+103
0000000000002fe3         xor        eax, eax

                     loc_2fe5:
0000000000002fe5         ret                                                    ; CODE XREF=check_tuning.isra.0+18, check_tuning.isra.0+108
                        ; endp
0000000000002fe7         align      16                                          ; End of unwind block (FDE at 0x865c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     transfer_entries:
0000000000002ff0         push       r15                                         ; Begin of unwind block (FDE at 0x8670), CODE XREF=hash_rehash+303, hash_rehash+338, hash_rehash+359
0000000000002ff2         push       r14
0000000000002ff4         push       r13
0000000000002ff6         push       r12
0000000000002ff8         push       rbp
0000000000002ff9         push       rbx
0000000000002ffa         sub        rsp, 0x8
0000000000002ffe         mov        r12, qword [rsi]
0000000000003001         cmp        r12, qword [rsi+8]
0000000000003005         jae        loc_30e8

000000000000300b         mov        rbp, rdi
000000000000300e         mov        r13, rsi
0000000000003011         mov        r14d, edx
0000000000003014         nop        dword [rax]

                     loc_3018:
0000000000003018         mov        r15, qword [r12]                            ; CODE XREF=transfer_entries+242
000000000000301c         test       r15, r15
000000000000301f         je         loc_30da

0000000000003025         mov        rbx, qword [r12+8]
000000000000302a         test       rbx, rbx
000000000000302d         jne        loc_304c

000000000000302f         jmp        loc_308b
0000000000003031         align      8

                     loc_3038:
0000000000003038         mov        rcx, qword [rax+8]                          ; CODE XREF=transfer_entries+114
000000000000303c         test       rdx, rdx
000000000000303f         mov        qword [rbx+8], rcx
0000000000003043         mov        qword [rax+8], rbx
0000000000003047         mov        rbx, rdx
000000000000304a         je         loc_3087

                     loc_304c:
000000000000304c         mov        r15, qword [rbx]                            ; CODE XREF=transfer_entries+61, transfer_entries+149
000000000000304f         mov        rdi, rbp
0000000000003052         mov        rsi, r15
0000000000003055         call       safe_hasher                                 ; safe_hasher
000000000000305a         cmp        qword [rax], 0x0
000000000000305e         mov        rdx, qword [rbx+8]
0000000000003062         jne        loc_3038

0000000000003064         mov        qword [rax], r15
0000000000003067         add        qword [rbp+0x18], 0x1
000000000000306c         test       rdx, rdx
000000000000306f         mov        qword [rbx], 0x0
0000000000003076         mov        rax, qword [rbp+0x48]
000000000000307a         mov        qword [rbx+8], rax
000000000000307e         mov        qword [rbp+0x48], rbx
0000000000003082         mov        rbx, rdx
0000000000003085         jne        loc_304c

                     loc_3087:
0000000000003087         mov        r15, qword [r12]                            ; CODE XREF=transfer_entries+90

                     loc_308b:
000000000000308b         test       r14b, r14b                                  ; CODE XREF=transfer_entries+63
000000000000308e         mov        qword [r12+8], 0x0
0000000000003097         jne        loc_30da

0000000000003099         mov        rsi, r15
000000000000309c         mov        rdi, rbp
000000000000309f         call       safe_hasher                                 ; safe_hasher
00000000000030a4         cmp        qword [rax], 0x0
00000000000030a8         mov        rbx, rax
00000000000030ab         je         loc_3100

00000000000030ad         mov        rax, qword [rbp+0x48]
00000000000030b1         test       rax, rax
00000000000030b4         je         loc_3110

00000000000030b6         mov        rdx, qword [rax+8]
00000000000030ba         mov        qword [rbp+0x48], rdx

                     loc_30be:
00000000000030be         mov        rdx, qword [rbx+8]                          ; CODE XREF=transfer_entries+301
00000000000030c2         mov        qword [rax], r15
00000000000030c5         mov        qword [rax+8], rdx
00000000000030c9         mov        qword [rbx+8], rax

                     loc_30cd:
00000000000030cd         mov        qword [r12], 0x0                            ; CODE XREF=transfer_entries+280
00000000000030d5         sub        qword [r13+0x18], 0x1

                     loc_30da:
00000000000030da         add        r12, 0x10                                   ; CODE XREF=transfer_entries+47, transfer_entries+167
00000000000030de         cmp        qword [r13+8], r12
00000000000030e2         ja         loc_3018

                     loc_30e8:
00000000000030e8         add        rsp, 0x8                                    ; CODE XREF=transfer_entries+21
00000000000030ec         mov        eax, 0x1
00000000000030f1         pop        rbx
00000000000030f2         pop        rbp
00000000000030f3         pop        r12
00000000000030f5         pop        r13
00000000000030f7         pop        r14
00000000000030f9         pop        r15
00000000000030fb         ret
                        ; endp
00000000000030fc         align      256

                     loc_3100:
0000000000003100         mov        qword [rax], r15                            ; CODE XREF=transfer_entries+187
0000000000003103         add        qword [rbp+0x18], 0x1
0000000000003108         jmp        loc_30cd
000000000000310a         align      16

                     loc_3110:
0000000000003110         mov        edi, 0x10                                   ; argument "__size" for method j_malloc, CODE XREF=transfer_entries+196
0000000000003115         call       j_malloc                                    ; malloc
000000000000311a         test       rax, rax
000000000000311d         jne        loc_30be

000000000000311f         add        rsp, 0x8
0000000000003123         xor        eax, eax
0000000000003125         pop        rbx
0000000000003126         pop        rbp
0000000000003127         pop        r12
0000000000003129         pop        r13
000000000000312b         pop        r14
000000000000312d         pop        r15
000000000000312f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_n_buckets:
0000000000003130         mov        rax, qword [rdi+0x10]                       ; End of unwind block (FDE at 0x8670), Begin of unwind block (FDE at 0x86d0)
0000000000003134         ret
                        ; endp
0000000000003135         align      64                                          ; End of unwind block (FDE at 0x86d0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_n_buckets_used:
0000000000003140         mov        rax, qword [rdi+0x18]                       ; Begin of unwind block (FDE at 0x86e4)
0000000000003144         ret
                        ; endp
0000000000003145         align      16                                          ; End of unwind block (FDE at 0x86e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_n_entries:
0000000000003150         mov        rax, qword [rdi+0x20]                       ; Begin of unwind block (FDE at 0x86f8)
0000000000003154         ret
                        ; endp
0000000000003155         align      32                                          ; End of unwind block (FDE at 0x86f8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_max_bucket_length:
0000000000003160         mov        rsi, qword [rdi]                            ; Begin of unwind block (FDE at 0x870c)
0000000000003163         mov        rdi, qword [rdi+8]
0000000000003167         xor        eax, eax
0000000000003169         cmp        rsi, rdi
000000000000316c         jae        loc_31a7

000000000000316e         nop

                     loc_3170:
0000000000003170         cmp        qword [rsi], 0x0                            ; CODE XREF=hash_get_max_bucket_length+67
0000000000003174         je         loc_319c

0000000000003176         mov        rdx, qword [rsi+8]
000000000000317a         mov        ecx, 0x1
000000000000317f         test       rdx, rdx
0000000000003182         je         loc_3195

0000000000003184         nop        dword [rax]

                     loc_3188:
0000000000003188         mov        rdx, qword [rdx+8]                          ; CODE XREF=hash_get_max_bucket_length+51
000000000000318c         add        rcx, 0x1
0000000000003190         test       rdx, rdx
0000000000003193         jne        loc_3188

                     loc_3195:
0000000000003195         cmp        rax, rcx                                    ; CODE XREF=hash_get_max_bucket_length+34
0000000000003198         cmovb      rax, rcx

                     loc_319c:
000000000000319c         add        rsi, 0x10                                   ; CODE XREF=hash_get_max_bucket_length+20
00000000000031a0         cmp        rsi, rdi
00000000000031a3         jb         loc_3170

00000000000031a5         ret
                        ; endp

                     loc_31a7:
00000000000031a7         ret                                                    ; CODE XREF=hash_get_max_bucket_length+12
                        ; endp
00000000000031a9         align      16                                          ; End of unwind block (FDE at 0x870c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_table_ok:
00000000000031b0         mov        rcx, qword [rdi]                            ; Begin of unwind block (FDE at 0x8720)
00000000000031b3         mov        r8, qword [rdi+8]
00000000000031b7         xor        edx, edx
00000000000031b9         xor        esi, esi
00000000000031bb         cmp        rcx, r8
00000000000031be         jae        loc_31f6

                     loc_31c0:
00000000000031c0         cmp        qword [rcx], 0x0                            ; CODE XREF=hash_table_ok+68
00000000000031c4         je         loc_31ed

00000000000031c6         mov        rax, qword [rcx+8]
00000000000031ca         add        rsi, 0x1
00000000000031ce         add        rdx, 0x1
00000000000031d2         test       rax, rax
00000000000031d5         je         loc_31ed

00000000000031d7         nop        word [rax+rax]

                     loc_31e0:
00000000000031e0         mov        rax, qword [rax+8]                          ; CODE XREF=hash_table_ok+59
00000000000031e4         add        rdx, 0x1
00000000000031e8         test       rax, rax
00000000000031eb         jne        loc_31e0

                     loc_31ed:
00000000000031ed         add        rcx, 0x10                                   ; CODE XREF=hash_table_ok+20, hash_table_ok+37
00000000000031f1         cmp        rcx, r8
00000000000031f4         jb         loc_31c0

                     loc_31f6:
00000000000031f6         xor        eax, eax                                    ; CODE XREF=hash_table_ok+14
00000000000031f8         cmp        qword [rdi+0x18], rsi
00000000000031fc         je         loc_3200

00000000000031fe         ret
                        ; endp

                     loc_3200:
0000000000003200         cmp        qword [rdi+0x20], rdx                       ; CODE XREF=hash_table_ok+76
0000000000003204         sete       al
0000000000003207         ret
                        ; endp
0000000000003208         align      16                                          ; End of unwind block (FDE at 0x8720)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_print_statistics:
0000000000003210         push       r13                                         ; Begin of unwind block (FDE at 0x8734)
0000000000003212         push       r12
0000000000003214         mov        r12, rsi
0000000000003217         push       rbp
0000000000003218         push       rbx
0000000000003219         xor        ebx, ebx
000000000000321b         sub        rsp, 0x8
000000000000321f         mov        rsi, qword [rdi]
0000000000003222         mov        rcx, qword [rdi+0x20]
0000000000003226         mov        rbp, qword [rdi+0x10]
000000000000322a         mov        r13, qword [rdi+0x18]
000000000000322e         mov        rdi, qword [rdi+8]
0000000000003232         cmp        rsi, rdi
0000000000003235         jae        loc_3275

0000000000003237         nop        word [rax+rax]

                     loc_3240:
0000000000003240         cmp        qword [rsi], 0x0                            ; CODE XREF=hash_print_statistics+99
0000000000003244         je         loc_326c

0000000000003246         mov        rax, qword [rsi+8]
000000000000324a         mov        edx, 0x1
000000000000324f         test       rax, rax
0000000000003252         je         loc_3265

0000000000003254         nop        dword [rax]

                     loc_3258:
0000000000003258         mov        rax, qword [rax+8]                          ; CODE XREF=hash_print_statistics+83
000000000000325c         add        rdx, 0x1
0000000000003260         test       rax, rax
0000000000003263         jne        loc_3258

                     loc_3265:
0000000000003265         cmp        rbx, rdx                                    ; CODE XREF=hash_print_statistics+66
0000000000003268         cmovb      rbx, rdx

                     loc_326c:
000000000000326c         add        rsi, 0x10                                   ; CODE XREF=hash_print_statistics+52
0000000000003270         cmp        rsi, rdi
0000000000003273         jb         loc_3240

                     loc_3275:
0000000000003275         lea        rdx, qword [aEntriesLun]                    ; "# entries:         %lu\\n", CODE XREF=hash_print_statistics+37
000000000000327c         mov        esi, 0x1
0000000000003281         mov        rdi, r12
0000000000003284         xor        eax, eax
0000000000003286         call       j___fprintf_chk                             ; __fprintf_chk
000000000000328b         lea        rdx, qword [aBucketsLun]                    ; "# buckets:         %lu\\n"
0000000000003292         xor        eax, eax
0000000000003294         mov        rcx, rbp
0000000000003297         mov        esi, 0x1
000000000000329c         mov        rdi, r12
000000000000329f         call       j___fprintf_chk                             ; __fprintf_chk
00000000000032a4         test       r13, r13
00000000000032a7         js         loc_3310

00000000000032a9         pxor       xmm0, xmm0
00000000000032ad         test       rbp, rbp
00000000000032b0         cvtsi2sd   xmm0, r13
00000000000032b5         mulsd      xmm0, qword [float_75b0+8]                  ; 0x75b8
00000000000032bd         js         loc_3339

                     loc_32bf:
00000000000032bf         pxor       xmm1, xmm1                                  ; CODE XREF=hash_print_statistics+295
00000000000032c3         cvtsi2sd   xmm1, rbp

                     loc_32c8:
00000000000032c8         divsd      xmm0, xmm1                                  ; CODE XREF=hash_print_statistics+322
00000000000032cc         lea        rdx, qword [aBucketsUsedLu2]                ; "# buckets used:    %lu (%.2f%%)\\n"
00000000000032d3         mov        rcx, r13
00000000000032d6         mov        rdi, r12
00000000000032d9         mov        esi, 0x1
00000000000032de         mov        eax, 0x1
00000000000032e3         call       j___fprintf_chk                             ; __fprintf_chk
00000000000032e8         add        rsp, 0x8
00000000000032ec         mov        rcx, rbx
00000000000032ef         mov        rdi, r12
00000000000032f2         pop        rbx
00000000000032f3         pop        rbp
00000000000032f4         pop        r12
00000000000032f6         pop        r13
00000000000032f8         lea        rdx, qword [aMaxBucketLengt]                ; "max bucket length: %lu\\n"
00000000000032ff         mov        esi, 0x1
0000000000003304         xor        eax, eax
0000000000003306         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
000000000000330b         align      16

                     loc_3310:
0000000000003310         mov        rax, r13                                    ; CODE XREF=hash_print_statistics+151
0000000000003313         mov        rdx, r13
0000000000003316         pxor       xmm0, xmm0
000000000000331a         shr        rax, 0x1
000000000000331d         and        edx, 0x1
0000000000003320         or         rax, rdx
0000000000003323         test       rbp, rbp
0000000000003326         cvtsi2sd   xmm0, rax
000000000000332b         addsd      xmm0, xmm0
000000000000332f         mulsd      xmm0, qword [float_75b0+8]                  ; 0x75b8
0000000000003337         jns        loc_32bf

                     loc_3339:
0000000000003339         mov        rax, rbp                                    ; CODE XREF=hash_print_statistics+173
000000000000333c         pxor       xmm1, xmm1
0000000000003340         shr        rax, 0x1
0000000000003343         and        ebp, 0x1
0000000000003346         or         rax, rbp
0000000000003349         cvtsi2sd   xmm1, rax
000000000000334e         addsd      xmm1, xmm1
0000000000003352         jmp        loc_32c8
0000000000003357         align      32                                          ; End of unwind block (FDE at 0x8734)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_lookup:
0000000000003360         push       r12                                         ; Begin of unwind block (FDE at 0x8770), CODE XREF=seen_file+49
0000000000003362         push       rbp
0000000000003363         mov        r12, rdi
0000000000003366         push       rbx
0000000000003367         mov        rbp, rsi
000000000000336a         call       safe_hasher                                 ; safe_hasher
000000000000336f         mov        rsi, qword [rax]
0000000000003372         test       rsi, rsi
0000000000003375         je         loc_339d

0000000000003377         mov        rbx, rax
000000000000337a         jmp        loc_3383
000000000000337c         align      128

                     loc_3380:
0000000000003380         mov        rsi, qword [rbx]                            ; CODE XREF=hash_lookup+59

                     loc_3383:
0000000000003383         cmp        rsi, rbp                                    ; CODE XREF=hash_lookup+26
0000000000003386         je         loc_339f

0000000000003388         mov        rdi, rbp
000000000000338b         call       qword [r12+0x38]
0000000000003390         test       al, al
0000000000003392         jne        loc_33b0

0000000000003394         mov        rbx, qword [rbx+8]
0000000000003398         test       rbx, rbx
000000000000339b         jne        loc_3380

                     loc_339d:
000000000000339d         xor        esi, esi                                    ; CODE XREF=hash_lookup+21

                     loc_339f:
000000000000339f         pop        rbx                                         ; CODE XREF=hash_lookup+38
00000000000033a0         mov        rax, rsi
00000000000033a3         pop        rbp
00000000000033a4         pop        r12
00000000000033a6         ret
                        ; endp
00000000000033a7         align      16

                     loc_33b0:
00000000000033b0         mov        rsi, qword [rbx]                            ; CODE XREF=hash_lookup+50
00000000000033b3         pop        rbx
00000000000033b4         pop        rbp
00000000000033b5         mov        rax, rsi
00000000000033b8         pop        r12
00000000000033ba         ret
                        ; endp
00000000000033bb         align      64                                          ; End of unwind block (FDE at 0x8770)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_first:
00000000000033c0         cmp        qword [rdi+0x20], 0x0                       ; Begin of unwind block (FDE at 0x87a8)
00000000000033c5         je         loc_33f3

00000000000033c7         mov        rdx, qword [rdi]
00000000000033ca         mov        rcx, qword [rdi+8]
00000000000033ce         cmp        rdx, rcx
00000000000033d1         jae        loc_33f8

00000000000033d3         mov        rax, qword [rdx]
00000000000033d6         test       rax, rax
00000000000033d9         jne        loc_33f6

00000000000033db         nop        dword [rax+rax]

                     loc_33e0:
00000000000033e0         add        rdx, 0x10                                   ; CODE XREF=hash_get_first+47
00000000000033e4         cmp        rdx, rcx
00000000000033e7         jae        loc_33f8

00000000000033e9         mov        rax, qword [rdx]
00000000000033ec         test       rax, rax
00000000000033ef         je         loc_33e0

00000000000033f1         ret
                        ; endp

                     loc_33f3:
00000000000033f3         xor        eax, eax                                    ; CODE XREF=hash_get_first+5
00000000000033f5         ret
                        ; endp

                     loc_33f6:
00000000000033f6         ret                                                    ; CODE XREF=hash_get_first+25
                        ; endp

                     loc_33f8:
00000000000033f8         sub        rsp, 0x8                                    ; CODE XREF=hash_get_first+17, hash_get_first+39
00000000000033fc         call       j_abort                                     ; abort
                        ; endp
0000000000003401         align      16                                          ; End of unwind block (FDE at 0x87a8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_next:
0000000000003410         push       rbp                                         ; Begin of unwind block (FDE at 0x87bc)
0000000000003411         push       rbx
0000000000003412         mov        rbp, rdi
0000000000003415         mov        rbx, rsi
0000000000003418         sub        rsp, 0x8
000000000000341c         call       safe_hasher                                 ; safe_hasher
0000000000003421         mov        rdx, rax
0000000000003424         mov        rcx, rax
0000000000003427         mov        rax, qword [rdx]
000000000000342a         mov        rdx, qword [rdx+8]
000000000000342e         cmp        rax, rbx
0000000000003431         je         loc_3449

0000000000003433         nop        dword [rax+rax]

                     loc_3438:
0000000000003438         test       rdx, rdx                                    ; CODE XREF=hash_get_next+55
000000000000343b         je         loc_344e

000000000000343d         mov        rax, qword [rdx]
0000000000003440         mov        rdx, qword [rdx+8]
0000000000003444         cmp        rax, rbx
0000000000003447         jne        loc_3438

                     loc_3449:
0000000000003449         test       rdx, rdx                                    ; CODE XREF=hash_get_next+33
000000000000344c         jne        loc_3478

                     loc_344e:
000000000000344e         mov        rdx, qword [rbp+8]                          ; CODE XREF=hash_get_next+43
0000000000003452         jmp        loc_3460
0000000000003454         align      8

                     loc_3458:
0000000000003458         mov        rax, qword [rcx]                            ; CODE XREF=hash_get_next+87
000000000000345b         test       rax, rax
000000000000345e         jne        loc_346b

                     loc_3460:
0000000000003460         add        rcx, 0x10                                   ; CODE XREF=hash_get_next+66
0000000000003464         cmp        rdx, rcx
0000000000003467         ja         loc_3458

0000000000003469         xor        eax, eax

                     loc_346b:
000000000000346b         add        rsp, 0x8                                    ; CODE XREF=hash_get_next+78
000000000000346f         pop        rbx
0000000000003470         pop        rbp
0000000000003471         ret
                        ; endp
0000000000003472         align      8

                     loc_3478:
0000000000003478         mov        rax, qword [rdx]                            ; CODE XREF=hash_get_next+60
000000000000347b         add        rsp, 0x8
000000000000347f         pop        rbx
0000000000003480         pop        rbp
0000000000003481         ret
                        ; endp
0000000000003482         align      16                                          ; End of unwind block (FDE at 0x87bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_entries:
0000000000003490         mov        r9, qword [rdi]                             ; Begin of unwind block (FDE at 0x87f0)
0000000000003493         cmp        qword [rdi+8], r9
0000000000003497         jbe        loc_34f2

0000000000003499         xor        r8d, r8d

                     loc_349c:
000000000000349c         mov        rcx, qword [r9]                             ; CODE XREF=hash_get_entries+85
000000000000349f         test       rcx, rcx
00000000000034a2         je         loc_34dd

00000000000034a4         cmp        rdx, r8
00000000000034a7         jbe        loc_34e7

00000000000034a9         mov        qword [rsi+r8*8], rcx
00000000000034ad         mov        rcx, qword [r9+8]
00000000000034b1         lea        rax, qword [r8+1]
00000000000034b5         test       rcx, rcx
00000000000034b8         je         loc_34da

00000000000034ba         nop        word [rax+rax]

                     loc_34c0:
00000000000034c0         cmp        rdx, rax                                    ; CODE XREF=hash_get_entries+72
00000000000034c3         je         loc_34f0

00000000000034c5         mov        r8, qword [rcx]
00000000000034c8         add        rax, 0x1
00000000000034cc         mov        qword [rsi+rax*8-8], r8
00000000000034d1         mov        rcx, qword [rcx+8]
00000000000034d5         test       rcx, rcx
00000000000034d8         jne        loc_34c0

                     loc_34da:
00000000000034da         mov        r8, rax                                     ; CODE XREF=hash_get_entries+40

                     loc_34dd:
00000000000034dd         add        r9, 0x10                                    ; CODE XREF=hash_get_entries+18
00000000000034e1         cmp        qword [rdi+8], r9
00000000000034e5         ja         loc_349c

                     loc_34e7:
00000000000034e7         mov        rax, r8                                     ; CODE XREF=hash_get_entries+23
00000000000034ea         ret
                        ; endp
00000000000034eb         align      16

                     loc_34f0:
00000000000034f0         ret                                                    ; CODE XREF=hash_get_entries+51
                        ; endp

                     loc_34f2:
00000000000034f2         xor        eax, eax                                    ; CODE XREF=hash_get_entries+7
00000000000034f4         ret
                        ; endp
00000000000034f5         align      256                                         ; End of unwind block (FDE at 0x87f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_do_for_each:
0000000000003500         push       r15                                         ; Begin of unwind block (FDE at 0x8804)
0000000000003502         push       r14
0000000000003504         push       r13
0000000000003506         push       r12
0000000000003508         push       rbp
0000000000003509         push       rbx
000000000000350a         sub        rsp, 0x8
000000000000350e         mov        r14, qword [rdi]
0000000000003511         cmp        qword [rdi+8], r14
0000000000003515         jbe        loc_3566

0000000000003517         mov        r13, rdx
000000000000351a         mov        r12, rsi
000000000000351d         mov        r15, rdi
0000000000003520         xor        ebp, ebp

                     loc_3522:
0000000000003522         mov        rdi, qword [r14]                            ; CODE XREF=hash_do_for_each+82
0000000000003525         test       rdi, rdi
0000000000003528         je         loc_354a

000000000000352a         mov        rbx, r14
000000000000352d         jmp        loc_3533
000000000000352f         align      16

                     loc_3530:
0000000000003530         mov        rdi, qword [rbx]                            ; CODE XREF=hash_do_for_each+72

                     loc_3533:
0000000000003533         mov        rsi, r13                                    ; CODE XREF=hash_do_for_each+45
0000000000003536         call       r12
0000000000003539         test       al, al
000000000000353b         je         loc_3554

000000000000353d         mov        rbx, qword [rbx+8]
0000000000003541         add        rbp, 0x1
0000000000003545         test       rbx, rbx
0000000000003548         jne        loc_3530

                     loc_354a:
000000000000354a         add        r14, 0x10                                   ; CODE XREF=hash_do_for_each+40
000000000000354e         cmp        qword [r15+8], r14
0000000000003552         ja         loc_3522

                     loc_3554:
0000000000003554         add        rsp, 0x8                                    ; CODE XREF=hash_do_for_each+59, hash_do_for_each+104
0000000000003558         mov        rax, rbp
000000000000355b         pop        rbx
000000000000355c         pop        rbp
000000000000355d         pop        r12
000000000000355f         pop        r13
0000000000003561         pop        r14
0000000000003563         pop        r15
0000000000003565         ret
                        ; endp

                     loc_3566:
0000000000003566         xor        ebp, ebp                                    ; CODE XREF=hash_do_for_each+21
0000000000003568         jmp        loc_3554
000000000000356a         align      16                                          ; End of unwind block (FDE at 0x8804)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_string:
0000000000003570         movzx      ecx, byte [rdi]                             ; Begin of unwind block (FDE at 0x8850)
0000000000003573         xor        edx, edx
0000000000003575         test       cl, cl
0000000000003577         je         loc_359d

0000000000003579         nop        dword [rax]

                     loc_3580:
0000000000003580         mov        rax, rdx                                    ; CODE XREF=hash_string+43
0000000000003583         add        rdi, 0x1
0000000000003587         shl        rax, 0x5
000000000000358b         sub        rax, rdx
000000000000358e         xor        edx, edx
0000000000003590         add        rax, rcx
0000000000003593         movzx      ecx, byte [rdi]
0000000000003596         div        rsi
0000000000003599         test       cl, cl
000000000000359b         jne        loc_3580

                     loc_359d:
000000000000359d         mov        rax, rdx                                    ; CODE XREF=hash_string+7
00000000000035a0         ret
                        ; endp
00000000000035a1         align      16                                          ; End of unwind block (FDE at 0x8850)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_reset_tuning:
00000000000035b0         movabs     rax, 0x3f80000000000000                     ; Begin of unwind block (FDE at 0x8864)
00000000000035ba         mov        byte [rdi+0x10], 0x0
00000000000035be         mov        qword [rdi], rax
00000000000035c1         movabs     rax, 0x3fb4fdf43f4ccccd
00000000000035cb         mov        qword [rdi+8], rax
00000000000035cf         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_initialize:
00000000000035d0         push       r15                                         ; End of unwind block (FDE at 0x8864), Begin of unwind block (FDE at 0x8878), CODE XREF=canonicalize_filename_mode+1282
00000000000035d2         push       r14
00000000000035d4         lea        rax, qword [raw_hasher]                     ; raw_hasher
00000000000035db         push       r13
00000000000035dd         push       r12
00000000000035df         mov        r12, rdx
00000000000035e2         push       rbp
00000000000035e3         push       rbx
00000000000035e4         mov        r13, rcx
00000000000035e7         mov        rbp, rdi
00000000000035ea         mov        edi, 0x50                                   ; argument "__size" for method j_malloc
00000000000035ef         mov        r15, rsi
00000000000035f2         sub        rsp, 0x8
00000000000035f6         test       rdx, rdx
00000000000035f9         mov        r14, r8
00000000000035fc         cmove      r12, rax
0000000000003600         lea        rax, qword [raw_comparator]                 ; raw_comparator
0000000000003607         test       rcx, rcx
000000000000360a         cmove      r13, rax
000000000000360e         call       j_malloc                                    ; malloc
0000000000003613         test       rax, rax
0000000000003616         mov        rbx, rax
0000000000003619         je         loc_36ca

000000000000361f         test       r15, r15
0000000000003622         lea        rdi, qword [rax+0x28]
0000000000003626         je         loc_36e0

000000000000362c         mov        qword [rax+0x28], r15
0000000000003630         call       check_tuning.isra.0                         ; check_tuning.isra.0
0000000000003635         test       al, al
0000000000003637         je         loc_36c0

000000000000363d         cmp        byte [r15+0x10], 0x0
0000000000003642         je         loc_3740

                     loc_3648:
0000000000003648         mov        rdi, rbp                                    ; CODE XREF=hash_initialize+362, hash_initialize+421
000000000000364b         call       next_prime                                  ; next_prime
0000000000003650         mov        edx, 0x8
0000000000003655         mov        rbp, rax
0000000000003658         xor        ecx, ecx
000000000000365a         mov        rax, rdx
000000000000365d         mul        rbp
0000000000003660         jo         loc_377a

                     loc_3666:
0000000000003666         test       rax, rax                                    ; CODE XREF=hash_initialize+431
0000000000003669         js         loc_36c0

000000000000366b         test       rcx, rcx
000000000000366e         jne        loc_36c0

0000000000003670         test       rbp, rbp
0000000000003673         mov        qword [rbx+0x10], rbp
0000000000003677         je         loc_36c0

0000000000003679         mov        esi, 0x10                                   ; argument "__size" for method j_calloc
000000000000367e         mov        rdi, rbp                                    ; argument "__nmemb" for method j_calloc
0000000000003681         call       j_calloc                                    ; calloc
0000000000003686         test       rax, rax
0000000000003689         mov        qword [rbx], rax
000000000000368c         je         loc_36c0

000000000000368e         shl        rbp, 0x4
0000000000003692         mov        qword [rbx+0x18], 0x0
000000000000369a         mov        qword [rbx+0x20], 0x0
00000000000036a2         add        rbp, rax
00000000000036a5         mov        qword [rbx+0x30], r12
00000000000036a9         mov        qword [rbx+0x38], r13
00000000000036ad         mov        qword [rbx+8], rbp
00000000000036b1         mov        qword [rbx+0x40], r14
00000000000036b5         mov        qword [rbx+0x48], 0x0
00000000000036bd         jmp        loc_36ca
00000000000036bf         align      64

                     loc_36c0:
00000000000036c0         mov        rdi, rbx                                    ; argument "__ptr" for method j_free, CODE XREF=hash_initialize+103, hash_initialize+153, hash_initialize+158, hash_initialize+167, hash_initialize+188, hash_initialize+298, hash_initialize+325
00000000000036c3         xor        ebx, ebx
00000000000036c5         call       j_free                                      ; free

                     loc_36ca:
00000000000036ca         add        rsp, 0x8                                    ; CODE XREF=hash_initialize+73, hash_initialize+237
00000000000036ce         mov        rax, rbx
00000000000036d1         pop        rbx
00000000000036d2         pop        rbp
00000000000036d3         pop        r12
00000000000036d5         pop        r13
00000000000036d7         pop        r14
00000000000036d9         pop        r15
00000000000036db         ret
                        ; endp
00000000000036dc         align      32

                     loc_36e0:
00000000000036e0         lea        rax, qword [default_tuning]                 ; default_tuning, CODE XREF=hash_initialize+86
00000000000036e7         mov        qword [rbx+0x28], rax
00000000000036eb         call       check_tuning.isra.0                         ; check_tuning.isra.0
00000000000036f0         test       al, al
00000000000036f2         movss      xmm1, dword [float_75a8]                    ; float_75a8
00000000000036fa         je         loc_36c0

00000000000036fc         test       rbp, rbp
00000000000036ff         js         loc_374b

                     loc_3701:
0000000000003701         pxor       xmm0, xmm0                                  ; CODE XREF=hash_initialize+377
0000000000003705         cvtsi2ss   xmm0, rbp

                     loc_370a:
000000000000370a         divss      xmm0, xmm1                                  ; CODE XREF=hash_initialize+404
000000000000370e         ucomiss    xmm0, dword [float_75ac]                    ; float_75ac
0000000000003715         jae        loc_36c0

0000000000003717         ucomiss    xmm0, dword [float_75b0]                    ; float_75b0
000000000000371e         jb         loc_3770

0000000000003720         subss      xmm0, dword [float_75b0]                    ; float_75b0
0000000000003728         movabs     rax, 0x8000000000000000
0000000000003732         cvttss2si  rbp, xmm0
0000000000003737         xor        rbp, rax
000000000000373a         jmp        loc_3648
000000000000373f         align      64

                     loc_3740:
0000000000003740         test       rbp, rbp                                    ; CODE XREF=hash_initialize+114
0000000000003743         movss      xmm1, dword [r15+8]
0000000000003749         jns        loc_3701

                     loc_374b:
000000000000374b         mov        rax, rbp                                    ; CODE XREF=hash_initialize+303
000000000000374e         pxor       xmm0, xmm0
0000000000003752         shr        rax, 0x1
0000000000003755         and        ebp, 0x1
0000000000003758         or         rax, rbp
000000000000375b         cvtsi2ss   xmm0, rax
0000000000003760         addss      xmm0, xmm0
0000000000003764         jmp        loc_370a
0000000000003766         align      16

                     loc_3770:
0000000000003770         cvttss2si  rbp, xmm0                                   ; CODE XREF=hash_initialize+334
0000000000003775         jmp        loc_3648

                     loc_377a:
000000000000377a         mov        ecx, 0x1                                    ; CODE XREF=hash_initialize+144
000000000000377f         jmp        loc_3666
0000000000003784         align      16                                          ; End of unwind block (FDE at 0x8878)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_clear:
0000000000003790         push       r12                                         ; Begin of unwind block (FDE at 0x88c4)
0000000000003792         push       rbp
0000000000003793         mov        rbp, rdi
0000000000003796         push       rbx
0000000000003797         mov        r12, qword [rdi]
000000000000379a         cmp        r12, qword [rdi+8]
000000000000379e         jae        loc_380b

                     loc_37a0:
00000000000037a0         cmp        qword [r12], 0x0                            ; CODE XREF=hash_clear+121
00000000000037a5         je         loc_3801

00000000000037a7         mov        rbx, qword [r12+8]
00000000000037ac         mov        rax, qword [rbp+0x40]
00000000000037b0         test       rbx, rbx
00000000000037b3         je         loc_37e5

00000000000037b5         nop        dword [rax]

                     loc_37b8:
00000000000037b8         test       rax, rax                                    ; CODE XREF=hash_clear+83
00000000000037bb         je         loc_37c6

00000000000037bd         mov        rdi, qword [rbx]
00000000000037c0         call       rax
00000000000037c2         mov        rax, qword [rbp+0x40]

                     loc_37c6:
00000000000037c6         mov        rdx, qword [rbx+8]                          ; CODE XREF=hash_clear+43
00000000000037ca         mov        rcx, qword [rbp+0x48]
00000000000037ce         mov        qword [rbx], 0x0
00000000000037d5         test       rdx, rdx
00000000000037d8         mov        qword [rbx+8], rcx
00000000000037dc         mov        qword [rbp+0x48], rbx
00000000000037e0         mov        rbx, rdx
00000000000037e3         jne        loc_37b8

                     loc_37e5:
00000000000037e5         test       rax, rax                                    ; CODE XREF=hash_clear+35
00000000000037e8         je         loc_37f0

00000000000037ea         mov        rdi, qword [r12]
00000000000037ee         call       rax

                     loc_37f0:
00000000000037f0         mov        qword [r12], 0x0                            ; CODE XREF=hash_clear+88
00000000000037f8         mov        qword [r12+8], 0x0

                     loc_3801:
0000000000003801         add        r12, 0x10                                   ; CODE XREF=hash_clear+21
0000000000003805         cmp        qword [rbp+8], r12
0000000000003809         ja         loc_37a0

                     loc_380b:
000000000000380b         mov        qword [rbp+0x18], 0x0                       ; CODE XREF=hash_clear+14
0000000000003813         mov        qword [rbp+0x20], 0x0
000000000000381b         pop        rbx
000000000000381c         pop        rbp
000000000000381d         pop        r12
000000000000381f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_free:
0000000000003820         push       r12                                         ; End of unwind block (FDE at 0x88c4), Begin of unwind block (FDE at 0x88f0), CODE XREF=canonicalize_filename_mode+537, canonicalize_filename_mode+915
0000000000003822         push       rbp
0000000000003823         mov        r12, rdi
0000000000003826         push       rbx
0000000000003827         cmp        qword [rdi+0x40], 0x0
000000000000382c         mov        rbp, qword [rdi]
000000000000382f         mov        rax, qword [rdi+8]
0000000000003833         je         loc_3883

0000000000003835         cmp        qword [rdi+0x20], 0x0
000000000000383a         je         loc_3883

000000000000383c         cmp        rbp, rax
000000000000383f         jae        loc_38bc

0000000000003841         nop        dword [rax]

                     loc_3848:
0000000000003848         mov        rdi, qword [rbp]                            ; CODE XREF=hash_free+93
000000000000384c         test       rdi, rdi
000000000000384f         je         loc_3876

0000000000003851         mov        rbx, rbp
0000000000003854         jmp        loc_3863
0000000000003856         align      32

                     loc_3860:
0000000000003860         mov        rdi, qword [rbx]                            ; CODE XREF=hash_free+79

                     loc_3863:
0000000000003863         call       qword [r12+0x40]                            ; CODE XREF=hash_free+52
0000000000003868         mov        rbx, qword [rbx+8]
000000000000386c         test       rbx, rbx
000000000000386f         jne        loc_3860

0000000000003871         mov        rax, qword [r12+8]

                     loc_3876:
0000000000003876         add        rbp, 0x10                                   ; CODE XREF=hash_free+47
000000000000387a         cmp        rax, rbp
000000000000387d         ja         loc_3848

000000000000387f         mov        rbp, qword [r12]

                     loc_3883:
0000000000003883         cmp        rbp, rax                                    ; CODE XREF=hash_free+19, hash_free+26
0000000000003886         jae        loc_38bc

0000000000003888         nop        dword [rax+rax]

                     loc_3890:
0000000000003890         mov        rdi, qword [rbp+8]                          ; CODE XREF=hash_free+154
0000000000003894         test       rdi, rdi
0000000000003897         je         loc_38b1

0000000000003899         nop        dword [rax]

                     loc_38a0:
00000000000038a0         mov        rbx, qword [rdi+8]                          ; CODE XREF=hash_free+143
00000000000038a4         call       j_free                                      ; free
00000000000038a9         test       rbx, rbx
00000000000038ac         mov        rdi, rbx
00000000000038af         jne        loc_38a0

                     loc_38b1:
00000000000038b1         add        rbp, 0x10                                   ; CODE XREF=hash_free+119
00000000000038b5         cmp        qword [r12+8], rbp
00000000000038ba         ja         loc_3890

                     loc_38bc:
00000000000038bc         mov        rdi, qword [r12+0x48]                       ; CODE XREF=hash_free+31, hash_free+102
00000000000038c1         test       rdi, rdi
00000000000038c4         je         loc_38e1

00000000000038c6         nop        word [cs:rax+rax]

                     loc_38d0:
00000000000038d0         mov        rbx, qword [rdi+8]                          ; CODE XREF=hash_free+191
00000000000038d4         call       j_free                                      ; free
00000000000038d9         test       rbx, rbx
00000000000038dc         mov        rdi, rbx
00000000000038df         jne        loc_38d0

                     loc_38e1:
00000000000038e1         mov        rdi, qword [r12]                            ; argument "__ptr" for method j_free, CODE XREF=hash_free+164
00000000000038e5         call       j_free                                      ; free
00000000000038ea         pop        rbx
00000000000038eb         mov        rdi, r12                                    ; argument "__ptr" for method j_free
00000000000038ee         pop        rbp
00000000000038ef         pop        r12
00000000000038f1         jmp        j_free                                      ; free
                        ; endp
00000000000038f6         align      256                                         ; End of unwind block (FDE at 0x88f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120


                     hash_rehash:
0000000000003900         push       r12                                         ; Begin of unwind block (FDE at 0x891c), CODE XREF=hash_insert_if_absent+443, hash_delete+271
0000000000003902         push       rbp
0000000000003903         mov        rbp, rdi
0000000000003906         push       rbx
0000000000003907         sub        rsp, 0x60
000000000000390b         mov        r12, qword [rdi+0x28]
000000000000390f         mov        rax, qword [fs:0x28]
0000000000003918         mov        qword [rsp+0x78+var_20], rax
000000000000391d         xor        eax, eax
000000000000391f         cmp        byte [r12+0x10], 0x0
0000000000003925         jne        loc_3978

0000000000003927         test       rsi, rsi
000000000000392a         js         loc_3aa8

0000000000003930         pxor       xmm0, xmm0
0000000000003934         cvtsi2ss   xmm0, rsi

                     loc_3939:
0000000000003939         divss      xmm0, dword [r12+8]                         ; CODE XREF=hash_rehash+449
0000000000003940         ucomiss    xmm0, dword [float_75ac]                    ; float_75ac
0000000000003947         jae        loc_3a80

000000000000394d         ucomiss    xmm0, dword [float_75b0]                    ; float_75b0
0000000000003954         jb         loc_3ad0

000000000000395a         subss      xmm0, dword [float_75b0]                    ; float_75b0
0000000000003962         movabs     rax, 0x8000000000000000
000000000000396c         cvttss2si  rsi, xmm0
0000000000003971         xor        rsi, rax
0000000000003974         nop        dword [rax]

                     loc_3978:
0000000000003978         mov        rdi, rsi                                    ; CODE XREF=hash_rehash+37, hash_rehash+469
000000000000397b         call       next_prime                                  ; next_prime
0000000000003980         mov        edx, 0x8
0000000000003985         mov        rbx, rax
0000000000003988         xor        ecx, ecx
000000000000398a         mov        rax, rdx
000000000000398d         mul        rbx
0000000000003990         jo         loc_3b2f

                     loc_3996:
0000000000003996         test       rax, rax                                    ; CODE XREF=hash_rehash+564
0000000000003999         mov        eax, 0x1
000000000000399e         cmovs      rcx, rax
00000000000039a2         test       rbx, rbx
00000000000039a5         je         loc_3a80

00000000000039ab         and        ecx, 0x1
00000000000039ae         jne        loc_3a80

00000000000039b4         cmp        qword [rbp+0x10], rbx
00000000000039b8         je         loc_3ae0

00000000000039be         mov        esi, 0x10                                   ; argument "__size" for method j_calloc
00000000000039c3         mov        rdi, rbx                                    ; argument "__nmemb" for method j_calloc
00000000000039c6         call       j_calloc                                    ; calloc
00000000000039cb         test       rax, rax
00000000000039ce         mov        qword [rsp+0x78+var_78], rax
00000000000039d2         je         loc_3a80

00000000000039d8         mov        qword [rsp+0x78+var_68], rbx
00000000000039dd         shl        rbx, 0x4
00000000000039e1         mov        qword [rsp+0x78+var_50], r12
00000000000039e6         add        rbx, rax
00000000000039e9         mov        rax, qword [rbp+0x30]
00000000000039ed         mov        r12, rsp
00000000000039f0         xor        edx, edx
00000000000039f2         mov        rsi, rbp
00000000000039f5         mov        rdi, r12
00000000000039f8         mov        qword [rsp+0x78+var_70], rbx
00000000000039fd         mov        qword [rsp+0x78+var_60], 0x0
0000000000003a06         mov        qword [rsp+0x78+var_48], rax
0000000000003a0b         mov        rax, qword [rbp+0x38]
0000000000003a0f         mov        qword [rsp+0x78+var_58], 0x0
0000000000003a18         mov        qword [rsp+0x78+var_40], rax
0000000000003a1d         mov        rax, qword [rbp+0x40]
0000000000003a21         mov        qword [rsp+0x78+var_38], rax
0000000000003a26         mov        rax, qword [rbp+0x48]
0000000000003a2a         mov        qword [rsp+0x78+var_30], rax
0000000000003a2f         call       transfer_entries                            ; transfer_entries
0000000000003a34         test       al, al
0000000000003a36         mov        ebx, eax
0000000000003a38         jne        loc_3af0

0000000000003a3e         mov        rax, qword [rsp+0x78+var_30]
0000000000003a43         mov        edx, 0x1
0000000000003a48         mov        rsi, r12
0000000000003a4b         mov        rdi, rbp
0000000000003a4e         mov        qword [rbp+0x48], rax
0000000000003a52         call       transfer_entries                            ; transfer_entries
0000000000003a57         test       al, al
0000000000003a59         je         loc_3b39

0000000000003a5f         xor        edx, edx
0000000000003a61         mov        rsi, r12
0000000000003a64         mov        rdi, rbp
0000000000003a67         call       transfer_entries                            ; transfer_entries
0000000000003a6c         test       al, al
0000000000003a6e         je         loc_3b39

0000000000003a74         mov        rdi, qword [rsp+0x78+var_78]                ; argument "__ptr" for method j_free
0000000000003a78         call       j_free                                      ; free
0000000000003a7d         jmp        loc_3a82
0000000000003a7f         align      128

                     loc_3a80:
0000000000003a80         xor        ebx, ebx                                    ; CODE XREF=hash_rehash+71, hash_rehash+165, hash_rehash+174, hash_rehash+210

                     loc_3a82:
0000000000003a82         mov        rcx, qword [rsp+0x78+var_20]                ; CODE XREF=hash_rehash+381, hash_rehash+485, hash_rehash+549
0000000000003a87         xor        rcx, qword [fs:0x28]
0000000000003a90         mov        eax, ebx
0000000000003a92         jne        loc_3b2a

0000000000003a98         add        rsp, 0x60
0000000000003a9c         pop        rbx
0000000000003a9d         pop        rbp
0000000000003a9e         pop        r12
0000000000003aa0         ret
                        ; endp
0000000000003aa1         align      8

                     loc_3aa8:
0000000000003aa8         mov        rax, rsi                                    ; CODE XREF=hash_rehash+42
0000000000003aab         pxor       xmm0, xmm0
0000000000003aaf         shr        rax, 0x1
0000000000003ab2         and        esi, 0x1
0000000000003ab5         or         rax, rsi
0000000000003ab8         cvtsi2ss   xmm0, rax
0000000000003abd         addss      xmm0, xmm0
0000000000003ac1         jmp        loc_3939
0000000000003ac6         align      16

                     loc_3ad0:
0000000000003ad0         cvttss2si  rsi, xmm0                                   ; CODE XREF=hash_rehash+84
0000000000003ad5         jmp        loc_3978
0000000000003ada         align      32

                     loc_3ae0:
0000000000003ae0         mov        ebx, 0x1                                    ; CODE XREF=hash_rehash+184
0000000000003ae5         jmp        loc_3a82
0000000000003ae7         align      16

                     loc_3af0:
0000000000003af0         mov        rdi, qword [rbp]                            ; argument "__ptr" for method j_free, CODE XREF=hash_rehash+312
0000000000003af4         call       j_free                                      ; free
0000000000003af9         mov        rax, qword [rsp+0x78+var_78]
0000000000003afd         mov        qword [rbp], rax
0000000000003b01         mov        rax, qword [rsp+0x78+var_70]
0000000000003b06         mov        qword [rbp+8], rax
0000000000003b0a         mov        rax, qword [rsp+0x78+var_68]
0000000000003b0f         mov        qword [rbp+0x10], rax
0000000000003b13         mov        rax, qword [rsp+0x78+var_60]
0000000000003b18         mov        qword [rbp+0x18], rax
0000000000003b1c         mov        rax, qword [rsp+0x78+var_30]
0000000000003b21         mov        qword [rbp+0x48], rax
0000000000003b25         jmp        loc_3a82

                     loc_3b2a:
0000000000003b2a         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_rehash+402
                        ; endp

                     loc_3b2f:
0000000000003b2f         mov        ecx, 0x1                                    ; CODE XREF=hash_rehash+144
0000000000003b34         jmp        loc_3996

                     loc_3b39:
0000000000003b39         call       j_abort                                     ; abort, CODE XREF=hash_rehash+345, hash_rehash+366
                        ; endp
0000000000003b3e         align      64                                          ; End of unwind block (FDE at 0x891c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56


                     hash_insert_if_absent:
0000000000003b40         push       r13                                         ; Begin of unwind block (FDE at 0x8954), CODE XREF=hash_insert+27
0000000000003b42         push       r12
0000000000003b44         push       rbp
0000000000003b45         push       rbx
0000000000003b46         sub        rsp, 0x18
0000000000003b4a         mov        rax, qword [fs:0x28]
0000000000003b53         mov        qword [rsp+0x38+var_30], rax
0000000000003b58         xor        eax, eax
0000000000003b5a         test       rsi, rsi
0000000000003b5d         je         loc_3d1d

0000000000003b63         mov        r12, rsp
0000000000003b66         xor        ecx, ecx
0000000000003b68         mov        r13, rdx
0000000000003b6b         mov        rdx, r12
0000000000003b6e         mov        rbx, rdi
0000000000003b71         mov        rbp, rsi
0000000000003b74         call       hash_find_entry                             ; hash_find_entry
0000000000003b79         test       rax, rax
0000000000003b7c         mov        rdx, rax
0000000000003b7f         je         loc_3bb0

0000000000003b81         xor        eax, eax
0000000000003b83         test       r13, r13
0000000000003b86         je         loc_3b8c

0000000000003b88         mov        qword [r13], rdx

                     loc_3b8c:
0000000000003b8c         mov        rcx, qword [rsp+0x38+var_30]                ; CODE XREF=hash_insert_if_absent+70, hash_insert_if_absent+233, hash_insert_if_absent+507, hash_insert_if_absent+536
0000000000003b91         xor        rcx, qword [fs:0x28]
0000000000003b9a         jne        loc_3dbf

0000000000003ba0         add        rsp, 0x18
0000000000003ba4         pop        rbx
0000000000003ba5         pop        rbp
0000000000003ba6         pop        r12
0000000000003ba8         pop        r13
0000000000003baa         ret
                        ; endp
0000000000003bab         align      16

                     loc_3bb0:
0000000000003bb0         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_insert_if_absent+63
0000000000003bb4         test       rax, rax
0000000000003bb7         js         loc_3c30

0000000000003bb9         pxor       xmm1, xmm1
0000000000003bbd         mov        rdx, qword [rbx+0x28]
0000000000003bc1         cvtsi2ss   xmm1, rax
0000000000003bc6         mov        rax, qword [rbx+0x10]
0000000000003bca         test       rax, rax
0000000000003bcd         js         loc_3c5a

                     loc_3bd3:
0000000000003bd3         pxor       xmm0, xmm0                                  ; CODE XREF=hash_insert_if_absent+276
0000000000003bd7         cvtsi2ss   xmm0, rax

                     loc_3bdc:
0000000000003bdc         mulss      xmm0, dword [rdx+8]                         ; CODE XREF=hash_insert_if_absent+307
0000000000003be1         ucomiss    xmm1, xmm0
0000000000003be4         ja         loc_3c80

                     loc_3bea:
0000000000003bea         mov        r12, qword [rsp+0x38+var_38]                ; CODE XREF=hash_insert_if_absent+392, hash_insert_if_absent+471
0000000000003bee         cmp        qword [r12], 0x0
0000000000003bf3         je         loc_3d28

0000000000003bf9         mov        rax, qword [rbx+0x48]
0000000000003bfd         test       rax, rax
0000000000003c00         je         loc_3d40

0000000000003c06         mov        rdx, qword [rax+8]
0000000000003c0a         mov        qword [rbx+0x48], rdx

                     loc_3c0e:
0000000000003c0e         mov        rdx, qword [r12+8]                          ; CODE XREF=hash_insert_if_absent+525
0000000000003c13         mov        qword [rax], rbp
0000000000003c16         mov        qword [rax+8], rdx
0000000000003c1a         mov        qword [r12+8], rax
0000000000003c1f         mov        eax, 0x1
0000000000003c24         add        qword [rbx+0x20], 0x1
0000000000003c29         jmp        loc_3b8c
0000000000003c2e         align      16

                     loc_3c30:
0000000000003c30         mov        rdx, rax                                    ; CODE XREF=hash_insert_if_absent+119
0000000000003c33         pxor       xmm1, xmm1
0000000000003c37         and        eax, 0x1
0000000000003c3a         shr        rdx, 0x1
0000000000003c3d         or         rdx, rax
0000000000003c40         mov        rax, qword [rbx+0x10]
0000000000003c44         cvtsi2ss   xmm1, rdx
0000000000003c49         mov        rdx, qword [rbx+0x28]
0000000000003c4d         test       rax, rax
0000000000003c50         addss      xmm1, xmm1
0000000000003c54         jns        loc_3bd3

                     loc_3c5a:
0000000000003c5a         mov        rcx, rax                                    ; CODE XREF=hash_insert_if_absent+141
0000000000003c5d         pxor       xmm0, xmm0
0000000000003c61         shr        rcx, 0x1
0000000000003c64         and        eax, 0x1
0000000000003c67         or         rcx, rax
0000000000003c6a         cvtsi2ss   xmm0, rcx
0000000000003c6f         addss      xmm0, xmm0
0000000000003c73         jmp        loc_3bdc
0000000000003c78         align      128

                     loc_3c80:
0000000000003c80         lea        rdi, qword [rbx+0x28]                       ; CODE XREF=hash_insert_if_absent+164
0000000000003c84         call       check_tuning.isra.0                         ; check_tuning.isra.0
0000000000003c89         mov        rax, qword [rbx+0x10]
0000000000003c8d         mov        rdx, qword [rbx+0x28]
0000000000003c91         test       rax, rax
0000000000003c94         movss      xmm2, dword [rdx+8]
0000000000003c99         js         loc_3d60

0000000000003c9f         pxor       xmm0, xmm0
0000000000003ca3         cvtsi2ss   xmm0, rax

                     loc_3ca8:
0000000000003ca8         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_insert_if_absent+569
0000000000003cac         test       rax, rax
0000000000003caf         js         loc_3d80

0000000000003cb5         pxor       xmm1, xmm1
0000000000003cb9         cvtsi2ss   xmm1, rax

                     loc_3cbe:
0000000000003cbe         movaps     xmm3, xmm2                                  ; CODE XREF=hash_insert_if_absent+601
0000000000003cc1         mulss      xmm3, xmm0
0000000000003cc5         ucomiss    xmm1, xmm3
0000000000003cc8         jbe        loc_3bea

0000000000003cce         cmp        byte [rdx+0x10], 0x0
0000000000003cd2         mulss      xmm0, dword [rdx+0xc]
0000000000003cd7         jne        loc_3cdd

0000000000003cd9         mulss      xmm0, xmm2

                     loc_3cdd:
0000000000003cdd         ucomiss    xmm0, dword [float_75ac]                    ; float_75ac, CODE XREF=hash_insert_if_absent+407
0000000000003ce4         jae        loc_3d53

0000000000003ce6         ucomiss    xmm0, dword [float_75b0]                    ; float_75b0
0000000000003ced         jae        loc_3da0

0000000000003cf3         cvttss2si  rsi, xmm0

                     loc_3cf8:
0000000000003cf8         mov        rdi, rbx                                    ; CODE XREF=hash_insert_if_absent+634
0000000000003cfb         call       hash_rehash                                 ; hash_rehash
0000000000003d00         test       al, al
0000000000003d02         je         loc_3d53

0000000000003d04         xor        ecx, ecx
0000000000003d06         mov        rdx, r12
0000000000003d09         mov        rsi, rbp
0000000000003d0c         mov        rdi, rbx
0000000000003d0f         call       hash_find_entry                             ; hash_find_entry
0000000000003d14         test       rax, rax
0000000000003d17         je         loc_3bea

                     loc_3d1d:
0000000000003d1d         call       j_abort                                     ; abort, CODE XREF=hash_insert_if_absent+29
                        ; endp
0000000000003d22         align      8

                     loc_3d28:
0000000000003d28         mov        qword [r12], rbp                            ; CODE XREF=hash_insert_if_absent+179
0000000000003d2c         mov        eax, 0x1
0000000000003d31         add        qword [rbx+0x20], 0x1
0000000000003d36         add        qword [rbx+0x18], 0x1
0000000000003d3b         jmp        loc_3b8c

                     loc_3d40:
0000000000003d40         mov        edi, 0x10                                   ; argument "__size" for method j_malloc, CODE XREF=hash_insert_if_absent+192
0000000000003d45         call       j_malloc                                    ; malloc
0000000000003d4a         test       rax, rax
0000000000003d4d         jne        loc_3c0e

                     loc_3d53:
0000000000003d53         mov        eax, 0xffffffff                             ; CODE XREF=hash_insert_if_absent+420, hash_insert_if_absent+450
0000000000003d58         jmp        loc_3b8c
0000000000003d5d         align      32

                     loc_3d60:
0000000000003d60         mov        rcx, rax                                    ; CODE XREF=hash_insert_if_absent+345
0000000000003d63         pxor       xmm0, xmm0
0000000000003d67         shr        rcx, 0x1
0000000000003d6a         and        eax, 0x1
0000000000003d6d         or         rcx, rax
0000000000003d70         cvtsi2ss   xmm0, rcx
0000000000003d75         addss      xmm0, xmm0
0000000000003d79         jmp        loc_3ca8
0000000000003d7e         align      128

                     loc_3d80:
0000000000003d80         mov        rcx, rax                                    ; CODE XREF=hash_insert_if_absent+367
0000000000003d83         pxor       xmm1, xmm1
0000000000003d87         shr        rcx, 0x1
0000000000003d8a         and        eax, 0x1
0000000000003d8d         or         rcx, rax
0000000000003d90         cvtsi2ss   xmm1, rcx
0000000000003d95         addss      xmm1, xmm1
0000000000003d99         jmp        loc_3cbe
0000000000003d9e         align      32

                     loc_3da0:
0000000000003da0         subss      xmm0, dword [float_75b0]                    ; float_75b0, CODE XREF=hash_insert_if_absent+429
0000000000003da8         movabs     rax, 0x8000000000000000
0000000000003db2         cvttss2si  rsi, xmm0
0000000000003db7         xor        rsi, rax
0000000000003dba         jmp        loc_3cf8

                     loc_3dbf:
0000000000003dbf         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_insert_if_absent+90
                        ; endp
0000000000003dc4         align      16                                          ; End of unwind block (FDE at 0x8954)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24


                     hash_insert:
0000000000003dd0         push       rbx                                         ; Begin of unwind block (FDE at 0x8990), CODE XREF=record_file+70
0000000000003dd1         mov        rbx, rsi
0000000000003dd4         sub        rsp, 0x10
0000000000003dd8         mov        rdx, rsp
0000000000003ddb         mov        rax, qword [fs:0x28]
0000000000003de4         mov        qword [rsp+0x18+var_10], rax
0000000000003de9         xor        eax, eax
0000000000003deb         call       hash_insert_if_absent                       ; hash_insert_if_absent
0000000000003df0         cmp        eax, 0xffffffff
0000000000003df3         je         loc_3e20

0000000000003df5         test       eax, eax
0000000000003df7         jne        loc_3dfd

0000000000003df9         mov        rbx, qword [rsp+0x18+var_18]

                     loc_3dfd:
0000000000003dfd         mov        rcx, qword [rsp+0x18+var_10]                ; CODE XREF=hash_insert+39, hash_insert+82
0000000000003e02         xor        rcx, qword [fs:0x28]
0000000000003e0b         mov        rax, rbx
0000000000003e0e         jne        loc_3e24

0000000000003e10         add        rsp, 0x10
0000000000003e14         pop        rbx
0000000000003e15         ret
                        ; endp
0000000000003e16         align      32

                     loc_3e20:
0000000000003e20         xor        ebx, ebx                                    ; CODE XREF=hash_insert+35
0000000000003e22         jmp        loc_3dfd

                     loc_3e24:
0000000000003e24         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_insert+62
                        ; endp
0000000000003e29         align      16                                          ; End of unwind block (FDE at 0x8990)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40


                     hash_delete:
0000000000003e30         push       r12                                         ; Begin of unwind block (FDE at 0x89b4)
0000000000003e32         push       rbp
0000000000003e33         mov        ecx, 0x1
0000000000003e38         push       rbx
0000000000003e39         mov        rbx, rdi
0000000000003e3c         sub        rsp, 0x10
0000000000003e40         mov        rdx, rsp
0000000000003e43         mov        rax, qword [fs:0x28]
0000000000003e4c         mov        qword [rsp+0x28+var_20], rax
0000000000003e51         xor        eax, eax
0000000000003e53         call       hash_find_entry                             ; hash_find_entry
0000000000003e58         test       rax, rax
0000000000003e5b         mov        rbp, rax
0000000000003e5e         je         loc_3e6f

0000000000003e60         mov        rax, qword [rsp+0x28+var_28]
0000000000003e64         sub        qword [rbx+0x20], 0x1
0000000000003e69         cmp        qword [rax], 0x0
0000000000003e6d         je         loc_3e90

                     loc_3e6f:
0000000000003e6f         mov        rcx, qword [rsp+0x28+var_20]                ; CODE XREF=hash_delete+46, hash_delete+159, hash_delete+229, hash_delete+278, hash_delete+321
0000000000003e74         xor        rcx, qword [fs:0x28]
0000000000003e7d         mov        rax, rbp
0000000000003e80         jne        loc_402e

0000000000003e86         add        rsp, 0x10
0000000000003e8a         pop        rbx
0000000000003e8b         pop        rbp
0000000000003e8c         pop        r12
0000000000003e8e         ret
                        ; endp
0000000000003e8f         align      16

                     loc_3e90:
0000000000003e90         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_delete+61
0000000000003e94         sub        rax, 0x1
0000000000003e98         test       rax, rax
0000000000003e9b         mov        qword [rbx+0x18], rax
0000000000003e9f         js         loc_3fa0

0000000000003ea5         pxor       xmm0, xmm0
0000000000003ea9         cvtsi2ss   xmm0, rax

                     loc_3eae:
0000000000003eae         mov        rax, qword [rbx+0x10]                       ; CODE XREF=hash_delete+393
0000000000003eb2         mov        rdx, qword [rbx+0x28]
0000000000003eb6         test       rax, rax
0000000000003eb9         js         loc_3f80

0000000000003ebf         pxor       xmm1, xmm1
0000000000003ec3         cvtsi2ss   xmm1, rax

                     loc_3ec8:
0000000000003ec8         mulss      xmm1, dword [rdx]                           ; CODE XREF=hash_delete+361
0000000000003ecc         ucomiss    xmm1, xmm0
0000000000003ecf         jbe        loc_3e6f

0000000000003ed1         lea        rdi, qword [rbx+0x28]
0000000000003ed5         call       check_tuning.isra.0                         ; check_tuning.isra.0
0000000000003eda         mov        rax, qword [rbx+0x10]
0000000000003ede         mov        rdx, qword [rbx+0x28]
0000000000003ee2         test       rax, rax
0000000000003ee5         js         loc_4010

0000000000003eeb         pxor       xmm0, xmm0
0000000000003eef         cvtsi2ss   xmm0, rax

                     loc_3ef4:
0000000000003ef4         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_delete+505
0000000000003ef8         test       rax, rax
0000000000003efb         js         loc_3ff0

0000000000003f01         pxor       xmm1, xmm1
0000000000003f05         cvtsi2ss   xmm1, rax

                     loc_3f0a:
0000000000003f0a         movss      xmm2, dword [rdx]                           ; CODE XREF=hash_delete+473
0000000000003f0e         mulss      xmm2, xmm0
0000000000003f12         ucomiss    xmm2, xmm1
0000000000003f15         jbe        loc_3e6f

0000000000003f1b         cmp        byte [rdx+0x10], 0x0
0000000000003f1f         mulss      xmm0, dword [rdx+4]
0000000000003f24         je         loc_3fe0

                     loc_3f2a:
0000000000003f2a         ucomiss    xmm0, dword [float_75b0]                    ; float_75b0, CODE XREF=hash_delete+437
0000000000003f31         jae        loc_3fc0

0000000000003f37         cvttss2si  rsi, xmm0

                     loc_3f3c:
0000000000003f3c         mov        rdi, rbx                                    ; CODE XREF=hash_delete+426
0000000000003f3f         call       hash_rehash                                 ; hash_rehash
0000000000003f44         test       al, al
0000000000003f46         jne        loc_3e6f

0000000000003f4c         mov        rdi, qword [rbx+0x48]
0000000000003f50         test       rdi, rdi
0000000000003f53         je         loc_3f69

0000000000003f55         nop        dword [rax]

                     loc_3f58:
0000000000003f58         mov        r12, qword [rdi+8]                          ; CODE XREF=hash_delete+311
0000000000003f5c         call       j_free                                      ; free
0000000000003f61         test       r12, r12
0000000000003f64         mov        rdi, r12
0000000000003f67         jne        loc_3f58

                     loc_3f69:
0000000000003f69         mov        qword [rbx+0x48], 0x0                       ; CODE XREF=hash_delete+291
0000000000003f71         jmp        loc_3e6f
0000000000003f76         align      128

                     loc_3f80:
0000000000003f80         mov        rcx, rax                                    ; CODE XREF=hash_delete+137
0000000000003f83         pxor       xmm1, xmm1
0000000000003f87         shr        rcx, 0x1
0000000000003f8a         and        eax, 0x1
0000000000003f8d         or         rcx, rax
0000000000003f90         cvtsi2ss   xmm1, rcx
0000000000003f95         addss      xmm1, xmm1
0000000000003f99         jmp        loc_3ec8
0000000000003f9e         align      32

                     loc_3fa0:
0000000000003fa0         mov        rdx, rax                                    ; CODE XREF=hash_delete+111
0000000000003fa3         pxor       xmm0, xmm0
0000000000003fa7         shr        rdx, 0x1
0000000000003faa         and        eax, 0x1
0000000000003fad         or         rdx, rax
0000000000003fb0         cvtsi2ss   xmm0, rdx
0000000000003fb5         addss      xmm0, xmm0
0000000000003fb9         jmp        loc_3eae
0000000000003fbe         align      64

                     loc_3fc0:
0000000000003fc0         subss      xmm0, dword [float_75b0]                    ; float_75b0, CODE XREF=hash_delete+257
0000000000003fc8         movabs     rax, 0x8000000000000000
0000000000003fd2         cvttss2si  rsi, xmm0
0000000000003fd7         xor        rsi, rax
0000000000003fda         jmp        loc_3f3c
0000000000003fdf         align      32

                     loc_3fe0:
0000000000003fe0         mulss      xmm0, dword [rdx+8]                         ; CODE XREF=hash_delete+244
0000000000003fe5         jmp        loc_3f2a
0000000000003fea         align      16

                     loc_3ff0:
0000000000003ff0         mov        rcx, rax                                    ; CODE XREF=hash_delete+203
0000000000003ff3         pxor       xmm1, xmm1
0000000000003ff7         shr        rcx, 0x1
0000000000003ffa         and        eax, 0x1
0000000000003ffd         or         rcx, rax
0000000000004000         cvtsi2ss   xmm1, rcx                                   ; DATA XREF=isdir+60, canonicalize_filename_mode+784, sub_4780+88
0000000000004005         addss      xmm1, xmm1
0000000000004009         jmp        loc_3f0a
000000000000400e         align      16

                     loc_4010:
0000000000004010         mov        rcx, rax                                    ; CODE XREF=hash_delete+181
0000000000004013         pxor       xmm0, xmm0
0000000000004017         shr        rcx, 0x1
000000000000401a         and        eax, 0x1
000000000000401d         or         rcx, rax
0000000000004020         cvtsi2ss   xmm0, rcx
0000000000004025         addss      xmm0, xmm0
0000000000004029         jmp        loc_3ef4

                     loc_402e:
000000000000402e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_delete+80
                        ; endp
0000000000004033         align      64                                          ; End of unwind block (FDE at 0x89b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     triple_hash:
0000000000004040         push       rbp                                         ; Begin of unwind block (FDE at 0x89ec), DATA XREF=canonicalize_filename_mode+1270
0000000000004041         push       rbx
0000000000004042         mov        rbp, rdi
0000000000004045         mov        rbx, rsi
0000000000004048         sub        rsp, 0x8
000000000000404c         mov        rdi, qword [rdi]
000000000000404f         call       hash_pjw                                    ; hash_pjw
0000000000004054         xor        rax, qword [rbp+8]
0000000000004058         xor        edx, edx
000000000000405a         add        rsp, 0x8
000000000000405e         div        rbx
0000000000004061         pop        rbx
0000000000004062         pop        rbp
0000000000004063         mov        rax, rdx
0000000000004066         ret
                        ; endp
0000000000004067         align      16                                          ; End of unwind block (FDE at 0x89ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     triple_hash_no_name:
0000000000004070         mov        rax, qword [rdi+8]                          ; Begin of unwind block (FDE at 0x8a14)
0000000000004074         xor        edx, edx
0000000000004076         div        rsi
0000000000004079         mov        rax, rdx
000000000000407c         ret
                        ; endp
000000000000407d         align      128                                         ; End of unwind block (FDE at 0x8a14)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     triple_compare:
0000000000004080         xor        eax, eax                                    ; Begin of unwind block (FDE at 0x8a28)
0000000000004082         mov        rdx, qword [rsi+8]
0000000000004086         cmp        qword [rdi+8], rdx
000000000000408a         je         loc_4090

                     loc_408c:
000000000000408c         ret                                                    ; CODE XREF=triple_compare+24
                        ; endp
000000000000408e         align      16

                     loc_4090:
0000000000004090         mov        rcx, qword [rsi+0x10]                       ; CODE XREF=triple_compare+10
0000000000004094         cmp        qword [rdi+0x10], rcx
0000000000004098         jne        loc_408c

000000000000409a         sub        rsp, 0x8
000000000000409e         mov        rsi, qword [rsi]
00000000000040a1         mov        rdi, qword [rdi]
00000000000040a4         call       same_name                                   ; same_name
00000000000040a9         add        rsp, 0x8
00000000000040ad         ret
                        ; endp
00000000000040ae         align      16                                          ; End of unwind block (FDE at 0x8a28)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     triple_compare_ino_str:
00000000000040b0         xor        eax, eax                                    ; Begin of unwind block (FDE at 0x8a40), DATA XREF=canonicalize_filename_mode+1261
00000000000040b2         mov        rdx, qword [rsi+8]
00000000000040b6         cmp        qword [rdi+8], rdx
00000000000040ba         je         loc_40c0

                     loc_40bc:
00000000000040bc         ret                                                    ; CODE XREF=triple_compare_ino_str+24
                        ; endp
00000000000040be         align      64

                     loc_40c0:
00000000000040c0         mov        rcx, qword [rsi+0x10]                       ; CODE XREF=triple_compare_ino_str+10
00000000000040c4         cmp        qword [rdi+0x10], rcx
00000000000040c8         jne        loc_40bc

00000000000040ca         sub        rsp, 0x8
00000000000040ce         mov        rsi, qword [rsi]                            ; argument "__s2" for method j_strcmp
00000000000040d1         mov        rdi, qword [rdi]                            ; argument "__s1" for method j_strcmp
00000000000040d4         call       j_strcmp                                    ; strcmp
00000000000040d9         test       eax, eax
00000000000040db         sete       al
00000000000040de         add        rsp, 0x8
00000000000040e2         ret
                        ; endp
00000000000040e3         align      16                                          ; End of unwind block (FDE at 0x8a40)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     triple_free:
00000000000040f0         push       rbx                                         ; Begin of unwind block (FDE at 0x8a58), CODE XREF=record_file+98, DATA XREF=canonicalize_filename_mode+1254
00000000000040f1         mov        rbx, rdi
00000000000040f4         mov        rdi, qword [rdi]                            ; argument "__ptr" for method j_free
00000000000040f7         call       j_free                                      ; free
00000000000040fc         mov        rdi, rbx                                    ; argument "__ptr" for method j_free
00000000000040ff         pop        rbx
0000000000004100         jmp        j_free                                      ; free
                        ; endp
0000000000004105         align      16                                          ; End of unwind block (FDE at 0x8a58)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000004110         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x8a74), CODE XREF=main+41
0000000000004113         push       rbx
0000000000004114         je         loc_418d

0000000000004116         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
000000000000411b         mov        rbx, rdi
000000000000411e         call       j_strrchr                                   ; strrchr
0000000000004123         test       rax, rax
0000000000004126         je         loc_417d

0000000000004128         lea        r8, qword [rax+1]
000000000000412c         mov        rdx, r8
000000000000412f         sub        rdx, rbx
0000000000004132         cmp        rdx, 0x6
0000000000004136         jle        loc_417d

0000000000004138         lea        rsi, qword [rax-6]
000000000000413c         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000004143         mov        ecx, 0x7
0000000000004148         rep  cmpsb byte [rsi], byte [rdi]
000000000000414a         seta       dl
000000000000414d         sbb        dl, 0x0
0000000000004150         test       dl, dl
0000000000004152         jne        loc_417d

0000000000004154         lea        rdi, qword [aLibs+8]                        ; 0x7600
000000000000415b         mov        ecx, 0x3
0000000000004160         mov        rsi, r8
0000000000004163         mov        rbx, r8
0000000000004166         rep  cmpsb byte [rsi], byte [rdi]
0000000000004168         seta       dl
000000000000416b         sbb        dl, 0x0
000000000000416e         test       dl, dl
0000000000004170         jne        loc_417d

0000000000004172         lea        rbx, qword [rax+4]
0000000000004176         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_417d:
000000000000417d         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
0000000000004184         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
000000000000418b         pop        rbx
000000000000418c         ret
                        ; endp

                     loc_418d:
000000000000418d         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
0000000000004194         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
000000000000419b         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
00000000000041a0         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
00000000000041a5         call       j_fwrite                                    ; fwrite
00000000000041aa         call       j_abort                                     ; abort
                        ; endp
00000000000041af         align      16                                          ; End of unwind block (FDE at 0x8a74)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
00000000000041b0         push       rbp                                         ; Begin of unwind block (FDE at 0x8a94), CODE XREF=sub_49e0+2597, sub_49e0+2619
00000000000041b1         push       rbx
00000000000041b2         mov        rbp, rdi
00000000000041b5         mov        ebx, esi
00000000000041b7         sub        rsp, 0x8
00000000000041bb         call       locale_charset                              ; locale_charset
00000000000041c0         movzx      edx, byte [rax]
00000000000041c3         and        edx, 0xffffffdf
00000000000041c6         cmp        dl, 0x55
00000000000041c9         je         loc_4240

00000000000041cb         cmp        dl, 0x47
00000000000041ce         je         loc_41f0

                     loc_41d0:
00000000000041d0         lea        rax, qword [aLibs+27]                       ; 0x7613, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
00000000000041d7         lea        rdx, qword [aLibs+29]                       ; 0x7615
00000000000041de         cmp        ebx, 0x9
00000000000041e1         cmovne     rax, rdx
00000000000041e5         add        rsp, 0x8
00000000000041e9         pop        rbx
00000000000041ea         pop        rbp
00000000000041eb         ret
                        ; endp
00000000000041ec         align      16

                     loc_41f0:
00000000000041f0         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
00000000000041f4         and        edx, 0xffffffdf
00000000000041f7         cmp        dl, 0x42
00000000000041fa         jne        loc_41d0

00000000000041fc         cmp        byte [rax+2], 0x31
0000000000004200         jne        loc_41d0

0000000000004202         cmp        byte [rax+3], 0x38
0000000000004206         jne        loc_41d0

0000000000004208         cmp        byte [rax+4], 0x30
000000000000420c         jne        loc_41d0

000000000000420e         cmp        byte [rax+5], 0x33
0000000000004212         jne        loc_41d0

0000000000004214         cmp        byte [rax+6], 0x30
0000000000004218         jne        loc_41d0

000000000000421a         cmp        byte [rax+7], 0x0
000000000000421e         jne        loc_41d0

0000000000004220         cmp        byte [rbp], 0x60
0000000000004224         lea        rax, qword [aLibs+20]                       ; 0x760c
000000000000422b         lea        rdx, qword [aLibs+24]                       ; 0x7610
0000000000004232         cmovne     rax, rdx
0000000000004236         add        rsp, 0x8
000000000000423a         pop        rbx
000000000000423b         pop        rbp
000000000000423c         ret
                        ; endp
000000000000423d         align      64

                     loc_4240:
0000000000004240         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
0000000000004244         and        edx, 0xffffffdf
0000000000004247         cmp        dl, 0x54
000000000000424a         jne        loc_41d0

000000000000424c         movzx      edx, byte [rax+2]
0000000000004250         and        edx, 0xffffffdf
0000000000004253         cmp        dl, 0x46
0000000000004256         jne        loc_41d0

000000000000425c         cmp        byte [rax+3], 0x2d
0000000000004260         jne        loc_41d0

0000000000004266         cmp        byte [rax+4], 0x38
000000000000426a         jne        loc_41d0

0000000000004270         cmp        byte [rax+5], 0x0
0000000000004274         jne        loc_41d0

000000000000427a         cmp        byte [rbp], 0x60
000000000000427e         lea        rax, qword [aLibs+12]                       ; 0x7604
0000000000004285         lea        rdx, qword [aLibs+16]                       ; 0x7608
000000000000428c         cmovne     rax, rdx
0000000000004290         add        rsp, 0x8
0000000000004294         pop        rbx
0000000000004295         pop        rbp
0000000000004296         ret
                        ; endp
0000000000004297         align      32                                          ; End of unwind block (FDE at 0x8a94)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
00000000000042a0         push       r15                                         ; Begin of unwind block (FDE at 0x8ad8), CODE XREF=sub_49e0+1165, sub_49e0+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
00000000000042a2         push       r14
00000000000042a4         mov        r15d, r8d
00000000000042a7         push       r13
00000000000042a9         push       r12
00000000000042ab         mov        r14, rdi
00000000000042ae         push       rbp
00000000000042af         push       rbx
00000000000042b0         mov        ebx, r9d
00000000000042b3         mov        r13, rsi
00000000000042b6         mov        rbp, rcx
00000000000042b9         and        ebx, 0x2
00000000000042bc         sub        rsp, 0xb8
00000000000042c3         mov        rax, qword [rsp+0xe8+arg_0]
00000000000042cb         mov        qword [rsp+0xe8+var_D8], rdx
00000000000042d0         mov        dword [rsp+0xe8+var_E0], r8d
00000000000042d5         mov        dword [rsp+0xe8+var_70], r9d
00000000000042da         mov        qword [rsp+0xe8+var_C8], rax
00000000000042df         mov        rax, qword [rsp+0xe8+arg_8]
00000000000042e7         mov        qword [rsp+0xe8+var_80], rax
00000000000042ec         mov        rax, qword [rsp+0xe8+arg_10]
00000000000042f4         mov        qword [rsp+0xe8+var_88], rax
00000000000042f9         mov        rax, qword [fs:0x28]
0000000000004302         mov        qword [rsp+0xe8+var_40], rax
000000000000430a         xor        eax, eax
000000000000430c         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000004311         cmp        r15d, 0xa
0000000000004315         mov        qword [rsp+0xe8+var_90], rax
000000000000431a         ja         loc_54cf

0000000000004320         lea        rcx, qword [switch_table_7680]              ; switch_table_7680
0000000000004327         mov        edx, r15d
000000000000432a         movsxd     rax, dword [rcx+rdx*4]
000000000000432e         add        rax, rcx
0000000000004331         jmp        rax                                         ; switch statement using table at 0x7680, with 11 cases, 0x4333,0x4f04,0x4f60,0x4fb5,0x4ffa,0x5034,0x50da,0x5114,0x5308

                     loc_4333:
0000000000004333         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_49e0+1318
0000000000004338         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000433d         xor        r12d, r12d
0000000000004340         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004349         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000434e         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_4353:
0000000000004353         lea        rax, qword [aLibs+29]                       ; 0x7615, CODE XREF=sub_49e0+1876
000000000000435a         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004363         xor        r15d, r15d
0000000000004366         mov        dword [rsp+0xe8+var_E0], 0x2
000000000000436e         mov        qword [rsp+0xe8+var_A0], rax

                     loc_4373:
0000000000004373         xor        r11d, r11d                                  ; CODE XREF=sub_49e0+180, sub_49e0+1400, sub_49e0+1488, sub_49e0+1557, sub_49e0+1615, sub_49e0+1781, sub_49e0+1839, sub_49e0+2408, sub_49e0+2485
0000000000004376         mov        rax, rbp
0000000000004379         mov        r8d, r12d
000000000000437c         mov        rbp, r11
000000000000437f         mov        r11, rax
0000000000004382         nop        word [rax+rax]

                     loc_4388:
0000000000004388         cmp        r11, rbp                                    ; CODE XREF=sub_4490+194
000000000000438b         setne      r12b
000000000000438f         cmp        r11, 0xffffffffffffffff
0000000000004393         jne        loc_43a2

0000000000004395         mov        rax, qword [rsp+0xe8+var_D8]
000000000000439a         cmp        byte [rax+rbp], 0x0
000000000000439e         setne      r12b

                     loc_43a2:
00000000000043a2         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
00000000000043a5         je         loc_4a00

00000000000043ab         cmp        dword [rsp+0xe8+var_E0], 0x2
00000000000043b0         mov        rdi, qword [rsp+0xe8+var_D8]
00000000000043b5         lea        r9, qword [rdi+rbp]
00000000000043b9         setne      al
00000000000043bc         and        al, byte [rsp+0xe8+var_DB]
00000000000043c0         mov        r10d, eax
00000000000043c3         je         loc_4470

00000000000043c9         mov        rax, qword [rsp+0xe8+var_D0]
00000000000043ce         test       rax, rax
00000000000043d1         je         loc_4800

00000000000043d7         cmp        r11, 0xffffffffffffffff
00000000000043db         lea        rbx, qword [rbp+rax]
00000000000043e0         jne        loc_4410

00000000000043e2         cmp        rax, 0x1
00000000000043e6         jbe        loc_4410

00000000000043e8         mov        byte [rsp+0xe8+var_B0], r8b
00000000000043ed         mov        byte [rsp+0xe8+var_B8], r10b
00000000000043f2         mov        qword [rsp+0xe8+var_C0], r9
00000000000043f7         call       j_strlen                                    ; strlen
00000000000043fc         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000004402         movzx      r10d, byte [rsp+0xe8+var_B8]
0000000000004408         mov        r11, rax
000000000000440b         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_4410:
0000000000004410         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
0000000000004413         mov        byte [rsp+0xe8+var_C0], r10b
0000000000004418         ja         loc_49d0

000000000000441e         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
0000000000004423         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
0000000000004428         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
000000000000442b         mov        qword [rsp+0xe8+var_A8], r11
0000000000004430         mov        byte [rsp+0xe8+var_B0], r8b
0000000000004435         mov        qword [rsp+0xe8+var_B8], r9
000000000000443a         call       j_memcmp                                    ; memcmp
000000000000443f         test       eax, eax
0000000000004441         mov        r9, qword [rsp+0xe8+var_B8]
0000000000004446         movzx      r8d, byte [rsp+0xe8+var_B0]
000000000000444c         mov        r11, qword [rsp+0xe8+var_A8]
0000000000004451         jne        loc_49d0

0000000000004457         cmp        byte [rsp+0xe8+var_D9], 0x0
000000000000445c         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000004462         jne        loc_53e5

0000000000004468         nop        dword [rax+rax]

                     loc_4470:
0000000000004470         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_49c0+19
0000000000004474         cmp        bl, 0x7e
0000000000004477         ja         loc_4798

000000000000447d         lea        rcx, qword [switch_table_7680+44]           ; 0x76ac
0000000000004484         movzx      edx, bl
0000000000004487         movsxd     rax, dword [rcx+rdx*4]
000000000000448b         add        rax, rcx
000000000000448e         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_4490:
0000000000004490         xor        r10d, r10d
0000000000004493         cmp        r11, 0x1
0000000000004497         setne      al
000000000000449a         cmp        r11, 0xffffffffffffffff
000000000000449e         jne        loc_44ac

00000000000044a0         mov        rax, qword [rsp+arg_8]
00000000000044a5         cmp        byte [rax+1], 0x0
00000000000044a9         setne      al

                     loc_44ac:
00000000000044ac         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_4490+14
00000000000044b1         sete       dl
00000000000044b4         test       al, al
00000000000044b6         je         loc_4708

                     loc_44bc:
00000000000044bc         xor        r12d, r12d                                  ; CODE XREF=sub_4700+11
00000000000044bf         xor        eax, eax
00000000000044c1         nop        dword [rax]
                        ; endp

                     loc_44c8:
00000000000044c8         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_46b0+50, sub_4780+119
00000000000044cd         jne        loc_45e2

00000000000044d3         test       dl, dl
00000000000044d5         jne        loc_45e2

                     loc_44db:
00000000000044db         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_4590+87
00000000000044e0         test       rsi, rsi
00000000000044e3         je         loc_44f9

00000000000044e5         mov        edx, ebx
00000000000044e7         shr        dl, 0x5
00000000000044ea         movzx      edx, dl
00000000000044ed         mov        edx, dword [rsi+rdx*4]
00000000000044f0         bt         edx, ebx
00000000000044f3         jb         loc_4643

                     loc_44f9:
00000000000044f9         test       r10b, r10b                                  ; CODE XREF=sub_4490+83, sub_4590+93
00000000000044fc         jne        loc_4643

0000000000004502         xor        eax, 0x1
0000000000004505         add        rbp, 0x1
0000000000004509         and        eax, r8d

                     loc_450c:
000000000000450c         test       al, al                                      ; CODE XREF=sub_49e0+936
000000000000450e         je         loc_4530

0000000000004510         cmp        r13, r15
0000000000004513         jbe        loc_451a

0000000000004515         mov        byte [r14+r15], 0x27

                     loc_451a:
000000000000451a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4490+131
000000000000451e         cmp        r13, rax
0000000000004521         jbe        loc_4529

0000000000004523         mov        byte [r14+r15+1], 0x27

                     loc_4529:
0000000000004529         add        r15, 0x2                                    ; CODE XREF=sub_4490+145
000000000000452d         xor        r8d, r8d

                     loc_4530:
0000000000004530         cmp        r15, r13                                    ; CODE XREF=sub_4490+126, sub_4590+275, sub_49e0+869
0000000000004533         jae        loc_4539

0000000000004535         mov        byte [r14+r15], bl

                     loc_4539:
0000000000004539         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_4490+163
000000000000453e         add        r15, 0x1
0000000000004542         mov        eax, 0x0
0000000000004547         test       r12b, r12b
000000000000454a         cmove      edi, eax
000000000000454d         mov        byte [rsp+0xe8+var_DA], dil
0000000000004552         jmp        loc_4388
0000000000004557         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_4560:
0000000000004560         xor        r10d, r10d
0000000000004563         mov        eax, dword [rsp+arg_0]
0000000000004567         cmp        eax, 0x2
000000000000456a         je         loc_4b28

0000000000004570         cmp        eax, 0x5
0000000000004573         je         loc_4ae8

0000000000004579         cmp        eax, 0x2
000000000000457c         mov        ebx, 0x3f
0000000000004581         sete       dl
0000000000004584         xor        r12d, r12d
0000000000004587         xor        eax, eax
0000000000004589         jmp        sub_4490+56
                        ; endp
000000000000458e         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_4590:
0000000000004590         xor        r10d, r10d
0000000000004593         cmp        dword [rsp+arg_0], 0x2
0000000000004598         je         loc_4aa0

000000000000459e         mov        byte [rsp+arg_74], r12b
00000000000045a3         xor        edx, edx
00000000000045a5         xor        eax, eax
00000000000045a7         mov        ebx, 0x27
00000000000045ac         jmp        sub_4490+56
                        ; endp
00000000000045b1         nop        dword [rax]
00000000000045b8         mov        edx, 0x9
00000000000045bd         mov        ebx, 0x74

                     loc_45c2:
00000000000045c2         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_4750+10, sub_4840+37, sub_4980+53
00000000000045c7         sete       al
00000000000045ca         and        al, byte [rsp+arg_7]
00000000000045ce         jne        sub_4700+30

00000000000045d4         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_4590+114
00000000000045d9         jne        loc_4640

                     loc_45db:
00000000000045db         mov        ebx, edx                                    ; CODE XREF=sub_46b0+18
00000000000045dd         xor        r12d, r12d
00000000000045e0         xor        eax, eax
                        ; endp

                     loc_45e2:
00000000000045e2         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_4490+61, sub_4490+69
00000000000045e7         jne        loc_44db

00000000000045ed         jmp        loc_44f9
00000000000045f2         nop        word [rax+rax]
00000000000045f8         mov        edx, 0x8
00000000000045fd         mov        ebx, 0x62
0000000000004602         jmp        sub_4590+68
0000000000004604         nop        dword [rax]
0000000000004608         cmp        dword [rsp+8], 0x2
000000000000460d         je         sub_49e0                                    ; sub_49e0
0000000000004613         cmp        byte [rsp+0xd], 0x0
0000000000004618         je         sub_4820+16

                     loc_461e:
000000000000461e         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_4820+8
0000000000004623         je         loc_4830

0000000000004629         cmp        qword [rsp+arg_10], 0x0
000000000000462f         jne        loc_49eb

0000000000004635         mov        ebx, 0x5c
000000000000463a         nop        word [rax+rax]
                        ; endp

                     loc_4640:
0000000000004640         xor        r12d, r12d                                  ; CODE XREF=sub_4590+73, sub_4980+29
                        ; endp

                     loc_4643:
0000000000004643         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_4490+99, sub_4490+108
0000000000004648         sete       dl
000000000000464b         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000004650         mov        eax, edx
0000000000004652         jne        loc_4ea8

0000000000004658         mov        eax, r8d
000000000000465b         xor        eax, 0x1
000000000000465e         and        al, dl
0000000000004660         je         loc_4691

0000000000004662         cmp        r13, r15
0000000000004665         jbe        loc_466c

0000000000004667         mov        byte [r14+r15], 0x27

                     loc_466c:
000000000000466c         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_4590+213
0000000000004670         cmp        r13, rdx
0000000000004673         jbe        loc_467b

0000000000004675         mov        byte [r14+r15+1], 0x24

                     loc_467b:
000000000000467b         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_4590+227
000000000000467f         cmp        r13, rdx
0000000000004682         jbe        loc_468a

0000000000004684         mov        byte [r14+r15+2], 0x27

                     loc_468a:
000000000000468a         add        r15, 0x3                                    ; CODE XREF=sub_4590+242
000000000000468e         mov        r8d, eax

                     loc_4691:
0000000000004691         cmp        r13, r15                                    ; CODE XREF=sub_4590+208
0000000000004694         jbe        loc_469b

0000000000004696         mov        byte [r14+r15], 0x5c

                     loc_469b:
000000000000469b         add        r15, 0x1                                    ; CODE XREF=sub_4590+260
000000000000469f         add        rbp, 0x1
00000000000046a3         jmp        loc_4530
00000000000046a8         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_46b0:
00000000000046b0         cmp        byte [rsp+arg_5], 0x0
00000000000046b5         jne        loc_4883

00000000000046bb         xor        edx, edx
00000000000046bd         test       byte [rsp+arg_70], 0x1
00000000000046c2         je         loc_45db

00000000000046c8         add        rbp, 0x1
00000000000046cc         jmp        quotearg_buffer_restyled+232
                        ; endp
00000000000046d1         nop        dword [rax]
00000000000046d8         cmp        dword [rsp+8], 0x2
00000000000046dd         sete       dl
00000000000046e0         xor        eax, eax
00000000000046e2         jmp        sub_4490+56
00000000000046e7         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_46f0:
00000000000046f0         mov        edx, 0x7
00000000000046f5         mov        ebx, 0x61
00000000000046fa         jmp        sub_4590+68
                        ; endp
00000000000046ff         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4700:
0000000000004700         cmp        dword [rsp+8], 0x2
0000000000004705         sete       dl
                        ; endp

                     loc_4708:
0000000000004708         test       rbp, rbp                                    ; CODE XREF=sub_4490+38, sub_4920+35
000000000000470b         jne        loc_44bc

0000000000004711         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_4950+43
0000000000004716         and        al, dl
0000000000004718         je         sub_4490+56

000000000000471e         mov        rbp, r11
0000000000004721         mov        dword [rsp+arg_0], 0x2
0000000000004729         jmp        sub_49e0+1097
                        ; endp
000000000000472e         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_4730:
0000000000004730         cmp        dword [rsp+arg_0], 0x2
0000000000004735         sete       dl
0000000000004738         xor        r12d, r12d
000000000000473b         jmp        sub_4700+17
                        ; endp
000000000000473d         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_4740:
0000000000004740         cmp        dword [rsp+arg_0], 0x2
0000000000004745         mov        ebx, 0x20
000000000000474a         sete       dl
000000000000474d         jmp        sub_4700+17
                        ; endp
000000000000474f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_4750:
0000000000004750         mov        edx, 0xd
0000000000004755         mov        ebx, 0x72
000000000000475a         jmp        loc_45c2
000000000000475f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4760:
0000000000004760         mov        edx, 0xc
0000000000004765         mov        ebx, 0x66
000000000000476a         jmp        sub_4590+68
                        ; endp
000000000000476f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4770:
0000000000004770         mov        edx, 0xb
0000000000004775         mov        ebx, 0x76
000000000000477a         jmp        sub_4590+68
                        ; endp
000000000000477f         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4780:
0000000000004780         mov        edx, 0xa
0000000000004785         mov        ebx, 0x6e
000000000000478a         jmp        sub_4590+50
                        ; endp
000000000000478f         align      16

                     loc_4790:
0000000000004790         xor        r10d, r10d                                  ; CODE XREF=sub_4780+135
0000000000004793         nop        dword [rax+rax]

                     loc_4798:
0000000000004798         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
000000000000479e         jne        loc_4b48

00000000000047a4         mov        qword [rsp+0xe8+var_B0], r11
00000000000047a9         mov        byte [rsp+0xe8+var_B8], r8b
00000000000047ae         mov        byte [rsp+0xe8+var_C0], r10b
00000000000047b3         call       j___ctype_b_loc                             ; __ctype_b_loc
00000000000047b8         mov        rcx, qword [rax]
00000000000047bb         movzx      edx, bl
00000000000047be         movzx      r10d, byte [rsp+0xe8+var_C0]
00000000000047c4         movzx      r8d, byte [rsp+0xe8+var_B8]
00000000000047ca         mov        r11, qword [rsp+0xe8+var_B0]
00000000000047cf         mov        edi, 0x1
00000000000047d4         movzx      eax, word [rcx+rdx*2]
00000000000047d8         and        ax, 0x4000
00000000000047dc         setne      r12b
00000000000047e0         sete       al
00000000000047e3         and        al, byte [rsp+0xe8+var_DB]

                     loc_47e7:
00000000000047e7         test       al, al                                      ; CODE XREF=sub_49e0+2221
00000000000047e9         jne        loc_5181

00000000000047ef         cmp        dword [rsp+0xe8+var_E0], 0x2
00000000000047f4         sete       dl
00000000000047f7         jmp        loc_44c8
00000000000047fc         align      2048

                     loc_4800:
0000000000004800         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
0000000000004804         cmp        bl, 0x7e
0000000000004807         ja         loc_4790

0000000000004809         lea        rcx, qword [switch_table_7680+552]          ; 0x78a8
0000000000004810         movzx      edx, bl
0000000000004813         movsxd     rax, dword [rcx+rdx*4]
0000000000004817         add        rax, rcx
000000000000481a         jmp        rax
                        ; endp
000000000000481c         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_4820:
0000000000004820         xor        r10d, r10d
0000000000004823         cmp        byte [rsp+arg_5], 0x0
0000000000004828         jne        loc_461e

000000000000482e         nop

                     loc_4830:
0000000000004830         mov        edx, 0x5c                                   ; CODE XREF=sub_4590+136, sub_4590+147
0000000000004835         mov        ebx, 0x5c
000000000000483a         jmp        sub_4590+68
                        ; endp
000000000000483f         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4840:
0000000000004840         mov        edx, 0xc
0000000000004845         xor        r10d, r10d
0000000000004848         mov        ebx, 0x66
000000000000484d         jmp        sub_4590+68
                        ; endp
0000000000004852         nop        word [rax+rax]
0000000000004858         mov        edx, 0xa
000000000000485d         xor        r10d, r10d
0000000000004860         mov        ebx, 0x6e
0000000000004865         jmp        sub_4590+50
000000000000486a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4870:
0000000000004870         mov        ebx, 0x61
0000000000004875         jmp        sub_4590+176
                        ; endp
000000000000487a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4880:
0000000000004880         xor        r10d, r10d
                        ; endp

                     loc_4883:
0000000000004883         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_46b0+5
0000000000004888         sete       dl
000000000000488b         cmp        byte [rsp+arg_7], 0x0
0000000000004890         jne        loc_542a

0000000000004896         mov        eax, r8d
0000000000004899         mov        rcx, r15
000000000000489c         xor        eax, 0x1
000000000000489f         and        al, dl
00000000000048a1         je         loc_48d0

00000000000048a3         cmp        r13, r15
00000000000048a6         jbe        loc_48ad

00000000000048a8         mov        byte [r14+r15], 0x27

                     loc_48ad:
00000000000048ad         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_4880+38
00000000000048b1         cmp        r13, rcx
00000000000048b4         jbe        loc_48bc

00000000000048b6         mov        byte [r14+r15+1], 0x24

                     loc_48bc:
00000000000048bc         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_4880+52
00000000000048c0         cmp        r13, rcx
00000000000048c3         ja         loc_4ef9

                     loc_48c9:
00000000000048c9         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_49e0+1311
00000000000048cd         mov        r8d, eax

                     loc_48d0:
00000000000048d0         cmp        r13, rcx                                    ; CODE XREF=sub_4880+33
00000000000048d3         jbe        loc_48da

00000000000048d5         mov        byte [r14+rcx], 0x5c

                     loc_48da:
00000000000048da         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_4880+83
00000000000048df         lea        r15, qword [rcx+1]
00000000000048e3         je         loc_4ee9

00000000000048e9         lea        rax, qword [rbp+1]
00000000000048ed         cmp        rax, r11
00000000000048f0         jae        loc_490b

00000000000048f2         mov        rax, qword [rsp+arg_8]
00000000000048f7         movzx      eax, byte [rax+rbp+1]
00000000000048fc         mov        byte [rsp+arg_20], al
0000000000004900         sub        eax, 0x30
0000000000004903         cmp        al, 0x9
0000000000004905         jbe        loc_5139

                     loc_490b:
000000000000490b         mov        eax, r12d                                   ; CODE XREF=sub_4880+112
000000000000490e         mov        ebx, 0x30
0000000000004913         xor        r12d, r12d
0000000000004916         jmp        sub_4490+56
                        ; endp
000000000000491b         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_4920:
0000000000004920         cmp        dword [rsp+arg_0], 0x2
0000000000004925         mov        r12d, r10d
0000000000004928         sete       dl
000000000000492b         xor        r10d, r10d
000000000000492e         xor        eax, eax
0000000000004930         jmp        sub_4490+56
                        ; endp
0000000000004935         nop        dword [rax]
0000000000004938         cmp        dword [rsp+8], 0x2
000000000000493d         sete       dl
0000000000004940         xor        r10d, r10d
0000000000004943         jmp        sub_4700+8
0000000000004948         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4950:
0000000000004950         cmp        dword [rsp+8], 0x2
0000000000004955         sete       dl
0000000000004958         xor        r10d, r10d
000000000000495b         xor        r12d, r12d
000000000000495e         jmp        sub_4700+17
                        ; endp
0000000000004963         nop        dword [rax+rax]
0000000000004968         cmp        dword [rsp+8], 0x2
000000000000496d         mov        r12d, r10d
0000000000004970         mov        ebx, 0x20
0000000000004975         sete       dl
0000000000004978         xor        r10d, r10d
000000000000497b         jmp        sub_4700+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4980:
0000000000004980         mov        edx, 0xd
0000000000004985         xor        r10d, r10d
0000000000004988         mov        ebx, 0x72
000000000000498d         jmp        sub_4590+50
                        ; endp
0000000000004992         nop        word [rax+rax]
0000000000004998         mov        ebx, 0x76
000000000000499d         jmp        sub_4590+176
00000000000049a2         nop        word [rax+rax]
00000000000049a8         mov        edx, 0x9
00000000000049ad         xor        r10d, r10d
00000000000049b0         mov        ebx, 0x74
00000000000049b5         jmp        sub_4590+50
00000000000049ba         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_49c0:
00000000000049c0         mov        ebx, 0x62
00000000000049c5         jmp        sub_4590+176
                        ; endp
00000000000049ca         nop        word [rax+rax]

                     loc_49d0:
00000000000049d0         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
00000000000049d3         jmp        loc_4470
00000000000049d8         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_49e0:
00000000000049e0         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_4590+125
00000000000049e5         jne        sub_49e0+2416
                        ; endp

                     loc_49eb:
00000000000049eb         add        rbp, 0x1                                    ; CODE XREF=sub_4590+159
00000000000049ef         mov        eax, r8d
00000000000049f2         xor        r12d, r12d
00000000000049f5         mov        ebx, 0x5c
00000000000049fa         jmp        sub_4490+124
                        ; endp
00000000000049ff         align      512

                     loc_4a00:
0000000000004a00         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
0000000000004a05         movzx      ebx, byte [rsp+0xe8+var_D9]
0000000000004a0a         mov        r12d, r8d
0000000000004a0d         mov        rbp, r11
0000000000004a10         sete       dl
0000000000004a13         mov        eax, ebx
0000000000004a15         test       r15, r15
0000000000004a18         sete       cl
0000000000004a1b         and        eax, edx
0000000000004a1d         and        al, cl
0000000000004a1f         jne        loc_5486

0000000000004a25         mov        eax, ebx
0000000000004a27         xor        eax, 0x1
0000000000004a2a         and        dl, al
0000000000004a2c         je         loc_539c

0000000000004a32         cmp        byte [rsp+0xe8+var_6C], 0x0
0000000000004a37         je         loc_539a

0000000000004a3d         cmp        byte [rsp+0xe8+var_DA], 0x0
0000000000004a42         jne        loc_543d

0000000000004a48         test       r13, r13
0000000000004a4b         sete       al
0000000000004a4e         cmp        qword [rsp+0xe8+var_98], 0x0
0000000000004a54         setne      dl
0000000000004a57         and        al, dl
0000000000004a59         je         loc_547c

0000000000004a5f         mov        r13, qword [rsp+0xe8+var_98]

                     loc_4a64:
0000000000004a64         lea        rbx, qword [aLibs+29]                       ; 0x7615, CODE XREF=sub_49e0+2781
0000000000004a6b         mov        byte [r14], 0x27
0000000000004a6f         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000004a77         mov        r15d, 0x1
0000000000004a7d         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004a86         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000004a8b         mov        qword [rsp+0xe8+var_A0], rbx
0000000000004a90         mov        byte [rsp+0xe8+var_6C], al
0000000000004a94         jmp        loc_4373
0000000000004a99         align      32

                     loc_4aa0:
0000000000004aa0         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_4590+8
0000000000004aa5         jne        sub_49e0+2416

0000000000004aab         test       r13, r13
0000000000004aae         je         loc_4eb0

0000000000004ab4         xor        edx, edx
0000000000004ab6         cmp        qword [rsp+arg_48], 0x0
0000000000004abc         jne        loc_4eb0

                     loc_4ac2:
0000000000004ac2         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_49e0+1284, sub_49e0+2794
0000000000004ac7         add        r15, 0x3
0000000000004acb         xor        eax, eax
0000000000004acd         mov        byte [rsp+arg_74], r12b
0000000000004ad2         xor        r8d, r8d
0000000000004ad5         mov        r13, rdx
0000000000004ad8         mov        ebx, 0x27
0000000000004add         jmp        sub_4490+105
                        ; endp
0000000000004ae2         align      8

                     loc_4ae8:
0000000000004ae8         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_4560+19
0000000000004aed         je         loc_4b10

0000000000004aef         lea        rcx, qword [rbp+2]
0000000000004af3         cmp        rcx, r11
0000000000004af6         jae        loc_4b10

0000000000004af8         mov        rax, qword [rsp+arg_8]
0000000000004afd         cmp        byte [rax+rbp+1], 0x3f
0000000000004b02         je         loc_5292

0000000000004b08         nop        dword [rax+rax]

                     loc_4b10:
0000000000004b10         xor        edx, edx                                    ; CODE XREF=sub_49e0+269, sub_49e0+278, sub_49e0+2233, sub_49e0+2253
0000000000004b12         xor        r12d, r12d
0000000000004b15         xor        eax, eax
0000000000004b17         mov        ebx, 0x3f
0000000000004b1c         jmp        sub_4490+56
                        ; endp
0000000000004b21         align      8

                     loc_4b28:
0000000000004b28         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_4560+10
0000000000004b2d         jne        loc_5350

0000000000004b33         xor        r12d, r12d
0000000000004b36         xor        eax, eax
0000000000004b38         mov        ebx, 0x3f
0000000000004b3d         jmp        sub_4490+105
                        ; endp
0000000000004b42         align      8

                     loc_4b48:
0000000000004b48         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_4780+30
0000000000004b50         cmp        r11, 0xffffffffffffffff
0000000000004b54         mov        qword [rsp+0xe8+var_48], 0x0
0000000000004b60         mov        qword [rsp+0xe8+var_C0], rax
0000000000004b65         jne        loc_4b94

0000000000004b67         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
0000000000004b6c         mov        byte [rsp+0xe8+var_A8], r8b
0000000000004b71         mov        byte [rsp+0xe8+var_B0], r10b
0000000000004b76         mov        qword [rsp+0xe8+var_B8], r9
0000000000004b7b         call       j_strlen                                    ; strlen
0000000000004b80         movzx      r8d, byte [rsp+0xe8+var_A8]
0000000000004b86         movzx      r10d, byte [rsp+0xe8+var_B0]
0000000000004b8c         mov        r11, rax
0000000000004b8f         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_4b94:
0000000000004b94         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_49e0+389
0000000000004b9c         xor        ecx, ecx
0000000000004b9e         mov        byte [rsp+0xe8+var_6A], bl
0000000000004ba2         mov        byte [rsp+0xe8+var_6B], r8b
0000000000004ba7         mov        rbx, rcx
0000000000004baa         mov        qword [rsp+0xe8+var_60], r9
0000000000004bb2         mov        qword [rsp+0xe8+var_B0], rax
0000000000004bb7         mov        byte [rsp+0xe8+var_69], r10b
0000000000004bbc         mov        qword [rsp+0xe8+var_68], r15
0000000000004bc4         mov        qword [rsp+0xe8+var_A8], r14
0000000000004bc9         mov        qword [rsp+0xe8+var_78], r13
0000000000004bce         mov        qword [rsp+0xe8+var_B8], r11

                     loc_4bd3:
0000000000004bd3         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_49e0+623
0000000000004bd8         lea        r14, qword [rbp+rbx]
0000000000004bdd         mov        rdx, qword [rsp+0xe8+var_B8]
0000000000004be2         mov        rcx, qword [rsp+0xe8+var_C0]
0000000000004be7         mov        rdi, qword [rsp+0xe8+var_B0]
0000000000004bec         lea        r13, qword [rax+r14]
0000000000004bf0         sub        rdx, r14
0000000000004bf3         mov        rsi, r13
0000000000004bf6         call       rpl_mbrtowc                                 ; rpl_mbrtowc
0000000000004bfb         test       rax, rax
0000000000004bfe         mov        r15, rax
0000000000004c01         je         loc_4c51

0000000000004c03         cmp        rax, 0xffffffffffffffff
0000000000004c07         je         loc_5225

0000000000004c0d         cmp        rax, 0xfffffffffffffffe
0000000000004c11         je         loc_51b1

0000000000004c17         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000004c1c         sete       al
0000000000004c1f         and        al, byte [rsp+0xe8+var_D9]
0000000000004c23         jne        loc_4dc0

                     loc_4c29:
0000000000004c29         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_49e0+996, sub_49e0+1031
0000000000004c30         call       j_iswprint                                  ; iswprint
0000000000004c35         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
0000000000004c3a         test       eax, eax
0000000000004c3c         mov        eax, 0x0
0000000000004c41         cmove      r12d, eax
0000000000004c45         add        rbx, r15
0000000000004c48         call       j_mbsinit                                   ; mbsinit
0000000000004c4d         test       eax, eax
0000000000004c4f         je         loc_4bd3

                     loc_4c51:
0000000000004c51         mov        edx, r12d                                   ; CODE XREF=sub_49e0+545
0000000000004c54         mov        rdi, rbx
0000000000004c57         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000004c5d         xor        edx, 0x1
0000000000004c60         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000004c65         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000004c6b         and        dl, byte [rsp+0xe8+var_DB]
0000000000004c6f         mov        r15, qword [rsp+0xe8+var_68]
0000000000004c77         mov        r14, qword [rsp+0xe8+var_A8]
0000000000004c7c         mov        r13, qword [rsp+0xe8+var_78]
0000000000004c81         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_4c86:
0000000000004c86         cmp        rdi, 0x1                                    ; CODE XREF=sub_49e0+2112, sub_49e0+2168
0000000000004c8a         jbe        loc_528b

                     loc_4c90:
0000000000004c90         mov        rcx, rdi                                    ; CODE XREF=sub_49e0+1961
0000000000004c93         xor        esi, esi
0000000000004c95         movzx      r9d, byte [rsp+0xe8+var_D9]
0000000000004c9b         add        rcx, rbp
0000000000004c9e         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000004ca3         jmp        loc_4d5e
0000000000004ca8         align      16

                     loc_4cb0:
0000000000004cb0         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_49e0+896
0000000000004cb5         sete       al
0000000000004cb8         test       r9b, r9b
0000000000004cbb         jne        loc_5170

0000000000004cc1         mov        esi, r8d
0000000000004cc4         xor        esi, 0x1
0000000000004cc7         and        al, sil
0000000000004cca         je         loc_4cfb

0000000000004ccc         cmp        r13, r15
0000000000004ccf         jbe        loc_4cd6

0000000000004cd1         mov        byte [r14+r15], 0x27

                     loc_4cd6:
0000000000004cd6         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_49e0+751
0000000000004cda         cmp        r13, rsi
0000000000004cdd         jbe        loc_4ce5

0000000000004cdf         mov        byte [r14+r15+1], 0x24

                     loc_4ce5:
0000000000004ce5         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_49e0+765
0000000000004ce9         cmp        r13, rsi
0000000000004cec         jbe        loc_4cf4

0000000000004cee         mov        byte [r14+r15+2], 0x27

                     loc_4cf4:
0000000000004cf4         add        r15, 0x3                                    ; CODE XREF=sub_49e0+780
0000000000004cf8         mov        r8d, eax

                     loc_4cfb:
0000000000004cfb         cmp        r13, r15                                    ; CODE XREF=sub_49e0+746
0000000000004cfe         jbe        loc_4d05

0000000000004d00         mov        byte [r14+r15], 0x5c

                     loc_4d05:
0000000000004d05         lea        rax, qword [r15+1]                          ; CODE XREF=sub_49e0+798
0000000000004d09         cmp        r13, rax
0000000000004d0c         jbe        loc_4d1b

0000000000004d0e         mov        eax, ebx
0000000000004d10         shr        al, 0x6
0000000000004d13         add        eax, 0x30
0000000000004d16         mov        byte [r14+r15+1], al

                     loc_4d1b:
0000000000004d1b         lea        rax, qword [r15+2]                          ; CODE XREF=sub_49e0+812
0000000000004d1f         cmp        r13, rax
0000000000004d22         jbe        loc_4d34

0000000000004d24         mov        eax, ebx
0000000000004d26         shr        al, 0x3
0000000000004d29         and        eax, 0x7
0000000000004d2c         add        eax, 0x30
0000000000004d2f         mov        byte [r14+r15+2], al

                     loc_4d34:
0000000000004d34         and        ebx, 0x7                                    ; CODE XREF=sub_49e0+834
0000000000004d37         add        rbp, 0x1
0000000000004d3b         add        r15, 0x3
0000000000004d3f         add        ebx, 0x30
0000000000004d42         cmp        rbp, rcx
0000000000004d45         jae        loc_4530

0000000000004d4b         mov        esi, edx

                     loc_4d4d:
0000000000004d4d         cmp        r13, r15                                    ; CODE XREF=sub_49e0+985, sub_49e0+1969
0000000000004d50         jbe        loc_4d56

0000000000004d52         mov        byte [r14+r15], bl

                     loc_4d56:
0000000000004d56         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_49e0+880
0000000000004d5a         add        r15, 0x1

                     loc_4d5e:
0000000000004d5e         test       dl, dl                                      ; CODE XREF=sub_49e0+707
0000000000004d60         jne        loc_4cb0

0000000000004d66         mov        eax, esi
0000000000004d68         xor        eax, 0x1
0000000000004d6b         and        eax, r8d
0000000000004d6e         test       r10b, r10b
0000000000004d71         je         loc_4d81

0000000000004d73         cmp        r13, r15
0000000000004d76         jbe        loc_4d7d

0000000000004d78         mov        byte [r14+r15], 0x5c

                     loc_4d7d:
0000000000004d7d         add        r15, 0x1                                    ; CODE XREF=sub_49e0+918

                     loc_4d81:
0000000000004d81         add        rbp, 0x1                                    ; CODE XREF=sub_49e0+913
0000000000004d85         cmp        rbp, rcx
0000000000004d88         jae        loc_450c

0000000000004d8e         test       al, al
0000000000004d90         je         loc_518e

0000000000004d96         cmp        r13, r15
0000000000004d99         jbe        loc_4da0

0000000000004d9b         mov        byte [r14+r15], 0x27

                     loc_4da0:
0000000000004da0         lea        rax, qword [r15+1]                          ; CODE XREF=sub_49e0+953
0000000000004da4         cmp        r13, rax
0000000000004da7         jbe        loc_4daf

0000000000004da9         mov        byte [r14+r15+1], 0x27

                     loc_4daf:
0000000000004daf         add        r15, 0x2                                    ; CODE XREF=sub_49e0+967
0000000000004db3         xor        r10d, r10d
0000000000004db6         xor        r8d, r8d
0000000000004db9         jmp        loc_4d4d
0000000000004dbb         align      64

                     loc_4dc0:
0000000000004dc0         cmp        r15, 0x1                                    ; CODE XREF=sub_49e0+579
0000000000004dc4         je         loc_4c29

0000000000004dca         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000004dcf         lea        rcx, qword [rdi+r15]
0000000000004dd3         lea        rdx, qword [rdi+r14+1]
0000000000004dd8         lea        r8, qword [rcx+r14]
0000000000004ddc         jmp        loc_4ded
0000000000004dde         align      32

                     loc_4de0:
0000000000004de0         add        rdx, 0x1                                    ; CODE XREF=sub_49e0+1046, sub_49e0+1072
0000000000004de4         cmp        r8, rdx
0000000000004de7         je         loc_4c29

                     loc_4ded:
0000000000004ded         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_49e0+1020
0000000000004df0         sub        ecx, 0x5b
0000000000004df3         cmp        cl, 0x21
0000000000004df6         ja         loc_4de0

0000000000004df8         mov        esi, 0x1
0000000000004dfd         shl        rsi, cl
0000000000004e00         mov        rcx, rsi
0000000000004e03         movabs     rsi, 0x20000002b
0000000000004e0d         test       rcx, rsi
0000000000004e10         je         loc_4de0

0000000000004e12         mov        r14, qword [rsp+0xe8+var_A8]
0000000000004e17         mov        r13, qword [rsp+0xe8+var_78]
0000000000004e1c         mov        rbp, qword [rsp+0xe8+var_B8]
0000000000004e21         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_4e29:
0000000000004e29         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_49e0+1227, sub_49e0+1948, sub_49e0+2585, sub_49e0+2734
0000000000004e2e         je         loc_4e40

0000000000004e30         test       al, al
0000000000004e32         mov        eax, 0x4
0000000000004e37         cmove      eax, dword [rsp+0xe8+var_E0]
0000000000004e3c         mov        dword [rsp+0xe8+var_E0], eax

                     loc_4e40:
0000000000004e40         sub        rsp, 0x8                                    ; CODE XREF=sub_49e0+1102
0000000000004e44         mov        rcx, rbp
0000000000004e47         mov        rsi, r13
0000000000004e4a         push       qword [rsp+0xf0+var_88]
0000000000004e4e         push       qword [rsp+0xf8+var_80]
0000000000004e52         mov        rdi, r14
0000000000004e55         push       0x0
0000000000004e57         mov        r9d, dword [rsp+0x108+var_70]
0000000000004e5f         mov        r8d, dword [rsp+0x108+var_E0]
0000000000004e64         mov        rdx, qword [rsp+0x108+var_D8]
0000000000004e69         and        r9d, 0xfffffffd
0000000000004e6d         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004e72         add        rsp, 0x20
0000000000004e76         mov        r15, rax

                     loc_4e79:
0000000000004e79         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_49e0+2549, sub_49e0+2560, sub_49e0+2711
0000000000004e81         xor        rbx, qword [fs:0x28]
0000000000004e8a         mov        rax, r15
0000000000004e8d         jne        loc_5493

0000000000004e93         add        rsp, 0xb8
0000000000004e9a         pop        rbx
0000000000004e9b         pop        rbp
0000000000004e9c         pop        r12
0000000000004e9e         pop        r13
0000000000004ea0         pop        r14
0000000000004ea2         pop        r15
0000000000004ea4         ret
                        ; endp
0000000000004ea5         align      8

                     loc_4ea8:
0000000000004ea8         mov        rbp, r11                                    ; CODE XREF=sub_4590+194
0000000000004eab         jmp        loc_4e29

                     loc_4eb0:
0000000000004eb0         cmp        r13, r15                                    ; CODE XREF=sub_49e0+206, sub_49e0+220
0000000000004eb3         jbe        loc_4eba

0000000000004eb5         mov        byte [r14+r15], 0x27

                     loc_4eba:
0000000000004eba         lea        rax, qword [r15+1]                          ; CODE XREF=sub_49e0+1235
0000000000004ebe         cmp        r13, rax
0000000000004ec1         jbe        loc_4ec9

0000000000004ec3         mov        byte [r14+r15+1], 0x5c

                     loc_4ec9:
0000000000004ec9         lea        rax, qword [r15+2]                          ; CODE XREF=sub_49e0+1249
0000000000004ecd         cmp        r13, rax
0000000000004ed0         jbe        loc_54c2

0000000000004ed6         mov        rdx, r13
0000000000004ed9         mov        byte [r14+r15+2], 0x27
0000000000004edf         mov        r13, qword [rsp+arg_48]
0000000000004ee4         jmp        loc_4ac2

                     loc_4ee9:
0000000000004ee9         mov        eax, r12d                                   ; CODE XREF=sub_4880+99
0000000000004eec         mov        ebx, 0x30
0000000000004ef1         xor        r12d, r12d
0000000000004ef4         jmp        sub_4490+105
                        ; endp

                     loc_4ef9:
0000000000004ef9         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_4880+67
0000000000004eff         jmp        loc_48c9

                     loc_4f04:
0000000000004f04         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
0000000000004f06         jne        loc_4333

0000000000004f0c         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_4f11:
0000000000004f11         test       r13, r13                                    ; CODE XREF=sub_49e0+2749
0000000000004f14         jne        loc_54aa

0000000000004f1a         lea        rax, qword [aLibs+29]                       ; 0x7615
0000000000004f21         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004f2a         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004f2f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004f34         xor        r12d, r12d
0000000000004f37         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000004f3c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004f45         mov        qword [rsp+0xe8+var_A0], rax
0000000000004f4a         mov        r15d, 0x1
0000000000004f50         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000004f58         jmp        loc_4373
0000000000004f5d         align      32

                     loc_4f60:
0000000000004f60         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
0000000000004f62         jne        loc_535d

0000000000004f68         test       r13, r13
0000000000004f6b         je         loc_5196

0000000000004f71         mov        byte [r14], 0x22
0000000000004f75         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004f7a         xor        r12d, r12d
0000000000004f7d         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004f82         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_4f8b:
0000000000004f8b         lea        rax, qword [aLibs+27]                       ; 0x7613, CODE XREF=sub_49e0+1996
0000000000004f92         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000004f97         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004f9c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004fa5         mov        r15d, 0x1
0000000000004fab         mov        qword [rsp+0xe8+var_A0], rax
0000000000004fb0         jmp        loc_4373

                     loc_4fb5:
0000000000004fb5         lea        rax, qword [aLibs+27]                       ; case 6, 0x7613, CODE XREF=quotearg_buffer_restyled+145
0000000000004fbc         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004fc1         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004fc6         xor        r12d, r12d
0000000000004fc9         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004fd2         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000004fd7         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004fdc         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004fe5         xor        r15d, r15d
0000000000004fe8         mov        qword [rsp+0xe8+var_A0], rax
0000000000004fed         mov        dword [rsp+0xe8+var_E0], 0x5
0000000000004ff5         jmp        loc_4373

                     loc_4ffa:
0000000000004ffa         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
0000000000004fff         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000005004         xor        r12d, r12d
0000000000005007         mov        qword [rsp+0xe8+var_98], 0x0
0000000000005010         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000005015         xor        r15d, r15d
0000000000005018         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000501d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000005026         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000502f         jmp        loc_4373

                     loc_5034:
0000000000005034         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
0000000000005039         je         loc_5091

000000000000503b         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0x7617
0000000000005042         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005044         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005049         call       j_dcgettext                                 ; dcgettext
000000000000504e         mov        rcx, rax
0000000000005051         mov        qword [rsp+0xe8+var_80], rax
0000000000005056         lea        rax, qword [aLibs+31]                       ; 0x7617
000000000000505d         cmp        rcx, rax
0000000000005060         je         loc_53fe

                     loc_5066:
0000000000005066         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x7615, CODE XREF=sub_49e0+2607
000000000000506d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000506f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005074         call       j_dcgettext                                 ; dcgettext
0000000000005079         mov        rcx, rax
000000000000507c         mov        qword [rsp+0xe8+var_88], rax
0000000000005081         lea        rax, qword [aLibs+29]                       ; 0x7615
0000000000005088         cmp        rcx, rax
000000000000508b         je         loc_5414

                     loc_5091:
0000000000005091         xor        r15d, r15d                                  ; CODE XREF=sub_49e0+1625, sub_49e0+2629
0000000000005094         test       ebx, ebx
0000000000005096         je         loc_525d

                     loc_509c:
000000000000509c         test       ebx, ebx                                    ; CODE XREF=sub_49e0+2183, sub_49e0+2214
000000000000509e         mov        rbx, qword [rsp+0xe8+var_88]
00000000000050a3         setne      byte [rsp+0xe8+var_D9]
00000000000050a8         xor        r12d, r12d
00000000000050ab         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
00000000000050ae         call       j_strlen                                    ; strlen
00000000000050b3         mov        qword [rsp+0xe8+var_A0], rbx
00000000000050b8         mov        qword [rsp+0xe8+var_D0], rax
00000000000050bd         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000050c2         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000050c7         mov        qword [rsp+0xe8+var_98], 0x0
00000000000050d0         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000050d5         jmp        loc_4373

                     loc_50da:
00000000000050da         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
00000000000050df         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000050e4         xor        r12d, r12d
00000000000050e7         mov        qword [rsp+0xe8+var_98], 0x0
00000000000050f0         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000050f5         xor        r15d, r15d
00000000000050f8         mov        byte [rsp+0xe8+var_DB], 0x0
00000000000050fd         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000005106         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000510f         jmp        loc_4373

                     loc_5114:
0000000000005114         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000005119         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000511e         xor        r12d, r12d
0000000000005121         mov        qword [rsp+0xe8+var_98], 0x0
000000000000512a         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000512f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000005134         jmp        loc_4353

                     loc_5139:
0000000000005139         cmp        r13, r15                                    ; CODE XREF=sub_4880+133
000000000000513c         jbe        loc_5143

000000000000513e         mov        byte [r14+r15], 0x30

                     loc_5143:
0000000000005143         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_49e0+1884
0000000000005147         cmp        r13, rax
000000000000514a         jbe        loc_5152

000000000000514c         mov        byte [r14+rcx+2], 0x30

                     loc_5152:
0000000000005152         mov        eax, r12d                                   ; CODE XREF=sub_49e0+1898
0000000000005155         lea        r15, qword [rcx+3]
0000000000005159         xor        r12d, r12d
000000000000515c         mov        ebx, 0x30
0000000000005161         jmp        sub_4490+56
                        ; endp
0000000000005166         align      16

                     loc_5170:
0000000000005170         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_49e0+731
0000000000005175         mov        rbp, r11
0000000000005178         mov        byte [rsp+0xe8+var_DB], bl
000000000000517c         jmp        loc_4e29

                     loc_5181:
0000000000005181         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_4780+105
0000000000005186         xor        r12d, r12d
0000000000005189         jmp        loc_4c90

                     loc_518e:
000000000000518e         xor        r10d, r10d                                  ; CODE XREF=sub_49e0+944
0000000000005191         jmp        loc_4d4d

                     loc_5196:
0000000000005196         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_49e0+1419
000000000000519f         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000051a4         xor        r12d, r12d
00000000000051a7         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000051ac         jmp        loc_4f8b

                     loc_51b1:
00000000000051b1         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_49e0+561
00000000000051b6         mov        rsi, r14
00000000000051b9         mov        rcx, r13
00000000000051bc         mov        rax, rbx
00000000000051bf         mov        rdi, rbx
00000000000051c2         movzx      r8d, byte [rsp+0xe8+var_6B]
00000000000051c8         movzx      ebx, byte [rsp+0xe8+var_6A]
00000000000051cd         mov        r9, qword [rsp+0xe8+var_60]
00000000000051d5         cmp        rsi, r11
00000000000051d8         movzx      r10d, byte [rsp+0xe8+var_69]
00000000000051de         mov        r15, qword [rsp+0xe8+var_68]
00000000000051e6         mov        r14, qword [rsp+0xe8+var_A8]
00000000000051eb         mov        r13, qword [rsp+0xe8+var_78]
00000000000051f0         jae        loc_5218

00000000000051f2         cmp        byte [rcx], 0x0
00000000000051f5         jne        loc_5207

00000000000051f7         jmp        loc_5218
00000000000051f9         align      512

                     loc_5200:
0000000000005200         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_49e0+2099
0000000000005205         je         loc_5215

                     loc_5207:
0000000000005207         add        rax, 0x1                                    ; CODE XREF=sub_49e0+2069
000000000000520b         lea        rdx, qword [rbp+rax]
0000000000005210         cmp        r11, rdx
0000000000005213         ja         loc_5200

                     loc_5215:
0000000000005215         mov        rdi, rax                                    ; CODE XREF=sub_49e0+2085

                     loc_5218:
0000000000005218         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_49e0+2064, sub_49e0+2071
000000000000521d         xor        r12d, r12d
0000000000005220         jmp        loc_4c86

                     loc_5225:
0000000000005225         mov        rdi, rbx                                    ; CODE XREF=sub_49e0+551
0000000000005228         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000522e         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000005233         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000005239         mov        r15, qword [rsp+0xe8+var_68]
0000000000005241         xor        r12d, r12d
0000000000005244         mov        r14, qword [rsp+0xe8+var_A8]
0000000000005249         mov        r13, qword [rsp+0xe8+var_78]
000000000000524e         mov        r11, qword [rsp+0xe8+var_B8]
0000000000005253         movzx      edx, byte [rsp+0xe8+var_DB]
0000000000005258         jmp        loc_4c86

                     loc_525d:
000000000000525d         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_49e0+1718
0000000000005262         movzx      eax, byte [rdx]
0000000000005265         test       al, al
0000000000005267         je         loc_509c

000000000000526d         nop        dword [rax]

                     loc_5270:
0000000000005270         cmp        r13, r15                                    ; CODE XREF=sub_49e0+2212
0000000000005273         jbe        loc_5279

0000000000005275         mov        byte [r14+r15], al

                     loc_5279:
0000000000005279         add        r15, 0x1                                    ; CODE XREF=sub_49e0+2195
000000000000527d         movzx      eax, byte [rdx+r15]
0000000000005282         test       al, al
0000000000005284         jne        loc_5270

0000000000005286         jmp        loc_509c

                     loc_528b:
000000000000528b         mov        eax, edx                                    ; CODE XREF=sub_49e0+682
000000000000528d         jmp        loc_47e7

                     loc_5292:
0000000000005292         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_49e0+290
0000000000005296         cmp        bl, 0x3e
0000000000005299         ja         loc_4b10

000000000000529f         movabs     rax, 0x7000a38200000000
00000000000052a9         bt         rax, rbx
00000000000052ad         jae        loc_4b10

00000000000052b3         cmp        byte [rsp+arg_7], 0x0
00000000000052b8         jne        loc_54a2

00000000000052be         cmp        r13, r15
00000000000052c1         jbe        loc_52c8

00000000000052c3         mov        byte [r14+r15], 0x3f

                     loc_52c8:
00000000000052c8         lea        rax, qword [r15+1]                          ; CODE XREF=sub_49e0+2273
00000000000052cc         cmp        r13, rax
00000000000052cf         jbe        loc_52d7

00000000000052d1         mov        byte [r14+r15+1], 0x22

                     loc_52d7:
00000000000052d7         lea        rax, qword [r15+2]                          ; CODE XREF=sub_49e0+2287
00000000000052db         cmp        r13, rax
00000000000052de         jbe        loc_52e6

00000000000052e0         mov        byte [r14+r15+2], 0x22

                     loc_52e6:
00000000000052e6         lea        rax, qword [r15+3]                          ; CODE XREF=sub_49e0+2302
00000000000052ea         cmp        r13, rax
00000000000052ed         jbe        loc_52f5

00000000000052ef         mov        byte [r14+r15+3], 0x3f

                     loc_52f5:
00000000000052f5         add        r15, 0x4                                    ; CODE XREF=sub_49e0+2317
00000000000052f9         xor        edx, edx
00000000000052fb         xor        r12d, r12d
00000000000052fe         xor        eax, eax
0000000000005300         mov        rbp, rcx
0000000000005303         jmp        sub_4490+56
                        ; endp

                     loc_5308:
0000000000005308         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
000000000000530a         je         loc_5498

0000000000005310         lea        rax, qword [aLibs+29]                       ; 0x7615
0000000000005317         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000531c         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000005321         xor        r12d, r12d
0000000000005324         mov        qword [rsp+0xe8+var_98], 0x0
000000000000532d         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000005332         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000005337         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000005340         xor        r15d, r15d
0000000000005343         mov        qword [rsp+0xe8+var_A0], rax
0000000000005348         jmp        loc_4373
000000000000534d         align      16

                     loc_5350:
0000000000005350         mov        rbp, r11                                    ; CODE XREF=sub_49e0+333
0000000000005353         movzx      eax, byte [rsp+arg_7]
0000000000005358         jmp        sub_49e0+1097
                        ; endp

                     loc_535d:
000000000000535d         lea        rax, qword [aLibs+27]                       ; 0x7613, CODE XREF=sub_49e0+1410
0000000000005364         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000005369         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000536e         xor        r12d, r12d
0000000000005371         mov        qword [rsp+0xe8+var_98], 0x0
000000000000537a         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000537f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000005384         mov        qword [rsp+0xe8+var_D0], 0x1
000000000000538d         xor        r15d, r15d
0000000000005390         mov        qword [rsp+0xe8+var_A0], rax
0000000000005395         jmp        loc_4373

                     loc_539a:
000000000000539a         mov        eax, edx                                    ; CODE XREF=sub_49e0+87

                     loc_539c:
000000000000539c         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_49e0+76, sub_49e0+2721
00000000000053a1         test       rbx, rbx
00000000000053a4         je         loc_53d2

00000000000053a6         test       al, al
00000000000053a8         je         loc_53d2

00000000000053aa         movzx      ecx, byte [rbx]
00000000000053ad         mov        rax, rbx
00000000000053b0         test       cl, cl
00000000000053b2         je         loc_53d2

00000000000053b4         mov        rdx, r15
00000000000053b7         sub        rax, r15

                     loc_53ba:
00000000000053ba         cmp        r13, rdx                                    ; CODE XREF=sub_49e0+2541
00000000000053bd         jbe        loc_53c3

00000000000053bf         mov        byte [r14+rdx], cl

                     loc_53c3:
00000000000053c3         add        rdx, 0x1                                    ; CODE XREF=sub_49e0+2525
00000000000053c7         movzx      ecx, byte [rax+rdx]
00000000000053cb         test       cl, cl
00000000000053cd         jne        loc_53ba

00000000000053cf         mov        r15, rdx

                     loc_53d2:
00000000000053d2         cmp        r13, r15                                    ; CODE XREF=sub_49e0+2500, sub_49e0+2504, sub_49e0+2514
00000000000053d5         jbe        loc_4e79

00000000000053db         mov        byte [r14+r15], 0x0
00000000000053e0         jmp        loc_4e79

                     loc_53e5:
00000000000053e5         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
00000000000053ea         movzx      ebx, byte [rsp+0xe8+var_D9]
00000000000053ef         mov        rbp, r11
00000000000053f2         sete       al
00000000000053f5         mov        byte [rsp+0xe8+var_DB], bl
00000000000053f9         jmp        loc_4e29

                     loc_53fe:
00000000000053fe         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_49e0+1664
0000000000005402         mov        rdi, rcx
0000000000005405         call       gettext_quote.part.1                        ; gettext_quote.part.1
000000000000540a         mov        qword [rsp+0xe8+var_80], rax
000000000000540f         jmp        loc_5066

                     loc_5414:
0000000000005414         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_49e0+1707
0000000000005418         mov        rdi, rcx
000000000000541b         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000005420         mov        qword [rsp+0xe8+var_88], rax
0000000000005425         jmp        loc_5091

                     loc_542a:
000000000000542a         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_4880+16
000000000000542f         mov        rbp, r11
0000000000005432         mov        eax, edx
0000000000005434         mov        byte [rsp+arg_5], bl
0000000000005438         jmp        sub_49e0+1097
                        ; endp

                     loc_543d:
000000000000543d         sub        rsp, 0x8                                    ; CODE XREF=sub_49e0+98
0000000000005441         mov        r8d, 0x5
0000000000005447         mov        rcx, r11
000000000000544a         push       qword [rsp+0xf0+var_88]
000000000000544e         push       qword [rsp+0xf8+var_80]
0000000000005452         mov        rdi, r14
0000000000005455         push       qword [rsp+0x100+var_C8]
0000000000005459         mov        r9d, dword [rsp+0x108+var_70]
0000000000005461         mov        rdx, qword [rsp+0x108+var_D8]
0000000000005466         mov        rsi, qword [rsp+0x108+var_98]
000000000000546b         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000005470         add        rsp, 0x20
0000000000005474         mov        r15, rax
0000000000005477         jmp        loc_4e79

                     loc_547c:
000000000000547c         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_49e0+121
0000000000005481         jmp        loc_539c

                     loc_5486:
0000000000005486         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_49e0+63
000000000000548e         jmp        loc_4e29

                     loc_5493:
0000000000005493         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_49e0+1197
                        ; endp

                     loc_5498:
0000000000005498         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_49e0+2346
000000000000549d         jmp        loc_4f11

                     loc_54a2:
00000000000054a2         mov        rbp, r11                                    ; CODE XREF=sub_49e0+2264
00000000000054a5         jmp        sub_49e0+1120
                        ; endp

                     loc_54aa:
00000000000054aa         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_49e0+1332
00000000000054af         xor        eax, eax
00000000000054b1         xor        r12d, r12d
00000000000054b4         mov        qword [rsp+0xe8+var_98], 0x0
00000000000054bd         jmp        loc_4a64

                     loc_54c2:
00000000000054c2         mov        rdx, r13                                    ; CODE XREF=sub_49e0+1264
00000000000054c5         mov        r13, qword [rsp+arg_48]
00000000000054ca         jmp        loc_4ac2

                     loc_54cf:
00000000000054cf         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
00000000000054d4         align      32                                          ; End of unwind block (FDE at 0x8ad8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
00000000000054e0         push       r15                                         ; Begin of unwind block (FDE at 0x8b50), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
00000000000054e2         push       r14
00000000000054e4         movsxd     r15, edi
00000000000054e7         push       r13
00000000000054e9         push       r12
00000000000054eb         mov        r14, rdx
00000000000054ee         push       rbp
00000000000054ef         push       rbx
00000000000054f0         mov        rbp, rcx
00000000000054f3         sub        rsp, 0x28
00000000000054f7         mov        qword [rsp+0x58+var_50], rsi
00000000000054fc         call       j___errno_location                          ; __errno_location
0000000000005501         mov        r13, rax
0000000000005504         mov        eax, dword [rax]
0000000000005506         test       r15d, r15d
0000000000005509         mov        rbx, qword [slotvec]                        ; slotvec
0000000000005510         mov        dword [rsp+0x58+var_40], eax
0000000000005514         js         loc_5681

000000000000551a         cmp        dword [nslots], r15d                        ; nslots
0000000000005521         jg         loc_5585

0000000000005523         cmp        r15d, 0x7fffffff
000000000000552a         je         loc_5686

0000000000005530         lea        r12d, dword [r15+1]
0000000000005534         lea        rax, qword [slotvec0]                       ; slotvec0
000000000000553b         movsxd     rsi, r12d
000000000000553e         shl        rsi, 0x4
0000000000005542         cmp        rbx, rax
0000000000005545         je         loc_5660

000000000000554b         mov        rdi, rbx                                    ; argument #1 for method xrealloc
000000000000554e         call       xrealloc                                    ; xrealloc
0000000000005553         mov        rbx, rax
0000000000005556         mov        qword [slotvec], rax                        ; slotvec

                     loc_555d:
000000000000555d         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
0000000000005564         mov        edx, r12d
0000000000005567         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000005569         sub        edx, edi
000000000000556b         shl        rdi, 0x4
000000000000556f         movsxd     rdx, edx
0000000000005572         add        rdi, rbx                                    ; argument "__s" for method j_memset
0000000000005575         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
0000000000005579         call       j_memset                                    ; memset
000000000000557e         mov        dword [nslots], r12d                        ; nslots

                     loc_5585:
0000000000005585         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
0000000000005588         shl        r15, 0x4
000000000000558c         sub        rsp, 0x8
0000000000005590         add        rbx, r15
0000000000005593         lea        r15, qword [rbp+8]
0000000000005597         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
000000000000559b         mov        r11, qword [rbx]
000000000000559e         mov        r12, qword [rbx+8]
00000000000055a2         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
00000000000055a5         or         eax, 0x1
00000000000055a8         mov        dword [rsp+0x60+var_3C], eax
00000000000055ac         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
00000000000055af         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
00000000000055b2         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
00000000000055b5         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
00000000000055b7         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
00000000000055ba         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
00000000000055bf         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
00000000000055c2         mov        qword [rsp+0x78+var_48], r11
00000000000055c7         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000055cc         add        rsp, 0x20
00000000000055d0         mov        r11, qword [rsp+0x58+var_48]
00000000000055d5         cmp        r11, rax
00000000000055d8         ja         loc_5641

00000000000055da         lea        rsi, qword [rax+1]
00000000000055de         lea        rax, qword [slot0]                          ; slot0
00000000000055e5         cmp        r12, rax
00000000000055e8         mov        qword [rbx], rsi
00000000000055eb         je         loc_55ff

00000000000055ed         mov        rdi, r12                                    ; argument "__ptr" for method j_free
00000000000055f0         mov        qword [rsp+0x58+var_48], rsi
00000000000055f5         call       j_free                                      ; free
00000000000055fa         mov        rsi, qword [rsp+0x58+var_48]

                     loc_55ff:
00000000000055ff         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
0000000000005602         mov        qword [rsp+0x58+var_48], rsi
0000000000005607         call       xmalloc                                     ; xmalloc
000000000000560c         sub        rsp, 0x8
0000000000005610         mov        qword [rbx+8], rax
0000000000005614         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000005618         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
000000000000561b         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
000000000000561e         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000005621         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000005623         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
0000000000005628         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
000000000000562b         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000005630         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
0000000000005635         mov        r12, rax
0000000000005638         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000563d         add        rsp, 0x20

                     loc_5641:
0000000000005641         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
0000000000005645         mov        dword [r13], eax
0000000000005649         add        rsp, 0x28
000000000000564d         mov        rax, r12
0000000000005650         pop        rbx
0000000000005651         pop        rbp
0000000000005652         pop        r12
0000000000005654         pop        r13
0000000000005656         pop        r14
0000000000005658         pop        r15
000000000000565a         ret
                        ; endp
000000000000565b         align      32

                     loc_5660:
0000000000005660         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
0000000000005662         call       xrealloc                                    ; xrealloc
0000000000005667         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
000000000000566f         mov        rbx, rax
0000000000005672         mov        qword [slotvec], rax                        ; slotvec
0000000000005679         movups     xmmword [rax], xmm0
000000000000567c         jmp        loc_555d

                     loc_5681:
0000000000005681         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_5686:
0000000000005686         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_568b:
000000000000568b         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x8b50)
                     clone_quoting_options:
0000000000005690         push       r12                                         ; Begin of unwind block (FDE at 0x8bbc)
0000000000005692         push       rbp
0000000000005693         push       rbx
0000000000005694         mov        rbx, rdi
0000000000005697         call       j___errno_location                          ; __errno_location
000000000000569c         mov        r12d, dword [rax]
000000000000569f         mov        rbp, rax
00000000000056a2         lea        rax, qword [default_quoting_options]        ; default_quoting_options
00000000000056a9         test       rbx, rbx
00000000000056ac         mov        esi, 0x38                                   ; argument #2 for method xmemdup
00000000000056b1         cmove      rbx, rax
00000000000056b5         mov        rdi, rbx                                    ; argument #1 for method xmemdup
00000000000056b8         call       xmemdup                                     ; xmemdup
00000000000056bd         mov        dword [rbp], r12d
00000000000056c1         pop        rbx
00000000000056c2         pop        rbp
00000000000056c3         pop        r12
00000000000056c5         ret
                        ; endp
00000000000056c6         align      16                                          ; End of unwind block (FDE at 0x8bbc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
00000000000056d0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8be8), default_quoting_options
00000000000056d7         test       rdi, rdi
00000000000056da         cmove      rdi, rax
00000000000056de         mov        eax, dword [rdi]
00000000000056e0         ret
                        ; endp
00000000000056e1         align      16                                          ; End of unwind block (FDE at 0x8be8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
00000000000056f0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8bfc), default_quoting_options
00000000000056f7         test       rdi, rdi
00000000000056fa         cmove      rdi, rax
00000000000056fe         mov        dword [rdi], esi
0000000000005700         ret
                        ; endp
0000000000005701         align      16                                          ; End of unwind block (FDE at 0x8bfc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
0000000000005710         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8c10), default_quoting_options
0000000000005717         test       rdi, rdi
000000000000571a         mov        ecx, esi
000000000000571c         cmove      rdi, rax
0000000000005720         mov        eax, esi
0000000000005722         and        ecx, 0x1f
0000000000005725         shr        al, 0x5
0000000000005728         movzx      eax, al
000000000000572b         lea        rdi, qword [rdi+rax*4+8]
0000000000005730         mov        esi, dword [rdi]
0000000000005732         mov        eax, esi
0000000000005734         shr        eax, cl
0000000000005736         xor        edx, eax
0000000000005738         and        eax, 0x1
000000000000573b         and        edx, 0x1
000000000000573e         shl        edx, cl
0000000000005740         xor        edx, esi
0000000000005742         mov        dword [rdi], edx
0000000000005744         ret
                        ; endp
0000000000005745         align      16                                          ; End of unwind block (FDE at 0x8c10)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
0000000000005750         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8c24), default_quoting_options
0000000000005757         test       rdi, rdi
000000000000575a         cmove      rdi, rax
000000000000575e         mov        eax, dword [rdi+4]
0000000000005761         mov        dword [rdi+4], esi
0000000000005764         ret
                        ; endp
0000000000005765         align      16                                          ; End of unwind block (FDE at 0x8c24)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
0000000000005770         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8c38), default_quoting_options
0000000000005777         test       rdi, rdi
000000000000577a         cmove      rdi, rax
000000000000577e         test       rsi, rsi
0000000000005781         mov        dword [rdi], 0xa
0000000000005787         je         loc_5797

0000000000005789         test       rdx, rdx
000000000000578c         je         loc_5797

000000000000578e         mov        qword [rdi+0x28], rsi
0000000000005792         mov        qword [rdi+0x30], rdx
0000000000005796         ret
                        ; endp

                     loc_5797:
0000000000005797         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
000000000000579b         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
00000000000057a0         push       r15                                         ; End of unwind block (FDE at 0x8c38), Begin of unwind block (FDE at 0x8c4c)
00000000000057a2         push       r14
00000000000057a4         lea        rax, qword [default_quoting_options]        ; default_quoting_options
00000000000057ab         push       r13
00000000000057ad         push       r12
00000000000057af         mov        r13, rdi
00000000000057b2         push       rbp
00000000000057b3         push       rbx
00000000000057b4         mov        rbx, r8
00000000000057b7         mov        r14, rsi
00000000000057ba         mov        r15, rdx
00000000000057bd         sub        rsp, 0x18
00000000000057c1         test       r8, r8
00000000000057c4         cmove      rbx, rax
00000000000057c8         mov        qword [rsp+0x48+var_40], rcx
00000000000057cd         call       j___errno_location                          ; __errno_location
00000000000057d2         mov        r12d, dword [rax]
00000000000057d5         mov        rbp, rax
00000000000057d8         lea        rax, qword [rbx+8]
00000000000057dc         sub        rsp, 0x8
00000000000057e0         mov        r9d, dword [rbx+4]
00000000000057e4         push       qword [rbx+0x30]
00000000000057e7         mov        r8d, dword [rbx]
00000000000057ea         push       qword [rbx+0x28]
00000000000057ed         mov        rdx, r15
00000000000057f0         push       rax
00000000000057f1         mov        rcx, qword [rsp+0x68+var_40]
00000000000057f6         mov        rsi, r14
00000000000057f9         mov        rdi, r13
00000000000057fc         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000005801         mov        dword [rbp], r12d
0000000000005805         add        rsp, 0x38
0000000000005809         pop        rbx
000000000000580a         pop        rbp
000000000000580b         pop        r12
000000000000580d         pop        r13
000000000000580f         pop        r14
0000000000005811         pop        r15
0000000000005813         ret
                        ; endp
0000000000005814         align      32                                          ; End of unwind block (FDE at 0x8c4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
0000000000005820         push       r15                                         ; Begin of unwind block (FDE at 0x8ca0), CODE XREF=quotearg_alloc+5
0000000000005822         push       r14
0000000000005824         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000582b         push       r13
000000000000582d         push       r12
000000000000582f         mov        r12, rdx
0000000000005832         push       rbp
0000000000005833         push       rbx
0000000000005834         mov        rbx, rcx
0000000000005837         mov        r14, rdi
000000000000583a         mov        r15, rsi
000000000000583d         sub        rsp, 0x38
0000000000005841         test       rcx, rcx
0000000000005844         cmove      rbx, rax
0000000000005848         xor        ebp, ebp
000000000000584a         call       j___errno_location                          ; __errno_location
000000000000584f         test       r12, r12
0000000000005852         mov        r13, rax
0000000000005855         mov        eax, dword [rax]
0000000000005857         sete       bpl
000000000000585b         or         ebp, dword [rbx+4]
000000000000585e         lea        r10, qword [rbx+8]
0000000000005862         sub        rsp, 0x8
0000000000005866         mov        r8d, dword [rbx]
0000000000005869         mov        rcx, r15
000000000000586c         mov        dword [rsp+0x70+var_5C], eax
0000000000005870         push       qword [rbx+0x30]
0000000000005873         mov        rdx, r14
0000000000005876         push       qword [rbx+0x28]
0000000000005879         push       r10
000000000000587b         xor        esi, esi
000000000000587d         mov        r9d, ebp
0000000000005880         xor        edi, edi
0000000000005882         mov        qword [rsp+0x88+var_48], r10
0000000000005887         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000588c         lea        rsi, qword [rax+1]
0000000000005890         mov        qword [rsp+0x88+var_40], rax
0000000000005895         add        rsp, 0x20
0000000000005899         mov        rdi, rsi
000000000000589c         mov        qword [rsp+0x68+var_50], rsi
00000000000058a1         call       xmalloc                                     ; xmalloc
00000000000058a6         mov        qword [rsp+0x68+var_58], rax
00000000000058ab         sub        rsp, 0x8
00000000000058af         push       qword [rbx+0x30]
00000000000058b2         push       qword [rbx+0x28]
00000000000058b5         mov        r10, qword [rsp+0x80+var_48]
00000000000058ba         mov        r9d, ebp
00000000000058bd         mov        r8d, dword [rbx]
00000000000058c0         mov        rcx, r15
00000000000058c3         mov        rdx, r14
00000000000058c6         mov        rdi, rax
00000000000058c9         push       r10
00000000000058cb         mov        rsi, qword [rsp+0x88+var_50]
00000000000058d0         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000058d5         mov        eax, dword [rsp+0x88+var_5C]
00000000000058d9         add        rsp, 0x20
00000000000058dd         test       r12, r12
00000000000058e0         mov        dword [r13], eax
00000000000058e4         je         loc_58ef

00000000000058e6         mov        r11, qword [rsp+0x68+var_40]
00000000000058eb         mov        qword [r12], r11

                     loc_58ef:
00000000000058ef         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
00000000000058f4         add        rsp, 0x38
00000000000058f8         pop        rbx
00000000000058f9         pop        rbp
00000000000058fa         pop        r12
00000000000058fc         pop        r13
00000000000058fe         pop        r14
0000000000005900         pop        r15
0000000000005902         ret
                        ; endp
0000000000005903         align      16                                          ; End of unwind block (FDE at 0x8ca0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
0000000000005910         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x8d0c)
0000000000005913         xor        edx, edx
0000000000005915         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
000000000000591a         align      32                                          ; End of unwind block (FDE at 0x8d0c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
0000000000005920         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0x8d20), nslots
0000000000005926         push       r12
0000000000005928         mov        r12, qword [slotvec]                        ; slotvec
000000000000592f         push       rbp
0000000000005930         push       rbx
0000000000005931         cmp        eax, 0x1
0000000000005934         jle        loc_5961

0000000000005936         sub        eax, 0x2
0000000000005939         lea        rbx, qword [r12+0x18]
000000000000593e         shl        rax, 0x4
0000000000005942         lea        rbp, qword [r12+rax+0x28]
0000000000005947         nop        word [rax+rax]

                     loc_5950:
0000000000005950         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
0000000000005953         add        rbx, 0x10
0000000000005957         call       j_free                                      ; free
000000000000595c         cmp        rbx, rbp
000000000000595f         jne        loc_5950

                     loc_5961:
0000000000005961         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
0000000000005966         lea        rbx, qword [slot0]                          ; slot0
000000000000596d         cmp        rdi, rbx
0000000000005970         je         loc_5989

0000000000005972         call       j_free                                      ; free
0000000000005977         mov        qword [slotvec0], 0x100                     ; slotvec0
0000000000005982         mov        qword [slotvec0+8], rbx                     ; 0x20a098

                     loc_5989:
0000000000005989         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
0000000000005990         cmp        r12, rbx
0000000000005993         je         loc_59a4

0000000000005995         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000005998         call       j_free                                      ; free
000000000000599d         mov        qword [slotvec], rbx                        ; slotvec

                     loc_59a4:
00000000000059a4         pop        rbx                                         ; CODE XREF=quotearg_free+115
00000000000059a5         mov        dword [nslots], 0x1                         ; nslots
00000000000059af         pop        rbp
00000000000059b0         pop        r12
00000000000059b2         ret
                        ; endp
00000000000059b3         align      64                                          ; End of unwind block (FDE at 0x8d20)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
00000000000059c0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8d4c), default_quoting_options
00000000000059c7         mov        rdx, 0xffffffffffffffff
00000000000059ce         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000059d3         align      32                                          ; End of unwind block (FDE at 0x8d4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
00000000000059e0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8d60), default_quoting_options
00000000000059e7         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000059ec         align      16                                          ; End of unwind block (FDE at 0x8d60)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
00000000000059f0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8d74), default_quoting_options
00000000000059f7         mov        rsi, rdi
00000000000059fa         mov        rdx, 0xffffffffffffffff
0000000000005a01         xor        edi, edi
0000000000005a03         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005a08         align      16                                          ; End of unwind block (FDE at 0x8d74)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
0000000000005a10         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8d88), default_quoting_options
0000000000005a17         mov        rdx, rsi
0000000000005a1a         mov        rsi, rdi
0000000000005a1d         xor        edi, edi
0000000000005a1f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005a24         align      16                                          ; End of unwind block (FDE at 0x8d88)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
0000000000005a30         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x8d9c)
0000000000005a34         mov        rax, rdx
0000000000005a37         mov        rdx, qword [fs:0x28]
0000000000005a40         mov        qword [rsp+0x48+var_10], rdx
0000000000005a45         xor        edx, edx
0000000000005a47         cmp        esi, 0xa
0000000000005a4a         je         loc_5ab4

0000000000005a4c         mov        dword [rsp+0x48+var_48], esi
0000000000005a4f         mov        rcx, rsp
0000000000005a52         mov        rdx, 0xffffffffffffffff
0000000000005a59         mov        rsi, rax
0000000000005a5c         mov        qword [rsp+0x48+var_44], 0x0
0000000000005a65         mov        qword [rsp+0x48+var_3C], 0x0
0000000000005a6e         mov        qword [rsp+0x48+var_34], 0x0
0000000000005a77         mov        qword [rsp+0x48+var_2C], 0x0
0000000000005a80         mov        qword [rsp+0x48+var_24], 0x0
0000000000005a89         mov        qword [rsp+0x48+var_1C], 0x0
0000000000005a92         mov        dword [rsp+0x48+var_14], 0x0
0000000000005a9a         call       quotearg_n_options                          ; quotearg_n_options
0000000000005a9f         mov        rcx, qword [rsp+0x48+var_10]
0000000000005aa4         xor        rcx, qword [fs:0x28]
0000000000005aad         jne        loc_5ab9

0000000000005aaf         add        rsp, 0x48
0000000000005ab3         ret
                        ; endp

                     loc_5ab4:
0000000000005ab4         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_5ab9:
0000000000005ab9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
0000000000005abe         align      64                                          ; End of unwind block (FDE at 0x8d9c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
0000000000005ac0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x8db8), CODE XREF=quotearg_style_mem+10
0000000000005ac4         mov        rax, rdx
0000000000005ac7         mov        rdx, rcx
0000000000005aca         mov        rcx, qword [fs:0x28]
0000000000005ad3         mov        qword [rsp+0x48+var_10], rcx
0000000000005ad8         xor        ecx, ecx
0000000000005ada         cmp        esi, 0xa
0000000000005add         je         loc_5b40

0000000000005adf         mov        dword [rsp+0x48+var_48], esi
0000000000005ae2         mov        rcx, rsp
0000000000005ae5         mov        rsi, rax
0000000000005ae8         mov        qword [rsp+0x48+var_44], 0x0
0000000000005af1         mov        qword [rsp+0x48+var_3C], 0x0
0000000000005afa         mov        qword [rsp+0x48+var_34], 0x0
0000000000005b03         mov        qword [rsp+0x48+var_2C], 0x0
0000000000005b0c         mov        qword [rsp+0x48+var_24], 0x0
0000000000005b15         mov        qword [rsp+0x48+var_1C], 0x0
0000000000005b1e         mov        dword [rsp+0x48+var_14], 0x0
0000000000005b26         call       quotearg_n_options                          ; quotearg_n_options
0000000000005b2b         mov        rdx, qword [rsp+0x48+var_10]
0000000000005b30         xor        rdx, qword [fs:0x28]
0000000000005b39         jne        loc_5b45

0000000000005b3b         add        rsp, 0x48
0000000000005b3f         ret
                        ; endp

                     loc_5b40:
0000000000005b40         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_5b45:
0000000000005b45         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
0000000000005b4a         align      16                                          ; End of unwind block (FDE at 0x8db8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
0000000000005b50         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x8dd4), CODE XREF=isdir+105
0000000000005b53         mov        esi, edi
0000000000005b55         xor        edi, edi
0000000000005b57         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
0000000000005b5c         align      32                                          ; End of unwind block (FDE at 0x8dd4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
0000000000005b60         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x8de8)
0000000000005b63         mov        rdx, rsi
0000000000005b66         mov        esi, edi
0000000000005b68         xor        edi, edi
0000000000005b6a         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
0000000000005b6f         align      16                                          ; End of unwind block (FDE at 0x8de8)

                     quotearg_char_mem:
0000000000005b70         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x8dfc), CODE XREF=quotearg_char+11
0000000000005b74         mov        ecx, edx
0000000000005b76         mov        rax, qword [fs:0x28]
0000000000005b7f         mov        qword [rsp+0x48+var_10], rax
0000000000005b84         xor        eax, eax
0000000000005b86         mov        rax, qword [qword_20a250]                   ; qword_20a250
0000000000005b8d         mov        r8, rsp
0000000000005b90         and        ecx, 0x1f
0000000000005b93         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000005b9b         mov        qword [rsp+0x48+var_18], rax
0000000000005ba0         mov        eax, edx
0000000000005ba2         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000005ba6         shr        al, 0x5
0000000000005ba9         movzx      eax, al
0000000000005bac         lea        r9, qword [r8+rax*4+8]
0000000000005bb1         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20a230
0000000000005bb9         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000005bbe         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20a240
0000000000005bc6         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000005bcb         mov        edx, dword [r9]
0000000000005bce         mov        eax, edx
0000000000005bd0         shr        eax, cl
0000000000005bd2         not        eax
0000000000005bd4         and        eax, 0x1
0000000000005bd7         shl        eax, cl
0000000000005bd9         mov        rcx, r8
0000000000005bdc         xor        eax, edx
0000000000005bde         mov        rdx, rsi
0000000000005be1         mov        rsi, rdi
0000000000005be4         mov        dword [r9], eax
0000000000005be7         xor        edi, edi
0000000000005be9         call       quotearg_n_options                          ; quotearg_n_options
0000000000005bee         mov        rsi, qword [rsp+0x48+var_10]
0000000000005bf3         xor        rsi, qword [fs:0x28]
0000000000005bfc         jne        loc_5c03

0000000000005bfe         add        rsp, 0x48
0000000000005c02         ret
                        ; endp

                     loc_5c03:
0000000000005c03         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
0000000000005c08         align      16                                          ; End of unwind block (FDE at 0x8dfc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
0000000000005c10         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0x8e18)
0000000000005c14         mov        rsi, 0xffffffffffffffff
0000000000005c1b         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
0000000000005c20         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0x8e18), Begin of unwind block (FDE at 0x8e2c), CODE XREF=close_stdout+101
0000000000005c25         mov        rsi, 0xffffffffffffffff
0000000000005c2c         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000005c31         align      64                                          ; End of unwind block (FDE at 0x8e2c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
0000000000005c40         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0x8e40)
0000000000005c45         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000005c4a         align      16                                          ; End of unwind block (FDE at 0x8e40)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
0000000000005c50         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x8e54), CODE XREF=main+818, main+946, main+1004, main+1134, main+1181
0000000000005c54         mov        rax, rdx
0000000000005c57         mov        rdx, qword [fs:0x28]
0000000000005c60         mov        qword [rsp+0x48+var_10], rdx
0000000000005c65         xor        edx, edx
0000000000005c67         cmp        esi, 0xa
0000000000005c6a         je         loc_5cd4

0000000000005c6c         mov        dword [rsp+0x48+var_48], esi
0000000000005c6f         mov        rcx, rsp
0000000000005c72         mov        rdx, 0xffffffffffffffff
0000000000005c79         mov        rsi, rax
0000000000005c7c         mov        qword [rsp+0x48+var_44], 0x0
0000000000005c85         mov        qword [rsp+0x48+var_3C], 0x4000000
0000000000005c8e         mov        qword [rsp+0x48+var_34], 0x0
0000000000005c97         mov        qword [rsp+0x48+var_2C], 0x0
0000000000005ca0         mov        qword [rsp+0x48+var_24], 0x0
0000000000005ca9         mov        qword [rsp+0x48+var_1C], 0x0
0000000000005cb2         mov        dword [rsp+0x48+var_14], 0x0
0000000000005cba         call       quotearg_n_options                          ; quotearg_n_options
0000000000005cbf         mov        rcx, qword [rsp+0x48+var_10]
0000000000005cc4         xor        rcx, qword [fs:0x28]
0000000000005ccd         jne        loc_5cd9

0000000000005ccf         add        rsp, 0x48
0000000000005cd3         ret
                        ; endp

                     loc_5cd4:
0000000000005cd4         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_5cd9:
0000000000005cd9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
0000000000005cde         align      32                                          ; End of unwind block (FDE at 0x8e54)

                     quotearg_n_custom_mem:
0000000000005ce0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x8e70), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
0000000000005ce4         mov        r9, rcx
0000000000005ce7         mov        rcx, qword [qword_20a250]                   ; qword_20a250
0000000000005cee         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000005cf6         mov        rax, qword [fs:0x28]
0000000000005cff         mov        qword [rsp+0x48+var_10], rax
0000000000005d04         xor        eax, eax
0000000000005d06         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000005d0a         test       rsi, rsi
0000000000005d0d         mov        qword [rsp+0x48+var_18], rcx
0000000000005d12         mov        dword [rsp+0x48+var_48], 0xa
0000000000005d19         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20a230
0000000000005d21         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000005d26         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20a240
0000000000005d2e         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000005d33         je         loc_5d67

0000000000005d35         test       rdx, rdx
0000000000005d38         je         loc_5d67

0000000000005d3a         mov        qword [rsp+0x48+var_20], rsi
0000000000005d3f         mov        qword [rsp+0x48+var_18], rdx
0000000000005d44         mov        rcx, rsp
0000000000005d47         mov        rdx, r8
0000000000005d4a         mov        rsi, r9
0000000000005d4d         call       quotearg_n_options                          ; quotearg_n_options
0000000000005d52         mov        rdi, qword [rsp+0x48+var_10]
0000000000005d57         xor        rdi, qword [fs:0x28]
0000000000005d60         jne        loc_5d6c

0000000000005d62         add        rsp, 0x48
0000000000005d66         ret
                        ; endp

                     loc_5d67:
0000000000005d67         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_5d6c:
0000000000005d6c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
0000000000005d71         align      128                                         ; End of unwind block (FDE at 0x8e70)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom:
0000000000005d80         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0x8e8c)
0000000000005d87         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
0000000000005d8c         align      16                                          ; End of unwind block (FDE at 0x8e8c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
0000000000005d90         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x8ea0)
0000000000005d93         mov        r8, 0xffffffffffffffff
0000000000005d9a         mov        rdx, rsi
0000000000005d9d         mov        rsi, rdi
0000000000005da0         xor        edi, edi
0000000000005da2         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000005da7         align      16                                          ; End of unwind block (FDE at 0x8ea0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
0000000000005db0         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0x8eb4)
0000000000005db3         mov        rcx, rdx
0000000000005db6         mov        rdx, rsi
0000000000005db9         mov        rsi, rdi
0000000000005dbc         xor        edi, edi
0000000000005dbe         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000005dc3         align      16                                          ; End of unwind block (FDE at 0x8eb4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
0000000000005dd0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x8ec8), quote_quoting_options
0000000000005dd7         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005ddc         align      32                                          ; End of unwind block (FDE at 0x8ec8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
0000000000005de0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x8edc), quote_quoting_options
0000000000005de7         mov        rdx, rsi
0000000000005dea         mov        rsi, rdi
0000000000005ded         xor        edi, edi
0000000000005def         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005df4         align      512                                         ; End of unwind block (FDE at 0x8edc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
0000000000005e00         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x8ef0), quote_quoting_options
0000000000005e07         mov        rdx, 0xffffffffffffffff
0000000000005e0e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005e13         align      32                                          ; End of unwind block (FDE at 0x8ef0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
0000000000005e20         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x8f04), quote_quoting_options
0000000000005e27         mov        rsi, rdi
0000000000005e2a         mov        rdx, 0xffffffffffffffff
0000000000005e31         xor        edi, edi
0000000000005e33         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005e38         align      64                                          ; End of unwind block (FDE at 0x8f04)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_150: int64_t, -336
        ;    var_158: int64_t, -344


                     same_nameat.part.0:
0000000000005e40         push       r13                                         ; Begin of unwind block (FDE at 0x8f1c)
0000000000005e42         push       r12
0000000000005e44         mov        r13d, edi
0000000000005e47         push       rbp
0000000000005e48         push       rbx
0000000000005e49         mov        rdi, rsi
0000000000005e4c         mov        ebp, edx
0000000000005e4e         mov        r12, rcx
0000000000005e51         sub        rsp, 0x138
0000000000005e58         mov        rax, qword [fs:0x28]
0000000000005e61         mov        qword [rsp+0x158+var_30], rax
0000000000005e69         xor        eax, eax
0000000000005e6b         call       dir_name                                    ; dir_name
0000000000005e70         mov        rcx, rsp                                    ; argument "__stat_buf" for method j___fxstatat
0000000000005e73         mov        r8d, 0x100                                  ; argument "__flag" for method j___fxstatat
0000000000005e79         mov        rdx, rax                                    ; argument "__filename" for method j___fxstatat
0000000000005e7c         mov        esi, r13d                                   ; argument "__fildes" for method j___fxstatat
0000000000005e7f         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
0000000000005e84         mov        rbx, rax
0000000000005e87         call       j___fxstatat                                ; __fxstatat
0000000000005e8c         test       eax, eax
0000000000005e8e         jne        loc_5f40

                     loc_5e94:
0000000000005e94         mov        rdi, rbx                                    ; argument "__ptr" for method j_free, CODE XREF=same_nameat.part.0+285
0000000000005e97         call       j_free                                      ; free
0000000000005e9c         mov        rdi, r12
0000000000005e9f         call       dir_name                                    ; dir_name
0000000000005ea4         lea        rcx, qword [rsp+0x158+var_C8]               ; argument "__stat_buf" for method j___fxstatat
0000000000005eac         mov        r8d, 0x100                                  ; argument "__flag" for method j___fxstatat
0000000000005eb2         mov        rdx, rax                                    ; argument "__filename" for method j___fxstatat
0000000000005eb5         mov        esi, ebp                                    ; argument "__fildes" for method j___fxstatat
0000000000005eb7         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
0000000000005ebc         mov        rbx, rax
0000000000005ebf         call       j___fxstatat                                ; __fxstatat
0000000000005ec4         test       eax, eax
0000000000005ec6         jne        loc_5f18

                     loc_5ec8:
0000000000005ec8         xor        ebp, ebp                                    ; CODE XREF=same_nameat.part.0+245
0000000000005eca         mov        rax, qword [rsp+0x158+var_C0]
0000000000005ed2         cmp        qword [rsp+0x158+var_150], rax
0000000000005ed7         jne        loc_5ee9

0000000000005ed9         mov        rax, qword [rsp+0x158+var_C8]
0000000000005ee1         cmp        qword [rsp+0x158+var_158], rax
0000000000005ee5         sete       bpl

                     loc_5ee9:
0000000000005ee9         mov        rdi, rbx                                    ; argument "__ptr" for method j_free, CODE XREF=same_nameat.part.0+151
0000000000005eec         call       j_free                                      ; free
0000000000005ef1         mov        rdx, qword [rsp+0x158+var_30]
0000000000005ef9         xor        rdx, qword [fs:0x28]
0000000000005f02         mov        eax, ebp
0000000000005f04         jne        loc_5f62

0000000000005f06         add        rsp, 0x138
0000000000005f0d         pop        rbx
0000000000005f0e         pop        rbp
0000000000005f0f         pop        r12
0000000000005f11         pop        r13
0000000000005f13         ret
                        ; endp
0000000000005f14         align      8

                     loc_5f18:
0000000000005f18         call       j___errno_location                          ; __errno_location, CODE XREF=same_nameat.part.0+134
0000000000005f1d         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000005f1f         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x750d
0000000000005f26         mov        rcx, rbx
0000000000005f29         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000005f2e         xor        eax, eax
0000000000005f30         call       j_error                                     ; error
0000000000005f35         jmp        loc_5ec8
0000000000005f37         align      64

                     loc_5f40:
0000000000005f40         call       j___errno_location                          ; __errno_location, CODE XREF=same_nameat.part.0+78
0000000000005f45         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000005f47         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x750d
0000000000005f4e         mov        rcx, rbx
0000000000005f51         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000005f56         xor        eax, eax
0000000000005f58         call       j_error                                     ; error
0000000000005f5d         jmp        loc_5e94

                     loc_5f62:
0000000000005f62         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=same_nameat.part.0+196
                        ; endp
0000000000005f67         align      16                                          ; End of unwind block (FDE at 0x8f1c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60


                     same_nameat:
0000000000005f70         push       r15                                         ; Begin of unwind block (FDE at 0x8f58), CODE XREF=same_name+13
0000000000005f72         push       r14
0000000000005f74         mov        r15d, edx
0000000000005f77         push       r13
0000000000005f79         push       r12
0000000000005f7b         push       rbp
0000000000005f7c         push       rbx
0000000000005f7d         mov        rbp, rcx
0000000000005f80         mov        rbx, rsi
0000000000005f83         sub        rsp, 0x18
0000000000005f87         mov        dword [rsp+0x48+var_3C], edi
0000000000005f8b         mov        rdi, rsi
0000000000005f8e         call       last_component                              ; last_component
0000000000005f93         mov        rdi, rbp
0000000000005f96         mov        r12, rax
0000000000005f99         call       last_component                              ; last_component
0000000000005f9e         mov        rdi, r12
0000000000005fa1         mov        r13, rax
0000000000005fa4         call       base_len                                    ; base_len
0000000000005fa9         mov        rdi, r13
0000000000005fac         mov        r14, rax
0000000000005faf         call       base_len                                    ; base_len
0000000000005fb4         cmp        r14, rax
0000000000005fb7         je         loc_5fd0

                     loc_5fb9:
0000000000005fb9         add        rsp, 0x18                                   ; CODE XREF=same_nameat+112
0000000000005fbd         xor        eax, eax
0000000000005fbf         pop        rbx
0000000000005fc0         pop        rbp
0000000000005fc1         pop        r12
0000000000005fc3         pop        r13
0000000000005fc5         pop        r14
0000000000005fc7         pop        r15
0000000000005fc9         ret
                        ; endp
0000000000005fca         align      16

                     loc_5fd0:
0000000000005fd0         mov        rdx, r14                                    ; argument "__n" for method j_memcmp, CODE XREF=same_nameat+71
0000000000005fd3         mov        rsi, r13                                    ; argument "__s2" for method j_memcmp
0000000000005fd6         mov        rdi, r12                                    ; argument "__s1" for method j_memcmp
0000000000005fd9         call       j_memcmp                                    ; memcmp
0000000000005fde         test       eax, eax
0000000000005fe0         jne        loc_5fb9

0000000000005fe2         mov        edi, dword [rsp+0x48+var_3C]
0000000000005fe6         add        rsp, 0x18
0000000000005fea         mov        rcx, rbp
0000000000005fed         mov        edx, r15d
0000000000005ff0         mov        rsi, rbx
0000000000005ff3         pop        rbx
0000000000005ff4         pop        rbp
0000000000005ff5         pop        r12
0000000000005ff7         pop        r13
0000000000005ff9         pop        r14
0000000000005ffb         pop        r15
0000000000005ffd         jmp        same_nameat.part.0                          ; same_nameat.part.0
                        ; endp
0000000000006002         align      16                                          ; End of unwind block (FDE at 0x8f58)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     same_name:
0000000000006010         mov        edx, 0xffffff9c                             ; Begin of unwind block (FDE at 0x8fb8), CODE XREF=triple_compare+36
0000000000006015         mov        rcx, rsi
0000000000006018         mov        rsi, rdi
000000000000601b         mov        edi, edx
000000000000601d         jmp        same_nameat                                 ; same_nameat
                        ; endp
0000000000006022         align      16                                          ; End of unwind block (FDE at 0x8fb8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
0000000000006030         push       r15                                         ; Begin of unwind block (FDE at 0x8fcc), CODE XREF=j_version_etc_arn, version_etc_va+75, version_etc+161
0000000000006032         push       r14
0000000000006034         push       r13
0000000000006036         push       r12
0000000000006038         mov        r12, r9
000000000000603b         push       rbp
000000000000603c         push       rbx
000000000000603d         mov        rbp, rdi
0000000000006040         mov        rbx, r8
0000000000006043         sub        rsp, 0x28
0000000000006047         test       rsi, rsi
000000000000604a         je         loc_6168

0000000000006050         mov        r8, rdx
0000000000006053         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
000000000000605a         mov        r9, rcx
000000000000605d         xor        eax, eax
000000000000605f         mov        rcx, rsi
0000000000006062         mov        esi, 0x1
0000000000006067         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_606c:
000000000000606c         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0x7afb, CODE XREF=version_etc_arn+337
0000000000006073         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006075         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000607a         call       j_dcgettext                                 ; dcgettext
000000000000607f         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000006086         mov        rcx, rax
0000000000006089         mov        r8d, 0x7e3
000000000000608f         mov        esi, 0x1
0000000000006094         mov        rdi, rbp
0000000000006097         xor        eax, eax
0000000000006099         call       j___fprintf_chk                             ; __fprintf_chk
000000000000609e         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
00000000000060a5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000060a7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000060ac         call       j_dcgettext                                 ; dcgettext
00000000000060b1         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
00000000000060b4         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000060b7         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000060bc         cmp        r12, 0x9
00000000000060c0         ja         loc_6400

00000000000060c6         lea        rdx, qword [switch_table_7de8]              ; switch_table_7de8
00000000000060cd         movsxd     rax, dword [rdx+r12*4]
00000000000060d1         add        rax, rdx
00000000000060d4         jmp        rax                                         ; switch statement using table at 0x7de8, with 10 cases, 0x60e0,0x6156,0x6190,0x61e8,0x6228,0x6270,0x62c0,0x6318,0x6348,0x63b0
00000000000060d6         align      32

                     loc_60e0:
00000000000060e0         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
00000000000060e4         mov        rax, qword [rbx+0x10]
00000000000060e8         lea        rsi, qword [aWrittenBySSSns_7cf8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
00000000000060ef         mov        r8, qword [rbx+8]
00000000000060f3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000060f8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000060fa         mov        r13, qword [rbx+0x30]
00000000000060fe         mov        r12, qword [rbx+0x28]
0000000000006102         mov        qword [rsp+0x58+var_48], r9
0000000000006107         mov        r15, qword [rbx+0x20]
000000000000610b         mov        r14, qword [rbx+0x18]
000000000000610f         mov        qword [rsp+0x58+var_58], rax
0000000000006113         mov        qword [rsp+0x58+var_50], r8
0000000000006118         mov        rbx, qword [rbx]
000000000000611b         call       j_dcgettext                                 ; dcgettext
0000000000006120         sub        rsp, 0x8

                     loc_6124:
0000000000006124         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
0000000000006129         mov        rdx, rax
000000000000612c         mov        rcx, rbx
000000000000612f         mov        esi, 0x1
0000000000006134         mov        rdi, rbp
0000000000006137         xor        eax, eax
0000000000006139         push       r9
000000000000613b         push       r13
000000000000613d         push       r12
000000000000613f         push       r15
0000000000006141         push       r14
0000000000006143         mov        r9, qword [rsp+0x88+var_58]
0000000000006148         mov        r8, qword [rsp+0x88+var_50]
000000000000614d         call       j___fprintf_chk                             ; __fprintf_chk
0000000000006152         add        rsp, 0x30

                     loc_6156:
0000000000006156         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
000000000000615a         pop        rbx
000000000000615b         pop        rbp
000000000000615c         pop        r12
000000000000615e         pop        r13
0000000000006160         pop        r14
0000000000006162         pop        r15
0000000000006164         ret
                        ; endp
0000000000006165         align      8

                     loc_6168:
0000000000006168         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
000000000000616b         mov        rcx, rdx
000000000000616e         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
0000000000006175         mov        esi, 0x1
000000000000617a         xor        eax, eax
000000000000617c         call       j___fprintf_chk                             ; __fprintf_chk
0000000000006181         jmp        loc_606c
0000000000006186         align      16

                     loc_6190:
0000000000006190         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
0000000000006194         mov        r9, qword [rbx+0x38]
0000000000006198         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
000000000000619f         mov        rax, qword [rbx+0x10]
00000000000061a3         mov        r8, qword [rbx+8]
00000000000061a7         mov        edx, 0x5
00000000000061ac         mov        r13, qword [rbx+0x30]
00000000000061b0         mov        r12, qword [rbx+0x28]
00000000000061b4         mov        r15, qword [rbx+0x20]
00000000000061b8         mov        r14, qword [rbx+0x18]
00000000000061bc         mov        rbx, qword [rbx]
00000000000061bf         mov        qword [rsp+0x58+var_40], r10
00000000000061c4         mov        qword [rsp+0x58+var_48], r9
00000000000061c9         mov        qword [rsp+0x58+var_58], rax
00000000000061cd         mov        qword [rsp+0x58+var_50], r8

                     loc_61d2:
00000000000061d2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
00000000000061d4         call       j_dcgettext                                 ; dcgettext
00000000000061d9         mov        r10, qword [rsp+0x58+var_40]
00000000000061de         push       r10
00000000000061e0         jmp        loc_6124
00000000000061e5         align      8

                     loc_61e8:
00000000000061e8         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
00000000000061eb         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
00000000000061f2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000061f7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000061f9         call       j_dcgettext                                 ; dcgettext
00000000000061fe         add        rsp, 0x28
0000000000006202         mov        rcx, rbx
0000000000006205         mov        rdi, rbp
0000000000006208         pop        rbx
0000000000006209         pop        rbp
000000000000620a         pop        r12
000000000000620c         pop        r13
000000000000620e         pop        r14
0000000000006210         pop        r15
0000000000006212         mov        rdx, rax
0000000000006215         mov        esi, 0x1
000000000000621a         xor        eax, eax
000000000000621c         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000006221         align      8

                     loc_6228:
0000000000006228         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
000000000000622c         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
0000000000006233         mov        rbx, qword [rbx]
0000000000006236         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000623b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000623d         call       j_dcgettext                                 ; dcgettext
0000000000006242         add        rsp, 0x28
0000000000006246         mov        r8, r12
0000000000006249         mov        rcx, rbx
000000000000624c         mov        rdi, rbp
000000000000624f         mov        rdx, rax
0000000000006252         mov        esi, 0x1
0000000000006257         pop        rbx
0000000000006258         pop        rbp
0000000000006259         pop        r12
000000000000625b         pop        r13
000000000000625d         pop        r14
000000000000625f         pop        r15
0000000000006261         xor        eax, eax
0000000000006263         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000006268         align      16

                     loc_6270:
0000000000006270         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
0000000000006274         mov        r12, qword [rbx+8]
0000000000006278         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
000000000000627f         mov        rbx, qword [rbx]
0000000000006282         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006287         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006289         call       j_dcgettext                                 ; dcgettext
000000000000628e         add        rsp, 0x28
0000000000006292         mov        r9, r13
0000000000006295         mov        r8, r12
0000000000006298         mov        rcx, rbx
000000000000629b         mov        rdi, rbp
000000000000629e         mov        rdx, rax
00000000000062a1         pop        rbx
00000000000062a2         pop        rbp
00000000000062a3         pop        r12
00000000000062a5         pop        r13
00000000000062a7         pop        r14
00000000000062a9         pop        r15
00000000000062ab         mov        esi, 0x1
00000000000062b0         xor        eax, eax
00000000000062b2         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
00000000000062b7         align      64

                     loc_62c0:
00000000000062c0         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
00000000000062c7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000062cc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000062ce         mov        r14, qword [rbx+0x18]
00000000000062d2         mov        r13, qword [rbx+0x10]
00000000000062d6         mov        r12, qword [rbx+8]
00000000000062da         mov        rbx, qword [rbx]
00000000000062dd         call       j_dcgettext                                 ; dcgettext
00000000000062e2         sub        rsp, 0x8

                     loc_62e6:
00000000000062e6         push       r14                                         ; CODE XREF=version_etc_arn+784
00000000000062e8         mov        rdx, rax
00000000000062eb         mov        r9, r13
00000000000062ee         mov        r8, r12
00000000000062f1         mov        rcx, rbx
00000000000062f4         mov        rdi, rbp
00000000000062f7         mov        esi, 0x1
00000000000062fc         xor        eax, eax
00000000000062fe         call       j___fprintf_chk                             ; __fprintf_chk
0000000000006303         pop        rax
0000000000006304         pop        rdx
0000000000006305         add        rsp, 0x28
0000000000006309         pop        rbx
000000000000630a         pop        rbp
000000000000630b         pop        r12
000000000000630d         pop        r13
000000000000630f         pop        r14
0000000000006311         pop        r15
0000000000006313         ret
                        ; endp
0000000000006314         align      8

                     loc_6318:
0000000000006318         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
000000000000631c         lea        rsi, qword [aWrittenBySSSns_7c78]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
0000000000006323         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006328         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000632a         mov        r14, qword [rbx+0x18]
000000000000632e         mov        r13, qword [rbx+0x10]
0000000000006332         mov        r12, qword [rbx+8]
0000000000006336         mov        rbx, qword [rbx]
0000000000006339         call       j_dcgettext                                 ; dcgettext
000000000000633e         push       r15
0000000000006340         jmp        loc_62e6
0000000000006342         align      8

                     loc_6348:
0000000000006348         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
000000000000634c         mov        r12, qword [rbx+0x28]
0000000000006350         lea        rsi, qword [aWrittenBySSSns_7ca0]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
0000000000006357         mov        r15, qword [rbx+0x20]
000000000000635b         mov        r14, qword [rbx+0x18]
000000000000635f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006364         mov        r13, qword [rbx+0x10]
0000000000006368         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000636a         mov        rbx, qword [rbx]
000000000000636d         mov        qword [rsp+0x58+var_58], r8
0000000000006371         call       j_dcgettext                                 ; dcgettext
0000000000006376         sub        rsp, 0x8
000000000000637a         mov        r9, r13
000000000000637d         push       r12
000000000000637f         push       r15
0000000000006381         push       r14

                     loc_6383:
0000000000006383         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
0000000000006388         mov        rcx, rbx
000000000000638b         mov        rdx, rax
000000000000638e         mov        rdi, rbp
0000000000006391         mov        esi, 0x1
0000000000006396         xor        eax, eax
0000000000006398         call       j___fprintf_chk                             ; __fprintf_chk
000000000000639d         add        rsp, 0x20
00000000000063a1         add        rsp, 0x28
00000000000063a5         pop        rbx
00000000000063a6         pop        rbp
00000000000063a7         pop        r12
00000000000063a9         pop        r13
00000000000063ab         pop        r14
00000000000063ad         pop        r15
00000000000063af         ret
                        ; endp

                     loc_63b0:
00000000000063b0         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
00000000000063b4         mov        r13, qword [rbx+0x30]
00000000000063b8         lea        rsi, qword [aWrittenBySSSns_7cc8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
00000000000063bf         mov        r12, qword [rbx+0x28]
00000000000063c3         mov        r15, qword [rbx+0x20]
00000000000063c7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000063cc         mov        r14, qword [rbx+0x18]
00000000000063d0         mov        r8, qword [rbx+8]
00000000000063d4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000063d6         mov        qword [rsp+0x58+var_50], r9
00000000000063db         mov        rbx, qword [rbx]
00000000000063de         mov        qword [rsp+0x58+var_58], r8
00000000000063e2         call       j_dcgettext                                 ; dcgettext
00000000000063e7         push       r13
00000000000063e9         push       r12
00000000000063eb         push       r15
00000000000063ed         push       r14
00000000000063ef         mov        r9, qword [rsp+0x78+var_50]
00000000000063f4         jmp        loc_6383
00000000000063f6         align      1024

                     loc_6400:
0000000000006400         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
0000000000006404         mov        r9, qword [rbx+0x38]
0000000000006408         mov        edx, 0x5
000000000000640d         mov        rax, qword [rbx+0x10]
0000000000006411         mov        r8, qword [rbx+8]
0000000000006415         lea        rsi, qword [aWrittenBySSSns_7d60]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
000000000000641c         mov        r13, qword [rbx+0x30]
0000000000006420         mov        r12, qword [rbx+0x28]
0000000000006424         mov        r15, qword [rbx+0x20]
0000000000006428         mov        r14, qword [rbx+0x18]
000000000000642c         mov        qword [rsp+0x58+var_40], r10
0000000000006431         mov        qword [rsp+0x58+var_48], r9
0000000000006436         mov        qword [rsp+0x58+var_58], rax
000000000000643a         mov        qword [rsp+0x58+var_50], r8
000000000000643f         mov        rbx, qword [rbx]
0000000000006442         jmp        loc_61d2
0000000000006447         align      16                                          ; End of unwind block (FDE at 0x8fcc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
0000000000006450         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0x90e0)
0000000000006453         cmp        qword [r8], 0x0
0000000000006457         je         j_version_etc_arn                           ; version_etc_arn

0000000000006459         nop        dword [rax]

                     loc_6460:
0000000000006460         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
0000000000006464         cmp        qword [r8+r9*8], 0x0
0000000000006469         jne        loc_6460

                     j_version_etc_arn:        // version_etc_arn
000000000000646b         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
0000000000006470         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0x90e0), Begin of unwind block (FDE at 0x90f4)
0000000000006474         mov        r10, r8
0000000000006477         xor        r9d, r9d
000000000000647a         mov        rax, qword [fs:0x28]
0000000000006483         mov        qword [rsp+0x68+var_10], rax
0000000000006488         xor        eax, eax
000000000000648a         mov        r8, rsp
000000000000648d         nop        dword [rax]

                     loc_6490:
0000000000006490         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000006493         cmp        eax, 0x2f
0000000000006496         ja         loc_64da

0000000000006498         mov        r11d, eax
000000000000649b         add        r11, qword [r10+0x10]
000000000000649f         add        eax, 0x8
00000000000064a2         mov        dword [r10], eax

                     loc_64a5:
00000000000064a5         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
00000000000064a8         test       rax, rax
00000000000064ab         mov        qword [r8+r9*8], rax
00000000000064af         je         loc_64bb

00000000000064b1         add        r9, 0x1
00000000000064b5         cmp        r9, 0xa
00000000000064b9         jne        loc_6490

                     loc_64bb:
00000000000064bb         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
00000000000064c0         mov        rax, qword [rsp+0x68+var_10]
00000000000064c5         xor        rax, qword [fs:0x28]
00000000000064ce         jne        loc_64d5

00000000000064d0         add        rsp, 0x68
00000000000064d4         ret
                        ; endp

                     loc_64d5:
00000000000064d5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_64da:
00000000000064da         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
00000000000064de         lea        rax, qword [r11+8]
00000000000064e2         mov        qword [r10+8], rax
00000000000064e6         jmp        loc_64a5
00000000000064e8         align      16                                          ; End of unwind block (FDE at 0x90f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
00000000000064f0         push       rbp                                         ; Begin of unwind block (FDE at 0x9110), CODE XREF=main+331
00000000000064f1         push       rbx
00000000000064f2         mov        r10d, 0x20
00000000000064f8         xor        r11d, r11d
00000000000064fb         sub        rsp, 0xb8
0000000000006502         mov        rax, qword [fs:0x28]
000000000000650b         mov        qword [rsp+0xc8+var_50], rax
0000000000006510         xor        eax, eax
0000000000006512         lea        rax, qword [rsp+0xc8+arg_0]
000000000000651a         mov        qword [rsp+0xc8+var_28], r8
0000000000006522         lea        rbx, qword [rsp+0xc8+arg_0]
000000000000652a         lea        r8, qword [rsp+0xc8+var_A8]
000000000000652f         mov        qword [rsp+0xc8+var_20], r9
0000000000006537         mov        dword [rsp+0xc8+var_C0], 0x20
000000000000653f         mov        qword [rsp+0xc8+var_B8], rax
0000000000006544         lea        rax, qword [rsp+0xc8+var_48]
000000000000654c         xor        r9d, r9d
000000000000654f         mov        qword [rsp+0xc8+var_B0], rax
0000000000006554         mov        rbp, rax
0000000000006557         nop        word [rax+rax]

                     loc_6560:
0000000000006560         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
0000000000006564         ja         loc_65bc

0000000000006566         mov        eax, r10d
0000000000006569         mov        r11d, 0x1
000000000000656f         add        r10d, 0x8
0000000000006573         add        rax, rbp

                     loc_6576:
0000000000006576         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
0000000000006579         test       rax, rax
000000000000657c         mov        qword [r8+r9*8], rax
0000000000006580         je         loc_658c

0000000000006582         add        r9, 0x1
0000000000006586         cmp        r9, 0xa
000000000000658a         jne        loc_6560

                     loc_658c:
000000000000658c         test       r11b, r11b                                  ; CODE XREF=version_etc+144
000000000000658f         jne        loc_65b5

                     loc_6591:
0000000000006591         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000006596         mov        rax, qword [rsp+0xc8+var_50]
000000000000659b         xor        rax, qword [fs:0x28]
00000000000065a4         jne        loc_65b0

00000000000065a6         add        rsp, 0xb8
00000000000065ad         pop        rbx
00000000000065ae         pop        rbp
00000000000065af         ret
                        ; endp

                     loc_65b0:
00000000000065b0         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_65b5:
00000000000065b5         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
00000000000065ba         jmp        loc_6591

                     loc_65bc:
00000000000065bc         mov        rax, rbx                                    ; CODE XREF=version_etc+116
00000000000065bf         add        rbx, 0x8
00000000000065c3         jmp        loc_6576
00000000000065c5         align      16                                          ; End of unwind block (FDE at 0x9110)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
00000000000065d0         push       rbx                                         ; Begin of unwind block (FDE at 0x913c)
00000000000065d1         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
00000000000065d8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000065dd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000065df         call       j_dcgettext                                 ; dcgettext
00000000000065e4         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
00000000000065eb         mov        rsi, rax
00000000000065ee         mov        edi, 0x1
00000000000065f3         xor        eax, eax
00000000000065f5         call       j___printf_chk                              ; __printf_chk
00000000000065fa         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
0000000000006601         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006606         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006608         call       j_dcgettext                                 ; dcgettext
000000000000660d         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000006614         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6fd2
000000000000661b         mov        rsi, rax
000000000000661e         mov        edi, 0x1
0000000000006623         xor        eax, eax
0000000000006625         call       j___printf_chk                              ; __printf_chk
000000000000662a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000006631         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
0000000000006638         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000663a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000663f         call       j_dcgettext                                 ; dcgettext
0000000000006644         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000006647         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000664a         pop        rbx
000000000000664b         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
0000000000006650         push       rbx                                         ; End of unwind block (FDE at 0x913c), Begin of unwind block (FDE at 0x915c), CODE XREF=sub_2a7a+11, sub_2a7a+98, record_file+29, quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15
0000000000006651         mov        rbx, rdi
0000000000006654         call       j_malloc                                    ; malloc
0000000000006659         test       rax, rax
000000000000665c         jne        loc_6663

000000000000665e         test       rbx, rbx
0000000000006661         jne        loc_6665

                     loc_6663:
0000000000006663         pop        rbx                                         ; CODE XREF=xmalloc+12
0000000000006664         ret
                        ; endp

                     loc_6665:
0000000000006665         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_666a:
000000000000666a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x915c)
                     xnmalloc:
0000000000006670         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x9178)
0000000000006673         mul        rsi
0000000000006676         mov        rdi, rax
0000000000006679         seto       al
000000000000667c         test       rdi, rdi
000000000000667f         js         loc_668b

0000000000006681         movzx      eax, al
0000000000006684         test       rax, rax
0000000000006687         jne        loc_668b

0000000000006689         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_668b:
000000000000668b         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
000000000000668f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6694:
0000000000006694         nop                                                    ; End of unwind block (FDE at 0x9178)
0000000000006696         nop        word [cs:rax+rax]
                     xcharalloc:
00000000000066a0         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0x918c)
                        ; endp
00000000000066a2         align      16                                          ; End of unwind block (FDE at 0x918c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
00000000000066b0         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x91a0), CODE XREF=canonicalize_filename_mode+364, canonicalize_filename_mode+506, canonicalize_filename_mode+1154, sub_2a7a+46, quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
00000000000066b3         push       rbx
00000000000066b4         mov        rbx, rsi
00000000000066b7         jne        loc_66be

00000000000066b9         test       rdi, rdi
00000000000066bc         jne        loc_66d8

                     loc_66be:
00000000000066be         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
00000000000066c1         call       j_realloc                                   ; realloc
00000000000066c6         test       rax, rax
00000000000066c9         jne        loc_66d0

00000000000066cb         test       rbx, rbx
00000000000066ce         jne        loc_66e1

                     loc_66d0:
00000000000066d0         pop        rbx                                         ; CODE XREF=xrealloc+25
00000000000066d1         ret
                        ; endp
00000000000066d2         align      8

                     loc_66d8:
00000000000066d8         call       j_free                                      ; free, CODE XREF=xrealloc+12
00000000000066dd         xor        eax, eax
00000000000066df         pop        rbx
00000000000066e0         ret
                        ; endp

                     loc_66e1:
00000000000066e1         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_66e6:
00000000000066e6         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x91a0)
                     xnrealloc:
00000000000066f0         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x91c4)
00000000000066f3         mul        rdx
00000000000066f6         mov        rsi, rax
00000000000066f9         seto       al
00000000000066fc         test       rsi, rsi
00000000000066ff         js         loc_670b

0000000000006701         movzx      eax, al
0000000000006704         test       rax, rax
0000000000006707         jne        loc_670b

0000000000006709         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_670b:
000000000000670b         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
000000000000670f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6714:
0000000000006714         nop                                                    ; End of unwind block (FDE at 0x91c4)
0000000000006716         nop        word [cs:rax+rax]
                     x2nrealloc:
0000000000006720         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x91d8)
0000000000006723         mov        r9, rdx
0000000000006726         mov        rcx, qword [rsi]
0000000000006729         je         loc_6760

000000000000672b         xor        edx, edx
000000000000672d         movabs     rax, 0x5555555555555554
0000000000006737         div        r9
000000000000673a         cmp        rax, rcx
000000000000673d         jbe        loc_677b

000000000000673f         mov        rax, rcx
0000000000006742         shr        rax, 0x1
0000000000006745         lea        rcx, qword [rax+rcx+1]

                     loc_674a:
000000000000674a         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
000000000000674d         imul       rcx, r9                                     ; argument #4 for method xrealloc
0000000000006751         mov        rsi, rcx                                    ; argument #2 for method xrealloc
0000000000006754         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000006759         align      32

                     loc_6760:
0000000000006760         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
0000000000006763         je         loc_6788

                     loc_6765:
0000000000006765         mov        rax, rcx                                    ; CODE XREF=sub_6784+28
0000000000006768         mul        r9
000000000000676b         seto       dl
000000000000676e         test       rax, rax
0000000000006771         movzx      edx, dl
0000000000006774         js         loc_677b

0000000000006776         test       rdx, rdx
0000000000006779         je         loc_674a

                     loc_677b:
000000000000677b         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
000000000000677f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6784:
0000000000006784         nop        dword [rax]
                        ; endp

                     loc_6788:
0000000000006788         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
000000000000678a         mov        eax, 0x80
000000000000678f         xor        r8d, r8d
0000000000006792         div        r9
0000000000006795         test       rax, rax
0000000000006798         sete       r8b
000000000000679c         lea        rcx, qword [r8+rax]
00000000000067a0         jmp        loc_6765
00000000000067a2         align      16                                          ; End of unwind block (FDE at 0x91d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
00000000000067b0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x91f0)
00000000000067b3         mov        rax, qword [rsi]
00000000000067b6         je         loc_67e0

00000000000067b8         movabs     rdx, 0x5555555555555553
00000000000067c2         cmp        rax, rdx
00000000000067c5         ja         loc_67f1

00000000000067c7         mov        rdx, rax
00000000000067ca         shr        rdx, 0x1
00000000000067cd         lea        rax, qword [rdx+rax+1]

                     loc_67d2:
00000000000067d2         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
00000000000067d5         mov        rsi, rax                                    ; argument #2 for method xrealloc
00000000000067d8         jmp        xrealloc                                    ; xrealloc
                        ; endp
00000000000067dd         align      32

                     loc_67e0:
00000000000067e0         test       rax, rax                                    ; CODE XREF=x2realloc+6
00000000000067e3         mov        edx, 0x80
00000000000067e8         cmove      rax, rdx
00000000000067ec         test       rax, rax
00000000000067ef         jns        loc_67d2

                     loc_67f1:
00000000000067f1         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
00000000000067f5         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_67fa:
00000000000067fa         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x91f0)
                     xzalloc:
0000000000006800         push       rbx                                         ; Begin of unwind block (FDE at 0x9208)
0000000000006801         mov        rbx, rdi
0000000000006804         call       xmalloc                                     ; xmalloc
0000000000006809         mov        rdx, rbx                                    ; argument "__n" for method j_memset
000000000000680c         xor        esi, esi                                    ; argument "__c" for method j_memset
000000000000680e         mov        rdi, rax                                    ; argument "__s" for method j_memset
0000000000006811         pop        rbx
0000000000006812         jmp        j_memset                                    ; memset
                        ; endp
0000000000006817         align      32                                          ; End of unwind block (FDE at 0x9208)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
0000000000006820         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x9224)
0000000000006823         sub        rsp, 0x8
0000000000006827         mul        rsi
000000000000682a         seto       dl
000000000000682d         test       rax, rax
0000000000006830         js         loc_6849

0000000000006832         movzx      edx, dl
0000000000006835         test       rdx, rdx
0000000000006838         jne        loc_6849

000000000000683a         call       j_calloc                                    ; calloc
000000000000683f         test       rax, rax
0000000000006842         je         loc_6849

0000000000006844         add        rsp, 0x8
0000000000006848         ret
                        ; endp

                     loc_6849:
0000000000006849         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_684e:
000000000000684e         nop                                                    ; End of unwind block (FDE at 0x9224)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmemdup:
0000000000006850         push       rbp                                         ; Begin of unwind block (FDE at 0x9240), CODE XREF=clone_quoting_options+40
0000000000006851         push       rbx
0000000000006852         mov        rbp, rdi
0000000000006855         mov        rdi, rsi
0000000000006858         mov        rbx, rsi
000000000000685b         sub        rsp, 0x8
000000000000685f         call       xmalloc                                     ; xmalloc
0000000000006864         add        rsp, 0x8
0000000000006868         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
000000000000686b         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
000000000000686e         pop        rbx
000000000000686f         pop        rbp
0000000000006870         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000006873         jmp        j_memcpy                                    ; memcpy
                        ; endp
0000000000006878         align      128                                         ; End of unwind block (FDE at 0x9240)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000006880         push       rbx                                         ; Begin of unwind block (FDE at 0x9268), CODE XREF=record_file+40
0000000000006881         mov        rbx, rdi
0000000000006884         call       j_strlen                                    ; strlen
0000000000006889         mov        rdi, rbx
000000000000688c         lea        rsi, qword [rax+1]
0000000000006890         pop        rbx
0000000000006891         jmp        xmemdup                                     ; xmemdup
                        ; endp
0000000000006893         align      32                                          ; End of unwind block (FDE at 0x9268)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
00000000000068a0         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x9284), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=canonicalize_filename_mode+1301, record_file+130, quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41, xgetcwd+42
00000000000068a7         sub        rsp, 0x8
00000000000068ab         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000068b0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000068b2         call       j_dcgettext                                 ; dcgettext
00000000000068b7         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
00000000000068bd         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x750d
00000000000068c4         mov        rcx, rax
00000000000068c7         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000068c9         xor        eax, eax
00000000000068cb         call       j_error                                     ; error
00000000000068d0         call       j_abort                                     ; abort
                        ; endp
00000000000068d5         align      32                                          ; End of unwind block (FDE at 0x9284)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xgetcwd:
00000000000068e0         push       rbx                                         ; Begin of unwind block (FDE at 0x929c), CODE XREF=canonicalize_filename_mode+99
00000000000068e1         xor        esi, esi                                    ; argument "__size" for method j_getcwd
00000000000068e3         xor        edi, edi                                    ; argument "__buf" for method j_getcwd
00000000000068e5         call       j_getcwd                                    ; getcwd
00000000000068ea         test       rax, rax
00000000000068ed         mov        rbx, rax
00000000000068f0         je         loc_6900

                     loc_68f2:
00000000000068f2         mov        rax, rbx                                    ; CODE XREF=xgetcwd+40
00000000000068f5         pop        rbx
00000000000068f6         ret
                        ; endp
00000000000068f7         align      256

                     loc_6900:
0000000000006900         call       j___errno_location                          ; __errno_location, CODE XREF=xgetcwd+16
0000000000006905         cmp        dword [rax], 0xc
0000000000006908         jne        loc_68f2

000000000000690a         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_690f:
000000000000690f         nop                                                    ; End of unwind block (FDE at 0x929c)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
0000000000006910         push       r13                                         ; Begin of unwind block (FDE at 0x92bc), CODE XREF=sub_49e0+534
0000000000006912         push       r12
0000000000006914         mov        r13, rsi
0000000000006917         push       rbp
0000000000006918         push       rbx
0000000000006919         mov        rbx, rdi
000000000000691c         mov        r12, rdx
000000000000691f         sub        rsp, 0x18
0000000000006923         mov        rax, qword [fs:0x28]
000000000000692c         mov        qword [rsp+0x38+var_30], rax
0000000000006931         xor        eax, eax
0000000000006933         lea        rax, qword [rsp+0x38+var_34]
0000000000006938         test       rdi, rdi
000000000000693b         cmove      rbx, rax
000000000000693f         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
0000000000006942         call       j_mbrtowc                                   ; mbrtowc
0000000000006947         cmp        rax, 0xfffffffffffffffd
000000000000694b         mov        rbp, rax
000000000000694e         jbe        loc_6970

0000000000006950         test       r12, r12
0000000000006953         je         loc_6970

0000000000006955         xor        edi, edi
0000000000006957         call       hard_locale                                 ; hard_locale
000000000000695c         test       al, al
000000000000695e         jne        loc_6970

0000000000006960         movzx      eax, byte [r13]
0000000000006965         mov        ebp, 0x1
000000000000696a         mov        dword [rbx], eax
000000000000696c         nop        dword [rax]

                     loc_6970:
0000000000006970         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
0000000000006975         xor        rdx, qword [fs:0x28]
000000000000697e         mov        rax, rbp
0000000000006981         jne        loc_698e

0000000000006983         add        rsp, 0x18
0000000000006987         pop        rbx
0000000000006988         pop        rbp
0000000000006989         pop        r12
000000000000698b         pop        r13
000000000000698d         ret
                        ; endp

                     loc_698e:
000000000000698e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
0000000000006993         align      32                                          ; End of unwind block (FDE at 0x92bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     areadlink_with_size:
00000000000069a0         push       r15                                         ; Begin of unwind block (FDE at 0x92fc), CODE XREF=canonicalize_filename_mode+1068
00000000000069a2         push       r14
00000000000069a4         mov        eax, 0x401
00000000000069a9         push       r13
00000000000069ab         push       r12
00000000000069ad         mov        r13, rdi
00000000000069b0         push       rbp
00000000000069b1         push       rbx
00000000000069b2         lea        rbx, qword [rsi+1]
00000000000069b6         movabs     r14, 0x3fffffffffffffff
00000000000069c0         movabs     r15, 0x7ffffffffffffffe
00000000000069ca         sub        rsp, 0x8
00000000000069ce         cmp        rsi, 0x401
00000000000069d5         cmovae     rbx, rax
00000000000069d9         nop        dword [rax]

                     loc_69e0:
00000000000069e0         mov        rdi, rbx                                    ; argument "__size" for method j_malloc, CODE XREF=areadlink_with_size+175
00000000000069e3         call       j_malloc                                    ; malloc
00000000000069e8         test       rax, rax
00000000000069eb         mov        rbp, rax
00000000000069ee         je         loc_6a2b

                     loc_69f0:
00000000000069f0         mov        rdx, rbx                                    ; argument "__len" for method j_readlink, CODE XREF=areadlink_with_size+137
00000000000069f3         mov        rsi, rax                                    ; argument "__buf" for method j_readlink
00000000000069f6         mov        rdi, r13                                    ; argument "__path" for method j_readlink
00000000000069f9         call       j_readlink                                  ; readlink
00000000000069fe         test       rax, rax
0000000000006a01         mov        r12, rax
0000000000006a04         js         loc_6a58

                     loc_6a06:
0000000000006a06         cmp        rbx, r12                                    ; CODE XREF=areadlink_with_size+192
0000000000006a09         ja         loc_6a70

0000000000006a0b         mov        rdi, rbp                                    ; argument "__ptr" for method j_free
0000000000006a0e         call       j_free                                      ; free
0000000000006a13         cmp        rbx, r14
0000000000006a16         ja         loc_6a40

0000000000006a18         add        rbx, rbx
0000000000006a1b         mov        rdi, rbx                                    ; argument "__size" for method j_malloc
0000000000006a1e         call       j_malloc                                    ; malloc
0000000000006a23         test       rax, rax
0000000000006a26         mov        rbp, rax
0000000000006a29         jne        loc_69f0

                     loc_6a2b:
0000000000006a2b         add        rsp, 0x8                                    ; CODE XREF=areadlink_with_size+78, areadlink_with_size+204, areadlink_with_size+214, areadlink_with_size+237
0000000000006a2f         mov        rax, rbp
0000000000006a32         pop        rbx
0000000000006a33         pop        rbp
0000000000006a34         pop        r12
0000000000006a36         pop        r13
0000000000006a38         pop        r14
0000000000006a3a         pop        r15
0000000000006a3c         ret
                        ; endp
0000000000006a3d         align      64

                     loc_6a40:
0000000000006a40         cmp        rbx, r15                                    ; CODE XREF=areadlink_with_size+118
0000000000006a43         ja         loc_6a80

0000000000006a45         movabs     rbx, 0x7fffffffffffffff
0000000000006a4f         jmp        loc_69e0
0000000000006a51         align      8

                     loc_6a58:
0000000000006a58         call       j___errno_location                          ; __errno_location, CODE XREF=areadlink_with_size+100
0000000000006a5d         cmp        dword [rax], 0x22
0000000000006a60         je         loc_6a06

0000000000006a62         mov        rdi, rbp                                    ; argument "__ptr" for method j_free
0000000000006a65         xor        ebp, ebp
0000000000006a67         call       j_free                                      ; free
0000000000006a6c         jmp        loc_6a2b
0000000000006a6e         align      16

                     loc_6a70:
0000000000006a70         mov        byte [rbp+r12], 0x0                         ; CODE XREF=areadlink_with_size+105
0000000000006a76         jmp        loc_6a2b
0000000000006a78         align      128

                     loc_6a80:
0000000000006a80         call       j___errno_location                          ; __errno_location, CODE XREF=areadlink_with_size+163
0000000000006a85         xor        ebp, ebp
0000000000006a87         mov        dword [rax], 0xc
0000000000006a8d         jmp        loc_6a2b
0000000000006a8f         align      16                                          ; End of unwind block (FDE at 0x92fc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
0000000000006a90         push       r12                                         ; Begin of unwind block (FDE at 0x934c), CODE XREF=close_stdout+13, close_stdout+51
0000000000006a92         push       rbp
0000000000006a93         mov        rbp, rdi
0000000000006a96         push       rbx
0000000000006a97         call       j___fpending                                ; __fpending
0000000000006a9c         mov        ebx, dword [rbp]
0000000000006a9f         mov        rdi, rbp
0000000000006aa2         mov        r12, rax
0000000000006aa5         call       rpl_fclose                                  ; rpl_fclose
0000000000006aaa         and        ebx, 0x20
0000000000006aad         test       ebx, ebx
0000000000006aaf         jne        loc_6ac8

0000000000006ab1         test       eax, eax
0000000000006ab3         je         loc_6abf

0000000000006ab5         test       r12, r12
0000000000006ab8         mov        eax, 0xffffffff
0000000000006abd         je         loc_6af8

                     loc_6abf:
0000000000006abf         pop        rbx                                         ; CODE XREF=close_stream+35
0000000000006ac0         pop        rbp
0000000000006ac1         pop        r12
0000000000006ac3         ret
                        ; endp
0000000000006ac4         align      8

                     loc_6ac8:
0000000000006ac8         test       eax, eax                                    ; CODE XREF=close_stream+31
0000000000006aca         jne        loc_6ae8

0000000000006acc         call       j___errno_location                          ; __errno_location
0000000000006ad1         mov        dword [rax], 0x0
0000000000006ad7         mov        eax, 0xffffffff
0000000000006adc         pop        rbx
0000000000006add         pop        rbp
0000000000006ade         pop        r12
0000000000006ae0         ret
                        ; endp
0000000000006ae1         align      8

                     loc_6ae8:
0000000000006ae8         pop        rbx                                         ; CODE XREF=close_stream+58
0000000000006ae9         mov        eax, 0xffffffff
0000000000006aee         pop        rbp
0000000000006aef         pop        r12
0000000000006af1         ret
                        ; endp
0000000000006af2         align      8

                     loc_6af8:
0000000000006af8         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
0000000000006afd         cmp        dword [rax], 0x9
0000000000006b00         pop        rbx
0000000000006b01         pop        rbp
0000000000006b02         pop        r12
0000000000006b04         setne      al
0000000000006b07         movzx      eax, al
0000000000006b0a         neg        eax
0000000000006b0c         ret
                        ; endp
0000000000006b0d         align      16                                          ; End of unwind block (FDE at 0x934c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dir_name:
0000000000006b10         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x939c), CODE XREF=same_nameat.part.0+43, same_nameat.part.0+95
0000000000006b14         call       mdir_name                                   ; mdir_name
0000000000006b19         test       rax, rax
0000000000006b1c         je         loc_6b23

0000000000006b1e         add        rsp, 0x8
0000000000006b22         ret
                        ; endp

                     loc_6b23:
0000000000006b23         call       xalloc_die                                  ; xalloc_die, CODE XREF=dir_name+12
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6b28:
0000000000006b28         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x939c)
                     dir_len:
0000000000006b30         push       rbp                                         ; Begin of unwind block (FDE at 0x93bc), CODE XREF=mdir_name+9
0000000000006b31         push       rbx
0000000000006b32         xor        ebp, ebp
0000000000006b34         mov        rbx, rdi
0000000000006b37         sub        rsp, 0x8
0000000000006b3b         cmp        byte [rdi], 0x2f
0000000000006b3e         sete       bpl
0000000000006b42         call       last_component                              ; last_component
0000000000006b47         mov        rcx, rax
0000000000006b4a         sub        rcx, rbx
0000000000006b4d         cmp        rcx, rbp
0000000000006b50         jbe        loc_6b80

0000000000006b52         cmp        byte [rax-1], 0x2f
0000000000006b56         lea        rdx, qword [rcx-1]
0000000000006b5a         je         loc_6b6e

0000000000006b5c         jmp        loc_6b80
0000000000006b5e         align      32

                     loc_6b60:
0000000000006b60         cmp        byte [rbx+rdx-1], 0x2f                      ; CODE XREF=dir_len+65
0000000000006b65         lea        rax, qword [rdx-1]
0000000000006b69         jne        loc_6b73

0000000000006b6b         mov        rdx, rax

                     loc_6b6e:
0000000000006b6e         cmp        rbp, rdx                                    ; CODE XREF=dir_len+42
0000000000006b71         jne        loc_6b60

                     loc_6b73:
0000000000006b73         add        rsp, 0x8                                    ; CODE XREF=dir_len+57
0000000000006b77         mov        rax, rdx
0000000000006b7a         pop        rbx
0000000000006b7b         pop        rbp
0000000000006b7c         ret
                        ; endp
0000000000006b7d         align      128

                     loc_6b80:
0000000000006b80         add        rsp, 0x8                                    ; CODE XREF=dir_len+32, dir_len+44
0000000000006b84         mov        rdx, rcx
0000000000006b87         mov        rax, rdx
0000000000006b8a         pop        rbx
0000000000006b8b         pop        rbp
0000000000006b8c         ret
                        ; endp
0000000000006b8d         align      16                                          ; End of unwind block (FDE at 0x93bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     mdir_name:
0000000000006b90         push       rbp                                         ; Begin of unwind block (FDE at 0x93f0), CODE XREF=dir_name+4
0000000000006b91         push       rbx
0000000000006b92         mov        rbp, rdi
0000000000006b95         sub        rsp, 0x8
0000000000006b99         call       dir_len                                     ; dir_len
0000000000006b9e         test       rax, rax
0000000000006ba1         mov        rbx, rax
0000000000006ba4         sete       al
0000000000006ba7         movzx      eax, al
0000000000006baa         lea        rdi, qword [rbx+rax+1]                      ; argument "__size" for method j_malloc
0000000000006baf         call       j_malloc                                    ; malloc
0000000000006bb4         test       rax, rax
0000000000006bb7         mov        rcx, rax
0000000000006bba         je         loc_6bd6

0000000000006bbc         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
0000000000006bbf         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
0000000000006bc2         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000006bc5         call       j_memcpy                                    ; memcpy
0000000000006bca         test       rbx, rbx
0000000000006bcd         mov        rcx, rax
0000000000006bd0         je         loc_6be0

                     loc_6bd2:
0000000000006bd2         mov        byte [rcx+rbx], 0x0                         ; CODE XREF=mdir_name+88

                     loc_6bd6:
0000000000006bd6         add        rsp, 0x8                                    ; CODE XREF=mdir_name+42
0000000000006bda         mov        rax, rcx
0000000000006bdd         pop        rbx
0000000000006bde         pop        rbp
0000000000006bdf         ret
                        ; endp

                     loc_6be0:
0000000000006be0         mov        byte [rax], 0x2e                            ; CODE XREF=mdir_name+64
0000000000006be3         mov        ebx, 0x1
0000000000006be8         jmp        loc_6bd2
0000000000006bea         align      16                                          ; End of unwind block (FDE at 0x93f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     last_component:
0000000000006bf0         movzx      edx, byte [rdi]                             ; Begin of unwind block (FDE at 0x941c), CODE XREF=same_nameat+30, same_nameat+41, dir_len+18
0000000000006bf3         mov        rax, rdi
0000000000006bf6         cmp        dl, 0x2f
0000000000006bf9         jne        loc_6c0c

0000000000006bfb         nop        dword [rax+rax]

                     loc_6c00:
0000000000006c00         add        rax, 0x1                                    ; CODE XREF=last_component+26
0000000000006c04         movzx      edx, byte [rax]
0000000000006c07         cmp        dl, 0x2f
0000000000006c0a         je         loc_6c00

                     loc_6c0c:
0000000000006c0c         test       dl, dl                                      ; CODE XREF=last_component+9
0000000000006c0e         je         loc_6c4a

0000000000006c10         mov        rcx, rax
0000000000006c13         xor        esi, esi
0000000000006c15         jmp        loc_6c35
0000000000006c17         align      32

                     loc_6c20:
0000000000006c20         test       sil, sil                                    ; CODE XREF=last_component+72
0000000000006c23         je         loc_6c2a

0000000000006c25         mov        rax, rcx
0000000000006c28         xor        esi, esi

                     loc_6c2a:
0000000000006c2a         add        rcx, 0x1                                    ; CODE XREF=last_component+51
0000000000006c2e         movzx      edx, byte [rcx]
0000000000006c31         test       dl, dl
0000000000006c33         je         loc_6c4a

                     loc_6c35:
0000000000006c35         cmp        dl, 0x2f                                    ; CODE XREF=last_component+37, last_component+88
0000000000006c38         jne        loc_6c20

0000000000006c3a         add        rcx, 0x1
0000000000006c3e         movzx      edx, byte [rcx]
0000000000006c41         mov        esi, 0x1
0000000000006c46         test       dl, dl
0000000000006c48         jne        loc_6c35

                     loc_6c4a:
0000000000006c4a         ret                                                    ; CODE XREF=last_component+30, last_component+67
                        ; endp
0000000000006c4c         align      16                                          ; End of unwind block (FDE at 0x941c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base_len:
0000000000006c50         push       rbx                                         ; Begin of unwind block (FDE at 0x9430), CODE XREF=same_nameat+52, same_nameat+63
0000000000006c51         mov        rbx, rdi
0000000000006c54         call       j_strlen                                    ; strlen
0000000000006c59         cmp        rax, 0x1
0000000000006c5d         jbe        loc_6c6a

0000000000006c5f         cmp        byte [rbx+rax-1], 0x2f
0000000000006c64         lea        rdx, qword [rax-1]
0000000000006c68         je         loc_6c78

                     loc_6c6a:
0000000000006c6a         pop        rbx                                         ; CODE XREF=base_len+13
0000000000006c6b         ret
                        ; endp
0000000000006c6c         align      16

                     loc_6c70:
0000000000006c70         mov        rdx, rax                                    ; CODE XREF=base_len+55
0000000000006c73         nop        dword [rax+rax]

                     loc_6c78:
0000000000006c78         cmp        rdx, 0x1                                    ; CODE XREF=base_len+24
0000000000006c7c         je         loc_6c90

0000000000006c7e         cmp        byte [rbx+rdx-1], 0x2f
0000000000006c83         lea        rax, qword [rdx-1]
0000000000006c87         je         loc_6c70

0000000000006c89         mov        rax, rdx
0000000000006c8c         pop        rbx
0000000000006c8d         ret
                        ; endp
0000000000006c8e         align      16

                     loc_6c90:
0000000000006c90         mov        eax, 0x1                                    ; CODE XREF=base_len+44
0000000000006c95         pop        rbx
0000000000006c96         ret
                        ; endp
0000000000006c97         align      32                                          ; End of unwind block (FDE at 0x9430)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
0000000000006ca0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x945c), CODE XREF=rpl_mbrtowc+71
0000000000006ca4         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000006ca6         call       j_setlocale                                 ; setlocale
0000000000006cab         mov        rdx, rax
0000000000006cae         mov        eax, 0x1
0000000000006cb3         test       rdx, rdx
0000000000006cb6         je         loc_6cd5

0000000000006cb8         lea        rdi, qword [aMemoryExhauste+17]             ; 0x7e60
0000000000006cbf         mov        ecx, 0x2
0000000000006cc4         mov        rsi, rdx
0000000000006cc7         rep  cmpsb byte [rsi], byte [rdi]
0000000000006cc9         seta       cl
0000000000006ccc         sbb        cl, 0x0
0000000000006ccf         xor        eax, eax
0000000000006cd1         test       cl, cl
0000000000006cd3         jne        loc_6ce0

                     loc_6cd5:
0000000000006cd5         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
0000000000006cd9         ret
                        ; endp
0000000000006cda         align      32

                     loc_6ce0:
0000000000006ce0         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
0000000000006ce7         mov        ecx, 0x6
0000000000006cec         mov        rsi, rdx
0000000000006cef         rep  cmpsb byte [rsi], byte [rdi]
0000000000006cf1         seta       al
0000000000006cf4         sbb        al, 0x0
0000000000006cf6         test       al, al
0000000000006cf8         setne      al
0000000000006cfb         add        rsp, 0x8
0000000000006cff         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_pjw:
0000000000006d00         movsx      rcx, byte [rdi]                             ; End of unwind block (FDE at 0x945c), Begin of unwind block (FDE at 0x947c), CODE XREF=triple_hash+15
0000000000006d04         test       cl, cl
0000000000006d06         je         loc_6d30

0000000000006d08         xor        eax, eax
0000000000006d0a         nop        word [rax+rax]

                     loc_6d10:
0000000000006d10         rol        rax, 0x9                                    ; CODE XREF=hash_pjw+33
0000000000006d14         add        rdi, 0x1
0000000000006d18         add        rax, rcx
0000000000006d1b         movsx      rcx, byte [rdi]
0000000000006d1f         test       cl, cl
0000000000006d21         jne        loc_6d10

0000000000006d23         xor        edx, edx
0000000000006d25         div        rsi
0000000000006d28         mov        rax, rdx
0000000000006d2b         ret
                        ; endp
0000000000006d2c         align      16

                     loc_6d30:
0000000000006d30         xor        edx, edx                                    ; CODE XREF=hash_pjw+6
0000000000006d32         mov        rax, rdx
0000000000006d35         ret
                        ; endp
0000000000006d36         align      64                                          ; End of unwind block (FDE at 0x947c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000006d40         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x9494), CODE XREF=gettext_quote.part.1+11
0000000000006d44         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000006d49         call       j_nl_langinfo                               ; nl_langinfo
0000000000006d4e         test       rax, rax
0000000000006d51         je         loc_6d70

0000000000006d53         cmp        byte [rax], 0x0
0000000000006d56         lea        rdx, qword [aAscii]                         ; "ASCII"
0000000000006d5d         cmove      rax, rdx
0000000000006d61         add        rsp, 0x8
0000000000006d65         ret
                        ; endp
0000000000006d66         align      16

                     loc_6d70:
0000000000006d70         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
0000000000006d77         add        rsp, 0x8
0000000000006d7b         ret
                        ; endp
0000000000006d7c         align      128                                         ; End of unwind block (FDE at 0x9494)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
0000000000006d80         push       r12                                         ; Begin of unwind block (FDE at 0x94b4), CODE XREF=close_stream+21
0000000000006d82         push       rbp
0000000000006d83         push       rbx
0000000000006d84         mov        rbx, rdi
0000000000006d87         call       j_fileno                                    ; fileno
0000000000006d8c         test       eax, eax
0000000000006d8e         mov        rdi, rbx
0000000000006d91         js         loc_6de7

0000000000006d93         call       j___freading                                ; __freading
0000000000006d98         test       eax, eax
0000000000006d9a         jne        loc_6dc8

                     loc_6d9c:
0000000000006d9c         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
0000000000006d9f         call       rpl_fflush                                  ; rpl_fflush
0000000000006da4         test       eax, eax
0000000000006da6         je         loc_6de4

0000000000006da8         call       j___errno_location                          ; __errno_location
0000000000006dad         mov        r12d, dword [rax]
0000000000006db0         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
0000000000006db3         mov        rbp, rax
0000000000006db6         call       j_fclose                                    ; fclose
0000000000006dbb         test       r12d, r12d
0000000000006dbe         jne        loc_6df0

                     loc_6dc0:
0000000000006dc0         pop        rbx                                         ; CODE XREF=rpl_fclose+121
0000000000006dc1         pop        rbp
0000000000006dc2         pop        r12
0000000000006dc4         ret
                        ; endp
0000000000006dc5         align      8

                     loc_6dc8:
0000000000006dc8         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
0000000000006dcb         call       j_fileno                                    ; fileno
0000000000006dd0         xor        esi, esi                                    ; argument "__offset" for method j_lseek
0000000000006dd2         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000006dd7         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000006dd9         call       j_lseek                                     ; lseek
0000000000006dde         cmp        rax, 0xffffffffffffffff
0000000000006de2         jne        loc_6d9c

                     loc_6de4:
0000000000006de4         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_6de7:
0000000000006de7         pop        rbx                                         ; CODE XREF=rpl_fclose+17
0000000000006de8         pop        rbp
0000000000006de9         pop        r12
0000000000006deb         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_6df0:
0000000000006df0         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
0000000000006df4         mov        eax, 0xffffffff
0000000000006df9         jmp        loc_6dc0
0000000000006dfb         align      512                                         ; End of unwind block (FDE at 0x94b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
0000000000006e00         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x94ec), CODE XREF=rpl_fclose+31
0000000000006e03         push       rbx
0000000000006e04         mov        rbx, rdi
0000000000006e07         je         loc_6e1a

0000000000006e09         call       j___freading                                ; __freading
0000000000006e0e         test       eax, eax
0000000000006e10         je         loc_6e1a

0000000000006e12         test       dword [rbx], 0x100
0000000000006e18         jne        loc_6e28

                     loc_6e1a:
0000000000006e1a         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
0000000000006e1d         pop        rbx
0000000000006e1e         jmp        j_fflush                                    ; fflush
                        ; endp
0000000000006e23         align      8

                     loc_6e28:
0000000000006e28         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
0000000000006e2b         mov        edx, 0x1
0000000000006e30         xor        esi, esi
0000000000006e32         call       rpl_fseeko                                  ; rpl_fseeko
0000000000006e37         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
0000000000006e3a         pop        rbx
0000000000006e3b         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
0000000000006e40         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0x94ec), Begin of unwind block (FDE at 0x950c), CODE XREF=rpl_fflush+50
0000000000006e44         cmp        qword [rdi+0x10], rax
0000000000006e48         je         loc_6e50

                     j_j_fseeko:        // fseeko
0000000000006e4a         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
0000000000006e4f         align      16

                     loc_6e50:
0000000000006e50         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
0000000000006e54         cmp        qword [rdi+0x28], rax
0000000000006e58         jne        j_j_fseeko                                  ; fseeko

0000000000006e5a         cmp        qword [rdi+0x48], 0x0
0000000000006e5f         jne        j_j_fseeko                                  ; fseeko

0000000000006e61         push       r12
0000000000006e63         push       rbp
0000000000006e64         mov        r12d, edx
0000000000006e67         push       rbx
0000000000006e68         mov        rbp, rsi
0000000000006e6b         mov        rbx, rdi
0000000000006e6e         call       j_fileno                                    ; fileno
0000000000006e73         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000006e76         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000006e79         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000006e7b         call       j_lseek                                     ; lseek
0000000000006e80         cmp        rax, 0xffffffffffffffff
0000000000006e84         je         loc_6e92

0000000000006e86         and        dword [rbx], 0xffffffef
0000000000006e89         mov        qword [rbx+0x90], rax
0000000000006e90         xor        eax, eax

                     loc_6e92:
0000000000006e92         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
0000000000006e93         pop        rbp
0000000000006e94         pop        r12
0000000000006e96         ret
                        ; endp
0000000000006e97         align      32                                          ; End of unwind block (FDE at 0x950c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
0000000000006ea0         push       r15                                         ; Begin of unwind block (FDE at 0x953c), DATA XREF=_start+22
0000000000006ea2         push       r14
0000000000006ea4         mov        r15, rdx
0000000000006ea7         push       r13
0000000000006ea9         push       r12
0000000000006eab         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
0000000000006eb2         push       rbp
0000000000006eb3         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
0000000000006eba         push       rbx
0000000000006ebb         mov        r13d, edi
0000000000006ebe         mov        r14, rsi
0000000000006ec1         sub        rbp, r12
0000000000006ec4         sub        rsp, 0x8
0000000000006ec8         sar        rbp, 0x3
0000000000006ecc         call       _init                                       ; _init
0000000000006ed1         test       rbp, rbp
0000000000006ed4         je         loc_6ef6

0000000000006ed6         xor        ebx, ebx
0000000000006ed8         nop        dword [rax+rax]

                     loc_6ee0:
0000000000006ee0         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
0000000000006ee3         mov        rsi, r14
0000000000006ee6         mov        edi, r13d
0000000000006ee9         call       qword [r12+rbx*8]
0000000000006eed         add        rbx, 0x1
0000000000006ef1         cmp        rbp, rbx
0000000000006ef4         jne        loc_6ee0

                     loc_6ef6:
0000000000006ef6         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
0000000000006efa         pop        rbx
0000000000006efb         pop        rbp
0000000000006efc         pop        r12
0000000000006efe         pop        r13
0000000000006f00         pop        r14
0000000000006f02         pop        r15
0000000000006f04         ret
                        ; endp
0000000000006f05         align      16                                          ; End of unwind block (FDE at 0x953c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
0000000000006f10         ret                                                    ; Begin of unwind block (FDE at 0x9584), DATA XREF=_start+15
                        ; endp
0000000000006f12         align      32                                          ; End of unwind block (FDE at 0x9584)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
0000000000006f20         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0x959c), __dso_handle, CODE XREF=main+101
0000000000006f27         xor        esi, esi
0000000000006f29         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
0000000000006f2e         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x959c)
0000000000006f2f         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x6f30; 0x6f39[ (9 bytes)
        ; File offset : [28464; 28473[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
0000000000006f30         sub        rsp, 0x8
0000000000006f34         add        rsp, 0x8
0000000000006f38         ret
                        ; endp
0000000000006f39         db  0x00 ; '.'
0000000000006f3a         db  0x00 ; '.'
0000000000006f3b         db  0x00 ; '.'
0000000000006f3c         db  0x00 ; '.'
0000000000006f3d         db  0x00 ; '.'
0000000000006f3e         db  0x00 ; '.'
0000000000006f3f         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x6f40; 0x7e6e[ (3886 bytes)
        ; File offset : [28480; 32366[ (3886 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
0000000000006f40         db  0x01 ; '.'
0000000000006f41         db  0x00 ; '.'
0000000000006f42         db  0x02 ; '.'
0000000000006f43         db  0x00 ; '.'
                     aCannotStatS:
0000000000006f44         db         "cannot stat %s", 0                         ; DATA XREF=isdir+110
                     aRealpath:
0000000000006f53         db         "realpath", 0                               ; DATA XREF=main+319, usage+268, usage+588, usage+772, usage+791, usage+825
0000000000006f5c         db  0x5b ; '['                                         ; DATA XREF=usage+280
0000000000006f5d         db  0x00 ; '.'
                     aTestInvocation:
0000000000006f5e         db         "test invocation", 0                        ; DATA XREF=usage+319
                     aMulticallInvoc:
0000000000006f6e         db         "Multi-call invocation", 0                  ; DATA XREF=usage+367
                     aSha224sum:
0000000000006f84         db         "sha224sum", 0                              ; DATA XREF=usage+384
                     aSha2Utilities:
0000000000006f8e         db         "sha2 utilities", 0                         ; DATA XREF=usage+396
                     aSha256sum:
0000000000006f9d         db         "sha256sum", 0                              ; DATA XREF=usage+287
                     aSha384sum:
0000000000006fa7         db         "sha384sum", 0                              ; DATA XREF=usage+331
                     aSha512sum:
0000000000006fb1         db         "sha512sum", 0                              ; DATA XREF=usage+355
                     aNsOnlineHelpSn:
0000000000006fbb         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+474
0000000000006fd2         db  0x47 ; 'G'                                         ; DATA XREF=main+312, usage+502, usage+695, emit_bug_reporting_address+68
0000000000006fd3         db  0x4e ; 'N'
0000000000006fd4         db  0x55 ; 'U'
0000000000006fd5         db  0x20 ; ' '
                     aCoreutils:
0000000000006fd6         db         "coreutils", 0                              ; DATA XREF=main+70, main+82, usage+343
0000000000006fe0         db  0x65 ; 'e'                                         ; DATA XREF=usage+541, usage+734
0000000000006fe1         db  0x6e ; 'n'
0000000000006fe2         db  0x5f ; '_'
0000000000006fe3         db  0x00 ; '.'
                     aFullDocumentat:
0000000000006fe4         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+569, usage+758
                     aUsrlocalsharel:
0000000000006fff         db         "/usr/local/share/locale", 0                ; DATA XREF=main+63
                     aElmpqsz:
0000000000007017         db         "eLmPqsz", 0                                ; DATA XREF=main+112
                     aPadraigBrady:
000000000000701f         db         "Padraig Brady", 0                          ; DATA XREF=main+305
                     aMissingOperand:
000000000000702d         db         "missing operand", 0                        ; DATA XREF=main+1081
                     aCanonicalizeex:
000000000000703d         db         "canonicalize-existing", 0
                     aCanonicalizemi:
0000000000007053         db         "canonicalize-missing", 0
                     aRelativeto:
0000000000007068         db         "relative-to", 0
                     aRelativebase:
0000000000007074         db         "relative-base", 0
                     aQuiet:
0000000000007082         db         "quiet", 0
                     aStrip:
0000000000007088         db         "strip", 0
                     aNosymlinks:
000000000000708e         db         "no-symlinks", 0
                     aZero:
000000000000709a         db         "zero", 0
                     aLogical:
000000000000709f         db         "logical", 0
                     aPhysical:
00000000000070a7         db         "physical", 0
                     aHelp:
00000000000070b0         db         "help", 0
                     aVersion:
00000000000070b5         db         "version", 0
00000000000070bd         align      64
                     aTrySHelpForMor:
00000000000070c0         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
00000000000070e7         align      8
                     aUsageSOptionFi:
00000000000070e8         db         "Usage: %s [OPTION]... FILE...\n", 0        ; DATA XREF=usage+93
0000000000007107         align      8
                     aPrintTheResolv:
0000000000007108         db         "Print the resolved absolute file name;\nall but the last component must exist\n\n", 0 ; DATA XREF=usage+132
0000000000007157         align      8
                     aECanonicalizee:
0000000000007158         db         "  -e, --canonicalize-existing  all components of the path must exist\n  -m, --canonicalize-missing   no path components need exist or be a directory\n  -L, --logical                resolve '..' components before symlinks\n  -P, --physical               resolv" ; DATA XREF=usage+169
0000000000007258         db         "e symlinks as encountered (default)\n  -q, --quiet                  suppress most error messages\n      --relative-to=DIR        print the resolved path relative to DIR\n      --relative-base=DIR      print absolute paths unless paths below DIR\n  -s, --strip,"
0000000000007358         db         " --no-symlinks   don't expand symlinks\n  -z, --zero                   end each output line with NUL, not newline\n\n", 0
00000000000073cb         align      16
                     aHelpDisplayThi:
00000000000073d0         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+206
00000000000073fd         align      1024
                     aVersionOutputV:
0000000000007400         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+243
0000000000007436         align      8
                     aHttpswwwgnuorg:
0000000000007438         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+495, usage+595, usage+688, usage+798, emit_bug_reporting_address+61
                     aReportAnyTrans:
0000000000007460         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+839
00000000000074a7         align      8
                     aOrAvailableLoc:
00000000000074a8         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+638
00000000000074db         db  0x2f ; '/'                                         ; DATA XREF=relpath+349
00000000000074dc         db  0x2e ; '.'                                         ; DATA XREF=relpath+320
00000000000074dd         db  0x2e ; '.'                                         ; DATA XREF=relpath+247
00000000000074de         db  0x00 ; '.'
                     aGeneratingRela:
00000000000074df         db         "generating relative path", 0               ; DATA XREF=relpath+480
                     a831:
00000000000074f8         db         "8.31", 0                                   ; DATA XREF=Version
                     aWriteError:
00000000000074fd         db         "write error", 0                            ; DATA XREF=close_stdout+67
                     aSS:
0000000000007509         db         "%s: %s", 0                                 ; DATA XREF=close_stdout+108
                     aEntriesLun:
0000000000007510         db         "# entries:         %lu\n", 0               ; DATA XREF=hash_print_statistics+101
                     aBucketsLun:
0000000000007528         db         "# buckets:         %lu\n", 0               ; DATA XREF=hash_print_statistics+123
                     aMaxBucketLengt:
0000000000007540         db         "max bucket length: %lu\n", 0               ; DATA XREF=hash_print_statistics+232
                     aBucketsUsedLu2:
0000000000007558         db         "# buckets used:    %lu (%.2f%%)\n", 0      ; DATA XREF=hash_print_statistics+188
0000000000007579         db  0x00 ; '.'
000000000000757a         db  0x00 ; '.'
000000000000757b         db  0x00 ; '.'
000000000000757c         db  0x00 ; '.'
000000000000757d         db  0x00 ; '.'
000000000000757e         db  0x00 ; '.'
000000000000757f         db  0x00 ; '.'
                     default_tuning:
0000000000007580         db  0x00 ; '.'                                         ; DATA XREF=check_tuning.isra.0+3, hash_initialize+272
0000000000007581         db  0x00 ; '.'
0000000000007582         db  0x00 ; '.'
0000000000007583         db  0x00 ; '.'
0000000000007584         db  0x00 ; '.'
0000000000007585         db  0x00 ; '.'
0000000000007586         db  0x80 ; '.'
0000000000007587         db  0x3f ; '?'
0000000000007588         db  0xcd ; '.'
0000000000007589         db  0xcc ; '.'
000000000000758a         db  0x4c ; 'L'
000000000000758b         db  0x3f ; '?'
000000000000758c         db  0xf4 ; '.'
000000000000758d         db  0xfd ; '.'
000000000000758e         db  0xb4 ; '.'
000000000000758f         db  0x3f ; '?'
0000000000007590         db  0x00 ; '.'
0000000000007591         db  0x00 ; '.'
0000000000007592         db  0x00 ; '.'
0000000000007593         db  0x00 ; '.'
                     float_7594:        // float
0000000000007594         dd         0.1f                                        ; DATA XREF=check_tuning.isra.0+25, check_tuning.isra.0+74
                     float_7598:        // float
0000000000007598         dd         0.9f                                        ; DATA XREF=check_tuning.isra.0+34
                     float_759c:        // float
000000000000759c         dd         1.1f                                        ; DATA XREF=check_tuning.isra.0+52
                     float_75a0:        // float
00000000000075a0         dd         0.0f                                        ; DATA XREF=check_tuning.isra.0+65
                     float_75a4:        // float
00000000000075a4         dd         1.0f                                        ; DATA XREF=check_tuning.isra.0+92
                     float_75a8:        // float
00000000000075a8         dd         0.8f                                        ; DATA XREF=hash_initialize+290
                     float_75ac:        // float
00000000000075ac         dd         1.84467e+19f                                ; DATA XREF=hash_initialize+318, hash_rehash+64, hash_insert_if_absent+413
                     float_75b0:        // float
00000000000075b0         dd         9.22337e+18f                                ; DATA XREF=hash_initialize+327, hash_initialize+336, hash_rehash+77, hash_rehash+90, hash_insert_if_absent+422, hash_insert_if_absent+608, hash_delete+250, hash_delete+400
00000000000075b4         align      2
00000000000075be         db  0x59 ; 'Y'
00000000000075bf         db  0x40 ; '@'
                     aANullArgv0WasP:
00000000000075c0         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
00000000000075f8         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
0000000000007600         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
0000000000007601         db  0x74 ; 't'
0000000000007602         db  0x2d ; '-'
0000000000007603         db  0x00 ; '.'
0000000000007604         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
0000000000007605         db  0x80 ; '.'
0000000000007606         db  0x98 ; '.'
0000000000007607         db  0x00 ; '.'
0000000000007608         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
0000000000007609         db  0x80 ; '.'
000000000000760a         db  0x99 ; '.'
000000000000760b         db  0x00 ; '.'
000000000000760c         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
000000000000760d         db  0x07 ; '.'
000000000000760e         db  0x65 ; 'e'
000000000000760f         db  0x00 ; '.'
0000000000007610         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
0000000000007611         db  0xaf ; '.'
0000000000007612         db  0x00 ; '.'
0000000000007613         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_49e0+1451, sub_49e0+1493, sub_49e0+2429
0000000000007614         db  0x00 ; '.'
0000000000007615         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_49e0+132, sub_49e0+1338, sub_49e0+1670, sub_49e0+1697, sub_49e0+2352
0000000000007616         db  0x00 ; '.'
0000000000007617         db  0x60 ; '`'                                         ; DATA XREF=sub_49e0+1627, sub_49e0+1654
0000000000007618         db  0x00 ; '.'
                     aLiteral:
0000000000007619         db         "literal", 0
                     aShell:
0000000000007621         db         "shell", 0
                     aShellalways:
0000000000007627         db         "shell-always", 0
0000000000007634         db  0x73 ; 's'
0000000000007635         db  0x68 ; 'h'
0000000000007636         db  0x65 ; 'e'
0000000000007637         db  0x6c ; 'l'
0000000000007638         db  0x6c ; 'l'
0000000000007639         db  0x2d ; '-'
                     aEscape:
000000000000763a         db         "escape", 0
                     aShellescapealw:
0000000000007641         db         "shell-escape-always", 0
0000000000007655         db  0x63 ; 'c'
0000000000007656         db  0x00 ; '.'
                     aCmaybe:
0000000000007657         db         "c-maybe", 0
                     aClocale:
000000000000765f         db         "clocale", 0
0000000000007667         align      128
                     switch_table_7680:        // switch_table
0000000000007680         dd         quotearg_buffer_restyled.loc_50da-switch_table_7680, quotearg_buffer_restyled.loc_4333-switch_table_7680, quotearg_buffer_restyled.loc_5308-switch_table_7680, quotearg_buffer_restyled.loc_5114-switch_table_7680 ; switch table used at 0x4331 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
0000000000007690         dd         quotearg_buffer_restyled.loc_4f04-switch_table_7680, quotearg_buffer_restyled.loc_4f60-switch_table_7680, quotearg_buffer_restyled.loc_4fb5-switch_table_7680, quotearg_buffer_restyled.loc_4ffa-switch_table_7680
00000000000076a0         dd         3 dup (quotearg_buffer_restyled.loc_5034-switch_table_7680)
00000000000076ac         db  0x04 ; '.'                                         ; DATA XREF=quotearg_buffer_restyled+477
00000000000076ad         db  0xd0 ; '.'
00000000000076ae         db  0xff ; '.'
00000000000076af         db  0xff ; '.'
00000000000076b0         db  0xec ; '.'
00000000000076b1         db  0xd0 ; '.'
00000000000076b2         db  0xff ; '.'
00000000000076b3         db  0xff ; '.'
00000000000076b4         db  0xec ; '.'
00000000000076b5         db  0xd0 ; '.'
00000000000076b6         db  0xff ; '.'
00000000000076b7         db  0xff ; '.'
00000000000076b8         db  0xec ; '.'
00000000000076b9         db  0xd0 ; '.'
00000000000076ba         db  0xff ; '.'
00000000000076bb         db  0xff ; '.'
00000000000076bc         db  0xec ; '.'
00000000000076bd         db  0xd0 ; '.'
00000000000076be         db  0xff ; '.'
00000000000076bf         db  0xff ; '.'
00000000000076c0         db  0xec ; '.'
00000000000076c1         db  0xd0 ; '.'
00000000000076c2         db  0xff ; '.'
00000000000076c3         db  0xff ; '.'
00000000000076c4         db  0xec ; '.'
00000000000076c5         db  0xd0 ; '.'
00000000000076c6         db  0xff ; '.'
00000000000076c7         db  0xff ; '.'
00000000000076c8         db  0x44 ; 'D'
00000000000076c9         db  0xd0 ; '.'
00000000000076ca         db  0xff ; '.'
00000000000076cb         db  0xff ; '.'
00000000000076cc         db  0x4c ; 'L'
00000000000076cd         db  0xcf ; '.'
00000000000076ce         db  0xff ; '.'
00000000000076cf         db  0xff ; '.'
00000000000076d0         db  0x0c ; '.'
00000000000076d1         db  0xcf ; '.'
00000000000076d2         db  0xff ; '.'
00000000000076d3         db  0xff ; '.'
00000000000076d4         db  0xd4 ; '.'
00000000000076d5         db  0xd0 ; '.'
00000000000076d6         db  0xff ; '.'
00000000000076d7         db  0xff ; '.'
00000000000076d8         db  0xc4 ; '.'
00000000000076d9         db  0xd0 ; '.'
00000000000076da         db  0xff ; '.'
00000000000076db         db  0xff ; '.'
00000000000076dc         db  0xb4 ; '.'
00000000000076dd         db  0xd0 ; '.'
00000000000076de         db  0xff ; '.'
00000000000076df         db  0xff ; '.'
00000000000076e0         db  0xa4 ; '.'
00000000000076e1         db  0xd0 ; '.'
00000000000076e2         db  0xff ; '.'
00000000000076e3         db  0xff ; '.'
00000000000076e4         db  0xec ; '.'
00000000000076e5         db  0xd0 ; '.'
00000000000076e6         db  0xff ; '.'
00000000000076e7         db  0xff ; '.'
00000000000076e8         db  0xec ; '.'
00000000000076e9         db  0xd0 ; '.'
00000000000076ea         db  0xff ; '.'
00000000000076eb         db  0xff ; '.'
00000000000076ec         db  0xec ; '.'
00000000000076ed         db  0xd0 ; '.'
00000000000076ee         db  0xff ; '.'
00000000000076ef         db  0xff ; '.'
00000000000076f0         db  0xec ; '.'
00000000000076f1         db  0xd0 ; '.'
00000000000076f2         db  0xff ; '.'
00000000000076f3         db  0xff ; '.'
00000000000076f4         db  0xec ; '.'
00000000000076f5         db  0xd0 ; '.'
00000000000076f6         db  0xff ; '.'
00000000000076f7         db  0xff ; '.'
00000000000076f8         db  0xec ; '.'
00000000000076f9         db  0xd0 ; '.'
00000000000076fa         db  0xff ; '.'
00000000000076fb         db  0xff ; '.'
00000000000076fc         db  0xec ; '.'
00000000000076fd         db  0xd0 ; '.'
00000000000076fe         db  0xff ; '.'
00000000000076ff         db  0xff ; '.'
0000000000007700         db  0xec ; '.'
0000000000007701         db  0xd0 ; '.'
0000000000007702         db  0xff ; '.'
0000000000007703         db  0xff ; '.'
0000000000007704         db  0xec ; '.'
0000000000007705         db  0xd0 ; '.'
0000000000007706         db  0xff ; '.'
0000000000007707         db  0xff ; '.'
0000000000007708         db  0xec ; '.'
0000000000007709         db  0xd0 ; '.'
000000000000770a         db  0xff ; '.'
000000000000770b         db  0xff ; '.'
000000000000770c         db  0xec ; '.'
000000000000770d         db  0xd0 ; '.'
000000000000770e         db  0xff ; '.'
000000000000770f         db  0xff ; '.'
0000000000007710         db  0xec ; '.'
0000000000007711         db  0xd0 ; '.'
0000000000007712         db  0xff ; '.'
0000000000007713         db  0xff ; '.'
0000000000007714         db  0xec ; '.'
0000000000007715         db  0xd0 ; '.'
0000000000007716         db  0xff ; '.'
0000000000007717         db  0xff ; '.'
0000000000007718         db  0xec ; '.'
0000000000007719         db  0xd0 ; '.'
000000000000771a         db  0xff ; '.'
000000000000771b         db  0xff ; '.'
000000000000771c         db  0xec ; '.'
000000000000771d         db  0xd0 ; '.'
000000000000771e         db  0xff ; '.'
000000000000771f         db  0xff ; '.'
0000000000007720         db  0xec ; '.'
0000000000007721         db  0xd0 ; '.'
0000000000007722         db  0xff ; '.'
0000000000007723         db  0xff ; '.'
0000000000007724         db  0xec ; '.'
0000000000007725         db  0xd0 ; '.'
0000000000007726         db  0xff ; '.'
0000000000007727         db  0xff ; '.'
0000000000007728         db  0xec ; '.'
0000000000007729         db  0xd0 ; '.'
000000000000772a         db  0xff ; '.'
000000000000772b         db  0xff ; '.'
000000000000772c         db  0x94 ; '.'
000000000000772d         db  0xd0 ; '.'
000000000000772e         db  0xff ; '.'
000000000000772f         db  0xff ; '.'
0000000000007730         db  0x84 ; '.'
0000000000007731         db  0xd0 ; '.'
0000000000007732         db  0xff ; '.'
0000000000007733         db  0xff ; '.'
0000000000007734         db  0x84 ; '.'
0000000000007735         db  0xd0 ; '.'
0000000000007736         db  0xff ; '.'
0000000000007737         db  0xff ; '.'
0000000000007738         db  0x54 ; 'T'
0000000000007739         db  0xd0 ; '.'
000000000000773a         db  0xff ; '.'
000000000000773b         db  0xff ; '.'
000000000000773c         db  0x84 ; '.'
000000000000773d         db  0xd0 ; '.'
000000000000773e         db  0xff ; '.'
000000000000773f         db  0xff ; '.'
0000000000007740         db  0x2c ; ','
0000000000007741         db  0xd0 ; '.'
0000000000007742         db  0xff ; '.'
0000000000007743         db  0xff ; '.'
0000000000007744         db  0x84 ; '.'
0000000000007745         db  0xd0 ; '.'
0000000000007746         db  0xff ; '.'
0000000000007747         db  0xff ; '.'
0000000000007748         db  0xe7 ; '.'
0000000000007749         db  0xce ; '.'
000000000000774a         db  0xff ; '.'
000000000000774b         db  0xff ; '.'
000000000000774c         db  0x84 ; '.'
000000000000774d         db  0xd0 ; '.'
000000000000774e         db  0xff ; '.'
000000000000774f         db  0xff ; '.'
0000000000007750         db  0x84 ; '.'
0000000000007751         db  0xd0 ; '.'
0000000000007752         db  0xff ; '.'
0000000000007753         db  0xff ; '.'
0000000000007754         db  0x84 ; '.'
0000000000007755         db  0xd0 ; '.'
0000000000007756         db  0xff ; '.'
0000000000007757         db  0xff ; '.'
0000000000007758         db  0x2c ; ','
0000000000007759         db  0xd0 ; '.'
000000000000775a         db  0xff ; '.'
000000000000775b         db  0xff ; '.'
000000000000775c         db  0x2c ; ','
000000000000775d         db  0xd0 ; '.'
000000000000775e         db  0xff ; '.'
000000000000775f         db  0xff ; '.'
0000000000007760         db  0x2c ; ','
0000000000007761         db  0xd0 ; '.'
0000000000007762         db  0xff ; '.'
0000000000007763         db  0xff ; '.'
0000000000007764         db  0x2c ; ','
0000000000007765         db  0xd0 ; '.'
0000000000007766         db  0xff ; '.'
0000000000007767         db  0xff ; '.'
0000000000007768         db  0x2c ; ','
0000000000007769         db  0xd0 ; '.'
000000000000776a         db  0xff ; '.'
000000000000776b         db  0xff ; '.'
000000000000776c         db  0x2c ; ','
000000000000776d         db  0xd0 ; '.'
000000000000776e         db  0xff ; '.'
000000000000776f         db  0xff ; '.'
0000000000007770         db  0x2c ; ','
0000000000007771         db  0xd0 ; '.'
0000000000007772         db  0xff ; '.'
0000000000007773         db  0xff ; '.'
0000000000007774         db  0x2c ; ','
0000000000007775         db  0xd0 ; '.'
0000000000007776         db  0xff ; '.'
0000000000007777         db  0xff ; '.'
0000000000007778         db  0x2c ; ','
0000000000007779         db  0xd0 ; '.'
000000000000777a         db  0xff ; '.'
000000000000777b         db  0xff ; '.'
000000000000777c         db  0x2c ; ','
000000000000777d         db  0xd0 ; '.'
000000000000777e         db  0xff ; '.'
000000000000777f         db  0xff ; '.'
0000000000007780         db  0x2c ; ','
0000000000007781         db  0xd0 ; '.'
0000000000007782         db  0xff ; '.'
0000000000007783         db  0xff ; '.'
0000000000007784         db  0x2c ; ','
0000000000007785         db  0xd0 ; '.'
0000000000007786         db  0xff ; '.'
0000000000007787         db  0xff ; '.'
0000000000007788         db  0x2c ; ','
0000000000007789         db  0xd0 ; '.'
000000000000778a         db  0xff ; '.'
000000000000778b         db  0xff ; '.'
000000000000778c         db  0x2c ; ','
000000000000778d         db  0xd0 ; '.'
000000000000778e         db  0xff ; '.'
000000000000778f         db  0xff ; '.'
0000000000007790         db  0x2c ; ','
0000000000007791         db  0xd0 ; '.'
0000000000007792         db  0xff ; '.'
0000000000007793         db  0xff ; '.'
0000000000007794         db  0x2c ; ','
0000000000007795         db  0xd0 ; '.'
0000000000007796         db  0xff ; '.'
0000000000007797         db  0xff ; '.'
0000000000007798         db  0x84 ; '.'
0000000000007799         db  0xd0 ; '.'
000000000000779a         db  0xff ; '.'
000000000000779b         db  0xff ; '.'
000000000000779c         db  0x84 ; '.'
000000000000779d         db  0xd0 ; '.'
000000000000779e         db  0xff ; '.'
000000000000779f         db  0xff ; '.'
00000000000077a0         db  0x84 ; '.'
00000000000077a1         db  0xd0 ; '.'
00000000000077a2         db  0xff ; '.'
00000000000077a3         db  0xff ; '.'
00000000000077a4         db  0x84 ; '.'
00000000000077a5         db  0xd0 ; '.'
00000000000077a6         db  0xff ; '.'
00000000000077a7         db  0xff ; '.'
00000000000077a8         db  0xb7 ; '.'
00000000000077a9         db  0xce ; '.'
00000000000077aa         db  0xff ; '.'
00000000000077ab         db  0xff ; '.'
00000000000077ac         db  0xec ; '.'
00000000000077ad         db  0xd0 ; '.'
00000000000077ae         db  0xff ; '.'
00000000000077af         db  0xff ; '.'
00000000000077b0         db  0x2c ; ','
00000000000077b1         db  0xd0 ; '.'
00000000000077b2         db  0xff ; '.'
00000000000077b3         db  0xff ; '.'
00000000000077b4         db  0x2c ; ','
00000000000077b5         db  0xd0 ; '.'
00000000000077b6         db  0xff ; '.'
00000000000077b7         db  0xff ; '.'
00000000000077b8         db  0x2c ; ','
00000000000077b9         db  0xd0 ; '.'
00000000000077ba         db  0xff ; '.'
00000000000077bb         db  0xff ; '.'
00000000000077bc         db  0x2c ; ','
00000000000077bd         db  0xd0 ; '.'
00000000000077be         db  0xff ; '.'
00000000000077bf         db  0xff ; '.'
00000000000077c0         db  0x2c ; ','
00000000000077c1         db  0xd0 ; '.'
00000000000077c2         db  0xff ; '.'
00000000000077c3         db  0xff ; '.'
00000000000077c4         db  0x2c ; ','
00000000000077c5         db  0xd0 ; '.'
00000000000077c6         db  0xff ; '.'
00000000000077c7         db  0xff ; '.'
00000000000077c8         db  0x2c ; ','
00000000000077c9         db  0xd0 ; '.'
00000000000077ca         db  0xff ; '.'
00000000000077cb         db  0xff ; '.'
00000000000077cc         db  0x2c ; ','
00000000000077cd         db  0xd0 ; '.'
00000000000077ce         db  0xff ; '.'
00000000000077cf         db  0xff ; '.'
00000000000077d0         db  0x2c ; ','
00000000000077d1         db  0xd0 ; '.'
00000000000077d2         db  0xff ; '.'
00000000000077d3         db  0xff ; '.'
00000000000077d4         db  0x2c ; ','
00000000000077d5         db  0xd0 ; '.'
00000000000077d6         db  0xff ; '.'
00000000000077d7         db  0xff ; '.'
00000000000077d8         db  0x2c ; ','
00000000000077d9         db  0xd0 ; '.'
00000000000077da         db  0xff ; '.'
00000000000077db         db  0xff ; '.'
00000000000077dc         db  0x2c ; ','
00000000000077dd         db  0xd0 ; '.'
00000000000077de         db  0xff ; '.'
00000000000077df         db  0xff ; '.'
00000000000077e0         db  0x2c ; ','
00000000000077e1         db  0xd0 ; '.'
00000000000077e2         db  0xff ; '.'
00000000000077e3         db  0xff ; '.'
00000000000077e4         db  0x2c ; ','
00000000000077e5         db  0xd0 ; '.'
00000000000077e6         db  0xff ; '.'
00000000000077e7         db  0xff ; '.'
00000000000077e8         db  0x2c ; ','
00000000000077e9         db  0xd0 ; '.'
00000000000077ea         db  0xff ; '.'
00000000000077eb         db  0xff ; '.'
00000000000077ec         db  0x2c ; ','
00000000000077ed         db  0xd0 ; '.'
00000000000077ee         db  0xff ; '.'
00000000000077ef         db  0xff ; '.'
00000000000077f0         db  0x2c ; ','
00000000000077f1         db  0xd0 ; '.'
00000000000077f2         db  0xff ; '.'
00000000000077f3         db  0xff ; '.'
00000000000077f4         db  0x2c ; ','
00000000000077f5         db  0xd0 ; '.'
00000000000077f6         db  0xff ; '.'
00000000000077f7         db  0xff ; '.'
00000000000077f8         db  0x2c ; ','
00000000000077f9         db  0xd0 ; '.'
00000000000077fa         db  0xff ; '.'
00000000000077fb         db  0xff ; '.'
00000000000077fc         db  0x2c ; ','
00000000000077fd         db  0xd0 ; '.'
00000000000077fe         db  0xff ; '.'
00000000000077ff         db  0xff ; '.'
0000000000007800         db  0x2c ; ','
0000000000007801         db  0xd0 ; '.'
0000000000007802         db  0xff ; '.'
0000000000007803         db  0xff ; '.'
0000000000007804         db  0x2c ; ','
0000000000007805         db  0xd0 ; '.'
0000000000007806         db  0xff ; '.'
0000000000007807         db  0xff ; '.'
0000000000007808         db  0x2c ; ','
0000000000007809         db  0xd0 ; '.'
000000000000780a         db  0xff ; '.'
000000000000780b         db  0xff ; '.'
000000000000780c         db  0x2c ; ','
000000000000780d         db  0xd0 ; '.'
000000000000780e         db  0xff ; '.'
000000000000780f         db  0xff ; '.'
0000000000007810         db  0x2c ; ','
0000000000007811         db  0xd0 ; '.'
0000000000007812         db  0xff ; '.'
0000000000007813         db  0xff ; '.'
0000000000007814         db  0x2c ; ','
0000000000007815         db  0xd0 ; '.'
0000000000007816         db  0xff ; '.'
0000000000007817         db  0xff ; '.'
0000000000007818         db  0x84 ; '.'
0000000000007819         db  0xd0 ; '.'
000000000000781a         db  0xff ; '.'
000000000000781b         db  0xff ; '.'
000000000000781c         db  0x5c ; '\'
000000000000781d         db  0xcf ; '.'
000000000000781e         db  0xff ; '.'
000000000000781f         db  0xff ; '.'
0000000000007820         db  0x2c ; ','
0000000000007821         db  0xd0 ; '.'
0000000000007822         db  0xff ; '.'
0000000000007823         db  0xff ; '.'
0000000000007824         db  0x84 ; '.'
0000000000007825         db  0xd0 ; '.'
0000000000007826         db  0xff ; '.'
0000000000007827         db  0xff ; '.'
0000000000007828         db  0x2c ; ','
0000000000007829         db  0xd0 ; '.'
000000000000782a         db  0xff ; '.'
000000000000782b         db  0xff ; '.'
000000000000782c         db  0x84 ; '.'
000000000000782d         db  0xd0 ; '.'
000000000000782e         db  0xff ; '.'
000000000000782f         db  0xff ; '.'
0000000000007830         db  0x2c ; ','
0000000000007831         db  0xd0 ; '.'
0000000000007832         db  0xff ; '.'
0000000000007833         db  0xff ; '.'
0000000000007834         db  0x2c ; ','
0000000000007835         db  0xd0 ; '.'
0000000000007836         db  0xff ; '.'
0000000000007837         db  0xff ; '.'
0000000000007838         db  0x2c ; ','
0000000000007839         db  0xd0 ; '.'
000000000000783a         db  0xff ; '.'
000000000000783b         db  0xff ; '.'
000000000000783c         db  0x2c ; ','
000000000000783d         db  0xd0 ; '.'
000000000000783e         db  0xff ; '.'
000000000000783f         db  0xff ; '.'
0000000000007840         db  0x2c ; ','
0000000000007841         db  0xd0 ; '.'
0000000000007842         db  0xff ; '.'
0000000000007843         db  0xff ; '.'
0000000000007844         db  0x2c ; ','
0000000000007845         db  0xd0 ; '.'
0000000000007846         db  0xff ; '.'
0000000000007847         db  0xff ; '.'
0000000000007848         db  0x2c ; ','
0000000000007849         db  0xd0 ; '.'
000000000000784a         db  0xff ; '.'
000000000000784b         db  0xff ; '.'
000000000000784c         db  0x2c ; ','
000000000000784d         db  0xd0 ; '.'
000000000000784e         db  0xff ; '.'
000000000000784f         db  0xff ; '.'
0000000000007850         db  0x2c ; ','
0000000000007851         db  0xd0 ; '.'
0000000000007852         db  0xff ; '.'
0000000000007853         db  0xff ; '.'
0000000000007854         db  0x2c ; ','
0000000000007855         db  0xd0 ; '.'
0000000000007856         db  0xff ; '.'
0000000000007857         db  0xff ; '.'
0000000000007858         db  0x2c ; ','
0000000000007859         db  0xd0 ; '.'
000000000000785a         db  0xff ; '.'
000000000000785b         db  0xff ; '.'
000000000000785c         db  0x2c ; ','
000000000000785d         db  0xd0 ; '.'
000000000000785e         db  0xff ; '.'
000000000000785f         db  0xff ; '.'
0000000000007860         db  0x2c ; ','
0000000000007861         db  0xd0 ; '.'
0000000000007862         db  0xff ; '.'
0000000000007863         db  0xff ; '.'
0000000000007864         db  0x2c ; ','
0000000000007865         db  0xd0 ; '.'
0000000000007866         db  0xff ; '.'
0000000000007867         db  0xff ; '.'
0000000000007868         db  0x2c ; ','
0000000000007869         db  0xd0 ; '.'
000000000000786a         db  0xff ; '.'
000000000000786b         db  0xff ; '.'
000000000000786c         db  0x2c ; ','
000000000000786d         db  0xd0 ; '.'
000000000000786e         db  0xff ; '.'
000000000000786f         db  0xff ; '.'
0000000000007870         db  0x2c ; ','
0000000000007871         db  0xd0 ; '.'
0000000000007872         db  0xff ; '.'
0000000000007873         db  0xff ; '.'
0000000000007874         db  0x2c ; ','
0000000000007875         db  0xd0 ; '.'
0000000000007876         db  0xff ; '.'
0000000000007877         db  0xff ; '.'
0000000000007878         db  0x2c ; ','
0000000000007879         db  0xd0 ; '.'
000000000000787a         db  0xff ; '.'
000000000000787b         db  0xff ; '.'
000000000000787c         db  0x2c ; ','
000000000000787d         db  0xd0 ; '.'
000000000000787e         db  0xff ; '.'
000000000000787f         db  0xff ; '.'
0000000000007880         db  0x2c ; ','
0000000000007881         db  0xd0 ; '.'
0000000000007882         db  0xff ; '.'
0000000000007883         db  0xff ; '.'
0000000000007884         db  0x2c ; ','
0000000000007885         db  0xd0 ; '.'
0000000000007886         db  0xff ; '.'
0000000000007887         db  0xff ; '.'
0000000000007888         db  0x2c ; ','
0000000000007889         db  0xd0 ; '.'
000000000000788a         db  0xff ; '.'
000000000000788b         db  0xff ; '.'
000000000000788c         db  0x2c ; ','
000000000000788d         db  0xd0 ; '.'
000000000000788e         db  0xff ; '.'
000000000000788f         db  0xff ; '.'
0000000000007890         db  0x2c ; ','
0000000000007891         db  0xd0 ; '.'
0000000000007892         db  0xff ; '.'
0000000000007893         db  0xff ; '.'
0000000000007894         db  0x2c ; ','
0000000000007895         db  0xd0 ; '.'
0000000000007896         db  0xff ; '.'
0000000000007897         db  0xff ; '.'
0000000000007898         db  0xe7 ; '.'
0000000000007899         db  0xcd ; '.'
000000000000789a         db  0xff ; '.'
000000000000789b         db  0xff ; '.'
000000000000789c         db  0x84 ; '.'
000000000000789d         db  0xd0 ; '.'
000000000000789e         db  0xff ; '.'
000000000000789f         db  0xff ; '.'
00000000000078a0         db  0xe7 ; '.'
00000000000078a1         db  0xcd ; '.'
00000000000078a2         db  0xff ; '.'
00000000000078a3         db  0xff ; '.'
00000000000078a4         db  0x54 ; 'T'
00000000000078a5         db  0xd0 ; '.'
00000000000078a6         db  0xff ; '.'
00000000000078a7         db  0xff ; '.'
00000000000078a8         db  0xd8 ; '.'                                         ; DATA XREF=sub_4780+137
00000000000078a9         db  0xcf ; '.'
00000000000078aa         db  0xff ; '.'
00000000000078ab         db  0xff ; '.'
00000000000078ac         db  0xe8 ; '.'
00000000000078ad         db  0xce ; '.'
00000000000078ae         db  0xff ; '.'
00000000000078af         db  0xff ; '.'
00000000000078b0         db  0xe8 ; '.'
00000000000078b1         db  0xce ; '.'
00000000000078b2         db  0xff ; '.'
00000000000078b3         db  0xff ; '.'
00000000000078b4         db  0xe8 ; '.'
00000000000078b5         db  0xce ; '.'
00000000000078b6         db  0xff ; '.'
00000000000078b7         db  0xff ; '.'
00000000000078b8         db  0xe8 ; '.'
00000000000078b9         db  0xce ; '.'
00000000000078ba         db  0xff ; '.'
00000000000078bb         db  0xff ; '.'
00000000000078bc         db  0xe8 ; '.'
00000000000078bd         db  0xce ; '.'
00000000000078be         db  0xff ; '.'
00000000000078bf         db  0xff ; '.'
00000000000078c0         db  0xe8 ; '.'
00000000000078c1         db  0xce ; '.'
00000000000078c2         db  0xff ; '.'
00000000000078c3         db  0xff ; '.'
00000000000078c4         db  0xc8 ; '.'
00000000000078c5         db  0xcf ; '.'
00000000000078c6         db  0xff ; '.'
00000000000078c7         db  0xff ; '.'
00000000000078c8         db  0x18 ; '.'
00000000000078c9         db  0xd1 ; '.'
00000000000078ca         db  0xff ; '.'
00000000000078cb         db  0xff ; '.'
00000000000078cc         db  0x00 ; '.'
00000000000078cd         db  0xd1 ; '.'
00000000000078ce         db  0xff ; '.'
00000000000078cf         db  0xff ; '.'
00000000000078d0         db  0xb0 ; '.'
00000000000078d1         db  0xcf ; '.'
00000000000078d2         db  0xff ; '.'
00000000000078d3         db  0xff ; '.'
00000000000078d4         db  0xf0 ; '.'
00000000000078d5         db  0xd0 ; '.'
00000000000078d6         db  0xff ; '.'
00000000000078d7         db  0xff ; '.'
00000000000078d8         db  0x98 ; '.'
00000000000078d9         db  0xcf ; '.'
00000000000078da         db  0xff ; '.'
00000000000078db         db  0xff ; '.'
00000000000078dc         db  0xd8 ; '.'
00000000000078dd         db  0xd0 ; '.'
00000000000078de         db  0xff ; '.'
00000000000078df         db  0xff ; '.'
00000000000078e0         db  0xe8 ; '.'
00000000000078e1         db  0xce ; '.'
00000000000078e2         db  0xff ; '.'
00000000000078e3         db  0xff ; '.'
00000000000078e4         db  0xe8 ; '.'
00000000000078e5         db  0xce ; '.'
00000000000078e6         db  0xff ; '.'
00000000000078e7         db  0xff ; '.'
00000000000078e8         db  0xe8 ; '.'
00000000000078e9         db  0xce ; '.'
00000000000078ea         db  0xff ; '.'
00000000000078eb         db  0xff ; '.'
00000000000078ec         db  0xe8 ; '.'
00000000000078ed         db  0xce ; '.'
00000000000078ee         db  0xff ; '.'
00000000000078ef         db  0xff ; '.'
00000000000078f0         db  0xe8 ; '.'
00000000000078f1         db  0xce ; '.'
00000000000078f2         db  0xff ; '.'
00000000000078f3         db  0xff ; '.'
00000000000078f4         db  0xe8 ; '.'
00000000000078f5         db  0xce ; '.'
00000000000078f6         db  0xff ; '.'
00000000000078f7         db  0xff ; '.'
00000000000078f8         db  0xe8 ; '.'
00000000000078f9         db  0xce ; '.'
00000000000078fa         db  0xff ; '.'
00000000000078fb         db  0xff ; '.'
00000000000078fc         db  0xe8 ; '.'
00000000000078fd         db  0xce ; '.'
00000000000078fe         db  0xff ; '.'
00000000000078ff         db  0xff ; '.'
0000000000007900         db  0xe8 ; '.'
0000000000007901         db  0xce ; '.'
0000000000007902         db  0xff ; '.'
0000000000007903         db  0xff ; '.'
0000000000007904         db  0xe8 ; '.'
0000000000007905         db  0xce ; '.'
0000000000007906         db  0xff ; '.'
0000000000007907         db  0xff ; '.'
0000000000007908         db  0xe8 ; '.'
0000000000007909         db  0xce ; '.'
000000000000790a         db  0xff ; '.'
000000000000790b         db  0xff ; '.'
000000000000790c         db  0xe8 ; '.'
000000000000790d         db  0xce ; '.'
000000000000790e         db  0xff ; '.'
000000000000790f         db  0xff ; '.'
0000000000007910         db  0xe8 ; '.'
0000000000007911         db  0xce ; '.'
0000000000007912         db  0xff ; '.'
0000000000007913         db  0xff ; '.'
0000000000007914         db  0xe8 ; '.'
0000000000007915         db  0xce ; '.'
0000000000007916         db  0xff ; '.'
0000000000007917         db  0xff ; '.'
0000000000007918         db  0xe8 ; '.'
0000000000007919         db  0xce ; '.'
000000000000791a         db  0xff ; '.'
000000000000791b         db  0xff ; '.'
000000000000791c         db  0xe8 ; '.'
000000000000791d         db  0xce ; '.'
000000000000791e         db  0xff ; '.'
000000000000791f         db  0xff ; '.'
0000000000007920         db  0xe8 ; '.'
0000000000007921         db  0xce ; '.'
0000000000007922         db  0xff ; '.'
0000000000007923         db  0xff ; '.'
0000000000007924         db  0xe8 ; '.'
0000000000007925         db  0xce ; '.'
0000000000007926         db  0xff ; '.'
0000000000007927         db  0xff ; '.'
0000000000007928         db  0xc0 ; '.'
0000000000007929         db  0xd0 ; '.'
000000000000792a         db  0xff ; '.'
000000000000792b         db  0xff ; '.'
000000000000792c         db  0xa8 ; '.'
000000000000792d         db  0xd0 ; '.'
000000000000792e         db  0xff ; '.'
000000000000792f         db  0xff ; '.'
0000000000007930         db  0xa8 ; '.'
0000000000007931         db  0xd0 ; '.'
0000000000007932         db  0xff ; '.'
0000000000007933         db  0xff ; '.'
0000000000007934         db  0x90 ; '.'
0000000000007935         db  0xd0 ; '.'
0000000000007936         db  0xff ; '.'
0000000000007937         db  0xff ; '.'
0000000000007938         db  0xa8 ; '.'
0000000000007939         db  0xd0 ; '.'
000000000000793a         db  0xff ; '.'
000000000000793b         db  0xff ; '.'
000000000000793c         db  0x78 ; 'x'
000000000000793d         db  0xd0 ; '.'
000000000000793e         db  0xff ; '.'
000000000000793f         db  0xff ; '.'
0000000000007940         db  0xa8 ; '.'
0000000000007941         db  0xd0 ; '.'
0000000000007942         db  0xff ; '.'
0000000000007943         db  0xff ; '.'
0000000000007944         db  0xe8 ; '.'
0000000000007945         db  0xcc ; '.'
0000000000007946         db  0xff ; '.'
0000000000007947         db  0xff ; '.'
0000000000007948         db  0xa8 ; '.'
0000000000007949         db  0xd0 ; '.'
000000000000794a         db  0xff ; '.'
000000000000794b         db  0xff ; '.'
000000000000794c         db  0xa8 ; '.'
000000000000794d         db  0xd0 ; '.'
000000000000794e         db  0xff ; '.'
000000000000794f         db  0xff ; '.'
0000000000007950         db  0xa8 ; '.'
0000000000007951         db  0xd0 ; '.'
0000000000007952         db  0xff ; '.'
0000000000007953         db  0xff ; '.'
0000000000007954         db  0x78 ; 'x'
0000000000007955         db  0xd0 ; '.'
0000000000007956         db  0xff ; '.'
0000000000007957         db  0xff ; '.'
0000000000007958         db  0x78 ; 'x'
0000000000007959         db  0xd0 ; '.'
000000000000795a         db  0xff ; '.'
000000000000795b         db  0xff ; '.'
000000000000795c         db  0x78 ; 'x'
000000000000795d         db  0xd0 ; '.'
000000000000795e         db  0xff ; '.'
000000000000795f         db  0xff ; '.'
0000000000007960         db  0x78 ; 'x'
0000000000007961         db  0xd0 ; '.'
0000000000007962         db  0xff ; '.'
0000000000007963         db  0xff ; '.'
0000000000007964         db  0x78 ; 'x'
0000000000007965         db  0xd0 ; '.'
0000000000007966         db  0xff ; '.'
0000000000007967         db  0xff ; '.'
0000000000007968         db  0x78 ; 'x'
0000000000007969         db  0xd0 ; '.'
000000000000796a         db  0xff ; '.'
000000000000796b         db  0xff ; '.'
000000000000796c         db  0x78 ; 'x'
000000000000796d         db  0xd0 ; '.'
000000000000796e         db  0xff ; '.'
000000000000796f         db  0xff ; '.'
0000000000007970         db  0x78 ; 'x'
0000000000007971         db  0xd0 ; '.'
0000000000007972         db  0xff ; '.'
0000000000007973         db  0xff ; '.'
0000000000007974         db  0x78 ; 'x'
0000000000007975         db  0xd0 ; '.'
0000000000007976         db  0xff ; '.'
0000000000007977         db  0xff ; '.'
0000000000007978         db  0x78 ; 'x'
0000000000007979         db  0xd0 ; '.'
000000000000797a         db  0xff ; '.'
000000000000797b         db  0xff ; '.'
000000000000797c         db  0x78 ; 'x'
000000000000797d         db  0xd0 ; '.'
000000000000797e         db  0xff ; '.'
000000000000797f         db  0xff ; '.'
0000000000007980         db  0x78 ; 'x'
0000000000007981         db  0xd0 ; '.'
0000000000007982         db  0xff ; '.'
0000000000007983         db  0xff ; '.'
0000000000007984         db  0x78 ; 'x'
0000000000007985         db  0xd0 ; '.'
0000000000007986         db  0xff ; '.'
0000000000007987         db  0xff ; '.'
0000000000007988         db  0x78 ; 'x'
0000000000007989         db  0xd0 ; '.'
000000000000798a         db  0xff ; '.'
000000000000798b         db  0xff ; '.'
000000000000798c         db  0x78 ; 'x'
000000000000798d         db  0xd0 ; '.'
000000000000798e         db  0xff ; '.'
000000000000798f         db  0xff ; '.'
0000000000007990         db  0x78 ; 'x'
0000000000007991         db  0xd0 ; '.'
0000000000007992         db  0xff ; '.'
0000000000007993         db  0xff ; '.'
0000000000007994         db  0xa8 ; '.'
0000000000007995         db  0xd0 ; '.'
0000000000007996         db  0xff ; '.'
0000000000007997         db  0xff ; '.'
0000000000007998         db  0xa8 ; '.'
0000000000007999         db  0xd0 ; '.'
000000000000799a         db  0xff ; '.'
000000000000799b         db  0xff ; '.'
000000000000799c         db  0xa8 ; '.'
000000000000799d         db  0xd0 ; '.'
000000000000799e         db  0xff ; '.'
000000000000799f         db  0xff ; '.'
00000000000079a0         db  0xa8 ; '.'
00000000000079a1         db  0xd0 ; '.'
00000000000079a2         db  0xff ; '.'
00000000000079a3         db  0xff ; '.'
00000000000079a4         db  0xb8 ; '.'
00000000000079a5         db  0xcc ; '.'
00000000000079a6         db  0xff ; '.'
00000000000079a7         db  0xff ; '.'
00000000000079a8         db  0xe8 ; '.'
00000000000079a9         db  0xce ; '.'
00000000000079aa         db  0xff ; '.'
00000000000079ab         db  0xff ; '.'
00000000000079ac         db  0x78 ; 'x'
00000000000079ad         db  0xd0 ; '.'
00000000000079ae         db  0xff ; '.'
00000000000079af         db  0xff ; '.'
00000000000079b0         db  0x78 ; 'x'
00000000000079b1         db  0xd0 ; '.'
00000000000079b2         db  0xff ; '.'
00000000000079b3         db  0xff ; '.'
00000000000079b4         db  0x78 ; 'x'
00000000000079b5         db  0xd0 ; '.'
00000000000079b6         db  0xff ; '.'
00000000000079b7         db  0xff ; '.'
00000000000079b8         db  0x78 ; 'x'
00000000000079b9         db  0xd0 ; '.'
00000000000079ba         db  0xff ; '.'
00000000000079bb         db  0xff ; '.'
00000000000079bc         db  0x78 ; 'x'
00000000000079bd         db  0xd0 ; '.'
00000000000079be         db  0xff ; '.'
00000000000079bf         db  0xff ; '.'
00000000000079c0         db  0x78 ; 'x'
00000000000079c1         db  0xd0 ; '.'
00000000000079c2         db  0xff ; '.'
00000000000079c3         db  0xff ; '.'
00000000000079c4         db  0x78 ; 'x'
00000000000079c5         db  0xd0 ; '.'
00000000000079c6         db  0xff ; '.'
00000000000079c7         db  0xff ; '.'
00000000000079c8         db  0x78 ; 'x'
00000000000079c9         db  0xd0 ; '.'
00000000000079ca         db  0xff ; '.'
00000000000079cb         db  0xff ; '.'
00000000000079cc         db  0x78 ; 'x'
00000000000079cd         db  0xd0 ; '.'
00000000000079ce         db  0xff ; '.'
00000000000079cf         db  0xff ; '.'
00000000000079d0         db  0x78 ; 'x'
00000000000079d1         db  0xd0 ; '.'
00000000000079d2         db  0xff ; '.'
00000000000079d3         db  0xff ; '.'
00000000000079d4         db  0x78 ; 'x'
00000000000079d5         db  0xd0 ; '.'
00000000000079d6         db  0xff ; '.'
00000000000079d7         db  0xff ; '.'
00000000000079d8         db  0x78 ; 'x'
00000000000079d9         db  0xd0 ; '.'
00000000000079da         db  0xff ; '.'
00000000000079db         db  0xff ; '.'
00000000000079dc         db  0x78 ; 'x'
00000000000079dd         db  0xd0 ; '.'
00000000000079de         db  0xff ; '.'
00000000000079df         db  0xff ; '.'
00000000000079e0         db  0x78 ; 'x'
00000000000079e1         db  0xd0 ; '.'
00000000000079e2         db  0xff ; '.'
00000000000079e3         db  0xff ; '.'
00000000000079e4         db  0x78 ; 'x'
00000000000079e5         db  0xd0 ; '.'
00000000000079e6         db  0xff ; '.'
00000000000079e7         db  0xff ; '.'
00000000000079e8         db  0x78 ; 'x'
00000000000079e9         db  0xd0 ; '.'
00000000000079ea         db  0xff ; '.'
00000000000079eb         db  0xff ; '.'
00000000000079ec         db  0x78 ; 'x'
00000000000079ed         db  0xd0 ; '.'
00000000000079ee         db  0xff ; '.'
00000000000079ef         db  0xff ; '.'
00000000000079f0         db  0x78 ; 'x'
00000000000079f1         db  0xd0 ; '.'
00000000000079f2         db  0xff ; '.'
00000000000079f3         db  0xff ; '.'
00000000000079f4         db  0x78 ; 'x'
00000000000079f5         db  0xd0 ; '.'
00000000000079f6         db  0xff ; '.'
00000000000079f7         db  0xff ; '.'
00000000000079f8         db  0x78 ; 'x'
00000000000079f9         db  0xd0 ; '.'
00000000000079fa         db  0xff ; '.'
00000000000079fb         db  0xff ; '.'
00000000000079fc         db  0x78 ; 'x'
00000000000079fd         db  0xd0 ; '.'
00000000000079fe         db  0xff ; '.'
00000000000079ff         db  0xff ; '.'
0000000000007a00         db  0x78 ; 'x'
0000000000007a01         db  0xd0 ; '.'
0000000000007a02         db  0xff ; '.'
0000000000007a03         db  0xff ; '.'
0000000000007a04         db  0x78 ; 'x'
0000000000007a05         db  0xd0 ; '.'
0000000000007a06         db  0xff ; '.'
0000000000007a07         db  0xff ; '.'
0000000000007a08         db  0x78 ; 'x'
0000000000007a09         db  0xd0 ; '.'
0000000000007a0a         db  0xff ; '.'
0000000000007a0b         db  0xff ; '.'
0000000000007a0c         db  0x78 ; 'x'
0000000000007a0d         db  0xd0 ; '.'
0000000000007a0e         db  0xff ; '.'
0000000000007a0f         db  0xff ; '.'
0000000000007a10         db  0x78 ; 'x'
0000000000007a11         db  0xd0 ; '.'
0000000000007a12         db  0xff ; '.'
0000000000007a13         db  0xff ; '.'
0000000000007a14         db  0xa8 ; '.'
0000000000007a15         db  0xd0 ; '.'
0000000000007a16         db  0xff ; '.'
0000000000007a17         db  0xff ; '.'
0000000000007a18         db  0x78 ; 'x'
0000000000007a19         db  0xcf ; '.'
0000000000007a1a         db  0xff ; '.'
0000000000007a1b         db  0xff ; '.'
0000000000007a1c         db  0x78 ; 'x'
0000000000007a1d         db  0xd0 ; '.'
0000000000007a1e         db  0xff ; '.'
0000000000007a1f         db  0xff ; '.'
0000000000007a20         db  0xa8 ; '.'
0000000000007a21         db  0xd0 ; '.'
0000000000007a22         db  0xff ; '.'
0000000000007a23         db  0xff ; '.'
0000000000007a24         db  0x78 ; 'x'
0000000000007a25         db  0xd0 ; '.'
0000000000007a26         db  0xff ; '.'
0000000000007a27         db  0xff ; '.'
0000000000007a28         db  0xa8 ; '.'
0000000000007a29         db  0xd0 ; '.'
0000000000007a2a         db  0xff ; '.'
0000000000007a2b         db  0xff ; '.'
0000000000007a2c         db  0x78 ; 'x'
0000000000007a2d         db  0xd0 ; '.'
0000000000007a2e         db  0xff ; '.'
0000000000007a2f         db  0xff ; '.'
0000000000007a30         db  0x78 ; 'x'
0000000000007a31         db  0xd0 ; '.'
0000000000007a32         db  0xff ; '.'
0000000000007a33         db  0xff ; '.'
0000000000007a34         db  0x78 ; 'x'
0000000000007a35         db  0xd0 ; '.'
0000000000007a36         db  0xff ; '.'
0000000000007a37         db  0xff ; '.'
0000000000007a38         db  0x78 ; 'x'
0000000000007a39         db  0xd0 ; '.'
0000000000007a3a         db  0xff ; '.'
0000000000007a3b         db  0xff ; '.'
0000000000007a3c         db  0x78 ; 'x'
0000000000007a3d         db  0xd0 ; '.'
0000000000007a3e         db  0xff ; '.'
0000000000007a3f         db  0xff ; '.'
0000000000007a40         db  0x78 ; 'x'
0000000000007a41         db  0xd0 ; '.'
0000000000007a42         db  0xff ; '.'
0000000000007a43         db  0xff ; '.'
0000000000007a44         db  0x78 ; 'x'
0000000000007a45         db  0xd0 ; '.'
0000000000007a46         db  0xff ; '.'
0000000000007a47         db  0xff ; '.'
0000000000007a48         db  0x78 ; 'x'
0000000000007a49         db  0xd0 ; '.'
0000000000007a4a         db  0xff ; '.'
0000000000007a4b         db  0xff ; '.'
0000000000007a4c         db  0x78 ; 'x'
0000000000007a4d         db  0xd0 ; '.'
0000000000007a4e         db  0xff ; '.'
0000000000007a4f         db  0xff ; '.'
0000000000007a50         db  0x78 ; 'x'
0000000000007a51         db  0xd0 ; '.'
0000000000007a52         db  0xff ; '.'
0000000000007a53         db  0xff ; '.'
0000000000007a54         db  0x78 ; 'x'
0000000000007a55         db  0xd0 ; '.'
0000000000007a56         db  0xff ; '.'
0000000000007a57         db  0xff ; '.'
0000000000007a58         db  0x78 ; 'x'
0000000000007a59         db  0xd0 ; '.'
0000000000007a5a         db  0xff ; '.'
0000000000007a5b         db  0xff ; '.'
0000000000007a5c         db  0x78 ; 'x'
0000000000007a5d         db  0xd0 ; '.'
0000000000007a5e         db  0xff ; '.'
0000000000007a5f         db  0xff ; '.'
0000000000007a60         db  0x78 ; 'x'
0000000000007a61         db  0xd0 ; '.'
0000000000007a62         db  0xff ; '.'
0000000000007a63         db  0xff ; '.'
0000000000007a64         db  0x78 ; 'x'
0000000000007a65         db  0xd0 ; '.'
0000000000007a66         db  0xff ; '.'
0000000000007a67         db  0xff ; '.'
0000000000007a68         db  0x78 ; 'x'
0000000000007a69         db  0xd0 ; '.'
0000000000007a6a         db  0xff ; '.'
0000000000007a6b         db  0xff ; '.'
0000000000007a6c         db  0x78 ; 'x'
0000000000007a6d         db  0xd0 ; '.'
0000000000007a6e         db  0xff ; '.'
0000000000007a6f         db  0xff ; '.'
0000000000007a70         db  0x78 ; 'x'
0000000000007a71         db  0xd0 ; '.'
0000000000007a72         db  0xff ; '.'
0000000000007a73         db  0xff ; '.'
0000000000007a74         db  0x78 ; 'x'
0000000000007a75         db  0xd0 ; '.'
0000000000007a76         db  0xff ; '.'
0000000000007a77         db  0xff ; '.'
0000000000007a78         db  0x78 ; 'x'
0000000000007a79         db  0xd0 ; '.'
0000000000007a7a         db  0xff ; '.'
0000000000007a7b         db  0xff ; '.'
0000000000007a7c         db  0x78 ; 'x'
0000000000007a7d         db  0xd0 ; '.'
0000000000007a7e         db  0xff ; '.'
0000000000007a7f         db  0xff ; '.'
0000000000007a80         db  0x78 ; 'x'
0000000000007a81         db  0xd0 ; '.'
0000000000007a82         db  0xff ; '.'
0000000000007a83         db  0xff ; '.'
0000000000007a84         db  0x78 ; 'x'
0000000000007a85         db  0xd0 ; '.'
0000000000007a86         db  0xff ; '.'
0000000000007a87         db  0xff ; '.'
0000000000007a88         db  0x78 ; 'x'
0000000000007a89         db  0xd0 ; '.'
0000000000007a8a         db  0xff ; '.'
0000000000007a8b         db  0xff ; '.'
0000000000007a8c         db  0x78 ; 'x'
0000000000007a8d         db  0xd0 ; '.'
0000000000007a8e         db  0xff ; '.'
0000000000007a8f         db  0xff ; '.'
0000000000007a90         db  0x78 ; 'x'
0000000000007a91         db  0xd0 ; '.'
0000000000007a92         db  0xff ; '.'
0000000000007a93         db  0xff ; '.'
0000000000007a94         db  0xe8 ; '.'
0000000000007a95         db  0xcb ; '.'
0000000000007a96         db  0xff ; '.'
0000000000007a97         db  0xff ; '.'
0000000000007a98         db  0xa8 ; '.'
0000000000007a99         db  0xd0 ; '.'
0000000000007a9a         db  0xff ; '.'
0000000000007a9b         db  0xff ; '.'
0000000000007a9c         db  0xe8 ; '.'
0000000000007a9d         db  0xcb ; '.'
0000000000007a9e         db  0xff ; '.'
0000000000007a9f         db  0xff ; '.'
0000000000007aa0         db  0x90 ; '.'
0000000000007aa1         db  0xd0 ; '.'
0000000000007aa2         db  0xff ; '.'
0000000000007aa3         db  0xff ; '.'
0000000000007aa4         db  0x00 ; '.'
0000000000007aa5         db  0x00 ; '.'
0000000000007aa6         db  0x00 ; '.'
0000000000007aa7         db  0x00 ; '.'
0000000000007aa8         db  0x00 ; '.'
0000000000007aa9         db  0x00 ; '.'
0000000000007aaa         db  0x00 ; '.'
0000000000007aab         db  0x00 ; '.'
0000000000007aac         db  0x00 ; '.'
0000000000007aad         db  0x00 ; '.'
0000000000007aae         db  0x00 ; '.'
0000000000007aaf         db  0x00 ; '.'
0000000000007ab0         db  0x00 ; '.'
0000000000007ab1         db  0x00 ; '.'
0000000000007ab2         db  0x00 ; '.'
0000000000007ab3         db  0x00 ; '.'
0000000000007ab4         db  0x00 ; '.'
0000000000007ab5         db  0x00 ; '.'
0000000000007ab6         db  0x00 ; '.'
0000000000007ab7         db  0x00 ; '.'
0000000000007ab8         db  0x00 ; '.'
0000000000007ab9         db  0x00 ; '.'
0000000000007aba         db  0x00 ; '.'
0000000000007abb         db  0x00 ; '.'
0000000000007abc         db  0x00 ; '.'
0000000000007abd         db  0x00 ; '.'
0000000000007abe         db  0x00 ; '.'
0000000000007abf         db  0x00 ; '.'
                     quoting_style_vals:
0000000000007ac0         db  0x00 ; '.'
0000000000007ac1         db  0x00 ; '.'
0000000000007ac2         db  0x00 ; '.'
0000000000007ac3         db  0x00 ; '.'
0000000000007ac4         db  0x01 ; '.'
0000000000007ac5         db  0x00 ; '.'
0000000000007ac6         db  0x00 ; '.'
0000000000007ac7         db  0x00 ; '.'
0000000000007ac8         db  0x02 ; '.'
0000000000007ac9         db  0x00 ; '.'
0000000000007aca         db  0x00 ; '.'
0000000000007acb         db  0x00 ; '.'
0000000000007acc         db  0x03 ; '.'
0000000000007acd         db  0x00 ; '.'
0000000000007ace         db  0x00 ; '.'
0000000000007acf         db  0x00 ; '.'
0000000000007ad0         db  0x04 ; '.'
0000000000007ad1         db  0x00 ; '.'
0000000000007ad2         db  0x00 ; '.'
0000000000007ad3         db  0x00 ; '.'
0000000000007ad4         db  0x05 ; '.'
0000000000007ad5         db  0x00 ; '.'
0000000000007ad6         db  0x00 ; '.'
0000000000007ad7         db  0x00 ; '.'
0000000000007ad8         db  0x06 ; '.'
0000000000007ad9         db  0x00 ; '.'
0000000000007ada         db  0x00 ; '.'
0000000000007adb         db  0x00 ; '.'
0000000000007adc         db  0x07 ; '.'
0000000000007add         db  0x00 ; '.'
0000000000007ade         db  0x00 ; '.'
0000000000007adf         db  0x00 ; '.'
0000000000007ae0         db  0x08 ; '.'
0000000000007ae1         db  0x00 ; '.'
0000000000007ae2         db  0x00 ; '.'
0000000000007ae3         db  0x00 ; '.'
0000000000007ae4         db  0x09 ; '.'
0000000000007ae5         db  0x00 ; '.'
0000000000007ae6         db  0x00 ; '.'
0000000000007ae7         db  0x00 ; '.'
                     aSSSn:
0000000000007ae8         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
0000000000007af4         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
0000000000007afb         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
0000000000007afc         db  0x43 ; 'C'
0000000000007afd         db  0x29 ; ')'
0000000000007afe         db  0x00 ; '.'
                     aWrittenBySn:
0000000000007aff         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
0000000000007b0f         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
0000000000007b26         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
0000000000007b42         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
0000000000007b57         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
0000000000007b6d         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
0000000000007b81         align      8
                     aNlicenseGplv3G:
0000000000007b88         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
0000000000007c54         align      8
                     aWrittenBySSSna:
0000000000007c58         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_7c78:        // aWrittenBySSSns
0000000000007c78         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
0000000000007c9c         align      32
                     aWrittenBySSSns_7ca0:        // aWrittenBySSSns
0000000000007ca0         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_7cc8:        // aWrittenBySSSns
0000000000007cc8         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
0000000000007cf4         align      8
                     aWrittenBySSSns_7cf8:        // aWrittenBySSSns
0000000000007cf8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
0000000000007d28         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
0000000000007d5c         align      32
                     aWrittenBySSSns_7d60:        // aWrittenBySSSns
0000000000007d60         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
0000000000007d9c         align      32
                     aGeneralHelpUsi:
0000000000007da0         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
0000000000007de1         align      8
                     switch_table_7de8:        // switch_table
0000000000007de8         dd         version_etc_arn.loc_6156-switch_table_7de8, version_etc_arn.loc_61e8-switch_table_7de8, version_etc_arn.loc_6228-switch_table_7de8, version_etc_arn.loc_6270-switch_table_7de8 ; switch table used at 0x60d4 containing 10 entries, DATA XREF=version_etc_arn+150
0000000000007df8         dd         version_etc_arn.loc_62c0-switch_table_7de8, version_etc_arn.loc_6318-switch_table_7de8, version_etc_arn.loc_6348-switch_table_7de8, version_etc_arn.loc_63b0-switch_table_7de8
0000000000007e08         dd         version_etc_arn.loc_60e0-switch_table_7de8, version_etc_arn.loc_6190-switch_table_7de8
0000000000007e10         align      32
                     version_etc_copyright:
0000000000007e20         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
0000000000007e4f         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
0000000000007e60         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
0000000000007e61         db  0x00 ; '.'
                     aPosix:
0000000000007e62         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aAscii:
0000000000007e68         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
0000000000007e6e         db  0x00 ; '.'
0000000000007e6f         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0x7e70; 0x8244[ (980 bytes)
        ; File offset : [32368; 33348[ (980 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000007e70         db  0x01 ; '.'
0000000000007e71         db  0x1b ; '.'
0000000000007e72         db  0x03 ; '.'
0000000000007e73         db  0x3b ; ';'
0000000000007e74         db  0xd4 ; '.'
0000000000007e75         db  0x03 ; '.'
0000000000007e76         db  0x00 ; '.'
0000000000007e77         db  0x00 ; '.'
0000000000007e78         db  0x79 ; 'y'
0000000000007e79         db  0x00 ; '.'
0000000000007e7a         db  0x00 ; '.'
0000000000007e7b         db  0x00 ; '.'
0000000000007e7c         db  0x30 ; '0'
0000000000007e7d         db  0x96 ; '.'
0000000000007e7e         db  0xff ; '.'
0000000000007e7f         db  0xff ; '.'
0000000000007e80         db  0x20 ; ' '
0000000000007e81         db  0x04 ; '.'
0000000000007e82         db  0x00 ; '.'
0000000000007e83         db  0x00 ; '.'
0000000000007e84         db  0x40 ; '@'
0000000000007e85         db  0x99 ; '.'
0000000000007e86         db  0xff ; '.'
0000000000007e87         db  0xff ; '.'
0000000000007e88         db  0x48 ; 'H'
0000000000007e89         db  0x04 ; '.'
0000000000007e8a         db  0x00 ; '.'
0000000000007e8b         db  0x00 ; '.'
0000000000007e8c         db  0x50 ; 'P'
0000000000007e8d         db  0x99 ; '.'
0000000000007e8e         db  0xff ; '.'
0000000000007e8f         db  0xff ; '.'
0000000000007e90         db  0xf4 ; '.'
0000000000007e91         db  0x04 ; '.'
0000000000007e92         db  0x00 ; '.'
0000000000007e93         db  0x00 ; '.'
0000000000007e94         db  0x20 ; ' '
0000000000007e95         db  0x9e ; '.'
0000000000007e96         db  0xff ; '.'
0000000000007e97         db  0xff ; '.'
0000000000007e98         db  0xf0 ; '.'
0000000000007e99         db  0x03 ; '.'
0000000000007e9a         db  0x00 ; '.'
0000000000007e9b         db  0x00 ; '.'
0000000000007e9c         db  0x30 ; '0'
0000000000007e9d         db  0x9f ; '.'
0000000000007e9e         db  0xff ; '.'
0000000000007e9f         db  0xff ; '.'
0000000000007ea0         db  0x60 ; '`'
0000000000007ea1         db  0x04 ; '.'
0000000000007ea2         db  0x00 ; '.'
0000000000007ea3         db  0x00 ; '.'
0000000000007ea4         db  0xc0 ; '.'
0000000000007ea5         db  0x9f ; '.'
0000000000007ea6         db  0xff ; '.'
0000000000007ea7         db  0xff ; '.'
0000000000007ea8         db  0x74 ; 't'
0000000000007ea9         db  0x04 ; '.'
0000000000007eaa         db  0x00 ; '.'
0000000000007eab         db  0x00 ; '.'
0000000000007eac         db  0x10 ; '.'
0000000000007ead         db  0xa0 ; '.'
0000000000007eae         db  0xff ; '.'
0000000000007eaf         db  0xff ; '.'
0000000000007eb0         db  0x9c ; '.'
0000000000007eb1         db  0x04 ; '.'
0000000000007eb2         db  0x00 ; '.'
0000000000007eb3         db  0x00 ; '.'
0000000000007eb4         db  0xc0 ; '.'
0000000000007eb5         db  0xa0 ; '.'
0000000000007eb6         db  0xff ; '.'
0000000000007eb7         db  0xff ; '.'
0000000000007eb8         db  0xc8 ; '.'
0000000000007eb9         db  0x04 ; '.'
0000000000007eba         db  0x00 ; '.'
0000000000007ebb         db  0x00 ; '.'
0000000000007ebc         db  0x30 ; '0'
0000000000007ebd         db  0xa4 ; '.'
0000000000007ebe         db  0xff ; '.'
0000000000007ebf         db  0xff ; '.'
0000000000007ec0         db  0x40 ; '@'
0000000000007ec1         db  0x05 ; '.'
0000000000007ec2         db  0x00 ; '.'
0000000000007ec3         db  0x00 ; '.'
0000000000007ec4         db  0xb0 ; '.'
0000000000007ec5         db  0xa4 ; '.'
0000000000007ec6         db  0xff ; '.'
0000000000007ec7         db  0xff ; '.'
0000000000007ec8         db  0xa0 ; '.'
0000000000007ec9         db  0x05 ; '.'
0000000000007eca         db  0x00 ; '.'
0000000000007ecb         db  0x00 ; '.'
0000000000007ecc         db  0xf0 ; '.'
0000000000007ecd         db  0xa6 ; '.'
0000000000007ece         db  0xff ; '.'
0000000000007ecf         db  0xff ; '.'
0000000000007ed0         db  0x08 ; '.'
0000000000007ed1         db  0x06 ; '.'
0000000000007ed2         db  0x00 ; '.'
0000000000007ed3         db  0x00 ; '.'
0000000000007ed4         db  0x30 ; '0'
0000000000007ed5         db  0xad ; '.'
0000000000007ed6         db  0xff ; '.'
0000000000007ed7         db  0xff ; '.'
0000000000007ed8         db  0x58 ; 'X'
0000000000007ed9         db  0x06 ; '.'
0000000000007eda         db  0x00 ; '.'
0000000000007edb         db  0x00 ; '.'
0000000000007edc         db  0x40 ; '@'
0000000000007edd         db  0xad ; '.'
0000000000007ede         db  0xff ; '.'
0000000000007edf         db  0xff ; '.'
0000000000007ee0         db  0x6c ; 'l'
0000000000007ee1         db  0x06 ; '.'
0000000000007ee2         db  0x00 ; '.'
0000000000007ee3         db  0x00 ; '.'
0000000000007ee4         db  0x50 ; 'P'
0000000000007ee5         db  0xad ; '.'
0000000000007ee6         db  0xff ; '.'
0000000000007ee7         db  0xff ; '.'
0000000000007ee8         db  0x80 ; '.'
0000000000007ee9         db  0x06 ; '.'
0000000000007eea         db  0x00 ; '.'
0000000000007eeb         db  0x00 ; '.'
0000000000007eec         db  0x00 ; '.'
0000000000007eed         db  0xae ; '.'
0000000000007eee         db  0xff ; '.'
0000000000007eef         db  0xff ; '.'
0000000000007ef0         db  0xb0 ; '.'
0000000000007ef1         db  0x06 ; '.'
0000000000007ef2         db  0x00 ; '.'
0000000000007ef3         db  0x00 ; '.'
0000000000007ef4         db  0x90 ; '.'
0000000000007ef5         db  0xae ; '.'
0000000000007ef6         db  0xff ; '.'
0000000000007ef7         db  0xff ; '.'
0000000000007ef8         db  0x10 ; '.'
0000000000007ef9         db  0x07 ; '.'
0000000000007efa         db  0x00 ; '.'
0000000000007efb         db  0x00 ; '.'
0000000000007efc         db  0xf0 ; '.'
0000000000007efd         db  0xae ; '.'
0000000000007efe         db  0xff ; '.'
0000000000007eff         db  0xff ; '.'
0000000000007f00         db  0x30 ; '0'
0000000000007f01         db  0x07 ; '.'
0000000000007f02         db  0x00 ; '.'
0000000000007f03         db  0x00 ; '.'
0000000000007f04         db  0x90 ; '.'
0000000000007f05         db  0xaf ; '.'
0000000000007f06         db  0xff ; '.'
0000000000007f07         db  0xff ; '.'
0000000000007f08         db  0x44 ; 'D'
0000000000007f09         db  0x07 ; '.'
0000000000007f0a         db  0x00 ; '.'
0000000000007f0b         db  0x00 ; '.'
0000000000007f0c         db  0xa0 ; '.'
0000000000007f0d         db  0xaf ; '.'
0000000000007f0e         db  0xff ; '.'
0000000000007f0f         db  0xff ; '.'
0000000000007f10         db  0x58 ; 'X'
0000000000007f11         db  0x07 ; '.'
0000000000007f12         db  0x00 ; '.'
0000000000007f13         db  0x00 ; '.'
0000000000007f14         db  0xb0 ; '.'
0000000000007f15         db  0xaf ; '.'
0000000000007f16         db  0xff ; '.'
0000000000007f17         db  0xff ; '.'
0000000000007f18         db  0x6c ; 'l'
0000000000007f19         db  0x07 ; '.'
0000000000007f1a         db  0x00 ; '.'
0000000000007f1b         db  0x00 ; '.'
0000000000007f1c         db  0xe0 ; '.'
0000000000007f1d         db  0xaf ; '.'
0000000000007f1e         db  0xff ; '.'
0000000000007f1f         db  0xff ; '.'
0000000000007f20         db  0x88 ; '.'
0000000000007f21         db  0x07 ; '.'
0000000000007f22         db  0x00 ; '.'
0000000000007f23         db  0x00 ; '.'
0000000000007f24         db  0x00 ; '.'
0000000000007f25         db  0xb1 ; '.'
0000000000007f26         db  0xff ; '.'
0000000000007f27         db  0xff ; '.'
0000000000007f28         db  0xe8 ; '.'
0000000000007f29         db  0x07 ; '.'
0000000000007f2a         db  0x00 ; '.'
0000000000007f2b         db  0x00 ; '.'
0000000000007f2c         db  0x80 ; '.'
0000000000007f2d         db  0xb1 ; '.'
0000000000007f2e         db  0xff ; '.'
0000000000007f2f         db  0xff ; '.'
0000000000007f30         db  0xfc ; '.'
0000000000007f31         db  0x07 ; '.'
0000000000007f32         db  0x00 ; '.'
0000000000007f33         db  0x00 ; '.'
0000000000007f34         db  0xc0 ; '.'
0000000000007f35         db  0xb2 ; '.'
0000000000007f36         db  0xff ; '.'
0000000000007f37         db  0xff ; '.'
0000000000007f38         db  0x5c ; '\'
0000000000007f39         db  0x08 ; '.'
0000000000007f3a         db  0x00 ; '.'
0000000000007f3b         db  0x00 ; '.'
0000000000007f3c         db  0xd0 ; '.'
0000000000007f3d         db  0xb2 ; '.'
0000000000007f3e         db  0xff ; '.'
0000000000007f3f         db  0xff ; '.'
0000000000007f40         db  0x70 ; 'p'
0000000000007f41         db  0x08 ; '.'
0000000000007f42         db  0x00 ; '.'
0000000000007f43         db  0x00 ; '.'
0000000000007f44         db  0xe0 ; '.'
0000000000007f45         db  0xb2 ; '.'
0000000000007f46         db  0xff ; '.'
0000000000007f47         db  0xff ; '.'
0000000000007f48         db  0x84 ; '.'
0000000000007f49         db  0x08 ; '.'
0000000000007f4a         db  0x00 ; '.'
0000000000007f4b         db  0x00 ; '.'
0000000000007f4c         db  0xf0 ; '.'
0000000000007f4d         db  0xb2 ; '.'
0000000000007f4e         db  0xff ; '.'
0000000000007f4f         db  0xff ; '.'
0000000000007f50         db  0x98 ; '.'
0000000000007f51         db  0x08 ; '.'
0000000000007f52         db  0x00 ; '.'
0000000000007f53         db  0x00 ; '.'
0000000000007f54         db  0x40 ; '@'
0000000000007f55         db  0xb3 ; '.'
0000000000007f56         db  0xff ; '.'
0000000000007f57         db  0xff ; '.'
0000000000007f58         db  0xac ; '.'
0000000000007f59         db  0x08 ; '.'
0000000000007f5a         db  0x00 ; '.'
0000000000007f5b         db  0x00 ; '.'
0000000000007f5c         db  0xa0 ; '.'
0000000000007f5d         db  0xb3 ; '.'
0000000000007f5e         db  0xff ; '.'
0000000000007f5f         db  0xff ; '.'
0000000000007f60         db  0xc0 ; '.'
0000000000007f61         db  0x08 ; '.'
0000000000007f62         db  0x00 ; '.'
0000000000007f63         db  0x00 ; '.'
0000000000007f64         db  0xf0 ; '.'
0000000000007f65         db  0xb4 ; '.'
0000000000007f66         db  0xff ; '.'
0000000000007f67         db  0xff ; '.'
0000000000007f68         db  0xfc ; '.'
0000000000007f69         db  0x08 ; '.'
0000000000007f6a         db  0x00 ; '.'
0000000000007f6b         db  0x00 ; '.'
0000000000007f6c         db  0x50 ; 'P'
0000000000007f6d         db  0xb5 ; '.'
0000000000007f6e         db  0xff ; '.'
0000000000007f6f         db  0xff ; '.'
0000000000007f70         db  0x34 ; '4'
0000000000007f71         db  0x09 ; '.'
0000000000007f72         db  0x00 ; '.'
0000000000007f73         db  0x00 ; '.'
0000000000007f74         db  0xa0 ; '.'
0000000000007f75         db  0xb5 ; '.'
0000000000007f76         db  0xff ; '.'
0000000000007f77         db  0xff ; '.'
0000000000007f78         db  0x48 ; 'H'
0000000000007f79         db  0x09 ; '.'
0000000000007f7a         db  0x00 ; '.'
0000000000007f7b         db  0x00 ; '.'
0000000000007f7c         db  0x20 ; ' '
0000000000007f7d         db  0xb6 ; '.'
0000000000007f7e         db  0xff ; '.'
0000000000007f7f         db  0xff ; '.'
0000000000007f80         db  0x7c ; '|'
0000000000007f81         db  0x09 ; '.'
0000000000007f82         db  0x00 ; '.'
0000000000007f83         db  0x00 ; '.'
0000000000007f84         db  0x90 ; '.'
0000000000007f85         db  0xb6 ; '.'
0000000000007f86         db  0xff ; '.'
0000000000007f87         db  0xff ; '.'
0000000000007f88         db  0x90 ; '.'
0000000000007f89         db  0x09 ; '.'
0000000000007f8a         db  0x00 ; '.'
0000000000007f8b         db  0x00 ; '.'
0000000000007f8c         db  0x00 ; '.'
0000000000007f8d         db  0xb7 ; '.'
0000000000007f8e         db  0xff ; '.'
0000000000007f8f         db  0xff ; '.'
0000000000007f90         db  0xdc ; '.'
0000000000007f91         db  0x09 ; '.'
0000000000007f92         db  0x00 ; '.'
0000000000007f93         db  0x00 ; '.'
0000000000007f94         db  0x40 ; '@'
0000000000007f95         db  0xb7 ; '.'
0000000000007f96         db  0xff ; '.'
0000000000007f97         db  0xff ; '.'
0000000000007f98         db  0xf0 ; '.'
0000000000007f99         db  0x09 ; '.'
0000000000007f9a         db  0x00 ; '.'
0000000000007f9b         db  0x00 ; '.'
0000000000007f9c         db  0x60 ; '`'
0000000000007f9d         db  0xb7 ; '.'
0000000000007f9e         db  0xff ; '.'
0000000000007f9f         db  0xff ; '.'
0000000000007fa0         db  0x04 ; '.'
0000000000007fa1         db  0x0a ; '.'
0000000000007fa2         db  0x00 ; '.'
0000000000007fa3         db  0x00 ; '.'
0000000000007fa4         db  0x20 ; ' '
0000000000007fa5         db  0xb9 ; '.'
0000000000007fa6         db  0xff ; '.'
0000000000007fa7         db  0xff ; '.'
0000000000007fa8         db  0x50 ; 'P'
0000000000007fa9         db  0x0a ; '.'
0000000000007faa         db  0x00 ; '.'
0000000000007fab         db  0x00 ; '.'
0000000000007fac         db  0xb0 ; '.'
0000000000007fad         db  0xb9 ; '.'
0000000000007fae         db  0xff ; '.'
0000000000007faf         db  0xff ; '.'
0000000000007fb0         db  0x7c ; '|'
0000000000007fb1         db  0x0a ; '.'
0000000000007fb2         db  0x00 ; '.'
0000000000007fb3         db  0x00 ; '.'
0000000000007fb4         db  0x90 ; '.'
0000000000007fb5         db  0xba ; '.'
0000000000007fb6         db  0xff ; '.'
0000000000007fb7         db  0xff ; '.'
0000000000007fb8         db  0xa8 ; '.'
0000000000007fb9         db  0x0a ; '.'
0000000000007fba         db  0x00 ; '.'
0000000000007fbb         db  0x00 ; '.'
0000000000007fbc         db  0xd0 ; '.'
0000000000007fbd         db  0xbc ; '.'
0000000000007fbe         db  0xff ; '.'
0000000000007fbf         db  0xff ; '.'
0000000000007fc0         db  0xe0 ; '.'
0000000000007fc1         db  0x0a ; '.'
0000000000007fc2         db  0x00 ; '.'
0000000000007fc3         db  0x00 ; '.'
0000000000007fc4         db  0x60 ; '`'
0000000000007fc5         db  0xbf ; '.'
0000000000007fc6         db  0xff ; '.'
0000000000007fc7         db  0xff ; '.'
0000000000007fc8         db  0x1c ; '.'
0000000000007fc9         db  0x0b ; '.'
0000000000007fca         db  0x00 ; '.'
0000000000007fcb         db  0x00 ; '.'
0000000000007fcc         db  0xc0 ; '.'
0000000000007fcd         db  0xbf ; '.'
0000000000007fce         db  0xff ; '.'
0000000000007fcf         db  0xff ; '.'
0000000000007fd0         db  0x40 ; '@'
0000000000007fd1         db  0x0b ; '.'
0000000000007fd2         db  0x00 ; '.'
0000000000007fd3         db  0x00 ; '.'
0000000000007fd4         db  0xd0 ; '.'
0000000000007fd5         db  0xc1 ; '.'
0000000000007fd6         db  0xff ; '.'
0000000000007fd7         db  0xff ; '.'
0000000000007fd8         db  0x78 ; 'x'
0000000000007fd9         db  0x0b ; '.'
0000000000007fda         db  0x00 ; '.'
0000000000007fdb         db  0x00 ; '.'
0000000000007fdc         db  0x00 ; '.'
0000000000007fdd         db  0xc2 ; '.'
0000000000007fde         db  0xff ; '.'
0000000000007fdf         db  0xff ; '.'
0000000000007fe0         db  0xa0 ; '.'
0000000000007fe1         db  0x0b ; '.'
0000000000007fe2         db  0x00 ; '.'
0000000000007fe3         db  0x00 ; '.'
0000000000007fe4         db  0x10 ; '.'
0000000000007fe5         db  0xc2 ; '.'
0000000000007fe6         db  0xff ; '.'
0000000000007fe7         db  0xff ; '.'
0000000000007fe8         db  0xb4 ; '.'
0000000000007fe9         db  0x0b ; '.'
0000000000007fea         db  0x00 ; '.'
0000000000007feb         db  0x00 ; '.'
0000000000007fec         db  0x40 ; '@'
0000000000007fed         db  0xc2 ; '.'
0000000000007fee         db  0xff ; '.'
0000000000007fef         db  0xff ; '.'
0000000000007ff0         db  0xcc ; '.'
0000000000007ff1         db  0x0b ; '.'
0000000000007ff2         db  0x00 ; '.'
0000000000007ff3         db  0x00 ; '.'
0000000000007ff4         db  0x80 ; '.'
0000000000007ff5         db  0xc2 ; '.'
0000000000007ff6         db  0xff ; '.'
0000000000007ff7         db  0xff ; '.'
0000000000007ff8         db  0xe4 ; '.'
0000000000007ff9         db  0x0b ; '.'
0000000000007ffa         db  0x00 ; '.'
0000000000007ffb         db  0x00 ; '.'
0000000000007ffc         db  0xa0 ; '.'
0000000000007ffd         db  0xc2 ; '.'
0000000000007ffe         db  0xff ; '.'
0000000000007fff         db  0xff ; '.'
0000000000008000         db  0x00 ; '.'
0000000000008001         db  0x0c ; '.'
0000000000008002         db  0x00 ; '.'
0000000000008003         db  0x00 ; '.'
0000000000008004         db  0x40 ; '@'
0000000000008005         db  0xc3 ; '.'
0000000000008006         db  0xff ; '.'
0000000000008007         db  0xff ; '.'
0000000000008008         db  0x20 ; ' '
0000000000008009         db  0x0c ; '.'
000000000000800a         db  0x00 ; '.'
000000000000800b         db  0x00 ; '.'
000000000000800c         db  0x30 ; '0'
000000000000800d         db  0xc4 ; '.'
000000000000800e         db  0xff ; '.'
000000000000800f         db  0xff ; '.'
0000000000008010         db  0x64 ; 'd'
0000000000008011         db  0x0c ; '.'
0000000000008012         db  0x00 ; '.'
0000000000008013         db  0x00 ; '.'
0000000000008014         db  0x70 ; 'p'
0000000000008015         db  0xd6 ; '.'
0000000000008016         db  0xff ; '.'
0000000000008017         db  0xff ; '.'
0000000000008018         db  0xdc ; '.'
0000000000008019         db  0x0c ; '.'
000000000000801a         db  0x00 ; '.'
000000000000801b         db  0x00 ; '.'
000000000000801c         db  0x20 ; ' '
000000000000801d         db  0xd8 ; '.'
000000000000801e         db  0xff ; '.'
000000000000801f         db  0xff ; '.'
0000000000008020         db  0x48 ; 'H'
0000000000008021         db  0x0d ; '.'
0000000000008022         db  0x00 ; '.'
0000000000008023         db  0x00 ; '.'
0000000000008024         db  0x60 ; '`'
0000000000008025         db  0xd8 ; '.'
0000000000008026         db  0xff ; '.'
0000000000008027         db  0xff ; '.'
0000000000008028         db  0x74 ; 't'
0000000000008029         db  0x0d ; '.'
000000000000802a         db  0x00 ; '.'
000000000000802b         db  0x00 ; '.'
000000000000802c         db  0x80 ; '.'
000000000000802d         db  0xd8 ; '.'
000000000000802e         db  0xff ; '.'
000000000000802f         db  0xff ; '.'
0000000000008030         db  0x88 ; '.'
0000000000008031         db  0x0d ; '.'
0000000000008032         db  0x00 ; '.'
0000000000008033         db  0x00 ; '.'
0000000000008034         db  0xa0 ; '.'
0000000000008035         db  0xd8 ; '.'
0000000000008036         db  0xff ; '.'
0000000000008037         db  0xff ; '.'
0000000000008038         db  0x9c ; '.'
0000000000008039         db  0x0d ; '.'
000000000000803a         db  0x00 ; '.'
000000000000803b         db  0x00 ; '.'
000000000000803c         db  0xe0 ; '.'
000000000000803d         db  0xd8 ; '.'
000000000000803e         db  0xff ; '.'
000000000000803f         db  0xff ; '.'
0000000000008040         db  0xb0 ; '.'
0000000000008041         db  0x0d ; '.'
0000000000008042         db  0x00 ; '.'
0000000000008043         db  0x00 ; '.'
0000000000008044         db  0x00 ; '.'
0000000000008045         db  0xd9 ; '.'
0000000000008046         db  0xff ; '.'
0000000000008047         db  0xff ; '.'
0000000000008048         db  0xc4 ; '.'
0000000000008049         db  0x0d ; '.'
000000000000804a         db  0x00 ; '.'
000000000000804b         db  0x00 ; '.'
000000000000804c         db  0x30 ; '0'
000000000000804d         db  0xd9 ; '.'
000000000000804e         db  0xff ; '.'
000000000000804f         db  0xff ; '.'
0000000000008050         db  0xd8 ; '.'
0000000000008051         db  0x0d ; '.'
0000000000008052         db  0x00 ; '.'
0000000000008053         db  0x00 ; '.'
0000000000008054         db  0xb0 ; '.'
0000000000008055         db  0xd9 ; '.'
0000000000008056         db  0xff ; '.'
0000000000008057         db  0xff ; '.'
0000000000008058         db  0x2c ; ','
0000000000008059         db  0x0e ; '.'
000000000000805a         db  0x00 ; '.'
000000000000805b         db  0x00 ; '.'
000000000000805c         db  0xa0 ; '.'
000000000000805d         db  0xda ; '.'
000000000000805e         db  0xff ; '.'
000000000000805f         db  0xff ; '.'
0000000000008060         db  0x98 ; '.'
0000000000008061         db  0x0e ; '.'
0000000000008062         db  0x00 ; '.'
0000000000008063         db  0x00 ; '.'
0000000000008064         db  0xb0 ; '.'
0000000000008065         db  0xda ; '.'
0000000000008066         db  0xff ; '.'
0000000000008067         db  0xff ; '.'
0000000000008068         db  0xac ; '.'
0000000000008069         db  0x0e ; '.'
000000000000806a         db  0x00 ; '.'
000000000000806b         db  0x00 ; '.'
000000000000806c         db  0x50 ; 'P'
000000000000806d         db  0xdb ; '.'
000000000000806e         db  0xff ; '.'
000000000000806f         db  0xff ; '.'
0000000000008070         db  0xd8 ; '.'
0000000000008071         db  0x0e ; '.'
0000000000008072         db  0x00 ; '.'
0000000000008073         db  0x00 ; '.'
0000000000008074         db  0x70 ; 'p'
0000000000008075         db  0xdb ; '.'
0000000000008076         db  0xff ; '.'
0000000000008077         db  0xff ; '.'
0000000000008078         db  0xec ; '.'
0000000000008079         db  0x0e ; '.'
000000000000807a         db  0x00 ; '.'
000000000000807b         db  0x00 ; '.'
000000000000807c         db  0x80 ; '.'
000000000000807d         db  0xdb ; '.'
000000000000807e         db  0xff ; '.'
000000000000807f         db  0xff ; '.'
0000000000008080         db  0x00 ; '.'
0000000000008081         db  0x0f ; '.'
0000000000008082         db  0x00 ; '.'
0000000000008083         db  0x00 ; '.'
0000000000008084         db  0xa0 ; '.'
0000000000008085         db  0xdb ; '.'
0000000000008086         db  0xff ; '.'
0000000000008087         db  0xff ; '.'
0000000000008088         db  0x14 ; '.'
0000000000008089         db  0x0f ; '.'
000000000000808a         db  0x00 ; '.'
000000000000808b         db  0x00 ; '.'
000000000000808c         db  0xc0 ; '.'
000000000000808d         db  0xdb ; '.'
000000000000808e         db  0xff ; '.'
000000000000808f         db  0xff ; '.'
0000000000008090         db  0x28 ; '('
0000000000008091         db  0x0f ; '.'
0000000000008092         db  0x00 ; '.'
0000000000008093         db  0x00 ; '.'
0000000000008094         db  0x50 ; 'P'
0000000000008095         db  0xdc ; '.'
0000000000008096         db  0xff ; '.'
0000000000008097         db  0xff ; '.'
0000000000008098         db  0x44 ; 'D'
0000000000008099         db  0x0f ; '.'
000000000000809a         db  0x00 ; '.'
000000000000809b         db  0x00 ; '.'
000000000000809c         db  0xe0 ; '.'
000000000000809d         db  0xdc ; '.'
000000000000809e         db  0xff ; '.'
000000000000809f         db  0xff ; '.'
00000000000080a0         db  0x60 ; '`'
00000000000080a1         db  0x0f ; '.'
00000000000080a2         db  0x00 ; '.'
00000000000080a3         db  0x00 ; '.'
00000000000080a4         db  0xf0 ; '.'
00000000000080a5         db  0xdc ; '.'
00000000000080a6         db  0xff ; '.'
00000000000080a7         db  0xff ; '.'
00000000000080a8         db  0x74 ; 't'
00000000000080a9         db  0x0f ; '.'
00000000000080aa         db  0x00 ; '.'
00000000000080ab         db  0x00 ; '.'
00000000000080ac         db  0x00 ; '.'
00000000000080ad         db  0xdd ; '.'
00000000000080ae         db  0xff ; '.'
00000000000080af         db  0xff ; '.'
00000000000080b0         db  0x88 ; '.'
00000000000080b1         db  0x0f ; '.'
00000000000080b2         db  0x00 ; '.'
00000000000080b3         db  0x00 ; '.'
00000000000080b4         db  0xa0 ; '.'
00000000000080b5         db  0xdd ; '.'
00000000000080b6         db  0xff ; '.'
00000000000080b7         db  0xff ; '.'
00000000000080b8         db  0xa4 ; '.'
00000000000080b9         db  0x0f ; '.'
00000000000080ba         db  0x00 ; '.'
00000000000080bb         db  0x00 ; '.'
00000000000080bc         db  0xb0 ; '.'
00000000000080bd         db  0xdd ; '.'
00000000000080be         db  0xff ; '.'
00000000000080bf         db  0xff ; '.'
00000000000080c0         db  0xb8 ; '.'
00000000000080c1         db  0x0f ; '.'
00000000000080c2         db  0x00 ; '.'
00000000000080c3         db  0x00 ; '.'
00000000000080c4         db  0xd0 ; '.'
00000000000080c5         db  0xdd ; '.'
00000000000080c6         db  0xff ; '.'
00000000000080c7         db  0xff ; '.'
00000000000080c8         db  0xcc ; '.'
00000000000080c9         db  0x0f ; '.'
00000000000080ca         db  0x00 ; '.'
00000000000080cb         db  0x00 ; '.'
00000000000080cc         db  0xe0 ; '.'
00000000000080cd         db  0xdd ; '.'
00000000000080ce         db  0xff ; '.'
00000000000080cf         db  0xff ; '.'
00000000000080d0         db  0xe0 ; '.'
00000000000080d1         db  0x0f ; '.'
00000000000080d2         db  0x00 ; '.'
00000000000080d3         db  0x00 ; '.'
00000000000080d4         db  0x70 ; 'p'
00000000000080d5         db  0xde ; '.'
00000000000080d6         db  0xff ; '.'
00000000000080d7         db  0xff ; '.'
00000000000080d8         db  0xfc ; '.'
00000000000080d9         db  0x0f ; '.'
00000000000080da         db  0x00 ; '.'
00000000000080db         db  0x00 ; '.'
00000000000080dc         db  0x10 ; '.'
00000000000080dd         db  0xdf ; '.'
00000000000080de         db  0xff ; '.'
00000000000080df         db  0xff ; '.'
00000000000080e0         db  0x18 ; '.'
00000000000080e1         db  0x10 ; '.'
00000000000080e2         db  0x00 ; '.'
00000000000080e3         db  0x00 ; '.'
00000000000080e4         db  0x20 ; ' '
00000000000080e5         db  0xdf ; '.'
00000000000080e6         db  0xff ; '.'
00000000000080e7         db  0xff ; '.'
00000000000080e8         db  0x2c ; ','
00000000000080e9         db  0x10 ; '.'
00000000000080ea         db  0x00 ; '.'
00000000000080eb         db  0x00 ; '.'
00000000000080ec         db  0x40 ; '@'
00000000000080ed         db  0xdf ; '.'
00000000000080ee         db  0xff ; '.'
00000000000080ef         db  0xff ; '.'
00000000000080f0         db  0x40 ; '@'
00000000000080f1         db  0x10 ; '.'
00000000000080f2         db  0x00 ; '.'
00000000000080f3         db  0x00 ; '.'
00000000000080f4         db  0x60 ; '`'
00000000000080f5         db  0xdf ; '.'
00000000000080f6         db  0xff ; '.'
00000000000080f7         db  0xff ; '.'
00000000000080f8         db  0x54 ; 'T'
00000000000080f9         db  0x10 ; '.'
00000000000080fa         db  0x00 ; '.'
00000000000080fb         db  0x00 ; '.'
00000000000080fc         db  0x70 ; 'p'
00000000000080fd         db  0xdf ; '.'
00000000000080fe         db  0xff ; '.'
00000000000080ff         db  0xff ; '.'
0000000000008100         db  0x68 ; 'h'
0000000000008101         db  0x10 ; '.'
0000000000008102         db  0x00 ; '.'
0000000000008103         db  0x00 ; '.'
0000000000008104         db  0x90 ; '.'
0000000000008105         db  0xdf ; '.'
0000000000008106         db  0xff ; '.'
0000000000008107         db  0xff ; '.'
0000000000008108         db  0x7c ; '|'
0000000000008109         db  0x10 ; '.'
000000000000810a         db  0x00 ; '.'
000000000000810b         db  0x00 ; '.'
000000000000810c         db  0xb0 ; '.'
000000000000810d         db  0xdf ; '.'
000000000000810e         db  0xff ; '.'
000000000000810f         db  0xff ; '.'
0000000000008110         db  0x90 ; '.'
0000000000008111         db  0x10 ; '.'
0000000000008112         db  0x00 ; '.'
0000000000008113         db  0x00 ; '.'
0000000000008114         db  0xd0 ; '.'
0000000000008115         db  0xdf ; '.'
0000000000008116         db  0xff ; '.'
0000000000008117         db  0xff ; '.'
0000000000008118         db  0xa8 ; '.'
0000000000008119         db  0x10 ; '.'
000000000000811a         db  0x00 ; '.'
000000000000811b         db  0x00 ; '.'
000000000000811c         db  0x00 ; '.'
000000000000811d         db  0xe1 ; '.'
000000000000811e         db  0xff ; '.'
000000000000811f         db  0xff ; '.'
0000000000008120         db  0xe4 ; '.'
0000000000008121         db  0x10 ; '.'
0000000000008122         db  0x00 ; '.'
0000000000008123         db  0x00 ; '.'
0000000000008124         db  0xa0 ; '.'
0000000000008125         db  0xe1 ; '.'
0000000000008126         db  0xff ; '.'
0000000000008127         db  0xff ; '.'
0000000000008128         db  0x44 ; 'D'
0000000000008129         db  0x11 ; '.'
000000000000812a         db  0x00 ; '.'
000000000000812b         db  0x00 ; '.'
000000000000812c         db  0xc0 ; '.'
000000000000812d         db  0xe1 ; '.'
000000000000812e         db  0xff ; '.'
000000000000812f         db  0xff ; '.'
0000000000008130         db  0x58 ; 'X'
0000000000008131         db  0x11 ; '.'
0000000000008132         db  0x00 ; '.'
0000000000008133         db  0x00 ; '.'
0000000000008134         db  0xe0 ; '.'
0000000000008135         db  0xe5 ; '.'
0000000000008136         db  0xff ; '.'
0000000000008137         db  0xff ; '.'
0000000000008138         db  0x6c ; 'l'
0000000000008139         db  0x12 ; '.'
000000000000813a         db  0x00 ; '.'
000000000000813b         db  0x00 ; '.'
000000000000813c         db  0x00 ; '.'
000000000000813d         db  0xe6 ; '.'
000000000000813e         db  0xff ; '.'
000000000000813f         db  0xff ; '.'
0000000000008140         db  0x80 ; '.'
0000000000008141         db  0x12 ; '.'
0000000000008142         db  0x00 ; '.'
0000000000008143         db  0x00 ; '.'
0000000000008144         db  0x80 ; '.'
0000000000008145         db  0xe6 ; '.'
0000000000008146         db  0xff ; '.'
0000000000008147         db  0xff ; '.'
0000000000008148         db  0x9c ; '.'
0000000000008149         db  0x12 ; '.'
000000000000814a         db  0x00 ; '.'
000000000000814b         db  0x00 ; '.'
000000000000814c         db  0x60 ; '`'
000000000000814d         db  0xe7 ; '.'
000000000000814e         db  0xff ; '.'
000000000000814f         db  0xff ; '.'
0000000000008150         db  0xc8 ; '.'
0000000000008151         db  0x12 ; '.'
0000000000008152         db  0x00 ; '.'
0000000000008153         db  0x00 ; '.'
0000000000008154         db  0xe0 ; '.'
0000000000008155         db  0xe7 ; '.'
0000000000008156         db  0xff ; '.'
0000000000008157         db  0xff ; '.'
0000000000008158         db  0xe8 ; '.'
0000000000008159         db  0x12 ; '.'
000000000000815a         db  0x00 ; '.'
000000000000815b         db  0x00 ; '.'
000000000000815c         db  0x00 ; '.'
000000000000815d         db  0xe8 ; '.'
000000000000815e         db  0xff ; '.'
000000000000815f         db  0xff ; '.'
0000000000008160         db  0x04 ; '.'
0000000000008161         db  0x13 ; '.'
0000000000008162         db  0x00 ; '.'
0000000000008163         db  0x00 ; '.'
0000000000008164         db  0x30 ; '0'
0000000000008165         db  0xe8 ; '.'
0000000000008166         db  0xff ; '.'
0000000000008167         db  0xff ; '.'
0000000000008168         db  0x18 ; '.'
0000000000008169         db  0x13 ; '.'
000000000000816a         db  0x00 ; '.'
000000000000816b         db  0x00 ; '.'
000000000000816c         db  0x40 ; '@'
000000000000816d         db  0xe8 ; '.'
000000000000816e         db  0xff ; '.'
000000000000816f         db  0xff ; '.'
0000000000008170         db  0x2c ; ','
0000000000008171         db  0x13 ; '.'
0000000000008172         db  0x00 ; '.'
0000000000008173         db  0x00 ; '.'
0000000000008174         db  0x80 ; '.'
0000000000008175         db  0xe8 ; '.'
0000000000008176         db  0xff ; '.'
0000000000008177         db  0xff ; '.'
0000000000008178         db  0x50 ; 'P'
0000000000008179         db  0x13 ; '.'
000000000000817a         db  0x00 ; '.'
000000000000817b         db  0x00 ; '.'
000000000000817c         db  0xb0 ; '.'
000000000000817d         db  0xe8 ; '.'
000000000000817e         db  0xff ; '.'
000000000000817f         db  0xff ; '.'
0000000000008180         db  0x64 ; 'd'
0000000000008181         db  0x13 ; '.'
0000000000008182         db  0x00 ; '.'
0000000000008183         db  0x00 ; '.'
0000000000008184         db  0x40 ; '@'
0000000000008185         db  0xe9 ; '.'
0000000000008186         db  0xff ; '.'
0000000000008187         db  0xff ; '.'
0000000000008188         db  0x7c ; '|'
0000000000008189         db  0x13 ; '.'
000000000000818a         db  0x00 ; '.'
000000000000818b         db  0x00 ; '.'
000000000000818c         db  0x90 ; '.'
000000000000818d         db  0xe9 ; '.'
000000000000818e         db  0xff ; '.'
000000000000818f         db  0xff ; '.'
0000000000008190         db  0x94 ; '.'
0000000000008191         db  0x13 ; '.'
0000000000008192         db  0x00 ; '.'
0000000000008193         db  0x00 ; '.'
0000000000008194         db  0xb0 ; '.'
0000000000008195         db  0xe9 ; '.'
0000000000008196         db  0xff ; '.'
0000000000008197         db  0xff ; '.'
0000000000008198         db  0xb0 ; '.'
0000000000008199         db  0x13 ; '.'
000000000000819a         db  0x00 ; '.'
000000000000819b         db  0x00 ; '.'
000000000000819c         db  0xe0 ; '.'
000000000000819d         db  0xe9 ; '.'
000000000000819e         db  0xff ; '.'
000000000000819f         db  0xff ; '.'
00000000000081a0         db  0xcc ; '.'
00000000000081a1         db  0x13 ; '.'
00000000000081a2         db  0x00 ; '.'
00000000000081a3         db  0x00 ; '.'
00000000000081a4         db  0x10 ; '.'
00000000000081a5         db  0xea ; '.'
00000000000081a6         db  0xff ; '.'
00000000000081a7         db  0xff ; '.'
00000000000081a8         db  0xf4 ; '.'
00000000000081a9         db  0x13 ; '.'
00000000000081aa         db  0x00 ; '.'
00000000000081ab         db  0x00 ; '.'
00000000000081ac         db  0x30 ; '0'
00000000000081ad         db  0xea ; '.'
00000000000081ae         db  0xff ; '.'
00000000000081af         db  0xff ; '.'
00000000000081b0         db  0x10 ; '.'
00000000000081b1         db  0x14 ; '.'
00000000000081b2         db  0x00 ; '.'
00000000000081b3         db  0x00 ; '.'
00000000000081b4         db  0x70 ; 'p'
00000000000081b5         db  0xea ; '.'
00000000000081b6         db  0xff ; '.'
00000000000081b7         db  0xff ; '.'
00000000000081b8         db  0x28 ; '('
00000000000081b9         db  0x14 ; '.'
00000000000081ba         db  0x00 ; '.'
00000000000081bb         db  0x00 ; '.'
00000000000081bc         db  0xa0 ; '.'
00000000000081bd         db  0xea ; '.'
00000000000081be         db  0xff ; '.'
00000000000081bf         db  0xff ; '.'
00000000000081c0         db  0x48 ; 'H'
00000000000081c1         db  0x14 ; '.'
00000000000081c2         db  0x00 ; '.'
00000000000081c3         db  0x00 ; '.'
00000000000081c4         db  0x30 ; '0'
00000000000081c5         db  0xeb ; '.'
00000000000081c6         db  0xff ; '.'
00000000000081c7         db  0xff ; '.'
00000000000081c8         db  0x88 ; '.'
00000000000081c9         db  0x14 ; '.'
00000000000081ca         db  0x00 ; '.'
00000000000081cb         db  0x00 ; '.'
00000000000081cc         db  0x20 ; ' '
00000000000081cd         db  0xec ; '.'
00000000000081ce         db  0xff ; '.'
00000000000081cf         db  0xff ; '.'
00000000000081d0         db  0xd8 ; '.'
00000000000081d1         db  0x14 ; '.'
00000000000081d2         db  0x00 ; '.'
00000000000081d3         db  0x00 ; '.'
00000000000081d4         db  0xa0 ; '.'
00000000000081d5         db  0xec ; '.'
00000000000081d6         db  0xff ; '.'
00000000000081d7         db  0xff ; '.'
00000000000081d8         db  0x28 ; '('
00000000000081d9         db  0x15 ; '.'
00000000000081da         db  0x00 ; '.'
00000000000081db         db  0x00 ; '.'
00000000000081dc         db  0xc0 ; '.'
00000000000081dd         db  0xec ; '.'
00000000000081de         db  0xff ; '.'
00000000000081df         db  0xff ; '.'
00000000000081e0         db  0x48 ; 'H'
00000000000081e1         db  0x15 ; '.'
00000000000081e2         db  0x00 ; '.'
00000000000081e3         db  0x00 ; '.'
00000000000081e4         db  0x20 ; ' '
00000000000081e5         db  0xed ; '.'
00000000000081e6         db  0xff ; '.'
00000000000081e7         db  0xff ; '.'
00000000000081e8         db  0x7c ; '|'
00000000000081e9         db  0x15 ; '.'
00000000000081ea         db  0x00 ; '.'
00000000000081eb         db  0x00 ; '.'
00000000000081ec         db  0x80 ; '.'
00000000000081ed         db  0xed ; '.'
00000000000081ee         db  0xff ; '.'
00000000000081ef         db  0xff ; '.'
00000000000081f0         db  0xa8 ; '.'
00000000000081f1         db  0x15 ; '.'
00000000000081f2         db  0x00 ; '.'
00000000000081f3         db  0x00 ; '.'
00000000000081f4         db  0xe0 ; '.'
00000000000081f5         db  0xed ; '.'
00000000000081f6         db  0xff ; '.'
00000000000081f7         db  0xff ; '.'
00000000000081f8         db  0xbc ; '.'
00000000000081f9         db  0x15 ; '.'
00000000000081fa         db  0x00 ; '.'
00000000000081fb         db  0x00 ; '.'
00000000000081fc         db  0x30 ; '0'
00000000000081fd         db  0xee ; '.'
00000000000081fe         db  0xff ; '.'
00000000000081ff         db  0xff ; '.'
0000000000008200         db  0xe8 ; '.'
0000000000008201         db  0x15 ; '.'
0000000000008202         db  0x00 ; '.'
0000000000008203         db  0x00 ; '.'
0000000000008204         db  0x90 ; '.'
0000000000008205         db  0xee ; '.'
0000000000008206         db  0xff ; '.'
0000000000008207         db  0xff ; '.'
0000000000008208         db  0x08 ; '.'
0000000000008209         db  0x16 ; '.'
000000000000820a         db  0x00 ; '.'
000000000000820b         db  0x00 ; '.'
000000000000820c         db  0xd0 ; '.'
000000000000820d         db  0xee ; '.'
000000000000820e         db  0xff ; '.'
000000000000820f         db  0xff ; '.'
0000000000008210         db  0x20 ; ' '
0000000000008211         db  0x16 ; '.'
0000000000008212         db  0x00 ; '.'
0000000000008213         db  0x00 ; '.'
0000000000008214         db  0x10 ; '.'
0000000000008215         db  0xef ; '.'
0000000000008216         db  0xff ; '.'
0000000000008217         db  0xff ; '.'
0000000000008218         db  0x40 ; '@'
0000000000008219         db  0x16 ; '.'
000000000000821a         db  0x00 ; '.'
000000000000821b         db  0x00 ; '.'
000000000000821c         db  0x90 ; '.'
000000000000821d         db  0xef ; '.'
000000000000821e         db  0xff ; '.'
000000000000821f         db  0xff ; '.'
0000000000008220         db  0x78 ; 'x'
0000000000008221         db  0x16 ; '.'
0000000000008222         db  0x00 ; '.'
0000000000008223         db  0x00 ; '.'
0000000000008224         db  0xd0 ; '.'
0000000000008225         db  0xef ; '.'
0000000000008226         db  0xff ; '.'
0000000000008227         db  0xff ; '.'
0000000000008228         db  0x98 ; '.'
0000000000008229         db  0x16 ; '.'
000000000000822a         db  0x00 ; '.'
000000000000822b         db  0x00 ; '.'
000000000000822c         db  0x30 ; '0'
000000000000822d         db  0xf0 ; '.'
000000000000822e         db  0xff ; '.'
000000000000822f         db  0xff ; '.'
0000000000008230         db  0xc8 ; '.'
0000000000008231         db  0x16 ; '.'
0000000000008232         db  0x00 ; '.'
0000000000008233         db  0x00 ; '.'
0000000000008234         db  0xa0 ; '.'
0000000000008235         db  0xf0 ; '.'
0000000000008236         db  0xff ; '.'
0000000000008237         db  0xff ; '.'
0000000000008238         db  0x10 ; '.'
0000000000008239         db  0x17 ; '.'
000000000000823a         db  0x00 ; '.'
000000000000823b         db  0x00 ; '.'
000000000000823c         db  0xb0 ; '.'
000000000000823d         db  0xf0 ; '.'
000000000000823e         db  0xff ; '.'
000000000000823f         db  0xff ; '.'
0000000000008240         db  0x28 ; '('
0000000000008241         db  0x17 ; '.'
0000000000008242         db  0x00 ; '.'
0000000000008243         db  0x00 ; '.'
0000000000008244         db  0x00 ; '.'
0000000000008245         db  0x00 ; '.'
0000000000008246         db  0x00 ; '.'
0000000000008247         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x8248; 0x95b0[ (4968 bytes)
        ; File offset : [33352; 38320[ (4968 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000008248         dd         0x00000014                                  ; Length of the record
000000000000824c         dd         0x00000000                                  ; CIE ID
0000000000008250         db         0x01                                        ; Version
0000000000008251         db         "zR", 0                                     ; Augmentation String
0000000000008254         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000008255         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000008256         db         0x10                                        ; Return address register
0000000000008257         db         0x01                                        ; Augmentation data length
0000000000008258         db         0x1b                                        ; FDE encoding
0000000000008259         db  0x0c ; '.'
000000000000825a         db  0x07 ; '.'
000000000000825b         db  0x08 ; '.'
000000000000825c         db  0x90 ; '.'
000000000000825d         db  0x01 ; '.'
000000000000825e         db  0x07 ; '.'
000000000000825f         db  0x10 ; '.'
0000000000008260         dd         0x00000014                                  ; Length of the record
0000000000008264         dd         0x0000001c                                  ; FDE: parent CIE at 0x8248 (FDE encoding = 0x1B)
0000000000008268         db         0x28, 0x9a, 2 dup (0xff)                    ; begin 0x1c90
000000000000826c         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x1cbb)
0000000000008270         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008271         align      8
0000000000008278         dd         0x00000014                                  ; Length of the record
000000000000827c         dd         0x00000000                                  ; CIE ID
0000000000008280         db         0x01                                        ; Version
0000000000008281         db         "zR", 0                                     ; Augmentation String
0000000000008284         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000008285         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000008286         db         0x10                                        ; Return address register
0000000000008287         db         0x01                                        ; Augmentation data length
0000000000008288         db         0x1b                                        ; FDE encoding
0000000000008289         db  0x0c ; '.'
000000000000828a         db  0x07 ; '.'
000000000000828b         db  0x08 ; '.'
000000000000828c         db  0x90 ; '.'
000000000000828d         db  0x01 ; '.'
000000000000828e         db  0x00 ; '.'
000000000000828f         db  0x00 ; '.'
0000000000008290         dd         0x00000024                                  ; Length of the record
0000000000008294         dd         0x0000001c                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008298         db         0x08, 0x92, 2 dup (0xff)                    ; begin 0x14a0
000000000000829c         db         0x10, 0x03, 2 dup (0x00)                    ; length 0x310 (end at 0x17b0)
00000000000082a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000082a1         db  0x0e ; '.'
00000000000082a2         db  0x10 ; '.'
00000000000082a3         db  0x46 ; 'F'
00000000000082a4         db  0x0e ; '.'
00000000000082a5         db  0x18 ; '.'
00000000000082a6         db  0x4a ; 'J'
00000000000082a7         db  0x0f ; '.'
00000000000082a8         db  0x0b ; '.'
00000000000082a9         db  0x77 ; 'w'
00000000000082aa         db  0x08 ; '.'
00000000000082ab         db  0x80 ; '.'
00000000000082ac         db  0x00 ; '.'
00000000000082ad         db  0x3f ; '?'
00000000000082ae         db  0x1a ; '.'
00000000000082af         db  0x3b ; ';'
00000000000082b0         db  0x2a ; '*'
00000000000082b1         db  0x33 ; '3'
00000000000082b2         db  0x24 ; '$'
00000000000082b3         db  0x22 ; '"'
00000000000082b4         db  0x00 ; '.'
00000000000082b5         db  0x00 ; '.'
00000000000082b6         db  0x00 ; '.'
00000000000082b7         db  0x00 ; '.'
00000000000082b8         dd         0x00000014                                  ; Length of the record
00000000000082bc         dd         0x00000044                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000082c0         db         0xf0, 0x94, 2 dup (0xff)                    ; begin 0x17b0
00000000000082c4         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x17b8)
00000000000082c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000082c9         align      16
00000000000082d0         dd         0x00000010                                  ; Length of the record
00000000000082d4         dd         0x0000005c                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000082d8         db         0xc8, 0x9a, 2 dup (0xff)                    ; begin 0x1da0
00000000000082dc         db         0x8b, 3 dup (0x00)                          ; length 0x8b (end at 0x1e2b)
00000000000082e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000082e1         align      4
00000000000082e4         dd         0x00000024                                  ; Length of the record
00000000000082e8         dd         0x00000070                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000082ec         db         0x44, 0x9b, 2 dup (0xff)                    ; begin 0x1e30
00000000000082f0         db         0x43, 3 dup (0x00)                          ; length 0x43 (end at 0x1e73)
00000000000082f4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000082f5         db  0x41 ; 'A'
00000000000082f6         db  0x0e ; '.'
00000000000082f7         db  0x10 ; '.'
00000000000082f8         db  0x86 ; '.'
00000000000082f9         db  0x02 ; '.'
00000000000082fa         db  0x41 ; 'A'
00000000000082fb         db  0x0e ; '.'
00000000000082fc         db  0x18 ; '.'
00000000000082fd         db  0x83 ; '.'
00000000000082fe         db  0x03 ; '.'
00000000000082ff         db  0x46 ; 'F'
0000000000008300         db  0x0e ; '.'
0000000000008301         db  0x20 ; ' '
0000000000008302         db  0x75 ; 'u'
0000000000008303         db  0x0e ; '.'
0000000000008304         db  0x18 ; '.'
0000000000008305         db  0x44 ; 'D'
0000000000008306         db  0x0e ; '.'
0000000000008307         db  0x10 ; '.'
0000000000008308         db  0x41 ; 'A'
0000000000008309         db  0x0e ; '.'
000000000000830a         db  0x08 ; '.'
000000000000830b         db  0x00 ; '.'
000000000000830c         dd         0x00000028                                  ; Length of the record
0000000000008310         dd         0x00000098                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008314         db         0x6c, 0x9b, 2 dup (0xff)                    ; begin 0x1e80
0000000000008318         db         0xa5, 3 dup (0x00)                          ; length 0xa5 (end at 0x1f25)
000000000000831c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000831d         db  0x41 ; 'A'
000000000000831e         db  0x0e ; '.'
000000000000831f         db  0x10 ; '.'
0000000000008320         db  0x86 ; '.'
0000000000008321         db  0x02 ; '.'
0000000000008322         db  0x41 ; 'A'
0000000000008323         db  0x0e ; '.'
0000000000008324         db  0x18 ; '.'
0000000000008325         db  0x83 ; '.'
0000000000008326         db  0x03 ; '.'
0000000000008327         db  0x52 ; 'R'
0000000000008328         db  0x0e ; '.'
0000000000008329         db  0xc0 ; '.'
000000000000832a         db  0x01 ; '.'
000000000000832b         db  0x02 ; '.'
000000000000832c         db  0x4a ; 'J'
000000000000832d         db  0x0a ; '.'
000000000000832e         db  0x0e ; '.'
000000000000832f         db  0x18 ; '.'
0000000000008330         db  0x41 ; 'A'
0000000000008331         db  0x0e ; '.'
0000000000008332         db  0x10 ; '.'
0000000000008333         db  0x41 ; 'A'
0000000000008334         db  0x0e ; '.'
0000000000008335         db  0x08 ; '.'
0000000000008336         db  0x41 ; 'A'
0000000000008337         db  0x0b ; '.'
0000000000008338         dd         0x00000028                                  ; Length of the record
000000000000833c         dd         0x000000c4                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008340         db         0xf0, 0x9b, 2 dup (0xff)                    ; begin 0x1f30
0000000000008344         db         0x6a, 0x03, 2 dup (0x00)                    ; length 0x36a (end at 0x229a)
0000000000008348         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008349         db  0x42 ; 'B'
000000000000834a         db  0x0e ; '.'
000000000000834b         db  0x10 ; '.'
000000000000834c         db  0x8d ; '.'
000000000000834d         db  0x02 ; '.'
000000000000834e         db  0x42 ; 'B'
000000000000834f         db  0x0e ; '.'
0000000000008350         db  0x18 ; '.'
0000000000008351         db  0x8c ; '.'
0000000000008352         db  0x03 ; '.'
0000000000008353         db  0x46 ; 'F'
0000000000008354         db  0x0e ; '.'
0000000000008355         db  0x20 ; ' '
0000000000008356         db  0x86 ; '.'
0000000000008357         db  0x04 ; '.'
0000000000008358         db  0x41 ; 'A'
0000000000008359         db  0x0e ; '.'
000000000000835a         db  0x28 ; '('
000000000000835b         db  0x83 ; '.'
000000000000835c         db  0x05 ; '.'
000000000000835d         db  0x49 ; 'I'
000000000000835e         db  0x0e ; '.'
000000000000835f         db  0xb0 ; '.'
0000000000008360         db  0x01 ; '.'
0000000000008361         db  0x00 ; '.'
0000000000008362         db  0x00 ; '.'
0000000000008363         db  0x00 ; '.'
0000000000008364         dd         0x00000048                                  ; Length of the record
0000000000008368         dd         0x000000f0                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
000000000000836c         db         0x54, 0x94, 2 dup (0xff)                    ; begin 0x17c0
0000000000008370         db         0xc2, 0x04, 2 dup (0x00)                    ; length 0x4c2 (end at 0x1c82)
0000000000008374         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008375         db  0x42 ; 'B'
0000000000008376         db  0x0e ; '.'
0000000000008377         db  0x10 ; '.'
0000000000008378         db  0x8f ; '.'
0000000000008379         db  0x02 ; '.'
000000000000837a         db  0x42 ; 'B'
000000000000837b         db  0x0e ; '.'
000000000000837c         db  0x18 ; '.'
000000000000837d         db  0x8e ; '.'
000000000000837e         db  0x03 ; '.'
000000000000837f         db  0x45 ; 'E'
0000000000008380         db  0x0e ; '.'
0000000000008381         db  0x20 ; ' '
0000000000008382         db  0x8d ; '.'
0000000000008383         db  0x04 ; '.'
0000000000008384         db  0x42 ; 'B'
0000000000008385         db  0x0e ; '.'
0000000000008386         db  0x28 ; '('
0000000000008387         db  0x8c ; '.'
0000000000008388         db  0x05 ; '.'
0000000000008389         db  0x44 ; 'D'
000000000000838a         db  0x0e ; '.'
000000000000838b         db  0x30 ; '0'
000000000000838c         db  0x86 ; '.'
000000000000838d         db  0x06 ; '.'
000000000000838e         db  0x41 ; 'A'
000000000000838f         db  0x0e ; '.'
0000000000008390         db  0x38 ; '8'
0000000000008391         db  0x83 ; '.'
0000000000008392         db  0x07 ; '.'
0000000000008393         db  0x56 ; 'V'
0000000000008394         db  0x0e ; '.'
0000000000008395         db  0x40 ; '@'
0000000000008396         db  0x03 ; '.'
0000000000008397         db  0x46 ; 'F'
0000000000008398         db  0x03 ; '.'
0000000000008399         db  0x0a ; '.'
000000000000839a         db  0x0e ; '.'
000000000000839b         db  0x38 ; '8'
000000000000839c         db  0x45 ; 'E'
000000000000839d         db  0x0e ; '.'
000000000000839e         db  0x30 ; '0'
000000000000839f         db  0x41 ; 'A'
00000000000083a0         db  0x0e ; '.'
00000000000083a1         db  0x28 ; '('
00000000000083a2         db  0x42 ; 'B'
00000000000083a3         db  0x0e ; '.'
00000000000083a4         db  0x20 ; ' '
00000000000083a5         db  0x42 ; 'B'
00000000000083a6         db  0x0e ; '.'
00000000000083a7         db  0x18 ; '.'
00000000000083a8         db  0x42 ; 'B'
00000000000083a9         db  0x0e ; '.'
00000000000083aa         db  0x10 ; '.'
00000000000083ab         db  0x42 ; 'B'
00000000000083ac         db  0x0e ; '.'
00000000000083ad         db  0x08 ; '.'
00000000000083ae         db  0x41 ; 'A'
00000000000083af         db  0x0b ; '.'
00000000000083b0         dd         0x0000005c                                  ; Length of the record
00000000000083b4         dd         0x0000013c                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000083b8         db         0xe8, 0x9e, 2 dup (0xff)                    ; begin 0x22a0
00000000000083bc         db         0x77, 3 dup (0x00)                          ; length 0x77 (end at 0x2317)
00000000000083c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000083c1         db  0x42 ; 'B'
00000000000083c2         db  0x0e ; '.'
00000000000083c3         db  0x10 ; '.'
00000000000083c4         db  0x8e ; '.'
00000000000083c5         db  0x02 ; '.'
00000000000083c6         db  0x42 ; 'B'
00000000000083c7         db  0x0e ; '.'
00000000000083c8         db  0x18 ; '.'
00000000000083c9         db  0x8d ; '.'
00000000000083ca         db  0x03 ; '.'
00000000000083cb         db  0x45 ; 'E'
00000000000083cc         db  0x0e ; '.'
00000000000083cd         db  0x20 ; ' '
00000000000083ce         db  0x8c ; '.'
00000000000083cf         db  0x04 ; '.'
00000000000083d0         db  0x41 ; 'A'
00000000000083d1         db  0x0e ; '.'
00000000000083d2         db  0x28 ; '('
00000000000083d3         db  0x86 ; '.'
00000000000083d4         db  0x05 ; '.'
00000000000083d5         db  0x41 ; 'A'
00000000000083d6         db  0x0e ; '.'
00000000000083d7         db  0x30 ; '0'
00000000000083d8         db  0x83 ; '.'
00000000000083d9         db  0x06 ; '.'
00000000000083da         db  0x62 ; 'b'
00000000000083db         db  0x0a ; '.'
00000000000083dc         db  0x0e ; '.'
00000000000083dd         db  0x28 ; '('
00000000000083de         db  0x41 ; 'A'
00000000000083df         db  0x0e ; '.'
00000000000083e0         db  0x20 ; ' '
00000000000083e1         db  0x42 ; 'B'
00000000000083e2         db  0x0e ; '.'
00000000000083e3         db  0x18 ; '.'
00000000000083e4         db  0x42 ; 'B'
00000000000083e5         db  0x0e ; '.'
00000000000083e6         db  0x10 ; '.'
00000000000083e7         db  0x42 ; 'B'
00000000000083e8         db  0x0e ; '.'
00000000000083e9         db  0x08 ; '.'
00000000000083ea         db  0x44 ; 'D'
00000000000083eb         db  0x0b ; '.'
00000000000083ec         db  0x59 ; 'Y'
00000000000083ed         db  0x0a ; '.'
00000000000083ee         db  0x0e ; '.'
00000000000083ef         db  0x28 ; '('
00000000000083f0         db  0x41 ; 'A'
00000000000083f1         db  0x0e ; '.'
00000000000083f2         db  0x20 ; ' '
00000000000083f3         db  0x42 ; 'B'
00000000000083f4         db  0x0e ; '.'
00000000000083f5         db  0x18 ; '.'
00000000000083f6         db  0x42 ; 'B'
00000000000083f7         db  0x0e ; '.'
00000000000083f8         db  0x10 ; '.'
00000000000083f9         db  0x42 ; 'B'
00000000000083fa         db  0x0e ; '.'
00000000000083fb         db  0x08 ; '.'
00000000000083fc         db  0x48 ; 'H'
00000000000083fd         db  0x0b ; '.'
00000000000083fe         db  0x4d ; 'M'
00000000000083ff         db  0x0e ; '.'
0000000000008400         db  0x28 ; '('
0000000000008401         db  0x43 ; 'C'
0000000000008402         db  0x0e ; '.'
0000000000008403         db  0x20 ; ' '
0000000000008404         db  0x42 ; 'B'
0000000000008405         db  0x0e ; '.'
0000000000008406         db  0x18 ; '.'
0000000000008407         db  0x42 ; 'B'
0000000000008408         db  0x0e ; '.'
0000000000008409         db  0x10 ; '.'
000000000000840a         db  0x42 ; 'B'
000000000000840b         db  0x0e ; '.'
000000000000840c         db  0x08 ; '.'
000000000000840d         db  0x00 ; '.'
000000000000840e         db  0x00 ; '.'
000000000000840f         db  0x00 ; '.'
0000000000008410         dd         0x00000064                                  ; Length of the record
0000000000008414         dd         0x0000019c                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008418         db         0x08, 0x9f, 2 dup (0xff)                    ; begin 0x2320
000000000000841c         db         0x37, 0x02, 2 dup (0x00)                    ; length 0x237 (end at 0x2557)
0000000000008420         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008421         db  0x42 ; 'B'
0000000000008422         db  0x0e ; '.'
0000000000008423         db  0x10 ; '.'
0000000000008424         db  0x8f ; '.'
0000000000008425         db  0x02 ; '.'
0000000000008426         db  0x42 ; 'B'
0000000000008427         db  0x0e ; '.'
0000000000008428         db  0x18 ; '.'
0000000000008429         db  0x8e ; '.'
000000000000842a         db  0x03 ; '.'
000000000000842b         db  0x42 ; 'B'
000000000000842c         db  0x0e ; '.'
000000000000842d         db  0x20 ; ' '
000000000000842e         db  0x8d ; '.'
000000000000842f         db  0x04 ; '.'
0000000000008430         db  0x42 ; 'B'
0000000000008431         db  0x0e ; '.'
0000000000008432         db  0x28 ; '('
0000000000008433         db  0x8c ; '.'
0000000000008434         db  0x05 ; '.'
0000000000008435         db  0x41 ; 'A'
0000000000008436         db  0x0e ; '.'
0000000000008437         db  0x30 ; '0'
0000000000008438         db  0x86 ; '.'
0000000000008439         db  0x06 ; '.'
000000000000843a         db  0x41 ; 'A'
000000000000843b         db  0x0e ; '.'
000000000000843c         db  0x38 ; '8'
000000000000843d         db  0x83 ; '.'
000000000000843e         db  0x07 ; '.'
000000000000843f         db  0x44 ; 'D'
0000000000008440         db  0x0e ; '.'
0000000000008441         db  0x50 ; 'P'
0000000000008442         db  0x6b ; 'k'
0000000000008443         db  0x0a ; '.'
0000000000008444         db  0x0e ; '.'
0000000000008445         db  0x38 ; '8'
0000000000008446         db  0x41 ; 'A'
0000000000008447         db  0x0e ; '.'
0000000000008448         db  0x30 ; '0'
0000000000008449         db  0x41 ; 'A'
000000000000844a         db  0x0e ; '.'
000000000000844b         db  0x28 ; '('
000000000000844c         db  0x42 ; 'B'
000000000000844d         db  0x0e ; '.'
000000000000844e         db  0x20 ; ' '
000000000000844f         db  0x42 ; 'B'
0000000000008450         db  0x0e ; '.'
0000000000008451         db  0x18 ; '.'
0000000000008452         db  0x42 ; 'B'
0000000000008453         db  0x0e ; '.'
0000000000008454         db  0x10 ; '.'
0000000000008455         db  0x42 ; 'B'
0000000000008456         db  0x0e ; '.'
0000000000008457         db  0x08 ; '.'
0000000000008458         db  0x45 ; 'E'
0000000000008459         db  0x0b ; '.'
000000000000845a         db  0x02 ; '.'
000000000000845b         db  0xd9 ; '.'
000000000000845c         db  0x0a ; '.'
000000000000845d         db  0x0e ; '.'
000000000000845e         db  0x38 ; '8'
000000000000845f         db  0x43 ; 'C'
0000000000008460         db  0x0e ; '.'
0000000000008461         db  0x30 ; '0'
0000000000008462         db  0x44 ; 'D'
0000000000008463         db  0x0e ; '.'
0000000000008464         db  0x28 ; '('
0000000000008465         db  0x42 ; 'B'
0000000000008466         db  0x0e ; '.'
0000000000008467         db  0x20 ; ' '
0000000000008468         db  0x42 ; 'B'
0000000000008469         db  0x0e ; '.'
000000000000846a         db  0x18 ; '.'
000000000000846b         db  0x42 ; 'B'
000000000000846c         db  0x0e ; '.'
000000000000846d         db  0x10 ; '.'
000000000000846e         db  0x42 ; 'B'
000000000000846f         db  0x0e ; '.'
0000000000008470         db  0x08 ; '.'
0000000000008471         db  0x48 ; 'H'
0000000000008472         db  0x0b ; '.'
0000000000008473         db  0x00 ; '.'
0000000000008474         db  0x00 ; '.'
0000000000008475         db  0x00 ; '.'
0000000000008476         db  0x00 ; '.'
0000000000008477         db  0x00 ; '.'
0000000000008478         dd         0x0000004c                                  ; Length of the record
000000000000847c         dd         0x00000204                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008480         db         0xe0, 0xa0, 2 dup (0xff)                    ; begin 0x2560
0000000000008484         db         0x36, 0x06, 2 dup (0x00)                    ; length 0x636 (end at 0x2b96)
0000000000008488         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008489         db  0x42 ; 'B'
000000000000848a         db  0x0e ; '.'
000000000000848b         db  0x10 ; '.'
000000000000848c         db  0x8f ; '.'
000000000000848d         db  0x02 ; '.'
000000000000848e         db  0x42 ; 'B'
000000000000848f         db  0x0e ; '.'
0000000000008490         db  0x18 ; '.'
0000000000008491         db  0x8e ; '.'
0000000000008492         db  0x03 ; '.'
0000000000008493         db  0x42 ; 'B'
0000000000008494         db  0x0e ; '.'
0000000000008495         db  0x20 ; ' '
0000000000008496         db  0x8d ; '.'
0000000000008497         db  0x04 ; '.'
0000000000008498         db  0x42 ; 'B'
0000000000008499         db  0x0e ; '.'
000000000000849a         db  0x28 ; '('
000000000000849b         db  0x8c ; '.'
000000000000849c         db  0x05 ; '.'
000000000000849d         db  0x41 ; 'A'
000000000000849e         db  0x0e ; '.'
000000000000849f         db  0x30 ; '0'
00000000000084a0         db  0x86 ; '.'
00000000000084a1         db  0x06 ; '.'
00000000000084a2         db  0x41 ; 'A'
00000000000084a3         db  0x0e ; '.'
00000000000084a4         db  0x38 ; '8'
00000000000084a5         db  0x83 ; '.'
00000000000084a6         db  0x07 ; '.'
00000000000084a7         db  0x47 ; 'G'
00000000000084a8         db  0x0e ; '.'
00000000000084a9         db  0xa0 ; '.'
00000000000084aa         db  0x02 ; '.'
00000000000084ab         db  0x03 ; '.'
00000000000084ac         db  0x30 ; '0'
00000000000084ad         db  0x02 ; '.'
00000000000084ae         db  0x0a ; '.'
00000000000084af         db  0x0e ; '.'
00000000000084b0         db  0x38 ; '8'
00000000000084b1         db  0x41 ; 'A'
00000000000084b2         db  0x0e ; '.'
00000000000084b3         db  0x30 ; '0'
00000000000084b4         db  0x41 ; 'A'
00000000000084b5         db  0x0e ; '.'
00000000000084b6         db  0x28 ; '('
00000000000084b7         db  0x42 ; 'B'
00000000000084b8         db  0x0e ; '.'
00000000000084b9         db  0x20 ; ' '
00000000000084ba         db  0x42 ; 'B'
00000000000084bb         db  0x0e ; '.'
00000000000084bc         db  0x18 ; '.'
00000000000084bd         db  0x42 ; 'B'
00000000000084be         db  0x0e ; '.'
00000000000084bf         db  0x10 ; '.'
00000000000084c0         db  0x42 ; 'B'
00000000000084c1         db  0x0e ; '.'
00000000000084c2         db  0x08 ; '.'
00000000000084c3         db  0x45 ; 'E'
00000000000084c4         db  0x0b ; '.'
00000000000084c5         db  0x00 ; '.'
00000000000084c6         db  0x00 ; '.'
00000000000084c7         db  0x00 ; '.'
00000000000084c8         dd         0x00000010                                  ; Length of the record
00000000000084cc         dd         0x00000254                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000084d0         db         0xd0, 0xa6, 2 dup (0xff)                    ; begin 0x2ba0
00000000000084d4         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2ba8)
00000000000084d8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000084d9         align      4
00000000000084dc         dd         0x00000010                                  ; Length of the record
00000000000084e0         dd         0x00000268                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000084e4         db         0xcc, 0xa6, 2 dup (0xff)                    ; begin 0x2bb0
00000000000084e8         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2bb8)
00000000000084ec         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000084ed         align      16
00000000000084f0         dd         0x0000002c                                  ; Length of the record
00000000000084f4         dd         0x0000027c                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000084f8         db         0xc8, 0xa6, 2 dup (0xff)                    ; begin 0x2bc0
00000000000084fc         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x2c64)
0000000000008500         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008501         db  0x41 ; 'A'
0000000000008502         db  0x0e ; '.'
0000000000008503         db  0x10 ; '.'
0000000000008504         db  0x86 ; '.'
0000000000008505         db  0x02 ; '.'
0000000000008506         db  0x41 ; 'A'
0000000000008507         db  0x0e ; '.'
0000000000008508         db  0x18 ; '.'
0000000000008509         db  0x83 ; '.'
000000000000850a         db  0x03 ; '.'
000000000000850b         db  0x44 ; 'D'
000000000000850c         db  0x0e ; '.'
000000000000850d         db  0x20 ; ' '
000000000000850e         db  0x7a ; 'z'
000000000000850f         db  0x0a ; '.'
0000000000008510         db  0x0e ; '.'
0000000000008511         db  0x18 ; '.'
0000000000008512         db  0x41 ; 'A'
0000000000008513         db  0x0e ; '.'
0000000000008514         db  0x10 ; '.'
0000000000008515         db  0x41 ; 'A'
0000000000008516         db  0x0e ; '.'
0000000000008517         db  0x08 ; '.'
0000000000008518         db  0x41 ; 'A'
0000000000008519         db  0x0b ; '.'
000000000000851a         db  0x00 ; '.'
000000000000851b         db  0x00 ; '.'
000000000000851c         db  0x00 ; '.'
000000000000851d         db  0x00 ; '.'
000000000000851e         db  0x00 ; '.'
000000000000851f         db  0x00 ; '.'
0000000000008520         dd         0x0000005c                                  ; Length of the record
0000000000008524         dd         0x000002ac                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008528         db         0x48, 0xa7, 2 dup (0xff)                    ; begin 0x2c70
000000000000852c         db         0x87, 3 dup (0x00)                          ; length 0x87 (end at 0x2cf7)
0000000000008530         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008531         db  0x47 ; 'G'
0000000000008532         db  0x0e ; '.'
0000000000008533         db  0x10 ; '.'
0000000000008534         db  0x8d ; '.'
0000000000008535         db  0x02 ; '.'
0000000000008536         db  0x42 ; 'B'
0000000000008537         db  0x0e ; '.'
0000000000008538         db  0x18 ; '.'
0000000000008539         db  0x8c ; '.'
000000000000853a         db  0x03 ; '.'
000000000000853b         db  0x44 ; 'D'
000000000000853c         db  0x0e ; '.'
000000000000853d         db  0x20 ; ' '
000000000000853e         db  0x86 ; '.'
000000000000853f         db  0x04 ; '.'
0000000000008540         db  0x41 ; 'A'
0000000000008541         db  0x0e ; '.'
0000000000008542         db  0x28 ; '('
0000000000008543         db  0x83 ; '.'
0000000000008544         db  0x05 ; '.'
0000000000008545         db  0x4f ; 'O'
0000000000008546         db  0x0e ; '.'
0000000000008547         db  0x30 ; '0'
0000000000008548         db  0x7c ; '|'
0000000000008549         db  0x0a ; '.'
000000000000854a         db  0x0e ; '.'
000000000000854b         db  0x28 ; '('
000000000000854c         db  0x44 ; 'D'
000000000000854d         db  0xc3 ; '.'
000000000000854e         db  0x0e ; '.'
000000000000854f         db  0x20 ; ' '
0000000000008550         db  0x41 ; 'A'
0000000000008551         db  0xc6 ; '.'
0000000000008552         db  0x0e ; '.'
0000000000008553         db  0x18 ; '.'
0000000000008554         db  0x42 ; 'B'
0000000000008555         db  0xcc ; '.'
0000000000008556         db  0x0e ; '.'
0000000000008557         db  0x10 ; '.'
0000000000008558         db  0x42 ; 'B'
0000000000008559         db  0xcd ; '.'
000000000000855a         db  0x0e ; '.'
000000000000855b         db  0x08 ; '.'
000000000000855c         db  0x4e ; 'N'
000000000000855d         db  0x0b ; '.'
000000000000855e         db  0x44 ; 'D'
000000000000855f         db  0x0e ; '.'
0000000000008560         db  0x28 ; '('
0000000000008561         db  0x41 ; 'A'
0000000000008562         db  0x0e ; '.'
0000000000008563         db  0x20 ; ' '
0000000000008564         db  0x41 ; 'A'
0000000000008565         db  0x0e ; '.'
0000000000008566         db  0x18 ; '.'
0000000000008567         db  0x42 ; 'B'
0000000000008568         db  0x0e ; '.'
0000000000008569         db  0x10 ; '.'
000000000000856a         db  0x42 ; 'B'
000000000000856b         db  0x0e ; '.'
000000000000856c         db  0x08 ; '.'
000000000000856d         db  0x46 ; 'F'
000000000000856e         db  0xc3 ; '.'
000000000000856f         db  0xc6 ; '.'
0000000000008570         db  0xcc ; '.'
0000000000008571         db  0xcd ; '.'
0000000000008572         db  0x42 ; 'B'
0000000000008573         db  0x0e ; '.'
0000000000008574         db  0x30 ; '0'
0000000000008575         db  0x83 ; '.'
0000000000008576         db  0x05 ; '.'
0000000000008577         db  0x86 ; '.'
0000000000008578         db  0x04 ; '.'
0000000000008579         db  0x8c ; '.'
000000000000857a         db  0x03 ; '.'
000000000000857b         db  0x8d ; '.'
000000000000857c         db  0x02 ; '.'
000000000000857d         db  0x00 ; '.'
000000000000857e         db  0x00 ; '.'
000000000000857f         db  0x00 ; '.'
0000000000008580         dd         0x0000001c                                  ; Length of the record
0000000000008584         dd         0x0000030c                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008588         db         0x78, 0xa7, 2 dup (0xff)                    ; begin 0x2d00
000000000000858c         db         0x56, 3 dup (0x00)                          ; length 0x56 (end at 0x2d56)
0000000000008590         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008591         db  0x44 ; 'D'
0000000000008592         db  0x0e ; '.'
0000000000008593         db  0x30 ; '0'
0000000000008594         db  0x02 ; '.'
0000000000008595         db  0x4c ; 'L'
0000000000008596         db  0x0a ; '.'
0000000000008597         db  0x0e ; '.'
0000000000008598         db  0x08 ; '.'
0000000000008599         db  0x41 ; 'A'
000000000000859a         db  0x0b ; '.'
000000000000859b         db  0x00 ; '.'
000000000000859c         db  0x00 ; '.'
000000000000859d         db  0x00 ; '.'
000000000000859e         db  0x00 ; '.'
000000000000859f         db  0x00 ; '.'
00000000000085a0         dd         0x00000010                                  ; Length of the record
00000000000085a4         dd         0x0000032c                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000085a8         db         0xb8, 0xa7, 2 dup (0xff)                    ; begin 0x2d60
00000000000085ac         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x2df3)
00000000000085b0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000085b1         align      4
00000000000085b4         dd         0x00000010                                  ; Length of the record
00000000000085b8         dd         0x00000340                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000085bc         db         0x44, 0xa8, 2 dup (0xff)                    ; begin 0x2e00
00000000000085c0         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x2e10)
00000000000085c4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000085c5         align      8
00000000000085c8         dd         0x00000010                                  ; Length of the record
00000000000085cc         dd         0x00000354                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000085d0         db         0x40, 0xa8, 2 dup (0xff)                    ; begin 0x2e10
00000000000085d4         db         0x07, 3 dup (0x00)                          ; length 0x7 (end at 0x2e17)
00000000000085d8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000085d9         align      4
00000000000085dc         dd         0x00000018                                  ; Length of the record
00000000000085e0         dd         0x00000368                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000085e4         db         0x3c, 0xa8, 2 dup (0xff)                    ; begin 0x2e20
00000000000085e8         db         0x22, 3 dup (0x00)                          ; length 0x22 (end at 0x2e42)
00000000000085ec         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000085ed         db  0x41 ; 'A'
00000000000085ee         db  0x0e ; '.'
00000000000085ef         db  0x10 ; '.'
00000000000085f0         db  0x83 ; '.'
00000000000085f1         db  0x02 ; '.'
00000000000085f2         db  0x5b ; '['
00000000000085f3         db  0x0a ; '.'
00000000000085f4         db  0x0e ; '.'
00000000000085f5         db  0x08 ; '.'
00000000000085f6         db  0x41 ; 'A'
00000000000085f7         db  0x0b ; '.'
00000000000085f8         dd         0x0000005c                                  ; Length of the record
00000000000085fc         dd         0x00000384                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008600         db         0x50, 0xa8, 2 dup (0xff)                    ; begin 0x2e50
0000000000008604         db         0x1e, 0x01, 2 dup (0x00)                    ; length 0x11e (end at 0x2f6e)
0000000000008608         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008609         db  0x42 ; 'B'
000000000000860a         db  0x0e ; '.'
000000000000860b         db  0x10 ; '.'
000000000000860c         db  0x8e ; '.'
000000000000860d         db  0x02 ; '.'
000000000000860e         db  0x42 ; 'B'
000000000000860f         db  0x0e ; '.'
0000000000008610         db  0x18 ; '.'
0000000000008611         db  0x8d ; '.'
0000000000008612         db  0x03 ; '.'
0000000000008613         db  0x45 ; 'E'
0000000000008614         db  0x0e ; '.'
0000000000008615         db  0x20 ; ' '
0000000000008616         db  0x8c ; '.'
0000000000008617         db  0x04 ; '.'
0000000000008618         db  0x41 ; 'A'
0000000000008619         db  0x0e ; '.'
000000000000861a         db  0x28 ; '('
000000000000861b         db  0x86 ; '.'
000000000000861c         db  0x05 ; '.'
000000000000861d         db  0x44 ; 'D'
000000000000861e         db  0x0e ; '.'
000000000000861f         db  0x30 ; '0'
0000000000008620         db  0x83 ; '.'
0000000000008621         db  0x06 ; '.'
0000000000008622         db  0x02 ; '.'
0000000000008623         db  0xa1 ; '.'
0000000000008624         db  0x0a ; '.'
0000000000008625         db  0x0e ; '.'
0000000000008626         db  0x28 ; '('
0000000000008627         db  0x44 ; 'D'
0000000000008628         db  0x0e ; '.'
0000000000008629         db  0x20 ; ' '
000000000000862a         db  0x42 ; 'B'
000000000000862b         db  0x0e ; '.'
000000000000862c         db  0x18 ; '.'
000000000000862d         db  0x42 ; 'B'
000000000000862e         db  0x0e ; '.'
000000000000862f         db  0x10 ; '.'
0000000000008630         db  0x42 ; 'B'
0000000000008631         db  0x0e ; '.'
0000000000008632         db  0x08 ; '.'
0000000000008633         db  0x47 ; 'G'
0000000000008634         db  0x0b ; '.'
0000000000008635         db  0x71 ; 'q'
0000000000008636         db  0x0a ; '.'
0000000000008637         db  0x0e ; '.'
0000000000008638         db  0x28 ; '('
0000000000008639         db  0x41 ; 'A'
000000000000863a         db  0x0e ; '.'
000000000000863b         db  0x20 ; ' '
000000000000863c         db  0x42 ; 'B'
000000000000863d         db  0x0e ; '.'
000000000000863e         db  0x18 ; '.'
000000000000863f         db  0x42 ; 'B'
0000000000008640         db  0x0e ; '.'
0000000000008641         db  0x10 ; '.'
0000000000008642         db  0x42 ; 'B'
0000000000008643         db  0x0e ; '.'
0000000000008644         db  0x08 ; '.'
0000000000008645         db  0x48 ; 'H'
0000000000008646         db  0x0b ; '.'
0000000000008647         db  0x53 ; 'S'
0000000000008648         db  0x0e ; '.'
0000000000008649         db  0x28 ; '('
000000000000864a         db  0x44 ; 'D'
000000000000864b         db  0x0e ; '.'
000000000000864c         db  0x20 ; ' '
000000000000864d         db  0x42 ; 'B'
000000000000864e         db  0x0e ; '.'
000000000000864f         db  0x18 ; '.'
0000000000008650         db  0x42 ; 'B'
0000000000008651         db  0x0e ; '.'
0000000000008652         db  0x10 ; '.'
0000000000008653         db  0x42 ; 'B'
0000000000008654         db  0x0e ; '.'
0000000000008655         db  0x08 ; '.'
0000000000008656         db  0x00 ; '.'
0000000000008657         db  0x00 ; '.'
0000000000008658         dd         0x00000010                                  ; Length of the record
000000000000865c         dd         0x000003e4                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008660         db         0x10, 0xa9, 2 dup (0xff)                    ; begin 0x2f70
0000000000008664         db         0x77, 3 dup (0x00)                          ; length 0x77 (end at 0x2fe7)
0000000000008668         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008669         align      4
000000000000866c         dd         0x0000005c                                  ; Length of the record
0000000000008670         dd         0x000003f8                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008674         db         0x7c, 0xa9, 2 dup (0xff)                    ; begin 0x2ff0
0000000000008678         db         0x40, 0x01, 2 dup (0x00)                    ; length 0x140 (end at 0x3130)
000000000000867c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000867d         db  0x42 ; 'B'
000000000000867e         db  0x0e ; '.'
000000000000867f         db  0x10 ; '.'
0000000000008680         db  0x8f ; '.'
0000000000008681         db  0x02 ; '.'
0000000000008682         db  0x42 ; 'B'
0000000000008683         db  0x0e ; '.'
0000000000008684         db  0x18 ; '.'
0000000000008685         db  0x8e ; '.'
0000000000008686         db  0x03 ; '.'
0000000000008687         db  0x42 ; 'B'
0000000000008688         db  0x0e ; '.'
0000000000008689         db  0x20 ; ' '
000000000000868a         db  0x8d ; '.'
000000000000868b         db  0x04 ; '.'
000000000000868c         db  0x42 ; 'B'
000000000000868d         db  0x0e ; '.'
000000000000868e         db  0x28 ; '('
000000000000868f         db  0x8c ; '.'
0000000000008690         db  0x05 ; '.'
0000000000008691         db  0x41 ; 'A'
0000000000008692         db  0x0e ; '.'
0000000000008693         db  0x30 ; '0'
0000000000008694         db  0x86 ; '.'
0000000000008695         db  0x06 ; '.'
0000000000008696         db  0x41 ; 'A'
0000000000008697         db  0x0e ; '.'
0000000000008698         db  0x38 ; '8'
0000000000008699         db  0x83 ; '.'
000000000000869a         db  0x07 ; '.'
000000000000869b         db  0x44 ; 'D'
000000000000869c         db  0x0e ; '.'
000000000000869d         db  0x40 ; '@'
000000000000869e         db  0x02 ; '.'
000000000000869f         db  0xee ; '.'
00000000000086a0         db  0x0a ; '.'
00000000000086a1         db  0x0e ; '.'
00000000000086a2         db  0x38 ; '8'
00000000000086a3         db  0x46 ; 'F'
00000000000086a4         db  0x0e ; '.'
00000000000086a5         db  0x30 ; '0'
00000000000086a6         db  0x41 ; 'A'
00000000000086a7         db  0x0e ; '.'
00000000000086a8         db  0x28 ; '('
00000000000086a9         db  0x42 ; 'B'
00000000000086aa         db  0x0e ; '.'
00000000000086ab         db  0x20 ; ' '
00000000000086ac         db  0x42 ; 'B'
00000000000086ad         db  0x0e ; '.'
00000000000086ae         db  0x18 ; '.'
00000000000086af         db  0x42 ; 'B'
00000000000086b0         db  0x0e ; '.'
00000000000086b1         db  0x10 ; '.'
00000000000086b2         db  0x42 ; 'B'
00000000000086b3         db  0x0e ; '.'
00000000000086b4         db  0x08 ; '.'
00000000000086b5         db  0x45 ; 'E'
00000000000086b6         db  0x0b ; '.'
00000000000086b7         db  0x63 ; 'c'
00000000000086b8         db  0x0e ; '.'
00000000000086b9         db  0x38 ; '8'
00000000000086ba         db  0x43 ; 'C'
00000000000086bb         db  0x0e ; '.'
00000000000086bc         db  0x30 ; '0'
00000000000086bd         db  0x41 ; 'A'
00000000000086be         db  0x0e ; '.'
00000000000086bf         db  0x28 ; '('
00000000000086c0         db  0x42 ; 'B'
00000000000086c1         db  0x0e ; '.'
00000000000086c2         db  0x20 ; ' '
00000000000086c3         db  0x42 ; 'B'
00000000000086c4         db  0x0e ; '.'
00000000000086c5         db  0x18 ; '.'
00000000000086c6         db  0x42 ; 'B'
00000000000086c7         db  0x0e ; '.'
00000000000086c8         db  0x10 ; '.'
00000000000086c9         db  0x42 ; 'B'
00000000000086ca         db  0x0e ; '.'
00000000000086cb         db  0x08 ; '.'
00000000000086cc         dd         0x00000010                                  ; Length of the record
00000000000086d0         dd         0x00000458                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000086d4         db         0x5c, 0xaa, 2 dup (0xff)                    ; begin 0x3130
00000000000086d8         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x3135)
00000000000086dc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000086dd         align      32
00000000000086e0         dd         0x00000010                                  ; Length of the record
00000000000086e4         dd         0x0000046c                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000086e8         db         0x58, 0xaa, 2 dup (0xff)                    ; begin 0x3140
00000000000086ec         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x3145)
00000000000086f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000086f1         align      4
00000000000086f4         dd         0x00000010                                  ; Length of the record
00000000000086f8         dd         0x00000480                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000086fc         db         0x54, 0xaa, 2 dup (0xff)                    ; begin 0x3150
0000000000008700         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x3155)
0000000000008704         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008705         align      8
0000000000008708         dd         0x00000010                                  ; Length of the record
000000000000870c         dd         0x00000494                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008710         db         0x50, 0xaa, 2 dup (0xff)                    ; begin 0x3160
0000000000008714         db         0x49, 3 dup (0x00)                          ; length 0x49 (end at 0x31a9)
0000000000008718         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008719         align      4
000000000000871c         dd         0x00000010                                  ; Length of the record
0000000000008720         dd         0x000004a8                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008724         db         0x8c, 0xaa, 2 dup (0xff)                    ; begin 0x31b0
0000000000008728         db         0x58, 3 dup (0x00)                          ; length 0x58 (end at 0x3208)
000000000000872c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000872d         align      16
0000000000008730         dd         0x00000038                                  ; Length of the record
0000000000008734         dd         0x000004bc                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008738         db         0xd8, 0xaa, 2 dup (0xff)                    ; begin 0x3210
000000000000873c         db         0x47, 0x01, 2 dup (0x00)                    ; length 0x147 (end at 0x3357)
0000000000008740         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008741         db  0x42 ; 'B'
0000000000008742         db  0x0e ; '.'
0000000000008743         db  0x10 ; '.'
0000000000008744         db  0x8d ; '.'
0000000000008745         db  0x02 ; '.'
0000000000008746         db  0x42 ; 'B'
0000000000008747         db  0x0e ; '.'
0000000000008748         db  0x18 ; '.'
0000000000008749         db  0x8c ; '.'
000000000000874a         db  0x03 ; '.'
000000000000874b         db  0x44 ; 'D'
000000000000874c         db  0x0e ; '.'
000000000000874d         db  0x20 ; ' '
000000000000874e         db  0x86 ; '.'
000000000000874f         db  0x04 ; '.'
0000000000008750         db  0x41 ; 'A'
0000000000008751         db  0x0e ; '.'
0000000000008752         db  0x28 ; '('
0000000000008753         db  0x83 ; '.'
0000000000008754         db  0x05 ; '.'
0000000000008755         db  0x46 ; 'F'
0000000000008756         db  0x0e ; '.'
0000000000008757         db  0x30 ; '0'
0000000000008758         db  0x02 ; '.'
0000000000008759         db  0xcd ; '.'
000000000000875a         db  0x0a ; '.'
000000000000875b         db  0x0e ; '.'
000000000000875c         db  0x28 ; '('
000000000000875d         db  0x47 ; 'G'
000000000000875e         db  0x0e ; '.'
000000000000875f         db  0x20 ; ' '
0000000000008760         db  0x41 ; 'A'
0000000000008761         db  0x0e ; '.'
0000000000008762         db  0x18 ; '.'
0000000000008763         db  0x42 ; 'B'
0000000000008764         db  0x0e ; '.'
0000000000008765         db  0x10 ; '.'
0000000000008766         db  0x42 ; 'B'
0000000000008767         db  0x0e ; '.'
0000000000008768         db  0x08 ; '.'
0000000000008769         db  0x58 ; 'X'
000000000000876a         db  0x0b ; '.'
000000000000876b         db  0x00 ; '.'
000000000000876c         dd         0x00000034                                  ; Length of the record
0000000000008770         dd         0x000004f8                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008774         db         0xec, 0xab, 2 dup (0xff)                    ; begin 0x3360
0000000000008778         db         0x5b, 3 dup (0x00)                          ; length 0x5b (end at 0x33bb)
000000000000877c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000877d         db  0x42 ; 'B'
000000000000877e         db  0x0e ; '.'
000000000000877f         db  0x10 ; '.'
0000000000008780         db  0x8c ; '.'
0000000000008781         db  0x02 ; '.'
0000000000008782         db  0x41 ; 'A'
0000000000008783         db  0x0e ; '.'
0000000000008784         db  0x18 ; '.'
0000000000008785         db  0x86 ; '.'
0000000000008786         db  0x03 ; '.'
0000000000008787         db  0x44 ; 'D'
0000000000008788         db  0x0e ; '.'
0000000000008789         db  0x20 ; ' '
000000000000878a         db  0x83 ; '.'
000000000000878b         db  0x04 ; '.'
000000000000878c         db  0x79 ; 'y'
000000000000878d         db  0x0a ; '.'
000000000000878e         db  0x0e ; '.'
000000000000878f         db  0x18 ; '.'
0000000000008790         db  0x44 ; 'D'
0000000000008791         db  0x0e ; '.'
0000000000008792         db  0x10 ; '.'
0000000000008793         db  0x42 ; 'B'
0000000000008794         db  0x0e ; '.'
0000000000008795         db  0x08 ; '.'
0000000000008796         db  0x4a ; 'J'
0000000000008797         db  0x0b ; '.'
0000000000008798         db  0x44 ; 'D'
0000000000008799         db  0x0e ; '.'
000000000000879a         db  0x18 ; '.'
000000000000879b         db  0x41 ; 'A'
000000000000879c         db  0x0e ; '.'
000000000000879d         db  0x10 ; '.'
000000000000879e         db  0x45 ; 'E'
000000000000879f         db  0x0e ; '.'
00000000000087a0         db  0x08 ; '.'
00000000000087a1         db  0x00 ; '.'
00000000000087a2         db  0x00 ; '.'
00000000000087a3         db  0x00 ; '.'
00000000000087a4         dd         0x00000010                                  ; Length of the record
00000000000087a8         dd         0x00000530                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000087ac         db         0x14, 0xac, 2 dup (0xff)                    ; begin 0x33c0
00000000000087b0         db         0x41, 3 dup (0x00)                          ; length 0x41 (end at 0x3401)
00000000000087b4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000087b5         db  0x7c ; '|'
00000000000087b6         db  0x0e ; '.'
00000000000087b7         db  0x10 ; '.'
00000000000087b8         dd         0x00000030                                  ; Length of the record
00000000000087bc         dd         0x00000544                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000087c0         db         0x50, 0xac, 2 dup (0xff)                    ; begin 0x3410
00000000000087c4         db         0x72, 3 dup (0x00)                          ; length 0x72 (end at 0x3482)
00000000000087c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000087c9         db  0x41 ; 'A'
00000000000087ca         db  0x0e ; '.'
00000000000087cb         db  0x10 ; '.'
00000000000087cc         db  0x86 ; '.'
00000000000087cd         db  0x02 ; '.'
00000000000087ce         db  0x41 ; 'A'
00000000000087cf         db  0x0e ; '.'
00000000000087d0         db  0x18 ; '.'
00000000000087d1         db  0x83 ; '.'
00000000000087d2         db  0x03 ; '.'
00000000000087d3         db  0x4a ; 'J'
00000000000087d4         db  0x0e ; '.'
00000000000087d5         db  0x20 ; ' '
00000000000087d6         db  0x02 ; '.'
00000000000087d7         db  0x53 ; 'S'
00000000000087d8         db  0x0a ; '.'
00000000000087d9         db  0x0e ; '.'
00000000000087da         db  0x18 ; '.'
00000000000087db         db  0x41 ; 'A'
00000000000087dc         db  0x0e ; '.'
00000000000087dd         db  0x10 ; '.'
00000000000087de         db  0x41 ; 'A'
00000000000087df         db  0x0e ; '.'
00000000000087e0         db  0x08 ; '.'
00000000000087e1         db  0x47 ; 'G'
00000000000087e2         db  0x0b ; '.'
00000000000087e3         db  0x47 ; 'G'
00000000000087e4         db  0x0e ; '.'
00000000000087e5         db  0x18 ; '.'
00000000000087e6         db  0x41 ; 'A'
00000000000087e7         db  0x0e ; '.'
00000000000087e8         db  0x10 ; '.'
00000000000087e9         db  0x41 ; 'A'
00000000000087ea         db  0x0e ; '.'
00000000000087eb         db  0x08 ; '.'
00000000000087ec         dd         0x00000010                                  ; Length of the record
00000000000087f0         dd         0x00000578                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000087f4         db         0x9c, 0xac, 2 dup (0xff)                    ; begin 0x3490
00000000000087f8         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x34f5)
00000000000087fc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000087fd         align      2048
0000000000008800         dd         0x00000048                                  ; Length of the record
0000000000008804         dd         0x0000058c                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008808         db         0xf8, 0xac, 2 dup (0xff)                    ; begin 0x3500
000000000000880c         db         0x6a, 3 dup (0x00)                          ; length 0x6a (end at 0x356a)
0000000000008810         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008811         db  0x42 ; 'B'
0000000000008812         db  0x0e ; '.'
0000000000008813         db  0x10 ; '.'
0000000000008814         db  0x8f ; '.'
0000000000008815         db  0x02 ; '.'
0000000000008816         db  0x42 ; 'B'
0000000000008817         db  0x0e ; '.'
0000000000008818         db  0x18 ; '.'
0000000000008819         db  0x8e ; '.'
000000000000881a         db  0x03 ; '.'
000000000000881b         db  0x42 ; 'B'
000000000000881c         db  0x0e ; '.'
000000000000881d         db  0x20 ; ' '
000000000000881e         db  0x8d ; '.'
000000000000881f         db  0x04 ; '.'
0000000000008820         db  0x42 ; 'B'
0000000000008821         db  0x0e ; '.'
0000000000008822         db  0x28 ; '('
0000000000008823         db  0x8c ; '.'
0000000000008824         db  0x05 ; '.'
0000000000008825         db  0x41 ; 'A'
0000000000008826         db  0x0e ; '.'
0000000000008827         db  0x30 ; '0'
0000000000008828         db  0x86 ; '.'
0000000000008829         db  0x06 ; '.'
000000000000882a         db  0x41 ; 'A'
000000000000882b         db  0x0e ; '.'
000000000000882c         db  0x38 ; '8'
000000000000882d         db  0x83 ; '.'
000000000000882e         db  0x07 ; '.'
000000000000882f         db  0x44 ; 'D'
0000000000008830         db  0x0e ; '.'
0000000000008831         db  0x40 ; '@'
0000000000008832         db  0x02 ; '.'
0000000000008833         db  0x4a ; 'J'
0000000000008834         db  0x0a ; '.'
0000000000008835         db  0x0e ; '.'
0000000000008836         db  0x38 ; '8'
0000000000008837         db  0x44 ; 'D'
0000000000008838         db  0x0e ; '.'
0000000000008839         db  0x30 ; '0'
000000000000883a         db  0x41 ; 'A'
000000000000883b         db  0x0e ; '.'
000000000000883c         db  0x28 ; '('
000000000000883d         db  0x42 ; 'B'
000000000000883e         db  0x0e ; '.'
000000000000883f         db  0x20 ; ' '
0000000000008840         db  0x42 ; 'B'
0000000000008841         db  0x0e ; '.'
0000000000008842         db  0x18 ; '.'
0000000000008843         db  0x42 ; 'B'
0000000000008844         db  0x0e ; '.'
0000000000008845         db  0x10 ; '.'
0000000000008846         db  0x42 ; 'B'
0000000000008847         db  0x0e ; '.'
0000000000008848         db  0x08 ; '.'
0000000000008849         db  0x41 ; 'A'
000000000000884a         db  0x0b ; '.'
000000000000884b         db  0x00 ; '.'
000000000000884c         dd         0x00000010                                  ; Length of the record
0000000000008850         dd         0x000005d8                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008854         db         0x1c, 0xad, 2 dup (0xff)                    ; begin 0x3570
0000000000008858         db         0x31, 3 dup (0x00)                          ; length 0x31 (end at 0x35a1)
000000000000885c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000885d         align      32
0000000000008860         dd         0x00000010                                  ; Length of the record
0000000000008864         dd         0x000005ec                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008868         db         0x48, 0xad, 2 dup (0xff)                    ; begin 0x35b0
000000000000886c         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x35d0)
0000000000008870         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008871         align      4
0000000000008874         dd         0x00000048                                  ; Length of the record
0000000000008878         dd         0x00000600                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
000000000000887c         db         0x54, 0xad, 2 dup (0xff)                    ; begin 0x35d0
0000000000008880         db         0xb4, 0x01, 2 dup (0x00)                    ; length 0x1b4 (end at 0x3784)
0000000000008884         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008885         db  0x42 ; 'B'
0000000000008886         db  0x0e ; '.'
0000000000008887         db  0x10 ; '.'
0000000000008888         db  0x8f ; '.'
0000000000008889         db  0x02 ; '.'
000000000000888a         db  0x42 ; 'B'
000000000000888b         db  0x0e ; '.'
000000000000888c         db  0x18 ; '.'
000000000000888d         db  0x8e ; '.'
000000000000888e         db  0x03 ; '.'
000000000000888f         db  0x49 ; 'I'
0000000000008890         db  0x0e ; '.'
0000000000008891         db  0x20 ; ' '
0000000000008892         db  0x8d ; '.'
0000000000008893         db  0x04 ; '.'
0000000000008894         db  0x42 ; 'B'
0000000000008895         db  0x0e ; '.'
0000000000008896         db  0x28 ; '('
0000000000008897         db  0x8c ; '.'
0000000000008898         db  0x05 ; '.'
0000000000008899         db  0x44 ; 'D'
000000000000889a         db  0x0e ; '.'
000000000000889b         db  0x30 ; '0'
000000000000889c         db  0x86 ; '.'
000000000000889d         db  0x06 ; '.'
000000000000889e         db  0x41 ; 'A'
000000000000889f         db  0x0e ; '.'
00000000000088a0         db  0x38 ; '8'
00000000000088a1         db  0x83 ; '.'
00000000000088a2         db  0x07 ; '.'
00000000000088a3         db  0x52 ; 'R'
00000000000088a4         db  0x0e ; '.'
00000000000088a5         db  0x40 ; '@'
00000000000088a6         db  0x02 ; '.'
00000000000088a7         db  0xd8 ; '.'
00000000000088a8         db  0x0a ; '.'
00000000000088a9         db  0x0e ; '.'
00000000000088aa         db  0x38 ; '8'
00000000000088ab         db  0x44 ; 'D'
00000000000088ac         db  0x0e ; '.'
00000000000088ad         db  0x30 ; '0'
00000000000088ae         db  0x41 ; 'A'
00000000000088af         db  0x0e ; '.'
00000000000088b0         db  0x28 ; '('
00000000000088b1         db  0x42 ; 'B'
00000000000088b2         db  0x0e ; '.'
00000000000088b3         db  0x20 ; ' '
00000000000088b4         db  0x42 ; 'B'
00000000000088b5         db  0x0e ; '.'
00000000000088b6         db  0x18 ; '.'
00000000000088b7         db  0x42 ; 'B'
00000000000088b8         db  0x0e ; '.'
00000000000088b9         db  0x10 ; '.'
00000000000088ba         db  0x42 ; 'B'
00000000000088bb         db  0x0e ; '.'
00000000000088bc         db  0x08 ; '.'
00000000000088bd         db  0x45 ; 'E'
00000000000088be         db  0x0b ; '.'
00000000000088bf         db  0x00 ; '.'
00000000000088c0         dd         0x00000028                                  ; Length of the record
00000000000088c4         dd         0x0000064c                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000088c8         db         0xc8, 0xae, 2 dup (0xff)                    ; begin 0x3790
00000000000088cc         db         0x90, 3 dup (0x00)                          ; length 0x90 (end at 0x3820)
00000000000088d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000088d1         db  0x42 ; 'B'
00000000000088d2         db  0x0e ; '.'
00000000000088d3         db  0x10 ; '.'
00000000000088d4         db  0x8c ; '.'
00000000000088d5         db  0x02 ; '.'
00000000000088d6         db  0x41 ; 'A'
00000000000088d7         db  0x0e ; '.'
00000000000088d8         db  0x18 ; '.'
00000000000088d9         db  0x86 ; '.'
00000000000088da         db  0x03 ; '.'
00000000000088db         db  0x44 ; 'D'
00000000000088dc         db  0x0e ; '.'
00000000000088dd         db  0x20 ; ' '
00000000000088de         db  0x83 ; '.'
00000000000088df         db  0x04 ; '.'
00000000000088e0         db  0x02 ; '.'
00000000000088e1         db  0x85 ; '.'
00000000000088e2         db  0x0e ; '.'
00000000000088e3         db  0x18 ; '.'
00000000000088e4         db  0x41 ; 'A'
00000000000088e5         db  0x0e ; '.'
00000000000088e6         db  0x10 ; '.'
00000000000088e7         db  0x42 ; 'B'
00000000000088e8         db  0x0e ; '.'
00000000000088e9         db  0x08 ; '.'
00000000000088ea         db  0x00 ; '.'
00000000000088eb         db  0x00 ; '.'
00000000000088ec         dd         0x00000028                                  ; Length of the record
00000000000088f0         dd         0x00000678                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000088f4         db         0x2c, 0xaf, 2 dup (0xff)                    ; begin 0x3820
00000000000088f8         db         0xd6, 3 dup (0x00)                          ; length 0xd6 (end at 0x38f6)
00000000000088fc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000088fd         db  0x42 ; 'B'
00000000000088fe         db  0x0e ; '.'
00000000000088ff         db  0x10 ; '.'
0000000000008900         db  0x8c ; '.'
0000000000008901         db  0x02 ; '.'
0000000000008902         db  0x41 ; 'A'
0000000000008903         db  0x0e ; '.'
0000000000008904         db  0x18 ; '.'
0000000000008905         db  0x86 ; '.'
0000000000008906         db  0x03 ; '.'
0000000000008907         db  0x44 ; 'D'
0000000000008908         db  0x0e ; '.'
0000000000008909         db  0x20 ; ' '
000000000000890a         db  0x83 ; '.'
000000000000890b         db  0x04 ; '.'
000000000000890c         db  0x02 ; '.'
000000000000890d         db  0xc4 ; '.'
000000000000890e         db  0x0e ; '.'
000000000000890f         db  0x18 ; '.'
0000000000008910         db  0x44 ; 'D'
0000000000008911         db  0x0e ; '.'
0000000000008912         db  0x10 ; '.'
0000000000008913         db  0x42 ; 'B'
0000000000008914         db  0x0e ; '.'
0000000000008915         db  0x08 ; '.'
0000000000008916         db  0x00 ; '.'
0000000000008917         db  0x00 ; '.'
0000000000008918         dd         0x00000034                                  ; Length of the record
000000000000891c         dd         0x000006a4                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008920         db         0xe0, 0xaf, 2 dup (0xff)                    ; begin 0x3900
0000000000008924         db         0x3e, 0x02, 2 dup (0x00)                    ; length 0x23e (end at 0x3b3e)
0000000000008928         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008929         db  0x42 ; 'B'
000000000000892a         db  0x0e ; '.'
000000000000892b         db  0x10 ; '.'
000000000000892c         db  0x8c ; '.'
000000000000892d         db  0x02 ; '.'
000000000000892e         db  0x41 ; 'A'
000000000000892f         db  0x0e ; '.'
0000000000008930         db  0x18 ; '.'
0000000000008931         db  0x86 ; '.'
0000000000008932         db  0x03 ; '.'
0000000000008933         db  0x44 ; 'D'
0000000000008934         db  0x0e ; '.'
0000000000008935         db  0x20 ; ' '
0000000000008936         db  0x83 ; '.'
0000000000008937         db  0x04 ; '.'
0000000000008938         db  0x44 ; 'D'
0000000000008939         db  0x0e ; '.'
000000000000893a         db  0x80 ; '.'
000000000000893b         db  0x01 ; '.'
000000000000893c         db  0x03 ; '.'
000000000000893d         db  0x91 ; '.'
000000000000893e         db  0x01 ; '.'
000000000000893f         db  0x0a ; '.'
0000000000008940         db  0x0e ; '.'
0000000000008941         db  0x20 ; ' '
0000000000008942         db  0x41 ; 'A'
0000000000008943         db  0x0e ; '.'
0000000000008944         db  0x18 ; '.'
0000000000008945         db  0x41 ; 'A'
0000000000008946         db  0x0e ; '.'
0000000000008947         db  0x10 ; '.'
0000000000008948         db  0x42 ; 'B'
0000000000008949         db  0x0e ; '.'
000000000000894a         db  0x08 ; '.'
000000000000894b         db  0x48 ; 'H'
000000000000894c         db  0x0b ; '.'
000000000000894d         db  0x00 ; '.'
000000000000894e         db  0x00 ; '.'
000000000000894f         db  0x00 ; '.'
0000000000008950         dd         0x00000038                                  ; Length of the record
0000000000008954         dd         0x000006dc                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008958         db         0xe8, 0xb1, 2 dup (0xff)                    ; begin 0x3b40
000000000000895c         db         0x84, 0x02, 2 dup (0x00)                    ; length 0x284 (end at 0x3dc4)
0000000000008960         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008961         db  0x42 ; 'B'
0000000000008962         db  0x0e ; '.'
0000000000008963         db  0x10 ; '.'
0000000000008964         db  0x8d ; '.'
0000000000008965         db  0x02 ; '.'
0000000000008966         db  0x42 ; 'B'
0000000000008967         db  0x0e ; '.'
0000000000008968         db  0x18 ; '.'
0000000000008969         db  0x8c ; '.'
000000000000896a         db  0x03 ; '.'
000000000000896b         db  0x41 ; 'A'
000000000000896c         db  0x0e ; '.'
000000000000896d         db  0x20 ; ' '
000000000000896e         db  0x86 ; '.'
000000000000896f         db  0x04 ; '.'
0000000000008970         db  0x41 ; 'A'
0000000000008971         db  0x0e ; '.'
0000000000008972         db  0x28 ; '('
0000000000008973         db  0x83 ; '.'
0000000000008974         db  0x05 ; '.'
0000000000008975         db  0x44 ; 'D'
0000000000008976         db  0x0e ; '.'
0000000000008977         db  0x40 ; '@'
0000000000008978         db  0x02 ; '.'
0000000000008979         db  0x5a ; 'Z'
000000000000897a         db  0x0a ; '.'
000000000000897b         db  0x0e ; '.'
000000000000897c         db  0x28 ; '('
000000000000897d         db  0x41 ; 'A'
000000000000897e         db  0x0e ; '.'
000000000000897f         db  0x20 ; ' '
0000000000008980         db  0x41 ; 'A'
0000000000008981         db  0x0e ; '.'
0000000000008982         db  0x18 ; '.'
0000000000008983         db  0x42 ; 'B'
0000000000008984         db  0x0e ; '.'
0000000000008985         db  0x10 ; '.'
0000000000008986         db  0x42 ; 'B'
0000000000008987         db  0x0e ; '.'
0000000000008988         db  0x08 ; '.'
0000000000008989         db  0x46 ; 'F'
000000000000898a         db  0x0b ; '.'
000000000000898b         db  0x00 ; '.'
000000000000898c         dd         0x00000020                                  ; Length of the record
0000000000008990         dd         0x00000718                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008994         db         0x3c, 0xb4, 2 dup (0xff)                    ; begin 0x3dd0
0000000000008998         db         0x59, 3 dup (0x00)                          ; length 0x59 (end at 0x3e29)
000000000000899c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000899d         db  0x41 ; 'A'
000000000000899e         db  0x0e ; '.'
000000000000899f         db  0x10 ; '.'
00000000000089a0         db  0x83 ; '.'
00000000000089a1         db  0x02 ; '.'
00000000000089a2         db  0x47 ; 'G'
00000000000089a3         db  0x0e ; '.'
00000000000089a4         db  0x20 ; ' '
00000000000089a5         db  0x7c ; '|'
00000000000089a6         db  0x0a ; '.'
00000000000089a7         db  0x0e ; '.'
00000000000089a8         db  0x10 ; '.'
00000000000089a9         db  0x41 ; 'A'
00000000000089aa         db  0x0e ; '.'
00000000000089ab         db  0x08 ; '.'
00000000000089ac         db  0x4b ; 'K'
00000000000089ad         db  0x0b ; '.'
00000000000089ae         db  0x00 ; '.'
00000000000089af         db  0x00 ; '.'
00000000000089b0         dd         0x00000034                                  ; Length of the record
00000000000089b4         dd         0x0000073c                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000089b8         db         0x78, 0xb4, 2 dup (0xff)                    ; begin 0x3e30
00000000000089bc         db         0x03, 0x02, 2 dup (0x00)                    ; length 0x203 (end at 0x4033)
00000000000089c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000089c1         db  0x42 ; 'B'
00000000000089c2         db  0x0e ; '.'
00000000000089c3         db  0x10 ; '.'
00000000000089c4         db  0x8c ; '.'
00000000000089c5         db  0x02 ; '.'
00000000000089c6         db  0x41 ; 'A'
00000000000089c7         db  0x0e ; '.'
00000000000089c8         db  0x18 ; '.'
00000000000089c9         db  0x86 ; '.'
00000000000089ca         db  0x03 ; '.'
00000000000089cb         db  0x46 ; 'F'
00000000000089cc         db  0x0e ; '.'
00000000000089cd         db  0x20 ; ' '
00000000000089ce         db  0x83 ; '.'
00000000000089cf         db  0x04 ; '.'
00000000000089d0         db  0x47 ; 'G'
00000000000089d1         db  0x0e ; '.'
00000000000089d2         db  0x30 ; '0'
00000000000089d3         db  0x02 ; '.'
00000000000089d4         db  0x4a ; 'J'
00000000000089d5         db  0x0a ; '.'
00000000000089d6         db  0x0e ; '.'
00000000000089d7         db  0x20 ; ' '
00000000000089d8         db  0x41 ; 'A'
00000000000089d9         db  0x0e ; '.'
00000000000089da         db  0x18 ; '.'
00000000000089db         db  0x41 ; 'A'
00000000000089dc         db  0x0e ; '.'
00000000000089dd         db  0x10 ; '.'
00000000000089de         db  0x42 ; 'B'
00000000000089df         db  0x0e ; '.'
00000000000089e0         db  0x08 ; '.'
00000000000089e1         db  0x42 ; 'B'
00000000000089e2         db  0x0b ; '.'
00000000000089e3         db  0x00 ; '.'
00000000000089e4         db  0x00 ; '.'
00000000000089e5         db  0x00 ; '.'
00000000000089e6         db  0x00 ; '.'
00000000000089e7         db  0x00 ; '.'
00000000000089e8         dd         0x00000024                                  ; Length of the record
00000000000089ec         dd         0x00000774                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000089f0         db         0x50, 0xb6, 2 dup (0xff)                    ; begin 0x4040
00000000000089f4         db         0x27, 3 dup (0x00)                          ; length 0x27 (end at 0x4067)
00000000000089f8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000089f9         db  0x41 ; 'A'
00000000000089fa         db  0x0e ; '.'
00000000000089fb         db  0x10 ; '.'
00000000000089fc         db  0x86 ; '.'
00000000000089fd         db  0x02 ; '.'
00000000000089fe         db  0x41 ; 'A'
00000000000089ff         db  0x0e ; '.'
0000000000008a00         db  0x18 ; '.'
0000000000008a01         db  0x83 ; '.'
0000000000008a02         db  0x03 ; '.'
0000000000008a03         db  0x4a ; 'J'
0000000000008a04         db  0x0e ; '.'
0000000000008a05         db  0x20 ; ' '
0000000000008a06         db  0x52 ; 'R'
0000000000008a07         db  0x0e ; '.'
0000000000008a08         db  0x18 ; '.'
0000000000008a09         db  0x44 ; 'D'
0000000000008a0a         db  0x0e ; '.'
0000000000008a0b         db  0x10 ; '.'
0000000000008a0c         db  0x41 ; 'A'
0000000000008a0d         db  0x0e ; '.'
0000000000008a0e         db  0x08 ; '.'
0000000000008a0f         db  0x00 ; '.'
0000000000008a10         dd         0x00000010                                  ; Length of the record
0000000000008a14         dd         0x0000079c                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008a18         db         0x58, 0xb6, 2 dup (0xff)                    ; begin 0x4070
0000000000008a1c         db         0x0d, 3 dup (0x00)                          ; length 0xd (end at 0x407d)
0000000000008a20         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008a21         align      4
0000000000008a24         dd         0x00000014                                  ; Length of the record
0000000000008a28         dd         0x000007b0                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008a2c         db         0x54, 0xb6, 2 dup (0xff)                    ; begin 0x4080
0000000000008a30         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x40ae)
0000000000008a34         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008a35         db  0x5e ; '^'
0000000000008a36         db  0x0e ; '.'
0000000000008a37         db  0x10 ; '.'
0000000000008a38         db  0x4f ; 'O'
0000000000008a39         db  0x0e ; '.'
0000000000008a3a         db  0x08 ; '.'
0000000000008a3b         db  0x00 ; '.'
0000000000008a3c         dd         0x00000014                                  ; Length of the record
0000000000008a40         dd         0x000007c8                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008a44         db         0x6c, 0xb6, 2 dup (0xff)                    ; begin 0x40b0
0000000000008a48         db         0x33, 3 dup (0x00)                          ; length 0x33 (end at 0x40e3)
0000000000008a4c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008a4d         db  0x5e ; '^'
0000000000008a4e         db  0x0e ; '.'
0000000000008a4f         db  0x10 ; '.'
0000000000008a50         db  0x54 ; 'T'
0000000000008a51         db  0x0e ; '.'
0000000000008a52         db  0x08 ; '.'
0000000000008a53         db  0x00 ; '.'
0000000000008a54         dd         0x00000018                                  ; Length of the record
0000000000008a58         dd         0x000007e0                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008a5c         db         0x94, 0xb6, 2 dup (0xff)                    ; begin 0x40f0
0000000000008a60         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x4105)
0000000000008a64         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008a65         db  0x41 ; 'A'
0000000000008a66         db  0x0e ; '.'
0000000000008a67         db  0x10 ; '.'
0000000000008a68         db  0x83 ; '.'
0000000000008a69         db  0x02 ; '.'
0000000000008a6a         db  0x4f ; 'O'
0000000000008a6b         db  0x0e ; '.'
0000000000008a6c         db  0x08 ; '.'
0000000000008a6d         db  0x00 ; '.'
0000000000008a6e         db  0x00 ; '.'
0000000000008a6f         db  0x00 ; '.'
0000000000008a70         dd         0x0000001c                                  ; Length of the record
0000000000008a74         dd         0x000007fc                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008a78         db         0x98, 0xb6, 2 dup (0xff)                    ; begin 0x4110
0000000000008a7c         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x41af)
0000000000008a80         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008a81         db  0x44 ; 'D'
0000000000008a82         db  0x0e ; '.'
0000000000008a83         db  0x10 ; '.'
0000000000008a84         db  0x83 ; '.'
0000000000008a85         db  0x02 ; '.'
0000000000008a86         db  0x02 ; '.'
0000000000008a87         db  0x78 ; 'x'
0000000000008a88         db  0x0a ; '.'
0000000000008a89         db  0x0e ; '.'
0000000000008a8a         db  0x08 ; '.'
0000000000008a8b         db  0x41 ; 'A'
0000000000008a8c         db  0x0b ; '.'
0000000000008a8d         db  0x00 ; '.'
0000000000008a8e         db  0x00 ; '.'
0000000000008a8f         db  0x00 ; '.'
0000000000008a90         dd         0x00000040                                  ; Length of the record
0000000000008a94         dd         0x0000081c                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008a98         db         0x18, 0xb7, 2 dup (0xff)                    ; begin 0x41b0
0000000000008a9c         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x4297)
0000000000008aa0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008aa1         db  0x41 ; 'A'
0000000000008aa2         db  0x0e ; '.'
0000000000008aa3         db  0x10 ; '.'
0000000000008aa4         db  0x86 ; '.'
0000000000008aa5         db  0x02 ; '.'
0000000000008aa6         db  0x41 ; 'A'
0000000000008aa7         db  0x0e ; '.'
0000000000008aa8         db  0x18 ; '.'
0000000000008aa9         db  0x83 ; '.'
0000000000008aaa         db  0x03 ; '.'
0000000000008aab         db  0x49 ; 'I'
0000000000008aac         db  0x0e ; '.'
0000000000008aad         db  0x20 ; ' '
0000000000008aae         db  0x6e ; 'n'
0000000000008aaf         db  0x0a ; '.'
0000000000008ab0         db  0x0e ; '.'
0000000000008ab1         db  0x18 ; '.'
0000000000008ab2         db  0x41 ; 'A'
0000000000008ab3         db  0x0e ; '.'
0000000000008ab4         db  0x10 ; '.'
0000000000008ab5         db  0x41 ; 'A'
0000000000008ab6         db  0x0e ; '.'
0000000000008ab7         db  0x08 ; '.'
0000000000008ab8         db  0x45 ; 'E'
0000000000008ab9         db  0x0b ; '.'
0000000000008aba         db  0x02 ; '.'
0000000000008abb         db  0x4a ; 'J'
0000000000008abc         db  0x0a ; '.'
0000000000008abd         db  0x0e ; '.'
0000000000008abe         db  0x18 ; '.'
0000000000008abf         db  0x41 ; 'A'
0000000000008ac0         db  0x0e ; '.'
0000000000008ac1         db  0x10 ; '.'
0000000000008ac2         db  0x41 ; 'A'
0000000000008ac3         db  0x0e ; '.'
0000000000008ac4         db  0x08 ; '.'
0000000000008ac5         db  0x44 ; 'D'
0000000000008ac6         db  0x0b ; '.'
0000000000008ac7         db  0x02 ; '.'
0000000000008ac8         db  0x54 ; 'T'
0000000000008ac9         db  0x0e ; '.'
0000000000008aca         db  0x18 ; '.'
0000000000008acb         db  0x41 ; 'A'
0000000000008acc         db  0x0e ; '.'
0000000000008acd         db  0x10 ; '.'
0000000000008ace         db  0x41 ; 'A'
0000000000008acf         db  0x0e ; '.'
0000000000008ad0         db  0x08 ; '.'
0000000000008ad1         db  0x00 ; '.'
0000000000008ad2         db  0x00 ; '.'
0000000000008ad3         db  0x00 ; '.'
0000000000008ad4         dd         0x00000074                                  ; Length of the record
0000000000008ad8         dd         0x00000860                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008adc         db         0xc4, 0xb7, 2 dup (0xff)                    ; begin 0x42a0
0000000000008ae0         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x54d4)
0000000000008ae4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ae5         db  0x42 ; 'B'
0000000000008ae6         db  0x0e ; '.'
0000000000008ae7         db  0x10 ; '.'
0000000000008ae8         db  0x8f ; '.'
0000000000008ae9         db  0x02 ; '.'
0000000000008aea         db  0x42 ; 'B'
0000000000008aeb         db  0x0e ; '.'
0000000000008aec         db  0x18 ; '.'
0000000000008aed         db  0x8e ; '.'
0000000000008aee         db  0x03 ; '.'
0000000000008aef         db  0x45 ; 'E'
0000000000008af0         db  0x0e ; '.'
0000000000008af1         db  0x20 ; ' '
0000000000008af2         db  0x8d ; '.'
0000000000008af3         db  0x04 ; '.'
0000000000008af4         db  0x42 ; 'B'
0000000000008af5         db  0x0e ; '.'
0000000000008af6         db  0x28 ; '('
0000000000008af7         db  0x8c ; '.'
0000000000008af8         db  0x05 ; '.'
0000000000008af9         db  0x44 ; 'D'
0000000000008afa         db  0x0e ; '.'
0000000000008afb         db  0x30 ; '0'
0000000000008afc         db  0x86 ; '.'
0000000000008afd         db  0x06 ; '.'
0000000000008afe         db  0x41 ; 'A'
0000000000008aff         db  0x0e ; '.'
0000000000008b00         db  0x38 ; '8'
0000000000008b01         db  0x83 ; '.'
0000000000008b02         db  0x07 ; '.'
0000000000008b03         db  0x53 ; 'S'
0000000000008b04         db  0x0e ; '.'
0000000000008b05         db  0xf0 ; '.'
0000000000008b06         db  0x01 ; '.'
0000000000008b07         db  0x03 ; '.'
0000000000008b08         db  0x81 ; '.'
0000000000008b09         db  0x0b ; '.'
0000000000008b0a         db  0x0e ; '.'
0000000000008b0b         db  0xf8 ; '.'
0000000000008b0c         db  0x01 ; '.'
0000000000008b0d         db  0x4a ; 'J'
0000000000008b0e         db  0x0e ; '.'
0000000000008b0f         db  0x80 ; '.'
0000000000008b10         db  0x02 ; '.'
0000000000008b11         db  0x44 ; 'D'
0000000000008b12         db  0x0e ; '.'
0000000000008b13         db  0x88 ; '.'
0000000000008b14         db  0x02 ; '.'
0000000000008b15         db  0x45 ; 'E'
0000000000008b16         db  0x0e ; '.'
0000000000008b17         db  0x90 ; '.'
0000000000008b18         db  0x02 ; '.'
0000000000008b19         db  0x5f ; '_'
0000000000008b1a         db  0x0e ; '.'
0000000000008b1b         db  0xf0 ; '.'
0000000000008b1c         db  0x01 ; '.'
0000000000008b1d         db  0x64 ; 'd'
0000000000008b1e         db  0x0a ; '.'
0000000000008b1f         db  0x0e ; '.'
0000000000008b20         db  0x38 ; '8'
0000000000008b21         db  0x41 ; 'A'
0000000000008b22         db  0x0e ; '.'
0000000000008b23         db  0x30 ; '0'
0000000000008b24         db  0x41 ; 'A'
0000000000008b25         db  0x0e ; '.'
0000000000008b26         db  0x28 ; '('
0000000000008b27         db  0x42 ; 'B'
0000000000008b28         db  0x0e ; '.'
0000000000008b29         db  0x20 ; ' '
0000000000008b2a         db  0x42 ; 'B'
0000000000008b2b         db  0x0e ; '.'
0000000000008b2c         db  0x18 ; '.'
0000000000008b2d         db  0x42 ; 'B'
0000000000008b2e         db  0x0e ; '.'
0000000000008b2f         db  0x10 ; '.'
0000000000008b30         db  0x42 ; 'B'
0000000000008b31         db  0x0e ; '.'
0000000000008b32         db  0x08 ; '.'
0000000000008b33         db  0x44 ; 'D'
0000000000008b34         db  0x0b ; '.'
0000000000008b35         db  0x03 ; '.'
0000000000008b36         db  0x99 ; '.'
0000000000008b37         db  0x05 ; '.'
0000000000008b38         db  0x0e ; '.'
0000000000008b39         db  0xf8 ; '.'
0000000000008b3a         db  0x01 ; '.'
0000000000008b3b         db  0x4d ; 'M'
0000000000008b3c         db  0x0e ; '.'
0000000000008b3d         db  0x80 ; '.'
0000000000008b3e         db  0x02 ; '.'
0000000000008b3f         db  0x44 ; 'D'
0000000000008b40         db  0x0e ; '.'
0000000000008b41         db  0x88 ; '.'
0000000000008b42         db  0x02 ; '.'
0000000000008b43         db  0x47 ; 'G'
0000000000008b44         db  0x0e ; '.'
0000000000008b45         db  0x90 ; '.'
0000000000008b46         db  0x02 ; '.'
0000000000008b47         db  0x5b ; '['
0000000000008b48         db  0x0e ; '.'
0000000000008b49         db  0xf0 ; '.'
0000000000008b4a         db  0x01 ; '.'
0000000000008b4b         db  0x00 ; '.'
0000000000008b4c         dd         0x00000068                                  ; Length of the record
0000000000008b50         dd         0x000008d8                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008b54         db         0x8c, 0xc9, 2 dup (0xff)                    ; begin 0x54e0
0000000000008b58         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x568b)
0000000000008b5c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b5d         db  0x42 ; 'B'
0000000000008b5e         db  0x0e ; '.'
0000000000008b5f         db  0x10 ; '.'
0000000000008b60         db  0x8f ; '.'
0000000000008b61         db  0x02 ; '.'
0000000000008b62         db  0x42 ; 'B'
0000000000008b63         db  0x0e ; '.'
0000000000008b64         db  0x18 ; '.'
0000000000008b65         db  0x8e ; '.'
0000000000008b66         db  0x03 ; '.'
0000000000008b67         db  0x45 ; 'E'
0000000000008b68         db  0x0e ; '.'
0000000000008b69         db  0x20 ; ' '
0000000000008b6a         db  0x8d ; '.'
0000000000008b6b         db  0x04 ; '.'
0000000000008b6c         db  0x42 ; 'B'
0000000000008b6d         db  0x0e ; '.'
0000000000008b6e         db  0x28 ; '('
0000000000008b6f         db  0x8c ; '.'
0000000000008b70         db  0x05 ; '.'
0000000000008b71         db  0x44 ; 'D'
0000000000008b72         db  0x0e ; '.'
0000000000008b73         db  0x30 ; '0'
0000000000008b74         db  0x86 ; '.'
0000000000008b75         db  0x06 ; '.'
0000000000008b76         db  0x41 ; 'A'
0000000000008b77         db  0x0e ; '.'
0000000000008b78         db  0x38 ; '8'
0000000000008b79         db  0x83 ; '.'
0000000000008b7a         db  0x07 ; '.'
0000000000008b7b         db  0x47 ; 'G'
0000000000008b7c         db  0x0e ; '.'
0000000000008b7d         db  0x60 ; '`'
0000000000008b7e         db  0x02 ; '.'
0000000000008b7f         db  0x99 ; '.'
0000000000008b80         db  0x0e ; '.'
0000000000008b81         db  0x68 ; 'h'
0000000000008b82         db  0x5f ; '_'
0000000000008b83         db  0x0e ; '.'
0000000000008b84         db  0x70 ; 'p'
0000000000008b85         db  0x46 ; 'F'
0000000000008b86         db  0x0e ; '.'
0000000000008b87         db  0x78 ; 'x'
0000000000008b88         db  0x42 ; 'B'
0000000000008b89         db  0x0e ; '.'
0000000000008b8a         db  0x80 ; '.'
0000000000008b8b         db  0x01 ; '.'
0000000000008b8c         db  0x59 ; 'Y'
0000000000008b8d         db  0x0e ; '.'
0000000000008b8e         db  0x60 ; '`'
0000000000008b8f         db  0x02 ; '.'
0000000000008b90         db  0x40 ; '@'
0000000000008b91         db  0x0e ; '.'
0000000000008b92         db  0x68 ; 'h'
0000000000008b93         db  0x4b ; 'K'
0000000000008b94         db  0x0e ; '.'
0000000000008b95         db  0x70 ; 'p'
0000000000008b96         db  0x43 ; 'C'
0000000000008b97         db  0x0e ; '.'
0000000000008b98         db  0x78 ; 'x'
0000000000008b99         db  0x45 ; 'E'
0000000000008b9a         db  0x0e ; '.'
0000000000008b9b         db  0x80 ; '.'
0000000000008b9c         db  0x01 ; '.'
0000000000008b9d         db  0x5e ; '^'
0000000000008b9e         db  0x0e ; '.'
0000000000008b9f         db  0x60 ; '`'
0000000000008ba0         db  0x4c ; 'L'
0000000000008ba1         db  0x0a ; '.'
0000000000008ba2         db  0x0e ; '.'
0000000000008ba3         db  0x38 ; '8'
0000000000008ba4         db  0x44 ; 'D'
0000000000008ba5         db  0x0e ; '.'
0000000000008ba6         db  0x30 ; '0'
0000000000008ba7         db  0x41 ; 'A'
0000000000008ba8         db  0x0e ; '.'
0000000000008ba9         db  0x28 ; '('
0000000000008baa         db  0x42 ; 'B'
0000000000008bab         db  0x0e ; '.'
0000000000008bac         db  0x20 ; ' '
0000000000008bad         db  0x42 ; 'B'
0000000000008bae         db  0x0e ; '.'
0000000000008baf         db  0x18 ; '.'
0000000000008bb0         db  0x42 ; 'B'
0000000000008bb1         db  0x0e ; '.'
0000000000008bb2         db  0x10 ; '.'
0000000000008bb3         db  0x42 ; 'B'
0000000000008bb4         db  0x0e ; '.'
0000000000008bb5         db  0x08 ; '.'
0000000000008bb6         db  0x46 ; 'F'
0000000000008bb7         db  0x0b ; '.'
0000000000008bb8         dd         0x00000028                                  ; Length of the record
0000000000008bbc         dd         0x00000944                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008bc0         db         0xd0, 0xca, 2 dup (0xff)                    ; begin 0x5690
0000000000008bc4         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x56c6)
0000000000008bc8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008bc9         db  0x42 ; 'B'
0000000000008bca         db  0x0e ; '.'
0000000000008bcb         db  0x10 ; '.'
0000000000008bcc         db  0x8c ; '.'
0000000000008bcd         db  0x02 ; '.'
0000000000008bce         db  0x41 ; 'A'
0000000000008bcf         db  0x0e ; '.'
0000000000008bd0         db  0x18 ; '.'
0000000000008bd1         db  0x86 ; '.'
0000000000008bd2         db  0x03 ; '.'
0000000000008bd3         db  0x41 ; 'A'
0000000000008bd4         db  0x0e ; '.'
0000000000008bd5         db  0x20 ; ' '
0000000000008bd6         db  0x83 ; '.'
0000000000008bd7         db  0x04 ; '.'
0000000000008bd8         db  0x6e ; 'n'
0000000000008bd9         db  0x0e ; '.'
0000000000008bda         db  0x18 ; '.'
0000000000008bdb         db  0x41 ; 'A'
0000000000008bdc         db  0x0e ; '.'
0000000000008bdd         db  0x10 ; '.'
0000000000008bde         db  0x42 ; 'B'
0000000000008bdf         db  0x0e ; '.'
0000000000008be0         db  0x08 ; '.'
0000000000008be1         db  0x00 ; '.'
0000000000008be2         db  0x00 ; '.'
0000000000008be3         db  0x00 ; '.'
0000000000008be4         dd         0x00000010                                  ; Length of the record
0000000000008be8         dd         0x00000970                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008bec         db         0xe4, 0xca, 2 dup (0xff)                    ; begin 0x56d0
0000000000008bf0         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x56e1)
0000000000008bf4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008bf5         align      8
0000000000008bf8         dd         0x00000010                                  ; Length of the record
0000000000008bfc         dd         0x00000984                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008c00         db         0xf0, 0xca, 2 dup (0xff)                    ; begin 0x56f0
0000000000008c04         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x5701)
0000000000008c08         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c09         align      4
0000000000008c0c         dd         0x00000010                                  ; Length of the record
0000000000008c10         dd         0x00000998                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008c14         db         0xfc, 0xca, 2 dup (0xff)                    ; begin 0x5710
0000000000008c18         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x5745)
0000000000008c1c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c1d         align      32
0000000000008c20         dd         0x00000010                                  ; Length of the record
0000000000008c24         dd         0x000009ac                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008c28         db         0x28, 0xcb, 2 dup (0xff)                    ; begin 0x5750
0000000000008c2c         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x5765)
0000000000008c30         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c31         align      4
0000000000008c34         dd         0x00000010                                  ; Length of the record
0000000000008c38         dd         0x000009c0                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008c3c         db         0x34, 0xcb, 2 dup (0xff)                    ; begin 0x5770
0000000000008c40         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x57a0)
0000000000008c44         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c45         db  0x6b ; 'k'
0000000000008c46         db  0x0e ; '.'
0000000000008c47         db  0x10 ; '.'
0000000000008c48         dd         0x00000050                                  ; Length of the record
0000000000008c4c         dd         0x000009d4                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008c50         db         0x50, 0xcb, 2 dup (0xff)                    ; begin 0x57a0
0000000000008c54         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x5814)
0000000000008c58         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c59         db  0x42 ; 'B'
0000000000008c5a         db  0x0e ; '.'
0000000000008c5b         db  0x10 ; '.'
0000000000008c5c         db  0x8f ; '.'
0000000000008c5d         db  0x02 ; '.'
0000000000008c5e         db  0x42 ; 'B'
0000000000008c5f         db  0x0e ; '.'
0000000000008c60         db  0x18 ; '.'
0000000000008c61         db  0x8e ; '.'
0000000000008c62         db  0x03 ; '.'
0000000000008c63         db  0x49 ; 'I'
0000000000008c64         db  0x0e ; '.'
0000000000008c65         db  0x20 ; ' '
0000000000008c66         db  0x8d ; '.'
0000000000008c67         db  0x04 ; '.'
0000000000008c68         db  0x42 ; 'B'
0000000000008c69         db  0x0e ; '.'
0000000000008c6a         db  0x28 ; '('
0000000000008c6b         db  0x8c ; '.'
0000000000008c6c         db  0x05 ; '.'
0000000000008c6d         db  0x44 ; 'D'
0000000000008c6e         db  0x0e ; '.'
0000000000008c6f         db  0x30 ; '0'
0000000000008c70         db  0x86 ; '.'
0000000000008c71         db  0x06 ; '.'
0000000000008c72         db  0x41 ; 'A'
0000000000008c73         db  0x0e ; '.'
0000000000008c74         db  0x38 ; '8'
0000000000008c75         db  0x83 ; '.'
0000000000008c76         db  0x07 ; '.'
0000000000008c77         db  0x4d ; 'M'
0000000000008c78         db  0x0e ; '.'
0000000000008c79         db  0x50 ; 'P'
0000000000008c7a         db  0x5f ; '_'
0000000000008c7b         db  0x0e ; '.'
0000000000008c7c         db  0x58 ; 'X'
0000000000008c7d         db  0x47 ; 'G'
0000000000008c7e         db  0x0e ; '.'
0000000000008c7f         db  0x60 ; '`'
0000000000008c80         db  0x46 ; 'F'
0000000000008c81         db  0x0e ; '.'
0000000000008c82         db  0x68 ; 'h'
0000000000008c83         db  0x44 ; 'D'
0000000000008c84         db  0x0e ; '.'
0000000000008c85         db  0x70 ; 'p'
0000000000008c86         db  0x58 ; 'X'
0000000000008c87         db  0x0e ; '.'
0000000000008c88         db  0x38 ; '8'
0000000000008c89         db  0x41 ; 'A'
0000000000008c8a         db  0x0e ; '.'
0000000000008c8b         db  0x30 ; '0'
0000000000008c8c         db  0x41 ; 'A'
0000000000008c8d         db  0x0e ; '.'
0000000000008c8e         db  0x28 ; '('
0000000000008c8f         db  0x42 ; 'B'
0000000000008c90         db  0x0e ; '.'
0000000000008c91         db  0x20 ; ' '
0000000000008c92         db  0x42 ; 'B'
0000000000008c93         db  0x0e ; '.'
0000000000008c94         db  0x18 ; '.'
0000000000008c95         db  0x42 ; 'B'
0000000000008c96         db  0x0e ; '.'
0000000000008c97         db  0x10 ; '.'
0000000000008c98         db  0x42 ; 'B'
0000000000008c99         db  0x0e ; '.'
0000000000008c9a         db  0x08 ; '.'
0000000000008c9b         db  0x00 ; '.'
0000000000008c9c         dd         0x00000068                                  ; Length of the record
0000000000008ca0         dd         0x00000a28                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008ca4         db         0x7c, 0xcb, 2 dup (0xff)                    ; begin 0x5820
0000000000008ca8         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x5903)
0000000000008cac         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008cad         db  0x42 ; 'B'
0000000000008cae         db  0x0e ; '.'
0000000000008caf         db  0x10 ; '.'
0000000000008cb0         db  0x8f ; '.'
0000000000008cb1         db  0x02 ; '.'
0000000000008cb2         db  0x42 ; 'B'
0000000000008cb3         db  0x0e ; '.'
0000000000008cb4         db  0x18 ; '.'
0000000000008cb5         db  0x8e ; '.'
0000000000008cb6         db  0x03 ; '.'
0000000000008cb7         db  0x49 ; 'I'
0000000000008cb8         db  0x0e ; '.'
0000000000008cb9         db  0x20 ; ' '
0000000000008cba         db  0x8d ; '.'
0000000000008cbb         db  0x04 ; '.'
0000000000008cbc         db  0x42 ; 'B'
0000000000008cbd         db  0x0e ; '.'
0000000000008cbe         db  0x28 ; '('
0000000000008cbf         db  0x8c ; '.'
0000000000008cc0         db  0x05 ; '.'
0000000000008cc1         db  0x44 ; 'D'
0000000000008cc2         db  0x0e ; '.'
0000000000008cc3         db  0x30 ; '0'
0000000000008cc4         db  0x86 ; '.'
0000000000008cc5         db  0x06 ; '.'
0000000000008cc6         db  0x41 ; 'A'
0000000000008cc7         db  0x0e ; '.'
0000000000008cc8         db  0x38 ; '8'
0000000000008cc9         db  0x83 ; '.'
0000000000008cca         db  0x07 ; '.'
0000000000008ccb         db  0x4d ; 'M'
0000000000008ccc         db  0x0e ; '.'
0000000000008ccd         db  0x70 ; 'p'
0000000000008cce         db  0x65 ; 'e'
0000000000008ccf         db  0x0e ; '.'
0000000000008cd0         db  0x78 ; 'x'
0000000000008cd1         db  0x4d ; 'M'
0000000000008cd2         db  0x0e ; '.'
0000000000008cd3         db  0x80 ; '.'
0000000000008cd4         db  0x01 ; '.'
0000000000008cd5         db  0x46 ; 'F'
0000000000008cd6         db  0x0e ; '.'
0000000000008cd7         db  0x88 ; '.'
0000000000008cd8         db  0x01 ; '.'
0000000000008cd9         db  0x42 ; 'B'
0000000000008cda         db  0x0e ; '.'
0000000000008cdb         db  0x90 ; '.'
0000000000008cdc         db  0x01 ; '.'
0000000000008cdd         db  0x5e ; '^'
0000000000008cde         db  0x0e ; '.'
0000000000008cdf         db  0x70 ; 'p'
0000000000008ce0         db  0x56 ; 'V'
0000000000008ce1         db  0x0e ; '.'
0000000000008ce2         db  0x78 ; 'x'
0000000000008ce3         db  0x43 ; 'C'
0000000000008ce4         db  0x0e ; '.'
0000000000008ce5         db  0x80 ; '.'
0000000000008ce6         db  0x01 ; '.'
0000000000008ce7         db  0x43 ; 'C'
0000000000008ce8         db  0x0e ; '.'
0000000000008ce9         db  0x88 ; '.'
0000000000008cea         db  0x01 ; '.'
0000000000008ceb         db  0x56 ; 'V'
0000000000008cec         db  0x0e ; '.'
0000000000008ced         db  0x90 ; '.'
0000000000008cee         db  0x01 ; '.'
0000000000008cef         db  0x52 ; 'R'
0000000000008cf0         db  0x0e ; '.'
0000000000008cf1         db  0x70 ; 'p'
0000000000008cf2         db  0x5b ; '['
0000000000008cf3         db  0x0e ; '.'
0000000000008cf4         db  0x38 ; '8'
0000000000008cf5         db  0x41 ; 'A'
0000000000008cf6         db  0x0e ; '.'
0000000000008cf7         db  0x30 ; '0'
0000000000008cf8         db  0x41 ; 'A'
0000000000008cf9         db  0x0e ; '.'
0000000000008cfa         db  0x28 ; '('
0000000000008cfb         db  0x42 ; 'B'
0000000000008cfc         db  0x0e ; '.'
0000000000008cfd         db  0x20 ; ' '
0000000000008cfe         db  0x42 ; 'B'
0000000000008cff         db  0x0e ; '.'
0000000000008d00         db  0x18 ; '.'
0000000000008d01         db  0x42 ; 'B'
0000000000008d02         db  0x0e ; '.'
0000000000008d03         db  0x10 ; '.'
0000000000008d04         db  0x42 ; 'B'
0000000000008d05         db  0x0e ; '.'
0000000000008d06         db  0x08 ; '.'
0000000000008d07         db  0x00 ; '.'
0000000000008d08         dd         0x00000010                                  ; Length of the record
0000000000008d0c         dd         0x00000a94                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008d10         db         0x00, 0xcc, 2 dup (0xff)                    ; begin 0x5910
0000000000008d14         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x591a)
0000000000008d18         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d19         align      4
0000000000008d1c         dd         0x00000028                                  ; Length of the record
0000000000008d20         dd         0x00000aa8                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008d24         db         0xfc, 0xcb, 2 dup (0xff)                    ; begin 0x5920
0000000000008d28         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x59b3)
0000000000008d2c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d2d         db  0x48 ; 'H'
0000000000008d2e         db  0x0e ; '.'
0000000000008d2f         db  0x10 ; '.'
0000000000008d30         db  0x8c ; '.'
0000000000008d31         db  0x02 ; '.'
0000000000008d32         db  0x48 ; 'H'
0000000000008d33         db  0x0e ; '.'
0000000000008d34         db  0x18 ; '.'
0000000000008d35         db  0x86 ; '.'
0000000000008d36         db  0x03 ; '.'
0000000000008d37         db  0x41 ; 'A'
0000000000008d38         db  0x0e ; '.'
0000000000008d39         db  0x20 ; ' '
0000000000008d3a         db  0x83 ; '.'
0000000000008d3b         db  0x04 ; '.'
0000000000008d3c         db  0x02 ; '.'
0000000000008d3d         db  0x74 ; 't'
0000000000008d3e         db  0x0e ; '.'
0000000000008d3f         db  0x18 ; '.'
0000000000008d40         db  0x4b ; 'K'
0000000000008d41         db  0x0e ; '.'
0000000000008d42         db  0x10 ; '.'
0000000000008d43         db  0x42 ; 'B'
0000000000008d44         db  0x0e ; '.'
0000000000008d45         db  0x08 ; '.'
0000000000008d46         db  0x00 ; '.'
0000000000008d47         db  0x00 ; '.'
0000000000008d48         dd         0x00000010                                  ; Length of the record
0000000000008d4c         dd         0x00000ad4                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008d50         db         0x70, 0xcc, 2 dup (0xff)                    ; begin 0x59c0
0000000000008d54         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x59d3)
0000000000008d58         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d59         align      4
0000000000008d5c         dd         0x00000010                                  ; Length of the record
0000000000008d60         dd         0x00000ae8                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008d64         db         0x7c, 0xcc, 2 dup (0xff)                    ; begin 0x59e0
0000000000008d68         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x59ec)
0000000000008d6c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d6d         align      16
0000000000008d70         dd         0x00000010                                  ; Length of the record
0000000000008d74         dd         0x00000afc                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008d78         db         0x78, 0xcc, 2 dup (0xff)                    ; begin 0x59f0
0000000000008d7c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x5a08)
0000000000008d80         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d81         align      4
0000000000008d84         dd         0x00000010                                  ; Length of the record
0000000000008d88         dd         0x00000b10                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008d8c         db         0x84, 0xcc, 2 dup (0xff)                    ; begin 0x5a10
0000000000008d90         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x5a24)
0000000000008d94         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d95         align      8
0000000000008d98         dd         0x00000018                                  ; Length of the record
0000000000008d9c         dd         0x00000b24                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008da0         db         0x90, 0xcc, 2 dup (0xff)                    ; begin 0x5a30
0000000000008da4         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x5abe)
0000000000008da8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008da9         db  0x44 ; 'D'
0000000000008daa         db  0x0e ; '.'
0000000000008dab         db  0x50 ; 'P'
0000000000008dac         db  0x02 ; '.'
0000000000008dad         db  0x7f ; '.'
0000000000008dae         db  0x0a ; '.'
0000000000008daf         db  0x0e ; '.'
0000000000008db0         db  0x08 ; '.'
0000000000008db1         db  0x41 ; 'A'
0000000000008db2         db  0x0b ; '.'
0000000000008db3         db  0x00 ; '.'
0000000000008db4         dd         0x00000018                                  ; Length of the record
0000000000008db8         dd         0x00000b40                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008dbc         db         0x04, 0xcd, 2 dup (0xff)                    ; begin 0x5ac0
0000000000008dc0         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x5b4a)
0000000000008dc4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008dc5         db  0x44 ; 'D'
0000000000008dc6         db  0x0e ; '.'
0000000000008dc7         db  0x50 ; 'P'
0000000000008dc8         db  0x02 ; '.'
0000000000008dc9         db  0x7b ; '{'
0000000000008dca         db  0x0a ; '.'
0000000000008dcb         db  0x0e ; '.'
0000000000008dcc         db  0x08 ; '.'
0000000000008dcd         db  0x41 ; 'A'
0000000000008dce         db  0x0b ; '.'
0000000000008dcf         db  0x00 ; '.'
0000000000008dd0         dd         0x00000010                                  ; Length of the record
0000000000008dd4         dd         0x00000b5c                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008dd8         db         0x78, 0xcd, 2 dup (0xff)                    ; begin 0x5b50
0000000000008ddc         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x5b5c)
0000000000008de0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008de1         align      4
0000000000008de4         dd         0x00000010                                  ; Length of the record
0000000000008de8         dd         0x00000b70                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008dec         db         0x74, 0xcd, 2 dup (0xff)                    ; begin 0x5b60
0000000000008df0         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x5b6f)
0000000000008df4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008df5         align      8
0000000000008df8         dd         0x00000018                                  ; Length of the record
0000000000008dfc         dd         0x00000b84                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008e00         db         0x70, 0xcd, 2 dup (0xff)                    ; begin 0x5b70
0000000000008e04         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x5c08)
0000000000008e08         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e09         db  0x44 ; 'D'
0000000000008e0a         db  0x0e ; '.'
0000000000008e0b         db  0x50 ; 'P'
0000000000008e0c         db  0x02 ; '.'
0000000000008e0d         db  0x8e ; '.'
0000000000008e0e         db  0x0a ; '.'
0000000000008e0f         db  0x0e ; '.'
0000000000008e10         db  0x08 ; '.'
0000000000008e11         db  0x41 ; 'A'
0000000000008e12         db  0x0b ; '.'
0000000000008e13         db  0x00 ; '.'
0000000000008e14         dd         0x00000010                                  ; Length of the record
0000000000008e18         dd         0x00000ba0                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008e1c         db         0xf4, 0xcd, 2 dup (0xff)                    ; begin 0x5c10
0000000000008e20         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x5c20)
0000000000008e24         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e25         align      8
0000000000008e28         dd         0x00000010                                  ; Length of the record
0000000000008e2c         dd         0x00000bb4                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008e30         db         0xf0, 0xcd, 2 dup (0xff)                    ; begin 0x5c20
0000000000008e34         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x5c31)
0000000000008e38         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e39         align      4
0000000000008e3c         dd         0x00000010                                  ; Length of the record
0000000000008e40         dd         0x00000bc8                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008e44         db         0xfc, 0xcd, 2 dup (0xff)                    ; begin 0x5c40
0000000000008e48         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x5c4a)
0000000000008e4c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e4d         align      16
0000000000008e50         dd         0x00000018                                  ; Length of the record
0000000000008e54         dd         0x00000bdc                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008e58         db         0xf8, 0xcd, 2 dup (0xff)                    ; begin 0x5c50
0000000000008e5c         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x5cde)
0000000000008e60         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e61         db  0x44 ; 'D'
0000000000008e62         db  0x0e ; '.'
0000000000008e63         db  0x50 ; 'P'
0000000000008e64         db  0x02 ; '.'
0000000000008e65         db  0x7f ; '.'
0000000000008e66         db  0x0a ; '.'
0000000000008e67         db  0x0e ; '.'
0000000000008e68         db  0x08 ; '.'
0000000000008e69         db  0x41 ; 'A'
0000000000008e6a         db  0x0b ; '.'
0000000000008e6b         db  0x00 ; '.'
0000000000008e6c         dd         0x00000018                                  ; Length of the record
0000000000008e70         dd         0x00000bf8                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008e74         db         0x6c, 0xce, 2 dup (0xff)                    ; begin 0x5ce0
0000000000008e78         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x5d71)
0000000000008e7c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e7d         db  0x44 ; 'D'
0000000000008e7e         db  0x0e ; '.'
0000000000008e7f         db  0x50 ; 'P'
0000000000008e80         db  0x02 ; '.'
0000000000008e81         db  0x82 ; '.'
0000000000008e82         db  0x0a ; '.'
0000000000008e83         db  0x0e ; '.'
0000000000008e84         db  0x08 ; '.'
0000000000008e85         db  0x41 ; 'A'
0000000000008e86         db  0x0b ; '.'
0000000000008e87         db  0x00 ; '.'
0000000000008e88         dd         0x00000010                                  ; Length of the record
0000000000008e8c         dd         0x00000c14                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008e90         db         0xf0, 0xce, 2 dup (0xff)                    ; begin 0x5d80
0000000000008e94         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x5d8c)
0000000000008e98         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008e99         align      4
0000000000008e9c         dd         0x00000010                                  ; Length of the record
0000000000008ea0         dd         0x00000c28                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008ea4         db         0xec, 0xce, 2 dup (0xff)                    ; begin 0x5d90
0000000000008ea8         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x5da7)
0000000000008eac         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ead         align      16
0000000000008eb0         dd         0x00000010                                  ; Length of the record
0000000000008eb4         dd         0x00000c3c                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008eb8         db         0xf8, 0xce, 2 dup (0xff)                    ; begin 0x5db0
0000000000008ebc         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5dc3)
0000000000008ec0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ec1         align      4
0000000000008ec4         dd         0x00000010                                  ; Length of the record
0000000000008ec8         dd         0x00000c50                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008ecc         db         0x04, 0xcf, 2 dup (0xff)                    ; begin 0x5dd0
0000000000008ed0         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x5ddc)
0000000000008ed4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ed5         align      8
0000000000008ed8         dd         0x00000010                                  ; Length of the record
0000000000008edc         dd         0x00000c64                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008ee0         db         0x00, 0xcf, 2 dup (0xff)                    ; begin 0x5de0
0000000000008ee4         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x5df4)
0000000000008ee8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ee9         align      4
0000000000008eec         dd         0x00000010                                  ; Length of the record
0000000000008ef0         dd         0x00000c78                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008ef4         db         0x0c, 0xcf, 2 dup (0xff)                    ; begin 0x5e00
0000000000008ef8         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5e13)
0000000000008efc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008efd         align      256
0000000000008f00         dd         0x00000014                                  ; Length of the record
0000000000008f04         dd         0x00000c8c                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008f08         db         0x18, 0xcf, 2 dup (0xff)                    ; begin 0x5e20
0000000000008f0c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x5e38)
0000000000008f10         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008f11         align      8
0000000000008f18         dd         0x00000038                                  ; Length of the record
0000000000008f1c         dd         0x00000ca4                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008f20         db         0x20, 0xcf, 2 dup (0xff)                    ; begin 0x5e40
0000000000008f24         db         0x27, 0x01, 2 dup (0x00)                    ; length 0x127 (end at 0x5f67)
0000000000008f28         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008f29         db  0x42 ; 'B'
0000000000008f2a         db  0x0e ; '.'
0000000000008f2b         db  0x10 ; '.'
0000000000008f2c         db  0x8d ; '.'
0000000000008f2d         db  0x02 ; '.'
0000000000008f2e         db  0x42 ; 'B'
0000000000008f2f         db  0x0e ; '.'
0000000000008f30         db  0x18 ; '.'
0000000000008f31         db  0x8c ; '.'
0000000000008f32         db  0x03 ; '.'
0000000000008f33         db  0x44 ; 'D'
0000000000008f34         db  0x0e ; '.'
0000000000008f35         db  0x20 ; ' '
0000000000008f36         db  0x86 ; '.'
0000000000008f37         db  0x04 ; '.'
0000000000008f38         db  0x41 ; 'A'
0000000000008f39         db  0x0e ; '.'
0000000000008f3a         db  0x28 ; '('
0000000000008f3b         db  0x83 ; '.'
0000000000008f3c         db  0x05 ; '.'
0000000000008f3d         db  0x4f ; 'O'
0000000000008f3e         db  0x0e ; '.'
0000000000008f3f         db  0xe0 ; '.'
0000000000008f40         db  0x02 ; '.'
0000000000008f41         db  0x02 ; '.'
0000000000008f42         db  0xb5 ; '.'
0000000000008f43         db  0x0a ; '.'
0000000000008f44         db  0x0e ; '.'
0000000000008f45         db  0x28 ; '('
0000000000008f46         db  0x41 ; 'A'
0000000000008f47         db  0x0e ; '.'
0000000000008f48         db  0x20 ; ' '
0000000000008f49         db  0x41 ; 'A'
0000000000008f4a         db  0x0e ; '.'
0000000000008f4b         db  0x18 ; '.'
0000000000008f4c         db  0x42 ; 'B'
0000000000008f4d         db  0x0e ; '.'
0000000000008f4e         db  0x10 ; '.'
0000000000008f4f         db  0x42 ; 'B'
0000000000008f50         db  0x0e ; '.'
0000000000008f51         db  0x08 ; '.'
0000000000008f52         db  0x45 ; 'E'
0000000000008f53         db  0x0b ; '.'
0000000000008f54         dd         0x0000005c                                  ; Length of the record
0000000000008f58         dd         0x00000ce0                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008f5c         db         0x14, 0xd0, 2 dup (0xff)                    ; begin 0x5f70
0000000000008f60         db         0x92, 3 dup (0x00)                          ; length 0x92 (end at 0x6002)
0000000000008f64         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008f65         db  0x42 ; 'B'
0000000000008f66         db  0x0e ; '.'
0000000000008f67         db  0x10 ; '.'
0000000000008f68         db  0x8f ; '.'
0000000000008f69         db  0x02 ; '.'
0000000000008f6a         db  0x42 ; 'B'
0000000000008f6b         db  0x0e ; '.'
0000000000008f6c         db  0x18 ; '.'
0000000000008f6d         db  0x8e ; '.'
0000000000008f6e         db  0x03 ; '.'
0000000000008f6f         db  0x45 ; 'E'
0000000000008f70         db  0x0e ; '.'
0000000000008f71         db  0x20 ; ' '
0000000000008f72         db  0x8d ; '.'
0000000000008f73         db  0x04 ; '.'
0000000000008f74         db  0x42 ; 'B'
0000000000008f75         db  0x0e ; '.'
0000000000008f76         db  0x28 ; '('
0000000000008f77         db  0x8c ; '.'
0000000000008f78         db  0x05 ; '.'
0000000000008f79         db  0x41 ; 'A'
0000000000008f7a         db  0x0e ; '.'
0000000000008f7b         db  0x30 ; '0'
0000000000008f7c         db  0x86 ; '.'
0000000000008f7d         db  0x06 ; '.'
0000000000008f7e         db  0x41 ; 'A'
0000000000008f7f         db  0x0e ; '.'
0000000000008f80         db  0x38 ; '8'
0000000000008f81         db  0x83 ; '.'
0000000000008f82         db  0x07 ; '.'
0000000000008f83         db  0x4a ; 'J'
0000000000008f84         db  0x0e ; '.'
0000000000008f85         db  0x50 ; 'P'
0000000000008f86         db  0x76 ; 'v'
0000000000008f87         db  0x0a ; '.'
0000000000008f88         db  0x0e ; '.'
0000000000008f89         db  0x38 ; '8'
0000000000008f8a         db  0x43 ; 'C'
0000000000008f8b         db  0x0e ; '.'
0000000000008f8c         db  0x30 ; '0'
0000000000008f8d         db  0x41 ; 'A'
0000000000008f8e         db  0x0e ; '.'
0000000000008f8f         db  0x28 ; '('
0000000000008f90         db  0x42 ; 'B'
0000000000008f91         db  0x0e ; '.'
0000000000008f92         db  0x20 ; ' '
0000000000008f93         db  0x42 ; 'B'
0000000000008f94         db  0x0e ; '.'
0000000000008f95         db  0x18 ; '.'
0000000000008f96         db  0x42 ; 'B'
0000000000008f97         db  0x0e ; '.'
0000000000008f98         db  0x10 ; '.'
0000000000008f99         db  0x42 ; 'B'
0000000000008f9a         db  0x0e ; '.'
0000000000008f9b         db  0x08 ; '.'
0000000000008f9c         db  0x47 ; 'G'
0000000000008f9d         db  0x0b ; '.'
0000000000008f9e         db  0x5a ; 'Z'
0000000000008f9f         db  0x0e ; '.'
0000000000008fa0         db  0x38 ; '8'
0000000000008fa1         db  0x4a ; 'J'
0000000000008fa2         db  0x0e ; '.'
0000000000008fa3         db  0x30 ; '0'
0000000000008fa4         db  0x41 ; 'A'
0000000000008fa5         db  0x0e ; '.'
0000000000008fa6         db  0x28 ; '('
0000000000008fa7         db  0x42 ; 'B'
0000000000008fa8         db  0x0e ; '.'
0000000000008fa9         db  0x20 ; ' '
0000000000008faa         db  0x42 ; 'B'
0000000000008fab         db  0x0e ; '.'
0000000000008fac         db  0x18 ; '.'
0000000000008fad         db  0x42 ; 'B'
0000000000008fae         db  0x0e ; '.'
0000000000008faf         db  0x10 ; '.'
0000000000008fb0         db  0x42 ; 'B'
0000000000008fb1         db  0x0e ; '.'
0000000000008fb2         db  0x08 ; '.'
0000000000008fb3         db  0x00 ; '.'
0000000000008fb4         dd         0x00000010                                  ; Length of the record
0000000000008fb8         dd         0x00000d40                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008fbc         db         0x54, 0xd0, 2 dup (0xff)                    ; begin 0x6010
0000000000008fc0         db         0x12, 3 dup (0x00)                          ; length 0x12 (end at 0x6022)
0000000000008fc4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008fc5         align      8
0000000000008fc8         dd         0x00000110                                  ; Length of the record
0000000000008fcc         dd         0x00000d54                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000008fd0         db         0x60, 0xd0, 2 dup (0xff)                    ; begin 0x6030
0000000000008fd4         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x6447)
0000000000008fd8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008fd9         db  0x42 ; 'B'
0000000000008fda         db  0x0e ; '.'
0000000000008fdb         db  0x10 ; '.'
0000000000008fdc         db  0x8f ; '.'
0000000000008fdd         db  0x02 ; '.'
0000000000008fde         db  0x42 ; 'B'
0000000000008fdf         db  0x0e ; '.'
0000000000008fe0         db  0x18 ; '.'
0000000000008fe1         db  0x8e ; '.'
0000000000008fe2         db  0x03 ; '.'
0000000000008fe3         db  0x42 ; 'B'
0000000000008fe4         db  0x0e ; '.'
0000000000008fe5         db  0x20 ; ' '
0000000000008fe6         db  0x8d ; '.'
0000000000008fe7         db  0x04 ; '.'
0000000000008fe8         db  0x42 ; 'B'
0000000000008fe9         db  0x0e ; '.'
0000000000008fea         db  0x28 ; '('
0000000000008feb         db  0x8c ; '.'
0000000000008fec         db  0x05 ; '.'
0000000000008fed         db  0x44 ; 'D'
0000000000008fee         db  0x0e ; '.'
0000000000008fef         db  0x30 ; '0'
0000000000008ff0         db  0x86 ; '.'
0000000000008ff1         db  0x06 ; '.'
0000000000008ff2         db  0x41 ; 'A'
0000000000008ff3         db  0x0e ; '.'
0000000000008ff4         db  0x38 ; '8'
0000000000008ff5         db  0x83 ; '.'
0000000000008ff6         db  0x07 ; '.'
0000000000008ff7         db  0x4a ; 'J'
0000000000008ff8         db  0x0e ; '.'
0000000000008ff9         db  0x60 ; '`'
0000000000008ffa         db  0x02 ; '.'
0000000000008ffb         db  0xdd ; '.'
0000000000008ffc         db  0x0e ; '.'
0000000000008ffd         db  0x68 ; 'h'
0000000000008ffe         db  0x57 ; 'W'
0000000000008fff         db  0x0e ; '.'
0000000000009000         db  0x70 ; 'p'
0000000000009001         db  0x42 ; 'B'
0000000000009002         db  0x0e ; '.'
0000000000009003         db  0x78 ; 'x'
0000000000009004         db  0x42 ; 'B'
0000000000009005         db  0x0e ; '.'
0000000000009006         db  0x80 ; '.'
0000000000009007         db  0x01 ; '.'
0000000000009008         db  0x42 ; 'B'
0000000000009009         db  0x0e ; '.'
000000000000900a         db  0x88 ; '.'
000000000000900b         db  0x01 ; '.'
000000000000900c         db  0x42 ; 'B'
000000000000900d         db  0x0e ; '.'
000000000000900e         db  0x90 ; '.'
000000000000900f         db  0x01 ; '.'
0000000000009010         db  0x53 ; 'S'
0000000000009011         db  0x0e ; '.'
0000000000009012         db  0x60 ; '`'
0000000000009013         db  0x44 ; 'D'
0000000000009014         db  0x0a ; '.'
0000000000009015         db  0x0e ; '.'
0000000000009016         db  0x38 ; '8'
0000000000009017         db  0x41 ; 'A'
0000000000009018         db  0x0e ; '.'
0000000000009019         db  0x30 ; '0'
000000000000901a         db  0x41 ; 'A'
000000000000901b         db  0x0e ; '.'
000000000000901c         db  0x28 ; '('
000000000000901d         db  0x42 ; 'B'
000000000000901e         db  0x0e ; '.'
000000000000901f         db  0x20 ; ' '
0000000000009020         db  0x42 ; 'B'
0000000000009021         db  0x0e ; '.'
0000000000009022         db  0x18 ; '.'
0000000000009023         db  0x42 ; 'B'
0000000000009024         db  0x0e ; '.'
0000000000009025         db  0x10 ; '.'
0000000000009026         db  0x42 ; 'B'
0000000000009027         db  0x0e ; '.'
0000000000009028         db  0x08 ; '.'
0000000000009029         db  0x44 ; 'D'
000000000000902a         db  0x0b ; '.'
000000000000902b         db  0x02 ; '.'
000000000000902c         db  0x78 ; 'x'
000000000000902d         db  0x0a ; '.'
000000000000902e         db  0x0e ; '.'
000000000000902f         db  0x68 ; 'h'
0000000000009030         db  0x48 ; 'H'
0000000000009031         db  0x0b ; '.'
0000000000009032         db  0x5a ; 'Z'
0000000000009033         db  0x0a ; '.'
0000000000009034         db  0x0e ; '.'
0000000000009035         db  0x38 ; '8'
0000000000009036         db  0x47 ; 'G'
0000000000009037         db  0x0e ; '.'
0000000000009038         db  0x30 ; '0'
0000000000009039         db  0x41 ; 'A'
000000000000903a         db  0x0e ; '.'
000000000000903b         db  0x28 ; '('
000000000000903c         db  0x42 ; 'B'
000000000000903d         db  0x0e ; '.'
000000000000903e         db  0x20 ; ' '
000000000000903f         db  0x42 ; 'B'
0000000000009040         db  0x0e ; '.'
0000000000009041         db  0x18 ; '.'
0000000000009042         db  0x42 ; 'B'
0000000000009043         db  0x0e ; '.'
0000000000009044         db  0x10 ; '.'
0000000000009045         db  0x42 ; 'B'
0000000000009046         db  0x0e ; '.'
0000000000009047         db  0x08 ; '.'
0000000000009048         db  0x56 ; 'V'
0000000000009049         db  0x0b ; '.'
000000000000904a         db  0x5e ; '^'
000000000000904b         db  0x0a ; '.'
000000000000904c         db  0x0e ; '.'
000000000000904d         db  0x38 ; '8'
000000000000904e         db  0x52 ; 'R'
000000000000904f         db  0x0e ; '.'
0000000000009050         db  0x30 ; '0'
0000000000009051         db  0x41 ; 'A'
0000000000009052         db  0x0e ; '.'
0000000000009053         db  0x28 ; '('
0000000000009054         db  0x42 ; 'B'
0000000000009055         db  0x0e ; '.'
0000000000009056         db  0x20 ; ' '
0000000000009057         db  0x42 ; 'B'
0000000000009058         db  0x0e ; '.'
0000000000009059         db  0x18 ; '.'
000000000000905a         db  0x42 ; 'B'
000000000000905b         db  0x0e ; '.'
000000000000905c         db  0x10 ; '.'
000000000000905d         db  0x42 ; 'B'
000000000000905e         db  0x0e ; '.'
000000000000905f         db  0x08 ; '.'
0000000000009060         db  0x4f ; 'O'
0000000000009061         db  0x0b ; '.'
0000000000009062         db  0x62 ; 'b'
0000000000009063         db  0x0a ; '.'
0000000000009064         db  0x0e ; '.'
0000000000009065         db  0x38 ; '8'
0000000000009066         db  0x50 ; 'P'
0000000000009067         db  0x0e ; '.'
0000000000009068         db  0x30 ; '0'
0000000000009069         db  0x41 ; 'A'
000000000000906a         db  0x0e ; '.'
000000000000906b         db  0x28 ; '('
000000000000906c         db  0x42 ; 'B'
000000000000906d         db  0x0e ; '.'
000000000000906e         db  0x20 ; ' '
000000000000906f         db  0x42 ; 'B'
0000000000009070         db  0x0e ; '.'
0000000000009071         db  0x18 ; '.'
0000000000009072         db  0x42 ; 'B'
0000000000009073         db  0x0e ; '.'
0000000000009074         db  0x10 ; '.'
0000000000009075         db  0x42 ; 'B'
0000000000009076         db  0x0e ; '.'
0000000000009077         db  0x08 ; '.'
0000000000009078         db  0x55 ; 'U'
0000000000009079         db  0x0b ; '.'
000000000000907a         db  0x66 ; 'f'
000000000000907b         db  0x0e ; '.'
000000000000907c         db  0x68 ; 'h'
000000000000907d         db  0x42 ; 'B'
000000000000907e         db  0x0e ; '.'
000000000000907f         db  0x70 ; 'p'
0000000000009080         db  0x5c ; '\'
0000000000009081         db  0x0e ; '.'
0000000000009082         db  0x68 ; 'h'
0000000000009083         db  0x41 ; 'A'
0000000000009084         db  0x0e ; '.'
0000000000009085         db  0x60 ; '`'
0000000000009086         db  0x44 ; 'D'
0000000000009087         db  0x0a ; '.'
0000000000009088         db  0x0e ; '.'
0000000000009089         db  0x38 ; '8'
000000000000908a         db  0x41 ; 'A'
000000000000908b         db  0x0e ; '.'
000000000000908c         db  0x30 ; '0'
000000000000908d         db  0x41 ; 'A'
000000000000908e         db  0x0e ; '.'
000000000000908f         db  0x28 ; '('
0000000000009090         db  0x42 ; 'B'
0000000000009091         db  0x0e ; '.'
0000000000009092         db  0x20 ; ' '
0000000000009093         db  0x42 ; 'B'
0000000000009094         db  0x0e ; '.'
0000000000009095         db  0x18 ; '.'
0000000000009096         db  0x42 ; 'B'
0000000000009097         db  0x0e ; '.'
0000000000009098         db  0x10 ; '.'
0000000000009099         db  0x42 ; 'B'
000000000000909a         db  0x0e ; '.'
000000000000909b         db  0x08 ; '.'
000000000000909c         db  0x45 ; 'E'
000000000000909d         db  0x0b ; '.'
000000000000909e         db  0x68 ; 'h'
000000000000909f         db  0x0a ; '.'
00000000000090a0         db  0x0e ; '.'
00000000000090a1         db  0x68 ; 'h'
00000000000090a2         db  0x48 ; 'H'
00000000000090a3         db  0x0b ; '.'
00000000000090a4         db  0x72 ; 'r'
00000000000090a5         db  0x0e ; '.'
00000000000090a6         db  0x68 ; 'h'
00000000000090a7         db  0x45 ; 'E'
00000000000090a8         db  0x0e ; '.'
00000000000090a9         db  0x70 ; 'p'
00000000000090aa         db  0x42 ; 'B'
00000000000090ab         db  0x0e ; '.'
00000000000090ac         db  0x78 ; 'x'
00000000000090ad         db  0x42 ; 'B'
00000000000090ae         db  0x0e ; '.'
00000000000090af         db  0x80 ; '.'
00000000000090b0         db  0x01 ; '.'
00000000000090b1         db  0x5e ; '^'
00000000000090b2         db  0x0e ; '.'
00000000000090b3         db  0x60 ; '`'
00000000000090b4         db  0x44 ; 'D'
00000000000090b5         db  0x0a ; '.'
00000000000090b6         db  0x0e ; '.'
00000000000090b7         db  0x38 ; '8'
00000000000090b8         db  0x41 ; 'A'
00000000000090b9         db  0x0e ; '.'
00000000000090ba         db  0x30 ; '0'
00000000000090bb         db  0x41 ; 'A'
00000000000090bc         db  0x0e ; '.'
00000000000090bd         db  0x28 ; '('
00000000000090be         db  0x42 ; 'B'
00000000000090bf         db  0x0e ; '.'
00000000000090c0         db  0x20 ; ' '
00000000000090c1         db  0x42 ; 'B'
00000000000090c2         db  0x0e ; '.'
00000000000090c3         db  0x18 ; '.'
00000000000090c4         db  0x42 ; 'B'
00000000000090c5         db  0x0e ; '.'
00000000000090c6         db  0x10 ; '.'
00000000000090c7         db  0x42 ; 'B'
00000000000090c8         db  0x0e ; '.'
00000000000090c9         db  0x08 ; '.'
00000000000090ca         db  0x41 ; 'A'
00000000000090cb         db  0x0b ; '.'
00000000000090cc         db  0x79 ; 'y'
00000000000090cd         db  0x0a ; '.'
00000000000090ce         db  0x0e ; '.'
00000000000090cf         db  0x68 ; 'h'
00000000000090d0         db  0x42 ; 'B'
00000000000090d1         db  0x0e ; '.'
00000000000090d2         db  0x70 ; 'p'
00000000000090d3         db  0x42 ; 'B'
00000000000090d4         db  0x0e ; '.'
00000000000090d5         db  0x78 ; 'x'
00000000000090d6         db  0x42 ; 'B'
00000000000090d7         db  0x0e ; '.'
00000000000090d8         db  0x80 ; '.'
00000000000090d9         db  0x01 ; '.'
00000000000090da         db  0x51 ; 'Q'
00000000000090db         db  0x0b ; '.'
00000000000090dc         dd         0x00000010                                  ; Length of the record
00000000000090e0         dd         0x00000e68                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000090e4         db         0x6c, 0xd3, 2 dup (0xff)                    ; begin 0x6450
00000000000090e8         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x6470)
00000000000090ec         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000090ed         align      16
00000000000090f0         dd         0x00000018                                  ; Length of the record
00000000000090f4         dd         0x00000e7c                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000090f8         db         0x78, 0xd3, 2 dup (0xff)                    ; begin 0x6470
00000000000090fc         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x64e8)
0000000000009100         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009101         db  0x44 ; 'D'
0000000000009102         db  0x0e ; '.'
0000000000009103         db  0x70 ; 'p'
0000000000009104         db  0x02 ; '.'
0000000000009105         db  0x60 ; '`'
0000000000009106         db  0x0a ; '.'
0000000000009107         db  0x0e ; '.'
0000000000009108         db  0x08 ; '.'
0000000000009109         db  0x41 ; 'A'
000000000000910a         db  0x0b ; '.'
000000000000910b         db  0x00 ; '.'
000000000000910c         dd         0x00000028                                  ; Length of the record
0000000000009110         dd         0x00000e98                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000009114         db         0xdc, 0xd3, 2 dup (0xff)                    ; begin 0x64f0
0000000000009118         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x65c5)
000000000000911c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000911d         db  0x41 ; 'A'
000000000000911e         db  0x0e ; '.'
000000000000911f         db  0x10 ; '.'
0000000000009120         db  0x86 ; '.'
0000000000009121         db  0x02 ; '.'
0000000000009122         db  0x41 ; 'A'
0000000000009123         db  0x0e ; '.'
0000000000009124         db  0x18 ; '.'
0000000000009125         db  0x83 ; '.'
0000000000009126         db  0x03 ; '.'
0000000000009127         db  0x50 ; 'P'
0000000000009128         db  0x0e ; '.'
0000000000009129         db  0xd0 ; '.'
000000000000912a         db  0x01 ; '.'
000000000000912b         db  0x02 ; '.'
000000000000912c         db  0xab ; '.'
000000000000912d         db  0x0a ; '.'
000000000000912e         db  0x0e ; '.'
000000000000912f         db  0x18 ; '.'
0000000000009130         db  0x41 ; 'A'
0000000000009131         db  0x0e ; '.'
0000000000009132         db  0x10 ; '.'
0000000000009133         db  0x41 ; 'A'
0000000000009134         db  0x0e ; '.'
0000000000009135         db  0x08 ; '.'
0000000000009136         db  0x41 ; 'A'
0000000000009137         db  0x0b ; '.'
0000000000009138         dd         0x0000001c                                  ; Length of the record
000000000000913c         dd         0x00000ec4                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000009140         db         0x90, 0xd4, 2 dup (0xff)                    ; begin 0x65d0
0000000000009144         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x6650)
0000000000009148         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009149         db  0x41 ; 'A'
000000000000914a         db  0x0e ; '.'
000000000000914b         db  0x10 ; '.'
000000000000914c         db  0x83 ; '.'
000000000000914d         db  0x02 ; '.'
000000000000914e         db  0x02 ; '.'
000000000000914f         db  0x7a ; 'z'
0000000000009150         db  0x0e ; '.'
0000000000009151         db  0x08 ; '.'
0000000000009152         db  0x00 ; '.'
0000000000009153         db  0x00 ; '.'
0000000000009154         db  0x00 ; '.'
0000000000009155         db  0x00 ; '.'
0000000000009156         db  0x00 ; '.'
0000000000009157         db  0x00 ; '.'
0000000000009158         dd         0x00000018                                  ; Length of the record
000000000000915c         dd         0x00000ee4                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000009160         db         0xf0, 0xd4, 2 dup (0xff)                    ; begin 0x6650
0000000000009164         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x666a)
0000000000009168         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009169         db  0x41 ; 'A'
000000000000916a         db  0x0e ; '.'
000000000000916b         db  0x10 ; '.'
000000000000916c         db  0x83 ; '.'
000000000000916d         db  0x02 ; '.'
000000000000916e         db  0x53 ; 'S'
000000000000916f         db  0x0a ; '.'
0000000000009170         db  0x0e ; '.'
0000000000009171         db  0x08 ; '.'
0000000000009172         db  0x41 ; 'A'
0000000000009173         db  0x0b ; '.'
0000000000009174         dd         0x00000010                                  ; Length of the record
0000000000009178         dd         0x00000f00                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
000000000000917c         db         0xf4, 0xd4, 2 dup (0xff)                    ; begin 0x6670
0000000000009180         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x6694)
0000000000009184         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009185         db  0x5f ; '_'
0000000000009186         db  0x0e ; '.'
0000000000009187         db  0x10 ; '.'
0000000000009188         dd         0x00000010                                  ; Length of the record
000000000000918c         dd         0x00000f14                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000009190         db         0x10, 0xd5, 2 dup (0xff)                    ; begin 0x66a0
0000000000009194         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x66a2)
0000000000009198         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009199         align      4
000000000000919c         dd         0x00000020                                  ; Length of the record
00000000000091a0         dd         0x00000f28                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000091a4         db         0x0c, 0xd5, 2 dup (0xff)                    ; begin 0x66b0
00000000000091a8         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x66e6)
00000000000091ac         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000091ad         db  0x44 ; 'D'
00000000000091ae         db  0x0e ; '.'
00000000000091af         db  0x10 ; '.'
00000000000091b0         db  0x83 ; '.'
00000000000091b1         db  0x02 ; '.'
00000000000091b2         db  0x5d ; ']'
00000000000091b3         db  0x0a ; '.'
00000000000091b4         db  0x0e ; '.'
00000000000091b5         db  0x08 ; '.'
00000000000091b6         db  0x47 ; 'G'
00000000000091b7         db  0x0b ; '.'
00000000000091b8         db  0x48 ; 'H'
00000000000091b9         db  0x0a ; '.'
00000000000091ba         db  0x0e ; '.'
00000000000091bb         db  0x08 ; '.'
00000000000091bc         db  0x41 ; 'A'
00000000000091bd         db  0x0b ; '.'
00000000000091be         db  0x00 ; '.'
00000000000091bf         db  0x00 ; '.'
00000000000091c0         dd         0x00000010                                  ; Length of the record
00000000000091c4         dd         0x00000f4c                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000091c8         db         0x28, 0xd5, 2 dup (0xff)                    ; begin 0x66f0
00000000000091cc         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x6714)
00000000000091d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000091d1         db  0x5f ; '_'
00000000000091d2         db  0x0e ; '.'
00000000000091d3         db  0x10 ; '.'
00000000000091d4         dd         0x00000014                                  ; Length of the record
00000000000091d8         dd         0x00000f60                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000091dc         db         0x44, 0xd5, 2 dup (0xff)                    ; begin 0x6720
00000000000091e0         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x67a2)
00000000000091e4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000091e5         db  0x02 ; '.'
00000000000091e6         db  0x5f ; '_'
00000000000091e7         db  0x0e ; '.'
00000000000091e8         db  0x10 ; '.'
00000000000091e9         db  0x49 ; 'I'
00000000000091ea         db  0x0e ; '.'
00000000000091eb         db  0x08 ; '.'
00000000000091ec         dd         0x00000014                                  ; Length of the record
00000000000091f0         dd         0x00000f78                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000091f4         db         0xbc, 0xd5, 2 dup (0xff)                    ; begin 0x67b0
00000000000091f8         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x67fa)
00000000000091fc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000091fd         db  0x02 ; '.'
00000000000091fe         db  0x45 ; 'E'
00000000000091ff         db  0x0e ; '.'
0000000000009200         db  0x10 ; '.'
0000000000009201         db  0x00 ; '.'
0000000000009202         db  0x00 ; '.'
0000000000009203         db  0x00 ; '.'
0000000000009204         dd         0x00000018                                  ; Length of the record
0000000000009208         dd         0x00000f90                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
000000000000920c         db         0xf4, 0xd5, 2 dup (0xff)                    ; begin 0x6800
0000000000009210         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x6817)
0000000000009214         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009215         db  0x41 ; 'A'
0000000000009216         db  0x0e ; '.'
0000000000009217         db  0x10 ; '.'
0000000000009218         db  0x83 ; '.'
0000000000009219         db  0x02 ; '.'
000000000000921a         db  0x51 ; 'Q'
000000000000921b         db  0x0e ; '.'
000000000000921c         db  0x08 ; '.'
000000000000921d         db  0x00 ; '.'
000000000000921e         db  0x00 ; '.'
000000000000921f         db  0x00 ; '.'
0000000000009220         dd         0x00000018                                  ; Length of the record
0000000000009224         dd         0x00000fac                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000009228         db         0xf8, 0xd5, 2 dup (0xff)                    ; begin 0x6820
000000000000922c         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x684e)
0000000000009230         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009231         db  0x47 ; 'G'
0000000000009232         db  0x0e ; '.'
0000000000009233         db  0x10 ; '.'
0000000000009234         db  0x61 ; 'a'
0000000000009235         db  0x0a ; '.'
0000000000009236         db  0x0e ; '.'
0000000000009237         db  0x08 ; '.'
0000000000009238         db  0x41 ; 'A'
0000000000009239         db  0x0b ; '.'
000000000000923a         db  0x00 ; '.'
000000000000923b         db  0x00 ; '.'
000000000000923c         dd         0x00000024                                  ; Length of the record
0000000000009240         dd         0x00000fc8                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000009244         db         0x0c, 0xd6, 2 dup (0xff)                    ; begin 0x6850
0000000000009248         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x6878)
000000000000924c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000924d         db  0x41 ; 'A'
000000000000924e         db  0x0e ; '.'
000000000000924f         db  0x10 ; '.'
0000000000009250         db  0x86 ; '.'
0000000000009251         db  0x02 ; '.'
0000000000009252         db  0x41 ; 'A'
0000000000009253         db  0x0e ; '.'
0000000000009254         db  0x18 ; '.'
0000000000009255         db  0x83 ; '.'
0000000000009256         db  0x03 ; '.'
0000000000009257         db  0x4d ; 'M'
0000000000009258         db  0x0e ; '.'
0000000000009259         db  0x20 ; ' '
000000000000925a         db  0x49 ; 'I'
000000000000925b         db  0x0e ; '.'
000000000000925c         db  0x18 ; '.'
000000000000925d         db  0x47 ; 'G'
000000000000925e         db  0x0e ; '.'
000000000000925f         db  0x10 ; '.'
0000000000009260         db  0x41 ; 'A'
0000000000009261         db  0x0e ; '.'
0000000000009262         db  0x08 ; '.'
0000000000009263         db  0x00 ; '.'
0000000000009264         dd         0x00000018                                  ; Length of the record
0000000000009268         dd         0x00000ff0                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
000000000000926c         db         0x14, 0xd6, 2 dup (0xff)                    ; begin 0x6880
0000000000009270         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x6893)
0000000000009274         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009275         db  0x41 ; 'A'
0000000000009276         db  0x0e ; '.'
0000000000009277         db  0x10 ; '.'
0000000000009278         db  0x83 ; '.'
0000000000009279         db  0x02 ; '.'
000000000000927a         db  0x50 ; 'P'
000000000000927b         db  0x0e ; '.'
000000000000927c         db  0x08 ; '.'
000000000000927d         db  0x00 ; '.'
000000000000927e         db  0x00 ; '.'
000000000000927f         db  0x00 ; '.'
0000000000009280         dd         0x00000014                                  ; Length of the record
0000000000009284         dd         0x0000100c                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000009288         db         0x18, 0xd6, 2 dup (0xff)                    ; begin 0x68a0
000000000000928c         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x68d5)
0000000000009290         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009291         db  0x4b ; 'K'
0000000000009292         db  0x0e ; '.'
0000000000009293         db  0x10 ; '.'
0000000000009294         db  0x00 ; '.'
0000000000009295         db  0x00 ; '.'
0000000000009296         db  0x00 ; '.'
0000000000009297         db  0x00 ; '.'
0000000000009298         dd         0x0000001c                                  ; Length of the record
000000000000929c         dd         0x00001024                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000092a0         db         0x40, 0xd6, 2 dup (0xff)                    ; begin 0x68e0
00000000000092a4         db         0x2f, 3 dup (0x00)                          ; length 0x2f (end at 0x690f)
00000000000092a8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000092a9         db  0x41 ; 'A'
00000000000092aa         db  0x0e ; '.'
00000000000092ab         db  0x10 ; '.'
00000000000092ac         db  0x83 ; '.'
00000000000092ad         db  0x02 ; '.'
00000000000092ae         db  0x55 ; 'U'
00000000000092af         db  0x0a ; '.'
00000000000092b0         db  0x0e ; '.'
00000000000092b1         db  0x08 ; '.'
00000000000092b2         db  0x4a ; 'J'
00000000000092b3         db  0x0b ; '.'
00000000000092b4         db  0x00 ; '.'
00000000000092b5         db  0x00 ; '.'
00000000000092b6         db  0x00 ; '.'
00000000000092b7         db  0x00 ; '.'
00000000000092b8         dd         0x0000003c                                  ; Length of the record
00000000000092bc         dd         0x00001044                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000092c0         db         0x50, 0xd6, 2 dup (0xff)                    ; begin 0x6910
00000000000092c4         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x6993)
00000000000092c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000092c9         db  0x42 ; 'B'
00000000000092ca         db  0x0e ; '.'
00000000000092cb         db  0x10 ; '.'
00000000000092cc         db  0x8d ; '.'
00000000000092cd         db  0x02 ; '.'
00000000000092ce         db  0x42 ; 'B'
00000000000092cf         db  0x0e ; '.'
00000000000092d0         db  0x18 ; '.'
00000000000092d1         db  0x8c ; '.'
00000000000092d2         db  0x03 ; '.'
00000000000092d3         db  0x44 ; 'D'
00000000000092d4         db  0x0e ; '.'
00000000000092d5         db  0x20 ; ' '
00000000000092d6         db  0x86 ; '.'
00000000000092d7         db  0x04 ; '.'
00000000000092d8         db  0x41 ; 'A'
00000000000092d9         db  0x0e ; '.'
00000000000092da         db  0x28 ; '('
00000000000092db         db  0x83 ; '.'
00000000000092dc         db  0x05 ; '.'
00000000000092dd         db  0x4a ; 'J'
00000000000092de         db  0x0e ; '.'
00000000000092df         db  0x40 ; '@'
00000000000092e0         db  0x02 ; '.'
00000000000092e1         db  0x64 ; 'd'
00000000000092e2         db  0x0a ; '.'
00000000000092e3         db  0x0e ; '.'
00000000000092e4         db  0x28 ; '('
00000000000092e5         db  0x41 ; 'A'
00000000000092e6         db  0x0e ; '.'
00000000000092e7         db  0x20 ; ' '
00000000000092e8         db  0x41 ; 'A'
00000000000092e9         db  0x0e ; '.'
00000000000092ea         db  0x18 ; '.'
00000000000092eb         db  0x42 ; 'B'
00000000000092ec         db  0x0e ; '.'
00000000000092ed         db  0x10 ; '.'
00000000000092ee         db  0x42 ; 'B'
00000000000092ef         db  0x0e ; '.'
00000000000092f0         db  0x08 ; '.'
00000000000092f1         db  0x41 ; 'A'
00000000000092f2         db  0x0b ; '.'
00000000000092f3         db  0x00 ; '.'
00000000000092f4         db  0x00 ; '.'
00000000000092f5         db  0x00 ; '.'
00000000000092f6         db  0x00 ; '.'
00000000000092f7         db  0x00 ; '.'
00000000000092f8         dd         0x0000004c                                  ; Length of the record
00000000000092fc         dd         0x00001084                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000009300         db         0xa0, 0xd6, 2 dup (0xff)                    ; begin 0x69a0
0000000000009304         db         0xef, 3 dup (0x00)                          ; length 0xef (end at 0x6a8f)
0000000000009308         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009309         db  0x42 ; 'B'
000000000000930a         db  0x0e ; '.'
000000000000930b         db  0x10 ; '.'
000000000000930c         db  0x8f ; '.'
000000000000930d         db  0x02 ; '.'
000000000000930e         db  0x42 ; 'B'
000000000000930f         db  0x0e ; '.'
0000000000009310         db  0x18 ; '.'
0000000000009311         db  0x8e ; '.'
0000000000009312         db  0x03 ; '.'
0000000000009313         db  0x47 ; 'G'
0000000000009314         db  0x0e ; '.'
0000000000009315         db  0x20 ; ' '
0000000000009316         db  0x8d ; '.'
0000000000009317         db  0x04 ; '.'
0000000000009318         db  0x42 ; 'B'
0000000000009319         db  0x0e ; '.'
000000000000931a         db  0x28 ; '('
000000000000931b         db  0x8c ; '.'
000000000000931c         db  0x05 ; '.'
000000000000931d         db  0x44 ; 'D'
000000000000931e         db  0x0e ; '.'
000000000000931f         db  0x30 ; '0'
0000000000009320         db  0x86 ; '.'
0000000000009321         db  0x06 ; '.'
0000000000009322         db  0x41 ; 'A'
0000000000009323         db  0x0e ; '.'
0000000000009324         db  0x38 ; '8'
0000000000009325         db  0x83 ; '.'
0000000000009326         db  0x07 ; '.'
0000000000009327         db  0x5c ; '\'
0000000000009328         db  0x0e ; '.'
0000000000009329         db  0x40 ; '@'
000000000000932a         db  0x02 ; '.'
000000000000932b         db  0x61 ; 'a'
000000000000932c         db  0x0a ; '.'
000000000000932d         db  0x0e ; '.'
000000000000932e         db  0x38 ; '8'
000000000000932f         db  0x44 ; 'D'
0000000000009330         db  0x0e ; '.'
0000000000009331         db  0x30 ; '0'
0000000000009332         db  0x41 ; 'A'
0000000000009333         db  0x0e ; '.'
0000000000009334         db  0x28 ; '('
0000000000009335         db  0x42 ; 'B'
0000000000009336         db  0x0e ; '.'
0000000000009337         db  0x20 ; ' '
0000000000009338         db  0x42 ; 'B'
0000000000009339         db  0x0e ; '.'
000000000000933a         db  0x18 ; '.'
000000000000933b         db  0x42 ; 'B'
000000000000933c         db  0x0e ; '.'
000000000000933d         db  0x10 ; '.'
000000000000933e         db  0x42 ; 'B'
000000000000933f         db  0x0e ; '.'
0000000000009340         db  0x08 ; '.'
0000000000009341         db  0x44 ; 'D'
0000000000009342         db  0x0b ; '.'
0000000000009343         db  0x00 ; '.'
0000000000009344         db  0x00 ; '.'
0000000000009345         db  0x00 ; '.'
0000000000009346         db  0x00 ; '.'
0000000000009347         db  0x00 ; '.'
0000000000009348         dd         0x0000004c                                  ; Length of the record
000000000000934c         dd         0x000010d4                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000009350         db         0x40, 0xd7, 2 dup (0xff)                    ; begin 0x6a90
0000000000009354         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x6b0d)
0000000000009358         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009359         db  0x42 ; 'B'
000000000000935a         db  0x0e ; '.'
000000000000935b         db  0x10 ; '.'
000000000000935c         db  0x8c ; '.'
000000000000935d         db  0x02 ; '.'
000000000000935e         db  0x41 ; 'A'
000000000000935f         db  0x0e ; '.'
0000000000009360         db  0x18 ; '.'
0000000000009361         db  0x86 ; '.'
0000000000009362         db  0x03 ; '.'
0000000000009363         db  0x44 ; 'D'
0000000000009364         db  0x0e ; '.'
0000000000009365         db  0x20 ; ' '
0000000000009366         db  0x83 ; '.'
0000000000009367         db  0x04 ; '.'
0000000000009368         db  0x69 ; 'i'
0000000000009369         db  0x0a ; '.'
000000000000936a         db  0x0e ; '.'
000000000000936b         db  0x18 ; '.'
000000000000936c         db  0x41 ; 'A'
000000000000936d         db  0x0e ; '.'
000000000000936e         db  0x10 ; '.'
000000000000936f         db  0x42 ; 'B'
0000000000009370         db  0x0e ; '.'
0000000000009371         db  0x08 ; '.'
0000000000009372         db  0x45 ; 'E'
0000000000009373         db  0x0b ; '.'
0000000000009374         db  0x55 ; 'U'
0000000000009375         db  0x0a ; '.'
0000000000009376         db  0x0e ; '.'
0000000000009377         db  0x18 ; '.'
0000000000009378         db  0x41 ; 'A'
0000000000009379         db  0x0e ; '.'
000000000000937a         db  0x10 ; '.'
000000000000937b         db  0x42 ; 'B'
000000000000937c         db  0x0e ; '.'
000000000000937d         db  0x08 ; '.'
000000000000937e         db  0x48 ; 'H'
000000000000937f         db  0x0b ; '.'
0000000000009380         db  0x41 ; 'A'
0000000000009381         db  0x0a ; '.'
0000000000009382         db  0x0e ; '.'
0000000000009383         db  0x18 ; '.'
0000000000009384         db  0x46 ; 'F'
0000000000009385         db  0x0e ; '.'
0000000000009386         db  0x10 ; '.'
0000000000009387         db  0x42 ; 'B'
0000000000009388         db  0x0e ; '.'
0000000000009389         db  0x08 ; '.'
000000000000938a         db  0x47 ; 'G'
000000000000938b         db  0x0b ; '.'
000000000000938c         db  0x49 ; 'I'
000000000000938d         db  0x0e ; '.'
000000000000938e         db  0x18 ; '.'
000000000000938f         db  0x41 ; 'A'
0000000000009390         db  0x0e ; '.'
0000000000009391         db  0x10 ; '.'
0000000000009392         db  0x42 ; 'B'
0000000000009393         db  0x0e ; '.'
0000000000009394         db  0x08 ; '.'
0000000000009395         db  0x00 ; '.'
0000000000009396         db  0x00 ; '.'
0000000000009397         db  0x00 ; '.'
0000000000009398         dd         0x0000001c                                  ; Length of the record
000000000000939c         dd         0x00001124                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000093a0         db         0x70, 0xd7, 2 dup (0xff)                    ; begin 0x6b10
00000000000093a4         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x6b28)
00000000000093a8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000093a9         db  0x44 ; 'D'
00000000000093aa         db  0x0e ; '.'
00000000000093ab         db  0x10 ; '.'
00000000000093ac         db  0x4e ; 'N'
00000000000093ad         db  0x0a ; '.'
00000000000093ae         db  0x0e ; '.'
00000000000093af         db  0x08 ; '.'
00000000000093b0         db  0x41 ; 'A'
00000000000093b1         db  0x0b ; '.'
00000000000093b2         db  0x00 ; '.'
00000000000093b3         db  0x00 ; '.'
00000000000093b4         db  0x00 ; '.'
00000000000093b5         db  0x00 ; '.'
00000000000093b6         db  0x00 ; '.'
00000000000093b7         db  0x00 ; '.'
00000000000093b8         dd         0x00000030                                  ; Length of the record
00000000000093bc         dd         0x00001144                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000093c0         db         0x70, 0xd7, 2 dup (0xff)                    ; begin 0x6b30
00000000000093c4         db         0x5d, 3 dup (0x00)                          ; length 0x5d (end at 0x6b8d)
00000000000093c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000093c9         db  0x41 ; 'A'
00000000000093ca         db  0x0e ; '.'
00000000000093cb         db  0x10 ; '.'
00000000000093cc         db  0x86 ; '.'
00000000000093cd         db  0x02 ; '.'
00000000000093ce         db  0x41 ; 'A'
00000000000093cf         db  0x0e ; '.'
00000000000093d0         db  0x18 ; '.'
00000000000093d1         db  0x83 ; '.'
00000000000093d2         db  0x03 ; '.'
00000000000093d3         db  0x49 ; 'I'
00000000000093d4         db  0x0e ; '.'
00000000000093d5         db  0x20 ; ' '
00000000000093d6         db  0x7c ; '|'
00000000000093d7         db  0x0a ; '.'
00000000000093d8         db  0x0e ; '.'
00000000000093d9         db  0x18 ; '.'
00000000000093da         db  0x44 ; 'D'
00000000000093db         db  0x0e ; '.'
00000000000093dc         db  0x10 ; '.'
00000000000093dd         db  0x41 ; 'A'
00000000000093de         db  0x0e ; '.'
00000000000093df         db  0x08 ; '.'
00000000000093e0         db  0x44 ; 'D'
00000000000093e1         db  0x0b ; '.'
00000000000093e2         db  0x44 ; 'D'
00000000000093e3         db  0x0e ; '.'
00000000000093e4         db  0x18 ; '.'
00000000000093e5         db  0x47 ; 'G'
00000000000093e6         db  0x0e ; '.'
00000000000093e7         db  0x10 ; '.'
00000000000093e8         db  0x41 ; 'A'
00000000000093e9         db  0x0e ; '.'
00000000000093ea         db  0x08 ; '.'
00000000000093eb         db  0x00 ; '.'
00000000000093ec         dd         0x00000028                                  ; Length of the record
00000000000093f0         dd         0x00001178                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000093f4         db         0x9c, 0xd7, 2 dup (0xff)                    ; begin 0x6b90
00000000000093f8         db         0x5a, 3 dup (0x00)                          ; length 0x5a (end at 0x6bea)
00000000000093fc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000093fd         db  0x41 ; 'A'
00000000000093fe         db  0x0e ; '.'
00000000000093ff         db  0x10 ; '.'
0000000000009400         db  0x86 ; '.'
0000000000009401         db  0x02 ; '.'
0000000000009402         db  0x41 ; 'A'
0000000000009403         db  0x0e ; '.'
0000000000009404         db  0x18 ; '.'
0000000000009405         db  0x83 ; '.'
0000000000009406         db  0x03 ; '.'
0000000000009407         db  0x47 ; 'G'
0000000000009408         db  0x0e ; '.'
0000000000009409         db  0x20 ; ' '
000000000000940a         db  0x02 ; '.'
000000000000940b         db  0x41 ; 'A'
000000000000940c         db  0x0a ; '.'
000000000000940d         db  0x0e ; '.'
000000000000940e         db  0x18 ; '.'
000000000000940f         db  0x44 ; 'D'
0000000000009410         db  0x0e ; '.'
0000000000009411         db  0x10 ; '.'
0000000000009412         db  0x41 ; 'A'
0000000000009413         db  0x0e ; '.'
0000000000009414         db  0x08 ; '.'
0000000000009415         db  0x41 ; 'A'
0000000000009416         db  0x0b ; '.'
0000000000009417         db  0x00 ; '.'
0000000000009418         dd         0x00000010                                  ; Length of the record
000000000000941c         dd         0x000011a4                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000009420         db         0xd0, 0xd7, 2 dup (0xff)                    ; begin 0x6bf0
0000000000009424         db         0x5c, 3 dup (0x00)                          ; length 0x5c (end at 0x6c4c)
0000000000009428         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009429         align      4
000000000000942c         dd         0x00000028                                  ; Length of the record
0000000000009430         dd         0x000011b8                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000009434         db         0x1c, 0xd8, 2 dup (0xff)                    ; begin 0x6c50
0000000000009438         db         0x47, 3 dup (0x00)                          ; length 0x47 (end at 0x6c97)
000000000000943c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000943d         db  0x41 ; 'A'
000000000000943e         db  0x0e ; '.'
000000000000943f         db  0x10 ; '.'
0000000000009440         db  0x83 ; '.'
0000000000009441         db  0x02 ; '.'
0000000000009442         db  0x5a ; 'Z'
0000000000009443         db  0x0a ; '.'
0000000000009444         db  0x0e ; '.'
0000000000009445         db  0x08 ; '.'
0000000000009446         db  0x45 ; 'E'
0000000000009447         db  0x0b ; '.'
0000000000009448         db  0x5d ; ']'
0000000000009449         db  0x0a ; '.'
000000000000944a         db  0x0e ; '.'
000000000000944b         db  0x08 ; '.'
000000000000944c         db  0x43 ; 'C'
000000000000944d         db  0x0b ; '.'
000000000000944e         db  0x46 ; 'F'
000000000000944f         db  0x0e ; '.'
0000000000009450         db  0x08 ; '.'
0000000000009451         db  0x00 ; '.'
0000000000009452         db  0x00 ; '.'
0000000000009453         db  0x00 ; '.'
0000000000009454         db  0x00 ; '.'
0000000000009455         db  0x00 ; '.'
0000000000009456         db  0x00 ; '.'
0000000000009457         db  0x00 ; '.'
0000000000009458         dd         0x0000001c                                  ; Length of the record
000000000000945c         dd         0x000011e4                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000009460         db         0x40, 0xd8, 2 dup (0xff)                    ; begin 0x6ca0
0000000000009464         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x6d00)
0000000000009468         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009469         db  0x44 ; 'D'
000000000000946a         db  0x0e ; '.'
000000000000946b         db  0x10 ; '.'
000000000000946c         db  0x75 ; 'u'
000000000000946d         db  0x0a ; '.'
000000000000946e         db  0x0e ; '.'
000000000000946f         db  0x08 ; '.'
0000000000009470         db  0x47 ; 'G'
0000000000009471         db  0x0b ; '.'
0000000000009472         db  0x5f ; '_'
0000000000009473         db  0x0e ; '.'
0000000000009474         db  0x08 ; '.'
0000000000009475         db  0x00 ; '.'
0000000000009476         db  0x00 ; '.'
0000000000009477         db  0x00 ; '.'
0000000000009478         dd         0x00000014                                  ; Length of the record
000000000000947c         dd         0x00001204                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000009480         db         0x80, 0xd8, 2 dup (0xff)                    ; begin 0x6d00
0000000000009484         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x6d36)
0000000000009488         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009489         align      16
0000000000009490         dd         0x0000001c                                  ; Length of the record
0000000000009494         dd         0x0000121c                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000009498         db         0xa8, 0xd8, 2 dup (0xff)                    ; begin 0x6d40
000000000000949c         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x6d7c)
00000000000094a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000094a1         db  0x44 ; 'D'
00000000000094a2         db  0x0e ; '.'
00000000000094a3         db  0x10 ; '.'
00000000000094a4         db  0x61 ; 'a'
00000000000094a5         db  0x0a ; '.'
00000000000094a6         db  0x0e ; '.'
00000000000094a7         db  0x08 ; '.'
00000000000094a8         db  0x4b ; 'K'
00000000000094a9         db  0x0b ; '.'
00000000000094aa         db  0x4b ; 'K'
00000000000094ab         db  0x0e ; '.'
00000000000094ac         db  0x08 ; '.'
00000000000094ad         db  0x00 ; '.'
00000000000094ae         db  0x00 ; '.'
00000000000094af         db  0x00 ; '.'
00000000000094b0         dd         0x00000034                                  ; Length of the record
00000000000094b4         dd         0x0000123c                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000094b8         db         0xc8, 0xd8, 2 dup (0xff)                    ; begin 0x6d80
00000000000094bc         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x6dfb)
00000000000094c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000094c1         db  0x42 ; 'B'
00000000000094c2         db  0x0e ; '.'
00000000000094c3         db  0x10 ; '.'
00000000000094c4         db  0x8c ; '.'
00000000000094c5         db  0x02 ; '.'
00000000000094c6         db  0x41 ; 'A'
00000000000094c7         db  0x0e ; '.'
00000000000094c8         db  0x18 ; '.'
00000000000094c9         db  0x86 ; '.'
00000000000094ca         db  0x03 ; '.'
00000000000094cb         db  0x41 ; 'A'
00000000000094cc         db  0x0e ; '.'
00000000000094cd         db  0x20 ; ' '
00000000000094ce         db  0x83 ; '.'
00000000000094cf         db  0x04 ; '.'
00000000000094d0         db  0x7d ; '}'
00000000000094d1         db  0x0a ; '.'
00000000000094d2         db  0x0e ; '.'
00000000000094d3         db  0x18 ; '.'
00000000000094d4         db  0x41 ; 'A'
00000000000094d5         db  0x0e ; '.'
00000000000094d6         db  0x10 ; '.'
00000000000094d7         db  0x42 ; 'B'
00000000000094d8         db  0x0e ; '.'
00000000000094d9         db  0x08 ; '.'
00000000000094da         db  0x44 ; 'D'
00000000000094db         db  0x0b ; '.'
00000000000094dc         db  0x60 ; '`'
00000000000094dd         db  0x0a ; '.'
00000000000094de         db  0x0e ; '.'
00000000000094df         db  0x18 ; '.'
00000000000094e0         db  0x41 ; 'A'
00000000000094e1         db  0x0e ; '.'
00000000000094e2         db  0x10 ; '.'
00000000000094e3         db  0x42 ; 'B'
00000000000094e4         db  0x0e ; '.'
00000000000094e5         db  0x08 ; '.'
00000000000094e6         db  0x45 ; 'E'
00000000000094e7         db  0x0b ; '.'
00000000000094e8         dd         0x0000001c                                  ; Length of the record
00000000000094ec         dd         0x00001274                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000094f0         db         0x10, 0xd9, 2 dup (0xff)                    ; begin 0x6e00
00000000000094f4         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x6e40)
00000000000094f8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000094f9         db  0x44 ; 'D'
00000000000094fa         db  0x0e ; '.'
00000000000094fb         db  0x10 ; '.'
00000000000094fc         db  0x83 ; '.'
00000000000094fd         db  0x02 ; '.'
00000000000094fe         db  0x5a ; 'Z'
00000000000094ff         db  0x0a ; '.'
0000000000009500         db  0x0e ; '.'
0000000000009501         db  0x08 ; '.'
0000000000009502         db  0x4a ; 'J'
0000000000009503         db  0x0b ; '.'
0000000000009504         db  0x53 ; 'S'
0000000000009505         db  0x0e ; '.'
0000000000009506         db  0x08 ; '.'
0000000000009507         db  0x00 ; '.'
0000000000009508         dd         0x0000002c                                  ; Length of the record
000000000000950c         dd         0x00001294                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000009510         db         0x30, 0xd9, 2 dup (0xff)                    ; begin 0x6e40
0000000000009514         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x6e97)
0000000000009518         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009519         db  0x63 ; 'c'
000000000000951a         db  0x0e ; '.'
000000000000951b         db  0x10 ; '.'
000000000000951c         db  0x8c ; '.'
000000000000951d         db  0x02 ; '.'
000000000000951e         db  0x41 ; 'A'
000000000000951f         db  0x0e ; '.'
0000000000009520         db  0x18 ; '.'
0000000000009521         db  0x86 ; '.'
0000000000009522         db  0x03 ; '.'
0000000000009523         db  0x44 ; 'D'
0000000000009524         db  0x0e ; '.'
0000000000009525         db  0x20 ; ' '
0000000000009526         db  0x83 ; '.'
0000000000009527         db  0x04 ; '.'
0000000000009528         db  0x6b ; 'k'
0000000000009529         db  0x0e ; '.'
000000000000952a         db  0x18 ; '.'
000000000000952b         db  0x41 ; 'A'
000000000000952c         db  0x0e ; '.'
000000000000952d         db  0x10 ; '.'
000000000000952e         db  0x42 ; 'B'
000000000000952f         db  0x0e ; '.'
0000000000009530         db  0x08 ; '.'
0000000000009531         db  0x00 ; '.'
0000000000009532         db  0x00 ; '.'
0000000000009533         db  0x00 ; '.'
0000000000009534         db  0x00 ; '.'
0000000000009535         db  0x00 ; '.'
0000000000009536         db  0x00 ; '.'
0000000000009537         db  0x00 ; '.'
0000000000009538         dd         0x00000044                                  ; Length of the record
000000000000953c         dd         0x000012c4                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000009540         db         0x60, 0xd9, 2 dup (0xff)                    ; begin 0x6ea0
0000000000009544         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x6f05)
0000000000009548         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009549         db  0x42 ; 'B'
000000000000954a         db  0x0e ; '.'
000000000000954b         db  0x10 ; '.'
000000000000954c         db  0x8f ; '.'
000000000000954d         db  0x02 ; '.'
000000000000954e         db  0x42 ; 'B'
000000000000954f         db  0x0e ; '.'
0000000000009550         db  0x18 ; '.'
0000000000009551         db  0x8e ; '.'
0000000000009552         db  0x03 ; '.'
0000000000009553         db  0x45 ; 'E'
0000000000009554         db  0x0e ; '.'
0000000000009555         db  0x20 ; ' '
0000000000009556         db  0x8d ; '.'
0000000000009557         db  0x04 ; '.'
0000000000009558         db  0x42 ; 'B'
0000000000009559         db  0x0e ; '.'
000000000000955a         db  0x28 ; '('
000000000000955b         db  0x8c ; '.'
000000000000955c         db  0x05 ; '.'
000000000000955d         db  0x48 ; 'H'
000000000000955e         db  0x0e ; '.'
000000000000955f         db  0x30 ; '0'
0000000000009560         db  0x86 ; '.'
0000000000009561         db  0x06 ; '.'
0000000000009562         db  0x48 ; 'H'
0000000000009563         db  0x0e ; '.'
0000000000009564         db  0x38 ; '8'
0000000000009565         db  0x83 ; '.'
0000000000009566         db  0x07 ; '.'
0000000000009567         db  0x4d ; 'M'
0000000000009568         db  0x0e ; '.'
0000000000009569         db  0x40 ; '@'
000000000000956a         db  0x72 ; 'r'
000000000000956b         db  0x0e ; '.'
000000000000956c         db  0x38 ; '8'
000000000000956d         db  0x41 ; 'A'
000000000000956e         db  0x0e ; '.'
000000000000956f         db  0x30 ; '0'
0000000000009570         db  0x41 ; 'A'
0000000000009571         db  0x0e ; '.'
0000000000009572         db  0x28 ; '('
0000000000009573         db  0x42 ; 'B'
0000000000009574         db  0x0e ; '.'
0000000000009575         db  0x20 ; ' '
0000000000009576         db  0x42 ; 'B'
0000000000009577         db  0x0e ; '.'
0000000000009578         db  0x18 ; '.'
0000000000009579         db  0x42 ; 'B'
000000000000957a         db  0x0e ; '.'
000000000000957b         db  0x10 ; '.'
000000000000957c         db  0x42 ; 'B'
000000000000957d         db  0x0e ; '.'
000000000000957e         db  0x08 ; '.'
000000000000957f         db  0x00 ; '.'
0000000000009580         dd         0x00000014                                  ; Length of the record
0000000000009584         dd         0x0000130c                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
0000000000009588         db         0x88, 0xd9, 2 dup (0xff)                    ; begin 0x6f10
000000000000958c         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x6f12)
0000000000009590         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009591         align      8
0000000000009598         dd         0x00000010                                  ; Length of the record
000000000000959c         dd         0x00001324                                  ; FDE: parent CIE at 0x8278 (FDE encoding = 0x1B)
00000000000095a0         db         0x80, 0xd9, 2 dup (0xff)                    ; begin 0x6f20
00000000000095a4         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x6f2e)
00000000000095a8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000095a9         align      16


        ; Segment Segment 3
        ; Range: [0x209a30; 0x20a258[ (2088 bytes)
        ; File offset : [39472; 41120[ (1648 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x209a30; 0x209a38[ (8 bytes)
        ; File offset : [39472; 39480[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
0000000000209a30         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x209a38; 0x209a40[ (8 bytes)
        ; File offset : [39480; 39488[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
0000000000209a38         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x209a40; 0x209c38[ (504 bytes)
        ; File offset : [39488; 39992[ (504 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     longopts:
0000000000209a40         db  0x3d ; '='                                         ; DATA XREF=main+19
0000000000209a41         db  0x70 ; 'p'
0000000000209a42         db  0x00 ; '.'
0000000000209a43         db  0x00 ; '.'
0000000000209a44         db  0x00 ; '.'
0000000000209a45         db  0x00 ; '.'
0000000000209a46         db  0x00 ; '.'
0000000000209a47         db  0x00 ; '.'
0000000000209a48         db  0x00 ; '.'
0000000000209a49         db  0x00 ; '.'
0000000000209a4a         db  0x00 ; '.'
0000000000209a4b         db  0x00 ; '.'
0000000000209a4c         db  0x00 ; '.'
0000000000209a4d         db  0x00 ; '.'
0000000000209a4e         db  0x00 ; '.'
0000000000209a4f         db  0x00 ; '.'
0000000000209a50         db  0x00 ; '.'
0000000000209a51         db  0x00 ; '.'
0000000000209a52         db  0x00 ; '.'
0000000000209a53         db  0x00 ; '.'
0000000000209a54         db  0x00 ; '.'
0000000000209a55         db  0x00 ; '.'
0000000000209a56         db  0x00 ; '.'
0000000000209a57         db  0x00 ; '.'
0000000000209a58         db  0x65 ; 'e'
0000000000209a59         db  0x00 ; '.'
0000000000209a5a         db  0x00 ; '.'
0000000000209a5b         db  0x00 ; '.'
0000000000209a5c         db  0x00 ; '.'
0000000000209a5d         db  0x00 ; '.'
0000000000209a5e         db  0x00 ; '.'
0000000000209a5f         db  0x00 ; '.'
0000000000209a60         db  0x53 ; 'S'
0000000000209a61         db  0x70 ; 'p'
0000000000209a62         db  0x00 ; '.'
0000000000209a63         db  0x00 ; '.'
0000000000209a64         db  0x00 ; '.'
0000000000209a65         db  0x00 ; '.'
0000000000209a66         db  0x00 ; '.'
0000000000209a67         db  0x00 ; '.'
0000000000209a68         db  0x00 ; '.'
0000000000209a69         db  0x00 ; '.'
0000000000209a6a         db  0x00 ; '.'
0000000000209a6b         db  0x00 ; '.'
0000000000209a6c         db  0x00 ; '.'
0000000000209a6d         db  0x00 ; '.'
0000000000209a6e         db  0x00 ; '.'
0000000000209a6f         db  0x00 ; '.'
0000000000209a70         db  0x00 ; '.'
0000000000209a71         db  0x00 ; '.'
0000000000209a72         db  0x00 ; '.'
0000000000209a73         db  0x00 ; '.'
0000000000209a74         db  0x00 ; '.'
0000000000209a75         db  0x00 ; '.'
0000000000209a76         db  0x00 ; '.'
0000000000209a77         db  0x00 ; '.'
0000000000209a78         db  0x6d ; 'm'
0000000000209a79         db  0x00 ; '.'
0000000000209a7a         db  0x00 ; '.'
0000000000209a7b         db  0x00 ; '.'
0000000000209a7c         db  0x00 ; '.'
0000000000209a7d         db  0x00 ; '.'
0000000000209a7e         db  0x00 ; '.'
0000000000209a7f         db  0x00 ; '.'
0000000000209a80         db  0x68 ; 'h'
0000000000209a81         db  0x70 ; 'p'
0000000000209a82         db  0x00 ; '.'
0000000000209a83         db  0x00 ; '.'
0000000000209a84         db  0x00 ; '.'
0000000000209a85         db  0x00 ; '.'
0000000000209a86         db  0x00 ; '.'
0000000000209a87         db  0x00 ; '.'
0000000000209a88         db  0x01 ; '.'
0000000000209a89         db  0x00 ; '.'
0000000000209a8a         db  0x00 ; '.'
0000000000209a8b         db  0x00 ; '.'
0000000000209a8c         db  0x00 ; '.'
0000000000209a8d         db  0x00 ; '.'
0000000000209a8e         db  0x00 ; '.'
0000000000209a8f         db  0x00 ; '.'
0000000000209a90         db  0x00 ; '.'
0000000000209a91         db  0x00 ; '.'
0000000000209a92         db  0x00 ; '.'
0000000000209a93         db  0x00 ; '.'
0000000000209a94         db  0x00 ; '.'
0000000000209a95         db  0x00 ; '.'
0000000000209a96         db  0x00 ; '.'
0000000000209a97         db  0x00 ; '.'
0000000000209a98         db  0x80 ; '.'
0000000000209a99         db  0x00 ; '.'
0000000000209a9a         db  0x00 ; '.'
0000000000209a9b         db  0x00 ; '.'
0000000000209a9c         db  0x00 ; '.'
0000000000209a9d         db  0x00 ; '.'
0000000000209a9e         db  0x00 ; '.'
0000000000209a9f         db  0x00 ; '.'
0000000000209aa0         db  0x74 ; 't'
0000000000209aa1         db  0x70 ; 'p'
0000000000209aa2         db  0x00 ; '.'
0000000000209aa3         db  0x00 ; '.'
0000000000209aa4         db  0x00 ; '.'
0000000000209aa5         db  0x00 ; '.'
0000000000209aa6         db  0x00 ; '.'
0000000000209aa7         db  0x00 ; '.'
0000000000209aa8         db  0x01 ; '.'
0000000000209aa9         db  0x00 ; '.'
0000000000209aaa         db  0x00 ; '.'
0000000000209aab         db  0x00 ; '.'
0000000000209aac         db  0x00 ; '.'
0000000000209aad         db  0x00 ; '.'
0000000000209aae         db  0x00 ; '.'
0000000000209aaf         db  0x00 ; '.'
0000000000209ab0         db  0x00 ; '.'
0000000000209ab1         db  0x00 ; '.'
0000000000209ab2         db  0x00 ; '.'
0000000000209ab3         db  0x00 ; '.'
0000000000209ab4         db  0x00 ; '.'
0000000000209ab5         db  0x00 ; '.'
0000000000209ab6         db  0x00 ; '.'
0000000000209ab7         db  0x00 ; '.'
0000000000209ab8         db  0x81 ; '.'
0000000000209ab9         db  0x00 ; '.'
0000000000209aba         db  0x00 ; '.'
0000000000209abb         db  0x00 ; '.'
0000000000209abc         db  0x00 ; '.'
0000000000209abd         db  0x00 ; '.'
0000000000209abe         db  0x00 ; '.'
0000000000209abf         db  0x00 ; '.'
0000000000209ac0         db  0x82 ; '.'
0000000000209ac1         db  0x70 ; 'p'
0000000000209ac2         db  0x00 ; '.'
0000000000209ac3         db  0x00 ; '.'
0000000000209ac4         db  0x00 ; '.'
0000000000209ac5         db  0x00 ; '.'
0000000000209ac6         db  0x00 ; '.'
0000000000209ac7         db  0x00 ; '.'
0000000000209ac8         db  0x00 ; '.'
0000000000209ac9         db  0x00 ; '.'
0000000000209aca         db  0x00 ; '.'
0000000000209acb         db  0x00 ; '.'
0000000000209acc         db  0x00 ; '.'
0000000000209acd         db  0x00 ; '.'
0000000000209ace         db  0x00 ; '.'
0000000000209acf         db  0x00 ; '.'
0000000000209ad0         db  0x00 ; '.'
0000000000209ad1         db  0x00 ; '.'
0000000000209ad2         db  0x00 ; '.'
0000000000209ad3         db  0x00 ; '.'
0000000000209ad4         db  0x00 ; '.'
0000000000209ad5         db  0x00 ; '.'
0000000000209ad6         db  0x00 ; '.'
0000000000209ad7         db  0x00 ; '.'
0000000000209ad8         db  0x71 ; 'q'
0000000000209ad9         db  0x00 ; '.'
0000000000209ada         db  0x00 ; '.'
0000000000209adb         db  0x00 ; '.'
0000000000209adc         db  0x00 ; '.'
0000000000209add         db  0x00 ; '.'
0000000000209ade         db  0x00 ; '.'
0000000000209adf         db  0x00 ; '.'
0000000000209ae0         db  0x88 ; '.'
0000000000209ae1         db  0x70 ; 'p'
0000000000209ae2         db  0x00 ; '.'
0000000000209ae3         db  0x00 ; '.'
0000000000209ae4         db  0x00 ; '.'
0000000000209ae5         db  0x00 ; '.'
0000000000209ae6         db  0x00 ; '.'
0000000000209ae7         db  0x00 ; '.'
0000000000209ae8         db  0x00 ; '.'
0000000000209ae9         db  0x00 ; '.'
0000000000209aea         db  0x00 ; '.'
0000000000209aeb         db  0x00 ; '.'
0000000000209aec         db  0x00 ; '.'
0000000000209aed         db  0x00 ; '.'
0000000000209aee         db  0x00 ; '.'
0000000000209aef         db  0x00 ; '.'
0000000000209af0         db  0x00 ; '.'
0000000000209af1         db  0x00 ; '.'
0000000000209af2         db  0x00 ; '.'
0000000000209af3         db  0x00 ; '.'
0000000000209af4         db  0x00 ; '.'
0000000000209af5         db  0x00 ; '.'
0000000000209af6         db  0x00 ; '.'
0000000000209af7         db  0x00 ; '.'
0000000000209af8         db  0x73 ; 's'
0000000000209af9         db  0x00 ; '.'
0000000000209afa         db  0x00 ; '.'
0000000000209afb         db  0x00 ; '.'
0000000000209afc         db  0x00 ; '.'
0000000000209afd         db  0x00 ; '.'
0000000000209afe         db  0x00 ; '.'
0000000000209aff         db  0x00 ; '.'
0000000000209b00         db  0x8e ; '.'
0000000000209b01         db  0x70 ; 'p'
0000000000209b02         db  0x00 ; '.'
0000000000209b03         db  0x00 ; '.'
0000000000209b04         db  0x00 ; '.'
0000000000209b05         db  0x00 ; '.'
0000000000209b06         db  0x00 ; '.'
0000000000209b07         db  0x00 ; '.'
0000000000209b08         db  0x00 ; '.'
0000000000209b09         db  0x00 ; '.'
0000000000209b0a         db  0x00 ; '.'
0000000000209b0b         db  0x00 ; '.'
0000000000209b0c         db  0x00 ; '.'
0000000000209b0d         db  0x00 ; '.'
0000000000209b0e         db  0x00 ; '.'
0000000000209b0f         db  0x00 ; '.'
0000000000209b10         db  0x00 ; '.'
0000000000209b11         db  0x00 ; '.'
0000000000209b12         db  0x00 ; '.'
0000000000209b13         db  0x00 ; '.'
0000000000209b14         db  0x00 ; '.'
0000000000209b15         db  0x00 ; '.'
0000000000209b16         db  0x00 ; '.'
0000000000209b17         db  0x00 ; '.'
0000000000209b18         db  0x73 ; 's'
0000000000209b19         db  0x00 ; '.'
0000000000209b1a         db  0x00 ; '.'
0000000000209b1b         db  0x00 ; '.'
0000000000209b1c         db  0x00 ; '.'
0000000000209b1d         db  0x00 ; '.'
0000000000209b1e         db  0x00 ; '.'
0000000000209b1f         db  0x00 ; '.'
0000000000209b20         db  0x9a ; '.'
0000000000209b21         db  0x70 ; 'p'
0000000000209b22         db  0x00 ; '.'
0000000000209b23         db  0x00 ; '.'
0000000000209b24         db  0x00 ; '.'
0000000000209b25         db  0x00 ; '.'
0000000000209b26         db  0x00 ; '.'
0000000000209b27         db  0x00 ; '.'
0000000000209b28         db  0x00 ; '.'
0000000000209b29         db  0x00 ; '.'
0000000000209b2a         db  0x00 ; '.'
0000000000209b2b         db  0x00 ; '.'
0000000000209b2c         db  0x00 ; '.'
0000000000209b2d         db  0x00 ; '.'
0000000000209b2e         db  0x00 ; '.'
0000000000209b2f         db  0x00 ; '.'
0000000000209b30         db  0x00 ; '.'
0000000000209b31         db  0x00 ; '.'
0000000000209b32         db  0x00 ; '.'
0000000000209b33         db  0x00 ; '.'
0000000000209b34         db  0x00 ; '.'
0000000000209b35         db  0x00 ; '.'
0000000000209b36         db  0x00 ; '.'
0000000000209b37         db  0x00 ; '.'
0000000000209b38         db  0x7a ; 'z'
0000000000209b39         db  0x00 ; '.'
0000000000209b3a         db  0x00 ; '.'
0000000000209b3b         db  0x00 ; '.'
0000000000209b3c         db  0x00 ; '.'
0000000000209b3d         db  0x00 ; '.'
0000000000209b3e         db  0x00 ; '.'
0000000000209b3f         db  0x00 ; '.'
0000000000209b40         db  0x9f ; '.'
0000000000209b41         db  0x70 ; 'p'
0000000000209b42         db  0x00 ; '.'
0000000000209b43         db  0x00 ; '.'
0000000000209b44         db  0x00 ; '.'
0000000000209b45         db  0x00 ; '.'
0000000000209b46         db  0x00 ; '.'
0000000000209b47         db  0x00 ; '.'
0000000000209b48         db  0x00 ; '.'
0000000000209b49         db  0x00 ; '.'
0000000000209b4a         db  0x00 ; '.'
0000000000209b4b         db  0x00 ; '.'
0000000000209b4c         db  0x00 ; '.'
0000000000209b4d         db  0x00 ; '.'
0000000000209b4e         db  0x00 ; '.'
0000000000209b4f         db  0x00 ; '.'
0000000000209b50         db  0x00 ; '.'
0000000000209b51         db  0x00 ; '.'
0000000000209b52         db  0x00 ; '.'
0000000000209b53         db  0x00 ; '.'
0000000000209b54         db  0x00 ; '.'
0000000000209b55         db  0x00 ; '.'
0000000000209b56         db  0x00 ; '.'
0000000000209b57         db  0x00 ; '.'
0000000000209b58         db  0x4c ; 'L'
0000000000209b59         db  0x00 ; '.'
0000000000209b5a         db  0x00 ; '.'
0000000000209b5b         db  0x00 ; '.'
0000000000209b5c         db  0x00 ; '.'
0000000000209b5d         db  0x00 ; '.'
0000000000209b5e         db  0x00 ; '.'
0000000000209b5f         db  0x00 ; '.'
0000000000209b60         db  0xa7 ; '.'
0000000000209b61         db  0x70 ; 'p'
0000000000209b62         db  0x00 ; '.'
0000000000209b63         db  0x00 ; '.'
0000000000209b64         db  0x00 ; '.'
0000000000209b65         db  0x00 ; '.'
0000000000209b66         db  0x00 ; '.'
0000000000209b67         db  0x00 ; '.'
0000000000209b68         db  0x00 ; '.'
0000000000209b69         db  0x00 ; '.'
0000000000209b6a         db  0x00 ; '.'
0000000000209b6b         db  0x00 ; '.'
0000000000209b6c         db  0x00 ; '.'
0000000000209b6d         db  0x00 ; '.'
0000000000209b6e         db  0x00 ; '.'
0000000000209b6f         db  0x00 ; '.'
0000000000209b70         db  0x00 ; '.'
0000000000209b71         db  0x00 ; '.'
0000000000209b72         db  0x00 ; '.'
0000000000209b73         db  0x00 ; '.'
0000000000209b74         db  0x00 ; '.'
0000000000209b75         db  0x00 ; '.'
0000000000209b76         db  0x00 ; '.'
0000000000209b77         db  0x00 ; '.'
0000000000209b78         db  0x50 ; 'P'
0000000000209b79         db  0x00 ; '.'
0000000000209b7a         db  0x00 ; '.'
0000000000209b7b         db  0x00 ; '.'
0000000000209b7c         db  0x00 ; '.'
0000000000209b7d         db  0x00 ; '.'
0000000000209b7e         db  0x00 ; '.'
0000000000209b7f         db  0x00 ; '.'
0000000000209b80         db  0xb0 ; '.'
0000000000209b81         db  0x70 ; 'p'
0000000000209b82         db  0x00 ; '.'
0000000000209b83         db  0x00 ; '.'
0000000000209b84         db  0x00 ; '.'
0000000000209b85         db  0x00 ; '.'
0000000000209b86         db  0x00 ; '.'
0000000000209b87         db  0x00 ; '.'
0000000000209b88         db  0x00 ; '.'
0000000000209b89         db  0x00 ; '.'
0000000000209b8a         db  0x00 ; '.'
0000000000209b8b         db  0x00 ; '.'
0000000000209b8c         db  0x00 ; '.'
0000000000209b8d         db  0x00 ; '.'
0000000000209b8e         db  0x00 ; '.'
0000000000209b8f         db  0x00 ; '.'
0000000000209b90         db  0x00 ; '.'
0000000000209b91         db  0x00 ; '.'
0000000000209b92         db  0x00 ; '.'
0000000000209b93         db  0x00 ; '.'
0000000000209b94         db  0x00 ; '.'
0000000000209b95         db  0x00 ; '.'
0000000000209b96         db  0x00 ; '.'
0000000000209b97         db  0x00 ; '.'
0000000000209b98         db  0x7e ; '~'
0000000000209b99         db  0xff ; '.'
0000000000209b9a         db  0xff ; '.'
0000000000209b9b         db  0xff ; '.'
0000000000209b9c         db  0x00 ; '.'
0000000000209b9d         db  0x00 ; '.'
0000000000209b9e         db  0x00 ; '.'
0000000000209b9f         db  0x00 ; '.'
0000000000209ba0         db  0xb5 ; '.'
0000000000209ba1         db  0x70 ; 'p'
0000000000209ba2         db  0x00 ; '.'
0000000000209ba3         db  0x00 ; '.'
0000000000209ba4         db  0x00 ; '.'
0000000000209ba5         db  0x00 ; '.'
0000000000209ba6         db  0x00 ; '.'
0000000000209ba7         db  0x00 ; '.'
0000000000209ba8         db  0x00 ; '.'
0000000000209ba9         db  0x00 ; '.'
0000000000209baa         db  0x00 ; '.'
0000000000209bab         db  0x00 ; '.'
0000000000209bac         db  0x00 ; '.'
0000000000209bad         db  0x00 ; '.'
0000000000209bae         db  0x00 ; '.'
0000000000209baf         db  0x00 ; '.'
0000000000209bb0         db  0x00 ; '.'
0000000000209bb1         db  0x00 ; '.'
0000000000209bb2         db  0x00 ; '.'
0000000000209bb3         db  0x00 ; '.'
0000000000209bb4         db  0x00 ; '.'
0000000000209bb5         db  0x00 ; '.'
0000000000209bb6         db  0x00 ; '.'
0000000000209bb7         db  0x00 ; '.'
0000000000209bb8         db  0x7d ; '}'
0000000000209bb9         db  0xff ; '.'
0000000000209bba         db  0xff ; '.'
0000000000209bbb         db  0xff ; '.'
0000000000209bbc         db  0x00 ; '.'
0000000000209bbd         db  0x00 ; '.'
0000000000209bbe         db  0x00 ; '.'
0000000000209bbf         db  0x00 ; '.'
0000000000209bc0         db  0x00 ; '.'
0000000000209bc1         db  0x00 ; '.'
0000000000209bc2         db  0x00 ; '.'
0000000000209bc3         db  0x00 ; '.'
0000000000209bc4         db  0x00 ; '.'
0000000000209bc5         db  0x00 ; '.'
0000000000209bc6         db  0x00 ; '.'
0000000000209bc7         db  0x00 ; '.'
0000000000209bc8         db  0x00 ; '.'
0000000000209bc9         db  0x00 ; '.'
0000000000209bca         db  0x00 ; '.'
0000000000209bcb         db  0x00 ; '.'
0000000000209bcc         db  0x00 ; '.'
0000000000209bcd         db  0x00 ; '.'
0000000000209bce         db  0x00 ; '.'
0000000000209bcf         db  0x00 ; '.'
0000000000209bd0         db  0x00 ; '.'
0000000000209bd1         db  0x00 ; '.'
0000000000209bd2         db  0x00 ; '.'
0000000000209bd3         db  0x00 ; '.'
0000000000209bd4         db  0x00 ; '.'
0000000000209bd5         db  0x00 ; '.'
0000000000209bd6         db  0x00 ; '.'
0000000000209bd7         db  0x00 ; '.'
0000000000209bd8         db  0x00 ; '.'
0000000000209bd9         db  0x00 ; '.'
0000000000209bda         db  0x00 ; '.'
0000000000209bdb         db  0x00 ; '.'
0000000000209bdc         db  0x00 ; '.'
0000000000209bdd         db  0x00 ; '.'
0000000000209bde         db  0x00 ; '.'
0000000000209bdf         db  0x00 ; '.'
                     quoting_style_args:
0000000000209be0         db  0x19 ; '.'
0000000000209be1         db  0x76 ; 'v'
0000000000209be2         db  0x00 ; '.'
0000000000209be3         db  0x00 ; '.'
0000000000209be4         db  0x00 ; '.'
0000000000209be5         db  0x00 ; '.'
0000000000209be6         db  0x00 ; '.'
0000000000209be7         db  0x00 ; '.'
0000000000209be8         db  0x21 ; '!'
0000000000209be9         db  0x76 ; 'v'
0000000000209bea         db  0x00 ; '.'
0000000000209beb         db  0x00 ; '.'
0000000000209bec         db  0x00 ; '.'
0000000000209bed         db  0x00 ; '.'
0000000000209bee         db  0x00 ; '.'
0000000000209bef         db  0x00 ; '.'
0000000000209bf0         db  0x27 ; '''
0000000000209bf1         db  0x76 ; 'v'
0000000000209bf2         db  0x00 ; '.'
0000000000209bf3         db  0x00 ; '.'
0000000000209bf4         db  0x00 ; '.'
0000000000209bf5         db  0x00 ; '.'
0000000000209bf6         db  0x00 ; '.'
0000000000209bf7         db  0x00 ; '.'
0000000000209bf8         db  0x34 ; '4'
0000000000209bf9         db  0x76 ; 'v'
0000000000209bfa         db  0x00 ; '.'
0000000000209bfb         db  0x00 ; '.'
0000000000209bfc         db  0x00 ; '.'
0000000000209bfd         db  0x00 ; '.'
0000000000209bfe         db  0x00 ; '.'
0000000000209bff         db  0x00 ; '.'
0000000000209c00         db  0x41 ; 'A'
0000000000209c01         db  0x76 ; 'v'
0000000000209c02         db  0x00 ; '.'
0000000000209c03         db  0x00 ; '.'
0000000000209c04         db  0x00 ; '.'
0000000000209c05         db  0x00 ; '.'
0000000000209c06         db  0x00 ; '.'
0000000000209c07         db  0x00 ; '.'
0000000000209c08         db  0x55 ; 'U'
0000000000209c09         db  0x76 ; 'v'
0000000000209c0a         db  0x00 ; '.'
0000000000209c0b         db  0x00 ; '.'
0000000000209c0c         db  0x00 ; '.'
0000000000209c0d         db  0x00 ; '.'
0000000000209c0e         db  0x00 ; '.'
0000000000209c0f         db  0x00 ; '.'
0000000000209c10         db  0x57 ; 'W'
0000000000209c11         db  0x76 ; 'v'
0000000000209c12         db  0x00 ; '.'
0000000000209c13         db  0x00 ; '.'
0000000000209c14         db  0x00 ; '.'
0000000000209c15         db  0x00 ; '.'
0000000000209c16         db  0x00 ; '.'
0000000000209c17         db  0x00 ; '.'
0000000000209c18         db  0x3a ; ':'
0000000000209c19         db  0x76 ; 'v'
0000000000209c1a         db  0x00 ; '.'
0000000000209c1b         db  0x00 ; '.'
0000000000209c1c         db  0x00 ; '.'
0000000000209c1d         db  0x00 ; '.'
0000000000209c1e         db  0x00 ; '.'
0000000000209c1f         db  0x00 ; '.'
0000000000209c20         db  0x10 ; '.'
0000000000209c21         db  0x70 ; 'p'
0000000000209c22         db  0x00 ; '.'
0000000000209c23         db  0x00 ; '.'
0000000000209c24         db  0x00 ; '.'
0000000000209c25         db  0x00 ; '.'
0000000000209c26         db  0x00 ; '.'
0000000000209c27         db  0x00 ; '.'
0000000000209c28         db  0x5f ; '_'
0000000000209c29         db  0x76 ; 'v'
0000000000209c2a         db  0x00 ; '.'
0000000000209c2b         db  0x00 ; '.'
0000000000209c2c         db  0x00 ; '.'
0000000000209c2d         db  0x00 ; '.'
0000000000209c2e         db  0x00 ; '.'
0000000000209c2f         db  0x00 ; '.'
0000000000209c30         db  0x00 ; '.'
0000000000209c31         db  0x00 ; '.'
0000000000209c32         db  0x00 ; '.'
0000000000209c33         db  0x00 ; '.'
0000000000209c34         db  0x00 ; '.'
0000000000209c35         db  0x00 ; '.'
0000000000209c36         db  0x00 ; '.'
0000000000209c37         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x209c38; 0x209e28[ (496 bytes)
        ; File offset : [39992; 40488[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
0000000000209c38         db  0x01 ; '.'
0000000000209c39         db  0x00 ; '.'
0000000000209c3a         db  0x00 ; '.'
0000000000209c3b         db  0x00 ; '.'
0000000000209c3c         db  0x00 ; '.'
0000000000209c3d         db  0x00 ; '.'
0000000000209c3e         db  0x00 ; '.'
0000000000209c3f         db  0x00 ; '.'
0000000000209c40         db  0x01 ; '.'
0000000000209c41         db  0x00 ; '.'
0000000000209c42         db  0x00 ; '.'
0000000000209c43         db  0x00 ; '.'
0000000000209c44         db  0x00 ; '.'
0000000000209c45         db  0x00 ; '.'
0000000000209c46         db  0x00 ; '.'
0000000000209c47         db  0x00 ; '.'
0000000000209c48         db  0x0c ; '.'
0000000000209c49         db  0x00 ; '.'
0000000000209c4a         db  0x00 ; '.'
0000000000209c4b         db  0x00 ; '.'
0000000000209c4c         db  0x00 ; '.'
0000000000209c4d         db  0x00 ; '.'
0000000000209c4e         db  0x00 ; '.'
0000000000209c4f         db  0x00 ; '.'
0000000000209c50         db  0x80 ; '.'
0000000000209c51         db  0x14 ; '.'
0000000000209c52         db  0x00 ; '.'
0000000000209c53         db  0x00 ; '.'
0000000000209c54         db  0x00 ; '.'
0000000000209c55         db  0x00 ; '.'
0000000000209c56         db  0x00 ; '.'
0000000000209c57         db  0x00 ; '.'
0000000000209c58         db  0x0d ; '.'
0000000000209c59         db  0x00 ; '.'
0000000000209c5a         db  0x00 ; '.'
0000000000209c5b         db  0x00 ; '.'
0000000000209c5c         db  0x00 ; '.'
0000000000209c5d         db  0x00 ; '.'
0000000000209c5e         db  0x00 ; '.'
0000000000209c5f         db  0x00 ; '.'
0000000000209c60         db  0x30 ; '0'
0000000000209c61         db  0x6f ; 'o'
0000000000209c62         db  0x00 ; '.'
0000000000209c63         db  0x00 ; '.'
0000000000209c64         db  0x00 ; '.'
0000000000209c65         db  0x00 ; '.'
0000000000209c66         db  0x00 ; '.'
0000000000209c67         db  0x00 ; '.'
0000000000209c68         db  0x19 ; '.'
0000000000209c69         db  0x00 ; '.'
0000000000209c6a         db  0x00 ; '.'
0000000000209c6b         db  0x00 ; '.'
0000000000209c6c         db  0x00 ; '.'
0000000000209c6d         db  0x00 ; '.'
0000000000209c6e         db  0x00 ; '.'
0000000000209c6f         db  0x00 ; '.'
0000000000209c70         db  0x30 ; '0'
0000000000209c71         db  0x9a ; '.'
0000000000209c72         db  0x20 ; ' '
0000000000209c73         db  0x00 ; '.'
0000000000209c74         db  0x00 ; '.'
0000000000209c75         db  0x00 ; '.'
0000000000209c76         db  0x00 ; '.'
0000000000209c77         db  0x00 ; '.'
0000000000209c78         db  0x1b ; '.'
0000000000209c79         db  0x00 ; '.'
0000000000209c7a         db  0x00 ; '.'
0000000000209c7b         db  0x00 ; '.'
0000000000209c7c         db  0x00 ; '.'
0000000000209c7d         db  0x00 ; '.'
0000000000209c7e         db  0x00 ; '.'
0000000000209c7f         db  0x00 ; '.'
0000000000209c80         db  0x08 ; '.'
0000000000209c81         db  0x00 ; '.'
0000000000209c82         db  0x00 ; '.'
0000000000209c83         db  0x00 ; '.'
0000000000209c84         db  0x00 ; '.'
0000000000209c85         db  0x00 ; '.'
0000000000209c86         db  0x00 ; '.'
0000000000209c87         db  0x00 ; '.'
0000000000209c88         db  0x1a ; '.'
0000000000209c89         db  0x00 ; '.'
0000000000209c8a         db  0x00 ; '.'
0000000000209c8b         db  0x00 ; '.'
0000000000209c8c         db  0x00 ; '.'
0000000000209c8d         db  0x00 ; '.'
0000000000209c8e         db  0x00 ; '.'
0000000000209c8f         db  0x00 ; '.'
0000000000209c90         db  0x38 ; '8'
0000000000209c91         db  0x9a ; '.'
0000000000209c92         db  0x20 ; ' '
0000000000209c93         db  0x00 ; '.'
0000000000209c94         db  0x00 ; '.'
0000000000209c95         db  0x00 ; '.'
0000000000209c96         db  0x00 ; '.'
0000000000209c97         db  0x00 ; '.'
0000000000209c98         db  0x1c ; '.'
0000000000209c99         db  0x00 ; '.'
0000000000209c9a         db  0x00 ; '.'
0000000000209c9b         db  0x00 ; '.'
0000000000209c9c         db  0x00 ; '.'
0000000000209c9d         db  0x00 ; '.'
0000000000209c9e         db  0x00 ; '.'
0000000000209c9f         db  0x00 ; '.'
0000000000209ca0         db  0x08 ; '.'
0000000000209ca1         db  0x00 ; '.'
0000000000209ca2         db  0x00 ; '.'
0000000000209ca3         db  0x00 ; '.'
0000000000209ca4         db  0x00 ; '.'
0000000000209ca5         db  0x00 ; '.'
0000000000209ca6         db  0x00 ; '.'
0000000000209ca7         db  0x00 ; '.'
0000000000209ca8         db  0xf5 ; '.'
0000000000209ca9         db  0xfe ; '.'
0000000000209caa         db  0xff ; '.'
0000000000209cab         db  0x6f ; 'o'
0000000000209cac         db  0x00 ; '.'
0000000000209cad         db  0x00 ; '.'
0000000000209cae         db  0x00 ; '.'
0000000000209caf         db  0x00 ; '.'
0000000000209cb0         db  0x98 ; '.'
0000000000209cb1         db  0x02 ; '.'
0000000000209cb2         db  0x00 ; '.'
0000000000209cb3         db  0x00 ; '.'
0000000000209cb4         db  0x00 ; '.'
0000000000209cb5         db  0x00 ; '.'
0000000000209cb6         db  0x00 ; '.'
0000000000209cb7         db  0x00 ; '.'
0000000000209cb8         db  0x05 ; '.'
0000000000209cb9         db  0x00 ; '.'
0000000000209cba         db  0x00 ; '.'
0000000000209cbb         db  0x00 ; '.'
0000000000209cbc         db  0x00 ; '.'
0000000000209cbd         db  0x00 ; '.'
0000000000209cbe         db  0x00 ; '.'
0000000000209cbf         db  0x00 ; '.'
0000000000209cc0         db  0xb0 ; '.'
0000000000209cc1         db  0x08 ; '.'
0000000000209cc2         db  0x00 ; '.'
0000000000209cc3         db  0x00 ; '.'
0000000000209cc4         db  0x00 ; '.'
0000000000209cc5         db  0x00 ; '.'
0000000000209cc6         db  0x00 ; '.'
0000000000209cc7         db  0x00 ; '.'
0000000000209cc8         db  0x06 ; '.'
0000000000209cc9         db  0x00 ; '.'
0000000000209cca         db  0x00 ; '.'
0000000000209ccb         db  0x00 ; '.'
0000000000209ccc         db  0x00 ; '.'
0000000000209ccd         db  0x00 ; '.'
0000000000209cce         db  0x00 ; '.'
0000000000209ccf         db  0x00 ; '.'
0000000000209cd0         db  0xe0 ; '.'
0000000000209cd1         db  0x02 ; '.'
0000000000209cd2         db  0x00 ; '.'
0000000000209cd3         db  0x00 ; '.'
0000000000209cd4         db  0x00 ; '.'
0000000000209cd5         db  0x00 ; '.'
0000000000209cd6         db  0x00 ; '.'
0000000000209cd7         db  0x00 ; '.'
0000000000209cd8         db  0x0a ; '.'
0000000000209cd9         db  0x00 ; '.'
0000000000209cda         db  0x00 ; '.'
0000000000209cdb         db  0x00 ; '.'
0000000000209cdc         db  0x00 ; '.'
0000000000209cdd         db  0x00 ; '.'
0000000000209cde         db  0x00 ; '.'
0000000000209cdf         db  0x00 ; '.'
0000000000209ce0         db  0xcc ; '.'
0000000000209ce1         db  0x02 ; '.'
0000000000209ce2         db  0x00 ; '.'
0000000000209ce3         db  0x00 ; '.'
0000000000209ce4         db  0x00 ; '.'
0000000000209ce5         db  0x00 ; '.'
0000000000209ce6         db  0x00 ; '.'
0000000000209ce7         db  0x00 ; '.'
0000000000209ce8         db  0x0b ; '.'
0000000000209ce9         db  0x00 ; '.'
0000000000209cea         db  0x00 ; '.'
0000000000209ceb         db  0x00 ; '.'
0000000000209cec         db  0x00 ; '.'
0000000000209ced         db  0x00 ; '.'
0000000000209cee         db  0x00 ; '.'
0000000000209cef         db  0x00 ; '.'
0000000000209cf0         db  0x18 ; '.'
0000000000209cf1         db  0x00 ; '.'
0000000000209cf2         db  0x00 ; '.'
0000000000209cf3         db  0x00 ; '.'
0000000000209cf4         db  0x00 ; '.'
0000000000209cf5         db  0x00 ; '.'
0000000000209cf6         db  0x00 ; '.'
0000000000209cf7         db  0x00 ; '.'
0000000000209cf8         db  0x15 ; '.'
0000000000209cf9         db  0x00 ; '.'
0000000000209cfa         db  0x00 ; '.'
0000000000209cfb         db  0x00 ; '.'
0000000000209cfc         db  0x00 ; '.'
0000000000209cfd         db  0x00 ; '.'
0000000000209cfe         db  0x00 ; '.'
0000000000209cff         db  0x00 ; '.'
0000000000209d00         db  0x00 ; '.'
0000000000209d01         db  0x00 ; '.'
0000000000209d02         db  0x00 ; '.'
0000000000209d03         db  0x00 ; '.'
0000000000209d04         db  0x00 ; '.'
0000000000209d05         db  0x00 ; '.'
0000000000209d06         db  0x00 ; '.'
0000000000209d07         db  0x00 ; '.'
0000000000209d08         db  0x03 ; '.'
0000000000209d09         db  0x00 ; '.'
0000000000209d0a         db  0x00 ; '.'
0000000000209d0b         db  0x00 ; '.'
0000000000209d0c         db  0x00 ; '.'
0000000000209d0d         db  0x00 ; '.'
0000000000209d0e         db  0x00 ; '.'
0000000000209d0f         db  0x00 ; '.'
0000000000209d10         db  0x28 ; '('
0000000000209d11         db  0x9e ; '.'
0000000000209d12         db  0x20 ; ' '
0000000000209d13         db  0x00 ; '.'
0000000000209d14         db  0x00 ; '.'
0000000000209d15         db  0x00 ; '.'
0000000000209d16         db  0x00 ; '.'
0000000000209d17         db  0x00 ; '.'
0000000000209d18         db  0x02 ; '.'
0000000000209d19         db  0x00 ; '.'
0000000000209d1a         db  0x00 ; '.'
0000000000209d1b         db  0x00 ; '.'
0000000000209d1c         db  0x00 ; '.'
0000000000209d1d         db  0x00 ; '.'
0000000000209d1e         db  0x00 ; '.'
0000000000209d1f         db  0x00 ; '.'
0000000000209d20         db  0x80 ; '.'
0000000000209d21         db  0x04 ; '.'
0000000000209d22         db  0x00 ; '.'
0000000000209d23         db  0x00 ; '.'
0000000000209d24         db  0x00 ; '.'
0000000000209d25         db  0x00 ; '.'
0000000000209d26         db  0x00 ; '.'
0000000000209d27         db  0x00 ; '.'
0000000000209d28         db  0x14 ; '.'
0000000000209d29         db  0x00 ; '.'
0000000000209d2a         db  0x00 ; '.'
0000000000209d2b         db  0x00 ; '.'
0000000000209d2c         db  0x00 ; '.'
0000000000209d2d         db  0x00 ; '.'
0000000000209d2e         db  0x00 ; '.'
0000000000209d2f         db  0x00 ; '.'
0000000000209d30         db  0x07 ; '.'
0000000000209d31         db  0x00 ; '.'
0000000000209d32         db  0x00 ; '.'
0000000000209d33         db  0x00 ; '.'
0000000000209d34         db  0x00 ; '.'
0000000000209d35         db  0x00 ; '.'
0000000000209d36         db  0x00 ; '.'
0000000000209d37         db  0x00 ; '.'
0000000000209d38         db  0x17 ; '.'
0000000000209d39         db  0x00 ; '.'
0000000000209d3a         db  0x00 ; '.'
0000000000209d3b         db  0x00 ; '.'
0000000000209d3c         db  0x00 ; '.'
0000000000209d3d         db  0x00 ; '.'
0000000000209d3e         db  0x00 ; '.'
0000000000209d3f         db  0x00 ; '.'
0000000000209d40         db  0x00 ; '.'
0000000000209d41         db  0x10 ; '.'
0000000000209d42         db  0x00 ; '.'
0000000000209d43         db  0x00 ; '.'
0000000000209d44         db  0x00 ; '.'
0000000000209d45         db  0x00 ; '.'
0000000000209d46         db  0x00 ; '.'
0000000000209d47         db  0x00 ; '.'
0000000000209d48         db  0x07 ; '.'
0000000000209d49         db  0x00 ; '.'
0000000000209d4a         db  0x00 ; '.'
0000000000209d4b         db  0x00 ; '.'
0000000000209d4c         db  0x00 ; '.'
0000000000209d4d         db  0x00 ; '.'
0000000000209d4e         db  0x00 ; '.'
0000000000209d4f         db  0x00 ; '.'
0000000000209d50         db  0x58 ; 'X'
0000000000209d51         db  0x0c ; '.'
0000000000209d52         db  0x00 ; '.'
0000000000209d53         db  0x00 ; '.'
0000000000209d54         db  0x00 ; '.'
0000000000209d55         db  0x00 ; '.'
0000000000209d56         db  0x00 ; '.'
0000000000209d57         db  0x00 ; '.'
0000000000209d58         db  0x08 ; '.'
0000000000209d59         db  0x00 ; '.'
0000000000209d5a         db  0x00 ; '.'
0000000000209d5b         db  0x00 ; '.'
0000000000209d5c         db  0x00 ; '.'
0000000000209d5d         db  0x00 ; '.'
0000000000209d5e         db  0x00 ; '.'
0000000000209d5f         db  0x00 ; '.'
0000000000209d60         db  0xa8 ; '.'
0000000000209d61         db  0x03 ; '.'
0000000000209d62         db  0x00 ; '.'
0000000000209d63         db  0x00 ; '.'
0000000000209d64         db  0x00 ; '.'
0000000000209d65         db  0x00 ; '.'
0000000000209d66         db  0x00 ; '.'
0000000000209d67         db  0x00 ; '.'
0000000000209d68         db  0x09 ; '.'
0000000000209d69         db  0x00 ; '.'
0000000000209d6a         db  0x00 ; '.'
0000000000209d6b         db  0x00 ; '.'
0000000000209d6c         db  0x00 ; '.'
0000000000209d6d         db  0x00 ; '.'
0000000000209d6e         db  0x00 ; '.'
0000000000209d6f         db  0x00 ; '.'
0000000000209d70         db  0x18 ; '.'
0000000000209d71         db  0x00 ; '.'
0000000000209d72         db  0x00 ; '.'
0000000000209d73         db  0x00 ; '.'
0000000000209d74         db  0x00 ; '.'
0000000000209d75         db  0x00 ; '.'
0000000000209d76         db  0x00 ; '.'
0000000000209d77         db  0x00 ; '.'
0000000000209d78         db  0x1e ; '.'
0000000000209d79         db  0x00 ; '.'
0000000000209d7a         db  0x00 ; '.'
0000000000209d7b         db  0x00 ; '.'
0000000000209d7c         db  0x00 ; '.'
0000000000209d7d         db  0x00 ; '.'
0000000000209d7e         db  0x00 ; '.'
0000000000209d7f         db  0x00 ; '.'
0000000000209d80         db  0x08 ; '.'
0000000000209d81         db  0x00 ; '.'
0000000000209d82         db  0x00 ; '.'
0000000000209d83         db  0x00 ; '.'
0000000000209d84         db  0x00 ; '.'
0000000000209d85         db  0x00 ; '.'
0000000000209d86         db  0x00 ; '.'
0000000000209d87         db  0x00 ; '.'
0000000000209d88         db  0xfb ; '.'
0000000000209d89         db  0xff ; '.'
0000000000209d8a         db  0xff ; '.'
0000000000209d8b         db  0x6f ; 'o'
0000000000209d8c         db  0x00 ; '.'
0000000000209d8d         db  0x00 ; '.'
0000000000209d8e         db  0x00 ; '.'
0000000000209d8f         db  0x00 ; '.'
0000000000209d90         db  0x01 ; '.'
0000000000209d91         db  0x00 ; '.'
0000000000209d92         db  0x00 ; '.'
0000000000209d93         db  0x08 ; '.'
0000000000209d94         db  0x00 ; '.'
0000000000209d95         db  0x00 ; '.'
0000000000209d96         db  0x00 ; '.'
0000000000209d97         db  0x00 ; '.'
0000000000209d98         db  0xfe ; '.'
0000000000209d99         db  0xff ; '.'
0000000000209d9a         db  0xff ; '.'
0000000000209d9b         db  0x6f ; 'o'
0000000000209d9c         db  0x00 ; '.'
0000000000209d9d         db  0x00 ; '.'
0000000000209d9e         db  0x00 ; '.'
0000000000209d9f         db  0x00 ; '.'
0000000000209da0         db  0xf8 ; '.'
0000000000209da1         db  0x0b ; '.'
0000000000209da2         db  0x00 ; '.'
0000000000209da3         db  0x00 ; '.'
0000000000209da4         db  0x00 ; '.'
0000000000209da5         db  0x00 ; '.'
0000000000209da6         db  0x00 ; '.'
0000000000209da7         db  0x00 ; '.'
0000000000209da8         db  0xff ; '.'
0000000000209da9         db  0xff ; '.'
0000000000209daa         db  0xff ; '.'
0000000000209dab         db  0x6f ; 'o'
0000000000209dac         db  0x00 ; '.'
0000000000209dad         db  0x00 ; '.'
0000000000209dae         db  0x00 ; '.'
0000000000209daf         db  0x00 ; '.'
0000000000209db0         db  0x01 ; '.'
0000000000209db1         db  0x00 ; '.'
0000000000209db2         db  0x00 ; '.'
0000000000209db3         db  0x00 ; '.'
0000000000209db4         db  0x00 ; '.'
0000000000209db5         db  0x00 ; '.'
0000000000209db6         db  0x00 ; '.'
0000000000209db7         db  0x00 ; '.'
0000000000209db8         db  0xf0 ; '.'
0000000000209db9         db  0xff ; '.'
0000000000209dba         db  0xff ; '.'
0000000000209dbb         db  0x6f ; 'o'
0000000000209dbc         db  0x00 ; '.'
0000000000209dbd         db  0x00 ; '.'
0000000000209dbe         db  0x00 ; '.'
0000000000209dbf         db  0x00 ; '.'
0000000000209dc0         db  0x7c ; '|'
0000000000209dc1         db  0x0b ; '.'
0000000000209dc2         db  0x00 ; '.'
0000000000209dc3         db  0x00 ; '.'
0000000000209dc4         db  0x00 ; '.'
0000000000209dc5         db  0x00 ; '.'
0000000000209dc6         db  0x00 ; '.'
0000000000209dc7         db  0x00 ; '.'
0000000000209dc8         db  0xf9 ; '.'
0000000000209dc9         db  0xff ; '.'
0000000000209dca         db  0xff ; '.'
0000000000209dcb         db  0x6f ; 'o'
0000000000209dcc         db  0x00 ; '.'
0000000000209dcd         db  0x00 ; '.'
0000000000209dce         db  0x00 ; '.'
0000000000209dcf         db  0x00 ; '.'
0000000000209dd0         db  0x1c ; '.'
0000000000209dd1         db  0x00 ; '.'
0000000000209dd2         db  0x00 ; '.'
0000000000209dd3         db  0x00 ; '.'
0000000000209dd4         db  0x00 ; '.'
0000000000209dd5         db  0x00 ; '.'
0000000000209dd6         db  0x00 ; '.'
0000000000209dd7         db  0x00 ; '.'
0000000000209dd8         db  0x00 ; '.'
0000000000209dd9         db  0x00 ; '.'
0000000000209dda         db  0x00 ; '.'
0000000000209ddb         db  0x00 ; '.'
0000000000209ddc         db  0x00 ; '.'
0000000000209ddd         db  0x00 ; '.'
0000000000209dde         db  0x00 ; '.'
0000000000209ddf         db  0x00 ; '.'
0000000000209de0         db  0x00 ; '.'
0000000000209de1         db  0x00 ; '.'
0000000000209de2         db  0x00 ; '.'
0000000000209de3         db  0x00 ; '.'
0000000000209de4         db  0x00 ; '.'
0000000000209de5         db  0x00 ; '.'
0000000000209de6         db  0x00 ; '.'
0000000000209de7         db  0x00 ; '.'
0000000000209de8         db  0x00 ; '.'
0000000000209de9         db  0x00 ; '.'
0000000000209dea         db  0x00 ; '.'
0000000000209deb         db  0x00 ; '.'
0000000000209dec         db  0x00 ; '.'
0000000000209ded         db  0x00 ; '.'
0000000000209dee         db  0x00 ; '.'
0000000000209def         db  0x00 ; '.'
0000000000209df0         db  0x00 ; '.'
0000000000209df1         db  0x00 ; '.'
0000000000209df2         db  0x00 ; '.'
0000000000209df3         db  0x00 ; '.'
0000000000209df4         db  0x00 ; '.'
0000000000209df5         db  0x00 ; '.'
0000000000209df6         db  0x00 ; '.'
0000000000209df7         db  0x00 ; '.'
0000000000209df8         db  0x00 ; '.'
0000000000209df9         db  0x00 ; '.'
0000000000209dfa         db  0x00 ; '.'
0000000000209dfb         db  0x00 ; '.'
0000000000209dfc         db  0x00 ; '.'
0000000000209dfd         db  0x00 ; '.'
0000000000209dfe         db  0x00 ; '.'
0000000000209dff         db  0x00 ; '.'
0000000000209e00         db  0x00 ; '.'
0000000000209e01         db  0x00 ; '.'
0000000000209e02         db  0x00 ; '.'
0000000000209e03         db  0x00 ; '.'
0000000000209e04         db  0x00 ; '.'
0000000000209e05         db  0x00 ; '.'
0000000000209e06         db  0x00 ; '.'
0000000000209e07         db  0x00 ; '.'
0000000000209e08         db  0x00 ; '.'
0000000000209e09         db  0x00 ; '.'
0000000000209e0a         db  0x00 ; '.'
0000000000209e0b         db  0x00 ; '.'
0000000000209e0c         db  0x00 ; '.'
0000000000209e0d         db  0x00 ; '.'
0000000000209e0e         db  0x00 ; '.'
0000000000209e0f         db  0x00 ; '.'
0000000000209e10         db  0x00 ; '.'
0000000000209e11         db  0x00 ; '.'
0000000000209e12         db  0x00 ; '.'
0000000000209e13         db  0x00 ; '.'
0000000000209e14         db  0x00 ; '.'
0000000000209e15         db  0x00 ; '.'
0000000000209e16         db  0x00 ; '.'
0000000000209e17         db  0x00 ; '.'
0000000000209e18         db  0x00 ; '.'
0000000000209e19         db  0x00 ; '.'
0000000000209e1a         db  0x00 ; '.'
0000000000209e1b         db  0x00 ; '.'
0000000000209e1c         db  0x00 ; '.'
0000000000209e1d         db  0x00 ; '.'
0000000000209e1e         db  0x00 ; '.'
0000000000209e1f         db  0x00 ; '.'
0000000000209e20         db  0x00 ; '.'
0000000000209e21         db  0x00 ; '.'
0000000000209e22         db  0x00 ; '.'
0000000000209e23         db  0x00 ; '.'
0000000000209e24         db  0x00 ; '.'
0000000000209e25         db  0x00 ; '.'
0000000000209e26         db  0x00 ; '.'
0000000000209e27         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x209e28; 0x209fe8[ (448 bytes)
        ; File offset : [40488; 40936[ (448 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
0000000000209e28         db  0x38 ; '8'
0000000000209e29         db  0x9c ; '.'
0000000000209e2a         db  0x20 ; ' '
0000000000209e2b         db  0x00 ; '.'
0000000000209e2c         db  0x00 ; '.'
0000000000209e2d         db  0x00 ; '.'
0000000000209e2e         db  0x00 ; '.'
0000000000209e2f         db  0x00 ; '.'
                     qword_209e30:
0000000000209e30         dq         0x0000000000000000                          ; DATA XREF=0x14a0
0000000000209e38         db  0x00 ; '.'                                         ; DATA XREF=0x14a6
0000000000209e39         db  0x00 ; '.'
0000000000209e3a         db  0x00 ; '.'
0000000000209e3b         db  0x00 ; '.'
0000000000209e3c         db  0x00 ; '.'
0000000000209e3d         db  0x00 ; '.'
0000000000209e3e         db  0x00 ; '.'
0000000000209e3f         db  0x00 ; '.'
                     free@GOT:        // free
0000000000209e40         dq         0x000000000020a260                          ; DATA XREF=j_free
                     abort@GOT:        // abort
0000000000209e48         dq         0x000000000020a268                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
0000000000209e50         dq         0x000000000020a270                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
0000000000209e58         dq         0x000000000020a278                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
0000000000209e60         dq         0x000000000020a288                          ; DATA XREF=j__exit
                     __fpending@GOT:        // __fpending
0000000000209e68         dq         0x000000000020a290                          ; DATA XREF=j___fpending
                     readlink@GOT:        // readlink
0000000000209e70         dq         0x000000000020a298                          ; DATA XREF=j_readlink
                     textdomain@GOT:        // textdomain
0000000000209e78         dq         0x000000000020a2a0                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
0000000000209e80         dq         0x000000000020a2a8                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
0000000000209e88         dq         0x000000000020a2b0                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
0000000000209e90         dq         0x000000000020a2b8                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
0000000000209e98         dq         0x000000000020a2c0                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
0000000000209ea0         dq         0x000000000020a2c8                          ; DATA XREF=j_strlen
                     __lxstat@GOT:        // __lxstat
0000000000209ea8         dq         0x000000000020a2d0                          ; DATA XREF=j___lxstat
                     __stack_chk_fail@GOT:        // __stack_chk_fail
0000000000209eb0         dq         0x000000000020a2d8                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
0000000000209eb8         dq         0x000000000020a2e0                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
0000000000209ec0         dq         0x000000000020a2e8                          ; DATA XREF=j_mbrtowc
                     __fxstatat@GOT:        // __fxstatat
0000000000209ec8         dq         0x000000000020a2f0                          ; DATA XREF=j___fxstatat
                     __overflow@GOT:        // __overflow
0000000000209ed0         dq         0x000000000020a2f8                          ; DATA XREF=j___overflow
                     strrchr@GOT:        // strrchr
0000000000209ed8         dq         0x000000000020a300                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
0000000000209ee0         dq         0x000000000020a308                          ; DATA XREF=j_lseek
                     memset@GOT:        // memset
0000000000209ee8         dq         0x000000000020a310                          ; DATA XREF=j_memset
                     getcwd@GOT:        // getcwd
0000000000209ef0         dq         0x000000000020a318                          ; DATA XREF=j_getcwd
                     strspn@GOT:        // strspn
0000000000209ef8         dq         0x000000000020a320                          ; DATA XREF=j_strspn
                     memcmp@GOT:        // memcmp
0000000000209f00         dq         0x000000000020a330                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
0000000000209f08         dq         0x000000000020a338                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
0000000000209f10         dq         0x000000000020a340                          ; DATA XREF=j_calloc
                     strcmp@GOT:        // strcmp
0000000000209f18         dq         0x000000000020a348                          ; DATA XREF=j_strcmp
                     memcpy@GOT:        // memcpy
0000000000209f20         dq         0x000000000020a358                          ; DATA XREF=j_memcpy
                     fileno@GOT:        // fileno
0000000000209f28         dq         0x000000000020a360                          ; DATA XREF=j_fileno
                     __xstat@GOT:        // __xstat
0000000000209f30         dq         0x000000000020a368                          ; DATA XREF=j___xstat
                     malloc@GOT:        // malloc
0000000000209f38         dq         0x000000000020a370                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
0000000000209f40         dq         0x000000000020a378                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
0000000000209f48         dq         0x000000000020a380                          ; DATA XREF=j_nl_langinfo
                     __freading@GOT:        // __freading
0000000000209f50         dq         0x000000000020a388                          ; DATA XREF=j___freading
                     realloc@GOT:        // realloc
0000000000209f58         dq         0x000000000020a390                          ; DATA XREF=j_realloc
                     setlocale@GOT:        // setlocale
0000000000209f60         dq         0x000000000020a398                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
0000000000209f68         dq         0x000000000020a3a0                          ; DATA XREF=j___printf_chk
                     memmove@GOT:        // memmove
0000000000209f70         dq         0x000000000020a3a8                          ; DATA XREF=j_memmove
                     error@GOT:        // error
0000000000209f78         dq         0x000000000020a3b0                          ; DATA XREF=j_error
                     fseeko@GOT:        // fseeko
0000000000209f80         dq         0x000000000020a3b8                          ; DATA XREF=j_fseeko
                     __cxa_atexit@GOT:        // __cxa_atexit
0000000000209f88         dq         0x000000000020a3c0                          ; DATA XREF=j___cxa_atexit
                     exit@GOT:        // exit
0000000000209f90         dq         0x000000000020a3c8                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
0000000000209f98         dq         0x000000000020a3d0                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
0000000000209fa0         dq         0x000000000020a3d8                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
0000000000209fa8         dq         0x000000000020a3e8                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
0000000000209fb0         dq         0x000000000020a3f0                          ; DATA XREF=j_iswprint
                     __ctype_b_loc@GOT:        // __ctype_b_loc
0000000000209fb8         dq         0x000000000020a400                          ; DATA XREF=j___ctype_b_loc
                     qword_209fc0:
0000000000209fc0         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
0000000000209fc8         db  0x00 ; '.'                                         ; DATA XREF=_start+36
0000000000209fc9         db  0x00 ; '.'
0000000000209fca         db  0x00 ; '.'
0000000000209fcb         db  0x00 ; '.'
0000000000209fcc         db  0x00 ; '.'
0000000000209fcd         db  0x00 ; '.'
0000000000209fce         db  0x00 ; '.'
0000000000209fcf         db  0x00 ; '.'
                     qword_209fd0:
0000000000209fd0         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_209fd8:
0000000000209fd8         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_209fe0:
0000000000209fe0         dq         0x0000000000000000                          ; DATA XREF=j_qword_209fe0, __do_global_dtors_aux+9
0000000000209fe8         db  0x00 ; '.'
0000000000209fe9         db  0x00 ; '.'
0000000000209fea         db  0x00 ; '.'
0000000000209feb         db  0x00 ; '.'
0000000000209fec         db  0x00 ; '.'
0000000000209fed         db  0x00 ; '.'
0000000000209fee         db  0x00 ; '.'
0000000000209fef         db  0x00 ; '.'
0000000000209ff0         db  0x00 ; '.'
0000000000209ff1         db  0x00 ; '.'
0000000000209ff2         db  0x00 ; '.'
0000000000209ff3         db  0x00 ; '.'
0000000000209ff4         db  0x00 ; '.'
0000000000209ff5         db  0x00 ; '.'
0000000000209ff6         db  0x00 ; '.'
0000000000209ff7         db  0x00 ; '.'
0000000000209ff8         db  0x00 ; '.'
0000000000209ff9         db  0x00 ; '.'
0000000000209ffa         db  0x00 ; '.'
0000000000209ffb         db  0x00 ; '.'
0000000000209ffc         db  0x00 ; '.'
0000000000209ffd         db  0x00 ; '.'
0000000000209ffe         db  0x00 ; '.'
0000000000209fff         db  0x00 ; '.'


        ; Section .data
        ; Range: [0x20a000; 0x20a0a0[ (160 bytes)
        ; File offset : [40960; 41120[ (160 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

000000000020a000         db  0x00 ; '.'
000000000020a001         db  0x00 ; '.'
000000000020a002         db  0x00 ; '.'
000000000020a003         db  0x00 ; '.'
000000000020a004         db  0x00 ; '.'
000000000020a005         db  0x00 ; '.'
000000000020a006         db  0x00 ; '.'
000000000020a007         db  0x00 ; '.'
                     __dso_handle:
000000000020a008         dq         0x000000000020a008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     verbose:
000000000020a010         db         0x01                                        ; DATA XREF=main+368, main+795
000000000020a011         align      8
                     Version:
000000000020a018         dq         0x00000000000074f8                          ; "8.31", DATA XREF=main+298
                     exit_failure:
000000000020a020         dd         0x00000001                                  ; DATA XREF=close_stdout+130, xalloc_die+23
000000000020a024         db  0x00 ; '.'
000000000020a025         db  0x00 ; '.'
000000000020a026         db  0x00 ; '.'
000000000020a027         db  0x00 ; '.'
000000000020a028         db  0x00 ; '.'
000000000020a029         db  0x00 ; '.'
000000000020a02a         db  0x00 ; '.'
000000000020a02b         db  0x00 ; '.'
000000000020a02c         db  0x00 ; '.'
000000000020a02d         db  0x00 ; '.'
000000000020a02e         db  0x00 ; '.'
000000000020a02f         db  0x00 ; '.'
000000000020a030         db  0x00 ; '.'
000000000020a031         db  0x00 ; '.'
000000000020a032         db  0x00 ; '.'
000000000020a033         db  0x00 ; '.'
000000000020a034         db  0x00 ; '.'
000000000020a035         db  0x00 ; '.'
000000000020a036         db  0x00 ; '.'
000000000020a037         db  0x00 ; '.'
000000000020a038         db  0x00 ; '.'
000000000020a039         db  0x00 ; '.'
000000000020a03a         db  0x00 ; '.'
000000000020a03b         db  0x00 ; '.'
000000000020a03c         db  0x00 ; '.'
000000000020a03d         db  0x00 ; '.'
000000000020a03e         db  0x00 ; '.'
000000000020a03f         db  0x00 ; '.'
                     quote_quoting_options:
000000000020a040         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
000000000020a041         db  0x00 ; '.'
000000000020a042         db  0x00 ; '.'
000000000020a043         db  0x00 ; '.'
000000000020a044         db  0x00 ; '.'
000000000020a045         db  0x00 ; '.'
000000000020a046         db  0x00 ; '.'
000000000020a047         db  0x00 ; '.'
000000000020a048         db  0x00 ; '.'
000000000020a049         db  0x00 ; '.'
000000000020a04a         db  0x00 ; '.'
000000000020a04b         db  0x00 ; '.'
000000000020a04c         db  0x00 ; '.'
000000000020a04d         db  0x00 ; '.'
000000000020a04e         db  0x00 ; '.'
000000000020a04f         db  0x00 ; '.'
000000000020a050         db  0x00 ; '.'
000000000020a051         db  0x00 ; '.'
000000000020a052         db  0x00 ; '.'
000000000020a053         db  0x00 ; '.'
000000000020a054         db  0x00 ; '.'
000000000020a055         db  0x00 ; '.'
000000000020a056         db  0x00 ; '.'
000000000020a057         db  0x00 ; '.'
000000000020a058         db  0x00 ; '.'
000000000020a059         db  0x00 ; '.'
000000000020a05a         db  0x00 ; '.'
000000000020a05b         db  0x00 ; '.'
000000000020a05c         db  0x00 ; '.'
000000000020a05d         db  0x00 ; '.'
000000000020a05e         db  0x00 ; '.'
000000000020a05f         db  0x00 ; '.'
000000000020a060         db  0x00 ; '.'
000000000020a061         db  0x00 ; '.'
000000000020a062         db  0x00 ; '.'
000000000020a063         db  0x00 ; '.'
000000000020a064         db  0x00 ; '.'
000000000020a065         db  0x00 ; '.'
000000000020a066         db  0x00 ; '.'
000000000020a067         db  0x00 ; '.'
000000000020a068         db  0x00 ; '.'
000000000020a069         db  0x00 ; '.'
000000000020a06a         db  0x00 ; '.'
000000000020a06b         db  0x00 ; '.'
000000000020a06c         db  0x00 ; '.'
000000000020a06d         db  0x00 ; '.'
000000000020a06e         db  0x00 ; '.'
000000000020a06f         db  0x00 ; '.'
000000000020a070         db  0x00 ; '.'
000000000020a071         db  0x00 ; '.'
000000000020a072         db  0x00 ; '.'
000000000020a073         db  0x00 ; '.'
000000000020a074         db  0x00 ; '.'
000000000020a075         db  0x00 ; '.'
000000000020a076         db  0x00 ; '.'
000000000020a077         db  0x00 ; '.'
                     nslots:
000000000020a078         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020a07c         db  0x00 ; '.'
000000000020a07d         db  0x00 ; '.'
000000000020a07e         db  0x00 ; '.'
000000000020a07f         db  0x00 ; '.'
                     slotvec:
000000000020a080         dq         0x000000000020a090                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
000000000020a088         db  0x00 ; '.'
000000000020a089         db  0x00 ; '.'
000000000020a08a         db  0x00 ; '.'
000000000020a08b         db  0x00 ; '.'
000000000020a08c         db  0x00 ; '.'
000000000020a08d         db  0x00 ; '.'
000000000020a08e         db  0x00 ; '.'
000000000020a08f         db  0x00 ; '.'
                     slotvec0:
000000000020a090         dq         1.26481e-321, 1.05651e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec


        ; Section .bss
        ; Range: [0x20a0a0; 0x20a258[ (440 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
000000000020a0a0         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
000000000020a0a1         db  0x00 ; '.'
000000000020a0a2         db  0x00 ; '.'
000000000020a0a3         db  0x00 ; '.'
000000000020a0a4         db  0x00 ; '.'
000000000020a0a5         db  0x00 ; '.'
000000000020a0a6         db  0x00 ; '.'
000000000020a0a7         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
000000000020a0a8         db  0x00 ; '.'                                         ; DATA XREF=main+291, main+679, main+701, usage+125, usage+162, usage+199, usage+236, usage+832, buffer_or_output+96, close_stdout+6, emit_bug_reporting_address+90
000000000020a0a9         db  0x00 ; '.'
000000000020a0aa         db  0x00 ; '.'
000000000020a0ab         db  0x00 ; '.'
000000000020a0ac         db  0x00 ; '.'
000000000020a0ad         db  0x00 ; '.'
000000000020a0ae         db  0x00 ; '.'
000000000020a0af         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
000000000020a0b0         db  0x00 ; '.'                                         ; DATA XREF=main+444, main+598, main+746, main+758
000000000020a0b1         db  0x00 ; '.'
000000000020a0b2         db  0x00 ; '.'
000000000020a0b3         db  0x00 ; '.'
000000000020a0b4         db  0x00 ; '.'
000000000020a0b5         db  0x00 ; '.'
000000000020a0b6         db  0x00 ; '.'
000000000020a0b7         db  0x00 ; '.'
                     optarg@@GLIBC_2.2.5:
000000000020a0b8         db  0x00 ; '.'                                         ; DATA XREF=main+262, main+432
000000000020a0b9         db  0x00 ; '.'
000000000020a0ba         db  0x00 ; '.'
000000000020a0bb         db  0x00 ; '.'
000000000020a0bc         db  0x00 ; '.'
000000000020a0bd         db  0x00 ; '.'
000000000020a0be         db  0x00 ; '.'
000000000020a0bf         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
000000000020a0c0         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
000000000020a0c1         db  0x00 ; '.'
000000000020a0c2         db  0x00 ; '.'
000000000020a0c3         db  0x00 ; '.'
000000000020a0c4         db  0x00 ; '.'
000000000020a0c5         db  0x00 ; '.'
000000000020a0c6         db  0x00 ; '.'
000000000020a0c7         db  0x00 ; '.'
000000000020a0c8         db  0x00 ; '.'
000000000020a0c9         db  0x00 ; '.'
000000000020a0ca         db  0x00 ; '.'
000000000020a0cb         db  0x00 ; '.'
000000000020a0cc         db  0x00 ; '.'
000000000020a0cd         db  0x00 ; '.'
000000000020a0ce         db  0x00 ; '.'
000000000020a0cf         db  0x00 ; '.'
000000000020a0d0         db  0x00 ; '.'
000000000020a0d1         db  0x00 ; '.'
000000000020a0d2         db  0x00 ; '.'
000000000020a0d3         db  0x00 ; '.'
000000000020a0d4         db  0x00 ; '.'
000000000020a0d5         db  0x00 ; '.'
000000000020a0d6         db  0x00 ; '.'
000000000020a0d7         db  0x00 ; '.'
000000000020a0d8         db  0x00 ; '.'
000000000020a0d9         db  0x00 ; '.'
000000000020a0da         db  0x00 ; '.'
000000000020a0db         db  0x00 ; '.'
000000000020a0dc         db  0x00 ; '.'
000000000020a0dd         db  0x00 ; '.'
000000000020a0de         db  0x00 ; '.'
000000000020a0df         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
000000000020a0e0         db  0x00 ; '.'                                         ; DATA XREF=usage+61, close_stdout+44, set_program_name+125
000000000020a0e1         db  0x00 ; '.'
000000000020a0e2         db  0x00 ; '.'
000000000020a0e3         db  0x00 ; '.'
000000000020a0e4         db  0x00 ; '.'
000000000020a0e5         db  0x00 ; '.'
000000000020a0e6         db  0x00 ; '.'
000000000020a0e7         db  0x00 ; '.'
                     completed.7697:
000000000020a0e8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
000000000020a0e9         db  0x00 ; '.'
000000000020a0ea         db  0x00 ; '.'
000000000020a0eb         db  0x00 ; '.'
000000000020a0ec         db  0x00 ; '.'
000000000020a0ed         db  0x00 ; '.'
000000000020a0ee         db  0x00 ; '.'
000000000020a0ef         db  0x00 ; '.'
                     can_relative_base:
000000000020a0f0         db  0x00 ; '.'                                         ; DATA XREF=main+591, main+636, main+908, main+1044
000000000020a0f1         db  0x00 ; '.'
000000000020a0f2         db  0x00 ; '.'
000000000020a0f3         db  0x00 ; '.'
000000000020a0f4         db  0x00 ; '.'
000000000020a0f5         db  0x00 ; '.'
000000000020a0f6         db  0x00 ; '.'
000000000020a0f7         db  0x00 ; '.'
                     can_relative_to:
000000000020a0f8         db  0x00 ; '.'                                         ; DATA XREF=main+498, main+565, main+624, main+901, main+1051
000000000020a0f9         db  0x00 ; '.'
000000000020a0fa         db  0x00 ; '.'
000000000020a0fb         db  0x00 ; '.'
000000000020a0fc         db  0x00 ; '.'
000000000020a0fd         db  0x00 ; '.'
000000000020a0fe         db  0x00 ; '.'
000000000020a0ff         db  0x00 ; '.'
                     use_nuls:
000000000020a100         db  0x00 ; '.'                                         ; DATA XREF=main+384, main+694
                     logical:
000000000020a101         db  0x00 ; '.'                                         ; DATA XREF=main+188, main+403, main+419, realpath_canon+13
000000000020a102         db  0x00 ; '.'
000000000020a103         db  0x00 ; '.'
000000000020a104         db  0x00 ; '.'
000000000020a105         db  0x00 ; '.'
000000000020a106         db  0x00 ; '.'
000000000020a107         db  0x00 ; '.'
                     ignore_EPIPE:
000000000020a108         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
000000000020a109         db  0x00 ; '.'
000000000020a10a         db  0x00 ; '.'
000000000020a10b         db  0x00 ; '.'
000000000020a10c         db  0x00 ; '.'
000000000020a10d         db  0x00 ; '.'
000000000020a10e         db  0x00 ; '.'
000000000020a10f         db  0x00 ; '.'
                     file_name:
000000000020a110         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
000000000020a111         db  0x00 ; '.'
000000000020a112         db  0x00 ; '.'
000000000020a113         db  0x00 ; '.'
000000000020a114         db  0x00 ; '.'
000000000020a115         db  0x00 ; '.'
000000000020a116         db  0x00 ; '.'
000000000020a117         db  0x00 ; '.'
                     program_name:
000000000020a118         db  0x00 ; '.'                                         ; DATA XREF=usage+20, set_program_name+109
000000000020a119         db  0x00 ; '.'
000000000020a11a         db  0x00 ; '.'
000000000020a11b         db  0x00 ; '.'
000000000020a11c         db  0x00 ; '.'
000000000020a11d         db  0x00 ; '.'
000000000020a11e         db  0x00 ; '.'
000000000020a11f         db  0x00 ; '.'
                     slot0:
000000000020a120         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
000000000020a121         db  0x00 ; '.'
000000000020a122         db  0x00 ; '.'
000000000020a123         db  0x00 ; '.'
000000000020a124         db  0x00 ; '.'
000000000020a125         db  0x00 ; '.'
000000000020a126         db  0x00 ; '.'
000000000020a127         db  0x00 ; '.'
000000000020a128         db  0x00 ; '.'
000000000020a129         db  0x00 ; '.'
000000000020a12a         db  0x00 ; '.'
000000000020a12b         db  0x00 ; '.'
000000000020a12c         db  0x00 ; '.'
000000000020a12d         db  0x00 ; '.'
000000000020a12e         db  0x00 ; '.'
000000000020a12f         db  0x00 ; '.'
000000000020a130         db  0x00 ; '.'
000000000020a131         db  0x00 ; '.'
000000000020a132         db  0x00 ; '.'
000000000020a133         db  0x00 ; '.'
000000000020a134         db  0x00 ; '.'
000000000020a135         db  0x00 ; '.'
000000000020a136         db  0x00 ; '.'
000000000020a137         db  0x00 ; '.'
000000000020a138         db  0x00 ; '.'
000000000020a139         db  0x00 ; '.'
000000000020a13a         db  0x00 ; '.'
000000000020a13b         db  0x00 ; '.'
000000000020a13c         db  0x00 ; '.'
000000000020a13d         db  0x00 ; '.'
000000000020a13e         db  0x00 ; '.'
000000000020a13f         db  0x00 ; '.'
000000000020a140         db  0x00 ; '.'
000000000020a141         db  0x00 ; '.'
000000000020a142         db  0x00 ; '.'
000000000020a143         db  0x00 ; '.'
000000000020a144         db  0x00 ; '.'
000000000020a145         db  0x00 ; '.'
000000000020a146         db  0x00 ; '.'
000000000020a147         db  0x00 ; '.'
000000000020a148         db  0x00 ; '.'
000000000020a149         db  0x00 ; '.'
000000000020a14a         db  0x00 ; '.'
000000000020a14b         db  0x00 ; '.'
000000000020a14c         db  0x00 ; '.'
000000000020a14d         db  0x00 ; '.'
000000000020a14e         db  0x00 ; '.'
000000000020a14f         db  0x00 ; '.'
000000000020a150         db  0x00 ; '.'
000000000020a151         db  0x00 ; '.'
000000000020a152         db  0x00 ; '.'
000000000020a153         db  0x00 ; '.'
000000000020a154         db  0x00 ; '.'
000000000020a155         db  0x00 ; '.'
000000000020a156         db  0x00 ; '.'
000000000020a157         db  0x00 ; '.'
000000000020a158         db  0x00 ; '.'
000000000020a159         db  0x00 ; '.'
000000000020a15a         db  0x00 ; '.'
000000000020a15b         db  0x00 ; '.'
000000000020a15c         db  0x00 ; '.'
000000000020a15d         db  0x00 ; '.'
000000000020a15e         db  0x00 ; '.'
000000000020a15f         db  0x00 ; '.'
000000000020a160         db  0x00 ; '.'
000000000020a161         db  0x00 ; '.'
000000000020a162         db  0x00 ; '.'
000000000020a163         db  0x00 ; '.'
000000000020a164         db  0x00 ; '.'
000000000020a165         db  0x00 ; '.'
000000000020a166         db  0x00 ; '.'
000000000020a167         db  0x00 ; '.'
000000000020a168         db  0x00 ; '.'
000000000020a169         db  0x00 ; '.'
000000000020a16a         db  0x00 ; '.'
000000000020a16b         db  0x00 ; '.'
000000000020a16c         db  0x00 ; '.'
000000000020a16d         db  0x00 ; '.'
000000000020a16e         db  0x00 ; '.'
000000000020a16f         db  0x00 ; '.'
000000000020a170         db  0x00 ; '.'
000000000020a171         db  0x00 ; '.'
000000000020a172         db  0x00 ; '.'
000000000020a173         db  0x00 ; '.'
000000000020a174         db  0x00 ; '.'
000000000020a175         db  0x00 ; '.'
000000000020a176         db  0x00 ; '.'
000000000020a177         db  0x00 ; '.'
000000000020a178         db  0x00 ; '.'
000000000020a179         db  0x00 ; '.'
000000000020a17a         db  0x00 ; '.'
000000000020a17b         db  0x00 ; '.'
000000000020a17c         db  0x00 ; '.'
000000000020a17d         db  0x00 ; '.'
000000000020a17e         db  0x00 ; '.'
000000000020a17f         db  0x00 ; '.'
000000000020a180         db  0x00 ; '.'
000000000020a181         db  0x00 ; '.'
000000000020a182         db  0x00 ; '.'
000000000020a183         db  0x00 ; '.'
000000000020a184         db  0x00 ; '.'
000000000020a185         db  0x00 ; '.'
000000000020a186         db  0x00 ; '.'
000000000020a187         db  0x00 ; '.'
000000000020a188         db  0x00 ; '.'
000000000020a189         db  0x00 ; '.'
000000000020a18a         db  0x00 ; '.'
000000000020a18b         db  0x00 ; '.'
000000000020a18c         db  0x00 ; '.'
000000000020a18d         db  0x00 ; '.'
000000000020a18e         db  0x00 ; '.'
000000000020a18f         db  0x00 ; '.'
000000000020a190         db  0x00 ; '.'
000000000020a191         db  0x00 ; '.'
000000000020a192         db  0x00 ; '.'
000000000020a193         db  0x00 ; '.'
000000000020a194         db  0x00 ; '.'
000000000020a195         db  0x00 ; '.'
000000000020a196         db  0x00 ; '.'
000000000020a197         db  0x00 ; '.'
000000000020a198         db  0x00 ; '.'
000000000020a199         db  0x00 ; '.'
000000000020a19a         db  0x00 ; '.'
000000000020a19b         db  0x00 ; '.'
000000000020a19c         db  0x00 ; '.'
000000000020a19d         db  0x00 ; '.'
000000000020a19e         db  0x00 ; '.'
000000000020a19f         db  0x00 ; '.'
000000000020a1a0         db  0x00 ; '.'
000000000020a1a1         db  0x00 ; '.'
000000000020a1a2         db  0x00 ; '.'
000000000020a1a3         db  0x00 ; '.'
000000000020a1a4         db  0x00 ; '.'
000000000020a1a5         db  0x00 ; '.'
000000000020a1a6         db  0x00 ; '.'
000000000020a1a7         db  0x00 ; '.'
000000000020a1a8         db  0x00 ; '.'
000000000020a1a9         db  0x00 ; '.'
000000000020a1aa         db  0x00 ; '.'
000000000020a1ab         db  0x00 ; '.'
000000000020a1ac         db  0x00 ; '.'
000000000020a1ad         db  0x00 ; '.'
000000000020a1ae         db  0x00 ; '.'
000000000020a1af         db  0x00 ; '.'
000000000020a1b0         db  0x00 ; '.'
000000000020a1b1         db  0x00 ; '.'
000000000020a1b2         db  0x00 ; '.'
000000000020a1b3         db  0x00 ; '.'
000000000020a1b4         db  0x00 ; '.'
000000000020a1b5         db  0x00 ; '.'
000000000020a1b6         db  0x00 ; '.'
000000000020a1b7         db  0x00 ; '.'
000000000020a1b8         db  0x00 ; '.'
000000000020a1b9         db  0x00 ; '.'
000000000020a1ba         db  0x00 ; '.'
000000000020a1bb         db  0x00 ; '.'
000000000020a1bc         db  0x00 ; '.'
000000000020a1bd         db  0x00 ; '.'
000000000020a1be         db  0x00 ; '.'
000000000020a1bf         db  0x00 ; '.'
000000000020a1c0         db  0x00 ; '.'
000000000020a1c1         db  0x00 ; '.'
000000000020a1c2         db  0x00 ; '.'
000000000020a1c3         db  0x00 ; '.'
000000000020a1c4         db  0x00 ; '.'
000000000020a1c5         db  0x00 ; '.'
000000000020a1c6         db  0x00 ; '.'
000000000020a1c7         db  0x00 ; '.'
000000000020a1c8         db  0x00 ; '.'
000000000020a1c9         db  0x00 ; '.'
000000000020a1ca         db  0x00 ; '.'
000000000020a1cb         db  0x00 ; '.'
000000000020a1cc         db  0x00 ; '.'
000000000020a1cd         db  0x00 ; '.'
000000000020a1ce         db  0x00 ; '.'
000000000020a1cf         db  0x00 ; '.'
000000000020a1d0         db  0x00 ; '.'
000000000020a1d1         db  0x00 ; '.'
000000000020a1d2         db  0x00 ; '.'
000000000020a1d3         db  0x00 ; '.'
000000000020a1d4         db  0x00 ; '.'
000000000020a1d5         db  0x00 ; '.'
000000000020a1d6         db  0x00 ; '.'
000000000020a1d7         db  0x00 ; '.'
000000000020a1d8         db  0x00 ; '.'
000000000020a1d9         db  0x00 ; '.'
000000000020a1da         db  0x00 ; '.'
000000000020a1db         db  0x00 ; '.'
000000000020a1dc         db  0x00 ; '.'
000000000020a1dd         db  0x00 ; '.'
000000000020a1de         db  0x00 ; '.'
000000000020a1df         db  0x00 ; '.'
000000000020a1e0         db  0x00 ; '.'
000000000020a1e1         db  0x00 ; '.'
000000000020a1e2         db  0x00 ; '.'
000000000020a1e3         db  0x00 ; '.'
000000000020a1e4         db  0x00 ; '.'
000000000020a1e5         db  0x00 ; '.'
000000000020a1e6         db  0x00 ; '.'
000000000020a1e7         db  0x00 ; '.'
000000000020a1e8         db  0x00 ; '.'
000000000020a1e9         db  0x00 ; '.'
000000000020a1ea         db  0x00 ; '.'
000000000020a1eb         db  0x00 ; '.'
000000000020a1ec         db  0x00 ; '.'
000000000020a1ed         db  0x00 ; '.'
000000000020a1ee         db  0x00 ; '.'
000000000020a1ef         db  0x00 ; '.'
000000000020a1f0         db  0x00 ; '.'
000000000020a1f1         db  0x00 ; '.'
000000000020a1f2         db  0x00 ; '.'
000000000020a1f3         db  0x00 ; '.'
000000000020a1f4         db  0x00 ; '.'
000000000020a1f5         db  0x00 ; '.'
000000000020a1f6         db  0x00 ; '.'
000000000020a1f7         db  0x00 ; '.'
000000000020a1f8         db  0x00 ; '.'
000000000020a1f9         db  0x00 ; '.'
000000000020a1fa         db  0x00 ; '.'
000000000020a1fb         db  0x00 ; '.'
000000000020a1fc         db  0x00 ; '.'
000000000020a1fd         db  0x00 ; '.'
000000000020a1fe         db  0x00 ; '.'
000000000020a1ff         db  0x00 ; '.'
000000000020a200         db  0x00 ; '.'
000000000020a201         db  0x00 ; '.'
000000000020a202         db  0x00 ; '.'
000000000020a203         db  0x00 ; '.'
000000000020a204         db  0x00 ; '.'
000000000020a205         db  0x00 ; '.'
000000000020a206         db  0x00 ; '.'
000000000020a207         db  0x00 ; '.'
000000000020a208         db  0x00 ; '.'
000000000020a209         db  0x00 ; '.'
000000000020a20a         db  0x00 ; '.'
000000000020a20b         db  0x00 ; '.'
000000000020a20c         db  0x00 ; '.'
000000000020a20d         db  0x00 ; '.'
000000000020a20e         db  0x00 ; '.'
000000000020a20f         db  0x00 ; '.'
000000000020a210         db  0x00 ; '.'
000000000020a211         db  0x00 ; '.'
000000000020a212         db  0x00 ; '.'
000000000020a213         db  0x00 ; '.'
000000000020a214         db  0x00 ; '.'
000000000020a215         db  0x00 ; '.'
000000000020a216         db  0x00 ; '.'
000000000020a217         db  0x00 ; '.'
000000000020a218         db  0x00 ; '.'
000000000020a219         db  0x00 ; '.'
000000000020a21a         db  0x00 ; '.'
000000000020a21b         db  0x00 ; '.'
000000000020a21c         db  0x00 ; '.'
000000000020a21d         db  0x00 ; '.'
000000000020a21e         db  0x00 ; '.'
000000000020a21f         db  0x00 ; '.'
                     default_quoting_options:
000000000020a220         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
000000000020a221         db  0x00 ; '.'
000000000020a222         db  0x00 ; '.'
000000000020a223         db  0x00 ; '.'
000000000020a224         db  0x00 ; '.'
000000000020a225         db  0x00 ; '.'
000000000020a226         db  0x00 ; '.'
000000000020a227         db  0x00 ; '.'
000000000020a228         db  0x00 ; '.'
000000000020a229         db  0x00 ; '.'
000000000020a22a         db  0x00 ; '.'
000000000020a22b         db  0x00 ; '.'
000000000020a22c         db  0x00 ; '.'
000000000020a22d         db  0x00 ; '.'
000000000020a22e         db  0x00 ; '.'
000000000020a22f         db  0x00 ; '.'
000000000020a230         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
000000000020a231         db  0x00 ; '.'
000000000020a232         db  0x00 ; '.'
000000000020a233         db  0x00 ; '.'
000000000020a234         db  0x00 ; '.'
000000000020a235         db  0x00 ; '.'
000000000020a236         db  0x00 ; '.'
000000000020a237         db  0x00 ; '.'
000000000020a238         db  0x00 ; '.'
000000000020a239         db  0x00 ; '.'
000000000020a23a         db  0x00 ; '.'
000000000020a23b         db  0x00 ; '.'
000000000020a23c         db  0x00 ; '.'
000000000020a23d         db  0x00 ; '.'
000000000020a23e         db  0x00 ; '.'
000000000020a23f         db  0x00 ; '.'
000000000020a240         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
000000000020a241         db  0x00 ; '.'
000000000020a242         db  0x00 ; '.'
000000000020a243         db  0x00 ; '.'
000000000020a244         db  0x00 ; '.'
000000000020a245         db  0x00 ; '.'
000000000020a246         db  0x00 ; '.'
000000000020a247         db  0x00 ; '.'
000000000020a248         db  0x00 ; '.'
000000000020a249         db  0x00 ; '.'
000000000020a24a         db  0x00 ; '.'
000000000020a24b         db  0x00 ; '.'
000000000020a24c         db  0x00 ; '.'
000000000020a24d         db  0x00 ; '.'
000000000020a24e         db  0x00 ; '.'
000000000020a24f         db  0x00 ; '.'
                     qword_20a250:
000000000020a250         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
000000000020a251         db  0x00 ; '.'
000000000020a252         db  0x00 ; '.'
000000000020a253         db  0x00 ; '.'
000000000020a254         db  0x00 ; '.'
000000000020a255         db  0x00 ; '.'
000000000020a256         db  0x00 ; '.'
000000000020a257         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x20a260; 0x20a5b0[ (848 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x20a260; 0x414810[ (2139568 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     free:
000000000020a260         extern function code                                   ; DATA XREF=free@GOT
                     abort:
000000000020a268         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
000000000020a270         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
000000000020a278         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
000000000020a280         extern function code
                     _exit:
000000000020a288         extern function code                                   ; DATA XREF=_exit@GOT
                     __fpending:
000000000020a290         extern function code                                   ; DATA XREF=__fpending@GOT
                     readlink:
000000000020a298         extern function code                                   ; DATA XREF=readlink@GOT
                     textdomain:
000000000020a2a0         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
000000000020a2a8         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
000000000020a2b0         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
000000000020a2b8         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
000000000020a2c0         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
000000000020a2c8         extern function code                                   ; DATA XREF=strlen@GOT
                     __lxstat:
000000000020a2d0         extern function code                                   ; DATA XREF=__lxstat@GOT
                     __stack_chk_fail:
000000000020a2d8         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
000000000020a2e0         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
000000000020a2e8         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     __fxstatat:
000000000020a2f0         extern function code                                   ; DATA XREF=__fxstatat@GOT
                     __overflow:
000000000020a2f8         extern function code                                   ; DATA XREF=__overflow@GOT
                     strrchr:
000000000020a300         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
000000000020a308         extern function code                                   ; DATA XREF=lseek@GOT
                     memset:
000000000020a310         extern function code                                   ; DATA XREF=memset@GOT
                     getcwd:
000000000020a318         extern function code                                   ; DATA XREF=getcwd@GOT
                     strspn:
000000000020a320         extern function code                                   ; DATA XREF=strspn@GOT
                     __libc_start_main:
000000000020a328         extern function code
                     memcmp:
000000000020a330         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
000000000020a338         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
000000000020a340         extern function code                                   ; DATA XREF=calloc@GOT
                     strcmp:
000000000020a348         extern function code                                   ; DATA XREF=strcmp@GOT
                     __gmon_start__:
000000000020a350         extern function code
                     memcpy:
000000000020a358         extern function code                                   ; DATA XREF=memcpy@GOT
                     fileno:
000000000020a360         extern function code                                   ; DATA XREF=fileno@GOT
                     __xstat:
000000000020a368         extern function code                                   ; DATA XREF=__xstat@GOT
                     malloc:
000000000020a370         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
000000000020a378         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
000000000020a380         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __freading:
000000000020a388         extern function code                                   ; DATA XREF=__freading@GOT
                     realloc:
000000000020a390         extern function code                                   ; DATA XREF=realloc@GOT
                     setlocale:
000000000020a398         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
000000000020a3a0         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     memmove:
000000000020a3a8         extern function code                                   ; DATA XREF=memmove@GOT
                     error:
000000000020a3b0         extern function code                                   ; DATA XREF=error@GOT
                     fseeko:
000000000020a3b8         extern function code                                   ; DATA XREF=fseeko@GOT
                     __cxa_atexit:
000000000020a3c0         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     exit:
000000000020a3c8         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
000000000020a3d0         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
000000000020a3d8         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
000000000020a3e0         extern function code
                     mbsinit:
000000000020a3e8         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
000000000020a3f0         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
000000000020a3f8         extern function code
                     __ctype_b_loc:
000000000020a400         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     free@@GLIBC_2.2.5:
000000000020a408         extern function code
                     abort@@GLIBC_2.2.5:
000000000020a410         extern function code
                     __errno_location@@GLIBC_2.2.5:
000000000020a418         extern function code
                     strncmp@@GLIBC_2.2.5:
000000000020a420         extern function code
                     _ITM_deregisterTMCloneTable_20a428:        // _ITM_deregisterTMCloneTable
000000000020a428         extern function code
                     _exit@@GLIBC_2.2.5:
000000000020a430         extern function code
                     __fpending@@GLIBC_2.2.5:
000000000020a438         extern function code
                     readlink@@GLIBC_2.2.5:
000000000020a440         extern function code
                     textdomain@@GLIBC_2.2.5:
000000000020a448         extern function code
                     fclose@@GLIBC_2.2.5:
000000000020a450         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
000000000020a458         extern function code
                     dcgettext@@GLIBC_2.2.5:
000000000020a460         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
000000000020a468         extern function code
                     strlen@@GLIBC_2.2.5:
000000000020a470         extern function code
                     __lxstat@@GLIBC_2.2.5:
000000000020a478         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
000000000020a480         extern function code
                     getopt_long@@GLIBC_2.2.5:
000000000020a488         extern function code
                     mbrtowc@@GLIBC_2.2.5:
000000000020a490         extern function code
                     __fxstatat@@GLIBC_2.4:
000000000020a498         extern function code
                     __overflow@@GLIBC_2.2.5:
000000000020a4a0         extern function code
                     strrchr@@GLIBC_2.2.5:
000000000020a4a8         extern function code
                     lseek@@GLIBC_2.2.5:
000000000020a4b0         extern function code
                     memset@@GLIBC_2.2.5:
000000000020a4b8         extern function code
                     getcwd@@GLIBC_2.2.5:
000000000020a4c0         extern function code
                     strspn@@GLIBC_2.2.5:
000000000020a4c8         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
000000000020a4d0         extern function code
                     memcmp@@GLIBC_2.2.5:
000000000020a4d8         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
000000000020a4e0         extern function code
                     calloc@@GLIBC_2.2.5:
000000000020a4e8         extern function code
                     strcmp@@GLIBC_2.2.5:
000000000020a4f0         extern function code
                     __gmon_start___20a4f8:        // __gmon_start__
000000000020a4f8         extern function code
                     memcpy@@GLIBC_2.14:
000000000020a500         extern function code
                     fileno@@GLIBC_2.2.5:
000000000020a508         extern function code
                     __xstat@@GLIBC_2.2.5:
000000000020a510         extern function code
                     malloc@@GLIBC_2.2.5:
000000000020a518         extern function code
                     fflush@@GLIBC_2.2.5:
000000000020a520         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
000000000020a528         extern function code
                     __freading@@GLIBC_2.2.5:
000000000020a530         extern function code
                     realloc@@GLIBC_2.2.5:
000000000020a538         extern function code
                     setlocale@@GLIBC_2.2.5:
000000000020a540         extern function code
                     __printf_chk@@GLIBC_2.3.4:
000000000020a548         extern function code
                     memmove@@GLIBC_2.2.5:
000000000020a550         extern function code
                     error@@GLIBC_2.2.5:
000000000020a558         extern function code
                     fseeko@@GLIBC_2.2.5:
000000000020a560         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
000000000020a568         extern function code
                     exit@@GLIBC_2.2.5:
000000000020a570         extern function code
                     fwrite@@GLIBC_2.2.5:
000000000020a578         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
000000000020a580         extern function code
                     _ITM_registerTMCloneTable_20a588:        // _ITM_registerTMCloneTable
000000000020a588         extern function code
                     mbsinit@@GLIBC_2.2.5:
000000000020a590         extern function code
                     iswprint@@GLIBC_2.2.5:
000000000020a598         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
000000000020a5a0         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
000000000020a5a8         extern function code
