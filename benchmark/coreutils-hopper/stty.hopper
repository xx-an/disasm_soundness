
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/stty
        UUID: A3552430-B503-DDDD-9F07-77E7D48A30E5
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0xf958[ (63832 bytes)
        ; File offset : [0; 63832[ (63832 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0x50 ; 'P'
0000000000000019         db  0x33 ; '3'
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0xa0 ; '.'
0000000000000029         db  0x4d ; 'M'
000000000000002a         db  0x04 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0x58 ; 'X'
00000000000000d1         db  0xf9 ; '.'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0x58 ; 'X'
00000000000000d9         db  0xf9 ; '.'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0x50 ; 'P'
00000000000000f1         db  0xfa ; '.'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0x50 ; 'P'
00000000000000f9         db  0xfa ; '.'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0x50 ; 'P'                                         ; DATA XREF=sub_4bd0+2956, quotearg_free+87, rpl_fflush+18, slotvec0
0000000000000101         db  0xfa ; '.'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0x50 ; 'P'
0000000000000109         db  0x16 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0x10 ; '.'
0000000000000111         db  0x19 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'                                         ; DATA XREF=sub_4bd0+1607, sub_4bd0+2446, sub_4bd0+2845
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0xf8 ; '.'
0000000000000129         db  0x0b ; '.'
000000000000012a         db  0x01 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0xf8 ; '.'
0000000000000131         db  0x0b ; '.'
0000000000000132         db  0x21 ; '!'
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0xf8 ; '.'
0000000000000139         db  0x0b ; '.'
000000000000013a         db  0x21 ; '!'
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0xac ; '.'
0000000000000199         db  0xe7 ; '.'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0xac ; '.'
00000000000001a1         db  0xe7 ; '.'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0xac ; '.'
00000000000001a9         db  0xe7 ; '.'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0xdc ; '.'
00000000000001b1         db  0x02 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0xdc ; '.'
00000000000001b9         db  0x02 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'                                         ; DATA XREF=xstrtoumax+573
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0x50 ; 'P'
0000000000000209         db  0xfa ; '.'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0x50 ; 'P'
0000000000000211         db  0xfa ; '.'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0x50 ; 'P'
0000000000000219         db  0xfa ; '.'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0xb0 ; '.'
0000000000000221         db  0x15 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0xb0 ; '.'
0000000000000229         db  0x15 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0xa3 ; '.'
0000000000000285         db  0x55 ; 'U'
0000000000000286         db  0x24 ; '$'
0000000000000287         db  0x30 ; '0'
0000000000000288         db  0xb5 ; '.'
0000000000000289         db  0x03 ; '.'
000000000000028a         db  0xdd ; '.'
000000000000028b         db  0xdd ; '.'
000000000000028c         db  0x9f ; '.'
000000000000028d         db  0x07 ; '.'
000000000000028e         db  0x77 ; 'w'
000000000000028f         db  0xe7 ; '.'
0000000000000290         db  0xd4 ; '.'
0000000000000291         db  0x8a ; '.'
0000000000000292         db  0x30 ; '0'
0000000000000293         db  0xe5 ; '.'
0000000000000294         db  0x61 ; 'a'
0000000000000295         db  0x2c ; ','
0000000000000296         db  0x84 ; '.'
0000000000000297         db  0x9d ; '.'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2e0[ (72 bytes)
        ; File offset : [664; 736[ (72 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x41 ; 'A'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x06 ; '.'
00000000000002a9         db  0xcd ; '.'
00000000000002aa         db  0x41 ; 'A'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0x20 ; ' '
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x1c ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x41 ; 'A'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x42 ; 'B'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x48 ; 'H'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x96 ; '.'
00000000000002c5         db  0xa0 ; '.'
00000000000002c6         db  0x89 ; '.'
00000000000002c7         db  0x97 ; '.'
00000000000002c8         db  0xce ; '.'
00000000000002c9         db  0x2c ; ','
00000000000002ca         db  0x63 ; 'c'
00000000000002cb         db  0x72 ; 'r'
00000000000002cc         db  0xe4 ; '.'
00000000000002cd         db  0x62 ; 'b'
00000000000002ce         db  0x41 ; 'A'
00000000000002cf         db  0xf5 ; '.'
00000000000002d0         db  0xc0 ; '.'
00000000000002d1         db  0xb3 ; '.'
00000000000002d2         db  0xf7 ; '.'
00000000000002d3         db  0x12 ; '.'
00000000000002d4         db  0x39 ; '9'
00000000000002d5         db  0xf2 ; '.'
00000000000002d6         db  0x8b ; '.'
00000000000002d7         db  0x1c ; '.'
00000000000002d8         db  0x32 ; '2'
00000000000002d9         db  0xc4 ; '.'
00000000000002da         db  0xf7 ; '.'
00000000000002db         db  0x12 ; '.'
00000000000002dc         db  0xb3 ; '.'
00000000000002dd         db  0xa2 ; '.'
00000000000002de         db  0xf7 ; '.'
00000000000002df         db  0x12 ; '.'


        ; Section .dynsym
        ; Range: [0x2e0; 0x9d0[ (1776 bytes)
        ; File offset : [736; 2512[ (1776 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0x78 ; 'x'
00000000000002f9         db  0x01 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x12 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x9e ; '.'
0000000000000311         db  0x01 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x12 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'                                         ; DATA XREF=sub_4bd0+1392
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0x96 ; '.'
0000000000000329         db  0x02 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x12 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0x7a ; 'z'
0000000000000341         db  0x00 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x12 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0xf7 ; '.'
0000000000000359         db  0x00 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x12 ; '.'
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0x31 ; '1'
0000000000000371         db  0x00 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x12 ; '.'
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0xfa ; '.'
0000000000000389         db  0x02 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x20 ; ' '
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0x80 ; '.'
00000000000003a1         db  0x00 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x12 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0xc7 ; '.'
00000000000003b9         db  0x01 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x12 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0x15 ; '.'
00000000000003d1         db  0x02 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x12 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0x27 ; '''                                         ; DATA XREF=xstrtol+363, xstrtoumax+420
00000000000003e9         db  0x02 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x12 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0x37 ; '7'                                         ; DATA XREF=xstrtol+397, xstrtol+1614, xstrtoumax+437, xstrtoumax+806, xstrtoumax+878, rpl_fcntl+288
0000000000000401         db  0x02 ; '.'                                         ; DATA XREF=rpl_fcntl+272
0000000000000402         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+280
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x12 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+81, rpl_fcntl+123, rpl_fcntl+264
0000000000000407         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+256
0000000000000408         db  0x00 ; '.'                                         ; DATA XREF=vasnprintf+29
0000000000000409         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+336
000000000000040a         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+350
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0x40 ; '@'
0000000000000419         db  0x01 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x12 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0x33 ; '3'
0000000000000431         db  0x02 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x12 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0x1b ; '.'
0000000000000449         db  0x02 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x12 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0x48 ; 'H'
0000000000000461         db  0x00 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x12 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0xac ; '.'
0000000000000479         db  0x00 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x12 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0xdd ; '.'
0000000000000491         db  0x00 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x12 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x58 ; 'X'
00000000000004a9         db  0x00 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x12 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0xad ; '.'
00000000000004c1         db  0x01 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x12 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x29 ; ')'
00000000000004d9         db  0x00 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x12 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0x19 ; '.'
00000000000004f1         db  0x01 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x12 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0xd7 ; '.'
0000000000000509         db  0x01 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x12 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0x69 ; 'i'
0000000000000521         db  0x02 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x12 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'                                         ; DATA XREF=sub_4bd0+2986
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0x40 ; '@'
0000000000000539         db  0x00 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x12 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0x33 ; '3'
0000000000000551         db  0x01 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x12 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0x9e ; '.'
0000000000000569         db  0x00 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x12 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0x74 ; 't'
0000000000000581         db  0x02 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x12 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0xe4 ; '.'
0000000000000599         db  0x00 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x12 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0x98 ; '.'
00000000000005b1         db  0x01 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x12 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0x41 ; 'A'
00000000000005c9         db  0x01 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x12 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0x50 ; 'P'
00000000000005e1         db  0x02 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x12 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x12 ; '.'
00000000000005f9         db  0x01 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x12 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x87 ; '.'
0000000000000611         db  0x02 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x12 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0xd6 ; '.'
0000000000000629         db  0x00 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x12 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x49 ; 'I'
0000000000000641         db  0x02 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x12 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x16 ; '.'
0000000000000659         db  0x03 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x20 ; ' '
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0xc3 ; '.'
0000000000000671         db  0x00 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x12 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0x39 ; '9'
0000000000000689         db  0x01 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x12 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0xb9 ; '.'
00000000000006a1         db  0x01 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x12 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x4f ; 'O'
00000000000006b9         db  0x01 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x12 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x0b ; '.'
00000000000006d1         db  0x00 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x12 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0x5e ; '^'
00000000000006e9         db  0x01 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x12 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x86 ; '.'
0000000000000701         db  0x01 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x12 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x72 ; 'r'
0000000000000719         db  0x00 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x12 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x1f ; '.'
0000000000000731         db  0x00 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x12 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0xeb ; '.'
0000000000000749         db  0x00 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x12 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0x12 ; '.'
0000000000000761         db  0x00 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x12 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0x52 ; 'R'
0000000000000779         db  0x00 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x12 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0xfc ; '.'
0000000000000791         db  0x01 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x12 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'                                         ; DATA XREF=main+2538
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0x08 ; '.'
00000000000007a9         db  0x01 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x12 ; '.'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x00 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0xd2 ; '.'
00000000000007c1         db  0x01 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x12 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x00 ; '.'
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x62 ; 'b'
00000000000007d9         db  0x02 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x12 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x00 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0xca ; '.'
00000000000007f1         db  0x00 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x12 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x00 ; '.'                                         ; DATA XREF=main+2778
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x00 ; '.'
00000000000007f9         db  0x00 ; '.'
00000000000007fa         db  0x00 ; '.'
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x00 ; '.'                                         ; DATA XREF=main+618
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x47 ; 'G'
0000000000000809         db  0x01 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x12 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x00 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0x00 ; '.'
0000000000000811         db  0x00 ; '.'
0000000000000812         db  0x00 ; '.'
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x00 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0xb6 ; '.'
0000000000000821         db  0x02 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x12 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x00 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0x00 ; '.'
0000000000000829         db  0x00 ; '.'
000000000000082a         db  0x00 ; '.'
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x00 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x81 ; '.'
0000000000000839         db  0x00 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x12 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x00 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0x00 ; '.'
0000000000000841         db  0x00 ; '.'
0000000000000842         db  0x00 ; '.'
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x00 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0xc0 ; '.'
0000000000000851         db  0x01 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x12 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x00 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0x00 ; '.'
0000000000000859         db  0x00 ; '.'
000000000000085a         db  0x00 ; '.'
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x00 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0x1e ; '.'
0000000000000869         db  0x01 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x12 ; '.'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x00 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0x00 ; '.'
0000000000000871         db  0x00 ; '.'
0000000000000872         db  0x00 ; '.'
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x00 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0x25 ; '%'
0000000000000881         db  0x03 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x20 ; ' '
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x00 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0x00 ; '.'
0000000000000889         db  0x00 ; '.'
000000000000088a         db  0x00 ; '.'
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x00 ; '.'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x00 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0x56 ; 'V'
0000000000000899         db  0x01 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x12 ; '.'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x00 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0x00 ; '.'
00000000000008a1         db  0x00 ; '.'
00000000000008a2         db  0x00 ; '.'
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x00 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x00 ; '.'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x00 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x00 ; '.'
00000000000008b0         db  0x69 ; 'i'
00000000000008b1         db  0x00 ; '.'
00000000000008b2         db  0x00 ; '.'
00000000000008b3         db  0x00 ; '.'
00000000000008b4         db  0x12 ; '.'
00000000000008b5         db  0x00 ; '.'
00000000000008b6         db  0x00 ; '.'
00000000000008b7         db  0x00 ; '.'
00000000000008b8         db  0x00 ; '.'
00000000000008b9         db  0x00 ; '.'
00000000000008ba         db  0x00 ; '.'
00000000000008bb         db  0x00 ; '.'
00000000000008bc         db  0x00 ; '.'
00000000000008bd         db  0x00 ; '.'
00000000000008be         db  0x00 ; '.'
00000000000008bf         db  0x00 ; '.'
00000000000008c0         db  0x00 ; '.'
00000000000008c1         db  0x00 ; '.'
00000000000008c2         db  0x00 ; '.'
00000000000008c3         db  0x00 ; '.'
00000000000008c4         db  0x00 ; '.'
00000000000008c5         db  0x00 ; '.'
00000000000008c6         db  0x00 ; '.'
00000000000008c7         db  0x00 ; '.'
00000000000008c8         db  0x06 ; '.'
00000000000008c9         db  0x02 ; '.'
00000000000008ca         db  0x00 ; '.'
00000000000008cb         db  0x00 ; '.'                                         ; DATA XREF=sub_4bd0+2658
00000000000008cc         db  0x22 ; '"'
00000000000008cd         db  0x00 ; '.'
00000000000008ce         db  0x00 ; '.'
00000000000008cf         db  0x00 ; '.'
00000000000008d0         db  0x00 ; '.'
00000000000008d1         db  0x00 ; '.'                                         ; DATA XREF=sub_4bd0+2689
00000000000008d2         db  0x00 ; '.'
00000000000008d3         db  0x00 ; '.'
00000000000008d4         db  0x00 ; '.'
00000000000008d5         db  0x00 ; '.'
00000000000008d6         db  0x00 ; '.'
00000000000008d7         db  0x00 ; '.'
00000000000008d8         db  0x00 ; '.'
00000000000008d9         db  0x00 ; '.'
00000000000008da         db  0x00 ; '.'
00000000000008db         db  0x00 ; '.'
00000000000008dc         db  0x00 ; '.'
00000000000008dd         db  0x00 ; '.'
00000000000008de         db  0x00 ; '.'
00000000000008df         db  0x00 ; '.'
00000000000008e0         db  0x6a ; 'j'
00000000000008e1         db  0x01 ; '.'
00000000000008e2         db  0x00 ; '.'
00000000000008e3         db  0x00 ; '.'
00000000000008e4         db  0x12 ; '.'
00000000000008e5         db  0x00 ; '.'
00000000000008e6         db  0x00 ; '.'
00000000000008e7         db  0x00 ; '.'
00000000000008e8         db  0x00 ; '.'
00000000000008e9         db  0x00 ; '.'
00000000000008ea         db  0x00 ; '.'
00000000000008eb         db  0x00 ; '.'
00000000000008ec         db  0x00 ; '.'
00000000000008ed         db  0x00 ; '.'
00000000000008ee         db  0x00 ; '.'
00000000000008ef         db  0x00 ; '.'
00000000000008f0         db  0x00 ; '.'
00000000000008f1         db  0x00 ; '.'
00000000000008f2         db  0x00 ; '.'
00000000000008f3         db  0x00 ; '.'
00000000000008f4         db  0x00 ; '.'
00000000000008f5         db  0x00 ; '.'
00000000000008f6         db  0x00 ; '.'
00000000000008f7         db  0x00 ; '.'
00000000000008f8         db  0x2c ; ','
00000000000008f9         db  0x01 ; '.'
00000000000008fa         db  0x00 ; '.'
00000000000008fb         db  0x00 ; '.'
00000000000008fc         db  0x11 ; '.'
00000000000008fd         db  0x00 ; '.'
00000000000008fe         db  0x19 ; '.'
00000000000008ff         db  0x00 ; '.'
0000000000000900         db  0xa8 ; '.'
0000000000000901         db  0x10 ; '.'
0000000000000902         db  0x21 ; '!'
0000000000000903         db  0x00 ; '.'
0000000000000904         db  0x00 ; '.'
0000000000000905         db  0x00 ; '.'
0000000000000906         db  0x00 ; '.'
0000000000000907         db  0x00 ; '.'
0000000000000908         db  0x08 ; '.'
0000000000000909         db  0x00 ; '.'
000000000000090a         db  0x00 ; '.'
000000000000090b         db  0x00 ; '.'
000000000000090c         db  0x00 ; '.'
000000000000090d         db  0x00 ; '.'
000000000000090e         db  0x00 ; '.'
000000000000090f         db  0x00 ; '.'
0000000000000910         db  0x9b ; '.'
0000000000000911         db  0x02 ; '.'
0000000000000912         db  0x00 ; '.'
0000000000000913         db  0x00 ; '.'
0000000000000914         db  0x11 ; '.'
0000000000000915         db  0x00 ; '.'
0000000000000916         db  0x19 ; '.'
0000000000000917         db  0x00 ; '.'
0000000000000918         db  0xa0 ; '.'
0000000000000919         db  0x10 ; '.'
000000000000091a         db  0x21 ; '!'
000000000000091b         db  0x00 ; '.'
000000000000091c         db  0x00 ; '.'
000000000000091d         db  0x00 ; '.'
000000000000091e         db  0x00 ; '.'
000000000000091f         db  0x00 ; '.'
0000000000000920         db  0x08 ; '.'
0000000000000921         db  0x00 ; '.'
0000000000000922         db  0x00 ; '.'
0000000000000923         db  0x00 ; '.'
0000000000000924         db  0x00 ; '.'
0000000000000925         db  0x00 ; '.'
0000000000000926         db  0x00 ; '.'
0000000000000927         db  0x00 ; '.'
0000000000000928         db  0x86 ; '.'
0000000000000929         db  0x00 ; '.'
000000000000092a         db  0x00 ; '.'
000000000000092b         db  0x00 ; '.'
000000000000092c         db  0x21 ; '!'
000000000000092d         db  0x00 ; '.'
000000000000092e         db  0x19 ; '.'
000000000000092f         db  0x00 ; '.'
0000000000000930         db  0xc0 ; '.'
0000000000000931         db  0x10 ; '.'
0000000000000932         db  0x21 ; '!'
0000000000000933         db  0x00 ; '.'
0000000000000934         db  0x00 ; '.'
0000000000000935         db  0x00 ; '.'
0000000000000936         db  0x00 ; '.'
0000000000000937         db  0x00 ; '.'
0000000000000938         db  0x08 ; '.'
0000000000000939         db  0x00 ; '.'
000000000000093a         db  0x00 ; '.'
000000000000093b         db  0x00 ; '.'
000000000000093c         db  0x00 ; '.'
000000000000093d         db  0x00 ; '.'
000000000000093e         db  0x00 ; '.'
000000000000093f         db  0x00 ; '.'
0000000000000940         db  0xa6 ; '.'
0000000000000941         db  0x02 ; '.'
0000000000000942         db  0x00 ; '.'
0000000000000943         db  0x00 ; '.'
0000000000000944         db  0x11 ; '.'
0000000000000945         db  0x00 ; '.'
0000000000000946         db  0x19 ; '.'
0000000000000947         db  0x00 ; '.'
0000000000000948         db  0xc0 ; '.'
0000000000000949         db  0x10 ; '.'
000000000000094a         db  0x21 ; '!'
000000000000094b         db  0x00 ; '.'
000000000000094c         db  0x00 ; '.'
000000000000094d         db  0x00 ; '.'
000000000000094e         db  0x00 ; '.'
000000000000094f         db  0x00 ; '.'
0000000000000950         db  0x08 ; '.'
0000000000000951         db  0x00 ; '.'
0000000000000952         db  0x00 ; '.'
0000000000000953         db  0x00 ; '.'
0000000000000954         db  0x00 ; '.'
0000000000000955         db  0x00 ; '.'
0000000000000956         db  0x00 ; '.'
0000000000000957         db  0x00 ; '.'
0000000000000958         db  0xde ; '.'
0000000000000959         db  0x01 ; '.'
000000000000095a         db  0x00 ; '.'
000000000000095b         db  0x00 ; '.'
000000000000095c         db  0x21 ; '!'
000000000000095d         db  0x00 ; '.'
000000000000095e         db  0x19 ; '.'
000000000000095f         db  0x00 ; '.'
0000000000000960         db  0xa0 ; '.'
0000000000000961         db  0x10 ; '.'
0000000000000962         db  0x21 ; '!'
0000000000000963         db  0x00 ; '.'
0000000000000964         db  0x00 ; '.'
0000000000000965         db  0x00 ; '.'
0000000000000966         db  0x00 ; '.'
0000000000000967         db  0x00 ; '.'
0000000000000968         db  0x08 ; '.'
0000000000000969         db  0x00 ; '.'
000000000000096a         db  0x00 ; '.'
000000000000096b         db  0x00 ; '.'
000000000000096c         db  0x00 ; '.'
000000000000096d         db  0x00 ; '.'
000000000000096e         db  0x00 ; '.'
000000000000096f         db  0x00 ; '.'
0000000000000970         db  0x42 ; 'B'
0000000000000971         db  0x02 ; '.'
0000000000000972         db  0x00 ; '.'
0000000000000973         db  0x00 ; '.'
0000000000000974         db  0x11 ; '.'
0000000000000975         db  0x00 ; '.'
0000000000000976         db  0x19 ; '.'
0000000000000977         db  0x00 ; '.'
0000000000000978         db  0xe0 ; '.'
0000000000000979         db  0x10 ; '.'
000000000000097a         db  0x21 ; '!'
000000000000097b         db  0x00 ; '.'
000000000000097c         db  0x00 ; '.'
000000000000097d         db  0x00 ; '.'
000000000000097e         db  0x00 ; '.'
000000000000097f         db  0x00 ; '.'
0000000000000980         db  0x04 ; '.'
0000000000000981         db  0x00 ; '.'
0000000000000982         db  0x00 ; '.'
0000000000000983         db  0x00 ; '.'
0000000000000984         db  0x00 ; '.'
0000000000000985         db  0x00 ; '.'
0000000000000986         db  0x00 ; '.'
0000000000000987         db  0x00 ; '.'
0000000000000988         db  0x91 ; '.'
0000000000000989         db  0x01 ; '.'
000000000000098a         db  0x00 ; '.'
000000000000098b         db  0x00 ; '.'
000000000000098c         db  0x11 ; '.'
000000000000098d         db  0x00 ; '.'
000000000000098e         db  0x19 ; '.'
000000000000098f         db  0x00 ; '.'
0000000000000990         db  0x00 ; '.'
0000000000000991         db  0x11 ; '.'
0000000000000992         db  0x21 ; '!'
0000000000000993         db  0x00 ; '.'
0000000000000994         db  0x00 ; '.'
0000000000000995         db  0x00 ; '.'
0000000000000996         db  0x00 ; '.'
0000000000000997         db  0x00 ; '.'
0000000000000998         db  0x08 ; '.'
0000000000000999         db  0x00 ; '.'
000000000000099a         db  0x00 ; '.'
000000000000099b         db  0x00 ; '.'
000000000000099c         db  0x00 ; '.'
000000000000099d         db  0x00 ; '.'
000000000000099e         db  0x00 ; '.'
000000000000099f         db  0x00 ; '.'
00000000000009a0         db  0x39 ; '9'
00000000000009a1         db  0x00 ; '.'
00000000000009a2         db  0x00 ; '.'
00000000000009a3         db  0x00 ; '.'
00000000000009a4         db  0x11 ; '.'
00000000000009a5         db  0x00 ; '.'
00000000000009a6         db  0x19 ; '.'
00000000000009a7         db  0x00 ; '.'
00000000000009a8         db  0xb0 ; '.'
00000000000009a9         db  0x10 ; '.'
00000000000009aa         db  0x21 ; '!'
00000000000009ab         db  0x00 ; '.'
00000000000009ac         db  0x00 ; '.'
00000000000009ad         db  0x00 ; '.'
00000000000009ae         db  0x00 ; '.'
00000000000009af         db  0x00 ; '.'
00000000000009b0         db  0x04 ; '.'
00000000000009b1         db  0x00 ; '.'
00000000000009b2         db  0x00 ; '.'
00000000000009b3         db  0x00 ; '.'
00000000000009b4         db  0x00 ; '.'
00000000000009b5         db  0x00 ; '.'
00000000000009b6         db  0x00 ; '.'
00000000000009b7         db  0x00 ; '.'
00000000000009b8         db  0x7f ; '.'
00000000000009b9         db  0x01 ; '.'
00000000000009ba         db  0x00 ; '.'
00000000000009bb         db  0x00 ; '.'
00000000000009bc         db  0x11 ; '.'
00000000000009bd         db  0x00 ; '.'
00000000000009be         db  0x19 ; '.'
00000000000009bf         db  0x00 ; '.'
00000000000009c0         db  0xb8 ; '.'
00000000000009c1         db  0x10 ; '.'
00000000000009c2         db  0x21 ; '!'
00000000000009c3         db  0x00 ; '.'
00000000000009c4         db  0x00 ; '.'
00000000000009c5         db  0x00 ; '.'
00000000000009c6         db  0x00 ; '.'
00000000000009c7         db  0x00 ; '.'
00000000000009c8         db  0x08 ; '.'
00000000000009c9         db  0x00 ; '.'
00000000000009ca         db  0x00 ; '.'
00000000000009cb         db  0x00 ; '.'
00000000000009cc         db  0x00 ; '.'
00000000000009cd         db  0x00 ; '.'
00000000000009ce         db  0x00 ; '.'
00000000000009cf         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0x9d0; 0xd0f[ (831 bytes)
        ; File offset : [2512; 3343[ (831 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

00000000000009d0         db  0x00 ; '.'
00000000000009d1         db  0x6c ; 'l'
00000000000009d2         db  0x69 ; 'i'
00000000000009d3         db  0x62 ; 'b'
00000000000009d4         db  0x63 ; 'c'
00000000000009d5         db  0x2e ; '.'
00000000000009d6         db  0x73 ; 's'
00000000000009d7         db  0x6f ; 'o'
00000000000009d8         db  0x2e ; '.'
00000000000009d9         db  0x36 ; '6'
00000000000009da         db  0x00 ; '.'
00000000000009db         db  0x66 ; 'f'
00000000000009dc         db  0x66 ; 'f'
00000000000009dd         db  0x6c ; 'l'
00000000000009de         db  0x75 ; 'u'
00000000000009df         db  0x73 ; 's'
00000000000009e0         db  0x68 ; 'h'
00000000000009e1         db  0x00 ; '.'
00000000000009e2         db  0x5f ; '_'
00000000000009e3         db  0x5f ; '_'
00000000000009e4         db  0x70 ; 'p'
00000000000009e5         db  0x72 ; 'r'
00000000000009e6         db  0x69 ; 'i'
00000000000009e7         db  0x6e ; 'n'
00000000000009e8         db  0x74 ; 't'
00000000000009e9         db  0x66 ; 'f'
00000000000009ea         db  0x5f ; '_'
00000000000009eb         db  0x63 ; 'c'
00000000000009ec         db  0x68 ; 'h'
00000000000009ed         db  0x6b ; 'k'
00000000000009ee         db  0x00 ; '.'
00000000000009ef         db  0x73 ; 's'
00000000000009f0         db  0x65 ; 'e'
00000000000009f1         db  0x74 ; 't'
00000000000009f2         db  0x6c ; 'l'
00000000000009f3         db  0x6f ; 'o'
00000000000009f4         db  0x63 ; 'c'
00000000000009f5         db  0x61 ; 'a'
00000000000009f6         db  0x6c ; 'l'
00000000000009f7         db  0x65 ; 'e'
00000000000009f8         db  0x00 ; '.'
00000000000009f9         db  0x6d ; 'm'
00000000000009fa         db  0x62 ; 'b'
00000000000009fb         db  0x72 ; 'r'
00000000000009fc         db  0x74 ; 't'
00000000000009fd         db  0x6f ; 'o'
00000000000009fe         db  0x77 ; 'w'
00000000000009ff         db  0x63 ; 'c'
0000000000000a00         db  0x00 ; '.'
0000000000000a01         db  0x73 ; 's'
0000000000000a02         db  0x74 ; 't'
0000000000000a03         db  0x72 ; 'r'
0000000000000a04         db  0x6e ; 'n'
0000000000000a05         db  0x63 ; 'c'
0000000000000a06         db  0x6d ; 'm'
0000000000000a07         db  0x70 ; 'p'
0000000000000a08         db  0x00 ; '.'
0000000000000a09         db  0x6f ; 'o'
0000000000000a0a         db  0x70 ; 'p'
0000000000000a0b         db  0x74 ; 't'
0000000000000a0c         db  0x69 ; 'i'
0000000000000a0d         db  0x6e ; 'n'
0000000000000a0e         db  0x64 ; 'd'
0000000000000a0f         db  0x00 ; '.'
                     aStrrchr:
0000000000000a10         db         "strrchr", 0                                ; DATA XREF=sub_4bd0+3347, sub_4bd0+3407
0000000000000a18         db  0x64 ; 'd'
0000000000000a19         db  0x63 ; 'c'
0000000000000a1a         db  0x67 ; 'g'
0000000000000a1b         db  0x65 ; 'e'
0000000000000a1c         db  0x74 ; 't'
0000000000000a1d         db  0x74 ; 't'
0000000000000a1e         db  0x65 ; 'e'
0000000000000a1f         db  0x78 ; 'x'
0000000000000a20         db  0x74 ; 't'
0000000000000a21         db  0x00 ; '.'
0000000000000a22         db  0x65 ; 'e'
0000000000000a23         db  0x72 ; 'r'
0000000000000a24         db  0x72 ; 'r'
0000000000000a25         db  0x6f ; 'o'
0000000000000a26         db  0x72 ; 'r'
0000000000000a27         db  0x00 ; '.'
0000000000000a28         db  0x5f ; '_'
0000000000000a29         db  0x5f ; '_'
0000000000000a2a         db  0x73 ; 's'
0000000000000a2b         db  0x74 ; 't'
0000000000000a2c         db  0x61 ; 'a'
0000000000000a2d         db  0x63 ; 'c'
0000000000000a2e         db  0x6b ; 'k'
0000000000000a2f         db  0x5f ; '_'
0000000000000a30         db  0x63 ; 'c'
0000000000000a31         db  0x68 ; 'h'
0000000000000a32         db  0x6b ; 'k'
0000000000000a33         db  0x5f ; '_'
0000000000000a34         db  0x66 ; 'f'
0000000000000a35         db  0x61 ; 'a'
0000000000000a36         db  0x69 ; 'i'
0000000000000a37         db  0x6c ; 'l'
0000000000000a38         db  0x00 ; '.'
0000000000000a39         db  0x69 ; 'i'
0000000000000a3a         db  0x73 ; 's'
0000000000000a3b         db  0x77 ; 'w'
0000000000000a3c         db  0x70 ; 'p'
0000000000000a3d         db  0x72 ; 'r'
0000000000000a3e         db  0x69 ; 'i'
0000000000000a3f         db  0x6e ; 'n'
0000000000000a40         db  0x74 ; 't'
0000000000000a41         db  0x00 ; '.'
0000000000000a42         db  0x72 ; 'r'
0000000000000a43         db  0x65 ; 'e'
0000000000000a44         db  0x61 ; 'a'
0000000000000a45         db  0x6c ; 'l'
0000000000000a46         db  0x6c ; 'l'
0000000000000a47         db  0x6f ; 'o'
0000000000000a48         db  0x63 ; 'c'
0000000000000a49         db  0x00 ; '.'
0000000000000a4a         db  0x61 ; 'a'
0000000000000a4b         db  0x62 ; 'b'
0000000000000a4c         db  0x6f ; 'o'
0000000000000a4d         db  0x72 ; 'r'
0000000000000a4e         db  0x74 ; 't'
0000000000000a4f         db  0x00 ; '.'
0000000000000a50         db  0x5f ; '_'
0000000000000a51         db  0x65 ; 'e'
0000000000000a52         db  0x78 ; 'x'
0000000000000a53         db  0x69 ; 'i'
0000000000000a54         db  0x74 ; 't'
0000000000000a55         db  0x00 ; '.'
0000000000000a56         db  0x70 ; 'p'
0000000000000a57         db  0x72 ; 'r'
0000000000000a58         db  0x6f ; 'o'
0000000000000a59         db  0x67 ; 'g'
0000000000000a5a         db  0x72 ; 'r'
0000000000000a5b         db  0x61 ; 'a'
0000000000000a5c         db  0x6d ; 'm'
0000000000000a5d         db  0x5f ; '_'
0000000000000a5e         db  0x69 ; 'i'
0000000000000a5f         db  0x6e ; 'n'
0000000000000a60         db  0x76 ; 'v'
0000000000000a61         db  0x6f ; 'o'
0000000000000a62         db  0x63 ; 'c'
0000000000000a63         db  0x61 ; 'a'
0000000000000a64         db  0x74 ; 't'
0000000000000a65         db  0x69 ; 'i'
0000000000000a66         db  0x6f ; 'o'
0000000000000a67         db  0x6e ; 'n'
0000000000000a68         db  0x5f ; '_'
0000000000000a69         db  0x6e ; 'n'
0000000000000a6a         db  0x61 ; 'a'
0000000000000a6b         db  0x6d ; 'm'
0000000000000a6c         db  0x65 ; 'e'
0000000000000a6d         db  0x00 ; '.'
0000000000000a6e         db  0x5f ; '_'
0000000000000a6f         db  0x5f ; '_'
0000000000000a70         db  0x61 ; 'a'
0000000000000a71         db  0x73 ; 's'
0000000000000a72         db  0x73 ; 's'
0000000000000a73         db  0x65 ; 'e'
0000000000000a74         db  0x72 ; 'r'
0000000000000a75         db  0x74 ; 't'
0000000000000a76         db  0x5f ; '_'
0000000000000a77         db  0x66 ; 'f'
0000000000000a78         db  0x61 ; 'a'
0000000000000a79         db  0x69 ; 'i'
0000000000000a7a         db  0x6c ; 'l'
0000000000000a7b         db  0x00 ; '.'
0000000000000a7c         db  0x5f ; '_'
0000000000000a7d         db  0x5f ; '_'
0000000000000a7e         db  0x63 ; 'c'
0000000000000a7f         db  0x74 ; 't'
0000000000000a80         db  0x79 ; 'y'
0000000000000a81         db  0x70 ; 'p'
0000000000000a82         db  0x65 ; 'e'
0000000000000a83         db  0x5f ; '_'
0000000000000a84         db  0x67 ; 'g'
0000000000000a85         db  0x65 ; 'e'
0000000000000a86         db  0x74 ; 't'
0000000000000a87         db  0x5f ; '_'
0000000000000a88         db  0x6d ; 'm'
0000000000000a89         db  0x62 ; 'b'
0000000000000a8a         db  0x5f ; '_'
0000000000000a8b         db  0x63 ; 'c'
0000000000000a8c         db  0x75 ; 'u'
0000000000000a8d         db  0x72 ; 'r'
0000000000000a8e         db  0x5f ; '_'
0000000000000a8f         db  0x6d ; 'm'
0000000000000a90         db  0x61 ; 'a'
0000000000000a91         db  0x78 ; 'x'
0000000000000a92         db  0x00 ; '.'
0000000000000a93         db  0x73 ; 's'
0000000000000a94         db  0x74 ; 't'
0000000000000a95         db  0x72 ; 'r'
0000000000000a96         db  0x74 ; 't'
0000000000000a97         db  0x6f ; 'o'
0000000000000a98         db  0x6c ; 'l'
0000000000000a99         db  0x00 ; '.'
0000000000000a9a         db  0x63 ; 'c'
0000000000000a9b         db  0x66 ; 'f'
0000000000000a9c         db  0x73 ; 's'
0000000000000a9d         db  0x65 ; 'e'
0000000000000a9e         db  0x74 ; 't'
0000000000000a9f         db  0x69 ; 'i'
0000000000000aa0         db  0x73 ; 's'
0000000000000aa1         db  0x70 ; 'p'
0000000000000aa2         db  0x65 ; 'e'
0000000000000aa3         db  0x65 ; 'e'
0000000000000aa4         db  0x64 ; 'd'
0000000000000aa5         db  0x00 ; '.'
0000000000000aa6         db  0x63 ; 'c'
0000000000000aa7         db  0x61 ; 'a'
0000000000000aa8         db  0x6c ; 'l'
0000000000000aa9         db  0x6c ; 'l'
0000000000000aaa         db  0x6f ; 'o'
0000000000000aab         db  0x63 ; 'c'
0000000000000aac         db  0x00 ; '.'
0000000000000aad         db  0x73 ; 's'
0000000000000aae         db  0x74 ; 't'
0000000000000aaf         db  0x72 ; 'r'
0000000000000ab0         db  0x6c ; 'l'
0000000000000ab1         db  0x65 ; 'e'
0000000000000ab2         db  0x6e ; 'n'
0000000000000ab3         db  0x00 ; '.'
0000000000000ab4         db  0x6d ; 'm'
0000000000000ab5         db  0x65 ; 'e'
0000000000000ab6         db  0x6d ; 'm'
0000000000000ab7         db  0x73 ; 's'
0000000000000ab8         db  0x65 ; 'e'
0000000000000ab9         db  0x74 ; 't'
0000000000000aba         db  0x00 ; '.'
0000000000000abb         db  0x63 ; 'c'
0000000000000abc         db  0x66 ; 'f'
0000000000000abd         db  0x67 ; 'g'
0000000000000abe         db  0x65 ; 'e'
0000000000000abf         db  0x74 ; 't'
0000000000000ac0         db  0x6f ; 'o'
0000000000000ac1         db  0x73 ; 's'
0000000000000ac2         db  0x70 ; 'p'
0000000000000ac3         db  0x65 ; 'e'
0000000000000ac4         db  0x65 ; 'e'
0000000000000ac5         db  0x64 ; 'd'
0000000000000ac6         db  0x00 ; '.'
0000000000000ac7         db  0x5f ; '_'
0000000000000ac8         db  0x5f ; '_'
0000000000000ac9         db  0x65 ; 'e'
0000000000000aca         db  0x72 ; 'r'
0000000000000acb         db  0x72 ; 'r'
0000000000000acc         db  0x6e ; 'n'
0000000000000acd         db  0x6f ; 'o'
0000000000000ace         db  0x5f ; '_'
0000000000000acf         db  0x6c ; 'l'
0000000000000ad0         db  0x6f ; 'o'
0000000000000ad1         db  0x63 ; 'c'
0000000000000ad2         db  0x61 ; 'a'
0000000000000ad3         db  0x74 ; 't'
0000000000000ad4         db  0x69 ; 'i'
0000000000000ad5         db  0x6f ; 'o'
0000000000000ad6         db  0x6e ; 'n'
0000000000000ad7         db  0x00 ; '.'
0000000000000ad8         db  0x74 ; 't'
0000000000000ad9         db  0x63 ; 'c'
0000000000000ada         db  0x73 ; 's'
0000000000000adb         db  0x65 ; 'e'
0000000000000adc         db  0x74 ; 't'
0000000000000add         db  0x61 ; 'a'
0000000000000ade         db  0x74 ; 't'
0000000000000adf         db  0x74 ; 't'
0000000000000ae0         db  0x72 ; 'r'
0000000000000ae1         db  0x00 ; '.'
0000000000000ae2         db  0x6d ; 'm'
0000000000000ae3         db  0x65 ; 'e'
0000000000000ae4         db  0x6d ; 'm'
0000000000000ae5         db  0x63 ; 'c'
0000000000000ae6         db  0x6d ; 'm'
0000000000000ae7         db  0x70 ; 'p'
0000000000000ae8         db  0x00 ; '.'
0000000000000ae9         db  0x64 ; 'd'
0000000000000aea         db  0x75 ; 'u'
0000000000000aeb         db  0x70 ; 'p'
0000000000000aec         db  0x32 ; '2'
0000000000000aed         db  0x00 ; '.'
0000000000000aee         db  0x5f ; '_'
0000000000000aef         db  0x5f ; '_'
0000000000000af0         db  0x66 ; 'f'
0000000000000af1         db  0x70 ; 'p'
0000000000000af2         db  0x72 ; 'r'
0000000000000af3         db  0x69 ; 'i'
0000000000000af4         db  0x6e ; 'n'
0000000000000af5         db  0x74 ; 't'
0000000000000af6         db  0x66 ; 'f'
0000000000000af7         db  0x5f ; '_'
0000000000000af8         db  0x63 ; 'c'
0000000000000af9         db  0x68 ; 'h'
0000000000000afa         db  0x6b ; 'k'
0000000000000afb         db  0x00 ; '.'
0000000000000afc         db  0x73 ; 's'
0000000000000afd         db  0x74 ; 't'
0000000000000afe         db  0x64 ; 'd'
0000000000000aff         db  0x6f ; 'o'
0000000000000b00         db  0x75 ; 'u'
0000000000000b01         db  0x74 ; 't'
0000000000000b02         db  0x00 ; '.'
0000000000000b03         db  0x6c ; 'l'
0000000000000b04         db  0x73 ; 's'
0000000000000b05         db  0x65 ; 'e'
0000000000000b06         db  0x65 ; 'e'
0000000000000b07         db  0x6b ; 'k'
0000000000000b08         db  0x00 ; '.'
0000000000000b09         db  0x6d ; 'm'
0000000000000b0a         db  0x65 ; 'e'
0000000000000b0b         db  0x6d ; 'm'
0000000000000b0c         db  0x63 ; 'c'
0000000000000b0d         db  0x70 ; 'p'
0000000000000b0e         db  0x79 ; 'y'
0000000000000b0f         db  0x00 ; '.'
0000000000000b10         db  0x66 ; 'f'
0000000000000b11         db  0x63 ; 'c'
0000000000000b12         db  0x6c ; 'l'
0000000000000b13         db  0x6f ; 'o'
0000000000000b14         db  0x73 ; 's'
0000000000000b15         db  0x65 ; 'e'
0000000000000b16         db  0x00 ; '.'
0000000000000b17         db  0x73 ; 's'
0000000000000b18         db  0x74 ; 't'
0000000000000b19         db  0x72 ; 'r'
0000000000000b1a         db  0x74 ; 't'
0000000000000b1b         db  0x6f ; 'o'
0000000000000b1c         db  0x75 ; 'u'
0000000000000b1d         db  0x6c ; 'l'
0000000000000b1e         db  0x00 ; '.'
0000000000000b1f         db  0x6d ; 'm'
0000000000000b20         db  0x61 ; 'a'
0000000000000b21         db  0x6c ; 'l'
0000000000000b22         db  0x6c ; 'l'
0000000000000b23         db  0x6f ; 'o'
0000000000000b24         db  0x63 ; 'c'
0000000000000b25         db  0x00 ; '.'
0000000000000b26         db  0x6d ; 'm'
0000000000000b27         db  0x62 ; 'b'
0000000000000b28         db  0x73 ; 's'
0000000000000b29         db  0x69 ; 'i'
0000000000000b2a         db  0x6e ; 'n'
0000000000000b2b         db  0x69 ; 'i'
0000000000000b2c         db  0x74 ; 't'
0000000000000b2d         db  0x00 ; '.'
0000000000000b2e         db  0x6e ; 'n'
0000000000000b2f         db  0x6c ; 'l'
0000000000000b30         db  0x5f ; '_'
0000000000000b31         db  0x6c ; 'l'
0000000000000b32         db  0x61 ; 'a'
0000000000000b33         db  0x6e ; 'n'
0000000000000b34         db  0x67 ; 'g'
0000000000000b35         db  0x69 ; 'i'
0000000000000b36         db  0x6e ; 'n'
0000000000000b37         db  0x66 ; 'f'
0000000000000b38         db  0x6f ; 'o'
0000000000000b39         db  0x00 ; '.'
0000000000000b3a         db  0x5f ; '_'
0000000000000b3b         db  0x5f ; '_'
0000000000000b3c         db  0x63 ; 'c'
0000000000000b3d         db  0x74 ; 't'
0000000000000b3e         db  0x79 ; 'y'
0000000000000b3f         db  0x70 ; 'p'
0000000000000b40         db  0x65 ; 'e'
                     aBloc:
0000000000000b41         db         "_b_loc", 0
0000000000000b48         db  0x67 ; 'g'
0000000000000b49         db  0x65 ; 'e'
0000000000000b4a         db  0x74 ; 't'
0000000000000b4b         db  0x65 ; 'e'
0000000000000b4c         db  0x6e ; 'n'
0000000000000b4d         db  0x76 ; 'v'
0000000000000b4e         db  0x00 ; '.'
0000000000000b4f         db  0x6f ; 'o'
0000000000000b50         db  0x70 ; 'p'
0000000000000b51         db  0x74 ; 't'
0000000000000b52         db  0x61 ; 'a'
0000000000000b53         db  0x72 ; 'r'
0000000000000b54         db  0x67 ; 'g'
0000000000000b55         db  0x00 ; '.'
0000000000000b56         db  0x5f ; '_'
0000000000000b57         db  0x5f ; '_'
0000000000000b58         db  0x66 ; 'f'
0000000000000b59         db  0x72 ; 'r'
0000000000000b5a         db  0x65 ; 'e'
0000000000000b5b         db  0x61 ; 'a'
0000000000000b5c         db  0x64 ; 'd'
0000000000000b5d         db  0x69 ; 'i'
0000000000000b5e         db  0x6e ; 'n'
0000000000000b5f         db  0x67 ; 'g'
0000000000000b60         db  0x00 ; '.'
0000000000000b61         db  0x73 ; 's'
0000000000000b62         db  0x74 ; 't'
0000000000000b63         db  0x64 ; 'd'
0000000000000b64         db  0x65 ; 'e'
0000000000000b65         db  0x72 ; 'r'
0000000000000b66         db  0x72 ; 'r'
0000000000000b67         db  0x00 ; '.'
0000000000000b68         db  0x69 ; 'i'
0000000000000b69         db  0x6f ; 'o'
0000000000000b6a         db  0x63 ; 'c'
0000000000000b6b         db  0x74 ; 't'
0000000000000b6c         db  0x6c ; 'l'
0000000000000b6d         db  0x00 ; '.'
0000000000000b6e         db  0x5f ; '_'
0000000000000b6f         db  0x5f ; '_'
0000000000000b70         db  0x73 ; 's'
0000000000000b71         db  0x6e ; 'n'
0000000000000b72         db  0x70 ; 'p'
0000000000000b73         db  0x72 ; 'r'
0000000000000b74         db  0x69 ; 'i'
0000000000000b75         db  0x6e ; 'n'
0000000000000b76         db  0x74 ; 't'
0000000000000b77         db  0x66 ; 'f'
0000000000000b78         db  0x5f ; '_'
0000000000000b79         db  0x63 ; 'c'
0000000000000b7a         db  0x68 ; 'h'
0000000000000b7b         db  0x6b ; 'k'
0000000000000b7c         db  0x00 ; '.'
0000000000000b7d         db  0x67 ; 'g'
0000000000000b7e         db  0x65 ; 'e'
0000000000000b7f         db  0x74 ; 't'
0000000000000b80         db  0x6f ; 'o'
0000000000000b81         db  0x70 ; 'p'
0000000000000b82         db  0x74 ; 't'
0000000000000b83         db  0x5f ; '_'
0000000000000b84         db  0x6c ; 'l'
0000000000000b85         db  0x6f ; 'o'
0000000000000b86         db  0x6e ; 'n'
0000000000000b87         db  0x67 ; 'g'
0000000000000b88         db  0x00 ; '.'
0000000000000b89         db  0x66 ; 'f'
0000000000000b8a         db  0x69 ; 'i'
0000000000000b8b         db  0x6c ; 'l'
0000000000000b8c         db  0x65 ; 'e'
0000000000000b8d         db  0x6e ; 'n'
0000000000000b8e         db  0x6f ; 'o'
0000000000000b8f         db  0x00 ; '.'
0000000000000b90         db  0x66 ; 'f'
0000000000000b91         db  0x77 ; 'w'
0000000000000b92         db  0x72 ; 'r'
0000000000000b93         db  0x69 ; 'i'
0000000000000b94         db  0x74 ; 't'
0000000000000b95         db  0x65 ; 'e'
0000000000000b96         db  0x00 ; '.'
0000000000000b97         db  0x5f ; '_'
0000000000000b98         db  0x5f ; '_'
0000000000000b99         db  0x66 ; 'f'
0000000000000b9a         db  0x70 ; 'p'
0000000000000b9b         db  0x65 ; 'e'
0000000000000b9c         db  0x6e ; 'n'
0000000000000b9d         db  0x64 ; 'd'
0000000000000b9e         db  0x69 ; 'i'
0000000000000b9f         db  0x6e ; 'n'
0000000000000ba0         db  0x67 ; 'g'
0000000000000ba1         db  0x00 ; '.'
0000000000000ba2         db  0x6f ; 'o'
0000000000000ba3         db  0x70 ; 'p'
0000000000000ba4         db  0x65 ; 'e'
0000000000000ba5         db  0x6e ; 'n'
0000000000000ba6         db  0x00 ; '.'
0000000000000ba7         db  0x73 ; 's'
0000000000000ba8         db  0x74 ; 't'
0000000000000ba9         db  0x72 ; 'r'
0000000000000baa         db  0x63 ; 'c'
0000000000000bab         db  0x68 ; 'h'
0000000000000bac         db  0x72 ; 'r'
0000000000000bad         db  0x00 ; '.'
0000000000000bae         db  0x70 ; 'p'
0000000000000baf         db  0x72 ; 'r'
0000000000000bb0         db  0x6f ; 'o'
0000000000000bb1         db  0x67 ; 'g'
0000000000000bb2         db  0x72 ; 'r'
0000000000000bb3         db  0x61 ; 'a'
0000000000000bb4         db  0x6d ; 'm'
0000000000000bb5         db  0x5f ; '_'
0000000000000bb6         db  0x69 ; 'i'
0000000000000bb7         db  0x6e ; 'n'
0000000000000bb8         db  0x76 ; 'v'
0000000000000bb9         db  0x6f ; 'o'
0000000000000bba         db  0x63 ; 'c'
0000000000000bbb         db  0x61 ; 'a'
0000000000000bbc         db  0x74 ; 't'
0000000000000bbd         db  0x69 ; 'i'
0000000000000bbe         db  0x6f ; 'o'
0000000000000bbf         db  0x6e ; 'n'
0000000000000bc0         db  0x5f ; '_'
0000000000000bc1         db  0x73 ; 's'
0000000000000bc2         db  0x68 ; 'h'
0000000000000bc3         db  0x6f ; 'o'
0000000000000bc4         db  0x72 ; 'r'
0000000000000bc5         db  0x74 ; 't'
0000000000000bc6         db  0x5f ; '_'
0000000000000bc7         db  0x6e ; 'n'
0000000000000bc8         db  0x61 ; 'a'
0000000000000bc9         db  0x6d ; 'm'
0000000000000bca         db  0x65 ; 'e'
0000000000000bcb         db  0x00 ; '.'
0000000000000bcc         db  0x74 ; 't'
0000000000000bcd         db  0x63 ; 'c'
0000000000000bce         db  0x67 ; 'g'
0000000000000bcf         db  0x65 ; 'e'
0000000000000bd0         db  0x74 ; 't'
0000000000000bd1         db  0x61 ; 'a'
0000000000000bd2         db  0x74 ; 't'
0000000000000bd3         db  0x74 ; 't'
0000000000000bd4         db  0x72 ; 'r'
0000000000000bd5         db  0x00 ; '.'
0000000000000bd6         db  0x5f ; '_'
0000000000000bd7         db  0x5f ; '_'
0000000000000bd8         db  0x63 ; 'c'
0000000000000bd9         db  0x78 ; 'x'
0000000000000bda         db  0x61 ; 'a'
0000000000000bdb         db  0x5f ; '_'
0000000000000bdc         db  0x66 ; 'f'
0000000000000bdd         db  0x69 ; 'i'
0000000000000bde         db  0x6e ; 'n'
0000000000000bdf         db  0x61 ; 'a'
0000000000000be0         db  0x6c ; 'l'
0000000000000be1         db  0x69 ; 'i'
0000000000000be2         db  0x7a ; 'z'
0000000000000be3         db  0x65 ; 'e'
0000000000000be4         db  0x00 ; '.'
0000000000000be5         db  0x66 ; 'f'
0000000000000be6         db  0x63 ; 'c'
0000000000000be7         db  0x6e ; 'n'
0000000000000be8         db  0x74 ; 't'
0000000000000be9         db  0x6c ; 'l'
0000000000000bea         db  0x00 ; '.'
0000000000000beb         db  0x63 ; 'c'
0000000000000bec         db  0x66 ; 'f'
0000000000000bed         db  0x73 ; 's'
0000000000000bee         db  0x65 ; 'e'
0000000000000bef         db  0x74 ; 't'
0000000000000bf0         db  0x6f ; 'o'
0000000000000bf1         db  0x73 ; 's'
0000000000000bf2         db  0x70 ; 'p'
0000000000000bf3         db  0x65 ; 'e'
0000000000000bf4         db  0x65 ; 'e'
0000000000000bf5         db  0x64 ; 'd'
0000000000000bf6         db  0x00 ; '.'
0000000000000bf7         db  0x63 ; 'c'
0000000000000bf8         db  0x66 ; 'f'
0000000000000bf9         db  0x67 ; 'g'
0000000000000bfa         db  0x65 ; 'e'
0000000000000bfb         db  0x74 ; 't'
0000000000000bfc         db  0x69 ; 'i'
0000000000000bfd         db  0x73 ; 's'
0000000000000bfe         db  0x70 ; 'p'
0000000000000bff         db  0x65 ; 'e'
0000000000000c00         db  0x65 ; 'e'
0000000000000c01         db  0x64 ; 'd'
0000000000000c02         db  0x00 ; '.'
0000000000000c03         db  0x62 ; 'b'
0000000000000c04         db  0x69 ; 'i'
0000000000000c05         db  0x6e ; 'n'
0000000000000c06         db  0x64 ; 'd'
0000000000000c07         db  0x74 ; 't'
0000000000000c08         db  0x65 ; 'e'
0000000000000c09         db  0x78 ; 'x'
0000000000000c0a         db  0x74 ; 't'
0000000000000c0b         db  0x64 ; 'd'
0000000000000c0c         db  0x6f ; 'o'
0000000000000c0d         db  0x6d ; 'm'
0000000000000c0e         db  0x61 ; 'a'
0000000000000c0f         db  0x69 ; 'i'
0000000000000c10         db  0x6e ; 'n'
0000000000000c11         db  0x00 ; '.'
0000000000000c12         db  0x6f ; 'o'
0000000000000c13         db  0x70 ; 'p'
0000000000000c14         db  0x74 ; 't'
0000000000000c15         db  0x65 ; 'e'
0000000000000c16         db  0x72 ; 'r'
0000000000000c17         db  0x72 ; 'r'
0000000000000c18         db  0x00 ; '.'
0000000000000c19         db  0x73 ; 's'
0000000000000c1a         db  0x74 ; 't'
0000000000000c1b         db  0x72 ; 'r'
0000000000000c1c         db  0x63 ; 'c'
0000000000000c1d         db  0x6d ; 'm'
0000000000000c1e         db  0x70 ; 'p'
0000000000000c1f         db  0x00 ; '.'
0000000000000c20         db  0x5f ; '_'
0000000000000c21         db  0x5f ; '_'
0000000000000c22         db  0x6c ; 'l'
0000000000000c23         db  0x69 ; 'i'
0000000000000c24         db  0x62 ; 'b'
0000000000000c25         db  0x63 ; 'c'
0000000000000c26         db  0x5f ; '_'
0000000000000c27         db  0x73 ; 's'
0000000000000c28         db  0x74 ; 't'
0000000000000c29         db  0x61 ; 'a'
0000000000000c2a         db  0x72 ; 'r'
0000000000000c2b         db  0x74 ; 't'
0000000000000c2c         db  0x5f ; '_'
0000000000000c2d         db  0x6d ; 'm'
0000000000000c2e         db  0x61 ; 'a'
0000000000000c2f         db  0x69 ; 'i'
0000000000000c30         db  0x6e ; 'n'
0000000000000c31         db  0x00 ; '.'
0000000000000c32         db  0x66 ; 'f'
0000000000000c33         db  0x73 ; 's'
0000000000000c34         db  0x65 ; 'e'
0000000000000c35         db  0x65 ; 'e'
0000000000000c36         db  0x6b ; 'k'
0000000000000c37         db  0x6f ; 'o'
0000000000000c38         db  0x00 ; '.'
0000000000000c39         db  0x5f ; '_'
0000000000000c3a         db  0x5f ; '_'
0000000000000c3b         db  0x6f ; 'o'
0000000000000c3c         db  0x76 ; 'v'
0000000000000c3d         db  0x65 ; 'e'
0000000000000c3e         db  0x72 ; 'r'
0000000000000c3f         db  0x66 ; 'f'
0000000000000c40         db  0x6c ; 'l'
0000000000000c41         db  0x6f ; 'o'
0000000000000c42         db  0x77 ; 'w'
0000000000000c43         db  0x00 ; '.'
0000000000000c44         db  0x5f ; '_'
0000000000000c45         db  0x5f ; '_'
0000000000000c46         db  0x73 ; 's'
0000000000000c47         db  0x74 ; 't'
0000000000000c48         db  0x72 ; 'r'
0000000000000c49         db  0x74 ; 't'
0000000000000c4a         db  0x6f ; 'o'
0000000000000c4b         db  0x75 ; 'u'
0000000000000c4c         db  0x6c ; 'l'
0000000000000c4d         db  0x5f ; '_'
0000000000000c4e         db  0x69 ; 'i'
0000000000000c4f         db  0x6e ; 'n'
0000000000000c50         db  0x74 ; 't'
0000000000000c51         db  0x65 ; 'e'
0000000000000c52         db  0x72 ; 'r'
0000000000000c53         db  0x6e ; 'n'
0000000000000c54         db  0x61 ; 'a'
0000000000000c55         db  0x6c ; 'l'
0000000000000c56         db  0x00 ; '.'
0000000000000c57         db  0x66 ; 'f'
0000000000000c58         db  0x70 ; 'p'
0000000000000c59         db  0x75 ; 'u'
0000000000000c5a         db  0x74 ; 't'
0000000000000c5b         db  0x73 ; 's'
0000000000000c5c         db  0x5f ; '_'
0000000000000c5d         db  0x75 ; 'u'
0000000000000c5e         db  0x6e ; 'n'
0000000000000c5f         db  0x6c ; 'l'
0000000000000c60         db  0x6f ; 'o'
0000000000000c61         db  0x63 ; 'c'
0000000000000c62         db  0x6b ; 'k'
0000000000000c63         db  0x65 ; 'e'
0000000000000c64         db  0x64 ; 'd'
0000000000000c65         db  0x00 ; '.'
0000000000000c66         db  0x66 ; 'f'
0000000000000c67         db  0x72 ; 'r'
0000000000000c68         db  0x65 ; 'e'
0000000000000c69         db  0x65 ; 'e'
0000000000000c6a         db  0x00 ; '.'
0000000000000c6b         db  0x5f ; '_'
0000000000000c6c         db  0x5f ; '_'
0000000000000c6d         db  0x70 ; 'p'
0000000000000c6e         db  0x72 ; 'r'
0000000000000c6f         db  0x6f ; 'o'
0000000000000c70         db  0x67 ; 'g'
0000000000000c71         db  0x6e ; 'n'
0000000000000c72         db  0x61 ; 'a'
0000000000000c73         db  0x6d ; 'm'
0000000000000c74         db  0x65 ; 'e'
0000000000000c75         db  0x00 ; '.'
0000000000000c76         db  0x5f ; '_'
0000000000000c77         db  0x5f ; '_'
0000000000000c78         db  0x70 ; 'p'
0000000000000c79         db  0x72 ; 'r'
0000000000000c7a         db  0x6f ; 'o'
0000000000000c7b         db  0x67 ; 'g'
0000000000000c7c         db  0x6e ; 'n'
0000000000000c7d         db  0x61 ; 'a'
0000000000000c7e         db  0x6d ; 'm'
0000000000000c7f         db  0x65 ; 'e'
0000000000000c80         db  0x5f ; '_'
0000000000000c81         db  0x66 ; 'f'
0000000000000c82         db  0x75 ; 'u'
0000000000000c83         db  0x6c ; 'l'
0000000000000c84         db  0x6c ; 'l'
0000000000000c85         db  0x00 ; '.'
0000000000000c86         db  0x5f ; '_'
0000000000000c87         db  0x5f ; '_'
0000000000000c88         db  0x63 ; 'c'
0000000000000c89         db  0x78 ; 'x'
0000000000000c8a         db  0x61 ; 'a'
0000000000000c8b         db  0x5f ; '_'
0000000000000c8c         db  0x61 ; 'a'
0000000000000c8d         db  0x74 ; 't'
0000000000000c8e         db  0x65 ; 'e'
0000000000000c8f         db  0x78 ; 'x'
0000000000000c90         db  0x69 ; 'i'
0000000000000c91         db  0x74 ; 't'
0000000000000c92         db  0x00 ; '.'
0000000000000c93         db  0x47 ; 'G'
0000000000000c94         db  0x4c ; 'L'
0000000000000c95         db  0x49 ; 'I'
0000000000000c96         db  0x42 ; 'B'
0000000000000c97         db  0x43 ; 'C'
0000000000000c98         db  0x5f ; '_'
0000000000000c99         db  0x32 ; '2'
0000000000000c9a         db  0x2e ; '.'
0000000000000c9b         db  0x33 ; '3'
0000000000000c9c         db  0x00 ; '.'
0000000000000c9d         db  0x47 ; 'G'
0000000000000c9e         db  0x4c ; 'L'
0000000000000c9f         db  0x49 ; 'I'
0000000000000ca0         db  0x42 ; 'B'
0000000000000ca1         db  0x43 ; 'C'
0000000000000ca2         db  0x5f ; '_'
0000000000000ca3         db  0x32 ; '2'
0000000000000ca4         db  0x2e ; '.'
0000000000000ca5         db  0x31 ; '1'
0000000000000ca6         db  0x34 ; '4'
0000000000000ca7         db  0x00 ; '.'
0000000000000ca8         db  0x47 ; 'G'
0000000000000ca9         db  0x4c ; 'L'
0000000000000caa         db  0x49 ; 'I'
0000000000000cab         db  0x42 ; 'B'
0000000000000cac         db  0x43 ; 'C'
0000000000000cad         db  0x5f ; '_'
0000000000000cae         db  0x32 ; '2'
0000000000000caf         db  0x2e ; '.'
0000000000000cb0         db  0x34 ; '4'
0000000000000cb1         db  0x00 ; '.'
0000000000000cb2         db  0x47 ; 'G'
0000000000000cb3         db  0x4c ; 'L'
0000000000000cb4         db  0x49 ; 'I'
0000000000000cb5         db  0x42 ; 'B'
0000000000000cb6         db  0x43 ; 'C'
0000000000000cb7         db  0x5f ; '_'
0000000000000cb8         db  0x32 ; '2'
0000000000000cb9         db  0x2e ; '.'
0000000000000cba         db  0x33 ; '3'
0000000000000cbb         db  0x2e ; '.'
0000000000000cbc         db  0x34 ; '4'
0000000000000cbd         db  0x00 ; '.'
0000000000000cbe         db  0x47 ; 'G'
0000000000000cbf         db  0x4c ; 'L'
0000000000000cc0         db  0x49 ; 'I'
0000000000000cc1         db  0x42 ; 'B'
0000000000000cc2         db  0x43 ; 'C'
0000000000000cc3         db  0x5f ; '_'
0000000000000cc4         db  0x32 ; '2'
0000000000000cc5         db  0x2e ; '.'
0000000000000cc6         db  0x32 ; '2'
0000000000000cc7         db  0x2e ; '.'
0000000000000cc8         db  0x35 ; '5'
0000000000000cc9         db  0x00 ; '.'
0000000000000cca         db  0x5f ; '_'
0000000000000ccb         db  0x49 ; 'I'
0000000000000ccc         db  0x54 ; 'T'
0000000000000ccd         db  0x4d ; 'M'
0000000000000cce         db  0x5f ; '_'
0000000000000ccf         db  0x64 ; 'd'
0000000000000cd0         db  0x65 ; 'e'
0000000000000cd1         db  0x72 ; 'r'
0000000000000cd2         db  0x65 ; 'e'
0000000000000cd3         db  0x67 ; 'g'
0000000000000cd4         db  0x69 ; 'i'
0000000000000cd5         db  0x73 ; 's'
0000000000000cd6         db  0x74 ; 't'
0000000000000cd7         db  0x65 ; 'e'
0000000000000cd8         db  0x72 ; 'r'
0000000000000cd9         db  0x54 ; 'T'
0000000000000cda         db  0x4d ; 'M'
0000000000000cdb         db  0x43 ; 'C'
0000000000000cdc         db  0x6c ; 'l'
0000000000000cdd         db  0x6f ; 'o'
0000000000000cde         db  0x6e ; 'n'
0000000000000cdf         db  0x65 ; 'e'
0000000000000ce0         db  0x54 ; 'T'
0000000000000ce1         db  0x61 ; 'a'
0000000000000ce2         db  0x62 ; 'b'
0000000000000ce3         db  0x6c ; 'l'
0000000000000ce4         db  0x65 ; 'e'
0000000000000ce5         db  0x00 ; '.'
0000000000000ce6         db  0x5f ; '_'
0000000000000ce7         db  0x5f ; '_'
0000000000000ce8         db  0x67 ; 'g'
0000000000000ce9         db  0x6d ; 'm'
0000000000000cea         db  0x6f ; 'o'
0000000000000ceb         db  0x6e ; 'n'
0000000000000cec         db  0x5f ; '_'
0000000000000ced         db  0x73 ; 's'
0000000000000cee         db  0x74 ; 't'
0000000000000cef         db  0x61 ; 'a'
0000000000000cf0         db  0x72 ; 'r'
0000000000000cf1         db  0x74 ; 't'
0000000000000cf2         db  0x5f ; '_'
0000000000000cf3         db  0x5f ; '_'
0000000000000cf4         db  0x00 ; '.'
0000000000000cf5         db  0x5f ; '_'
0000000000000cf6         db  0x49 ; 'I'
0000000000000cf7         db  0x54 ; 'T'
0000000000000cf8         db  0x4d ; 'M'
0000000000000cf9         db  0x5f ; '_'
0000000000000cfa         db  0x72 ; 'r'
0000000000000cfb         db  0x65 ; 'e'
0000000000000cfc         db  0x67 ; 'g'
0000000000000cfd         db  0x69 ; 'i'
0000000000000cfe         db  0x73 ; 's'
0000000000000cff         db  0x74 ; 't'
                     aErtmclonetable:
0000000000000d00         db         "erTMCloneTable", 0
0000000000000d0f         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xd10; 0xda4[ (148 bytes)
        ; File offset : [3344; 3492[ (148 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000d10         db  0x00 ; '.'
0000000000000d11         db  0x00 ; '.'
0000000000000d12         db  0x02 ; '.'
0000000000000d13         db  0x00 ; '.'
0000000000000d14         db  0x03 ; '.'
0000000000000d15         db  0x00 ; '.'
0000000000000d16         db  0x02 ; '.'
0000000000000d17         db  0x00 ; '.'
0000000000000d18         db  0x02 ; '.'
0000000000000d19         db  0x00 ; '.'
0000000000000d1a         db  0x02 ; '.'
0000000000000d1b         db  0x00 ; '.'
0000000000000d1c         db  0x02 ; '.'
0000000000000d1d         db  0x00 ; '.'
0000000000000d1e         db  0x00 ; '.'
0000000000000d1f         db  0x00 ; '.'
0000000000000d20         db  0x02 ; '.'
0000000000000d21         db  0x00 ; '.'
0000000000000d22         db  0x02 ; '.'
0000000000000d23         db  0x00 ; '.'
0000000000000d24         db  0x02 ; '.'
0000000000000d25         db  0x00 ; '.'
0000000000000d26         db  0x02 ; '.'
0000000000000d27         db  0x00 ; '.'
0000000000000d28         db  0x02 ; '.'
0000000000000d29         db  0x00 ; '.'
0000000000000d2a         db  0x02 ; '.'
0000000000000d2b         db  0x00 ; '.'
0000000000000d2c         db  0x02 ; '.'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x02 ; '.'
0000000000000d2f         db  0x00 ; '.'
0000000000000d30         db  0x02 ; '.'
0000000000000d31         db  0x00 ; '.'
0000000000000d32         db  0x02 ; '.'
0000000000000d33         db  0x00 ; '.'
0000000000000d34         db  0x02 ; '.'
0000000000000d35         db  0x00 ; '.'
0000000000000d36         db  0x04 ; '.'
0000000000000d37         db  0x00 ; '.'
0000000000000d38         db  0x02 ; '.'
0000000000000d39         db  0x00 ; '.'
0000000000000d3a         db  0x02 ; '.'
0000000000000d3b         db  0x00 ; '.'
0000000000000d3c         db  0x02 ; '.'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x02 ; '.'
0000000000000d3f         db  0x00 ; '.'
0000000000000d40         db  0x02 ; '.'
0000000000000d41         db  0x00 ; '.'
0000000000000d42         db  0x02 ; '.'
0000000000000d43         db  0x00 ; '.'
0000000000000d44         db  0x02 ; '.'
0000000000000d45         db  0x00 ; '.'
0000000000000d46         db  0x02 ; '.'
0000000000000d47         db  0x00 ; '.'
0000000000000d48         db  0x02 ; '.'
0000000000000d49         db  0x00 ; '.'
0000000000000d4a         db  0x02 ; '.'
0000000000000d4b         db  0x00 ; '.'
0000000000000d4c         db  0x02 ; '.'
0000000000000d4d         db  0x00 ; '.'
0000000000000d4e         db  0x02 ; '.'
0000000000000d4f         db  0x00 ; '.'
0000000000000d50         db  0x02 ; '.'
0000000000000d51         db  0x00 ; '.'
0000000000000d52         db  0x02 ; '.'
0000000000000d53         db  0x00 ; '.'
0000000000000d54         db  0x02 ; '.'
0000000000000d55         db  0x00 ; '.'
0000000000000d56         db  0x02 ; '.'
0000000000000d57         db  0x00 ; '.'
0000000000000d58         db  0x02 ; '.'
0000000000000d59         db  0x00 ; '.'
0000000000000d5a         db  0x00 ; '.'
0000000000000d5b         db  0x00 ; '.'
0000000000000d5c         db  0x02 ; '.'
0000000000000d5d         db  0x00 ; '.'
0000000000000d5e         db  0x05 ; '.'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0x02 ; '.'
0000000000000d61         db  0x00 ; '.'
0000000000000d62         db  0x02 ; '.'
0000000000000d63         db  0x00 ; '.'
0000000000000d64         db  0x02 ; '.'
0000000000000d65         db  0x00 ; '.'
0000000000000d66         db  0x02 ; '.'
0000000000000d67         db  0x00 ; '.'
0000000000000d68         db  0x02 ; '.'
0000000000000d69         db  0x00 ; '.'
0000000000000d6a         db  0x02 ; '.'
0000000000000d6b         db  0x00 ; '.'
0000000000000d6c         db  0x02 ; '.'
0000000000000d6d         db  0x00 ; '.'
0000000000000d6e         db  0x02 ; '.'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0x03 ; '.'
0000000000000d71         db  0x00 ; '.'
0000000000000d72         db  0x02 ; '.'
0000000000000d73         db  0x00 ; '.'
0000000000000d74         db  0x02 ; '.'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x02 ; '.'
0000000000000d77         db  0x00 ; '.'
0000000000000d78         db  0x02 ; '.'
0000000000000d79         db  0x00 ; '.'
0000000000000d7a         db  0x02 ; '.'
0000000000000d7b         db  0x00 ; '.'
0000000000000d7c         db  0x02 ; '.'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x02 ; '.'
0000000000000d7f         db  0x00 ; '.'
0000000000000d80         db  0x02 ; '.'
0000000000000d81         db  0x00 ; '.'
0000000000000d82         db  0x02 ; '.'
0000000000000d83         db  0x00 ; '.'
0000000000000d84         db  0x02 ; '.'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x03 ; '.'
0000000000000d87         db  0x00 ; '.'
0000000000000d88         db  0x00 ; '.'
0000000000000d89         db  0x00 ; '.'
0000000000000d8a         db  0x02 ; '.'
0000000000000d8b         db  0x00 ; '.'
0000000000000d8c         db  0x02 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x02 ; '.'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0x06 ; '.'
0000000000000d91         db  0x00 ; '.'
0000000000000d92         db  0x02 ; '.'
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x02 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x02 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0x02 ; '.'
0000000000000d99         db  0x00 ; '.'
0000000000000d9a         db  0x02 ; '.'
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x02 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x02 ; '.'
0000000000000d9f         db  0x00 ; '.'
0000000000000da0         db  0x02 ; '.'
0000000000000da1         db  0x00 ; '.'
0000000000000da2         db  0x02 ; '.'
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x00 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x00 ; '.'
0000000000000da7         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xda8; 0xe08[ (96 bytes)
        ; File offset : [3496; 3592[ (96 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000da8         db  0x01 ; '.'
0000000000000da9         db  0x00 ; '.'
0000000000000daa         db  0x05 ; '.'
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x01 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x00 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0x10 ; '.'
0000000000000db1         db  0x00 ; '.'
0000000000000db2         db  0x00 ; '.'
0000000000000db3         db  0x00 ; '.'
0000000000000db4         db  0x00 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x00 ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0x13 ; '.'
0000000000000db9         db  0x69 ; 'i'
0000000000000dba         db  0x69 ; 'i'
0000000000000dbb         db  0x0d ; '.'
0000000000000dbc         db  0x00 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x06 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0xc3 ; '.'
0000000000000dc1         db  0x02 ; '.'
0000000000000dc2         db  0x00 ; '.'
0000000000000dc3         db  0x00 ; '.'
0000000000000dc4         db  0x10 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x00 ; '.'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0x94 ; '.'
0000000000000dc9         db  0x91 ; '.'
0000000000000dca         db  0x96 ; '.'
0000000000000dcb         db  0x06 ; '.'
0000000000000dcc         db  0x00 ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x05 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0xcd ; '.'
0000000000000dd1         db  0x02 ; '.'
0000000000000dd2         db  0x00 ; '.'
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x10 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x00 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0x14 ; '.'
0000000000000dd9         db  0x69 ; 'i'
0000000000000dda         db  0x69 ; 'i'
0000000000000ddb         db  0x0d ; '.'
0000000000000ddc         db  0x00 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x04 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0xd8 ; '.'
0000000000000de1         db  0x02 ; '.'
0000000000000de2         db  0x00 ; '.'
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x10 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x00 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0x74 ; 't'
0000000000000de9         db  0x19 ; '.'
0000000000000dea         db  0x69 ; 'i'
0000000000000deb         db  0x09 ; '.'
0000000000000dec         db  0x00 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x03 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0xe2 ; '.'
0000000000000df1         db  0x02 ; '.'
0000000000000df2         db  0x00 ; '.'
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x10 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x00 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0x75 ; 'u'
0000000000000df9         db  0x1a ; '.'
0000000000000dfa         db  0x69 ; 'i'
0000000000000dfb         db  0x09 ; '.'
0000000000000dfc         db  0x00 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x02 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0xee ; '.'
0000000000000e01         db  0x02 ; '.'
0000000000000e02         db  0x00 ; '.'
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x00 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x00 ; '.'
0000000000000e07         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xe08; 0x1e58[ (4176 bytes)
        ; File offset : [3592; 7768[ (4176 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000e08         db  0x50 ; 'P'
0000000000000e09         db  0xfa ; '.'
0000000000000e0a         db  0x20 ; ' '
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x00 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x00 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0x08 ; '.'
0000000000000e11         db  0x00 ; '.'
0000000000000e12         db  0x00 ; '.'
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x00 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x00 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0x50 ; 'P'
0000000000000e19         db  0x34 ; '4'
0000000000000e1a         db  0x00 ; '.'
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x00 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x00 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0x58 ; 'X'
0000000000000e21         db  0xfa ; '.'
0000000000000e22         db  0x20 ; ' '
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x00 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x00 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0x08 ; '.'
0000000000000e29         db  0x00 ; '.'
0000000000000e2a         db  0x00 ; '.'
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x00 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x00 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0x10 ; '.'
0000000000000e31         db  0x34 ; '4'
0000000000000e32         db  0x00 ; '.'
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0x60 ; '`'
0000000000000e39         db  0xfa ; '.'
0000000000000e3a         db  0x20 ; ' '
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x00 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x00 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0x08 ; '.'
0000000000000e41         db  0x00 ; '.'
0000000000000e42         db  0x00 ; '.'
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x00 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0xc8 ; '.'
0000000000000e49         db  0xb6 ; '.'
0000000000000e4a         db  0x00 ; '.'
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x00 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0x78 ; 'x'
0000000000000e51         db  0xfa ; '.'
0000000000000e52         db  0x20 ; ' '
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x00 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x00 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0x08 ; '.'
0000000000000e59         db  0x00 ; '.'
0000000000000e5a         db  0x00 ; '.'
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x00 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x00 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0x63 ; 'c'
0000000000000e61         db  0xb6 ; '.'
0000000000000e62         db  0x00 ; '.'
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x00 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0x90 ; '.'
0000000000000e69         db  0xfa ; '.'
0000000000000e6a         db  0x20 ; ' '
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x00 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x00 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0x08 ; '.'
0000000000000e71         db  0x00 ; '.'
0000000000000e72         db  0x00 ; '.'
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x00 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0x51 ; 'Q'
0000000000000e79         db  0xb6 ; '.'
0000000000000e7a         db  0x00 ; '.'
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x00 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0xa8 ; '.'
0000000000000e81         db  0xfa ; '.'
0000000000000e82         db  0x20 ; ' '
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x00 ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0x08 ; '.'
0000000000000e89         db  0x00 ; '.'
0000000000000e8a         db  0x00 ; '.'
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x00 ; '.'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0x54 ; 'T'
0000000000000e91         db  0xb6 ; '.'
0000000000000e92         db  0x00 ; '.'
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'
0000000000000e98         db  0xc0 ; '.'
0000000000000e99         db  0xfa ; '.'
0000000000000e9a         db  0x20 ; ' '
0000000000000e9b         db  0x00 ; '.'
0000000000000e9c         db  0x00 ; '.'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x00 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0x08 ; '.'
0000000000000ea1         db  0x00 ; '.'
0000000000000ea2         db  0x00 ; '.'
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x00 ; '.'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0x58 ; 'X'
0000000000000ea9         db  0xb6 ; '.'
0000000000000eaa         db  0x00 ; '.'
0000000000000eab         db  0x00 ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x00 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0xd8 ; '.'
0000000000000eb1         db  0xfa ; '.'
0000000000000eb2         db  0x20 ; ' '
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x00 ; '.'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0x08 ; '.'
0000000000000eb9         db  0x00 ; '.'
0000000000000eba         db  0x00 ; '.'
0000000000000ebb         db  0x00 ; '.'
0000000000000ebc         db  0x00 ; '.'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x00 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0x5c ; '\'
0000000000000ec1         db  0xb6 ; '.'
0000000000000ec2         db  0x00 ; '.'
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x00 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0xf0 ; '.'
0000000000000ec9         db  0xfa ; '.'
0000000000000eca         db  0x20 ; ' '
0000000000000ecb         db  0x00 ; '.'
0000000000000ecc         db  0x00 ; '.'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0x08 ; '.'
0000000000000ed1         db  0x00 ; '.'
0000000000000ed2         db  0x00 ; '.'
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x00 ; '.'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0x62 ; 'b'
0000000000000ed9         db  0xb6 ; '.'
0000000000000eda         db  0x00 ; '.'
0000000000000edb         db  0x00 ; '.'
0000000000000edc         db  0x00 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0x08 ; '.'
0000000000000ee1         db  0xfb ; '.'
0000000000000ee2         db  0x20 ; ' '
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x00 ; '.'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0x08 ; '.'
0000000000000ee9         db  0x00 ; '.'
0000000000000eea         db  0x00 ; '.'
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x00 ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x00 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0x6b ; 'k'
0000000000000ef1         db  0xb6 ; '.'
0000000000000ef2         db  0x00 ; '.'
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0x20 ; ' '
0000000000000ef9         db  0xfb ; '.'
0000000000000efa         db  0x20 ; ' '
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x00 ; '.'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0x08 ; '.'
0000000000000f01         db  0x00 ; '.'
0000000000000f02         db  0x00 ; '.'
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x00 ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0x66 ; 'f'
0000000000000f09         db  0xb6 ; '.'
0000000000000f0a         db  0x00 ; '.'
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x00 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0x38 ; '8'
0000000000000f11         db  0xfb ; '.'
0000000000000f12         db  0x20 ; ' '
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x00 ; '.'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0x08 ; '.'
0000000000000f19         db  0x00 ; '.'
0000000000000f1a         db  0x00 ; '.'
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x00 ; '.'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0xbe ; '.'
0000000000000f21         db  0xb6 ; '.'
0000000000000f22         db  0x00 ; '.'
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x00 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0x50 ; 'P'
0000000000000f29         db  0xfb ; '.'
0000000000000f2a         db  0x20 ; ' '
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x00 ; '.'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0x08 ; '.'
0000000000000f31         db  0x00 ; '.'
0000000000000f32         db  0x00 ; '.'
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x00 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0x6a ; 'j'
0000000000000f39         db  0xb6 ; '.'
0000000000000f3a         db  0x00 ; '.'
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x00 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0x68 ; 'h'
0000000000000f41         db  0xfb ; '.'
0000000000000f42         db  0x20 ; ' '
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x00 ; '.'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0x08 ; '.'
0000000000000f49         db  0x00 ; '.'
0000000000000f4a         db  0x00 ; '.'
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x00 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0x6f ; 'o'
0000000000000f51         db  0xb6 ; '.'
0000000000000f52         db  0x00 ; '.'
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0x80 ; '.'
0000000000000f59         db  0xfb ; '.'
0000000000000f5a         db  0x20 ; ' '
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x00 ; '.'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0x08 ; '.'
0000000000000f61         db  0x00 ; '.'
0000000000000f62         db  0x00 ; '.'
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x00 ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0x74 ; 't'
0000000000000f69         db  0xb6 ; '.'
0000000000000f6a         db  0x00 ; '.'
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0x98 ; '.'
0000000000000f71         db  0xfb ; '.'
0000000000000f72         db  0x20 ; ' '
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x00 ; '.'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0x08 ; '.'
0000000000000f79         db  0x00 ; '.'
0000000000000f7a         db  0x00 ; '.'
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x00 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0x79 ; 'y'
0000000000000f81         db  0xb6 ; '.'
0000000000000f82         db  0x00 ; '.'
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x00 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0xb0 ; '.'
0000000000000f89         db  0xfb ; '.'
0000000000000f8a         db  0x20 ; ' '
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x00 ; '.'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0x08 ; '.'
0000000000000f91         db  0x00 ; '.'
0000000000000f92         db  0x00 ; '.'
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x00 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0x7e ; '~'
0000000000000f99         db  0xb6 ; '.'
0000000000000f9a         db  0x00 ; '.'
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'                                         ; DATA XREF=vasnprintf+180
0000000000000fa0         db  0xc8 ; '.'
0000000000000fa1         db  0xfb ; '.'
0000000000000fa2         db  0x20 ; ' '
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x00 ; '.'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0x08 ; '.'
0000000000000fa9         db  0x00 ; '.'
0000000000000faa         db  0x00 ; '.'
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x00 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0x83 ; '.'
0000000000000fb1         db  0xb6 ; '.'
0000000000000fb2         db  0x00 ; '.'
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x00 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0xe0 ; '.'
0000000000000fb9         db  0xfb ; '.'
0000000000000fba         db  0x20 ; ' '
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x00 ; '.'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0x08 ; '.'
0000000000000fc1         db  0x00 ; '.'
0000000000000fc2         db  0x00 ; '.'
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x00 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0x89 ; '.'
0000000000000fc9         db  0xb6 ; '.'
0000000000000fca         db  0x00 ; '.'
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0xf8 ; '.'
0000000000000fd1         db  0xfb ; '.'
0000000000000fd2         db  0x20 ; ' '
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x00 ; '.'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x08 ; '.'
0000000000000fd9         db  0x00 ; '.'
0000000000000fda         db  0x00 ; '.'
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x00 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0x8f ; '.'
0000000000000fe1         db  0xb6 ; '.'
0000000000000fe2         db  0x00 ; '.'
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x00 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0x10 ; '.'
0000000000000fe9         db  0xfc ; '.'
0000000000000fea         db  0x20 ; ' '
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x00 ; '.'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x08 ; '.'
0000000000000ff1         db  0x00 ; '.'
0000000000000ff2         db  0x00 ; '.'
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x00 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0x94 ; '.'
0000000000000ff9         db  0xb6 ; '.'
0000000000000ffa         db  0x00 ; '.'
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'
0000000000001000         db  0x28 ; '('
0000000000001001         db  0xfc ; '.'
0000000000001002         db  0x20 ; ' '
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x00 ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x08 ; '.'
0000000000001009         db  0x00 ; '.'
000000000000100a         db  0x00 ; '.'
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x00 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0x99 ; '.'
0000000000001011         db  0xb6 ; '.'
0000000000001012         db  0x00 ; '.'
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0x40 ; '@'
0000000000001019         db  0xfc ; '.'
000000000000101a         db  0x20 ; ' '
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x00 ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x08 ; '.'
0000000000001021         db  0x00 ; '.'
0000000000001022         db  0x00 ; '.'
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x00 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x9f ; '.'
0000000000001029         db  0xb6 ; '.'
000000000000102a         db  0x00 ; '.'
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x00 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0x58 ; 'X'
0000000000001031         db  0xfc ; '.'
0000000000001032         db  0x20 ; ' '
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x00 ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x08 ; '.'
0000000000001039         db  0x00 ; '.'
000000000000103a         db  0x00 ; '.'
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x00 ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0xa6 ; '.'
0000000000001041         db  0xb6 ; '.'
0000000000001042         db  0x00 ; '.'
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x00 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0x70 ; 'p'
0000000000001049         db  0xfc ; '.'
000000000000104a         db  0x20 ; ' '
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x00 ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x08 ; '.'
0000000000001051         db  0x00 ; '.'
0000000000001052         db  0x00 ; '.'
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x00 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0xad ; '.'
0000000000001059         db  0xb6 ; '.'
000000000000105a         db  0x00 ; '.'
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0x88 ; '.'
0000000000001061         db  0xfc ; '.'
0000000000001062         db  0x20 ; ' '
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x00 ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x08 ; '.'
0000000000001069         db  0x00 ; '.'
000000000000106a         db  0x00 ; '.'
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x00 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0xd3 ; '.'
0000000000001071         db  0xb6 ; '.'
0000000000001072         db  0x00 ; '.'
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x00 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0xa0 ; '.'
0000000000001079         db  0xfc ; '.'
000000000000107a         db  0x20 ; ' '
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x00 ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x08 ; '.'
0000000000001081         db  0x00 ; '.'
0000000000001082         db  0x00 ; '.'
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x00 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0xb4 ; '.'
0000000000001089         db  0xb6 ; '.'
000000000000108a         db  0x00 ; '.'
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x00 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0xb8 ; '.'
0000000000001091         db  0xfc ; '.'
0000000000001092         db  0x20 ; ' '
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x00 ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x08 ; '.'
0000000000001099         db  0x00 ; '.'
000000000000109a         db  0x00 ; '.'
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x00 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0xbb ; '.'
00000000000010a1         db  0xb6 ; '.'
00000000000010a2         db  0x00 ; '.'
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x00 ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0xd0 ; '.'
00000000000010a9         db  0xfc ; '.'
00000000000010aa         db  0x20 ; ' '
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x00 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x08 ; '.'
00000000000010b1         db  0x00 ; '.'
00000000000010b2         db  0x00 ; '.'
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x00 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0xc2 ; '.'
00000000000010b9         db  0xb6 ; '.'
00000000000010ba         db  0x00 ; '.'
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x00 ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0xe8 ; '.'
00000000000010c1         db  0xfc ; '.'
00000000000010c2         db  0x20 ; ' '
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x00 ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x08 ; '.'
00000000000010c9         db  0x00 ; '.'
00000000000010ca         db  0x00 ; '.'
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x00 ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0xca ; '.'
00000000000010d1         db  0xb6 ; '.'
00000000000010d2         db  0x00 ; '.'
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x00 ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0x00 ; '.'
00000000000010d9         db  0xfd ; '.'
00000000000010da         db  0x20 ; ' '
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x00 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x08 ; '.'
00000000000010e1         db  0x00 ; '.'
00000000000010e2         db  0x00 ; '.'
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x00 ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0xd2 ; '.'
00000000000010e9         db  0xb6 ; '.'
00000000000010ea         db  0x00 ; '.'
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x00 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0x18 ; '.'
00000000000010f1         db  0xfd ; '.'
00000000000010f2         db  0x20 ; ' '
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x00 ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0x08 ; '.'
00000000000010f9         db  0x00 ; '.'
00000000000010fa         db  0x00 ; '.'
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x00 ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0xda ; '.'
0000000000001101         db  0xb6 ; '.'
0000000000001102         db  0x00 ; '.'
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x00 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0x30 ; '0'
0000000000001109         db  0xfd ; '.'
000000000000110a         db  0x20 ; ' '
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x00 ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0x08 ; '.'
0000000000001111         db  0x00 ; '.'
0000000000001112         db  0x00 ; '.'
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x00 ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0xe2 ; '.'
0000000000001119         db  0xb6 ; '.'
000000000000111a         db  0x00 ; '.'
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x00 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x48 ; 'H'
0000000000001121         db  0xfd ; '.'
0000000000001122         db  0x20 ; ' '
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x00 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0x08 ; '.'
0000000000001129         db  0x00 ; '.'
000000000000112a         db  0x00 ; '.'
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x00 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0xea ; '.'
0000000000001131         db  0xb6 ; '.'
0000000000001132         db  0x00 ; '.'
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x00 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x60 ; '`'
0000000000001139         db  0xfd ; '.'
000000000000113a         db  0x20 ; ' '
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x00 ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0x08 ; '.'
0000000000001141         db  0x00 ; '.'
0000000000001142         db  0x00 ; '.'
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x00 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0xf2 ; '.'
0000000000001149         db  0xb6 ; '.'
000000000000114a         db  0x00 ; '.'
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x00 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x78 ; 'x'
0000000000001151         db  0xfd ; '.'
0000000000001152         db  0x20 ; ' '
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x00 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0x08 ; '.'
0000000000001159         db  0x00 ; '.'
000000000000115a         db  0x00 ; '.'
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x00 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0xfa ; '.'
0000000000001161         db  0xb6 ; '.'
0000000000001162         db  0x00 ; '.'
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x00 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0xc0 ; '.'
0000000000001169         db  0xfd ; '.'
000000000000116a         db  0x20 ; ' '
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x00 ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0x08 ; '.'
0000000000001171         db  0x00 ; '.'
0000000000001172         db  0x00 ; '.'
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x00 ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0x02 ; '.'
0000000000001179         db  0xb7 ; '.'
000000000000117a         db  0x00 ; '.'
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x00 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0xe0 ; '.'
0000000000001181         db  0xfd ; '.'
0000000000001182         db  0x20 ; ' '
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x00 ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x08 ; '.'
0000000000001189         db  0x00 ; '.'
000000000000118a         db  0x00 ; '.'
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x00 ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0x06 ; '.'
0000000000001191         db  0xb7 ; '.'
0000000000001192         db  0x00 ; '.'
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x00 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0x00 ; '.'
0000000000001199         db  0xfe ; '.'
000000000000119a         db  0x20 ; ' '
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x00 ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x08 ; '.'
00000000000011a1         db  0x00 ; '.'
00000000000011a2         db  0x00 ; '.'
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x00 ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0x0b ; '.'
00000000000011a9         db  0xb7 ; '.'
00000000000011aa         db  0x00 ; '.'
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x00 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0x20 ; ' '
00000000000011b1         db  0xfe ; '.'
00000000000011b2         db  0x20 ; ' '
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x00 ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x08 ; '.'
00000000000011b9         db  0x00 ; '.'
00000000000011ba         db  0x00 ; '.'
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x00 ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0x10 ; '.'
00000000000011c1         db  0xb7 ; '.'
00000000000011c2         db  0x00 ; '.'
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x00 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0x40 ; '@'
00000000000011c9         db  0xfe ; '.'
00000000000011ca         db  0x20 ; ' '
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x00 ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x08 ; '.'
00000000000011d1         db  0x00 ; '.'
00000000000011d2         db  0x00 ; '.'
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x00 ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0x15 ; '.'
00000000000011d9         db  0xb7 ; '.'
00000000000011da         db  0x00 ; '.'
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x00 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0x80 ; '.'
00000000000011e1         db  0xfe ; '.'
00000000000011e2         db  0x20 ; ' '
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x00 ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x08 ; '.'
00000000000011e9         db  0x00 ; '.'
00000000000011ea         db  0x00 ; '.'
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x00 ; '.'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0xa4 ; '.'
00000000000011f1         db  0xb4 ; '.'
00000000000011f2         db  0x00 ; '.'
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x00 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0x98 ; '.'
00000000000011f9         db  0xfe ; '.'
00000000000011fa         db  0x20 ; ' '
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x00 ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x08 ; '.'
0000000000001201         db  0x00 ; '.'
0000000000001202         db  0x00 ; '.'
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x00 ; '.'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0x1d ; '.'
0000000000001209         db  0xb7 ; '.'
000000000000120a         db  0x00 ; '.'
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x00 ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0xb0 ; '.'
0000000000001211         db  0xfe ; '.'
0000000000001212         db  0x20 ; ' '
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x00 ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x08 ; '.'
0000000000001219         db  0x00 ; '.'
000000000000121a         db  0x00 ; '.'
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x00 ; '.'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0x85 ; '.'
0000000000001221         db  0xb8 ; '.'
0000000000001222         db  0x00 ; '.'
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x00 ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0xc8 ; '.'
0000000000001229         db  0xfe ; '.'
000000000000122a         db  0x20 ; ' '
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x00 ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x08 ; '.'
0000000000001231         db  0x00 ; '.'
0000000000001232         db  0x00 ; '.'
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x00 ; '.'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0xd0 ; '.'
0000000000001239         db  0xb8 ; '.'
000000000000123a         db  0x00 ; '.'
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x00 ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0xe0 ; '.'
0000000000001241         db  0xfe ; '.'
0000000000001242         db  0x20 ; ' '
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x00 ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x08 ; '.'
0000000000001249         db  0x00 ; '.'
000000000000124a         db  0x00 ; '.'
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x00 ; '.'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0x22 ; '"'
0000000000001251         db  0xb7 ; '.'
0000000000001252         db  0x00 ; '.'
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x00 ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0xf8 ; '.'
0000000000001259         db  0xfe ; '.'
000000000000125a         db  0x20 ; ' '
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x00 ; '.'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x08 ; '.'
0000000000001261         db  0x00 ; '.'
0000000000001262         db  0x00 ; '.'
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x00 ; '.'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x26 ; '&'
0000000000001269         db  0xb7 ; '.'
000000000000126a         db  0x00 ; '.'
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x00 ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x10 ; '.'
0000000000001271         db  0xff ; '.'
0000000000001272         db  0x20 ; ' '
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x00 ; '.'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x08 ; '.'
0000000000001279         db  0x00 ; '.'
000000000000127a         db  0x00 ; '.'
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x00 ; '.'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x2a ; '*'
0000000000001281         db  0xb7 ; '.'
0000000000001282         db  0x00 ; '.'
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x00 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0x28 ; '('
0000000000001289         db  0xff ; '.'
000000000000128a         db  0x20 ; ' '
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x00 ; '.'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x08 ; '.'
0000000000001291         db  0x00 ; '.'
0000000000001292         db  0x00 ; '.'
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x00 ; '.'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x2f ; '/'
0000000000001299         db  0xb7 ; '.'
000000000000129a         db  0x00 ; '.'
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x00 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0x40 ; '@'
00000000000012a1         db  0xff ; '.'
00000000000012a2         db  0x20 ; ' '
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x00 ; '.'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x08 ; '.'
00000000000012a9         db  0x00 ; '.'
00000000000012aa         db  0x00 ; '.'
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x00 ; '.'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x35 ; '5'
00000000000012b1         db  0xb7 ; '.'
00000000000012b2         db  0x00 ; '.'
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x00 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0x58 ; 'X'
00000000000012b9         db  0xff ; '.'
00000000000012ba         db  0x20 ; ' '
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x00 ; '.'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x08 ; '.'
00000000000012c1         db  0x00 ; '.'
00000000000012c2         db  0x00 ; '.'
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x00 ; '.'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0xa7 ; '.'
00000000000012c9         db  0xb8 ; '.'
00000000000012ca         db  0x00 ; '.'
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x00 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0x70 ; 'p'
00000000000012d1         db  0xff ; '.'
00000000000012d2         db  0x20 ; ' '
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x00 ; '.'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x08 ; '.'
00000000000012d9         db  0x00 ; '.'
00000000000012da         db  0x00 ; '.'
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x00 ; '.'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0x3b ; ';'
00000000000012e1         db  0xb7 ; '.'
00000000000012e2         db  0x00 ; '.'
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x00 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0x88 ; '.'
00000000000012e9         db  0xff ; '.'
00000000000012ea         db  0x20 ; ' '
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x00 ; '.'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x08 ; '.'
00000000000012f1         db  0x00 ; '.'
00000000000012f2         db  0x00 ; '.'
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x00 ; '.'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x80 ; '.'
00000000000012f9         db  0xb3 ; '.'
00000000000012fa         db  0x00 ; '.'
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x00 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0xa0 ; '.'
0000000000001301         db  0xff ; '.'
0000000000001302         db  0x20 ; ' '
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x00 ; '.'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x08 ; '.'
0000000000001309         db  0x00 ; '.'
000000000000130a         db  0x00 ; '.'
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x00 ; '.'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0x40 ; '@'
0000000000001311         db  0xb7 ; '.'
0000000000001312         db  0x00 ; '.'
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x00 ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0xb8 ; '.'
0000000000001319         db  0xff ; '.'
000000000000131a         db  0x20 ; ' '
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x00 ; '.'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x08 ; '.'
0000000000001321         db  0x00 ; '.'
0000000000001322         db  0x00 ; '.'
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x00 ; '.'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0x47 ; 'G'
0000000000001329         db  0xb7 ; '.'
000000000000132a         db  0x00 ; '.'
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x00 ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0xd0 ; '.'
0000000000001331         db  0xff ; '.'
0000000000001332         db  0x20 ; ' '
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x00 ; '.'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x08 ; '.'
0000000000001339         db  0x00 ; '.'
000000000000133a         db  0x00 ; '.'
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x00 ; '.'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0xff ; '.'
0000000000001341         db  0xb5 ; '.'
0000000000001342         db  0x00 ; '.'
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x00 ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0xe8 ; '.'
0000000000001349         db  0xff ; '.'
000000000000134a         db  0x20 ; ' '
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x00 ; '.'
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x08 ; '.'
0000000000001351         db  0x00 ; '.'
0000000000001352         db  0x00 ; '.'
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x00 ; '.'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0x4d ; 'M'
0000000000001359         db  0xb7 ; '.'
000000000000135a         db  0x00 ; '.'
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x00 ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0x00 ; '.'
0000000000001361         db  0x00 ; '.'
0000000000001362         db  0x21 ; '!'
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x00 ; '.'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0x08 ; '.'
0000000000001369         db  0x00 ; '.'
000000000000136a         db  0x00 ; '.'
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x00 ; '.'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0x44 ; 'D'
0000000000001371         db  0xb5 ; '.'
0000000000001372         db  0x00 ; '.'
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x00 ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x18 ; '.'
0000000000001379         db  0x00 ; '.'
000000000000137a         db  0x21 ; '!'
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x00 ; '.'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0x08 ; '.'
0000000000001381         db  0x00 ; '.'
0000000000001382         db  0x00 ; '.'
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x00 ; '.'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0x48 ; 'H'
0000000000001389         db  0xb5 ; '.'
000000000000138a         db  0x00 ; '.'
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x00 ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x60 ; '`'
0000000000001391         db  0x00 ; '.'
0000000000001392         db  0x21 ; '!'
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x00 ; '.'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0x08 ; '.'
0000000000001399         db  0x00 ; '.'
000000000000139a         db  0x00 ; '.'
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x00 ; '.'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0x9d ; '.'
00000000000013a1         db  0xb4 ; '.'
00000000000013a2         db  0x00 ; '.'
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x00 ; '.'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x80 ; '.'
00000000000013a9         db  0x00 ; '.'
00000000000013aa         db  0x21 ; '!'
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x00 ; '.'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x08 ; '.'
00000000000013b1         db  0x00 ; '.'
00000000000013b2         db  0x00 ; '.'
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x00 ; '.'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'
00000000000013b8         db  0x55 ; 'U'
00000000000013b9         db  0xb7 ; '.'
00000000000013ba         db  0x00 ; '.'
00000000000013bb         db  0x00 ; '.'
00000000000013bc         db  0x00 ; '.'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x00 ; '.'
00000000000013bf         db  0x00 ; '.'
00000000000013c0         db  0xa0 ; '.'
00000000000013c1         db  0x00 ; '.'
00000000000013c2         db  0x21 ; '!'
00000000000013c3         db  0x00 ; '.'
00000000000013c4         db  0x00 ; '.'
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x00 ; '.'
00000000000013c7         db  0x00 ; '.'
00000000000013c8         db  0x08 ; '.'
00000000000013c9         db  0x00 ; '.'
00000000000013ca         db  0x00 ; '.'
00000000000013cb         db  0x00 ; '.'
00000000000013cc         db  0x00 ; '.'
00000000000013cd         db  0x00 ; '.'
00000000000013ce         db  0x00 ; '.'
00000000000013cf         db  0x00 ; '.'
00000000000013d0         db  0x5c ; '\'
00000000000013d1         db  0xb7 ; '.'
00000000000013d2         db  0x00 ; '.'
00000000000013d3         db  0x00 ; '.'
00000000000013d4         db  0x00 ; '.'
00000000000013d5         db  0x00 ; '.'
00000000000013d6         db  0x00 ; '.'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0xc0 ; '.'
00000000000013d9         db  0x00 ; '.'
00000000000013da         db  0x21 ; '!'
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x00 ; '.'
00000000000013dd         db  0x00 ; '.'
00000000000013de         db  0x00 ; '.'
00000000000013df         db  0x00 ; '.'
00000000000013e0         db  0x08 ; '.'
00000000000013e1         db  0x00 ; '.'
00000000000013e2         db  0x00 ; '.'
00000000000013e3         db  0x00 ; '.'
00000000000013e4         db  0x00 ; '.'
00000000000013e5         db  0x00 ; '.'
00000000000013e6         db  0x00 ; '.'
00000000000013e7         db  0x00 ; '.'
00000000000013e8         db  0x63 ; 'c'
00000000000013e9         db  0xb7 ; '.'
00000000000013ea         db  0x00 ; '.'
00000000000013eb         db  0x00 ; '.'
00000000000013ec         db  0x00 ; '.'
00000000000013ed         db  0x00 ; '.'
00000000000013ee         db  0x00 ; '.'
00000000000013ef         db  0x00 ; '.'
00000000000013f0         db  0xe0 ; '.'
00000000000013f1         db  0x00 ; '.'
00000000000013f2         db  0x21 ; '!'
00000000000013f3         db  0x00 ; '.'
00000000000013f4         db  0x00 ; '.'
00000000000013f5         db  0x00 ; '.'
00000000000013f6         db  0x00 ; '.'
00000000000013f7         db  0x00 ; '.'
00000000000013f8         db  0x08 ; '.'
00000000000013f9         db  0x00 ; '.'
00000000000013fa         db  0x00 ; '.'
00000000000013fb         db  0x00 ; '.'
00000000000013fc         db  0x00 ; '.'
00000000000013fd         db  0x00 ; '.'
00000000000013fe         db  0x00 ; '.'
00000000000013ff         db  0x00 ; '.'
0000000000001400         db  0x67 ; 'g'
0000000000001401         db  0xb7 ; '.'
0000000000001402         db  0x00 ; '.'
0000000000001403         db  0x00 ; '.'
0000000000001404         db  0x00 ; '.'
0000000000001405         db  0x00 ; '.'
0000000000001406         db  0x00 ; '.'
0000000000001407         db  0x00 ; '.'
0000000000001408         db  0x00 ; '.'
0000000000001409         db  0x01 ; '.'
000000000000140a         db  0x21 ; '!'
000000000000140b         db  0x00 ; '.'
000000000000140c         db  0x00 ; '.'
000000000000140d         db  0x00 ; '.'
000000000000140e         db  0x00 ; '.'
000000000000140f         db  0x00 ; '.'
0000000000001410         db  0x08 ; '.'
0000000000001411         db  0x00 ; '.'
0000000000001412         db  0x00 ; '.'
0000000000001413         db  0x00 ; '.'
0000000000001414         db  0x00 ; '.'
0000000000001415         db  0x00 ; '.'
0000000000001416         db  0x00 ; '.'
0000000000001417         db  0x00 ; '.'
0000000000001418         db  0x6b ; 'k'
0000000000001419         db  0xb7 ; '.'
000000000000141a         db  0x00 ; '.'
000000000000141b         db  0x00 ; '.'
000000000000141c         db  0x00 ; '.'
000000000000141d         db  0x00 ; '.'
000000000000141e         db  0x00 ; '.'
000000000000141f         db  0x00 ; '.'
0000000000001420         db  0x20 ; ' '
0000000000001421         db  0x01 ; '.'
0000000000001422         db  0x21 ; '!'
0000000000001423         db  0x00 ; '.'
0000000000001424         db  0x00 ; '.'
0000000000001425         db  0x00 ; '.'
0000000000001426         db  0x00 ; '.'
0000000000001427         db  0x00 ; '.'
0000000000001428         db  0x08 ; '.'
0000000000001429         db  0x00 ; '.'
000000000000142a         db  0x00 ; '.'
000000000000142b         db  0x00 ; '.'
000000000000142c         db  0x00 ; '.'
000000000000142d         db  0x00 ; '.'
000000000000142e         db  0x00 ; '.'
000000000000142f         db  0x00 ; '.'
0000000000001430         db  0x6f ; 'o'
0000000000001431         db  0xb7 ; '.'
0000000000001432         db  0x00 ; '.'
0000000000001433         db  0x00 ; '.'
0000000000001434         db  0x00 ; '.'
0000000000001435         db  0x00 ; '.'
0000000000001436         db  0x00 ; '.'
0000000000001437         db  0x00 ; '.'
0000000000001438         db  0x40 ; '@'
0000000000001439         db  0x01 ; '.'
000000000000143a         db  0x21 ; '!'
000000000000143b         db  0x00 ; '.'
000000000000143c         db  0x00 ; '.'
000000000000143d         db  0x00 ; '.'
000000000000143e         db  0x00 ; '.'
000000000000143f         db  0x00 ; '.'
0000000000001440         db  0x08 ; '.'
0000000000001441         db  0x00 ; '.'
0000000000001442         db  0x00 ; '.'
0000000000001443         db  0x00 ; '.'
0000000000001444         db  0x00 ; '.'
0000000000001445         db  0x00 ; '.'
0000000000001446         db  0x00 ; '.'
0000000000001447         db  0x00 ; '.'
0000000000001448         db  0x73 ; 's'
0000000000001449         db  0xb7 ; '.'
000000000000144a         db  0x00 ; '.'
000000000000144b         db  0x00 ; '.'
000000000000144c         db  0x00 ; '.'
000000000000144d         db  0x00 ; '.'
000000000000144e         db  0x00 ; '.'
000000000000144f         db  0x00 ; '.'
0000000000001450         db  0x60 ; '`'
0000000000001451         db  0x01 ; '.'
0000000000001452         db  0x21 ; '!'
0000000000001453         db  0x00 ; '.'
0000000000001454         db  0x00 ; '.'
0000000000001455         db  0x00 ; '.'
0000000000001456         db  0x00 ; '.'
0000000000001457         db  0x00 ; '.'
0000000000001458         db  0x08 ; '.'
0000000000001459         db  0x00 ; '.'
000000000000145a         db  0x00 ; '.'
000000000000145b         db  0x00 ; '.'
000000000000145c         db  0x00 ; '.'
000000000000145d         db  0x00 ; '.'
000000000000145e         db  0x00 ; '.'
000000000000145f         db  0x00 ; '.'
0000000000001460         db  0x79 ; 'y'
0000000000001461         db  0xb7 ; '.'
0000000000001462         db  0x00 ; '.'
0000000000001463         db  0x00 ; '.'
0000000000001464         db  0x00 ; '.'
0000000000001465         db  0x00 ; '.'
0000000000001466         db  0x00 ; '.'
0000000000001467         db  0x00 ; '.'
0000000000001468         db  0x80 ; '.'
0000000000001469         db  0x01 ; '.'
000000000000146a         db  0x21 ; '!'
000000000000146b         db  0x00 ; '.'
000000000000146c         db  0x00 ; '.'
000000000000146d         db  0x00 ; '.'
000000000000146e         db  0x00 ; '.'
000000000000146f         db  0x00 ; '.'
0000000000001470         db  0x08 ; '.'
0000000000001471         db  0x00 ; '.'
0000000000001472         db  0x00 ; '.'
0000000000001473         db  0x00 ; '.'
0000000000001474         db  0x00 ; '.'
0000000000001475         db  0x00 ; '.'
0000000000001476         db  0x00 ; '.'
0000000000001477         db  0x00 ; '.'
0000000000001478         db  0x7d ; '}'
0000000000001479         db  0xb7 ; '.'
000000000000147a         db  0x00 ; '.'
000000000000147b         db  0x00 ; '.'
000000000000147c         db  0x00 ; '.'
000000000000147d         db  0x00 ; '.'
000000000000147e         db  0x00 ; '.'
000000000000147f         db  0x00 ; '.'
0000000000001480         db  0xa0 ; '.'
0000000000001481         db  0x01 ; '.'
0000000000001482         db  0x21 ; '!'
0000000000001483         db  0x00 ; '.'
0000000000001484         db  0x00 ; '.'
0000000000001485         db  0x00 ; '.'
0000000000001486         db  0x00 ; '.'
0000000000001487         db  0x00 ; '.'
0000000000001488         db  0x08 ; '.'
0000000000001489         db  0x00 ; '.'
000000000000148a         db  0x00 ; '.'
000000000000148b         db  0x00 ; '.'
000000000000148c         db  0x00 ; '.'
000000000000148d         db  0x00 ; '.'
000000000000148e         db  0x00 ; '.'
000000000000148f         db  0x00 ; '.'
0000000000001490         db  0x84 ; '.'
0000000000001491         db  0xb7 ; '.'
0000000000001492         db  0x00 ; '.'
0000000000001493         db  0x00 ; '.'
0000000000001494         db  0x00 ; '.'
0000000000001495         db  0x00 ; '.'
0000000000001496         db  0x00 ; '.'
0000000000001497         db  0x00 ; '.'
0000000000001498         db  0xc0 ; '.'
0000000000001499         db  0x01 ; '.'
000000000000149a         db  0x21 ; '!'
000000000000149b         db  0x00 ; '.'
000000000000149c         db  0x00 ; '.'
000000000000149d         db  0x00 ; '.'
000000000000149e         db  0x00 ; '.'
000000000000149f         db  0x00 ; '.'
00000000000014a0         db  0x08 ; '.'
00000000000014a1         db  0x00 ; '.'
00000000000014a2         db  0x00 ; '.'
00000000000014a3         db  0x00 ; '.'
00000000000014a4         db  0x00 ; '.'
00000000000014a5         db  0x00 ; '.'
00000000000014a6         db  0x00 ; '.'
00000000000014a7         db  0x00 ; '.'
00000000000014a8         db  0x8a ; '.'
00000000000014a9         db  0xb7 ; '.'
00000000000014aa         db  0x00 ; '.'
00000000000014ab         db  0x00 ; '.'
00000000000014ac         db  0x00 ; '.'
00000000000014ad         db  0x00 ; '.'
00000000000014ae         db  0x00 ; '.'
00000000000014af         db  0x00 ; '.'
00000000000014b0         db  0xe0 ; '.'
00000000000014b1         db  0x01 ; '.'
00000000000014b2         db  0x21 ; '!'
00000000000014b3         db  0x00 ; '.'
00000000000014b4         db  0x00 ; '.'
00000000000014b5         db  0x00 ; '.'
00000000000014b6         db  0x00 ; '.'
00000000000014b7         db  0x00 ; '.'
00000000000014b8         db  0x08 ; '.'
00000000000014b9         db  0x00 ; '.'
00000000000014ba         db  0x00 ; '.'
00000000000014bb         db  0x00 ; '.'
00000000000014bc         db  0x00 ; '.'
00000000000014bd         db  0x00 ; '.'
00000000000014be         db  0x00 ; '.'
00000000000014bf         db  0x00 ; '.'
00000000000014c0         db  0x91 ; '.'
00000000000014c1         db  0xb7 ; '.'
00000000000014c2         db  0x00 ; '.'
00000000000014c3         db  0x00 ; '.'
00000000000014c4         db  0x00 ; '.'
00000000000014c5         db  0x00 ; '.'
00000000000014c6         db  0x00 ; '.'
00000000000014c7         db  0x00 ; '.'
00000000000014c8         db  0x00 ; '.'
00000000000014c9         db  0x02 ; '.'
00000000000014ca         db  0x21 ; '!'
00000000000014cb         db  0x00 ; '.'
00000000000014cc         db  0x00 ; '.'
00000000000014cd         db  0x00 ; '.'
00000000000014ce         db  0x00 ; '.'
00000000000014cf         db  0x00 ; '.'
00000000000014d0         db  0x08 ; '.'
00000000000014d1         db  0x00 ; '.'
00000000000014d2         db  0x00 ; '.'
00000000000014d3         db  0x00 ; '.'
00000000000014d4         db  0x00 ; '.'
00000000000014d5         db  0x00 ; '.'
00000000000014d6         db  0x00 ; '.'
00000000000014d7         db  0x00 ; '.'
00000000000014d8         db  0x99 ; '.'
00000000000014d9         db  0xb7 ; '.'
00000000000014da         db  0x00 ; '.'
00000000000014db         db  0x00 ; '.'
00000000000014dc         db  0x00 ; '.'
00000000000014dd         db  0x00 ; '.'
00000000000014de         db  0x00 ; '.'
00000000000014df         db  0x00 ; '.'
00000000000014e0         db  0x20 ; ' '
00000000000014e1         db  0x02 ; '.'
00000000000014e2         db  0x21 ; '!'
00000000000014e3         db  0x00 ; '.'
00000000000014e4         db  0x00 ; '.'
00000000000014e5         db  0x00 ; '.'
00000000000014e6         db  0x00 ; '.'
00000000000014e7         db  0x00 ; '.'
00000000000014e8         db  0x08 ; '.'
00000000000014e9         db  0x00 ; '.'
00000000000014ea         db  0x00 ; '.'
00000000000014eb         db  0x00 ; '.'
00000000000014ec         db  0x00 ; '.'
00000000000014ed         db  0x00 ; '.'
00000000000014ee         db  0x00 ; '.'
00000000000014ef         db  0x00 ; '.'
00000000000014f0         db  0xa0 ; '.'
00000000000014f1         db  0xb7 ; '.'
00000000000014f2         db  0x00 ; '.'
00000000000014f3         db  0x00 ; '.'
00000000000014f4         db  0x00 ; '.'
00000000000014f5         db  0x00 ; '.'
00000000000014f6         db  0x00 ; '.'
00000000000014f7         db  0x00 ; '.'
00000000000014f8         db  0x40 ; '@'
00000000000014f9         db  0x02 ; '.'
00000000000014fa         db  0x21 ; '!'
00000000000014fb         db  0x00 ; '.'
00000000000014fc         db  0x00 ; '.'
00000000000014fd         db  0x00 ; '.'
00000000000014fe         db  0x00 ; '.'
00000000000014ff         db  0x00 ; '.'
0000000000001500         db  0x08 ; '.'
0000000000001501         db  0x00 ; '.'
0000000000001502         db  0x00 ; '.'
0000000000001503         db  0x00 ; '.'
0000000000001504         db  0x00 ; '.'
0000000000001505         db  0x00 ; '.'
0000000000001506         db  0x00 ; '.'
0000000000001507         db  0x00 ; '.'
0000000000001508         db  0xa7 ; '.'
0000000000001509         db  0xb7 ; '.'
000000000000150a         db  0x00 ; '.'
000000000000150b         db  0x00 ; '.'
000000000000150c         db  0x00 ; '.'
000000000000150d         db  0x00 ; '.'
000000000000150e         db  0x00 ; '.'
000000000000150f         db  0x00 ; '.'
0000000000001510         db  0x60 ; '`'
0000000000001511         db  0x02 ; '.'
0000000000001512         db  0x21 ; '!'
0000000000001513         db  0x00 ; '.'
0000000000001514         db  0x00 ; '.'
0000000000001515         db  0x00 ; '.'
0000000000001516         db  0x00 ; '.'
0000000000001517         db  0x00 ; '.'
0000000000001518         db  0x08 ; '.'
0000000000001519         db  0x00 ; '.'
000000000000151a         db  0x00 ; '.'
000000000000151b         db  0x00 ; '.'
000000000000151c         db  0x00 ; '.'
000000000000151d         db  0x00 ; '.'
000000000000151e         db  0x00 ; '.'
000000000000151f         db  0x00 ; '.'
0000000000001520         db  0xae ; '.'
0000000000001521         db  0xb7 ; '.'
0000000000001522         db  0x00 ; '.'
0000000000001523         db  0x00 ; '.'
0000000000001524         db  0x00 ; '.'
0000000000001525         db  0x00 ; '.'
0000000000001526         db  0x00 ; '.'
0000000000001527         db  0x00 ; '.'
0000000000001528         db  0x80 ; '.'
0000000000001529         db  0x02 ; '.'
000000000000152a         db  0x21 ; '!'
000000000000152b         db  0x00 ; '.'
000000000000152c         db  0x00 ; '.'
000000000000152d         db  0x00 ; '.'
000000000000152e         db  0x00 ; '.'
000000000000152f         db  0x00 ; '.'
0000000000001530         db  0x08 ; '.'
0000000000001531         db  0x00 ; '.'
0000000000001532         db  0x00 ; '.'
0000000000001533         db  0x00 ; '.'
0000000000001534         db  0x00 ; '.'
0000000000001535         db  0x00 ; '.'
0000000000001536         db  0x00 ; '.'
0000000000001537         db  0x00 ; '.'
0000000000001538         db  0xb5 ; '.'
0000000000001539         db  0xb7 ; '.'
000000000000153a         db  0x00 ; '.'
000000000000153b         db  0x00 ; '.'
000000000000153c         db  0x00 ; '.'
000000000000153d         db  0x00 ; '.'
000000000000153e         db  0x00 ; '.'
000000000000153f         db  0x00 ; '.'
0000000000001540         db  0xa0 ; '.'
0000000000001541         db  0x02 ; '.'
0000000000001542         db  0x21 ; '!'
0000000000001543         db  0x00 ; '.'
0000000000001544         db  0x00 ; '.'
0000000000001545         db  0x00 ; '.'
0000000000001546         db  0x00 ; '.'
0000000000001547         db  0x00 ; '.'
0000000000001548         db  0x08 ; '.'
0000000000001549         db  0x00 ; '.'
000000000000154a         db  0x00 ; '.'
000000000000154b         db  0x00 ; '.'
000000000000154c         db  0x00 ; '.'
000000000000154d         db  0x00 ; '.'
000000000000154e         db  0x00 ; '.'
000000000000154f         db  0x00 ; '.'
0000000000001550         db  0xbb ; '.'
0000000000001551         db  0xb7 ; '.'
0000000000001552         db  0x00 ; '.'
0000000000001553         db  0x00 ; '.'
0000000000001554         db  0x00 ; '.'
0000000000001555         db  0x00 ; '.'
0000000000001556         db  0x00 ; '.'
0000000000001557         db  0x00 ; '.'
0000000000001558         db  0xc0 ; '.'
0000000000001559         db  0x02 ; '.'
000000000000155a         db  0x21 ; '!'
000000000000155b         db  0x00 ; '.'
000000000000155c         db  0x00 ; '.'
000000000000155d         db  0x00 ; '.'
000000000000155e         db  0x00 ; '.'
000000000000155f         db  0x00 ; '.'
0000000000001560         db  0x08 ; '.'
0000000000001561         db  0x00 ; '.'
0000000000001562         db  0x00 ; '.'
0000000000001563         db  0x00 ; '.'
0000000000001564         db  0x00 ; '.'
0000000000001565         db  0x00 ; '.'
0000000000001566         db  0x00 ; '.'
0000000000001567         db  0x00 ; '.'
0000000000001568         db  0xc2 ; '.'
0000000000001569         db  0xb7 ; '.'
000000000000156a         db  0x00 ; '.'
000000000000156b         db  0x00 ; '.'
000000000000156c         db  0x00 ; '.'
000000000000156d         db  0x00 ; '.'
000000000000156e         db  0x00 ; '.'
000000000000156f         db  0x00 ; '.'
0000000000001570         db  0xe0 ; '.'
0000000000001571         db  0x02 ; '.'
0000000000001572         db  0x21 ; '!'
0000000000001573         db  0x00 ; '.'
0000000000001574         db  0x00 ; '.'
0000000000001575         db  0x00 ; '.'
0000000000001576         db  0x00 ; '.'
0000000000001577         db  0x00 ; '.'
0000000000001578         db  0x08 ; '.'
0000000000001579         db  0x00 ; '.'
000000000000157a         db  0x00 ; '.'
000000000000157b         db  0x00 ; '.'
000000000000157c         db  0x00 ; '.'
000000000000157d         db  0x00 ; '.'
000000000000157e         db  0x00 ; '.'
000000000000157f         db  0x00 ; '.'                                         ; DATA XREF=sub_4bd0+2066, sub_4bd0+3341
0000000000001580         db  0xc8 ; '.'
0000000000001581         db  0xb7 ; '.'
0000000000001582         db  0x00 ; '.'
0000000000001583         db  0x00 ; '.'
0000000000001584         db  0x00 ; '.'
0000000000001585         db  0x00 ; '.'
0000000000001586         db  0x00 ; '.'
0000000000001587         db  0x00 ; '.'
0000000000001588         db  0x00 ; '.'
0000000000001589         db  0x03 ; '.'
000000000000158a         db  0x21 ; '!'
000000000000158b         db  0x00 ; '.'
000000000000158c         db  0x00 ; '.'
000000000000158d         db  0x00 ; '.'
000000000000158e         db  0x00 ; '.'
000000000000158f         db  0x00 ; '.'
0000000000001590         db  0x08 ; '.'
0000000000001591         db  0x00 ; '.'
0000000000001592         db  0x00 ; '.'
0000000000001593         db  0x00 ; '.'
0000000000001594         db  0x00 ; '.'
0000000000001595         db  0x00 ; '.'
0000000000001596         db  0x00 ; '.'
0000000000001597         db  0x00 ; '.'
0000000000001598         db  0xce ; '.'
0000000000001599         db  0xb7 ; '.'
000000000000159a         db  0x00 ; '.'
000000000000159b         db  0x00 ; '.'
000000000000159c         db  0x00 ; '.'
000000000000159d         db  0x00 ; '.'
000000000000159e         db  0x00 ; '.'
000000000000159f         db  0x00 ; '.'
00000000000015a0         db  0x20 ; ' '
00000000000015a1         db  0x03 ; '.'
00000000000015a2         db  0x21 ; '!'
00000000000015a3         db  0x00 ; '.'
00000000000015a4         db  0x00 ; '.'
00000000000015a5         db  0x00 ; '.'
00000000000015a6         db  0x00 ; '.'
00000000000015a7         db  0x00 ; '.'
00000000000015a8         db  0x08 ; '.'
00000000000015a9         db  0x00 ; '.'
00000000000015aa         db  0x00 ; '.'
00000000000015ab         db  0x00 ; '.'
00000000000015ac         db  0x00 ; '.'
00000000000015ad         db  0x00 ; '.'
00000000000015ae         db  0x00 ; '.'
00000000000015af         db  0x00 ; '.'
00000000000015b0         db  0xd4 ; '.'
00000000000015b1         db  0xb7 ; '.'
00000000000015b2         db  0x00 ; '.'
00000000000015b3         db  0x00 ; '.'
00000000000015b4         db  0x00 ; '.'
00000000000015b5         db  0x00 ; '.'
00000000000015b6         db  0x00 ; '.'
00000000000015b7         db  0x00 ; '.'
00000000000015b8         db  0x40 ; '@'
00000000000015b9         db  0x03 ; '.'
00000000000015ba         db  0x21 ; '!'
00000000000015bb         db  0x00 ; '.'
00000000000015bc         db  0x00 ; '.'
00000000000015bd         db  0x00 ; '.'
00000000000015be         db  0x00 ; '.'
00000000000015bf         db  0x00 ; '.'
00000000000015c0         db  0x08 ; '.'
00000000000015c1         db  0x00 ; '.'
00000000000015c2         db  0x00 ; '.'
00000000000015c3         db  0x00 ; '.'
00000000000015c4         db  0x00 ; '.'
00000000000015c5         db  0x00 ; '.'
00000000000015c6         db  0x00 ; '.'
00000000000015c7         db  0x00 ; '.'
00000000000015c8         db  0xd9 ; '.'
00000000000015c9         db  0xb7 ; '.'
00000000000015ca         db  0x00 ; '.'
00000000000015cb         db  0x00 ; '.'
00000000000015cc         db  0x00 ; '.'
00000000000015cd         db  0x00 ; '.'
00000000000015ce         db  0x00 ; '.'
00000000000015cf         db  0x00 ; '.'
00000000000015d0         db  0x60 ; '`'
00000000000015d1         db  0x03 ; '.'
00000000000015d2         db  0x21 ; '!'
00000000000015d3         db  0x00 ; '.'
00000000000015d4         db  0x00 ; '.'
00000000000015d5         db  0x00 ; '.'
00000000000015d6         db  0x00 ; '.'
00000000000015d7         db  0x00 ; '.'
00000000000015d8         db  0x08 ; '.'
00000000000015d9         db  0x00 ; '.'
00000000000015da         db  0x00 ; '.'
00000000000015db         db  0x00 ; '.'
00000000000015dc         db  0x00 ; '.'
00000000000015dd         db  0x00 ; '.'
00000000000015de         db  0x00 ; '.'
00000000000015df         db  0x00 ; '.'
00000000000015e0         db  0xdf ; '.'
00000000000015e1         db  0xb7 ; '.'
00000000000015e2         db  0x00 ; '.'
00000000000015e3         db  0x00 ; '.'
00000000000015e4         db  0x00 ; '.'
00000000000015e5         db  0x00 ; '.'
00000000000015e6         db  0x00 ; '.'
00000000000015e7         db  0x00 ; '.'
00000000000015e8         db  0x80 ; '.'
00000000000015e9         db  0x03 ; '.'
00000000000015ea         db  0x21 ; '!'
00000000000015eb         db  0x00 ; '.'
00000000000015ec         db  0x00 ; '.'
00000000000015ed         db  0x00 ; '.'
00000000000015ee         db  0x00 ; '.'
00000000000015ef         db  0x00 ; '.'
00000000000015f0         db  0x08 ; '.'
00000000000015f1         db  0x00 ; '.'
00000000000015f2         db  0x00 ; '.'
00000000000015f3         db  0x00 ; '.'
00000000000015f4         db  0x00 ; '.'
00000000000015f5         db  0x00 ; '.'
00000000000015f6         db  0x00 ; '.'
00000000000015f7         db  0x00 ; '.'
00000000000015f8         db  0xe6 ; '.'
00000000000015f9         db  0xb7 ; '.'
00000000000015fa         db  0x00 ; '.'
00000000000015fb         db  0x00 ; '.'
00000000000015fc         db  0x00 ; '.'
00000000000015fd         db  0x00 ; '.'
00000000000015fe         db  0x00 ; '.'
00000000000015ff         db  0x00 ; '.'
0000000000001600         db  0xa0 ; '.'
0000000000001601         db  0x03 ; '.'
0000000000001602         db  0x21 ; '!'
0000000000001603         db  0x00 ; '.'
0000000000001604         db  0x00 ; '.'
0000000000001605         db  0x00 ; '.'
0000000000001606         db  0x00 ; '.'
0000000000001607         db  0x00 ; '.'
0000000000001608         db  0x08 ; '.'
0000000000001609         db  0x00 ; '.'
000000000000160a         db  0x00 ; '.'
000000000000160b         db  0x00 ; '.'
000000000000160c         db  0x00 ; '.'
000000000000160d         db  0x00 ; '.'
000000000000160e         db  0x00 ; '.'
000000000000160f         db  0x00 ; '.'
0000000000001610         db  0xe6 ; '.'
0000000000001611         db  0xb3 ; '.'
0000000000001612         db  0x00 ; '.'
0000000000001613         db  0x00 ; '.'
0000000000001614         db  0x00 ; '.'
0000000000001615         db  0x00 ; '.'
0000000000001616         db  0x00 ; '.'
0000000000001617         db  0x00 ; '.'
0000000000001618         db  0xc0 ; '.'
0000000000001619         db  0x03 ; '.'
000000000000161a         db  0x21 ; '!'
000000000000161b         db  0x00 ; '.'
000000000000161c         db  0x00 ; '.'
000000000000161d         db  0x00 ; '.'
000000000000161e         db  0x00 ; '.'
000000000000161f         db  0x00 ; '.'
0000000000001620         db  0x08 ; '.'
0000000000001621         db  0x00 ; '.'
0000000000001622         db  0x00 ; '.'
0000000000001623         db  0x00 ; '.'
0000000000001624         db  0x00 ; '.'
0000000000001625         db  0x00 ; '.'
0000000000001626         db  0x00 ; '.'
0000000000001627         db  0x00 ; '.'
0000000000001628         db  0xec ; '.'
0000000000001629         db  0xb7 ; '.'
000000000000162a         db  0x00 ; '.'
000000000000162b         db  0x00 ; '.'
000000000000162c         db  0x00 ; '.'
000000000000162d         db  0x00 ; '.'
000000000000162e         db  0x00 ; '.'
000000000000162f         db  0x00 ; '.'
0000000000001630         db  0xe0 ; '.'
0000000000001631         db  0x03 ; '.'
0000000000001632         db  0x21 ; '!'
0000000000001633         db  0x00 ; '.'
0000000000001634         db  0x00 ; '.'
0000000000001635         db  0x00 ; '.'
0000000000001636         db  0x00 ; '.'
0000000000001637         db  0x00 ; '.'
0000000000001638         db  0x08 ; '.'
0000000000001639         db  0x00 ; '.'
000000000000163a         db  0x00 ; '.'
000000000000163b         db  0x00 ; '.'
000000000000163c         db  0x00 ; '.'
000000000000163d         db  0x00 ; '.'
000000000000163e         db  0x00 ; '.'
000000000000163f         db  0x00 ; '.'
0000000000001640         db  0xf4 ; '.'
0000000000001641         db  0xb7 ; '.'
0000000000001642         db  0x00 ; '.'
0000000000001643         db  0x00 ; '.'
0000000000001644         db  0x00 ; '.'
0000000000001645         db  0x00 ; '.'
0000000000001646         db  0x00 ; '.'
0000000000001647         db  0x00 ; '.'
0000000000001648         db  0x00 ; '.'
0000000000001649         db  0x04 ; '.'
000000000000164a         db  0x21 ; '!'
000000000000164b         db  0x00 ; '.'
000000000000164c         db  0x00 ; '.'
000000000000164d         db  0x00 ; '.'
000000000000164e         db  0x00 ; '.'
000000000000164f         db  0x00 ; '.'
0000000000001650         db  0x08 ; '.'
0000000000001651         db  0x00 ; '.'
0000000000001652         db  0x00 ; '.'
0000000000001653         db  0x00 ; '.'
0000000000001654         db  0x00 ; '.'
0000000000001655         db  0x00 ; '.'
0000000000001656         db  0x00 ; '.'
0000000000001657         db  0x00 ; '.'
0000000000001658         db  0xfa ; '.'
0000000000001659         db  0xb7 ; '.'
000000000000165a         db  0x00 ; '.'
000000000000165b         db  0x00 ; '.'
000000000000165c         db  0x00 ; '.'
000000000000165d         db  0x00 ; '.'
000000000000165e         db  0x00 ; '.'
000000000000165f         db  0x00 ; '.'
0000000000001660         db  0x20 ; ' '
0000000000001661         db  0x04 ; '.'
0000000000001662         db  0x21 ; '!'
0000000000001663         db  0x00 ; '.'
0000000000001664         db  0x00 ; '.'
0000000000001665         db  0x00 ; '.'
0000000000001666         db  0x00 ; '.'
0000000000001667         db  0x00 ; '.'
0000000000001668         db  0x08 ; '.'
0000000000001669         db  0x00 ; '.'
000000000000166a         db  0x00 ; '.'
000000000000166b         db  0x00 ; '.'
000000000000166c         db  0x00 ; '.'
000000000000166d         db  0x00 ; '.'
000000000000166e         db  0x00 ; '.'
000000000000166f         db  0x00 ; '.'
0000000000001670         db  0x00 ; '.'
0000000000001671         db  0xb8 ; '.'
0000000000001672         db  0x00 ; '.'
0000000000001673         db  0x00 ; '.'
0000000000001674         db  0x00 ; '.'
0000000000001675         db  0x00 ; '.'
0000000000001676         db  0x00 ; '.'
0000000000001677         db  0x00 ; '.'
0000000000001678         db  0x40 ; '@'
0000000000001679         db  0x04 ; '.'
000000000000167a         db  0x21 ; '!'
000000000000167b         db  0x00 ; '.'
000000000000167c         db  0x00 ; '.'
000000000000167d         db  0x00 ; '.'
000000000000167e         db  0x00 ; '.'
000000000000167f         db  0x00 ; '.'
0000000000001680         db  0x08 ; '.'
0000000000001681         db  0x00 ; '.'
0000000000001682         db  0x00 ; '.'
0000000000001683         db  0x00 ; '.'
0000000000001684         db  0x00 ; '.'
0000000000001685         db  0x00 ; '.'
0000000000001686         db  0x00 ; '.'
0000000000001687         db  0x00 ; '.'
0000000000001688         db  0x06 ; '.'
0000000000001689         db  0xb8 ; '.'
000000000000168a         db  0x00 ; '.'
000000000000168b         db  0x00 ; '.'
000000000000168c         db  0x00 ; '.'
000000000000168d         db  0x00 ; '.'
000000000000168e         db  0x00 ; '.'
000000000000168f         db  0x00 ; '.'
0000000000001690         db  0x60 ; '`'
0000000000001691         db  0x04 ; '.'
0000000000001692         db  0x21 ; '!'
0000000000001693         db  0x00 ; '.'
0000000000001694         db  0x00 ; '.'
0000000000001695         db  0x00 ; '.'
0000000000001696         db  0x00 ; '.'
0000000000001697         db  0x00 ; '.'
0000000000001698         db  0x08 ; '.'
0000000000001699         db  0x00 ; '.'
000000000000169a         db  0x00 ; '.'
000000000000169b         db  0x00 ; '.'
000000000000169c         db  0x00 ; '.'
000000000000169d         db  0x00 ; '.'
000000000000169e         db  0x00 ; '.'
000000000000169f         db  0x00 ; '.'
00000000000016a0         db  0xf4 ; '.'
00000000000016a1         db  0xb3 ; '.'
00000000000016a2         db  0x00 ; '.'
00000000000016a3         db  0x00 ; '.'
00000000000016a4         db  0x00 ; '.'
00000000000016a5         db  0x00 ; '.'
00000000000016a6         db  0x00 ; '.'
00000000000016a7         db  0x00 ; '.'
00000000000016a8         db  0x80 ; '.'
00000000000016a9         db  0x04 ; '.'
00000000000016aa         db  0x21 ; '!'
00000000000016ab         db  0x00 ; '.'
00000000000016ac         db  0x00 ; '.'
00000000000016ad         db  0x00 ; '.'
00000000000016ae         db  0x00 ; '.'
00000000000016af         db  0x00 ; '.'
00000000000016b0         db  0x08 ; '.'
00000000000016b1         db  0x00 ; '.'
00000000000016b2         db  0x00 ; '.'
00000000000016b3         db  0x00 ; '.'
00000000000016b4         db  0x00 ; '.'
00000000000016b5         db  0x00 ; '.'
00000000000016b6         db  0x00 ; '.'
00000000000016b7         db  0x00 ; '.'
00000000000016b8         db  0x0c ; '.'
00000000000016b9         db  0xb8 ; '.'
00000000000016ba         db  0x00 ; '.'
00000000000016bb         db  0x00 ; '.'
00000000000016bc         db  0x00 ; '.'
00000000000016bd         db  0x00 ; '.'
00000000000016be         db  0x00 ; '.'
00000000000016bf         db  0x00 ; '.'
00000000000016c0         db  0xa0 ; '.'
00000000000016c1         db  0x04 ; '.'
00000000000016c2         db  0x21 ; '!'
00000000000016c3         db  0x00 ; '.'
00000000000016c4         db  0x00 ; '.'
00000000000016c5         db  0x00 ; '.'
00000000000016c6         db  0x00 ; '.'
00000000000016c7         db  0x00 ; '.'
00000000000016c8         db  0x08 ; '.'
00000000000016c9         db  0x00 ; '.'
00000000000016ca         db  0x00 ; '.'
00000000000016cb         db  0x00 ; '.'
00000000000016cc         db  0x00 ; '.'
00000000000016cd         db  0x00 ; '.'
00000000000016ce         db  0x00 ; '.'
00000000000016cf         db  0x00 ; '.'
00000000000016d0         db  0x12 ; '.'
00000000000016d1         db  0xb8 ; '.'
00000000000016d2         db  0x00 ; '.'
00000000000016d3         db  0x00 ; '.'
00000000000016d4         db  0x00 ; '.'
00000000000016d5         db  0x00 ; '.'
00000000000016d6         db  0x00 ; '.'
00000000000016d7         db  0x00 ; '.'
00000000000016d8         db  0xc0 ; '.'
00000000000016d9         db  0x04 ; '.'
00000000000016da         db  0x21 ; '!'
00000000000016db         db  0x00 ; '.'
00000000000016dc         db  0x00 ; '.'
00000000000016dd         db  0x00 ; '.'
00000000000016de         db  0x00 ; '.'
00000000000016df         db  0x00 ; '.'
00000000000016e0         db  0x08 ; '.'
00000000000016e1         db  0x00 ; '.'
00000000000016e2         db  0x00 ; '.'
00000000000016e3         db  0x00 ; '.'
00000000000016e4         db  0x00 ; '.'
00000000000016e5         db  0x00 ; '.'
00000000000016e6         db  0x00 ; '.'
00000000000016e7         db  0x00 ; '.'
00000000000016e8         db  0x19 ; '.'
00000000000016e9         db  0xb8 ; '.'
00000000000016ea         db  0x00 ; '.'
00000000000016eb         db  0x00 ; '.'
00000000000016ec         db  0x00 ; '.'
00000000000016ed         db  0x00 ; '.'
00000000000016ee         db  0x00 ; '.'
00000000000016ef         db  0x00 ; '.'
00000000000016f0         db  0xe0 ; '.'
00000000000016f1         db  0x04 ; '.'
00000000000016f2         db  0x21 ; '!'
00000000000016f3         db  0x00 ; '.'
00000000000016f4         db  0x00 ; '.'
00000000000016f5         db  0x00 ; '.'
00000000000016f6         db  0x00 ; '.'
00000000000016f7         db  0x00 ; '.'
00000000000016f8         db  0x08 ; '.'
00000000000016f9         db  0x00 ; '.'
00000000000016fa         db  0x00 ; '.'
00000000000016fb         db  0x00 ; '.'
00000000000016fc         db  0x00 ; '.'
00000000000016fd         db  0x00 ; '.'
00000000000016fe         db  0x00 ; '.'
00000000000016ff         db  0x00 ; '.'
0000000000001700         db  0x1f ; '.'
0000000000001701         db  0xb8 ; '.'
0000000000001702         db  0x00 ; '.'
0000000000001703         db  0x00 ; '.'
0000000000001704         db  0x00 ; '.'
0000000000001705         db  0x00 ; '.'
0000000000001706         db  0x00 ; '.'
0000000000001707         db  0x00 ; '.'
0000000000001708         db  0x00 ; '.'
0000000000001709         db  0x05 ; '.'
000000000000170a         db  0x21 ; '!'
000000000000170b         db  0x00 ; '.'
000000000000170c         db  0x00 ; '.'
000000000000170d         db  0x00 ; '.'
000000000000170e         db  0x00 ; '.'
000000000000170f         db  0x00 ; '.'
0000000000001710         db  0x08 ; '.'
0000000000001711         db  0x00 ; '.'
0000000000001712         db  0x00 ; '.'
0000000000001713         db  0x00 ; '.'
0000000000001714         db  0x00 ; '.'
0000000000001715         db  0x00 ; '.'
0000000000001716         db  0x00 ; '.'
0000000000001717         db  0x00 ; '.'
0000000000001718         db  0x25 ; '%'
0000000000001719         db  0xb8 ; '.'
000000000000171a         db  0x00 ; '.'
000000000000171b         db  0x00 ; '.'
000000000000171c         db  0x00 ; '.'
000000000000171d         db  0x00 ; '.'
000000000000171e         db  0x00 ; '.'
000000000000171f         db  0x00 ; '.'
0000000000001720         db  0x20 ; ' '
0000000000001721         db  0x05 ; '.'
0000000000001722         db  0x21 ; '!'
0000000000001723         db  0x00 ; '.'
0000000000001724         db  0x00 ; '.'
0000000000001725         db  0x00 ; '.'
0000000000001726         db  0x00 ; '.'
0000000000001727         db  0x00 ; '.'
0000000000001728         db  0x08 ; '.'
0000000000001729         db  0x00 ; '.'
000000000000172a         db  0x00 ; '.'
000000000000172b         db  0x00 ; '.'
000000000000172c         db  0x00 ; '.'
000000000000172d         db  0x00 ; '.'
000000000000172e         db  0x00 ; '.'
000000000000172f         db  0x00 ; '.'
0000000000001730         db  0x29 ; ')'
0000000000001731         db  0xb8 ; '.'
0000000000001732         db  0x00 ; '.'
0000000000001733         db  0x00 ; '.'
0000000000001734         db  0x00 ; '.'
0000000000001735         db  0x00 ; '.'
0000000000001736         db  0x00 ; '.'
0000000000001737         db  0x00 ; '.'
0000000000001738         db  0x40 ; '@'
0000000000001739         db  0x05 ; '.'
000000000000173a         db  0x21 ; '!'
000000000000173b         db  0x00 ; '.'
000000000000173c         db  0x00 ; '.'
000000000000173d         db  0x00 ; '.'
000000000000173e         db  0x00 ; '.'
000000000000173f         db  0x00 ; '.'
0000000000001740         db  0x08 ; '.'
0000000000001741         db  0x00 ; '.'
0000000000001742         db  0x00 ; '.'
0000000000001743         db  0x00 ; '.'
0000000000001744         db  0x00 ; '.'
0000000000001745         db  0x00 ; '.'
0000000000001746         db  0x00 ; '.'
0000000000001747         db  0x00 ; '.'
0000000000001748         db  0x2d ; '-'
0000000000001749         db  0xb8 ; '.'
000000000000174a         db  0x00 ; '.'
000000000000174b         db  0x00 ; '.'
000000000000174c         db  0x00 ; '.'
000000000000174d         db  0x00 ; '.'
000000000000174e         db  0x00 ; '.'
000000000000174f         db  0x00 ; '.'
0000000000001750         db  0x60 ; '`'
0000000000001751         db  0x05 ; '.'
0000000000001752         db  0x21 ; '!'
0000000000001753         db  0x00 ; '.'
0000000000001754         db  0x00 ; '.'
0000000000001755         db  0x00 ; '.'
0000000000001756         db  0x00 ; '.'
0000000000001757         db  0x00 ; '.'
0000000000001758         db  0x08 ; '.'
0000000000001759         db  0x00 ; '.'
000000000000175a         db  0x00 ; '.'
000000000000175b         db  0x00 ; '.'
000000000000175c         db  0x00 ; '.'
000000000000175d         db  0x00 ; '.'
000000000000175e         db  0x00 ; '.'
000000000000175f         db  0x00 ; '.'
0000000000001760         db  0x31 ; '1'
0000000000001761         db  0xb8 ; '.'
0000000000001762         db  0x00 ; '.'
0000000000001763         db  0x00 ; '.'
0000000000001764         db  0x00 ; '.'
0000000000001765         db  0x00 ; '.'
0000000000001766         db  0x00 ; '.'
0000000000001767         db  0x00 ; '.'
0000000000001768         db  0x80 ; '.'
0000000000001769         db  0x05 ; '.'
000000000000176a         db  0x21 ; '!'
000000000000176b         db  0x00 ; '.'
000000000000176c         db  0x00 ; '.'
000000000000176d         db  0x00 ; '.'
000000000000176e         db  0x00 ; '.'
000000000000176f         db  0x00 ; '.'
0000000000001770         db  0x08 ; '.'
0000000000001771         db  0x00 ; '.'
0000000000001772         db  0x00 ; '.'
0000000000001773         db  0x00 ; '.'
0000000000001774         db  0x00 ; '.'
0000000000001775         db  0x00 ; '.'
0000000000001776         db  0x00 ; '.'
0000000000001777         db  0x00 ; '.'
0000000000001778         db  0x35 ; '5'
0000000000001779         db  0xb8 ; '.'
000000000000177a         db  0x00 ; '.'
000000000000177b         db  0x00 ; '.'
000000000000177c         db  0x00 ; '.'
000000000000177d         db  0x00 ; '.'
000000000000177e         db  0x00 ; '.'
000000000000177f         db  0x00 ; '.'
0000000000001780         db  0xa0 ; '.'
0000000000001781         db  0x05 ; '.'
0000000000001782         db  0x21 ; '!'
0000000000001783         db  0x00 ; '.'
0000000000001784         db  0x00 ; '.'
0000000000001785         db  0x00 ; '.'
0000000000001786         db  0x00 ; '.'
0000000000001787         db  0x00 ; '.'
0000000000001788         db  0x08 ; '.'
0000000000001789         db  0x00 ; '.'
000000000000178a         db  0x00 ; '.'
000000000000178b         db  0x00 ; '.'
000000000000178c         db  0x00 ; '.'
000000000000178d         db  0x00 ; '.'
000000000000178e         db  0x00 ; '.'
000000000000178f         db  0x00 ; '.'
0000000000001790         db  0x39 ; '9'
0000000000001791         db  0xb8 ; '.'
0000000000001792         db  0x00 ; '.'
0000000000001793         db  0x00 ; '.'
0000000000001794         db  0x00 ; '.'
0000000000001795         db  0x00 ; '.'
0000000000001796         db  0x00 ; '.'
0000000000001797         db  0x00 ; '.'
0000000000001798         db  0xc0 ; '.'
0000000000001799         db  0x05 ; '.'
000000000000179a         db  0x21 ; '!'
000000000000179b         db  0x00 ; '.'
000000000000179c         db  0x00 ; '.'
000000000000179d         db  0x00 ; '.'
000000000000179e         db  0x00 ; '.'
000000000000179f         db  0x00 ; '.'
00000000000017a0         db  0x08 ; '.'
00000000000017a1         db  0x00 ; '.'
00000000000017a2         db  0x00 ; '.'
00000000000017a3         db  0x00 ; '.'
00000000000017a4         db  0x00 ; '.'
00000000000017a5         db  0x00 ; '.'
00000000000017a6         db  0x00 ; '.'
00000000000017a7         db  0x00 ; '.'
00000000000017a8         db  0x3d ; '='
00000000000017a9         db  0xb8 ; '.'
00000000000017aa         db  0x00 ; '.'
00000000000017ab         db  0x00 ; '.'
00000000000017ac         db  0x00 ; '.'
00000000000017ad         db  0x00 ; '.'
00000000000017ae         db  0x00 ; '.'
00000000000017af         db  0x00 ; '.'
00000000000017b0         db  0xe0 ; '.'
00000000000017b1         db  0x05 ; '.'
00000000000017b2         db  0x21 ; '!'
00000000000017b3         db  0x00 ; '.'
00000000000017b4         db  0x00 ; '.'
00000000000017b5         db  0x00 ; '.'
00000000000017b6         db  0x00 ; '.'
00000000000017b7         db  0x00 ; '.'
00000000000017b8         db  0x08 ; '.'
00000000000017b9         db  0x00 ; '.'
00000000000017ba         db  0x00 ; '.'
00000000000017bb         db  0x00 ; '.'
00000000000017bc         db  0x00 ; '.'
00000000000017bd         db  0x00 ; '.'
00000000000017be         db  0x00 ; '.'
00000000000017bf         db  0x00 ; '.'
00000000000017c0         db  0x42 ; 'B'
00000000000017c1         db  0xb8 ; '.'
00000000000017c2         db  0x00 ; '.'
00000000000017c3         db  0x00 ; '.'
00000000000017c4         db  0x00 ; '.'
00000000000017c5         db  0x00 ; '.'
00000000000017c6         db  0x00 ; '.'
00000000000017c7         db  0x00 ; '.'
00000000000017c8         db  0x00 ; '.'
00000000000017c9         db  0x06 ; '.'
00000000000017ca         db  0x21 ; '!'
00000000000017cb         db  0x00 ; '.'
00000000000017cc         db  0x00 ; '.'
00000000000017cd         db  0x00 ; '.'
00000000000017ce         db  0x00 ; '.'
00000000000017cf         db  0x00 ; '.'
00000000000017d0         db  0x08 ; '.'
00000000000017d1         db  0x00 ; '.'
00000000000017d2         db  0x00 ; '.'
00000000000017d3         db  0x00 ; '.'
00000000000017d4         db  0x00 ; '.'
00000000000017d5         db  0x00 ; '.'
00000000000017d6         db  0x00 ; '.'
00000000000017d7         db  0x00 ; '.'
00000000000017d8         db  0x47 ; 'G'
00000000000017d9         db  0xb8 ; '.'
00000000000017da         db  0x00 ; '.'
00000000000017db         db  0x00 ; '.'
00000000000017dc         db  0x00 ; '.'
00000000000017dd         db  0x00 ; '.'
00000000000017de         db  0x00 ; '.'
00000000000017df         db  0x00 ; '.'
00000000000017e0         db  0x20 ; ' '
00000000000017e1         db  0x06 ; '.'
00000000000017e2         db  0x21 ; '!'
00000000000017e3         db  0x00 ; '.'
00000000000017e4         db  0x00 ; '.'
00000000000017e5         db  0x00 ; '.'
00000000000017e6         db  0x00 ; '.'
00000000000017e7         db  0x00 ; '.'
00000000000017e8         db  0x08 ; '.'
00000000000017e9         db  0x00 ; '.'
00000000000017ea         db  0x00 ; '.'
00000000000017eb         db  0x00 ; '.'
00000000000017ec         db  0x00 ; '.'
00000000000017ed         db  0x00 ; '.'
00000000000017ee         db  0x00 ; '.'
00000000000017ef         db  0x00 ; '.'
00000000000017f0         db  0x4c ; 'L'
00000000000017f1         db  0xb8 ; '.'
00000000000017f2         db  0x00 ; '.'
00000000000017f3         db  0x00 ; '.'
00000000000017f4         db  0x00 ; '.'
00000000000017f5         db  0x00 ; '.'
00000000000017f6         db  0x00 ; '.'
00000000000017f7         db  0x00 ; '.'
00000000000017f8         db  0x40 ; '@'
00000000000017f9         db  0x06 ; '.'
00000000000017fa         db  0x21 ; '!'
00000000000017fb         db  0x00 ; '.'
00000000000017fc         db  0x00 ; '.'
00000000000017fd         db  0x00 ; '.'
00000000000017fe         db  0x00 ; '.'
00000000000017ff         db  0x00 ; '.'
0000000000001800         db  0x08 ; '.'
0000000000001801         db  0x00 ; '.'
0000000000001802         db  0x00 ; '.'
0000000000001803         db  0x00 ; '.'
0000000000001804         db  0x00 ; '.'
0000000000001805         db  0x00 ; '.'
0000000000001806         db  0x00 ; '.'
0000000000001807         db  0x00 ; '.'
0000000000001808         db  0x51 ; 'Q'
0000000000001809         db  0xb8 ; '.'
000000000000180a         db  0x00 ; '.'
000000000000180b         db  0x00 ; '.'
000000000000180c         db  0x00 ; '.'
000000000000180d         db  0x00 ; '.'
000000000000180e         db  0x00 ; '.'
000000000000180f         db  0x00 ; '.'
0000000000001810         db  0x60 ; '`'
0000000000001811         db  0x06 ; '.'
0000000000001812         db  0x21 ; '!'
0000000000001813         db  0x00 ; '.'
0000000000001814         db  0x00 ; '.'
0000000000001815         db  0x00 ; '.'
0000000000001816         db  0x00 ; '.'
0000000000001817         db  0x00 ; '.'
0000000000001818         db  0x08 ; '.'
0000000000001819         db  0x00 ; '.'
000000000000181a         db  0x00 ; '.'
000000000000181b         db  0x00 ; '.'
000000000000181c         db  0x00 ; '.'
000000000000181d         db  0x00 ; '.'
000000000000181e         db  0x00 ; '.'
000000000000181f         db  0x00 ; '.'
0000000000001820         db  0x55 ; 'U'
0000000000001821         db  0xb8 ; '.'
0000000000001822         db  0x00 ; '.'
0000000000001823         db  0x00 ; '.'
0000000000001824         db  0x00 ; '.'
0000000000001825         db  0x00 ; '.'
0000000000001826         db  0x00 ; '.'
0000000000001827         db  0x00 ; '.'
0000000000001828         db  0x80 ; '.'
0000000000001829         db  0x06 ; '.'
000000000000182a         db  0x21 ; '!'
000000000000182b         db  0x00 ; '.'
000000000000182c         db  0x00 ; '.'
000000000000182d         db  0x00 ; '.'
000000000000182e         db  0x00 ; '.'
000000000000182f         db  0x00 ; '.'
0000000000001830         db  0x08 ; '.'
0000000000001831         db  0x00 ; '.'
0000000000001832         db  0x00 ; '.'
0000000000001833         db  0x00 ; '.'
0000000000001834         db  0x00 ; '.'
0000000000001835         db  0x00 ; '.'
0000000000001836         db  0x00 ; '.'
0000000000001837         db  0x00 ; '.'
0000000000001838         db  0x59 ; 'Y'
0000000000001839         db  0xb8 ; '.'
000000000000183a         db  0x00 ; '.'
000000000000183b         db  0x00 ; '.'
000000000000183c         db  0x00 ; '.'
000000000000183d         db  0x00 ; '.'
000000000000183e         db  0x00 ; '.'
000000000000183f         db  0x00 ; '.'
0000000000001840         db  0xa0 ; '.'
0000000000001841         db  0x06 ; '.'
0000000000001842         db  0x21 ; '!'
0000000000001843         db  0x00 ; '.'
0000000000001844         db  0x00 ; '.'
0000000000001845         db  0x00 ; '.'
0000000000001846         db  0x00 ; '.'
0000000000001847         db  0x00 ; '.'
0000000000001848         db  0x08 ; '.'
0000000000001849         db  0x00 ; '.'
000000000000184a         db  0x00 ; '.'
000000000000184b         db  0x00 ; '.'
000000000000184c         db  0x00 ; '.'
000000000000184d         db  0x00 ; '.'
000000000000184e         db  0x00 ; '.'
000000000000184f         db  0x00 ; '.'
0000000000001850         db  0x5d ; ']'
0000000000001851         db  0xb8 ; '.'
0000000000001852         db  0x00 ; '.'
0000000000001853         db  0x00 ; '.'
0000000000001854         db  0x00 ; '.'
0000000000001855         db  0x00 ; '.'
0000000000001856         db  0x00 ; '.'
0000000000001857         db  0x00 ; '.'
0000000000001858         db  0xc0 ; '.'
0000000000001859         db  0x06 ; '.'
000000000000185a         db  0x21 ; '!'
000000000000185b         db  0x00 ; '.'
000000000000185c         db  0x00 ; '.'
000000000000185d         db  0x00 ; '.'
000000000000185e         db  0x00 ; '.'
000000000000185f         db  0x00 ; '.'
0000000000001860         db  0x08 ; '.'
0000000000001861         db  0x00 ; '.'
0000000000001862         db  0x00 ; '.'
0000000000001863         db  0x00 ; '.'
0000000000001864         db  0x00 ; '.'
0000000000001865         db  0x00 ; '.'
0000000000001866         db  0x00 ; '.'
0000000000001867         db  0x00 ; '.'
0000000000001868         db  0x61 ; 'a'
0000000000001869         db  0xb8 ; '.'
000000000000186a         db  0x00 ; '.'
000000000000186b         db  0x00 ; '.'
000000000000186c         db  0x00 ; '.'
000000000000186d         db  0x00 ; '.'
000000000000186e         db  0x00 ; '.'
000000000000186f         db  0x00 ; '.'
0000000000001870         db  0xe0 ; '.'
0000000000001871         db  0x06 ; '.'
0000000000001872         db  0x21 ; '!'
0000000000001873         db  0x00 ; '.'
0000000000001874         db  0x00 ; '.'
0000000000001875         db  0x00 ; '.'
0000000000001876         db  0x00 ; '.'
0000000000001877         db  0x00 ; '.'
0000000000001878         db  0x08 ; '.'
0000000000001879         db  0x00 ; '.'
000000000000187a         db  0x00 ; '.'
000000000000187b         db  0x00 ; '.'
000000000000187c         db  0x00 ; '.'
000000000000187d         db  0x00 ; '.'
000000000000187e         db  0x00 ; '.'
000000000000187f         db  0x00 ; '.'
0000000000001880         db  0x65 ; 'e'
0000000000001881         db  0xb8 ; '.'
0000000000001882         db  0x00 ; '.'
0000000000001883         db  0x00 ; '.'
0000000000001884         db  0x00 ; '.'
0000000000001885         db  0x00 ; '.'
0000000000001886         db  0x00 ; '.'
0000000000001887         db  0x00 ; '.'
0000000000001888         db  0x00 ; '.'
0000000000001889         db  0x07 ; '.'
000000000000188a         db  0x21 ; '!'
000000000000188b         db  0x00 ; '.'
000000000000188c         db  0x00 ; '.'
000000000000188d         db  0x00 ; '.'
000000000000188e         db  0x00 ; '.'
000000000000188f         db  0x00 ; '.'
0000000000001890         db  0x08 ; '.'
0000000000001891         db  0x00 ; '.'
0000000000001892         db  0x00 ; '.'
0000000000001893         db  0x00 ; '.'
0000000000001894         db  0x00 ; '.'
0000000000001895         db  0x00 ; '.'
0000000000001896         db  0x00 ; '.'
0000000000001897         db  0x00 ; '.'
0000000000001898         db  0x69 ; 'i'
0000000000001899         db  0xb8 ; '.'
000000000000189a         db  0x00 ; '.'
000000000000189b         db  0x00 ; '.'
000000000000189c         db  0x00 ; '.'
000000000000189d         db  0x00 ; '.'
000000000000189e         db  0x00 ; '.'
000000000000189f         db  0x00 ; '.'
00000000000018a0         db  0x20 ; ' '
00000000000018a1         db  0x07 ; '.'
00000000000018a2         db  0x21 ; '!'
00000000000018a3         db  0x00 ; '.'
00000000000018a4         db  0x00 ; '.'
00000000000018a5         db  0x00 ; '.'
00000000000018a6         db  0x00 ; '.'
00000000000018a7         db  0x00 ; '.'
00000000000018a8         db  0x08 ; '.'
00000000000018a9         db  0x00 ; '.'
00000000000018aa         db  0x00 ; '.'
00000000000018ab         db  0x00 ; '.'
00000000000018ac         db  0x00 ; '.'
00000000000018ad         db  0x00 ; '.'
00000000000018ae         db  0x00 ; '.'
00000000000018af         db  0x00 ; '.'
00000000000018b0         db  0x6e ; 'n'
00000000000018b1         db  0xb8 ; '.'
00000000000018b2         db  0x00 ; '.'
00000000000018b3         db  0x00 ; '.'
00000000000018b4         db  0x00 ; '.'
00000000000018b5         db  0x00 ; '.'
00000000000018b6         db  0x00 ; '.'
00000000000018b7         db  0x00 ; '.'
00000000000018b8         db  0x40 ; '@'
00000000000018b9         db  0x07 ; '.'
00000000000018ba         db  0x21 ; '!'
00000000000018bb         db  0x00 ; '.'
00000000000018bc         db  0x00 ; '.'
00000000000018bd         db  0x00 ; '.'
00000000000018be         db  0x00 ; '.'
00000000000018bf         db  0x00 ; '.'
00000000000018c0         db  0x08 ; '.'
00000000000018c1         db  0x00 ; '.'
00000000000018c2         db  0x00 ; '.'
00000000000018c3         db  0x00 ; '.'
00000000000018c4         db  0x00 ; '.'
00000000000018c5         db  0x00 ; '.'
00000000000018c6         db  0x00 ; '.'
00000000000018c7         db  0x00 ; '.'
00000000000018c8         db  0x75 ; 'u'
00000000000018c9         db  0xb8 ; '.'
00000000000018ca         db  0x00 ; '.'
00000000000018cb         db  0x00 ; '.'
00000000000018cc         db  0x00 ; '.'
00000000000018cd         db  0x00 ; '.'
00000000000018ce         db  0x00 ; '.'
00000000000018cf         db  0x00 ; '.'
00000000000018d0         db  0x60 ; '`'
00000000000018d1         db  0x07 ; '.'
00000000000018d2         db  0x21 ; '!'
00000000000018d3         db  0x00 ; '.'
00000000000018d4         db  0x00 ; '.'
00000000000018d5         db  0x00 ; '.'
00000000000018d6         db  0x00 ; '.'
00000000000018d7         db  0x00 ; '.'
00000000000018d8         db  0x08 ; '.'
00000000000018d9         db  0x00 ; '.'
00000000000018da         db  0x00 ; '.'
00000000000018db         db  0x00 ; '.'
00000000000018dc         db  0x00 ; '.'
00000000000018dd         db  0x00 ; '.'
00000000000018de         db  0x00 ; '.'
00000000000018df         db  0x00 ; '.'
00000000000018e0         db  0xc8 ; '.'
00000000000018e1         db  0xb8 ; '.'
00000000000018e2         db  0x00 ; '.'
00000000000018e3         db  0x00 ; '.'
00000000000018e4         db  0x00 ; '.'
00000000000018e5         db  0x00 ; '.'
00000000000018e6         db  0x00 ; '.'
00000000000018e7         db  0x00 ; '.'
00000000000018e8         db  0x80 ; '.'
00000000000018e9         db  0x07 ; '.'
00000000000018ea         db  0x21 ; '!'
00000000000018eb         db  0x00 ; '.'
00000000000018ec         db  0x00 ; '.'
00000000000018ed         db  0x00 ; '.'
00000000000018ee         db  0x00 ; '.'
00000000000018ef         db  0x00 ; '.'
00000000000018f0         db  0x08 ; '.'
00000000000018f1         db  0x00 ; '.'
00000000000018f2         db  0x00 ; '.'
00000000000018f3         db  0x00 ; '.'
00000000000018f4         db  0x00 ; '.'
00000000000018f5         db  0x00 ; '.'
00000000000018f6         db  0x00 ; '.'
00000000000018f7         db  0x00 ; '.'
00000000000018f8         db  0x7c ; '|'
00000000000018f9         db  0xb8 ; '.'
00000000000018fa         db  0x00 ; '.'
00000000000018fb         db  0x00 ; '.'
00000000000018fc         db  0x00 ; '.'
00000000000018fd         db  0x00 ; '.'
00000000000018fe         db  0x00 ; '.'
00000000000018ff         db  0x00 ; '.'
0000000000001900         db  0xa0 ; '.'
0000000000001901         db  0x07 ; '.'
0000000000001902         db  0x21 ; '!'
0000000000001903         db  0x00 ; '.'
0000000000001904         db  0x00 ; '.'
0000000000001905         db  0x00 ; '.'
0000000000001906         db  0x00 ; '.'
0000000000001907         db  0x00 ; '.'
0000000000001908         db  0x08 ; '.'
0000000000001909         db  0x00 ; '.'
000000000000190a         db  0x00 ; '.'
000000000000190b         db  0x00 ; '.'
000000000000190c         db  0x00 ; '.'
000000000000190d         db  0x00 ; '.'
000000000000190e         db  0x00 ; '.'
000000000000190f         db  0x00 ; '.'
0000000000001910         db  0x82 ; '.'
0000000000001911         db  0xb8 ; '.'
0000000000001912         db  0x00 ; '.'
0000000000001913         db  0x00 ; '.'
0000000000001914         db  0x00 ; '.'
0000000000001915         db  0x00 ; '.'
0000000000001916         db  0x00 ; '.'
0000000000001917         db  0x00 ; '.'
0000000000001918         db  0xc0 ; '.'
0000000000001919         db  0x07 ; '.'
000000000000191a         db  0x21 ; '!'
000000000000191b         db  0x00 ; '.'
000000000000191c         db  0x00 ; '.'
000000000000191d         db  0x00 ; '.'
000000000000191e         db  0x00 ; '.'
000000000000191f         db  0x00 ; '.'
0000000000001920         db  0x08 ; '.'
0000000000001921         db  0x00 ; '.'
0000000000001922         db  0x00 ; '.'
0000000000001923         db  0x00 ; '.'
0000000000001924         db  0x00 ; '.'
0000000000001925         db  0x00 ; '.'
0000000000001926         db  0x00 ; '.'
0000000000001927         db  0x00 ; '.'
0000000000001928         db  0x8b ; '.'
0000000000001929         db  0xb8 ; '.'
000000000000192a         db  0x00 ; '.'
000000000000192b         db  0x00 ; '.'
000000000000192c         db  0x00 ; '.'
000000000000192d         db  0x00 ; '.'
000000000000192e         db  0x00 ; '.'
000000000000192f         db  0x00 ; '.'
0000000000001930         db  0xe0 ; '.'
0000000000001931         db  0x07 ; '.'
0000000000001932         db  0x21 ; '!'
0000000000001933         db  0x00 ; '.'
0000000000001934         db  0x00 ; '.'
0000000000001935         db  0x00 ; '.'
0000000000001936         db  0x00 ; '.'
0000000000001937         db  0x00 ; '.'
0000000000001938         db  0x08 ; '.'
0000000000001939         db  0x00 ; '.'
000000000000193a         db  0x00 ; '.'
000000000000193b         db  0x00 ; '.'
000000000000193c         db  0x00 ; '.'
000000000000193d         db  0x00 ; '.'
000000000000193e         db  0x00 ; '.'
000000000000193f         db  0x00 ; '.'
0000000000001940         db  0x91 ; '.'
0000000000001941         db  0xb8 ; '.'
0000000000001942         db  0x00 ; '.'
0000000000001943         db  0x00 ; '.'
0000000000001944         db  0x00 ; '.'
0000000000001945         db  0x00 ; '.'
0000000000001946         db  0x00 ; '.'
0000000000001947         db  0x00 ; '.'
0000000000001948         db  0x00 ; '.'
0000000000001949         db  0x08 ; '.'
000000000000194a         db  0x21 ; '!'
000000000000194b         db  0x00 ; '.'
000000000000194c         db  0x00 ; '.'
000000000000194d         db  0x00 ; '.'
000000000000194e         db  0x00 ; '.'
000000000000194f         db  0x00 ; '.'
0000000000001950         db  0x08 ; '.'
0000000000001951         db  0x00 ; '.'
0000000000001952         db  0x00 ; '.'
0000000000001953         db  0x00 ; '.'
0000000000001954         db  0x00 ; '.'
0000000000001955         db  0x00 ; '.'
0000000000001956         db  0x00 ; '.'
0000000000001957         db  0x00 ; '.'
0000000000001958         db  0x98 ; '.'
0000000000001959         db  0xb8 ; '.'
000000000000195a         db  0x00 ; '.'
000000000000195b         db  0x00 ; '.'
000000000000195c         db  0x00 ; '.'
000000000000195d         db  0x00 ; '.'
000000000000195e         db  0x00 ; '.'
000000000000195f         db  0x00 ; '.'
0000000000001960         db  0x20 ; ' '
0000000000001961         db  0x08 ; '.'
0000000000001962         db  0x21 ; '!'
0000000000001963         db  0x00 ; '.'
0000000000001964         db  0x00 ; '.'
0000000000001965         db  0x00 ; '.'
0000000000001966         db  0x00 ; '.'
0000000000001967         db  0x00 ; '.'
0000000000001968         db  0x08 ; '.'
0000000000001969         db  0x00 ; '.'
000000000000196a         db  0x00 ; '.'
000000000000196b         db  0x00 ; '.'
000000000000196c         db  0x00 ; '.'
000000000000196d         db  0x00 ; '.'
000000000000196e         db  0x00 ; '.'
000000000000196f         db  0x00 ; '.'
0000000000001970         db  0x9f ; '.'
0000000000001971         db  0xb8 ; '.'
0000000000001972         db  0x00 ; '.'
0000000000001973         db  0x00 ; '.'
0000000000001974         db  0x00 ; '.'
0000000000001975         db  0x00 ; '.'
0000000000001976         db  0x00 ; '.'
0000000000001977         db  0x00 ; '.'
0000000000001978         db  0x40 ; '@'
0000000000001979         db  0x08 ; '.'
000000000000197a         db  0x21 ; '!'
000000000000197b         db  0x00 ; '.'
000000000000197c         db  0x00 ; '.'
000000000000197d         db  0x00 ; '.'
000000000000197e         db  0x00 ; '.'
000000000000197f         db  0x00 ; '.'
0000000000001980         db  0x08 ; '.'
0000000000001981         db  0x00 ; '.'
0000000000001982         db  0x00 ; '.'
0000000000001983         db  0x00 ; '.'
0000000000001984         db  0x00 ; '.'
0000000000001985         db  0x00 ; '.'
0000000000001986         db  0x00 ; '.'
0000000000001987         db  0x00 ; '.'
0000000000001988         db  0xa5 ; '.'
0000000000001989         db  0xb8 ; '.'
000000000000198a         db  0x00 ; '.'
000000000000198b         db  0x00 ; '.'
000000000000198c         db  0x00 ; '.'
000000000000198d         db  0x00 ; '.'
000000000000198e         db  0x00 ; '.'
000000000000198f         db  0x00 ; '.'
0000000000001990         db  0x60 ; '`'
0000000000001991         db  0x08 ; '.'
0000000000001992         db  0x21 ; '!'
0000000000001993         db  0x00 ; '.'
0000000000001994         db  0x00 ; '.'
0000000000001995         db  0x00 ; '.'
0000000000001996         db  0x00 ; '.'
0000000000001997         db  0x00 ; '.'
0000000000001998         db  0x08 ; '.'
0000000000001999         db  0x00 ; '.'
000000000000199a         db  0x00 ; '.'
000000000000199b         db  0x00 ; '.'
000000000000199c         db  0x00 ; '.'
000000000000199d         db  0x00 ; '.'
000000000000199e         db  0x00 ; '.'
000000000000199f         db  0x00 ; '.'
00000000000019a0         db  0xac ; '.'
00000000000019a1         db  0xb8 ; '.'
00000000000019a2         db  0x00 ; '.'
00000000000019a3         db  0x00 ; '.'
00000000000019a4         db  0x00 ; '.'
00000000000019a5         db  0x00 ; '.'
00000000000019a6         db  0x00 ; '.'
00000000000019a7         db  0x00 ; '.'
00000000000019a8         db  0x80 ; '.'
00000000000019a9         db  0x08 ; '.'
00000000000019aa         db  0x21 ; '!'
00000000000019ab         db  0x00 ; '.'
00000000000019ac         db  0x00 ; '.'
00000000000019ad         db  0x00 ; '.'
00000000000019ae         db  0x00 ; '.'
00000000000019af         db  0x00 ; '.'
00000000000019b0         db  0x08 ; '.'
00000000000019b1         db  0x00 ; '.'
00000000000019b2         db  0x00 ; '.'
00000000000019b3         db  0x00 ; '.'
00000000000019b4         db  0x00 ; '.'
00000000000019b5         db  0x00 ; '.'
00000000000019b6         db  0x00 ; '.'
00000000000019b7         db  0x00 ; '.'
00000000000019b8         db  0xb4 ; '.'
00000000000019b9         db  0xb8 ; '.'
00000000000019ba         db  0x00 ; '.'
00000000000019bb         db  0x00 ; '.'
00000000000019bc         db  0x00 ; '.'
00000000000019bd         db  0x00 ; '.'
00000000000019be         db  0x00 ; '.'
00000000000019bf         db  0x00 ; '.'
00000000000019c0         db  0xa0 ; '.'
00000000000019c1         db  0x08 ; '.'
00000000000019c2         db  0x21 ; '!'
00000000000019c3         db  0x00 ; '.'
00000000000019c4         db  0x00 ; '.'
00000000000019c5         db  0x00 ; '.'
00000000000019c6         db  0x00 ; '.'
00000000000019c7         db  0x00 ; '.'
00000000000019c8         db  0x08 ; '.'
00000000000019c9         db  0x00 ; '.'
00000000000019ca         db  0x00 ; '.'
00000000000019cb         db  0x00 ; '.'
00000000000019cc         db  0x00 ; '.'
00000000000019cd         db  0x00 ; '.'
00000000000019ce         db  0x00 ; '.'
00000000000019cf         db  0x00 ; '.'
00000000000019d0         db  0xbd ; '.'
00000000000019d1         db  0xb8 ; '.'
00000000000019d2         db  0x00 ; '.'
00000000000019d3         db  0x00 ; '.'
00000000000019d4         db  0x00 ; '.'
00000000000019d5         db  0x00 ; '.'
00000000000019d6         db  0x00 ; '.'
00000000000019d7         db  0x00 ; '.'
00000000000019d8         db  0xc0 ; '.'
00000000000019d9         db  0x08 ; '.'
00000000000019da         db  0x21 ; '!'
00000000000019db         db  0x00 ; '.'
00000000000019dc         db  0x00 ; '.'
00000000000019dd         db  0x00 ; '.'
00000000000019de         db  0x00 ; '.'
00000000000019df         db  0x00 ; '.'
00000000000019e0         db  0x08 ; '.'
00000000000019e1         db  0x00 ; '.'
00000000000019e2         db  0x00 ; '.'
00000000000019e3         db  0x00 ; '.'
00000000000019e4         db  0x00 ; '.'
00000000000019e5         db  0x00 ; '.'
00000000000019e6         db  0x00 ; '.'
00000000000019e7         db  0x00 ; '.'
00000000000019e8         db  0xc5 ; '.'
00000000000019e9         db  0xb8 ; '.'
00000000000019ea         db  0x00 ; '.'
00000000000019eb         db  0x00 ; '.'
00000000000019ec         db  0x00 ; '.'
00000000000019ed         db  0x00 ; '.'
00000000000019ee         db  0x00 ; '.'
00000000000019ef         db  0x00 ; '.'
00000000000019f0         db  0xe0 ; '.'
00000000000019f1         db  0x08 ; '.'
00000000000019f2         db  0x21 ; '!'
00000000000019f3         db  0x00 ; '.'
00000000000019f4         db  0x00 ; '.'
00000000000019f5         db  0x00 ; '.'
00000000000019f6         db  0x00 ; '.'
00000000000019f7         db  0x00 ; '.'
00000000000019f8         db  0x08 ; '.'
00000000000019f9         db  0x00 ; '.'
00000000000019fa         db  0x00 ; '.'
00000000000019fb         db  0x00 ; '.'
00000000000019fc         db  0x00 ; '.'
00000000000019fd         db  0x00 ; '.'
00000000000019fe         db  0x00 ; '.'
00000000000019ff         db  0x00 ; '.'
0000000000001a00         db  0xc9 ; '.'
0000000000001a01         db  0xb3 ; '.'
0000000000001a02         db  0x00 ; '.'
0000000000001a03         db  0x00 ; '.'
0000000000001a04         db  0x00 ; '.'
0000000000001a05         db  0x00 ; '.'
0000000000001a06         db  0x00 ; '.'
0000000000001a07         db  0x00 ; '.'
0000000000001a08         db  0x00 ; '.'
0000000000001a09         db  0x09 ; '.'
0000000000001a0a         db  0x21 ; '!'
0000000000001a0b         db  0x00 ; '.'
0000000000001a0c         db  0x00 ; '.'
0000000000001a0d         db  0x00 ; '.'
0000000000001a0e         db  0x00 ; '.'
0000000000001a0f         db  0x00 ; '.'
0000000000001a10         db  0x08 ; '.'
0000000000001a11         db  0x00 ; '.'
0000000000001a12         db  0x00 ; '.'
0000000000001a13         db  0x00 ; '.'
0000000000001a14         db  0x00 ; '.'
0000000000001a15         db  0x00 ; '.'
0000000000001a16         db  0x00 ; '.'
0000000000001a17         db  0x00 ; '.'
0000000000001a18         db  0xcd ; '.'
0000000000001a19         db  0xb8 ; '.'
0000000000001a1a         db  0x00 ; '.'
0000000000001a1b         db  0x00 ; '.'
0000000000001a1c         db  0x00 ; '.'
0000000000001a1d         db  0x00 ; '.'
0000000000001a1e         db  0x00 ; '.'
0000000000001a1f         db  0x00 ; '.'
0000000000001a20         db  0x20 ; ' '
0000000000001a21         db  0x09 ; '.'
0000000000001a22         db  0x21 ; '!'
0000000000001a23         db  0x00 ; '.'
0000000000001a24         db  0x00 ; '.'
0000000000001a25         db  0x00 ; '.'
0000000000001a26         db  0x00 ; '.'
0000000000001a27         db  0x00 ; '.'
0000000000001a28         db  0x08 ; '.'
0000000000001a29         db  0x00 ; '.'
0000000000001a2a         db  0x00 ; '.'
0000000000001a2b         db  0x00 ; '.'
0000000000001a2c         db  0x00 ; '.'
0000000000001a2d         db  0x00 ; '.'
0000000000001a2e         db  0x00 ; '.'
0000000000001a2f         db  0x00 ; '.'
0000000000001a30         db  0xd5 ; '.'
0000000000001a31         db  0xb8 ; '.'
0000000000001a32         db  0x00 ; '.'
0000000000001a33         db  0x00 ; '.'
0000000000001a34         db  0x00 ; '.'
0000000000001a35         db  0x00 ; '.'
0000000000001a36         db  0x00 ; '.'
0000000000001a37         db  0x00 ; '.'
0000000000001a38         db  0x40 ; '@'
0000000000001a39         db  0x09 ; '.'
0000000000001a3a         db  0x21 ; '!'
0000000000001a3b         db  0x00 ; '.'
0000000000001a3c         db  0x00 ; '.'
0000000000001a3d         db  0x00 ; '.'
0000000000001a3e         db  0x00 ; '.'
0000000000001a3f         db  0x00 ; '.'
0000000000001a40         db  0x08 ; '.'
0000000000001a41         db  0x00 ; '.'
0000000000001a42         db  0x00 ; '.'
0000000000001a43         db  0x00 ; '.'
0000000000001a44         db  0x00 ; '.'
0000000000001a45         db  0x00 ; '.'
0000000000001a46         db  0x00 ; '.'
0000000000001a47         db  0x00 ; '.'
0000000000001a48         db  0xdc ; '.'
0000000000001a49         db  0xb8 ; '.'
0000000000001a4a         db  0x00 ; '.'
0000000000001a4b         db  0x00 ; '.'
0000000000001a4c         db  0x00 ; '.'
0000000000001a4d         db  0x00 ; '.'
0000000000001a4e         db  0x00 ; '.'
0000000000001a4f         db  0x00 ; '.'
0000000000001a50         db  0x60 ; '`'
0000000000001a51         db  0x09 ; '.'
0000000000001a52         db  0x21 ; '!'
0000000000001a53         db  0x00 ; '.'
0000000000001a54         db  0x00 ; '.'
0000000000001a55         db  0x00 ; '.'
0000000000001a56         db  0x00 ; '.'
0000000000001a57         db  0x00 ; '.'
0000000000001a58         db  0x08 ; '.'
0000000000001a59         db  0x00 ; '.'
0000000000001a5a         db  0x00 ; '.'
0000000000001a5b         db  0x00 ; '.'
0000000000001a5c         db  0x00 ; '.'
0000000000001a5d         db  0x00 ; '.'
0000000000001a5e         db  0x00 ; '.'
0000000000001a5f         db  0x00 ; '.'
0000000000001a60         db  0x9b ; '.'
0000000000001a61         db  0xb5 ; '.'
0000000000001a62         db  0x00 ; '.'
0000000000001a63         db  0x00 ; '.'
0000000000001a64         db  0x00 ; '.'
0000000000001a65         db  0x00 ; '.'
0000000000001a66         db  0x00 ; '.'
0000000000001a67         db  0x00 ; '.'
0000000000001a68         db  0x80 ; '.'
0000000000001a69         db  0x09 ; '.'
0000000000001a6a         db  0x21 ; '!'
0000000000001a6b         db  0x00 ; '.'
0000000000001a6c         db  0x00 ; '.'
0000000000001a6d         db  0x00 ; '.'
0000000000001a6e         db  0x00 ; '.'
0000000000001a6f         db  0x00 ; '.'
0000000000001a70         db  0x08 ; '.'
0000000000001a71         db  0x00 ; '.'
0000000000001a72         db  0x00 ; '.'
0000000000001a73         db  0x00 ; '.'
0000000000001a74         db  0x00 ; '.'
0000000000001a75         db  0x00 ; '.'
0000000000001a76         db  0x00 ; '.'
0000000000001a77         db  0x00 ; '.'
0000000000001a78         db  0xa1 ; '.'
0000000000001a79         db  0xb5 ; '.'
0000000000001a7a         db  0x00 ; '.'
0000000000001a7b         db  0x00 ; '.'
0000000000001a7c         db  0x00 ; '.'
0000000000001a7d         db  0x00 ; '.'
0000000000001a7e         db  0x00 ; '.'
0000000000001a7f         db  0x00 ; '.'
0000000000001a80         db  0xa0 ; '.'
0000000000001a81         db  0x09 ; '.'
0000000000001a82         db  0x21 ; '!'
0000000000001a83         db  0x00 ; '.'
0000000000001a84         db  0x00 ; '.'
0000000000001a85         db  0x00 ; '.'
0000000000001a86         db  0x00 ; '.'
0000000000001a87         db  0x00 ; '.'
0000000000001a88         db  0x08 ; '.'
0000000000001a89         db  0x00 ; '.'
0000000000001a8a         db  0x00 ; '.'
0000000000001a8b         db  0x00 ; '.'
0000000000001a8c         db  0x00 ; '.'
0000000000001a8d         db  0x00 ; '.'
0000000000001a8e         db  0x00 ; '.'
0000000000001a8f         db  0x00 ; '.'
0000000000001a90         db  0xa9 ; '.'
0000000000001a91         db  0xb4 ; '.'
0000000000001a92         db  0x00 ; '.'
0000000000001a93         db  0x00 ; '.'
0000000000001a94         db  0x00 ; '.'
0000000000001a95         db  0x00 ; '.'
0000000000001a96         db  0x00 ; '.'
0000000000001a97         db  0x00 ; '.'
0000000000001a98         db  0xc0 ; '.'
0000000000001a99         db  0x09 ; '.'
0000000000001a9a         db  0x21 ; '!'
0000000000001a9b         db  0x00 ; '.'
0000000000001a9c         db  0x00 ; '.'
0000000000001a9d         db  0x00 ; '.'
0000000000001a9e         db  0x00 ; '.'
0000000000001a9f         db  0x00 ; '.'
0000000000001aa0         db  0x08 ; '.'
0000000000001aa1         db  0x00 ; '.'
0000000000001aa2         db  0x00 ; '.'
0000000000001aa3         db  0x00 ; '.'
0000000000001aa4         db  0x00 ; '.'
0000000000001aa5         db  0x00 ; '.'
0000000000001aa6         db  0x00 ; '.'
0000000000001aa7         db  0x00 ; '.'
0000000000001aa8         db  0x95 ; '.'
0000000000001aa9         db  0xb8 ; '.'
0000000000001aaa         db  0x00 ; '.'
0000000000001aab         db  0x00 ; '.'
0000000000001aac         db  0x00 ; '.'
0000000000001aad         db  0x00 ; '.'
0000000000001aae         db  0x00 ; '.'
0000000000001aaf         db  0x00 ; '.'
0000000000001ab0         db  0xe0 ; '.'
0000000000001ab1         db  0x09 ; '.'
0000000000001ab2         db  0x21 ; '!'
0000000000001ab3         db  0x00 ; '.'
0000000000001ab4         db  0x00 ; '.'
0000000000001ab5         db  0x00 ; '.'
0000000000001ab6         db  0x00 ; '.'
0000000000001ab7         db  0x00 ; '.'
0000000000001ab8         db  0x08 ; '.'
0000000000001ab9         db  0x00 ; '.'
0000000000001aba         db  0x00 ; '.'
0000000000001abb         db  0x00 ; '.'
0000000000001abc         db  0x00 ; '.'
0000000000001abd         db  0x00 ; '.'
0000000000001abe         db  0x00 ; '.'
0000000000001abf         db  0x00 ; '.'
0000000000001ac0         db  0xae ; '.'
0000000000001ac1         db  0xb4 ; '.'
0000000000001ac2         db  0x00 ; '.'
0000000000001ac3         db  0x00 ; '.'
0000000000001ac4         db  0x00 ; '.'
0000000000001ac5         db  0x00 ; '.'
0000000000001ac6         db  0x00 ; '.'
0000000000001ac7         db  0x00 ; '.'
0000000000001ac8         db  0x00 ; '.'
0000000000001ac9         db  0x0a ; '.'
0000000000001aca         db  0x21 ; '!'
0000000000001acb         db  0x00 ; '.'
0000000000001acc         db  0x00 ; '.'
0000000000001acd         db  0x00 ; '.'
0000000000001ace         db  0x00 ; '.'
0000000000001acf         db  0x00 ; '.'
0000000000001ad0         db  0x08 ; '.'
0000000000001ad1         db  0x00 ; '.'
0000000000001ad2         db  0x00 ; '.'
0000000000001ad3         db  0x00 ; '.'
0000000000001ad4         db  0x00 ; '.'
0000000000001ad5         db  0x00 ; '.'
0000000000001ad6         db  0x00 ; '.'
0000000000001ad7         db  0x00 ; '.'
0000000000001ad8         db  0xb1 ; '.'
0000000000001ad9         db  0xb4 ; '.'
0000000000001ada         db  0x00 ; '.'
0000000000001adb         db  0x00 ; '.'
0000000000001adc         db  0x00 ; '.'
0000000000001add         db  0x00 ; '.'
0000000000001ade         db  0x00 ; '.'
0000000000001adf         db  0x00 ; '.'
0000000000001ae0         db  0x20 ; ' '
0000000000001ae1         db  0x0a ; '.'
0000000000001ae2         db  0x21 ; '!'
0000000000001ae3         db  0x00 ; '.'
0000000000001ae4         db  0x00 ; '.'
0000000000001ae5         db  0x00 ; '.'
0000000000001ae6         db  0x00 ; '.'
0000000000001ae7         db  0x00 ; '.'
0000000000001ae8         db  0x08 ; '.'
0000000000001ae9         db  0x00 ; '.'
0000000000001aea         db  0x00 ; '.'
0000000000001aeb         db  0x00 ; '.'
0000000000001aec         db  0x00 ; '.'
0000000000001aed         db  0x00 ; '.'
0000000000001aee         db  0x00 ; '.'
0000000000001aef         db  0x00 ; '.'
0000000000001af0         db  0xf1 ; '.'
0000000000001af1         db  0xb4 ; '.'
0000000000001af2         db  0x00 ; '.'
0000000000001af3         db  0x00 ; '.'
0000000000001af4         db  0x00 ; '.'
0000000000001af5         db  0x00 ; '.'
0000000000001af6         db  0x00 ; '.'
0000000000001af7         db  0x00 ; '.'
0000000000001af8         db  0x40 ; '@'
0000000000001af9         db  0x0a ; '.'
0000000000001afa         db  0x21 ; '!'
0000000000001afb         db  0x00 ; '.'
0000000000001afc         db  0x00 ; '.'
0000000000001afd         db  0x00 ; '.'
0000000000001afe         db  0x00 ; '.'
0000000000001aff         db  0x00 ; '.'
0000000000001b00         db  0x08 ; '.'
0000000000001b01         db  0x00 ; '.'
0000000000001b02         db  0x00 ; '.'
0000000000001b03         db  0x00 ; '.'
0000000000001b04         db  0x00 ; '.'
0000000000001b05         db  0x00 ; '.'
0000000000001b06         db  0x00 ; '.'
0000000000001b07         db  0x00 ; '.'
0000000000001b08         db  0xed ; '.'
0000000000001b09         db  0xb4 ; '.'
0000000000001b0a         db  0x00 ; '.'
0000000000001b0b         db  0x00 ; '.'
0000000000001b0c         db  0x00 ; '.'
0000000000001b0d         db  0x00 ; '.'
0000000000001b0e         db  0x00 ; '.'
0000000000001b0f         db  0x00 ; '.'
0000000000001b10         db  0x60 ; '`'
0000000000001b11         db  0x0a ; '.'
0000000000001b12         db  0x21 ; '!'
0000000000001b13         db  0x00 ; '.'
0000000000001b14         db  0x00 ; '.'
0000000000001b15         db  0x00 ; '.'
0000000000001b16         db  0x00 ; '.'
0000000000001b17         db  0x00 ; '.'
0000000000001b18         db  0x08 ; '.'
0000000000001b19         db  0x00 ; '.'
0000000000001b1a         db  0x00 ; '.'
0000000000001b1b         db  0x00 ; '.'
0000000000001b1c         db  0x00 ; '.'
0000000000001b1d         db  0x00 ; '.'
0000000000001b1e         db  0x00 ; '.'
0000000000001b1f         db  0x00 ; '.'
0000000000001b20         db  0xe0 ; '.'
0000000000001b21         db  0xb4 ; '.'
0000000000001b22         db  0x00 ; '.'
0000000000001b23         db  0x00 ; '.'
0000000000001b24         db  0x00 ; '.'
0000000000001b25         db  0x00 ; '.'
0000000000001b26         db  0x00 ; '.'
0000000000001b27         db  0x00 ; '.'
0000000000001b28         db  0x80 ; '.'
0000000000001b29         db  0x0a ; '.'
0000000000001b2a         db  0x21 ; '!'
0000000000001b2b         db  0x00 ; '.'
0000000000001b2c         db  0x00 ; '.'
0000000000001b2d         db  0x00 ; '.'
0000000000001b2e         db  0x00 ; '.'
0000000000001b2f         db  0x00 ; '.'
0000000000001b30         db  0x08 ; '.'
0000000000001b31         db  0x00 ; '.'
0000000000001b32         db  0x00 ; '.'
0000000000001b33         db  0x00 ; '.'
0000000000001b34         db  0x00 ; '.'
0000000000001b35         db  0x00 ; '.'
0000000000001b36         db  0x00 ; '.'
0000000000001b37         db  0x00 ; '.'
0000000000001b38         db  0xe6 ; '.'
0000000000001b39         db  0xb4 ; '.'
0000000000001b3a         db  0x00 ; '.'
0000000000001b3b         db  0x00 ; '.'
0000000000001b3c         db  0x00 ; '.'
0000000000001b3d         db  0x00 ; '.'
0000000000001b3e         db  0x00 ; '.'
0000000000001b3f         db  0x00 ; '.'
0000000000001b40         db  0xa0 ; '.'
0000000000001b41         db  0x0a ; '.'
0000000000001b42         db  0x21 ; '!'
0000000000001b43         db  0x00 ; '.'
0000000000001b44         db  0x00 ; '.'
0000000000001b45         db  0x00 ; '.'
0000000000001b46         db  0x00 ; '.'
0000000000001b47         db  0x00 ; '.'
0000000000001b48         db  0x08 ; '.'
0000000000001b49         db  0x00 ; '.'
0000000000001b4a         db  0x00 ; '.'
0000000000001b4b         db  0x00 ; '.'
0000000000001b4c         db  0x00 ; '.'
0000000000001b4d         db  0x00 ; '.'
0000000000001b4e         db  0x00 ; '.'
0000000000001b4f         db  0x00 ; '.'
0000000000001b50         db  0xd9 ; '.'
0000000000001b51         db  0xb4 ; '.'
0000000000001b52         db  0x00 ; '.'
0000000000001b53         db  0x00 ; '.'
0000000000001b54         db  0x00 ; '.'
0000000000001b55         db  0x00 ; '.'
0000000000001b56         db  0x00 ; '.'
0000000000001b57         db  0x00 ; '.'
0000000000001b58         db  0xc0 ; '.'
0000000000001b59         db  0x0a ; '.'
0000000000001b5a         db  0x21 ; '!'
0000000000001b5b         db  0x00 ; '.'
0000000000001b5c         db  0x00 ; '.'
0000000000001b5d         db  0x00 ; '.'
0000000000001b5e         db  0x00 ; '.'
0000000000001b5f         db  0x00 ; '.'
0000000000001b60         db  0x08 ; '.'
0000000000001b61         db  0x00 ; '.'
0000000000001b62         db  0x00 ; '.'
0000000000001b63         db  0x00 ; '.'
0000000000001b64         db  0x00 ; '.'
0000000000001b65         db  0x00 ; '.'
0000000000001b66         db  0x00 ; '.'
0000000000001b67         db  0x00 ; '.'
0000000000001b68         db  0xf8 ; '.'
0000000000001b69         db  0xb4 ; '.'
0000000000001b6a         db  0x00 ; '.'
0000000000001b6b         db  0x00 ; '.'
0000000000001b6c         db  0x00 ; '.'
0000000000001b6d         db  0x00 ; '.'
0000000000001b6e         db  0x00 ; '.'
0000000000001b6f         db  0x00 ; '.'
0000000000001b70         db  0xe0 ; '.'
0000000000001b71         db  0x0a ; '.'
0000000000001b72         db  0x21 ; '!'
0000000000001b73         db  0x00 ; '.'
0000000000001b74         db  0x00 ; '.'
0000000000001b75         db  0x00 ; '.'
0000000000001b76         db  0x00 ; '.'
0000000000001b77         db  0x00 ; '.'
0000000000001b78         db  0x08 ; '.'
0000000000001b79         db  0x00 ; '.'
0000000000001b7a         db  0x00 ; '.'
0000000000001b7b         db  0x00 ; '.'
0000000000001b7c         db  0x00 ; '.'
0000000000001b7d         db  0x00 ; '.'
0000000000001b7e         db  0x00 ; '.'
0000000000001b7f         db  0x00 ; '.'
0000000000001b80         db  0x00 ; '.'
0000000000001b81         db  0xb5 ; '.'
0000000000001b82         db  0x00 ; '.'
0000000000001b83         db  0x00 ; '.'
0000000000001b84         db  0x00 ; '.'
0000000000001b85         db  0x00 ; '.'
0000000000001b86         db  0x00 ; '.'
0000000000001b87         db  0x00 ; '.'
0000000000001b88         db  0x00 ; '.'
0000000000001b89         db  0x0b ; '.'
0000000000001b8a         db  0x21 ; '!'
0000000000001b8b         db  0x00 ; '.'
0000000000001b8c         db  0x00 ; '.'
0000000000001b8d         db  0x00 ; '.'
0000000000001b8e         db  0x00 ; '.'
0000000000001b8f         db  0x00 ; '.'
0000000000001b90         db  0x08 ; '.'
0000000000001b91         db  0x00 ; '.'
0000000000001b92         db  0x00 ; '.'
0000000000001b93         db  0x00 ; '.'
0000000000001b94         db  0x00 ; '.'
0000000000001b95         db  0x00 ; '.'
0000000000001b96         db  0x00 ; '.'
0000000000001b97         db  0x00 ; '.'
0000000000001b98         db  0x05 ; '.'
0000000000001b99         db  0xb5 ; '.'
0000000000001b9a         db  0x00 ; '.'
0000000000001b9b         db  0x00 ; '.'
0000000000001b9c         db  0x00 ; '.'
0000000000001b9d         db  0x00 ; '.'
0000000000001b9e         db  0x00 ; '.'
0000000000001b9f         db  0x00 ; '.'
0000000000001ba0         db  0x20 ; ' '
0000000000001ba1         db  0x0b ; '.'
0000000000001ba2         db  0x21 ; '!'
0000000000001ba3         db  0x00 ; '.'
0000000000001ba4         db  0x00 ; '.'
0000000000001ba5         db  0x00 ; '.'
0000000000001ba6         db  0x00 ; '.'
0000000000001ba7         db  0x00 ; '.'
0000000000001ba8         db  0x08 ; '.'
0000000000001ba9         db  0x00 ; '.'
0000000000001baa         db  0x00 ; '.'
0000000000001bab         db  0x00 ; '.'
0000000000001bac         db  0x00 ; '.'
0000000000001bad         db  0x00 ; '.'
0000000000001bae         db  0x00 ; '.'
0000000000001baf         db  0x00 ; '.'
0000000000001bb0         db  0x0b ; '.'
0000000000001bb1         db  0xb5 ; '.'
0000000000001bb2         db  0x00 ; '.'
0000000000001bb3         db  0x00 ; '.'
0000000000001bb4         db  0x00 ; '.'
0000000000001bb5         db  0x00 ; '.'
0000000000001bb6         db  0x00 ; '.'
0000000000001bb7         db  0x00 ; '.'
0000000000001bb8         db  0x40 ; '@'
0000000000001bb9         db  0x0b ; '.'
0000000000001bba         db  0x21 ; '!'
0000000000001bbb         db  0x00 ; '.'
0000000000001bbc         db  0x00 ; '.'
0000000000001bbd         db  0x00 ; '.'
0000000000001bbe         db  0x00 ; '.'
0000000000001bbf         db  0x00 ; '.'
0000000000001bc0         db  0x08 ; '.'
0000000000001bc1         db  0x00 ; '.'
0000000000001bc2         db  0x00 ; '.'
0000000000001bc3         db  0x00 ; '.'
0000000000001bc4         db  0x00 ; '.'
0000000000001bc5         db  0x00 ; '.'
0000000000001bc6         db  0x00 ; '.'
0000000000001bc7         db  0x00 ; '.'
0000000000001bc8         db  0x11 ; '.'
0000000000001bc9         db  0xb5 ; '.'
0000000000001bca         db  0x00 ; '.'
0000000000001bcb         db  0x00 ; '.'
0000000000001bcc         db  0x00 ; '.'
0000000000001bcd         db  0x00 ; '.'
0000000000001bce         db  0x00 ; '.'
0000000000001bcf         db  0x00 ; '.'
0000000000001bd0         db  0x60 ; '`'
0000000000001bd1         db  0x0b ; '.'
0000000000001bd2         db  0x21 ; '!'
0000000000001bd3         db  0x00 ; '.'
0000000000001bd4         db  0x00 ; '.'
0000000000001bd5         db  0x00 ; '.'
0000000000001bd6         db  0x00 ; '.'
0000000000001bd7         db  0x00 ; '.'
0000000000001bd8         db  0x08 ; '.'
0000000000001bd9         db  0x00 ; '.'
0000000000001bda         db  0x00 ; '.'
0000000000001bdb         db  0x00 ; '.'
0000000000001bdc         db  0x00 ; '.'
0000000000001bdd         db  0x00 ; '.'
0000000000001bde         db  0x00 ; '.'
0000000000001bdf         db  0x00 ; '.'
0000000000001be0         db  0x15 ; '.'
0000000000001be1         db  0xb5 ; '.'
0000000000001be2         db  0x00 ; '.'
0000000000001be3         db  0x00 ; '.'
0000000000001be4         db  0x00 ; '.'
0000000000001be5         db  0x00 ; '.'
0000000000001be6         db  0x00 ; '.'
0000000000001be7         db  0x00 ; '.'
0000000000001be8         db  0xa0 ; '.'
0000000000001be9         db  0x0b ; '.'
0000000000001bea         db  0x21 ; '!'
0000000000001beb         db  0x00 ; '.'
0000000000001bec         db  0x00 ; '.'
0000000000001bed         db  0x00 ; '.'
0000000000001bee         db  0x00 ; '.'
0000000000001bef         db  0x00 ; '.'
0000000000001bf0         db  0x08 ; '.'
0000000000001bf1         db  0x00 ; '.'
0000000000001bf2         db  0x00 ; '.'
0000000000001bf3         db  0x00 ; '.'
0000000000001bf4         db  0x00 ; '.'
0000000000001bf5         db  0x00 ; '.'
0000000000001bf6         db  0x00 ; '.'
0000000000001bf7         db  0x00 ; '.'
0000000000001bf8         db  0x29 ; ')'
0000000000001bf9         db  0xdb ; '.'
0000000000001bfa         db  0x00 ; '.'
0000000000001bfb         db  0x00 ; '.'
0000000000001bfc         db  0x00 ; '.'
0000000000001bfd         db  0x00 ; '.'
0000000000001bfe         db  0x00 ; '.'
0000000000001bff         db  0x00 ; '.'
0000000000001c00         db  0xa8 ; '.'
0000000000001c01         db  0x0b ; '.'
0000000000001c02         db  0x21 ; '!'
0000000000001c03         db  0x00 ; '.'
0000000000001c04         db  0x00 ; '.'
0000000000001c05         db  0x00 ; '.'
0000000000001c06         db  0x00 ; '.'
0000000000001c07         db  0x00 ; '.'
0000000000001c08         db  0x08 ; '.'
0000000000001c09         db  0x00 ; '.'
0000000000001c0a         db  0x00 ; '.'
0000000000001c0b         db  0x00 ; '.'
0000000000001c0c         db  0x00 ; '.'
0000000000001c0d         db  0x00 ; '.'
0000000000001c0e         db  0x00 ; '.'
0000000000001c0f         db  0x00 ; '.'
0000000000001c10         db  0x31 ; '1'
0000000000001c11         db  0xdb ; '.'
0000000000001c12         db  0x00 ; '.'
0000000000001c13         db  0x00 ; '.'
0000000000001c14         db  0x00 ; '.'
0000000000001c15         db  0x00 ; '.'
0000000000001c16         db  0x00 ; '.'
0000000000001c17         db  0x00 ; '.'
0000000000001c18         db  0xb0 ; '.'
0000000000001c19         db  0x0b ; '.'
0000000000001c1a         db  0x21 ; '!'
0000000000001c1b         db  0x00 ; '.'
0000000000001c1c         db  0x00 ; '.'
0000000000001c1d         db  0x00 ; '.'
0000000000001c1e         db  0x00 ; '.'
0000000000001c1f         db  0x00 ; '.'
0000000000001c20         db  0x08 ; '.'
0000000000001c21         db  0x00 ; '.'
0000000000001c22         db  0x00 ; '.'
0000000000001c23         db  0x00 ; '.'
0000000000001c24         db  0x00 ; '.'
0000000000001c25         db  0x00 ; '.'
0000000000001c26         db  0x00 ; '.'
0000000000001c27         db  0x00 ; '.'
0000000000001c28         db  0x37 ; '7'
0000000000001c29         db  0xdb ; '.'
0000000000001c2a         db  0x00 ; '.'
0000000000001c2b         db  0x00 ; '.'
0000000000001c2c         db  0x00 ; '.'
0000000000001c2d         db  0x00 ; '.'
0000000000001c2e         db  0x00 ; '.'
0000000000001c2f         db  0x00 ; '.'
0000000000001c30         db  0xb8 ; '.'
0000000000001c31         db  0x0b ; '.'
0000000000001c32         db  0x21 ; '!'
0000000000001c33         db  0x00 ; '.'
0000000000001c34         db  0x00 ; '.'
0000000000001c35         db  0x00 ; '.'
0000000000001c36         db  0x00 ; '.'
0000000000001c37         db  0x00 ; '.'
0000000000001c38         db  0x08 ; '.'
0000000000001c39         db  0x00 ; '.'
0000000000001c3a         db  0x00 ; '.'
0000000000001c3b         db  0x00 ; '.'
0000000000001c3c         db  0x00 ; '.'
0000000000001c3d         db  0x00 ; '.'
0000000000001c3e         db  0x00 ; '.'
0000000000001c3f         db  0x00 ; '.'
0000000000001c40         db  0x44 ; 'D'
0000000000001c41         db  0xdb ; '.'
0000000000001c42         db  0x00 ; '.'
0000000000001c43         db  0x00 ; '.'
0000000000001c44         db  0x00 ; '.'
0000000000001c45         db  0x00 ; '.'
0000000000001c46         db  0x00 ; '.'
0000000000001c47         db  0x00 ; '.'
0000000000001c48         db  0xc0 ; '.'
0000000000001c49         db  0x0b ; '.'
0000000000001c4a         db  0x21 ; '!'
0000000000001c4b         db  0x00 ; '.'
0000000000001c4c         db  0x00 ; '.'
0000000000001c4d         db  0x00 ; '.'
0000000000001c4e         db  0x00 ; '.'
0000000000001c4f         db  0x00 ; '.'
0000000000001c50         db  0x08 ; '.'
0000000000001c51         db  0x00 ; '.'
0000000000001c52         db  0x00 ; '.'
0000000000001c53         db  0x00 ; '.'
0000000000001c54         db  0x00 ; '.'
0000000000001c55         db  0x00 ; '.'
0000000000001c56         db  0x00 ; '.'
0000000000001c57         db  0x00 ; '.'
0000000000001c58         db  0x51 ; 'Q'
0000000000001c59         db  0xdb ; '.'
0000000000001c5a         db  0x00 ; '.'
0000000000001c5b         db  0x00 ; '.'
0000000000001c5c         db  0x00 ; '.'
0000000000001c5d         db  0x00 ; '.'
0000000000001c5e         db  0x00 ; '.'
0000000000001c5f         db  0x00 ; '.'
0000000000001c60         db  0xc8 ; '.'
0000000000001c61         db  0x0b ; '.'
0000000000001c62         db  0x21 ; '!'
0000000000001c63         db  0x00 ; '.'
0000000000001c64         db  0x00 ; '.'
0000000000001c65         db  0x00 ; '.'
0000000000001c66         db  0x00 ; '.'
0000000000001c67         db  0x00 ; '.'
0000000000001c68         db  0x08 ; '.'
0000000000001c69         db  0x00 ; '.'
0000000000001c6a         db  0x00 ; '.'
0000000000001c6b         db  0x00 ; '.'
0000000000001c6c         db  0x00 ; '.'
0000000000001c6d         db  0x00 ; '.'
0000000000001c6e         db  0x00 ; '.'
0000000000001c6f         db  0x00 ; '.'
0000000000001c70         db  0xd1 ; '.'
0000000000001c71         db  0xb4 ; '.'
0000000000001c72         db  0x00 ; '.'
0000000000001c73         db  0x00 ; '.'
0000000000001c74         db  0x00 ; '.'
0000000000001c75         db  0x00 ; '.'
0000000000001c76         db  0x00 ; '.'
0000000000001c77         db  0x00 ; '.'
0000000000001c78         db  0xd0 ; '.'
0000000000001c79         db  0x0b ; '.'
0000000000001c7a         db  0x21 ; '!'
0000000000001c7b         db  0x00 ; '.'
0000000000001c7c         db  0x00 ; '.'
0000000000001c7d         db  0x00 ; '.'
0000000000001c7e         db  0x00 ; '.'
0000000000001c7f         db  0x00 ; '.'
0000000000001c80         db  0x08 ; '.'
0000000000001c81         db  0x00 ; '.'
0000000000001c82         db  0x00 ; '.'
0000000000001c83         db  0x00 ; '.'
0000000000001c84         db  0x00 ; '.'
0000000000001c85         db  0x00 ; '.'
0000000000001c86         db  0x00 ; '.'
0000000000001c87         db  0x00 ; '.'
0000000000001c88         db  0x65 ; 'e'
0000000000001c89         db  0xdb ; '.'
0000000000001c8a         db  0x00 ; '.'
0000000000001c8b         db  0x00 ; '.'
0000000000001c8c         db  0x00 ; '.'
0000000000001c8d         db  0x00 ; '.'
0000000000001c8e         db  0x00 ; '.'
0000000000001c8f         db  0x00 ; '.'
0000000000001c90         db  0xd8 ; '.'
0000000000001c91         db  0x0b ; '.'
0000000000001c92         db  0x21 ; '!'
0000000000001c93         db  0x00 ; '.'
0000000000001c94         db  0x00 ; '.'
0000000000001c95         db  0x00 ; '.'
0000000000001c96         db  0x00 ; '.'
0000000000001c97         db  0x00 ; '.'
0000000000001c98         db  0x08 ; '.'
0000000000001c99         db  0x00 ; '.'
0000000000001c9a         db  0x00 ; '.'
0000000000001c9b         db  0x00 ; '.'
0000000000001c9c         db  0x00 ; '.'
0000000000001c9d         db  0x00 ; '.'
0000000000001c9e         db  0x00 ; '.'
0000000000001c9f         db  0x00 ; '.'
0000000000001ca0         db  0x4a ; 'J'
0000000000001ca1         db  0xdb ; '.'
0000000000001ca2         db  0x00 ; '.'
0000000000001ca3         db  0x00 ; '.'
0000000000001ca4         db  0x00 ; '.'
0000000000001ca5         db  0x00 ; '.'
0000000000001ca6         db  0x00 ; '.'
0000000000001ca7         db  0x00 ; '.'
0000000000001ca8         db  0xe0 ; '.'
0000000000001ca9         db  0x0b ; '.'
0000000000001caa         db  0x21 ; '!'
0000000000001cab         db  0x00 ; '.'
0000000000001cac         db  0x00 ; '.'
0000000000001cad         db  0x00 ; '.'
0000000000001cae         db  0x00 ; '.'
0000000000001caf         db  0x00 ; '.'
0000000000001cb0         db  0x08 ; '.'
0000000000001cb1         db  0x00 ; '.'
0000000000001cb2         db  0x00 ; '.'
0000000000001cb3         db  0x00 ; '.'
0000000000001cb4         db  0x00 ; '.'
0000000000001cb5         db  0x00 ; '.'
0000000000001cb6         db  0x00 ; '.'
0000000000001cb7         db  0x00 ; '.'
0000000000001cb8         db  0xc1 ; '.'
0000000000001cb9         db  0xb5 ; '.'
0000000000001cba         db  0x00 ; '.'
0000000000001cbb         db  0x00 ; '.'
0000000000001cbc         db  0x00 ; '.'
0000000000001cbd         db  0x00 ; '.'
0000000000001cbe         db  0x00 ; '.'
0000000000001cbf         db  0x00 ; '.'
0000000000001cc0         db  0xe8 ; '.'
0000000000001cc1         db  0x0b ; '.'
0000000000001cc2         db  0x21 ; '!'
0000000000001cc3         db  0x00 ; '.'
0000000000001cc4         db  0x00 ; '.'
0000000000001cc5         db  0x00 ; '.'
0000000000001cc6         db  0x00 ; '.'
0000000000001cc7         db  0x00 ; '.'
0000000000001cc8         db  0x08 ; '.'
0000000000001cc9         db  0x00 ; '.'
0000000000001cca         db  0x00 ; '.'
0000000000001ccb         db  0x00 ; '.'
0000000000001ccc         db  0x00 ; '.'
0000000000001ccd         db  0x00 ; '.'
0000000000001cce         db  0x00 ; '.'
0000000000001ccf         db  0x00 ; '.'
0000000000001cd0         db  0x6d ; 'm'
0000000000001cd1         db  0xdb ; '.'
0000000000001cd2         db  0x00 ; '.'
0000000000001cd3         db  0x00 ; '.'
0000000000001cd4         db  0x00 ; '.'
0000000000001cd5         db  0x00 ; '.'
0000000000001cd6         db  0x00 ; '.'
0000000000001cd7         db  0x00 ; '.'
0000000000001cd8         db  0x08 ; '.'
0000000000001cd9         db  0x10 ; '.'
0000000000001cda         db  0x21 ; '!'
0000000000001cdb         db  0x00 ; '.'
0000000000001cdc         db  0x00 ; '.'
0000000000001cdd         db  0x00 ; '.'
0000000000001cde         db  0x00 ; '.'
0000000000001cdf         db  0x00 ; '.'
0000000000001ce0         db  0x08 ; '.'
0000000000001ce1         db  0x00 ; '.'
0000000000001ce2         db  0x00 ; '.'
0000000000001ce3         db  0x00 ; '.'
0000000000001ce4         db  0x00 ; '.'
0000000000001ce5         db  0x00 ; '.'
0000000000001ce6         db  0x00 ; '.'
0000000000001ce7         db  0x00 ; '.'
0000000000001ce8         db  0x08 ; '.'
0000000000001ce9         db  0x10 ; '.'
0000000000001cea         db  0x21 ; '!'
0000000000001ceb         db  0x00 ; '.'
0000000000001cec         db  0x00 ; '.'
0000000000001ced         db  0x00 ; '.'
0000000000001cee         db  0x00 ; '.'
0000000000001cef         db  0x00 ; '.'
0000000000001cf0         db  0x18 ; '.'
0000000000001cf1         db  0x10 ; '.'
0000000000001cf2         db  0x21 ; '!'
0000000000001cf3         db  0x00 ; '.'
0000000000001cf4         db  0x00 ; '.'
0000000000001cf5         db  0x00 ; '.'
0000000000001cf6         db  0x00 ; '.'
0000000000001cf7         db  0x00 ; '.'
0000000000001cf8         db  0x08 ; '.'
0000000000001cf9         db  0x00 ; '.'
0000000000001cfa         db  0x00 ; '.'
0000000000001cfb         db  0x00 ; '.'
0000000000001cfc         db  0x00 ; '.'
0000000000001cfd         db  0x00 ; '.'
0000000000001cfe         db  0x00 ; '.'
0000000000001cff         db  0x00 ; '.'
0000000000001d00         db  0xb7 ; '.'
0000000000001d01         db  0xda ; '.'
0000000000001d02         db  0x00 ; '.'
0000000000001d03         db  0x00 ; '.'
0000000000001d04         db  0x00 ; '.'
0000000000001d05         db  0x00 ; '.'
0000000000001d06         db  0x00 ; '.'
0000000000001d07         db  0x00 ; '.'
0000000000001d08         db  0x80 ; '.'
0000000000001d09         db  0x10 ; '.'
0000000000001d0a         db  0x21 ; '!'
0000000000001d0b         db  0x00 ; '.'
0000000000001d0c         db  0x00 ; '.'
0000000000001d0d         db  0x00 ; '.'
0000000000001d0e         db  0x00 ; '.'
0000000000001d0f         db  0x00 ; '.'
0000000000001d10         db  0x08 ; '.'
0000000000001d11         db  0x00 ; '.'
0000000000001d12         db  0x00 ; '.'
0000000000001d13         db  0x00 ; '.'
0000000000001d14         db  0x00 ; '.'
0000000000001d15         db  0x00 ; '.'
0000000000001d16         db  0x00 ; '.'
0000000000001d17         db  0x00 ; '.'
0000000000001d18         db  0x90 ; '.'
0000000000001d19         db  0x10 ; '.'
0000000000001d1a         db  0x21 ; '!'
0000000000001d1b         db  0x00 ; '.'
0000000000001d1c         db  0x00 ; '.'
0000000000001d1d         db  0x00 ; '.'
0000000000001d1e         db  0x00 ; '.'
0000000000001d1f         db  0x00 ; '.'
0000000000001d20         db  0x98 ; '.'
0000000000001d21         db  0x10 ; '.'
0000000000001d22         db  0x21 ; '!'
0000000000001d23         db  0x00 ; '.'
0000000000001d24         db  0x00 ; '.'
0000000000001d25         db  0x00 ; '.'
0000000000001d26         db  0x00 ; '.'
0000000000001d27         db  0x00 ; '.'
0000000000001d28         db  0x08 ; '.'
0000000000001d29         db  0x00 ; '.'
0000000000001d2a         db  0x00 ; '.'
0000000000001d2b         db  0x00 ; '.'
0000000000001d2c         db  0x00 ; '.'
0000000000001d2d         db  0x00 ; '.'
0000000000001d2e         db  0x00 ; '.'
0000000000001d2f         db  0x00 ; '.'
0000000000001d30         db  0x20 ; ' '
0000000000001d31         db  0x12 ; '.'
0000000000001d32         db  0x21 ; '!'
0000000000001d33         db  0x00 ; '.'
0000000000001d34         db  0x00 ; '.'
0000000000001d35         db  0x00 ; '.'
0000000000001d36         db  0x00 ; '.'
0000000000001d37         db  0x00 ; '.'
0000000000001d38         db  0xd8 ; '.'
0000000000001d39         db  0x0f ; '.'
0000000000001d3a         db  0x21 ; '!'
0000000000001d3b         db  0x00 ; '.'
0000000000001d3c         db  0x00 ; '.'
0000000000001d3d         db  0x00 ; '.'
0000000000001d3e         db  0x00 ; '.'
0000000000001d3f         db  0x00 ; '.'
0000000000001d40         db  0x06 ; '.'
0000000000001d41         db  0x00 ; '.'
0000000000001d42         db  0x00 ; '.'
0000000000001d43         db  0x00 ; '.'
0000000000001d44         db  0x07 ; '.'
0000000000001d45         db  0x00 ; '.'
0000000000001d46         db  0x00 ; '.'
0000000000001d47         db  0x00 ; '.'
0000000000001d48         db  0x00 ; '.'
0000000000001d49         db  0x00 ; '.'
0000000000001d4a         db  0x00 ; '.'
0000000000001d4b         db  0x00 ; '.'
0000000000001d4c         db  0x00 ; '.'
0000000000001d4d         db  0x00 ; '.'
0000000000001d4e         db  0x00 ; '.'
0000000000001d4f         db  0x00 ; '.'
0000000000001d50         db  0xe0 ; '.'
0000000000001d51         db  0x0f ; '.'
0000000000001d52         db  0x21 ; '!'
0000000000001d53         db  0x00 ; '.'
0000000000001d54         db  0x00 ; '.'
0000000000001d55         db  0x00 ; '.'
0000000000001d56         db  0x00 ; '.'
0000000000001d57         db  0x00 ; '.'
0000000000001d58         db  0x06 ; '.'
0000000000001d59         db  0x00 ; '.'
0000000000001d5a         db  0x00 ; '.'
0000000000001d5b         db  0x00 ; '.'
0000000000001d5c         db  0x20 ; ' '
0000000000001d5d         db  0x00 ; '.'
0000000000001d5e         db  0x00 ; '.'
0000000000001d5f         db  0x00 ; '.'
0000000000001d60         db  0x00 ; '.'
0000000000001d61         db  0x00 ; '.'
0000000000001d62         db  0x00 ; '.'
0000000000001d63         db  0x00 ; '.'
0000000000001d64         db  0x00 ; '.'
0000000000001d65         db  0x00 ; '.'
0000000000001d66         db  0x00 ; '.'
0000000000001d67         db  0x00 ; '.'
0000000000001d68         db  0xe8 ; '.'
0000000000001d69         db  0x0f ; '.'
0000000000001d6a         db  0x21 ; '!'
0000000000001d6b         db  0x00 ; '.'
0000000000001d6c         db  0x00 ; '.'
0000000000001d6d         db  0x00 ; '.'
0000000000001d6e         db  0x00 ; '.'
0000000000001d6f         db  0x00 ; '.'
0000000000001d70         db  0x06 ; '.'
0000000000001d71         db  0x00 ; '.'
0000000000001d72         db  0x00 ; '.'
0000000000001d73         db  0x00 ; '.'
0000000000001d74         db  0x25 ; '%'
0000000000001d75         db  0x00 ; '.'
0000000000001d76         db  0x00 ; '.'
0000000000001d77         db  0x00 ; '.'
0000000000001d78         db  0x00 ; '.'
0000000000001d79         db  0x00 ; '.'
0000000000001d7a         db  0x00 ; '.'
0000000000001d7b         db  0x00 ; '.'
0000000000001d7c         db  0x00 ; '.'
0000000000001d7d         db  0x00 ; '.'
0000000000001d7e         db  0x00 ; '.'
0000000000001d7f         db  0x00 ; '.'
0000000000001d80         db  0xf0 ; '.'
0000000000001d81         db  0x0f ; '.'
0000000000001d82         db  0x21 ; '!'
0000000000001d83         db  0x00 ; '.'
0000000000001d84         db  0x00 ; '.'
0000000000001d85         db  0x00 ; '.'
0000000000001d86         db  0x00 ; '.'
0000000000001d87         db  0x00 ; '.'
0000000000001d88         db  0x06 ; '.'
0000000000001d89         db  0x00 ; '.'
0000000000001d8a         db  0x00 ; '.'
0000000000001d8b         db  0x00 ; '.'
0000000000001d8c         db  0x3c ; '<'
0000000000001d8d         db  0x00 ; '.'
0000000000001d8e         db  0x00 ; '.'
0000000000001d8f         db  0x00 ; '.'
0000000000001d90         db  0x00 ; '.'
0000000000001d91         db  0x00 ; '.'
0000000000001d92         db  0x00 ; '.'
0000000000001d93         db  0x00 ; '.'
0000000000001d94         db  0x00 ; '.'
0000000000001d95         db  0x00 ; '.'
0000000000001d96         db  0x00 ; '.'
0000000000001d97         db  0x00 ; '.'
0000000000001d98         db  0xf8 ; '.'
0000000000001d99         db  0x0f ; '.'
0000000000001d9a         db  0x21 ; '!'
0000000000001d9b         db  0x00 ; '.'
0000000000001d9c         db  0x00 ; '.'
0000000000001d9d         db  0x00 ; '.'
0000000000001d9e         db  0x00 ; '.'
0000000000001d9f         db  0x00 ; '.'
0000000000001da0         db  0x06 ; '.'
0000000000001da1         db  0x00 ; '.'
0000000000001da2         db  0x00 ; '.'
0000000000001da3         db  0x00 ; '.'
0000000000001da4         db  0x3f ; '?'
0000000000001da5         db  0x00 ; '.'
0000000000001da6         db  0x00 ; '.'
0000000000001da7         db  0x00 ; '.'
0000000000001da8         db  0x00 ; '.'
0000000000001da9         db  0x00 ; '.'
0000000000001daa         db  0x00 ; '.'
0000000000001dab         db  0x00 ; '.'
0000000000001dac         db  0x00 ; '.'
0000000000001dad         db  0x00 ; '.'
0000000000001dae         db  0x00 ; '.'
0000000000001daf         db  0x00 ; '.'
0000000000001db0         db  0xa0 ; '.'
0000000000001db1         db  0x10 ; '.'
0000000000001db2         db  0x21 ; '!'
0000000000001db3         db  0x00 ; '.'
0000000000001db4         db  0x00 ; '.'
0000000000001db5         db  0x00 ; '.'
0000000000001db6         db  0x00 ; '.'
0000000000001db7         db  0x00 ; '.'
0000000000001db8         db  0x05 ; '.'
0000000000001db9         db  0x00 ; '.'
0000000000001dba         db  0x00 ; '.'
0000000000001dbb         db  0x00 ; '.'
0000000000001dbc         db  0x42 ; 'B'
0000000000001dbd         db  0x00 ; '.'
0000000000001dbe         db  0x00 ; '.'
0000000000001dbf         db  0x00 ; '.'
0000000000001dc0         db  0x00 ; '.'
0000000000001dc1         db  0x00 ; '.'
0000000000001dc2         db  0x00 ; '.'
0000000000001dc3         db  0x00 ; '.'
0000000000001dc4         db  0x00 ; '.'
0000000000001dc5         db  0x00 ; '.'
0000000000001dc6         db  0x00 ; '.'
0000000000001dc7         db  0x00 ; '.'
0000000000001dc8         db  0xa8 ; '.'
0000000000001dc9         db  0x10 ; '.'
0000000000001dca         db  0x21 ; '!'
0000000000001dcb         db  0x00 ; '.'
0000000000001dcc         db  0x00 ; '.'
0000000000001dcd         db  0x00 ; '.'
0000000000001dce         db  0x00 ; '.'
0000000000001dcf         db  0x00 ; '.'
0000000000001dd0         db  0x05 ; '.'
0000000000001dd1         db  0x00 ; '.'
0000000000001dd2         db  0x00 ; '.'
0000000000001dd3         db  0x00 ; '.'
0000000000001dd4         db  0x41 ; 'A'
0000000000001dd5         db  0x00 ; '.'
0000000000001dd6         db  0x00 ; '.'
0000000000001dd7         db  0x00 ; '.'
0000000000001dd8         db  0x00 ; '.'
0000000000001dd9         db  0x00 ; '.'
0000000000001dda         db  0x00 ; '.'
0000000000001ddb         db  0x00 ; '.'
0000000000001ddc         db  0x00 ; '.'
0000000000001ddd         db  0x00 ; '.'
0000000000001dde         db  0x00 ; '.'
0000000000001ddf         db  0x00 ; '.'
0000000000001de0         db  0xb0 ; '.'
0000000000001de1         db  0x10 ; '.'
0000000000001de2         db  0x21 ; '!'
0000000000001de3         db  0x00 ; '.'
0000000000001de4         db  0x00 ; '.'
0000000000001de5         db  0x00 ; '.'
0000000000001de6         db  0x00 ; '.'
0000000000001de7         db  0x00 ; '.'
0000000000001de8         db  0x05 ; '.'
0000000000001de9         db  0x00 ; '.'
0000000000001dea         db  0x00 ; '.'
0000000000001deb         db  0x00 ; '.'
0000000000001dec         db  0x48 ; 'H'
0000000000001ded         db  0x00 ; '.'
0000000000001dee         db  0x00 ; '.'
0000000000001def         db  0x00 ; '.'
0000000000001df0         db  0x00 ; '.'
0000000000001df1         db  0x00 ; '.'
0000000000001df2         db  0x00 ; '.'
0000000000001df3         db  0x00 ; '.'
0000000000001df4         db  0x00 ; '.'
0000000000001df5         db  0x00 ; '.'
0000000000001df6         db  0x00 ; '.'
0000000000001df7         db  0x00 ; '.'
0000000000001df8         db  0xb8 ; '.'
0000000000001df9         db  0x10 ; '.'
0000000000001dfa         db  0x21 ; '!'
0000000000001dfb         db  0x00 ; '.'
0000000000001dfc         db  0x00 ; '.'
0000000000001dfd         db  0x00 ; '.'
0000000000001dfe         db  0x00 ; '.'
0000000000001dff         db  0x00 ; '.'
0000000000001e00         db  0x05 ; '.'
0000000000001e01         db  0x00 ; '.'
0000000000001e02         db  0x00 ; '.'
0000000000001e03         db  0x00 ; '.'
0000000000001e04         db  0x49 ; 'I'
0000000000001e05         db  0x00 ; '.'
0000000000001e06         db  0x00 ; '.'
0000000000001e07         db  0x00 ; '.'
0000000000001e08         db  0x00 ; '.'
0000000000001e09         db  0x00 ; '.'
0000000000001e0a         db  0x00 ; '.'
0000000000001e0b         db  0x00 ; '.'
0000000000001e0c         db  0x00 ; '.'
0000000000001e0d         db  0x00 ; '.'
0000000000001e0e         db  0x00 ; '.'
0000000000001e0f         db  0x00 ; '.'
0000000000001e10         db  0xc0 ; '.'
0000000000001e11         db  0x10 ; '.'
0000000000001e12         db  0x21 ; '!'
0000000000001e13         db  0x00 ; '.'
0000000000001e14         db  0x00 ; '.'
0000000000001e15         db  0x00 ; '.'
0000000000001e16         db  0x00 ; '.'
0000000000001e17         db  0x00 ; '.'
0000000000001e18         db  0x05 ; '.'
0000000000001e19         db  0x00 ; '.'
0000000000001e1a         db  0x00 ; '.'
0000000000001e1b         db  0x00 ; '.'
0000000000001e1c         db  0x44 ; 'D'
0000000000001e1d         db  0x00 ; '.'
0000000000001e1e         db  0x00 ; '.'
0000000000001e1f         db  0x00 ; '.'
0000000000001e20         db  0x00 ; '.'
0000000000001e21         db  0x00 ; '.'
0000000000001e22         db  0x00 ; '.'
0000000000001e23         db  0x00 ; '.'
0000000000001e24         db  0x00 ; '.'
0000000000001e25         db  0x00 ; '.'
0000000000001e26         db  0x00 ; '.'
0000000000001e27         db  0x00 ; '.'
0000000000001e28         db  0xe0 ; '.'
0000000000001e29         db  0x10 ; '.'
0000000000001e2a         db  0x21 ; '!'
0000000000001e2b         db  0x00 ; '.'
0000000000001e2c         db  0x00 ; '.'
0000000000001e2d         db  0x00 ; '.'
0000000000001e2e         db  0x00 ; '.'
0000000000001e2f         db  0x00 ; '.'
0000000000001e30         db  0x05 ; '.'
0000000000001e31         db  0x00 ; '.'
0000000000001e32         db  0x00 ; '.'
0000000000001e33         db  0x00 ; '.'
0000000000001e34         db  0x46 ; 'F'
0000000000001e35         db  0x00 ; '.'
0000000000001e36         db  0x00 ; '.'
0000000000001e37         db  0x00 ; '.'
0000000000001e38         db  0x00 ; '.'
0000000000001e39         db  0x00 ; '.'
0000000000001e3a         db  0x00 ; '.'
0000000000001e3b         db  0x00 ; '.'
0000000000001e3c         db  0x00 ; '.'
0000000000001e3d         db  0x00 ; '.'
0000000000001e3e         db  0x00 ; '.'
0000000000001e3f         db  0x00 ; '.'
0000000000001e40         db  0x00 ; '.'
0000000000001e41         db  0x11 ; '.'
0000000000001e42         db  0x21 ; '!'
0000000000001e43         db  0x00 ; '.'
0000000000001e44         db  0x00 ; '.'
0000000000001e45         db  0x00 ; '.'
0000000000001e46         db  0x00 ; '.'
0000000000001e47         db  0x00 ; '.'
0000000000001e48         db  0x05 ; '.'
0000000000001e49         db  0x00 ; '.'
0000000000001e4a         db  0x00 ; '.'
0000000000001e4b         db  0x00 ; '.'
0000000000001e4c         db  0x47 ; 'G'
0000000000001e4d         db  0x00 ; '.'
0000000000001e4e         db  0x00 ; '.'
0000000000001e4f         db  0x00 ; '.'
0000000000001e50         db  0x00 ; '.'
0000000000001e51         db  0x00 ; '.'
0000000000001e52         db  0x00 ; '.'
0000000000001e53         db  0x00 ; '.'
0000000000001e54         db  0x00 ; '.'
0000000000001e55         db  0x00 ; '.'
0000000000001e56         db  0x00 ; '.'
0000000000001e57         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0x1e58; 0x23e0[ (1416 bytes)
        ; File offset : [7768; 9184[ (1416 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000001e58         db  0x00 ; '.'
0000000000001e59         db  0x0e ; '.'
0000000000001e5a         db  0x21 ; '!'
0000000000001e5b         db  0x00 ; '.'
0000000000001e5c         db  0x00 ; '.'
0000000000001e5d         db  0x00 ; '.'
0000000000001e5e         db  0x00 ; '.'
0000000000001e5f         db  0x00 ; '.'
0000000000001e60         db  0x07 ; '.'
0000000000001e61         db  0x00 ; '.'
0000000000001e62         db  0x00 ; '.'
0000000000001e63         db  0x00 ; '.'
0000000000001e64         db  0x01 ; '.'
0000000000001e65         db  0x00 ; '.'
0000000000001e66         db  0x00 ; '.'
0000000000001e67         db  0x00 ; '.'
0000000000001e68         db  0x00 ; '.'
0000000000001e69         db  0x00 ; '.'
0000000000001e6a         db  0x00 ; '.'
0000000000001e6b         db  0x00 ; '.'
0000000000001e6c         db  0x00 ; '.'
0000000000001e6d         db  0x00 ; '.'
0000000000001e6e         db  0x00 ; '.'
0000000000001e6f         db  0x00 ; '.'
0000000000001e70         db  0x08 ; '.'
0000000000001e71         db  0x0e ; '.'
0000000000001e72         db  0x21 ; '!'
0000000000001e73         db  0x00 ; '.'
0000000000001e74         db  0x00 ; '.'
0000000000001e75         db  0x00 ; '.'
0000000000001e76         db  0x00 ; '.'
0000000000001e77         db  0x00 ; '.'
0000000000001e78         db  0x07 ; '.'
0000000000001e79         db  0x00 ; '.'
0000000000001e7a         db  0x00 ; '.'
0000000000001e7b         db  0x00 ; '.'
0000000000001e7c         db  0x02 ; '.'
0000000000001e7d         db  0x00 ; '.'
0000000000001e7e         db  0x00 ; '.'
0000000000001e7f         db  0x00 ; '.'
0000000000001e80         db  0x00 ; '.'
0000000000001e81         db  0x00 ; '.'
0000000000001e82         db  0x00 ; '.'
0000000000001e83         db  0x00 ; '.'
0000000000001e84         db  0x00 ; '.'
0000000000001e85         db  0x00 ; '.'
0000000000001e86         db  0x00 ; '.'
0000000000001e87         db  0x00 ; '.'
0000000000001e88         db  0x10 ; '.'
0000000000001e89         db  0x0e ; '.'
0000000000001e8a         db  0x21 ; '!'
0000000000001e8b         db  0x00 ; '.'
0000000000001e8c         db  0x00 ; '.'
0000000000001e8d         db  0x00 ; '.'
0000000000001e8e         db  0x00 ; '.'
0000000000001e8f         db  0x00 ; '.'
0000000000001e90         db  0x07 ; '.'
0000000000001e91         db  0x00 ; '.'
0000000000001e92         db  0x00 ; '.'
0000000000001e93         db  0x00 ; '.'
0000000000001e94         db  0x03 ; '.'
0000000000001e95         db  0x00 ; '.'
0000000000001e96         db  0x00 ; '.'
0000000000001e97         db  0x00 ; '.'
0000000000001e98         db  0x00 ; '.'
0000000000001e99         db  0x00 ; '.'
0000000000001e9a         db  0x00 ; '.'
0000000000001e9b         db  0x00 ; '.'
0000000000001e9c         db  0x00 ; '.'
0000000000001e9d         db  0x00 ; '.'
0000000000001e9e         db  0x00 ; '.'
0000000000001e9f         db  0x00 ; '.'
0000000000001ea0         db  0x18 ; '.'
0000000000001ea1         db  0x0e ; '.'
0000000000001ea2         db  0x21 ; '!'
0000000000001ea3         db  0x00 ; '.'
0000000000001ea4         db  0x00 ; '.'
0000000000001ea5         db  0x00 ; '.'
0000000000001ea6         db  0x00 ; '.'
0000000000001ea7         db  0x00 ; '.'
0000000000001ea8         db  0x07 ; '.'
0000000000001ea9         db  0x00 ; '.'
0000000000001eaa         db  0x00 ; '.'
0000000000001eab         db  0x00 ; '.'
0000000000001eac         db  0x04 ; '.'
0000000000001ead         db  0x00 ; '.'
0000000000001eae         db  0x00 ; '.'
0000000000001eaf         db  0x00 ; '.'
0000000000001eb0         db  0x00 ; '.'
0000000000001eb1         db  0x00 ; '.'
0000000000001eb2         db  0x00 ; '.'
0000000000001eb3         db  0x00 ; '.'
0000000000001eb4         db  0x00 ; '.'
0000000000001eb5         db  0x00 ; '.'
0000000000001eb6         db  0x00 ; '.'
0000000000001eb7         db  0x00 ; '.'
0000000000001eb8         db  0x20 ; ' '
0000000000001eb9         db  0x0e ; '.'
0000000000001eba         db  0x21 ; '!'
0000000000001ebb         db  0x00 ; '.'
0000000000001ebc         db  0x00 ; '.'
0000000000001ebd         db  0x00 ; '.'
0000000000001ebe         db  0x00 ; '.'
0000000000001ebf         db  0x00 ; '.'
0000000000001ec0         db  0x07 ; '.'
0000000000001ec1         db  0x00 ; '.'
0000000000001ec2         db  0x00 ; '.'
0000000000001ec3         db  0x00 ; '.'
0000000000001ec4         db  0x05 ; '.'
0000000000001ec5         db  0x00 ; '.'
0000000000001ec6         db  0x00 ; '.'
0000000000001ec7         db  0x00 ; '.'
0000000000001ec8         db  0x00 ; '.'
0000000000001ec9         db  0x00 ; '.'
0000000000001eca         db  0x00 ; '.'
0000000000001ecb         db  0x00 ; '.'
0000000000001ecc         db  0x00 ; '.'
0000000000001ecd         db  0x00 ; '.'
0000000000001ece         db  0x00 ; '.'
0000000000001ecf         db  0x00 ; '.'
0000000000001ed0         db  0x28 ; '('
0000000000001ed1         db  0x0e ; '.'
0000000000001ed2         db  0x21 ; '!'
0000000000001ed3         db  0x00 ; '.'
0000000000001ed4         db  0x00 ; '.'
0000000000001ed5         db  0x00 ; '.'
0000000000001ed6         db  0x00 ; '.'
0000000000001ed7         db  0x00 ; '.'
0000000000001ed8         db  0x07 ; '.'
0000000000001ed9         db  0x00 ; '.'
0000000000001eda         db  0x00 ; '.'
0000000000001edb         db  0x00 ; '.'
0000000000001edc         db  0x06 ; '.'
0000000000001edd         db  0x00 ; '.'
0000000000001ede         db  0x00 ; '.'
0000000000001edf         db  0x00 ; '.'
0000000000001ee0         db  0x00 ; '.'
0000000000001ee1         db  0x00 ; '.'
0000000000001ee2         db  0x00 ; '.'
0000000000001ee3         db  0x00 ; '.'
0000000000001ee4         db  0x00 ; '.'
0000000000001ee5         db  0x00 ; '.'
0000000000001ee6         db  0x00 ; '.'
0000000000001ee7         db  0x00 ; '.'
0000000000001ee8         db  0x30 ; '0'
0000000000001ee9         db  0x0e ; '.'
0000000000001eea         db  0x21 ; '!'
0000000000001eeb         db  0x00 ; '.'
0000000000001eec         db  0x00 ; '.'
0000000000001eed         db  0x00 ; '.'
0000000000001eee         db  0x00 ; '.'
0000000000001eef         db  0x00 ; '.'
0000000000001ef0         db  0x07 ; '.'
0000000000001ef1         db  0x00 ; '.'
0000000000001ef2         db  0x00 ; '.'
0000000000001ef3         db  0x00 ; '.'
0000000000001ef4         db  0x08 ; '.'
0000000000001ef5         db  0x00 ; '.'
0000000000001ef6         db  0x00 ; '.'
0000000000001ef7         db  0x00 ; '.'
0000000000001ef8         db  0x00 ; '.'
0000000000001ef9         db  0x00 ; '.'
0000000000001efa         db  0x00 ; '.'
0000000000001efb         db  0x00 ; '.'
0000000000001efc         db  0x00 ; '.'
0000000000001efd         db  0x00 ; '.'
0000000000001efe         db  0x00 ; '.'
0000000000001eff         db  0x00 ; '.'
0000000000001f00         db  0x38 ; '8'
0000000000001f01         db  0x0e ; '.'
0000000000001f02         db  0x21 ; '!'
0000000000001f03         db  0x00 ; '.'
0000000000001f04         db  0x00 ; '.'
0000000000001f05         db  0x00 ; '.'
0000000000001f06         db  0x00 ; '.'
0000000000001f07         db  0x00 ; '.'
0000000000001f08         db  0x07 ; '.'
0000000000001f09         db  0x00 ; '.'
0000000000001f0a         db  0x00 ; '.'
0000000000001f0b         db  0x00 ; '.'
0000000000001f0c         db  0x09 ; '.'
0000000000001f0d         db  0x00 ; '.'
0000000000001f0e         db  0x00 ; '.'
0000000000001f0f         db  0x00 ; '.'
0000000000001f10         db  0x00 ; '.'
0000000000001f11         db  0x00 ; '.'
0000000000001f12         db  0x00 ; '.'
0000000000001f13         db  0x00 ; '.'
0000000000001f14         db  0x00 ; '.'
0000000000001f15         db  0x00 ; '.'
0000000000001f16         db  0x00 ; '.'
0000000000001f17         db  0x00 ; '.'
0000000000001f18         db  0x40 ; '@'
0000000000001f19         db  0x0e ; '.'
0000000000001f1a         db  0x21 ; '!'
0000000000001f1b         db  0x00 ; '.'
0000000000001f1c         db  0x00 ; '.'
0000000000001f1d         db  0x00 ; '.'
0000000000001f1e         db  0x00 ; '.'
0000000000001f1f         db  0x00 ; '.'
0000000000001f20         db  0x07 ; '.'
0000000000001f21         db  0x00 ; '.'
0000000000001f22         db  0x00 ; '.'
0000000000001f23         db  0x00 ; '.'
0000000000001f24         db  0x0a ; '.'
0000000000001f25         db  0x00 ; '.'
0000000000001f26         db  0x00 ; '.'
0000000000001f27         db  0x00 ; '.'
0000000000001f28         db  0x00 ; '.'
0000000000001f29         db  0x00 ; '.'
0000000000001f2a         db  0x00 ; '.'
0000000000001f2b         db  0x00 ; '.'
0000000000001f2c         db  0x00 ; '.'
0000000000001f2d         db  0x00 ; '.'
0000000000001f2e         db  0x00 ; '.'
0000000000001f2f         db  0x00 ; '.'
0000000000001f30         db  0x48 ; 'H'
0000000000001f31         db  0x0e ; '.'
0000000000001f32         db  0x21 ; '!'
0000000000001f33         db  0x00 ; '.'
0000000000001f34         db  0x00 ; '.'
0000000000001f35         db  0x00 ; '.'
0000000000001f36         db  0x00 ; '.'
0000000000001f37         db  0x00 ; '.'
0000000000001f38         db  0x07 ; '.'
0000000000001f39         db  0x00 ; '.'
0000000000001f3a         db  0x00 ; '.'
0000000000001f3b         db  0x00 ; '.'
0000000000001f3c         db  0x0b ; '.'
0000000000001f3d         db  0x00 ; '.'
0000000000001f3e         db  0x00 ; '.'
0000000000001f3f         db  0x00 ; '.'
0000000000001f40         db  0x00 ; '.'
0000000000001f41         db  0x00 ; '.'
0000000000001f42         db  0x00 ; '.'
0000000000001f43         db  0x00 ; '.'
0000000000001f44         db  0x00 ; '.'
0000000000001f45         db  0x00 ; '.'
0000000000001f46         db  0x00 ; '.'
0000000000001f47         db  0x00 ; '.'
0000000000001f48         db  0x50 ; 'P'
0000000000001f49         db  0x0e ; '.'
0000000000001f4a         db  0x21 ; '!'
0000000000001f4b         db  0x00 ; '.'
0000000000001f4c         db  0x00 ; '.'
0000000000001f4d         db  0x00 ; '.'
0000000000001f4e         db  0x00 ; '.'
0000000000001f4f         db  0x00 ; '.'
0000000000001f50         db  0x07 ; '.'
0000000000001f51         db  0x00 ; '.'
0000000000001f52         db  0x00 ; '.'
0000000000001f53         db  0x00 ; '.'
0000000000001f54         db  0x0c ; '.'
0000000000001f55         db  0x00 ; '.'
0000000000001f56         db  0x00 ; '.'
0000000000001f57         db  0x00 ; '.'
0000000000001f58         db  0x00 ; '.'
0000000000001f59         db  0x00 ; '.'
0000000000001f5a         db  0x00 ; '.'
0000000000001f5b         db  0x00 ; '.'
0000000000001f5c         db  0x00 ; '.'
0000000000001f5d         db  0x00 ; '.'
0000000000001f5e         db  0x00 ; '.'
0000000000001f5f         db  0x00 ; '.'
0000000000001f60         db  0x58 ; 'X'
0000000000001f61         db  0x0e ; '.'
0000000000001f62         db  0x21 ; '!'
0000000000001f63         db  0x00 ; '.'
0000000000001f64         db  0x00 ; '.'
0000000000001f65         db  0x00 ; '.'
0000000000001f66         db  0x00 ; '.'
0000000000001f67         db  0x00 ; '.'
0000000000001f68         db  0x07 ; '.'
0000000000001f69         db  0x00 ; '.'
0000000000001f6a         db  0x00 ; '.'
0000000000001f6b         db  0x00 ; '.'
0000000000001f6c         db  0x0d ; '.'
0000000000001f6d         db  0x00 ; '.'
0000000000001f6e         db  0x00 ; '.'
0000000000001f6f         db  0x00 ; '.'
0000000000001f70         db  0x00 ; '.'
0000000000001f71         db  0x00 ; '.'
0000000000001f72         db  0x00 ; '.'
0000000000001f73         db  0x00 ; '.'
0000000000001f74         db  0x00 ; '.'
0000000000001f75         db  0x00 ; '.'
0000000000001f76         db  0x00 ; '.'
0000000000001f77         db  0x00 ; '.'
0000000000001f78         db  0x60 ; '`'
0000000000001f79         db  0x0e ; '.'
0000000000001f7a         db  0x21 ; '!'
0000000000001f7b         db  0x00 ; '.'
0000000000001f7c         db  0x00 ; '.'
0000000000001f7d         db  0x00 ; '.'
0000000000001f7e         db  0x00 ; '.'
0000000000001f7f         db  0x00 ; '.'
0000000000001f80         db  0x07 ; '.'
0000000000001f81         db  0x00 ; '.'
0000000000001f82         db  0x00 ; '.'
0000000000001f83         db  0x00 ; '.'
0000000000001f84         db  0x0e ; '.'
0000000000001f85         db  0x00 ; '.'
0000000000001f86         db  0x00 ; '.'
0000000000001f87         db  0x00 ; '.'
0000000000001f88         db  0x00 ; '.'
0000000000001f89         db  0x00 ; '.'
0000000000001f8a         db  0x00 ; '.'
0000000000001f8b         db  0x00 ; '.'
0000000000001f8c         db  0x00 ; '.'
0000000000001f8d         db  0x00 ; '.'
0000000000001f8e         db  0x00 ; '.'
0000000000001f8f         db  0x00 ; '.'
0000000000001f90         db  0x68 ; 'h'
0000000000001f91         db  0x0e ; '.'
0000000000001f92         db  0x21 ; '!'
0000000000001f93         db  0x00 ; '.'
0000000000001f94         db  0x00 ; '.'
0000000000001f95         db  0x00 ; '.'
0000000000001f96         db  0x00 ; '.'
0000000000001f97         db  0x00 ; '.'
0000000000001f98         db  0x07 ; '.'
0000000000001f99         db  0x00 ; '.'
0000000000001f9a         db  0x00 ; '.'
0000000000001f9b         db  0x00 ; '.'
0000000000001f9c         db  0x0f ; '.'
0000000000001f9d         db  0x00 ; '.'
0000000000001f9e         db  0x00 ; '.'
0000000000001f9f         db  0x00 ; '.'
0000000000001fa0         db  0x00 ; '.'
0000000000001fa1         db  0x00 ; '.'
0000000000001fa2         db  0x00 ; '.'
0000000000001fa3         db  0x00 ; '.'
0000000000001fa4         db  0x00 ; '.'
0000000000001fa5         db  0x00 ; '.'
0000000000001fa6         db  0x00 ; '.'
0000000000001fa7         db  0x00 ; '.'
0000000000001fa8         db  0x70 ; 'p'
0000000000001fa9         db  0x0e ; '.'
0000000000001faa         db  0x21 ; '!'
0000000000001fab         db  0x00 ; '.'
0000000000001fac         db  0x00 ; '.'
0000000000001fad         db  0x00 ; '.'
0000000000001fae         db  0x00 ; '.'
0000000000001faf         db  0x00 ; '.'
0000000000001fb0         db  0x07 ; '.'
0000000000001fb1         db  0x00 ; '.'
0000000000001fb2         db  0x00 ; '.'
0000000000001fb3         db  0x00 ; '.'
0000000000001fb4         db  0x10 ; '.'
0000000000001fb5         db  0x00 ; '.'
0000000000001fb6         db  0x00 ; '.'
0000000000001fb7         db  0x00 ; '.'
0000000000001fb8         db  0x00 ; '.'
0000000000001fb9         db  0x00 ; '.'
0000000000001fba         db  0x00 ; '.'
0000000000001fbb         db  0x00 ; '.'
0000000000001fbc         db  0x00 ; '.'
0000000000001fbd         db  0x00 ; '.'
0000000000001fbe         db  0x00 ; '.'
0000000000001fbf         db  0x00 ; '.'
0000000000001fc0         db  0x78 ; 'x'
0000000000001fc1         db  0x0e ; '.'
0000000000001fc2         db  0x21 ; '!'
0000000000001fc3         db  0x00 ; '.'
0000000000001fc4         db  0x00 ; '.'
0000000000001fc5         db  0x00 ; '.'
0000000000001fc6         db  0x00 ; '.'
0000000000001fc7         db  0x00 ; '.'
0000000000001fc8         db  0x07 ; '.'
0000000000001fc9         db  0x00 ; '.'
0000000000001fca         db  0x00 ; '.'
0000000000001fcb         db  0x00 ; '.'
0000000000001fcc         db  0x11 ; '.'
0000000000001fcd         db  0x00 ; '.'
0000000000001fce         db  0x00 ; '.'
0000000000001fcf         db  0x00 ; '.'
0000000000001fd0         db  0x00 ; '.'
0000000000001fd1         db  0x00 ; '.'
0000000000001fd2         db  0x00 ; '.'
0000000000001fd3         db  0x00 ; '.'
0000000000001fd4         db  0x00 ; '.'
0000000000001fd5         db  0x00 ; '.'
0000000000001fd6         db  0x00 ; '.'
0000000000001fd7         db  0x00 ; '.'
0000000000001fd8         db  0x80 ; '.'
0000000000001fd9         db  0x0e ; '.'
0000000000001fda         db  0x21 ; '!'
0000000000001fdb         db  0x00 ; '.'
0000000000001fdc         db  0x00 ; '.'
0000000000001fdd         db  0x00 ; '.'
0000000000001fde         db  0x00 ; '.'
0000000000001fdf         db  0x00 ; '.'
0000000000001fe0         db  0x07 ; '.'
0000000000001fe1         db  0x00 ; '.'
0000000000001fe2         db  0x00 ; '.'
0000000000001fe3         db  0x00 ; '.'
0000000000001fe4         db  0x12 ; '.'
0000000000001fe5         db  0x00 ; '.'
0000000000001fe6         db  0x00 ; '.'
0000000000001fe7         db  0x00 ; '.'
0000000000001fe8         db  0x00 ; '.'
0000000000001fe9         db  0x00 ; '.'
0000000000001fea         db  0x00 ; '.'
0000000000001feb         db  0x00 ; '.'
0000000000001fec         db  0x00 ; '.'
0000000000001fed         db  0x00 ; '.'
0000000000001fee         db  0x00 ; '.'
0000000000001fef         db  0x00 ; '.'
0000000000001ff0         db  0x88 ; '.'
0000000000001ff1         db  0x0e ; '.'
0000000000001ff2         db  0x21 ; '!'
0000000000001ff3         db  0x00 ; '.'
0000000000001ff4         db  0x00 ; '.'
0000000000001ff5         db  0x00 ; '.'
0000000000001ff6         db  0x00 ; '.'
0000000000001ff7         db  0x00 ; '.'
0000000000001ff8         db  0x07 ; '.'
0000000000001ff9         db  0x00 ; '.'
0000000000001ffa         db  0x00 ; '.'
0000000000001ffb         db  0x00 ; '.'
0000000000001ffc         db  0x13 ; '.'
0000000000001ffd         db  0x00 ; '.'
0000000000001ffe         db  0x00 ; '.'
0000000000001fff         db  0x00 ; '.'
0000000000002000         db  0x00 ; '.'
0000000000002001         db  0x00 ; '.'
0000000000002002         db  0x00 ; '.'
0000000000002003         db  0x00 ; '.'
0000000000002004         db  0x00 ; '.'
0000000000002005         db  0x00 ; '.'
0000000000002006         db  0x00 ; '.'
0000000000002007         db  0x00 ; '.'
0000000000002008         db  0x90 ; '.'
0000000000002009         db  0x0e ; '.'
000000000000200a         db  0x21 ; '!'
000000000000200b         db  0x00 ; '.'
000000000000200c         db  0x00 ; '.'
000000000000200d         db  0x00 ; '.'
000000000000200e         db  0x00 ; '.'
000000000000200f         db  0x00 ; '.'
0000000000002010         db  0x07 ; '.'
0000000000002011         db  0x00 ; '.'
0000000000002012         db  0x00 ; '.'
0000000000002013         db  0x00 ; '.'
0000000000002014         db  0x14 ; '.'
0000000000002015         db  0x00 ; '.'
0000000000002016         db  0x00 ; '.'
0000000000002017         db  0x00 ; '.'
0000000000002018         db  0x00 ; '.'
0000000000002019         db  0x00 ; '.'
000000000000201a         db  0x00 ; '.'
000000000000201b         db  0x00 ; '.'
000000000000201c         db  0x00 ; '.'
000000000000201d         db  0x00 ; '.'
000000000000201e         db  0x00 ; '.'
000000000000201f         db  0x00 ; '.'
0000000000002020         db  0x98 ; '.'
0000000000002021         db  0x0e ; '.'
0000000000002022         db  0x21 ; '!'
0000000000002023         db  0x00 ; '.'
0000000000002024         db  0x00 ; '.'
0000000000002025         db  0x00 ; '.'
0000000000002026         db  0x00 ; '.'
0000000000002027         db  0x00 ; '.'
0000000000002028         db  0x07 ; '.'
0000000000002029         db  0x00 ; '.'
000000000000202a         db  0x00 ; '.'
000000000000202b         db  0x00 ; '.'
000000000000202c         db  0x15 ; '.'
000000000000202d         db  0x00 ; '.'
000000000000202e         db  0x00 ; '.'
000000000000202f         db  0x00 ; '.'
0000000000002030         db  0x00 ; '.'
0000000000002031         db  0x00 ; '.'
0000000000002032         db  0x00 ; '.'
0000000000002033         db  0x00 ; '.'
0000000000002034         db  0x00 ; '.'
0000000000002035         db  0x00 ; '.'
0000000000002036         db  0x00 ; '.'
0000000000002037         db  0x00 ; '.'
0000000000002038         db  0xa0 ; '.'
0000000000002039         db  0x0e ; '.'
000000000000203a         db  0x21 ; '!'
000000000000203b         db  0x00 ; '.'
000000000000203c         db  0x00 ; '.'
000000000000203d         db  0x00 ; '.'
000000000000203e         db  0x00 ; '.'
000000000000203f         db  0x00 ; '.'
0000000000002040         db  0x07 ; '.'
0000000000002041         db  0x00 ; '.'
0000000000002042         db  0x00 ; '.'
0000000000002043         db  0x00 ; '.'
0000000000002044         db  0x16 ; '.'
0000000000002045         db  0x00 ; '.'
0000000000002046         db  0x00 ; '.'
0000000000002047         db  0x00 ; '.'
0000000000002048         db  0x00 ; '.'
0000000000002049         db  0x00 ; '.'
000000000000204a         db  0x00 ; '.'
000000000000204b         db  0x00 ; '.'
000000000000204c         db  0x00 ; '.'
000000000000204d         db  0x00 ; '.'
000000000000204e         db  0x00 ; '.'
000000000000204f         db  0x00 ; '.'
0000000000002050         db  0xa8 ; '.'
0000000000002051         db  0x0e ; '.'
0000000000002052         db  0x21 ; '!'
0000000000002053         db  0x00 ; '.'
0000000000002054         db  0x00 ; '.'
0000000000002055         db  0x00 ; '.'
0000000000002056         db  0x00 ; '.'
0000000000002057         db  0x00 ; '.'
0000000000002058         db  0x07 ; '.'
0000000000002059         db  0x00 ; '.'
000000000000205a         db  0x00 ; '.'
000000000000205b         db  0x00 ; '.'
000000000000205c         db  0x17 ; '.'
000000000000205d         db  0x00 ; '.'
000000000000205e         db  0x00 ; '.'
000000000000205f         db  0x00 ; '.'
0000000000002060         db  0x00 ; '.'
0000000000002061         db  0x00 ; '.'
0000000000002062         db  0x00 ; '.'
0000000000002063         db  0x00 ; '.'
0000000000002064         db  0x00 ; '.'
0000000000002065         db  0x00 ; '.'
0000000000002066         db  0x00 ; '.'
0000000000002067         db  0x00 ; '.'
0000000000002068         db  0xb0 ; '.'
0000000000002069         db  0x0e ; '.'
000000000000206a         db  0x21 ; '!'
000000000000206b         db  0x00 ; '.'
000000000000206c         db  0x00 ; '.'
000000000000206d         db  0x00 ; '.'
000000000000206e         db  0x00 ; '.'
000000000000206f         db  0x00 ; '.'
0000000000002070         db  0x07 ; '.'
0000000000002071         db  0x00 ; '.'
0000000000002072         db  0x00 ; '.'
0000000000002073         db  0x00 ; '.'
0000000000002074         db  0x18 ; '.'
0000000000002075         db  0x00 ; '.'
0000000000002076         db  0x00 ; '.'
0000000000002077         db  0x00 ; '.'
0000000000002078         db  0x00 ; '.'
0000000000002079         db  0x00 ; '.'
000000000000207a         db  0x00 ; '.'
000000000000207b         db  0x00 ; '.'
000000000000207c         db  0x00 ; '.'
000000000000207d         db  0x00 ; '.'
000000000000207e         db  0x00 ; '.'
000000000000207f         db  0x00 ; '.'
0000000000002080         db  0xb8 ; '.'
0000000000002081         db  0x0e ; '.'
0000000000002082         db  0x21 ; '!'
0000000000002083         db  0x00 ; '.'
0000000000002084         db  0x00 ; '.'
0000000000002085         db  0x00 ; '.'
0000000000002086         db  0x00 ; '.'
0000000000002087         db  0x00 ; '.'
0000000000002088         db  0x07 ; '.'
0000000000002089         db  0x00 ; '.'
000000000000208a         db  0x00 ; '.'
000000000000208b         db  0x00 ; '.'
000000000000208c         db  0x19 ; '.'
000000000000208d         db  0x00 ; '.'
000000000000208e         db  0x00 ; '.'
000000000000208f         db  0x00 ; '.'
0000000000002090         db  0x00 ; '.'
0000000000002091         db  0x00 ; '.'
0000000000002092         db  0x00 ; '.'
0000000000002093         db  0x00 ; '.'
0000000000002094         db  0x00 ; '.'
0000000000002095         db  0x00 ; '.'
0000000000002096         db  0x00 ; '.'
0000000000002097         db  0x00 ; '.'
0000000000002098         db  0xc0 ; '.'
0000000000002099         db  0x0e ; '.'
000000000000209a         db  0x21 ; '!'
000000000000209b         db  0x00 ; '.'
000000000000209c         db  0x00 ; '.'
000000000000209d         db  0x00 ; '.'
000000000000209e         db  0x00 ; '.'
000000000000209f         db  0x00 ; '.'
00000000000020a0         db  0x07 ; '.'
00000000000020a1         db  0x00 ; '.'
00000000000020a2         db  0x00 ; '.'
00000000000020a3         db  0x00 ; '.'
00000000000020a4         db  0x1a ; '.'
00000000000020a5         db  0x00 ; '.'
00000000000020a6         db  0x00 ; '.'
00000000000020a7         db  0x00 ; '.'
00000000000020a8         db  0x00 ; '.'
00000000000020a9         db  0x00 ; '.'
00000000000020aa         db  0x00 ; '.'
00000000000020ab         db  0x00 ; '.'
00000000000020ac         db  0x00 ; '.'
00000000000020ad         db  0x00 ; '.'
00000000000020ae         db  0x00 ; '.'
00000000000020af         db  0x00 ; '.'
00000000000020b0         db  0xc8 ; '.'
00000000000020b1         db  0x0e ; '.'
00000000000020b2         db  0x21 ; '!'
00000000000020b3         db  0x00 ; '.'
00000000000020b4         db  0x00 ; '.'
00000000000020b5         db  0x00 ; '.'
00000000000020b6         db  0x00 ; '.'
00000000000020b7         db  0x00 ; '.'
00000000000020b8         db  0x07 ; '.'
00000000000020b9         db  0x00 ; '.'
00000000000020ba         db  0x00 ; '.'
00000000000020bb         db  0x00 ; '.'
00000000000020bc         db  0x1b ; '.'
00000000000020bd         db  0x00 ; '.'
00000000000020be         db  0x00 ; '.'
00000000000020bf         db  0x00 ; '.'
00000000000020c0         db  0x00 ; '.'
00000000000020c1         db  0x00 ; '.'
00000000000020c2         db  0x00 ; '.'
00000000000020c3         db  0x00 ; '.'
00000000000020c4         db  0x00 ; '.'
00000000000020c5         db  0x00 ; '.'
00000000000020c6         db  0x00 ; '.'
00000000000020c7         db  0x00 ; '.'
00000000000020c8         db  0xd0 ; '.'
00000000000020c9         db  0x0e ; '.'
00000000000020ca         db  0x21 ; '!'
00000000000020cb         db  0x00 ; '.'
00000000000020cc         db  0x00 ; '.'
00000000000020cd         db  0x00 ; '.'
00000000000020ce         db  0x00 ; '.'
00000000000020cf         db  0x00 ; '.'
00000000000020d0         db  0x07 ; '.'
00000000000020d1         db  0x00 ; '.'
00000000000020d2         db  0x00 ; '.'
00000000000020d3         db  0x00 ; '.'
00000000000020d4         db  0x1c ; '.'
00000000000020d5         db  0x00 ; '.'
00000000000020d6         db  0x00 ; '.'
00000000000020d7         db  0x00 ; '.'
00000000000020d8         db  0x00 ; '.'
00000000000020d9         db  0x00 ; '.'
00000000000020da         db  0x00 ; '.'
00000000000020db         db  0x00 ; '.'
00000000000020dc         db  0x00 ; '.'
00000000000020dd         db  0x00 ; '.'
00000000000020de         db  0x00 ; '.'
00000000000020df         db  0x00 ; '.'
00000000000020e0         db  0xd8 ; '.'
00000000000020e1         db  0x0e ; '.'
00000000000020e2         db  0x21 ; '!'
00000000000020e3         db  0x00 ; '.'
00000000000020e4         db  0x00 ; '.'
00000000000020e5         db  0x00 ; '.'
00000000000020e6         db  0x00 ; '.'
00000000000020e7         db  0x00 ; '.'
00000000000020e8         db  0x07 ; '.'
00000000000020e9         db  0x00 ; '.'
00000000000020ea         db  0x00 ; '.'
00000000000020eb         db  0x00 ; '.'
00000000000020ec         db  0x1d ; '.'
00000000000020ed         db  0x00 ; '.'
00000000000020ee         db  0x00 ; '.'
00000000000020ef         db  0x00 ; '.'
00000000000020f0         db  0x00 ; '.'
00000000000020f1         db  0x00 ; '.'
00000000000020f2         db  0x00 ; '.'
00000000000020f3         db  0x00 ; '.'
00000000000020f4         db  0x00 ; '.'
00000000000020f5         db  0x00 ; '.'
00000000000020f6         db  0x00 ; '.'
00000000000020f7         db  0x00 ; '.'
00000000000020f8         db  0xe0 ; '.'
00000000000020f9         db  0x0e ; '.'
00000000000020fa         db  0x21 ; '!'
00000000000020fb         db  0x00 ; '.'
00000000000020fc         db  0x00 ; '.'
00000000000020fd         db  0x00 ; '.'
00000000000020fe         db  0x00 ; '.'
00000000000020ff         db  0x00 ; '.'
0000000000002100         db  0x07 ; '.'
0000000000002101         db  0x00 ; '.'
0000000000002102         db  0x00 ; '.'
0000000000002103         db  0x00 ; '.'
0000000000002104         db  0x1e ; '.'
0000000000002105         db  0x00 ; '.'
0000000000002106         db  0x00 ; '.'
0000000000002107         db  0x00 ; '.'
0000000000002108         db  0x00 ; '.'
0000000000002109         db  0x00 ; '.'
000000000000210a         db  0x00 ; '.'
000000000000210b         db  0x00 ; '.'
000000000000210c         db  0x00 ; '.'
000000000000210d         db  0x00 ; '.'
000000000000210e         db  0x00 ; '.'
000000000000210f         db  0x00 ; '.'
0000000000002110         db  0xe8 ; '.'
0000000000002111         db  0x0e ; '.'
0000000000002112         db  0x21 ; '!'
0000000000002113         db  0x00 ; '.'
0000000000002114         db  0x00 ; '.'
0000000000002115         db  0x00 ; '.'
0000000000002116         db  0x00 ; '.'
0000000000002117         db  0x00 ; '.'
0000000000002118         db  0x07 ; '.'
0000000000002119         db  0x00 ; '.'
000000000000211a         db  0x00 ; '.'
000000000000211b         db  0x00 ; '.'
000000000000211c         db  0x1f ; '.'
000000000000211d         db  0x00 ; '.'
000000000000211e         db  0x00 ; '.'
000000000000211f         db  0x00 ; '.'
0000000000002120         db  0x00 ; '.'
0000000000002121         db  0x00 ; '.'
0000000000002122         db  0x00 ; '.'
0000000000002123         db  0x00 ; '.'
0000000000002124         db  0x00 ; '.'
0000000000002125         db  0x00 ; '.'
0000000000002126         db  0x00 ; '.'
0000000000002127         db  0x00 ; '.'
0000000000002128         db  0xf0 ; '.'
0000000000002129         db  0x0e ; '.'
000000000000212a         db  0x21 ; '!'
000000000000212b         db  0x00 ; '.'
000000000000212c         db  0x00 ; '.'
000000000000212d         db  0x00 ; '.'
000000000000212e         db  0x00 ; '.'
000000000000212f         db  0x00 ; '.'
0000000000002130         db  0x07 ; '.'
0000000000002131         db  0x00 ; '.'
0000000000002132         db  0x00 ; '.'
0000000000002133         db  0x00 ; '.'
0000000000002134         db  0x21 ; '!'
0000000000002135         db  0x00 ; '.'
0000000000002136         db  0x00 ; '.'
0000000000002137         db  0x00 ; '.'
0000000000002138         db  0x00 ; '.'
0000000000002139         db  0x00 ; '.'
000000000000213a         db  0x00 ; '.'
000000000000213b         db  0x00 ; '.'
000000000000213c         db  0x00 ; '.'
000000000000213d         db  0x00 ; '.'
000000000000213e         db  0x00 ; '.'
000000000000213f         db  0x00 ; '.'
0000000000002140         db  0xf8 ; '.'
0000000000002141         db  0x0e ; '.'
0000000000002142         db  0x21 ; '!'
0000000000002143         db  0x00 ; '.'
0000000000002144         db  0x00 ; '.'
0000000000002145         db  0x00 ; '.'
0000000000002146         db  0x00 ; '.'
0000000000002147         db  0x00 ; '.'
0000000000002148         db  0x07 ; '.'
0000000000002149         db  0x00 ; '.'
000000000000214a         db  0x00 ; '.'
000000000000214b         db  0x00 ; '.'
000000000000214c         db  0x22 ; '"'
000000000000214d         db  0x00 ; '.'
000000000000214e         db  0x00 ; '.'
000000000000214f         db  0x00 ; '.'
0000000000002150         db  0x00 ; '.'
0000000000002151         db  0x00 ; '.'
0000000000002152         db  0x00 ; '.'
0000000000002153         db  0x00 ; '.'
0000000000002154         db  0x00 ; '.'
0000000000002155         db  0x00 ; '.'
0000000000002156         db  0x00 ; '.'
0000000000002157         db  0x00 ; '.'
0000000000002158         db  0x00 ; '.'
0000000000002159         db  0x0f ; '.'
000000000000215a         db  0x21 ; '!'
000000000000215b         db  0x00 ; '.'
000000000000215c         db  0x00 ; '.'
000000000000215d         db  0x00 ; '.'
000000000000215e         db  0x00 ; '.'
000000000000215f         db  0x00 ; '.'
0000000000002160         db  0x07 ; '.'
0000000000002161         db  0x00 ; '.'
0000000000002162         db  0x00 ; '.'
0000000000002163         db  0x00 ; '.'
0000000000002164         db  0x23 ; '#'
0000000000002165         db  0x00 ; '.'
0000000000002166         db  0x00 ; '.'
0000000000002167         db  0x00 ; '.'
0000000000002168         db  0x00 ; '.'
0000000000002169         db  0x00 ; '.'
000000000000216a         db  0x00 ; '.'
000000000000216b         db  0x00 ; '.'
000000000000216c         db  0x00 ; '.'
000000000000216d         db  0x00 ; '.'
000000000000216e         db  0x00 ; '.'
000000000000216f         db  0x00 ; '.'
0000000000002170         db  0x08 ; '.'
0000000000002171         db  0x0f ; '.'
0000000000002172         db  0x21 ; '!'
0000000000002173         db  0x00 ; '.'
0000000000002174         db  0x00 ; '.'
0000000000002175         db  0x00 ; '.'
0000000000002176         db  0x00 ; '.'
0000000000002177         db  0x00 ; '.'
0000000000002178         db  0x07 ; '.'
0000000000002179         db  0x00 ; '.'
000000000000217a         db  0x00 ; '.'
000000000000217b         db  0x00 ; '.'
000000000000217c         db  0x24 ; '$'
000000000000217d         db  0x00 ; '.'
000000000000217e         db  0x00 ; '.'
000000000000217f         db  0x00 ; '.'
0000000000002180         db  0x00 ; '.'
0000000000002181         db  0x00 ; '.'
0000000000002182         db  0x00 ; '.'
0000000000002183         db  0x00 ; '.'
0000000000002184         db  0x00 ; '.'
0000000000002185         db  0x00 ; '.'
0000000000002186         db  0x00 ; '.'
0000000000002187         db  0x00 ; '.'
0000000000002188         db  0x10 ; '.'
0000000000002189         db  0x0f ; '.'
000000000000218a         db  0x21 ; '!'
000000000000218b         db  0x00 ; '.'
000000000000218c         db  0x00 ; '.'
000000000000218d         db  0x00 ; '.'
000000000000218e         db  0x00 ; '.'
000000000000218f         db  0x00 ; '.'
0000000000002190         db  0x07 ; '.'
0000000000002191         db  0x00 ; '.'
0000000000002192         db  0x00 ; '.'
0000000000002193         db  0x00 ; '.'
0000000000002194         db  0x26 ; '&'
0000000000002195         db  0x00 ; '.'
0000000000002196         db  0x00 ; '.'
0000000000002197         db  0x00 ; '.'
0000000000002198         db  0x00 ; '.'
0000000000002199         db  0x00 ; '.'
000000000000219a         db  0x00 ; '.'
000000000000219b         db  0x00 ; '.'
000000000000219c         db  0x00 ; '.'
000000000000219d         db  0x00 ; '.'
000000000000219e         db  0x00 ; '.'
000000000000219f         db  0x00 ; '.'
00000000000021a0         db  0x18 ; '.'
00000000000021a1         db  0x0f ; '.'
00000000000021a2         db  0x21 ; '!'
00000000000021a3         db  0x00 ; '.'
00000000000021a4         db  0x00 ; '.'
00000000000021a5         db  0x00 ; '.'
00000000000021a6         db  0x00 ; '.'
00000000000021a7         db  0x00 ; '.'
00000000000021a8         db  0x07 ; '.'
00000000000021a9         db  0x00 ; '.'
00000000000021aa         db  0x00 ; '.'
00000000000021ab         db  0x00 ; '.'
00000000000021ac         db  0x27 ; '''
00000000000021ad         db  0x00 ; '.'
00000000000021ae         db  0x00 ; '.'
00000000000021af         db  0x00 ; '.'
00000000000021b0         db  0x00 ; '.'
00000000000021b1         db  0x00 ; '.'
00000000000021b2         db  0x00 ; '.'
00000000000021b3         db  0x00 ; '.'
00000000000021b4         db  0x00 ; '.'
00000000000021b5         db  0x00 ; '.'
00000000000021b6         db  0x00 ; '.'
00000000000021b7         db  0x00 ; '.'
00000000000021b8         db  0x20 ; ' '
00000000000021b9         db  0x0f ; '.'
00000000000021ba         db  0x21 ; '!'
00000000000021bb         db  0x00 ; '.'
00000000000021bc         db  0x00 ; '.'
00000000000021bd         db  0x00 ; '.'
00000000000021be         db  0x00 ; '.'
00000000000021bf         db  0x00 ; '.'
00000000000021c0         db  0x07 ; '.'
00000000000021c1         db  0x00 ; '.'
00000000000021c2         db  0x00 ; '.'
00000000000021c3         db  0x00 ; '.'
00000000000021c4         db  0x28 ; '('
00000000000021c5         db  0x00 ; '.'
00000000000021c6         db  0x00 ; '.'
00000000000021c7         db  0x00 ; '.'
00000000000021c8         db  0x00 ; '.'
00000000000021c9         db  0x00 ; '.'
00000000000021ca         db  0x00 ; '.'
00000000000021cb         db  0x00 ; '.'
00000000000021cc         db  0x00 ; '.'
00000000000021cd         db  0x00 ; '.'
00000000000021ce         db  0x00 ; '.'
00000000000021cf         db  0x00 ; '.'
00000000000021d0         db  0x28 ; '('
00000000000021d1         db  0x0f ; '.'
00000000000021d2         db  0x21 ; '!'
00000000000021d3         db  0x00 ; '.'
00000000000021d4         db  0x00 ; '.'
00000000000021d5         db  0x00 ; '.'
00000000000021d6         db  0x00 ; '.'
00000000000021d7         db  0x00 ; '.'
00000000000021d8         db  0x07 ; '.'
00000000000021d9         db  0x00 ; '.'
00000000000021da         db  0x00 ; '.'
00000000000021db         db  0x00 ; '.'
00000000000021dc         db  0x29 ; ')'
00000000000021dd         db  0x00 ; '.'
00000000000021de         db  0x00 ; '.'
00000000000021df         db  0x00 ; '.'
00000000000021e0         db  0x00 ; '.'
00000000000021e1         db  0x00 ; '.'
00000000000021e2         db  0x00 ; '.'
00000000000021e3         db  0x00 ; '.'
00000000000021e4         db  0x00 ; '.'
00000000000021e5         db  0x00 ; '.'
00000000000021e6         db  0x00 ; '.'
00000000000021e7         db  0x00 ; '.'
00000000000021e8         db  0x30 ; '0'
00000000000021e9         db  0x0f ; '.'
00000000000021ea         db  0x21 ; '!'
00000000000021eb         db  0x00 ; '.'
00000000000021ec         db  0x00 ; '.'
00000000000021ed         db  0x00 ; '.'
00000000000021ee         db  0x00 ; '.'
00000000000021ef         db  0x00 ; '.'
00000000000021f0         db  0x07 ; '.'
00000000000021f1         db  0x00 ; '.'
00000000000021f2         db  0x00 ; '.'
00000000000021f3         db  0x00 ; '.'
00000000000021f4         db  0x2a ; '*'
00000000000021f5         db  0x00 ; '.'
00000000000021f6         db  0x00 ; '.'
00000000000021f7         db  0x00 ; '.'
00000000000021f8         db  0x00 ; '.'
00000000000021f9         db  0x00 ; '.'
00000000000021fa         db  0x00 ; '.'
00000000000021fb         db  0x00 ; '.'
00000000000021fc         db  0x00 ; '.'
00000000000021fd         db  0x00 ; '.'
00000000000021fe         db  0x00 ; '.'
00000000000021ff         db  0x00 ; '.'
0000000000002200         db  0x38 ; '8'
0000000000002201         db  0x0f ; '.'
0000000000002202         db  0x21 ; '!'
0000000000002203         db  0x00 ; '.'
0000000000002204         db  0x00 ; '.'
0000000000002205         db  0x00 ; '.'
0000000000002206         db  0x00 ; '.'
0000000000002207         db  0x00 ; '.'
0000000000002208         db  0x07 ; '.'
0000000000002209         db  0x00 ; '.'
000000000000220a         db  0x00 ; '.'
000000000000220b         db  0x00 ; '.'
000000000000220c         db  0x2b ; '+'
000000000000220d         db  0x00 ; '.'
000000000000220e         db  0x00 ; '.'
000000000000220f         db  0x00 ; '.'
0000000000002210         db  0x00 ; '.'
0000000000002211         db  0x00 ; '.'
0000000000002212         db  0x00 ; '.'
0000000000002213         db  0x00 ; '.'
0000000000002214         db  0x00 ; '.'
0000000000002215         db  0x00 ; '.'
0000000000002216         db  0x00 ; '.'
0000000000002217         db  0x00 ; '.'
0000000000002218         db  0x40 ; '@'
0000000000002219         db  0x0f ; '.'
000000000000221a         db  0x21 ; '!'
000000000000221b         db  0x00 ; '.'
000000000000221c         db  0x00 ; '.'
000000000000221d         db  0x00 ; '.'
000000000000221e         db  0x00 ; '.'
000000000000221f         db  0x00 ; '.'
0000000000002220         db  0x07 ; '.'
0000000000002221         db  0x00 ; '.'
0000000000002222         db  0x00 ; '.'
0000000000002223         db  0x00 ; '.'
0000000000002224         db  0x2c ; ','
0000000000002225         db  0x00 ; '.'
0000000000002226         db  0x00 ; '.'
0000000000002227         db  0x00 ; '.'
0000000000002228         db  0x00 ; '.'
0000000000002229         db  0x00 ; '.'
000000000000222a         db  0x00 ; '.'
000000000000222b         db  0x00 ; '.'
000000000000222c         db  0x00 ; '.'
000000000000222d         db  0x00 ; '.'
000000000000222e         db  0x00 ; '.'
000000000000222f         db  0x00 ; '.'
0000000000002230         db  0x48 ; 'H'
0000000000002231         db  0x0f ; '.'
0000000000002232         db  0x21 ; '!'
0000000000002233         db  0x00 ; '.'
0000000000002234         db  0x00 ; '.'
0000000000002235         db  0x00 ; '.'
0000000000002236         db  0x00 ; '.'
0000000000002237         db  0x00 ; '.'
0000000000002238         db  0x07 ; '.'
0000000000002239         db  0x00 ; '.'
000000000000223a         db  0x00 ; '.'
000000000000223b         db  0x00 ; '.'
000000000000223c         db  0x2d ; '-'
000000000000223d         db  0x00 ; '.'
000000000000223e         db  0x00 ; '.'
000000000000223f         db  0x00 ; '.'
0000000000002240         db  0x00 ; '.'
0000000000002241         db  0x00 ; '.'
0000000000002242         db  0x00 ; '.'
0000000000002243         db  0x00 ; '.'
0000000000002244         db  0x00 ; '.'
0000000000002245         db  0x00 ; '.'
0000000000002246         db  0x00 ; '.'
0000000000002247         db  0x00 ; '.'
0000000000002248         db  0x50 ; 'P'
0000000000002249         db  0x0f ; '.'
000000000000224a         db  0x21 ; '!'
000000000000224b         db  0x00 ; '.'
000000000000224c         db  0x00 ; '.'
000000000000224d         db  0x00 ; '.'
000000000000224e         db  0x00 ; '.'
000000000000224f         db  0x00 ; '.'
0000000000002250         db  0x07 ; '.'
0000000000002251         db  0x00 ; '.'
0000000000002252         db  0x00 ; '.'
0000000000002253         db  0x00 ; '.'
0000000000002254         db  0x2e ; '.'
0000000000002255         db  0x00 ; '.'
0000000000002256         db  0x00 ; '.'
0000000000002257         db  0x00 ; '.'
0000000000002258         db  0x00 ; '.'
0000000000002259         db  0x00 ; '.'
000000000000225a         db  0x00 ; '.'
000000000000225b         db  0x00 ; '.'
000000000000225c         db  0x00 ; '.'
000000000000225d         db  0x00 ; '.'
000000000000225e         db  0x00 ; '.'
000000000000225f         db  0x00 ; '.'
0000000000002260         db  0x58 ; 'X'
0000000000002261         db  0x0f ; '.'
0000000000002262         db  0x21 ; '!'
0000000000002263         db  0x00 ; '.'
0000000000002264         db  0x00 ; '.'
0000000000002265         db  0x00 ; '.'
0000000000002266         db  0x00 ; '.'
0000000000002267         db  0x00 ; '.'
0000000000002268         db  0x07 ; '.'
0000000000002269         db  0x00 ; '.'
000000000000226a         db  0x00 ; '.'
000000000000226b         db  0x00 ; '.'
000000000000226c         db  0x2f ; '/'
000000000000226d         db  0x00 ; '.'
000000000000226e         db  0x00 ; '.'
000000000000226f         db  0x00 ; '.'
0000000000002270         db  0x00 ; '.'
0000000000002271         db  0x00 ; '.'
0000000000002272         db  0x00 ; '.'
0000000000002273         db  0x00 ; '.'
0000000000002274         db  0x00 ; '.'
0000000000002275         db  0x00 ; '.'
0000000000002276         db  0x00 ; '.'
0000000000002277         db  0x00 ; '.'
0000000000002278         db  0x60 ; '`'
0000000000002279         db  0x0f ; '.'
000000000000227a         db  0x21 ; '!'
000000000000227b         db  0x00 ; '.'
000000000000227c         db  0x00 ; '.'
000000000000227d         db  0x00 ; '.'
000000000000227e         db  0x00 ; '.'
000000000000227f         db  0x00 ; '.'
0000000000002280         db  0x07 ; '.'
0000000000002281         db  0x00 ; '.'
0000000000002282         db  0x00 ; '.'
0000000000002283         db  0x00 ; '.'
0000000000002284         db  0x30 ; '0'
0000000000002285         db  0x00 ; '.'
0000000000002286         db  0x00 ; '.'
0000000000002287         db  0x00 ; '.'
0000000000002288         db  0x00 ; '.'
0000000000002289         db  0x00 ; '.'
000000000000228a         db  0x00 ; '.'
000000000000228b         db  0x00 ; '.'
000000000000228c         db  0x00 ; '.'
000000000000228d         db  0x00 ; '.'
000000000000228e         db  0x00 ; '.'
000000000000228f         db  0x00 ; '.'
0000000000002290         db  0x68 ; 'h'
0000000000002291         db  0x0f ; '.'
0000000000002292         db  0x21 ; '!'
0000000000002293         db  0x00 ; '.'
0000000000002294         db  0x00 ; '.'
0000000000002295         db  0x00 ; '.'
0000000000002296         db  0x00 ; '.'
0000000000002297         db  0x00 ; '.'
0000000000002298         db  0x07 ; '.'
0000000000002299         db  0x00 ; '.'
000000000000229a         db  0x00 ; '.'
000000000000229b         db  0x00 ; '.'
000000000000229c         db  0x31 ; '1'
000000000000229d         db  0x00 ; '.'
000000000000229e         db  0x00 ; '.'
000000000000229f         db  0x00 ; '.'
00000000000022a0         db  0x00 ; '.'
00000000000022a1         db  0x00 ; '.'
00000000000022a2         db  0x00 ; '.'
00000000000022a3         db  0x00 ; '.'
00000000000022a4         db  0x00 ; '.'
00000000000022a5         db  0x00 ; '.'
00000000000022a6         db  0x00 ; '.'
00000000000022a7         db  0x00 ; '.'
00000000000022a8         db  0x70 ; 'p'
00000000000022a9         db  0x0f ; '.'
00000000000022aa         db  0x21 ; '!'
00000000000022ab         db  0x00 ; '.'
00000000000022ac         db  0x00 ; '.'
00000000000022ad         db  0x00 ; '.'
00000000000022ae         db  0x00 ; '.'
00000000000022af         db  0x00 ; '.'
00000000000022b0         db  0x07 ; '.'
00000000000022b1         db  0x00 ; '.'
00000000000022b2         db  0x00 ; '.'
00000000000022b3         db  0x00 ; '.'
00000000000022b4         db  0x32 ; '2'
00000000000022b5         db  0x00 ; '.'
00000000000022b6         db  0x00 ; '.'
00000000000022b7         db  0x00 ; '.'
00000000000022b8         db  0x00 ; '.'
00000000000022b9         db  0x00 ; '.'
00000000000022ba         db  0x00 ; '.'
00000000000022bb         db  0x00 ; '.'
00000000000022bc         db  0x00 ; '.'
00000000000022bd         db  0x00 ; '.'
00000000000022be         db  0x00 ; '.'
00000000000022bf         db  0x00 ; '.'
00000000000022c0         db  0x78 ; 'x'
00000000000022c1         db  0x0f ; '.'
00000000000022c2         db  0x21 ; '!'
00000000000022c3         db  0x00 ; '.'
00000000000022c4         db  0x00 ; '.'
00000000000022c5         db  0x00 ; '.'
00000000000022c6         db  0x00 ; '.'
00000000000022c7         db  0x00 ; '.'
00000000000022c8         db  0x07 ; '.'
00000000000022c9         db  0x00 ; '.'
00000000000022ca         db  0x00 ; '.'
00000000000022cb         db  0x00 ; '.'
00000000000022cc         db  0x33 ; '3'
00000000000022cd         db  0x00 ; '.'
00000000000022ce         db  0x00 ; '.'
00000000000022cf         db  0x00 ; '.'
00000000000022d0         db  0x00 ; '.'
00000000000022d1         db  0x00 ; '.'
00000000000022d2         db  0x00 ; '.'
00000000000022d3         db  0x00 ; '.'
00000000000022d4         db  0x00 ; '.'
00000000000022d5         db  0x00 ; '.'
00000000000022d6         db  0x00 ; '.'
00000000000022d7         db  0x00 ; '.'
00000000000022d8         db  0x80 ; '.'
00000000000022d9         db  0x0f ; '.'
00000000000022da         db  0x21 ; '!'
00000000000022db         db  0x00 ; '.'
00000000000022dc         db  0x00 ; '.'
00000000000022dd         db  0x00 ; '.'
00000000000022de         db  0x00 ; '.'
00000000000022df         db  0x00 ; '.'
00000000000022e0         db  0x07 ; '.'
00000000000022e1         db  0x00 ; '.'
00000000000022e2         db  0x00 ; '.'
00000000000022e3         db  0x00 ; '.'
00000000000022e4         db  0x34 ; '4'
00000000000022e5         db  0x00 ; '.'
00000000000022e6         db  0x00 ; '.'
00000000000022e7         db  0x00 ; '.'
00000000000022e8         db  0x00 ; '.'
00000000000022e9         db  0x00 ; '.'
00000000000022ea         db  0x00 ; '.'
00000000000022eb         db  0x00 ; '.'
00000000000022ec         db  0x00 ; '.'
00000000000022ed         db  0x00 ; '.'
00000000000022ee         db  0x00 ; '.'
00000000000022ef         db  0x00 ; '.'
00000000000022f0         db  0x88 ; '.'
00000000000022f1         db  0x0f ; '.'
00000000000022f2         db  0x21 ; '!'
00000000000022f3         db  0x00 ; '.'
00000000000022f4         db  0x00 ; '.'
00000000000022f5         db  0x00 ; '.'
00000000000022f6         db  0x00 ; '.'
00000000000022f7         db  0x00 ; '.'
00000000000022f8         db  0x07 ; '.'
00000000000022f9         db  0x00 ; '.'
00000000000022fa         db  0x00 ; '.'
00000000000022fb         db  0x00 ; '.'
00000000000022fc         db  0x35 ; '5'
00000000000022fd         db  0x00 ; '.'
00000000000022fe         db  0x00 ; '.'
00000000000022ff         db  0x00 ; '.'
0000000000002300         db  0x00 ; '.'
0000000000002301         db  0x00 ; '.'
0000000000002302         db  0x00 ; '.'
0000000000002303         db  0x00 ; '.'
0000000000002304         db  0x00 ; '.'
0000000000002305         db  0x00 ; '.'
0000000000002306         db  0x00 ; '.'
0000000000002307         db  0x00 ; '.'
0000000000002308         db  0x90 ; '.'
0000000000002309         db  0x0f ; '.'
000000000000230a         db  0x21 ; '!'
000000000000230b         db  0x00 ; '.'
000000000000230c         db  0x00 ; '.'
000000000000230d         db  0x00 ; '.'
000000000000230e         db  0x00 ; '.'
000000000000230f         db  0x00 ; '.'
0000000000002310         db  0x07 ; '.'
0000000000002311         db  0x00 ; '.'
0000000000002312         db  0x00 ; '.'
0000000000002313         db  0x00 ; '.'
0000000000002314         db  0x36 ; '6'
0000000000002315         db  0x00 ; '.'
0000000000002316         db  0x00 ; '.'
0000000000002317         db  0x00 ; '.'
0000000000002318         db  0x00 ; '.'
0000000000002319         db  0x00 ; '.'
000000000000231a         db  0x00 ; '.'
000000000000231b         db  0x00 ; '.'
000000000000231c         db  0x00 ; '.'
000000000000231d         db  0x00 ; '.'
000000000000231e         db  0x00 ; '.'
000000000000231f         db  0x00 ; '.'
0000000000002320         db  0x98 ; '.'
0000000000002321         db  0x0f ; '.'
0000000000002322         db  0x21 ; '!'
0000000000002323         db  0x00 ; '.'
0000000000002324         db  0x00 ; '.'
0000000000002325         db  0x00 ; '.'
0000000000002326         db  0x00 ; '.'
0000000000002327         db  0x00 ; '.'
0000000000002328         db  0x07 ; '.'
0000000000002329         db  0x00 ; '.'
000000000000232a         db  0x00 ; '.'
000000000000232b         db  0x00 ; '.'
000000000000232c         db  0x37 ; '7'
000000000000232d         db  0x00 ; '.'
000000000000232e         db  0x00 ; '.'
000000000000232f         db  0x00 ; '.'
0000000000002330         db  0x00 ; '.'
0000000000002331         db  0x00 ; '.'
0000000000002332         db  0x00 ; '.'
0000000000002333         db  0x00 ; '.'
0000000000002334         db  0x00 ; '.'
0000000000002335         db  0x00 ; '.'
0000000000002336         db  0x00 ; '.'
0000000000002337         db  0x00 ; '.'
0000000000002338         db  0xa0 ; '.'
0000000000002339         db  0x0f ; '.'
000000000000233a         db  0x21 ; '!'
000000000000233b         db  0x00 ; '.'
000000000000233c         db  0x00 ; '.'
000000000000233d         db  0x00 ; '.'
000000000000233e         db  0x00 ; '.'
000000000000233f         db  0x00 ; '.'
0000000000002340         db  0x07 ; '.'
0000000000002341         db  0x00 ; '.'
0000000000002342         db  0x00 ; '.'
0000000000002343         db  0x00 ; '.'
0000000000002344         db  0x38 ; '8'
0000000000002345         db  0x00 ; '.'
0000000000002346         db  0x00 ; '.'
0000000000002347         db  0x00 ; '.'
0000000000002348         db  0x00 ; '.'
0000000000002349         db  0x00 ; '.'
000000000000234a         db  0x00 ; '.'
000000000000234b         db  0x00 ; '.'
000000000000234c         db  0x00 ; '.'
000000000000234d         db  0x00 ; '.'
000000000000234e         db  0x00 ; '.'
000000000000234f         db  0x00 ; '.'
0000000000002350         db  0xa8 ; '.'
0000000000002351         db  0x0f ; '.'
0000000000002352         db  0x21 ; '!'
0000000000002353         db  0x00 ; '.'
0000000000002354         db  0x00 ; '.'
0000000000002355         db  0x00 ; '.'
0000000000002356         db  0x00 ; '.'
0000000000002357         db  0x00 ; '.'
0000000000002358         db  0x07 ; '.'
0000000000002359         db  0x00 ; '.'
000000000000235a         db  0x00 ; '.'
000000000000235b         db  0x00 ; '.'
000000000000235c         db  0x39 ; '9'
000000000000235d         db  0x00 ; '.'
000000000000235e         db  0x00 ; '.'
000000000000235f         db  0x00 ; '.'
0000000000002360         db  0x00 ; '.'
0000000000002361         db  0x00 ; '.'
0000000000002362         db  0x00 ; '.'
0000000000002363         db  0x00 ; '.'
0000000000002364         db  0x00 ; '.'
0000000000002365         db  0x00 ; '.'
0000000000002366         db  0x00 ; '.'
0000000000002367         db  0x00 ; '.'
0000000000002368         db  0xb0 ; '.'
0000000000002369         db  0x0f ; '.'
000000000000236a         db  0x21 ; '!'
000000000000236b         db  0x00 ; '.'
000000000000236c         db  0x00 ; '.'
000000000000236d         db  0x00 ; '.'
000000000000236e         db  0x00 ; '.'
000000000000236f         db  0x00 ; '.'
0000000000002370         db  0x07 ; '.'
0000000000002371         db  0x00 ; '.'
0000000000002372         db  0x00 ; '.'
0000000000002373         db  0x00 ; '.'
0000000000002374         db  0x3a ; ':'
0000000000002375         db  0x00 ; '.'
0000000000002376         db  0x00 ; '.'
0000000000002377         db  0x00 ; '.'
0000000000002378         db  0x00 ; '.'
0000000000002379         db  0x00 ; '.'
000000000000237a         db  0x00 ; '.'
000000000000237b         db  0x00 ; '.'
000000000000237c         db  0x00 ; '.'
000000000000237d         db  0x00 ; '.'
000000000000237e         db  0x00 ; '.'
000000000000237f         db  0x00 ; '.'
0000000000002380         db  0xb8 ; '.'
0000000000002381         db  0x0f ; '.'
0000000000002382         db  0x21 ; '!'
0000000000002383         db  0x00 ; '.'
0000000000002384         db  0x00 ; '.'
0000000000002385         db  0x00 ; '.'
0000000000002386         db  0x00 ; '.'
0000000000002387         db  0x00 ; '.'
0000000000002388         db  0x07 ; '.'
0000000000002389         db  0x00 ; '.'
000000000000238a         db  0x00 ; '.'
000000000000238b         db  0x00 ; '.'
000000000000238c         db  0x3b ; ';'
000000000000238d         db  0x00 ; '.'
000000000000238e         db  0x00 ; '.'
000000000000238f         db  0x00 ; '.'
0000000000002390         db  0x00 ; '.'
0000000000002391         db  0x00 ; '.'
0000000000002392         db  0x00 ; '.'
0000000000002393         db  0x00 ; '.'
0000000000002394         db  0x00 ; '.'
0000000000002395         db  0x00 ; '.'
0000000000002396         db  0x00 ; '.'
0000000000002397         db  0x00 ; '.'
0000000000002398         db  0xc0 ; '.'
0000000000002399         db  0x0f ; '.'
000000000000239a         db  0x21 ; '!'
000000000000239b         db  0x00 ; '.'
000000000000239c         db  0x00 ; '.'
000000000000239d         db  0x00 ; '.'
000000000000239e         db  0x00 ; '.'
000000000000239f         db  0x00 ; '.'
00000000000023a0         db  0x07 ; '.'
00000000000023a1         db  0x00 ; '.'
00000000000023a2         db  0x00 ; '.'
00000000000023a3         db  0x00 ; '.'
00000000000023a4         db  0x3d ; '='
00000000000023a5         db  0x00 ; '.'
00000000000023a6         db  0x00 ; '.'
00000000000023a7         db  0x00 ; '.'
00000000000023a8         db  0x00 ; '.'
00000000000023a9         db  0x00 ; '.'
00000000000023aa         db  0x00 ; '.'
00000000000023ab         db  0x00 ; '.'
00000000000023ac         db  0x00 ; '.'
00000000000023ad         db  0x00 ; '.'
00000000000023ae         db  0x00 ; '.'
00000000000023af         db  0x00 ; '.'
00000000000023b0         db  0xc8 ; '.'
00000000000023b1         db  0x0f ; '.'
00000000000023b2         db  0x21 ; '!'
00000000000023b3         db  0x00 ; '.'
00000000000023b4         db  0x00 ; '.'
00000000000023b5         db  0x00 ; '.'
00000000000023b6         db  0x00 ; '.'
00000000000023b7         db  0x00 ; '.'
00000000000023b8         db  0x07 ; '.'
00000000000023b9         db  0x00 ; '.'
00000000000023ba         db  0x00 ; '.'
00000000000023bb         db  0x00 ; '.'
00000000000023bc         db  0x3e ; '>'
00000000000023bd         db  0x00 ; '.'
00000000000023be         db  0x00 ; '.'
00000000000023bf         db  0x00 ; '.'
00000000000023c0         db  0x00 ; '.'
00000000000023c1         db  0x00 ; '.'
00000000000023c2         db  0x00 ; '.'
00000000000023c3         db  0x00 ; '.'
00000000000023c4         db  0x00 ; '.'
00000000000023c5         db  0x00 ; '.'
00000000000023c6         db  0x00 ; '.'
00000000000023c7         db  0x00 ; '.'
00000000000023c8         db  0xd0 ; '.'
00000000000023c9         db  0x0f ; '.'
00000000000023ca         db  0x21 ; '!'
00000000000023cb         db  0x00 ; '.'
00000000000023cc         db  0x00 ; '.'
00000000000023cd         db  0x00 ; '.'
00000000000023ce         db  0x00 ; '.'
00000000000023cf         db  0x00 ; '.'
00000000000023d0         db  0x07 ; '.'
00000000000023d1         db  0x00 ; '.'
00000000000023d2         db  0x00 ; '.'
00000000000023d3         db  0x00 ; '.'
00000000000023d4         db  0x40 ; '@'
00000000000023d5         db  0x00 ; '.'
00000000000023d6         db  0x00 ; '.'
00000000000023d7         db  0x00 ; '.'
00000000000023d8         db  0x00 ; '.'
00000000000023d9         db  0x00 ; '.'
00000000000023da         db  0x00 ; '.'
00000000000023db         db  0x00 ; '.'
00000000000023dc         db  0x00 ; '.'
00000000000023dd         db  0x00 ; '.'
00000000000023de         db  0x00 ; '.'
00000000000023df         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x23e0; 0x23f7[ (23 bytes)
        ; File offset : [9184; 9207[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
00000000000023e0         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
00000000000023e4         mov        rax, qword [qword_210fe8]                   ; qword_210fe8
00000000000023eb         test       rax, rax
00000000000023ee         je         loc_23f2

00000000000023f0         call       rax

                     loc_23f2:
00000000000023f2         add        rsp, 0x8                                    ; CODE XREF=_init+14
00000000000023f6         ret
                        ; endp
00000000000023f7         db  0x00 ; '.'
00000000000023f8         db  0x00 ; '.'
00000000000023f9         db  0x00 ; '.'
00000000000023fa         db  0x00 ; '.'
00000000000023fb         db  0x00 ; '.'
00000000000023fc         db  0x00 ; '.'
00000000000023fd         db  0x00 ; '.'
00000000000023fe         db  0x00 ; '.'
00000000000023ff         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x2400; 0x27c0[ (960 bytes)
        ; File offset : [9216; 10176[ (960 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_2400:
0000000000002400         push       qword [qword_210df0]                        ; Begin of unwind block (FDE at 0xead4), qword_210df0, CODE XREF=sub_2416+5
0000000000002406         jmp        qword [qword_210df0+8]                      ; 0x210df8
                        ; endp
000000000000240c         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getenv:        // getenv
0000000000002410         jmp        qword [getenv@GOT]                          ; getenv, getenv@GOT, CODE XREF=screen_columns+61
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2416:
0000000000002416         push       0x0
000000000000241b         jmp        loc_2400


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___snprintf_chk:        // __snprintf_chk
0000000000002420         jmp        qword [__snprintf_chk@GOT]                  ; __snprintf_chk, __snprintf_chk@GOT, CODE XREF=vasnprintf+1464, vasnprintf+1776, vasnprintf+2093, vasnprintf+2222, vasnprintf+2417, vasnprintf+3225
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2426:
0000000000002426         push       0x1
000000000000242b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
0000000000002430         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=wrapf+273, quotearg_n_options+277, quotearg_free+55, quotearg_free+82, quotearg_free+120, xrealloc+40, rpl_vasprintf+91, vasnprintf+402, vasnprintf+430, vasnprintf+458, vasnprintf+1905
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2436:
0000000000002436         push       0x2
000000000000243b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
0000000000002440         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=mode_type_flag+71, set_program_name+154, sub_6340+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48, vasnprintf+3878
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2446:
0000000000002446         push       0x3
000000000000244b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
0000000000002450         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=main+902, main+2681, main+2728, main+2864, main+2907, set_window_size+58, set_window_size+210, display_window_size+48, sub_4bd0+2085, close_stdout+22, fd_reopen+48
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2456:
0000000000002456         push       0x4
000000000000245b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
0000000000002460         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+3564, usage+3828
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2466:
0000000000002466         push       0x5
000000000000246b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
0000000000002470         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2476:
0000000000002476         push       0x6
000000000000247b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
0000000000002480         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2486:
0000000000002486         push       0x7
000000000000248b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fcntl:        // fcntl
0000000000002490         jmp        qword [fcntl@GOT]                           ; fcntl, fcntl@GOT, CODE XREF=rpl_fcntl+128, rpl_fcntl+212, rpl_fcntl+320, rpl_fcntl+407, rpl_fcntl+423, rpl_fcntl+460, rpl_fcntl+483, rpl_fcntl+559, rpl_fcntl+606
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2496:
0000000000002496         push       0x8
000000000000249b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_cfgetispeed:        // cfgetispeed
00000000000024a0         jmp        qword [cfgetispeed@GOT]                     ; cfgetispeed, cfgetispeed@GOT, CODE XREF=display_speed+9, display_speed+21, display_speed+223
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_24a6:
00000000000024a6         push       0x9
00000000000024ab         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
00000000000024b0         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+101
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_24b6:
00000000000024b6         push       0xa
00000000000024bb         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
00000000000024c0         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_24c6:
00000000000024c6         push       0xb
00000000000024cb         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
00000000000024d0         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+89
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_24d6:
00000000000024d6         push       0xc
00000000000024db         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_cfsetospeed:        // cfsetospeed
00000000000024e0         jmp        qword [cfsetospeed@GOT]                     ; cfsetospeed, cfsetospeed@GOT, CODE XREF=sub_4bd0+783
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_24e6:
00000000000024e6         push       0xd
00000000000024eb         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
00000000000024f0         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+858, main+1732, main+2339, main+2567, main+2603, main+2802, main+2856, integer_arg+26, display_window_size+232, usage+56, usage+102
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_24f6:
00000000000024f6         push       0xe
00000000000024fb         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
0000000000002500         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2506:
0000000000002506         push       0xf
000000000000250b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
0000000000002510         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=quotearg_buffer_restyled+343, sub_6340+411, sub_6340+1742, xstrdup+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2516:
0000000000002516         push       0x10
000000000000251b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
0000000000002520         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=main+2548, wrapf+396, screen_columns+148, set_window_size+187, display_window_size+195, sub_4bd0+2699, sub_6340+2739, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2526:
0000000000002526         push       0x11
000000000000252b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
0000000000002530         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+178
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2536:
0000000000002536         push       0x12
000000000000253b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
0000000000002540         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2546:
0000000000002546         push       0x13
000000000000254b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dup2:        // dup2
0000000000002550         jmp        qword [dup2@GOT]                            ; dup2, dup2@GOT, CODE XREF=fd_reopen+40
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2556:
0000000000002556         push       0x14
000000000000255b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strchr:        // strchr
0000000000002560         jmp        qword [strchr@GOT]                          ; strchr, strchr@GOT, CODE XREF=xstrtol+236, xstrtol+271, xstrtol+323, xstrtoumax+291, xstrtoumax+323, xstrtoumax+380
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2566:
0000000000002566         push       0x15
000000000000256b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___overflow:        // __overflow
0000000000002570         jmp        qword [__overflow@GOT]                      ; __overflow, __overflow@GOT, CODE XREF=main+2401, main+2447, main+2462, main+2477, main+2492, main+2507, main+2638, main+2653, wrapf+357, wrapf+381
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2576:
0000000000002576         push       0x16
000000000000257b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
0000000000002580         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2586:
0000000000002586         push       0x17
000000000000258b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
0000000000002590         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2596:
0000000000002596         push       0x18
000000000000259b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___assert_fail:        // __assert_fail
00000000000025a0         jmp        qword [__assert_fail@GOT]                   ; __assert_fail, __assert_fail@GOT, CODE XREF=main+2543, main+2783, sub_4bd0+2663, sub_4bd0+2694, xstrtol+1705, xstrtoumax+927
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_25a6:
00000000000025a6         push       0x19
00000000000025ab         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___strtoul_internal:        // __strtoul_internal
00000000000025b0         jmp        qword [__strtoul_internal@GOT]              ; __strtoul_internal, __strtoul_internal@GOT, CODE XREF=xstrtoumax+142
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_25b6:
00000000000025b6         push       0x1a
00000000000025bb         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
00000000000025c0         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_25c6:
00000000000025c6         push       0x1b
00000000000025cb         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_ioctl:        // ioctl
00000000000025d0         jmp        qword [ioctl@GOT]                           ; ioctl, ioctl@GOT, CODE XREF=screen_columns+35, set_window_size+49, set_window_size+109, display_window_size+39
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_25d6:
00000000000025d6         push       0x1c
00000000000025db         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_close:        // close
00000000000025e0         jmp        qword [close@GOT]                           ; close, close@GOT, CODE XREF=fd_reopen+61, rpl_fcntl+510
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_25e6:
00000000000025e6         push       0x1d
00000000000025eb         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
00000000000025f0         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=main+1638, main+1687, quotearg_buffer_restyled+410
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_25f6:
00000000000025f6         push       0x1e
00000000000025fb         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
0000000000002600         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=wrapf+263, usage+163, usage+200, usage+237, usage+274, usage+311, usage+348, usage+385, usage+422, usage+459, usage+496
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2606:
0000000000002606         push       0x1f
000000000000260b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
0000000000002610         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2616:
0000000000002616         push       0x20
000000000000261b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcmp:        // strcmp
0000000000002620         jmp        qword [strcmp@GOT]                          ; strcmp, strcmp@GOT, CODE XREF=main+446, main+1109, main+1167, main+1987, main+2054, string_to_baud+51, sub_4bd0+161, sub_4bd0+419, sub_4bd0+582, sub_4bd0+601, sub_4bd0+1121
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2626:
0000000000002626         push       0x21
000000000000262b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strtol:        // strtol
0000000000002630         jmp        qword [strtol@GOT]                          ; strtol, strtol@GOT, CODE XREF=xstrtol+87
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2636:
0000000000002636         push       0x22
000000000000263b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
0000000000002640         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=xmemdup+35, vasnprintf+686, vasnprintf+912, vasnprintf+973, vasnprintf+2590, vasnprintf+3085, vasnprintf+3403, vasnprintf+3547, vasnprintf+4227, printf_parse+2492, printf_parse+2595
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2646:
0000000000002646         push       0x23
000000000000264b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
0000000000002650         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2656:
0000000000002656         push       0x24
000000000000265b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
0000000000002660         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=xmalloc+4, vasnprintf+210, vasnprintf+2547, vasnprintf+3007, vasnprintf+3353, vasnprintf+3497, vasnprintf+4191, printf_parse+2420, printf_parse+2528, printf_parse+2852, printf_parse+3169
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2666:
0000000000002666         push       0x25
000000000000266b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
0000000000002670         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2676:
0000000000002676         push       0x26
000000000000267b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
0000000000002680         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2686:
0000000000002686         push       0x27
000000000000268b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
0000000000002690         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2696:
0000000000002696         push       0x28
000000000000269b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
00000000000026a0         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17, vasnprintf+645, vasnprintf+1242, vasnprintf+1660, vasnprintf+2887, vasnprintf+4043, vasnprintf+4085, printf_parse+805, printf_parse+1041, printf_parse+2266, printf_parse+2729
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_26a6:
00000000000026a6         push       0x29
00000000000026ab         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
00000000000026b0         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+70, usage+3539, usage+3803, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_26b6:
00000000000026b6         push       0x2a
00000000000026bb         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_cfgetospeed:        // cfgetospeed
00000000000026c0         jmp        qword [cfgetospeed@GOT]                     ; cfgetospeed, cfgetospeed@GOT, CODE XREF=display_speed+32, display_speed+45, display_speed+163
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_26c6:
00000000000026c6         push       0x2b
00000000000026cb         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
00000000000026d0         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=main+1490, main+1514, usage+126, usage+901, usage+2533, usage+2870, usage+2911, usage+3107, usage+3185, usage+3240, usage+3527
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_26d6:
00000000000026d6         push       0x2c
00000000000026db         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
00000000000026e0         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+926, main+1752, main+2584, main+2620, main+2705, main+2752, main+2819, main+2884, main+2931, set_window_size+182, set_window_size+234
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_26e6:
00000000000026e6         push       0x2d
00000000000026eb         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_tcgetattr:        // tcgetattr
00000000000026f0         jmp        qword [tcgetattr@GOT]                       ; tcgetattr, tcgetattr@GOT, CODE XREF=main+698, main+875, main+1606
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_26f6:
00000000000026f6         push       0x2e
00000000000026fb         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_tcsetattr:        // tcsetattr
0000000000002700         jmp        qword [tcsetattr@GOT]                       ; tcsetattr, tcsetattr@GOT, CODE XREF=main+1584
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2706:
0000000000002706         push       0x2f
000000000000270b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_open:        // open
0000000000002710         jmp        qword [open@GOT]                            ; open, open@GOT, CODE XREF=fd_reopen+21
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2716:
0000000000002716         push       0x30
000000000000271b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
0000000000002720         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2726:
0000000000002726         push       0x31
000000000000272b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_cfsetispeed:        // cfsetispeed
0000000000002730         jmp        qword [cfsetispeed@GOT]                     ; cfsetispeed, cfsetispeed@GOT, CODE XREF=sub_4bd0+289, sub_4bd0+2016
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2736:
0000000000002736         push       0x32
000000000000273b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strtoul:        // strtoul
0000000000002740         jmp        qword [strtoul@GOT]                         ; strtoul, strtoul@GOT, CODE XREF=sub_4bd0+2128, sub_4bd0+2340
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2746:
0000000000002746         push       0x33
000000000000274b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000002750         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2756:
0000000000002756         push       0x34
000000000000275b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000002760         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+358, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2766:
0000000000002766         push       0x35
000000000000276b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
0000000000002770         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2776:
0000000000002776         push       0x36
000000000000277b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
0000000000002780         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642, version_etc_arn+718, version_etc_arn+872
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2786:
0000000000002786         push       0x37
000000000000278b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
0000000000002790         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_6340+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2796:
0000000000002796         push       0x38
000000000000279b         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
00000000000027a0         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_6340+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_27a6:
00000000000027a6         push       0x39
00000000000027ab         jmp        0x2400
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
00000000000027b0         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=sub_60e0+51, xstrtoumax+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_27b6:
00000000000027b6         push       0x3a
00000000000027bb         jmp        0x2400
                        ; endp


        ; Section .plt.got
        ; Range: [0x27c0; 0x27c8[ (8 bytes)
        ; File offset : [10176; 10184[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_210ff8:        // qword_210ff8
00000000000027c0         jmp        qword [qword_210ff8]                        ; qword, End of unwind block (FDE at 0xead4), Begin of unwind block (FDE at 0xeafc), qword_210ff8, CODE XREF=__do_global_dtors_aux+30
                        ; endp
00000000000027c6         align      8
00000000000027c8         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0xeafc)
00000000000027c9         db  0x00 ; '.'
00000000000027ca         db  0x00 ; '.'
00000000000027cb         db  0x00 ; '.'
00000000000027cc         db  0x00 ; '.'
00000000000027cd         db  0x00 ; '.'
00000000000027ce         db  0x00 ; '.'
00000000000027cf         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x27d0; 0xb2ce[ (35582 bytes)
        ; File offset : [10192; 45774[ (35582 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_41: int8_t, -65
        ;    var_42: int8_t, -66
        ;    var_49: int8_t, -73
        ;    var_4A: int8_t, -74
        ;    var_4B: int8_t, -75
        ;    var_50: int32_t, -80


                     main:
00000000000027d0         push       r15                                         ; Begin of unwind block (FDE at 0xed10), DATA XREF=_start+29
00000000000027d2         push       r14
00000000000027d4         mov        r15d, 0x1
00000000000027da         push       r13
00000000000027dc         push       r12
00000000000027de         mov        r13d, edi
00000000000027e1         push       rbp
00000000000027e2         push       rbx
00000000000027e3         mov        rbx, rsi
00000000000027e6         xor        r14d, r14d
00000000000027e9         xor        r12d, r12d
00000000000027ec         xor        ebp, ebp
00000000000027ee         sub        rsp, 0x28
00000000000027f2         mov        rdi, qword [rsi]
00000000000027f5         mov        rax, qword [fs:0x28]
00000000000027fe         mov        qword [rsp+0x58+var_40], rax
0000000000002803         xor        eax, eax
0000000000002805         call       set_program_name                            ; set_program_name
000000000000280a         lea        rsi, qword [aWrittenBySSAnd+27]             ; argument "__locale" for method j_setlocale, 0xe041
0000000000002811         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
0000000000002816         call       j_setlocale                                 ; setlocale
000000000000281b         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
0000000000002822         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
0000000000002829         call       j_bindtextdomain                            ; bindtextdomain
000000000000282e         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
0000000000002835         call       j_textdomain                                ; textdomain
000000000000283a         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
0000000000002841         call       atexit                                      ; atexit
0000000000002846         mov        dword [opterr@@GLIBC_2.2.5], 0x0            ; opterr@@GLIBC_2.2.5
0000000000002850         mov        byte [rsp+0x58+var_49], 0x1
0000000000002855         mov        byte [rsp+0x58+var_4A], 0x0
000000000000285a         mov        byte [rsp+0x58+var_4B], 0x0
000000000000285f         mov        dword [rsp+0x58+var_50], 0x0

                     loc_2867:
0000000000002867         lea        rsi, qword [rbx+rbp*8]                      ; argument "___argv" for method j_getopt_long, CODE XREF=main+299, main+488
000000000000286b         mov        edi, r13d
000000000000286e         lea        rcx, qword [longopts]                       ; argument "__longopts" for method j_getopt_long, longopts
0000000000002875         lea        rdx, qword [aAgf]                           ; argument "__shortopts" for method j_getopt_long, "-agF:"
000000000000287c         sub        edi, r12d                                   ; argument "___argc" for method j_getopt_long
000000000000287f         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
0000000000002882         call       j_getopt_long                               ; getopt_long
0000000000002887         cmp        eax, 0xffffffff
000000000000288a         je         loc_29d2

0000000000002890         cmp        eax, 0x46
0000000000002893         je         loc_2940

0000000000002899         jle        loc_2900

000000000000289b         cmp        eax, 0x61
000000000000289e         je         loc_29c0

00000000000028a4         cmp        eax, 0x67
00000000000028a7         jne        loc_2960

00000000000028ad         mov        byte [rsp+0x58+var_4A], 0x1
00000000000028b2         mov        dword [rsp+0x58+var_50], 0x2

                     loc_28ba:
00000000000028ba         mov        esi, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+384, main+509
00000000000028c0         cmp        esi, r15d
00000000000028c3         jle        loc_3211

00000000000028c9         movsxd     rdx, r15d
00000000000028cc         lea        rcx, qword [rdx+rbp]
00000000000028d0         lea        edx, dword [rsi-1]
00000000000028d3         sub        edx, r15d
00000000000028d6         lea        rax, qword [rbx+rcx*8]
00000000000028da         add        rdx, rcx
00000000000028dd         lea        rdx, qword [rbx+rdx*8+8]
00000000000028e2         nop        word [rax+rax]

                     loc_28e8:
00000000000028e8         mov        qword [rax], 0x0                            ; CODE XREF=main+294
00000000000028ef         add        rax, 0x8
00000000000028f3         cmp        rdx, rax
00000000000028f6         jne        loc_28e8

                     loc_28f8:
00000000000028f8         mov        r15d, esi                                   ; CODE XREF=main+2628
00000000000028fb         jmp        loc_2867

                     loc_2900:
0000000000002900         cmp        eax, 0xffffff7d                             ; CODE XREF=main+201
0000000000002905         jne        loc_2955

0000000000002907         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000290e         mov        rcx, qword [Version]                        ; Version
0000000000002915         lea        r8, qword [aDavidMackenzie]                 ; "David MacKenzie"
000000000000291c         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0xb470
0000000000002923         lea        rsi, qword [aRowsDColumnsD+21]              ; 0xb33d
000000000000292a         xor        r9d, r9d
000000000000292d         xor        eax, eax
000000000000292f         call       version_etc                                 ; version_etc
0000000000002934         xor        edi, edi                                    ; argument "__status" for method j_exit
0000000000002936         call       j_exit                                      ; exit
                        ; endp
000000000000293b         align      64

                     loc_2940:
0000000000002940         test       r14, r14                                    ; CODE XREF=main+195
0000000000002943         jne        loc_31ed

0000000000002949         mov        r14, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000002950         jmp        loc_28ba

                     loc_2955:
0000000000002955         cmp        eax, 0xffffff7e                             ; CODE XREF=main+309
000000000000295a         je         loc_2dea

                     loc_2960:
0000000000002960         add        r12d, r15d                                  ; CODE XREF=main+215
0000000000002963         lea        rdi, qword [aDavidMackenzie+16]             ; 0xb5d8
000000000000296a         mov        ecx, 0x7
000000000000296f         movsxd     rbp, r12d
0000000000002972         mov        rdx, qword [rbx+rbp*8]
0000000000002976         mov        rsi, rdx
0000000000002979         rep  cmpsb byte [rsi], byte [rdi]
000000000000297b         seta       al
000000000000297e         sbb        al, 0x0
0000000000002980         test       al, al
0000000000002982         je         loc_29a6

0000000000002984         lea        rsi, qword [aDrain]                         ; argument "__s2" for method j_strcmp, "drain"
000000000000298b         mov        rdi, rdx                                    ; argument "__s1" for method j_strcmp
000000000000298e         call       j_strcmp                                    ; strcmp
0000000000002993         movzx      ecx, byte [rsp+0x58+var_49]
0000000000002998         test       eax, eax
000000000000299a         mov        eax, 0x0
000000000000299f         cmovne     ecx, eax
00000000000029a2         mov        byte [rsp+0x58+var_49], cl

                     loc_29a6:
00000000000029a6         mov        esi, 0x1                                    ; CODE XREF=main+434
00000000000029ab         mov        dword [optind@@GLIBC_2.2.5], 0x0            ; optind@@GLIBC_2.2.5
00000000000029b5         mov        r15d, esi
00000000000029b8         jmp        loc_2867
00000000000029bd         align      64

                     loc_29c0:
00000000000029c0         mov        byte [rsp+0x58+var_4B], 0x1                 ; CODE XREF=main+206
00000000000029c5         mov        dword [rsp+0x58+var_50], 0x1
00000000000029cd         jmp        loc_28ba

                     loc_29d2:
00000000000029d2         movzx      ecx, byte [rsp+0x58+var_4A]                 ; CODE XREF=main+186
00000000000029d7         test       byte [rsp+0x58+var_4B], cl
00000000000029db         jne        loc_31c9

00000000000029e1         cmp        byte [rsp+0x58+var_49], 0x0
00000000000029e6         jne        loc_2b13

00000000000029ec         cmp        byte [rsp+0x58+var_4B], 0x0
00000000000029f1         jne        loc_32b4

00000000000029f7         cmp        byte [rsp+0x58+var_4A], 0x0
00000000000029fc         jne        loc_32b4

0000000000002a02         test       r14, r14
0000000000002a05         je         loc_30e5

0000000000002a0b         sub        rsp, 0x8
0000000000002a0f         lea        r8, qword [check_mode.7223]                 ; check_mode.7223
0000000000002a16         mov        rdx, rbx
0000000000002a19         lea        rax, qword [rsp+0x60+var_42]
0000000000002a1e         mov        ecx, r13d
0000000000002a21         mov        rsi, r14
0000000000002a24         mov        edi, 0x1
0000000000002a29         push       rax
0000000000002a2a         lea        r9, qword [rsp+0x68+var_41]
0000000000002a2f         call       apply_settings                              ; apply_settings
0000000000002a34         pop        rax
0000000000002a35         pop        rdx

                     loc_2a36:
0000000000002a36         xor        ecx, ecx                                    ; CODE XREF=main+838
0000000000002a38         xor        edi, edi
0000000000002a3a         mov        edx, 0x800
0000000000002a3f         mov        rsi, r14
0000000000002a42         call       fd_reopen                                   ; fd_reopen
0000000000002a47         test       eax, eax
0000000000002a49         js         loc_3319

0000000000002a4f         xor        edi, edi
0000000000002a51         xor        eax, eax
0000000000002a53         mov        esi, 0x3
0000000000002a58         call       rpl_fcntl                                   ; rpl_fcntl
0000000000002a5d         cmp        eax, 0xffffffff
0000000000002a60         je         loc_32d8

0000000000002a66         and        ah, 0xf7
0000000000002a69         xor        edi, edi
0000000000002a6b         mov        esi, 0x4
0000000000002a70         mov        edx, eax
0000000000002a72         xor        eax, eax
0000000000002a74         call       rpl_fcntl                                   ; rpl_fcntl
0000000000002a79         test       eax, eax
0000000000002a7b         js         loc_32d8

                     loc_2a81:
0000000000002a81         lea        rsi, qword [mode.7192]                      ; argument "__termios_p" for method j_tcgetattr, mode.7192, CODE XREF=main+2391
0000000000002a88         xor        edi, edi                                    ; argument "__fd" for method j_tcgetattr
0000000000002a8a         call       j_tcgetattr                                 ; tcgetattr
0000000000002a8f         test       eax, eax
0000000000002a91         jne        loc_2b44

0000000000002a97         movzx      eax, byte [rsp+0x58+var_4B]
0000000000002a9c         or         al, byte [rsp+0x58+var_49]
0000000000002aa0         jne        loc_2b73

0000000000002aa6         cmp        byte [rsp+0x58+var_4A], 0x0
0000000000002aab         jne        loc_2b73

0000000000002ab1         mov        byte [rsp+0x58+var_41], 0x0
0000000000002ab6         mov        byte [rsp+0x58+var_42], 0x0
0000000000002abb         sub        rsp, 0x8
0000000000002abf         lea        rax, qword [rsp+0x60+var_42]
0000000000002ac4         lea        r8, qword [mode.7192]                       ; mode.7192
0000000000002acb         mov        ecx, r13d
0000000000002ace         mov        rsi, r14
0000000000002ad1         xor        edi, edi
0000000000002ad3         mov        rdx, rbx
0000000000002ad6         push       rax
0000000000002ad7         lea        r9, qword [rsp+0x68+var_41]
0000000000002adc         call       apply_settings                              ; apply_settings
0000000000002ae1         pop        rcx
0000000000002ae2         pop        rsi
0000000000002ae3         cmp        byte [rsp+0x58+var_42], 0x0
0000000000002ae8         jne        loc_2df1

                     loc_2aee:
0000000000002aee         xor        eax, eax                                    ; CODE XREF=main+1557, main+1645, main+1694, main+1829, main+2482
0000000000002af0         mov        rcx, qword [rsp+0x58+var_40]
0000000000002af5         xor        rcx, qword [fs:0x28]
0000000000002afe         jne        loc_31c4

0000000000002b04         add        rsp, 0x28
0000000000002b08         pop        rbx
0000000000002b09         pop        rbp
0000000000002b0a         pop        r12
0000000000002b0c         pop        r13
0000000000002b0e         pop        r14
0000000000002b10         pop        r15
0000000000002b12         ret
                        ; endp

                     loc_2b13:
0000000000002b13         test       r14, r14                                    ; CODE XREF=main+534
0000000000002b16         jne        loc_2a36

0000000000002b1c         lea        rsi, qword [aStandardInput]                 ; argument "msgid" for method j_dcgettext, "standard input"
0000000000002b23         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002b25         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002b2a         call       j_dcgettext                                 ; dcgettext
0000000000002b2f         lea        rsi, qword [mode.7192]                      ; argument "__termios_p" for method j_tcgetattr, mode.7192
0000000000002b36         xor        edi, edi                                    ; argument "__fd" for method j_tcgetattr
0000000000002b38         mov        r14, rax
0000000000002b3b         call       j_tcgetattr                                 ; tcgetattr
0000000000002b40         test       eax, eax
0000000000002b42         je         loc_2b73

                     loc_2b44:
0000000000002b44         mov        rdx, r14                                    ; CODE XREF=main+705
0000000000002b47         mov        esi, 0x3
0000000000002b4c         xor        edi, edi
0000000000002b4e         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000002b53         mov        rbx, rax
0000000000002b56         call       j___errno_location                          ; __errno_location
0000000000002b5b         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002b5d         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0xdacc
0000000000002b64         mov        rcx, rbx
0000000000002b67         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002b6c         xor        eax, eax
0000000000002b6e         call       j_error                                     ; error

                     loc_2b73:
0000000000002b73         call       screen_columns                              ; screen_columns, CODE XREF=main+720, main+731, main+882
0000000000002b78         mov        dword [max_col], eax                        ; max_col
0000000000002b7e         mov        eax, dword [rsp+0x58+var_50]
0000000000002b82         mov        dword [current_col], 0x0                    ; current_col
0000000000002b8c         cmp        eax, 0x1
0000000000002b8f         je         loc_2f0b

0000000000002b95         cmp        eax, 0x2
0000000000002b98         je         loc_2d6a

0000000000002b9e         lea        rdi, qword [mode.7192]                      ; mode.7192
0000000000002ba5         mov        esi, 0x1
0000000000002baa         call       display_speed                               ; display_speed
0000000000002baf         movzx      esi, byte [byte_211190]                     ; byte_211190
0000000000002bb6         lea        rdi, qword [aLineD]                         ; "line = %d;"
0000000000002bbd         xor        eax, eax
0000000000002bbf         call       wrapf                                       ; wrapf
0000000000002bc4         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002bcb         mov        rax, qword [rdi+0x28]
0000000000002bcf         cmp        rax, qword [rdi+0x30]
0000000000002bd3         jae        loc_3196

0000000000002bd9         lea        rdx, qword [rax+1]
0000000000002bdd         mov        qword [rdi+0x28], rdx
0000000000002be1         mov        byte [rax], 0xa

                     loc_2be4:
0000000000002be4         mov        dword [current_col], 0x0                    ; current_col, CODE XREF=main+2512
0000000000002bee         lea        r15, qword [control_info]                   ; control_info
0000000000002bf5         mov        r13d, 0x1
0000000000002bfb         lea        rbp, qword [aMissingArgumen+23]             ; 0xb544
0000000000002c02         lea        r12, qword [mode.7192]                      ; mode.7192
0000000000002c09         jmp        loc_2c56

                     loc_2c0b:
0000000000002c0b         mov        rax, qword [r15+0x10]                       ; CODE XREF=main+1174
0000000000002c0f         movzx      r14d, byte [r12+rax+0x11]
0000000000002c15         cmp        r14b, byte [r15+8]
0000000000002c19         je         loc_2c52

0000000000002c1b         lea        rsi, qword [aFlush]                         ; argument "__s2" for method j_strcmp, "flush"
0000000000002c22         mov        rdi, rbx                                    ; argument "__s1" for method j_strcmp
0000000000002c25         call       j_strcmp                                    ; strcmp
0000000000002c2a         test       eax, eax
0000000000002c2c         je         loc_2c52

0000000000002c2e         test       r14b, r14b
0000000000002c31         lea        rdx, qword [aUndef_b5a8]                    ; "<undef>"
0000000000002c38         jne        loc_2efa

                     loc_2c3e:
0000000000002c3e         lea        rdi, qword [aSS_b605]                       ; "%s = %s;", CODE XREF=main+1846
0000000000002c45         mov        rsi, rbx
0000000000002c48         xor        eax, eax
0000000000002c4a         xor        r13d, r13d
0000000000002c4d         call       wrapf                                       ; wrapf

                     loc_2c52:
0000000000002c52         add        r15, 0x18                                   ; CODE XREF=main+1097, main+1116

                     loc_2c56:
0000000000002c56         mov        rbx, qword [r15]                            ; CODE XREF=main+1081
0000000000002c59         mov        rsi, rbp                                    ; argument "__s2" for method j_strcmp
0000000000002c5c         mov        rdi, rbx                                    ; argument "__s1" for method j_strcmp
0000000000002c5f         call       j_strcmp                                    ; strcmp
0000000000002c64         test       eax, eax
0000000000002c66         jne        loc_2c0b

0000000000002c68         test       byte [dword_21118c], 0x2                    ; dword_21118c
0000000000002c6f         je         loc_313b

0000000000002c75         test       r13b, r13b
0000000000002c78         jne        loc_2c9a

0000000000002c7a         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002c81         mov        rax, qword [rdi+0x28]
0000000000002c85         cmp        rax, qword [rdi+0x30]
0000000000002c89         jae        loc_3228

0000000000002c8f         lea        rdx, qword [rax+1]
0000000000002c93         mov        qword [rdi+0x28], rdx
0000000000002c97         mov        byte [rax], 0xa

                     loc_2c9a:
0000000000002c9a         mov        dword [current_col], 0x0                    ; current_col, CODE XREF=main+1192, main+2437, main+2658
0000000000002ca4         lea        rbx, qword [mode_info]                      ; mode_info
0000000000002cab         xor        ebp, ebp
0000000000002cad         mov        r12d, 0x1
0000000000002cb3         jmp        loc_2cc5

                     loc_2cb5:
0000000000002cb5         and        ecx, 0x5                                    ; CODE XREF=main+1394
0000000000002cb8         cmp        cl, 0x5
0000000000002cbb         je         loc_2ead

                     loc_2cc1:
0000000000002cc1         add        rbx, 0x20                                   ; CODE XREF=main+1283, main+1403, main+1429, main+1777

                     loc_2cc5:
0000000000002cc5         cmp        qword [rbx], 0x0                            ; CODE XREF=main+1251
0000000000002cc9         je         loc_2ec6

0000000000002ccf         test       byte [rbx+0xc], 0x8
0000000000002cd3         jne        loc_2cc1

0000000000002cd5         cmp        dword [rbx+8], ebp
0000000000002cd8         mov        edi, ebp
0000000000002cda         je         loc_2d16

0000000000002cdc         test       r12b, r12b
0000000000002cdf         jne        loc_2d0b

0000000000002ce1         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002ce8         mov        rax, qword [rdi+0x28]
0000000000002cec         cmp        rax, qword [rdi+0x30]
0000000000002cf0         jae        loc_315a

0000000000002cf6         lea        rdx, qword [rax+1]
0000000000002cfa         mov        qword [rdi+0x28], rdx
0000000000002cfe         mov        byte [rax], 0xa

                     loc_2d01:
0000000000002d01         mov        dword [current_col], 0x0                    ; current_col, CODE XREF=main+2452

                     loc_2d0b:
0000000000002d0b         mov        edi, dword [rbx+8]                          ; CODE XREF=main+1295
0000000000002d0e         mov        r12d, 0x1
0000000000002d14         mov        ebp, edi

                     loc_2d16:
0000000000002d16         lea        rsi, qword [mode.7192]                      ; mode.7192, CODE XREF=main+1290
0000000000002d1d         call       mode_type_flag                              ; mode_type_flag
0000000000002d22         mov        rdx, qword [rbx+0x18]
0000000000002d26         test       rdx, rdx
0000000000002d29         jne        loc_2d2f

0000000000002d2b         mov        rdx, qword [rbx+0x10]

                     loc_2d2f:
0000000000002d2f         test       rax, rax                                    ; CODE XREF=main+1369
0000000000002d32         je         loc_31a5

0000000000002d38         and        edx, dword [rax]
0000000000002d3a         movzx      ecx, byte [rbx+0xc]
0000000000002d3e         cmp        rdx, qword [rbx+0x10]
0000000000002d42         jne        loc_2cb5

0000000000002d48         and        cl, 0x2
0000000000002d4b         je         loc_2cc1

0000000000002d51         mov        rsi, qword [rbx]
0000000000002d54         lea        rdi, qword [aSS+4]                          ; 0xdacc
0000000000002d5b         xor        eax, eax
0000000000002d5d         xor        r12d, r12d
0000000000002d60         call       wrapf                                       ; wrapf
0000000000002d65         jmp        loc_2cc1

                     loc_2d6a:
0000000000002d6a         mov        ecx, dword [dword_211184]                   ; dword_211184, CODE XREF=main+968
0000000000002d70         mov        edx, dword [mode.7192]                      ; mode.7192
0000000000002d76         lea        rsi, qword [aLxlxlxlx]                      ; "%lx:%lx:%lx:%lx"
0000000000002d7d         mov        r9d, dword [dword_21118c]                   ; dword_21118c
0000000000002d84         mov        r8d, dword [dword_211188]                   ; dword_211188
0000000000002d8b         lea        r12, qword [byte_211190+1]                  ; 0x211191
0000000000002d92         lea        rbp, qword [aLxlxlxlx+11]                   ; 0xb64c
0000000000002d99         mov        edi, 0x1
0000000000002d9e         xor        eax, eax
0000000000002da0         xor        ebx, ebx
0000000000002da2         call       j___printf_chk                              ; __printf_chk

                     loc_2da7:
0000000000002da7         movzx      edx, byte [r12+rbx]                         ; CODE XREF=main+1523
0000000000002dac         xor        eax, eax
0000000000002dae         mov        rsi, rbp
0000000000002db1         mov        edi, 0x1
0000000000002db6         add        rbx, 0x1
0000000000002dba         call       j___printf_chk                              ; __printf_chk
0000000000002dbf         cmp        rbx, 0x20
0000000000002dc3         jne        loc_2da7

0000000000002dc5         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002dcc         mov        rax, qword [rdi+0x28]
0000000000002dd0         cmp        rax, qword [rdi+0x30]
0000000000002dd4         jae        loc_3178

0000000000002dda         lea        rdx, qword [rax+1]
0000000000002dde         mov        qword [rdi+0x28], rdx
0000000000002de2         mov        byte [rax], 0xa
0000000000002de5         jmp        loc_2aee

                     loc_2dea:
0000000000002dea         xor        edi, edi                                    ; argument #1 for method usage, CODE XREF=main+394
0000000000002dec         call       usage                                       ; usage

                     loc_2df1:
0000000000002df1         mov        esi, dword [tcsetattr_options]              ; argument "__optional_actions" for method j_tcsetattr, tcsetattr_options, CODE XREF=main+792
0000000000002df7         lea        rdx, qword [mode.7192]                      ; argument "__termios_p" for method j_tcsetattr, mode.7192
0000000000002dfe         xor        edi, edi                                    ; argument "__fd" for method j_tcsetattr
0000000000002e00         call       j_tcsetattr                                 ; tcsetattr
0000000000002e05         test       eax, eax
0000000000002e07         jne        loc_3266

0000000000002e0d         lea        rsi, qword [new_mode.7231]                  ; argument "__termios_p" for method j_tcgetattr, new_mode.7231
0000000000002e14         xor        edi, edi                                    ; argument "__fd" for method j_tcgetattr
0000000000002e16         call       j_tcgetattr                                 ; tcgetattr
0000000000002e1b         test       eax, eax
0000000000002e1d         jne        loc_3237

0000000000002e23         lea        rsi, qword [new_mode.7231]                  ; argument "__s2" for method j_memcmp, new_mode.7231
0000000000002e2a         lea        rdi, qword [mode.7192]                      ; argument "__s1" for method j_memcmp, mode.7192
0000000000002e31         mov        edx, 0x3c                                   ; argument "__n" for method j_memcmp
0000000000002e36         call       j_memcmp                                    ; memcmp
0000000000002e3b         test       eax, eax
0000000000002e3d         je         loc_2aee

0000000000002e43         and        dword [dword_211148], 0xeff0ffff            ; dword_211148
0000000000002e4d         cmp        byte [rsp+0x58+var_41], 0x0
0000000000002e52         jne        loc_2e74

0000000000002e54         lea        rsi, qword [new_mode.7231]                  ; argument "__s2" for method j_memcmp, new_mode.7231
0000000000002e5b         lea        rdi, qword [mode.7192]                      ; argument "__s1" for method j_memcmp, mode.7192
0000000000002e62         mov        edx, 0x3c                                   ; argument "__n" for method j_memcmp
0000000000002e67         call       j_memcmp                                    ; memcmp
0000000000002e6c         test       eax, eax
0000000000002e6e         je         loc_2aee

                     loc_2e74:
0000000000002e74         mov        rdx, r14                                    ; CODE XREF=main+1666
0000000000002e77         mov        esi, 0x3
0000000000002e7c         xor        edi, edi
0000000000002e7e         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000002e83         lea        rsi, qword [aSUnableToPerfo]                ; argument "msgid" for method j_dcgettext, "%s: unable to perform all requested operations"
0000000000002e8a         mov        rbx, rax
0000000000002e8d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002e92         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002e94         call       j_dcgettext                                 ; dcgettext
0000000000002e99         mov        rcx, rbx
0000000000002e9c         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002e9f         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002ea1         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002ea6         xor        eax, eax
0000000000002ea8         call       j_error                                     ; error

                     loc_2ead:
0000000000002ead         mov        rsi, qword [rbx]                            ; CODE XREF=main+1259
0000000000002eb0         lea        rdi, qword [aMinLuTimeLun+24]               ; 0xb626
0000000000002eb7         xor        eax, eax
0000000000002eb9         xor        r12d, r12d
0000000000002ebc         call       wrapf                                       ; wrapf
0000000000002ec1         jmp        loc_2cc1

                     loc_2ec6:
0000000000002ec6         test       r12b, r12b                                  ; CODE XREF=main+1273
0000000000002ec9         jne        loc_2eeb

                     loc_2ecb:
0000000000002ecb         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=main+2167
0000000000002ed2         mov        rax, qword [rdi+0x28]
0000000000002ed6         cmp        rax, qword [rdi+0x30]
0000000000002eda         jae        loc_3187

0000000000002ee0         lea        rdx, qword [rax+1]
0000000000002ee4         mov        qword [rdi+0x28], rdx
0000000000002ee8         mov        byte [rax], 0xa

                     loc_2eeb:
0000000000002eeb         mov        dword [current_col], 0x0                    ; current_col, CODE XREF=main+1785, main+2497
0000000000002ef5         jmp        loc_2aee

                     loc_2efa:
0000000000002efa         movzx      edi, r14b                                   ; CODE XREF=main+1128
0000000000002efe         call       visible.part.0                              ; visible.part.0
0000000000002f03         mov        rdx, rax
0000000000002f06         jmp        loc_2c3e

                     loc_2f0b:
0000000000002f0b         lea        rdi, qword [mode.7192]                      ; mode.7192, CODE XREF=main+959
0000000000002f12         mov        esi, 0x1
0000000000002f17         call       display_speed                               ; display_speed
0000000000002f1c         mov        rsi, r14
0000000000002f1f         mov        edi, 0x1
0000000000002f24         call       display_window_size                         ; display_window_size
0000000000002f29         movzx      esi, byte [byte_211190]                     ; byte_211190
0000000000002f30         lea        rdi, qword [aLineD]                         ; "line = %d;"
0000000000002f37         xor        eax, eax
0000000000002f39         call       wrapf                                       ; wrapf
0000000000002f3e         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002f45         mov        rax, qword [rdi+0x28]
0000000000002f49         cmp        rax, qword [rdi+0x30]
0000000000002f4d         jae        loc_3169

0000000000002f53         lea        rdx, qword [rax+1]
0000000000002f57         mov        qword [rdi+0x28], rdx
0000000000002f5b         mov        byte [rax], 0xa

                     loc_2f5e:
0000000000002f5e         mov        dword [current_col], 0x0                    ; current_col, CODE XREF=main+2467
0000000000002f68         lea        rbx, qword [control_info]                   ; control_info
0000000000002f6f         lea        r12, qword [aMissingArgumen+23]             ; 0xb544
0000000000002f76         lea        r13, qword [aFlush]                         ; "flush"
0000000000002f7d         lea        r15, qword [mode.7192]                      ; mode.7192
0000000000002f84         lea        r14, qword [aUndef_b5a8]                    ; "<undef>"
0000000000002f8b         jmp        loc_2fcd

                     loc_2f8d:
0000000000002f8d         mov        rsi, r13                                    ; argument "__s2" for method j_strcmp, CODE XREF=main+2061
0000000000002f90         mov        rdi, rbp                                    ; argument "__s1" for method j_strcmp
0000000000002f93         call       j_strcmp                                    ; strcmp
0000000000002f98         test       eax, eax
0000000000002f9a         je         loc_2fc9

0000000000002f9c         mov        rax, qword [rbx+0x10]
0000000000002fa0         mov        rdx, r14
0000000000002fa3         movzx      ecx, byte [r15+rax+0x11]
0000000000002fa9         test       cl, cl
0000000000002fab         je         loc_2fb8

0000000000002fad         movzx      edi, cl
0000000000002fb0         call       visible.part.0                              ; visible.part.0
0000000000002fb5         mov        rdx, rax

                     loc_2fb8:
0000000000002fb8         lea        rdi, qword [aSS_b605]                       ; "%s = %s;", CODE XREF=main+2011
0000000000002fbf         mov        rsi, rbp
0000000000002fc2         xor        eax, eax
0000000000002fc4         call       wrapf                                       ; wrapf

                     loc_2fc9:
0000000000002fc9         add        rbx, 0x18                                   ; CODE XREF=main+1994

                     loc_2fcd:
0000000000002fcd         mov        rbp, qword [rbx]                            ; CODE XREF=main+1979
0000000000002fd0         mov        rsi, r12                                    ; argument "__s2" for method j_strcmp
0000000000002fd3         mov        rdi, rbp                                    ; argument "__s1" for method j_strcmp
0000000000002fd6         call       j_strcmp                                    ; strcmp
0000000000002fdb         test       eax, eax
0000000000002fdd         jne        loc_2f8d

0000000000002fdf         movzx      edx, byte [byte_211196]                     ; byte_211196
0000000000002fe6         movzx      esi, byte [byte_211197]                     ; byte_211197
0000000000002fed         lea        rdi, qword [aMinLuTimeLu]                   ; "min = %lu; time = %lu;"
0000000000002ff4         call       wrapf                                       ; wrapf
0000000000002ff9         cmp        dword [current_col], 0x0                    ; current_col
0000000000003000         je         loc_3022

0000000000003002         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003009         mov        rax, qword [rdi+0x28]
000000000000300d         cmp        rax, qword [rdi+0x30]
0000000000003011         jae        loc_3219

0000000000003017         lea        rdx, qword [rax+1]
000000000000301b         mov        qword [rdi+0x28], rdx
000000000000301f         mov        byte [rax], 0xa

                     loc_3022:
0000000000003022         mov        dword [current_col], 0x0                    ; current_col, CODE XREF=main+2096, main+2643
000000000000302c         lea        rbx, qword [mode_info]                      ; mode_info
0000000000003033         xor        r12d, r12d
0000000000003036         lea        r13, qword [mode.7192]                      ; mode.7192
000000000000303d         jmp        loc_3043

                     loc_303f:
000000000000303f         add        rbx, 0x20                                   ; CODE XREF=main+2177, main+2279, main+2298, main+2320

                     loc_3043:
0000000000003043         cmp        qword [rbx], 0x0                            ; CODE XREF=main+2157
0000000000003047         je         loc_2ecb

000000000000304d         test       byte [rbx+0xc], 0x8
0000000000003051         jne        loc_303f

0000000000003053         mov        ebp, dword [rbx+8]
0000000000003056         cmp        ebp, r12d
0000000000003059         je         loc_308b

000000000000305b         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003062         mov        rax, qword [rdi+0x28]
0000000000003066         cmp        rax, qword [rdi+0x30]
000000000000306a         jae        loc_312c

0000000000003070         lea        rdx, qword [rax+1]
0000000000003074         mov        qword [rdi+0x28], rdx
0000000000003078         mov        byte [rax], 0xa

                     loc_307b:
000000000000307b         mov        r12d, ebp                                   ; CODE XREF=main+2406
000000000000307e         mov        ebp, dword [rbx+8]
0000000000003081         mov        dword [current_col], 0x0                    ; current_col

                     loc_308b:
000000000000308b         mov        rsi, r13                                    ; CODE XREF=main+2185
000000000000308e         mov        edi, ebp
0000000000003090         call       mode_type_flag                              ; mode_type_flag
0000000000003095         mov        rdx, qword [rbx+0x18]
0000000000003099         test       rdx, rdx
000000000000309c         jne        loc_30a2

000000000000309e         mov        rdx, qword [rbx+0x10]

                     loc_30a2:
00000000000030a2         test       rax, rax                                    ; CODE XREF=main+2252
00000000000030a5         je         loc_3295

00000000000030ab         and        edx, dword [rax]
00000000000030ad         cmp        rdx, qword [rbx+0x10]
00000000000030b1         je         loc_30cf

00000000000030b3         test       byte [rbx+0xc], 0x4
00000000000030b7         je         loc_303f

00000000000030b9         mov        rsi, qword [rbx]
00000000000030bc         lea        rdi, qword [aMinLuTimeLun+24]               ; 0xb626
00000000000030c3         xor        eax, eax
00000000000030c5         call       wrapf                                       ; wrapf
00000000000030ca         jmp        loc_303f

                     loc_30cf:
00000000000030cf         mov        rsi, qword [rbx]                            ; CODE XREF=main+2273
00000000000030d2         lea        rdi, qword [aSS+4]                          ; 0xdacc
00000000000030d9         xor        eax, eax
00000000000030db         call       wrapf                                       ; wrapf
00000000000030e0         jmp        loc_303f

                     loc_30e5:
00000000000030e5         lea        rsi, qword [aStandardInput]                 ; argument "msgid" for method j_dcgettext, "standard input", CODE XREF=main+565
00000000000030ec         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000030f1         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000030f3         call       j_dcgettext                                 ; dcgettext
00000000000030f8         sub        rsp, 0x8
00000000000030fc         mov        r14, rax
00000000000030ff         lea        r8, qword [check_mode.7223]                 ; check_mode.7223
0000000000003106         lea        rax, qword [rsp+0x60+var_42]
000000000000310b         mov        edi, 0x1
0000000000003110         mov        ecx, r13d
0000000000003113         mov        rdx, rbx
0000000000003116         mov        rsi, r14
0000000000003119         push       rax
000000000000311a         lea        r9, qword [rsp+0x68+var_41]
000000000000311f         call       apply_settings                              ; apply_settings
0000000000003124         pop        rdi
0000000000003125         pop        r8
0000000000003127         jmp        loc_2a81

                     loc_312c:
000000000000312c         mov        esi, 0xa                                    ; argument #2 for method j___overflow, CODE XREF=main+2202
0000000000003131         call       j___overflow                                ; __overflow
0000000000003136         jmp        loc_307b

                     loc_313b:
000000000000313b         movzx      edx, byte [byte_211196]                     ; byte_211196, CODE XREF=main+1183
0000000000003142         movzx      esi, byte [byte_211197]                     ; byte_211197
0000000000003149         lea        rdi, qword [aMinLuTimeLun]                  ; "min = %lu; time = %lu;\\n"
0000000000003150         call       wrapf                                       ; wrapf
0000000000003155         jmp        loc_2c9a

                     loc_315a:
000000000000315a         mov        esi, 0xa                                    ; argument #2 for method j___overflow, CODE XREF=main+1312
000000000000315f         call       j___overflow                                ; __overflow
0000000000003164         jmp        loc_2d01

                     loc_3169:
0000000000003169         mov        esi, 0xa                                    ; argument #2 for method j___overflow, CODE XREF=main+1917
000000000000316e         call       j___overflow                                ; __overflow
0000000000003173         jmp        loc_2f5e

                     loc_3178:
0000000000003178         mov        esi, 0xa                                    ; argument #2 for method j___overflow, CODE XREF=main+1540
000000000000317d         call       j___overflow                                ; __overflow
0000000000003182         jmp        loc_2aee

                     loc_3187:
0000000000003187         mov        esi, 0xa                                    ; argument #2 for method j___overflow, CODE XREF=main+1802
000000000000318c         call       j___overflow                                ; __overflow
0000000000003191         jmp        loc_2eeb

                     loc_3196:
0000000000003196         mov        esi, 0xa                                    ; argument #2 for method j___overflow, CODE XREF=main+1027
000000000000319b         call       j___overflow                                ; __overflow
00000000000031a0         jmp        loc_2be4

                     loc_31a5:
00000000000031a5         lea        rcx, qword [__PRETTY_FUNCTION__.7318]       ; argument "__function" for method j___assert_fail, "display_changed", CODE XREF=main+1378
00000000000031ac         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/stty.c"
00000000000031b3         lea        rdi, qword [aBitsp]                         ; argument "__assertion" for method j___assert_fail, "bitsp"
00000000000031ba         mov        edx, 0x7a2                                  ; argument "__line" for method j___assert_fail
00000000000031bf         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_31c4:
00000000000031c4         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=main+814
                        ; endp

                     loc_31c9:
00000000000031c9         lea        rsi, qword [aTheOptionsForV]                ; argument "msgid" for method j_dcgettext, "the options for verbose and stty-readable output styles are\\nmutually exclusive", CODE XREF=main+523
00000000000031d0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000031d5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000031d7         call       j_dcgettext                                 ; dcgettext
00000000000031dc         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000031de         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000031e1         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000031e6         xor        eax, eax
00000000000031e8         call       j_error                                     ; error

                     loc_31ed:
00000000000031ed         lea        rsi, qword [aOnlyOneDeviceM]                ; argument "msgid" for method j_dcgettext, "only one device may be specified", CODE XREF=main+371
00000000000031f4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000031f9         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000031fb         call       j_dcgettext                                 ; dcgettext
0000000000003200         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003202         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003205         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000320a         xor        eax, eax
000000000000320c         call       j_error                                     ; error

                     loc_3211:
0000000000003211         mov        esi, r15d                                   ; CODE XREF=main+243
0000000000003214         jmp        loc_28f8

                     loc_3219:
0000000000003219         mov        esi, 0xa                                    ; argument #2 for method j___overflow, CODE XREF=main+2113
000000000000321e         call       j___overflow                                ; __overflow
0000000000003223         jmp        loc_3022

                     loc_3228:
0000000000003228         mov        esi, 0xa                                    ; argument #2 for method j___overflow, CODE XREF=main+1209
000000000000322d         call       j___overflow                                ; __overflow
0000000000003232         jmp        loc_2c9a

                     loc_3237:
0000000000003237         mov        rdx, r14                                    ; CODE XREF=main+1613
000000000000323a         mov        esi, 0x3
000000000000323f         xor        edi, edi
0000000000003241         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000003246         mov        rbx, rax
0000000000003249         call       j___errno_location                          ; __errno_location
000000000000324e         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000003250         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0xdacc
0000000000003257         mov        rcx, rbx
000000000000325a         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000325f         xor        eax, eax
0000000000003261         call       j_error                                     ; error

                     loc_3266:
0000000000003266         mov        rdx, r14                                    ; CODE XREF=main+1591
0000000000003269         mov        esi, 0x3
000000000000326e         xor        edi, edi
0000000000003270         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000003275         mov        rbx, rax
0000000000003278         call       j___errno_location                          ; __errno_location
000000000000327d         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000327f         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0xdacc
0000000000003286         mov        rcx, rbx
0000000000003289         mov        edi, 0x1                                    ; argument "__status" for method j_error
000000000000328e         xor        eax, eax
0000000000003290         call       j_error                                     ; error

                     loc_3295:
0000000000003295         lea        rcx, qword [__PRETTY_FUNCTION__.7335]       ; argument "__function" for method j___assert_fail, "display_all", CODE XREF=main+2261
000000000000329c         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/stty.c"
00000000000032a3         lea        rdi, qword [aBitsp]                         ; argument "__assertion" for method j___assert_fail, "bitsp"
00000000000032aa         mov        edx, 0x7f6                                  ; argument "__line" for method j___assert_fail
00000000000032af         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_32b4:
00000000000032b4         lea        rsi, qword [aWhenSpecifying]                ; argument "msgid" for method j_dcgettext, "when specifying an output style, modes may not be set", CODE XREF=main+545, main+556
00000000000032bb         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000032c0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000032c2         call       j_dcgettext                                 ; dcgettext
00000000000032c7         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000032c9         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000032cc         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000032d1         xor        eax, eax
00000000000032d3         call       j_error                                     ; error

                     loc_32d8:
00000000000032d8         mov        rdx, r14                                    ; CODE XREF=main+656, main+683
00000000000032db         mov        esi, 0x3
00000000000032e0         xor        edi, edi
00000000000032e2         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
00000000000032e7         lea        rsi, qword [aSCouldntResetN]                ; argument "msgid" for method j_dcgettext, "%s: couldn't reset non-blocking mode"
00000000000032ee         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000032f3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000032f5         mov        rbp, rax
00000000000032f8         call       j_dcgettext                                 ; dcgettext
00000000000032fd         mov        rbx, rax
0000000000003300         call       j___errno_location                          ; __errno_location
0000000000003305         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000003307         mov        rcx, rbp
000000000000330a         mov        rdx, rbx                                    ; argument "__format" for method j_error
000000000000330d         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003312         xor        eax, eax
0000000000003314         call       j_error                                     ; error

                     loc_3319:
0000000000003319         mov        rdx, r14                                    ; CODE XREF=main+633
000000000000331c         mov        esi, 0x3
0000000000003321         xor        edi, edi
0000000000003323         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000003328         mov        rbx, rax
000000000000332b         call       j___errno_location                          ; __errno_location
0000000000003330         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000003332         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0xdacc
0000000000003339         mov        rcx, rbx
000000000000333c         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003341         xor        eax, eax
0000000000003343         call       j_error                                     ; error
0000000000003348         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0xed10)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
0000000000003350         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0xeaa4)
0000000000003352         mov        r9, rdx
0000000000003355         pop        rsi
0000000000003356         mov        rdx, rsp
0000000000003359         and        rsp, 0xfffffffffffffff0
000000000000335d         push       rax
000000000000335e         push       rsp
000000000000335f         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
0000000000003366         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
000000000000336d         lea        rdi, qword [main]                           ; main
0000000000003374         call       qword [qword_210fd8+8]                      ; 0x210fe0
000000000000337a         hlt
                        ; endp
000000000000337b         align      128                                         ; End of unwind block (FDE at 0xeaa4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000003380         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
0000000000003387         push       rbp
0000000000003388         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
000000000000338f         cmp        rax, rdi
0000000000003392         mov        rbp, rsp
0000000000003395         je         loc_33b0

0000000000003397         mov        rax, qword [qword_210fd8]                   ; qword_210fd8
000000000000339e         test       rax, rax
00000000000033a1         je         loc_33b0

00000000000033a3         pop        rbp
00000000000033a4         jmp        rax
                        ; endp
00000000000033a6         align      16

                     loc_33b0:
00000000000033b0         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
00000000000033b1         ret
                        ; endp
00000000000033b2         align      64

                     register_tm_clones:
00000000000033c0         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
00000000000033c7         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
00000000000033ce         push       rbp
00000000000033cf         sub        rsi, rdi
00000000000033d2         mov        rbp, rsp
00000000000033d5         sar        rsi, 0x3
00000000000033d9         mov        rax, rsi
00000000000033dc         shr        rax, 0x3f
00000000000033e0         add        rsi, rax
00000000000033e3         sar        rsi, 0x1
00000000000033e6         je         loc_3400

00000000000033e8         mov        rax, qword [qword_210ff0]                   ; qword_210ff0
00000000000033ef         test       rax, rax
00000000000033f2         je         loc_3400

00000000000033f4         pop        rbp
00000000000033f5         jmp        rax
                        ; endp
00000000000033f7         align      1024

                     loc_3400:
0000000000003400         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000003401         ret
                        ; endp
0000000000003402         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
0000000000003410         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
0000000000003417         jne        loc_3448

0000000000003419         cmp        qword [qword_210ff8], 0x0                   ; qword_210ff8
0000000000003421         push       rbp
0000000000003422         mov        rbp, rsp
0000000000003425         je         loc_3433

0000000000003427         mov        rdi, qword [__dso_handle]                   ; __dso_handle
000000000000342e         call       j_qword_210ff8                              ; qword_210ff8

                     loc_3433:
0000000000003433         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
0000000000003438         mov        byte [completed.7697], 0x1                  ; completed.7697
000000000000343f         pop        rbp
0000000000003440         ret
                        ; endp
0000000000003441         align      8

                     loc_3448:
0000000000003448         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
000000000000344a         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000003450         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000003451         mov        rbp, rsp
0000000000003454         pop        rbp
0000000000003455         jmp        register_tm_clones                          ; register_tm_clones
000000000000345a         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     string_to_baud:
0000000000003460         push       r12                                         ; Begin of unwind block (FDE at 0xeb14), CODE XREF=sub_4bd0+274, sub_4bd0+771, sub_4bd0+1982
0000000000003462         lea        rsi, qword [a1000000+6]                     ; 0xb6c8
0000000000003469         push       rbp
000000000000346a         mov        r12, rdi
000000000000346d         push       rbx
000000000000346e         xor        ebp, ebp
0000000000003470         lea        rbx, qword [speeds+24]                      ; 0x20fa78
0000000000003477         jmp        loc_3490
0000000000003479         align      128

                     loc_3480:
0000000000003480         add        rbx, 0x18                                   ; CODE XREF=string_to_baud+58
0000000000003484         mov        rsi, qword [rbx-0x18]
0000000000003488         add        ebp, 0x1
000000000000348b         test       rsi, rsi
000000000000348e         je         loc_34b8

                     loc_3490:
0000000000003490         mov        rdi, r12                                    ; argument "__s1" for method j_strcmp, CODE XREF=string_to_baud+23
0000000000003493         call       j_strcmp                                    ; strcmp
0000000000003498         test       eax, eax
000000000000349a         jne        loc_3480

000000000000349c         movsxd     rbp, ebp
000000000000349f         lea        rax, qword [speeds]                         ; speeds
00000000000034a6         lea        rdx, qword [rbp+rbp*2]
00000000000034ab         pop        rbx
00000000000034ac         mov        eax, dword [rax+rdx*8+8]
00000000000034b0         pop        rbp
00000000000034b1         pop        r12
00000000000034b3         ret
                        ; endp
00000000000034b4         align      8

                     loc_34b8:
00000000000034b8         pop        rbx                                         ; CODE XREF=string_to_baud+46
00000000000034b9         mov        eax, 0xffffffff
00000000000034be         pop        rbp
00000000000034bf         pop        r12
00000000000034c1         ret
                        ; endp
00000000000034c2         align      16                                          ; End of unwind block (FDE at 0xeb14)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     mode_type_flag:
00000000000034d0         cmp        edi, 0x4                                    ; Begin of unwind block (FDE at 0xeb4c), CODE XREF=main+1357, main+2240, sub_4bd0+844, sub_4bd0+1042, sub_4bd0+2526, sub_4bd0+2586
00000000000034d3         ja         loc_3513

00000000000034d5         lea        rax, qword [switch_table_b8f0]              ; switch_table_b8f0
00000000000034dc         mov        edi, edi
00000000000034de         movsxd     rdx, dword [rax+rdi*4]
00000000000034e2         add        rdx, rax
00000000000034e5         jmp        rdx                                         ; switch statement using table at 0xb8f0, with 5 cases, 0x34f0,0x34f8,0x3500,0x3508,0x3510
00000000000034e7         align      16

                     loc_34f0:
00000000000034f0         lea        rax, qword [rsi+0xc]                        ; case 3, CODE XREF=mode_type_flag+21
00000000000034f4         ret
                        ; endp
00000000000034f5         align      8

                     loc_34f8:
00000000000034f8         lea        rax, qword [rsi+4]                          ; case 2, CODE XREF=mode_type_flag+21
00000000000034fc         ret
                        ; endp
00000000000034fd         align      256

                     loc_3500:
0000000000003500         mov        rax, rsi                                    ; case 1, CODE XREF=mode_type_flag+21
0000000000003503         ret
                        ; endp
0000000000003504         align      8

                     loc_3508:
0000000000003508         lea        rax, qword [rsi+8]                          ; case 0, CODE XREF=mode_type_flag+21
000000000000350c         ret
                        ; endp
000000000000350d         align      16

                     loc_3510:
0000000000003510         xor        eax, eax                                    ; case 4, CODE XREF=mode_type_flag+21
0000000000003512         ret
                        ; endp

                     loc_3513:
0000000000003513         sub        rsp, 0x8                                    ; CODE XREF=mode_type_flag+3
0000000000003517         call       j_abort                                     ; abort
                        ; endp
000000000000351c         align      32                                          ; End of unwind block (FDE at 0xeb4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_18: -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72
        ;    var_58: -88
        ;    var_68: -104
        ;    var_78: -120
        ;    var_88: -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int8_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D4: int32_t, -212
        ;    var_D8: int32_t, -216
        ;    var_E0: int64_t, -224


                     wrapf:
0000000000003520         push       rbx                                         ; Begin of unwind block (FDE at 0xeb64), CODE XREF=main+1007, main+1149, main+1424, main+1772, main+1897, main+2036, main+2084, main+2293, main+2315, main+2432, display_speed+127
0000000000003521         mov        r10, rdi
0000000000003524         sub        rsp, 0xe0
000000000000352b         test       al, al
000000000000352d         mov        qword [rsp+0xe8+var_B0], rsi
0000000000003532         mov        qword [rsp+0xe8+var_A8], rdx
0000000000003537         mov        qword [rsp+0xe8+var_A0], rcx
000000000000353c         mov        qword [rsp+0xe8+var_98], r8
0000000000003541         mov        qword [rsp+0xe8+var_90], r9
0000000000003546         je         loc_3582

0000000000003548         movaps     xmmword [rsp+0xe8+var_88], xmm0
000000000000354d         movaps     xmmword [rsp+0xe8+var_78], xmm1
0000000000003552         movaps     xmmword [rsp+0xe8+var_68], xmm2
000000000000355a         movaps     xmmword [rsp+0xe8+var_58], xmm3
0000000000003562         movaps     xmmword [rsp+0xe8+var_48], xmm4
000000000000356a         movaps     xmmword [rsp+0xe8+var_38], xmm5
0000000000003572         movaps     xmmword [rsp+0xe8+var_28], xmm6
000000000000357a         movaps     xmmword [rsp+0xe8+var_18], xmm7

                     loc_3582:
0000000000003582         mov        rax, qword [fs:0x28]                        ; CODE XREF=wrapf+38
000000000000358b         mov        qword [rsp+0xe8+var_C0], rax
0000000000003590         xor        eax, eax
0000000000003592         lea        rax, qword [rsp+0xe8+arg_0]
000000000000359a         lea        rdx, qword [rsp+0xe8+var_D8]
000000000000359f         lea        rdi, qword [rsp+0xe8+var_E0]
00000000000035a4         mov        rsi, r10
00000000000035a7         mov        qword [rsp+0xe8+var_D0], rax
00000000000035ac         lea        rax, qword [rsp+0xe8+var_B8]
00000000000035b1         mov        dword [rsp+0xe8+var_D8], 0x8
00000000000035b9         mov        dword [rsp+0xe8+var_D4], 0x30
00000000000035c1         mov        qword [rsp+0xe8+var_C8], rax
00000000000035c6         call       rpl_vasprintf                               ; rpl_vasprintf
00000000000035cb         test       eax, eax
00000000000035cd         mov        ebx, eax
00000000000035cf         js         loc_36a7

00000000000035d5         mov        eax, dword [current_col]                    ; current_col
00000000000035db         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000035e2         test       eax, eax
00000000000035e4         jle        loc_361f

00000000000035e6         mov        edx, dword [max_col]                        ; max_col
00000000000035ec         mov        rcx, qword [rdi+0x28]
00000000000035f0         mov        rsi, qword [rdi+0x30]
00000000000035f4         sub        edx, eax
00000000000035f6         cmp        edx, ebx
00000000000035f8         jge        loc_3658

00000000000035fa         cmp        rcx, rsi
00000000000035fd         jae        loc_3698

0000000000003603         lea        rax, qword [rcx+1]
0000000000003607         mov        qword [rdi+0x28], rax
000000000000360b         mov        byte [rcx], 0xa

                     loc_360e:
000000000000360e         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=wrapf+386
0000000000003615         mov        dword [current_col], 0x0                    ; current_col

                     loc_361f:
000000000000361f         mov        rsi, rdi                                    ; argument "__stream" for method j_fputs_unlocked, CODE XREF=wrapf+196, wrapf+344
0000000000003622         mov        rdi, qword [rsp+0xe8+var_E0]                ; argument "__s" for method j_fputs_unlocked
0000000000003627         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000362c         mov        rdi, qword [rsp+0xe8+var_E0]                ; argument "__ptr" for method j_free
0000000000003631         call       j_free                                      ; free
0000000000003636         add        dword [current_col], ebx                    ; current_col
000000000000363c         mov        rax, qword [rsp+0xe8+var_C0]
0000000000003641         xor        rax, qword [fs:0x28]
000000000000364a         jne        loc_36ac

000000000000364c         add        rsp, 0xe0
0000000000003653         pop        rbx
0000000000003654         ret
                        ; endp
0000000000003655         align      8

                     loc_3658:
0000000000003658         cmp        rcx, rsi                                    ; CODE XREF=wrapf+216
000000000000365b         jae        loc_3680

000000000000365d         lea        rdx, qword [rcx+1]
0000000000003661         mov        qword [rdi+0x28], rdx
0000000000003665         mov        byte [rcx], 0x20

                     loc_3668:
0000000000003668         add        eax, 0x1                                    ; CODE XREF=wrapf+368
000000000000366b         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003672         mov        dword [current_col], eax                    ; current_col
0000000000003678         jmp        loc_361f
000000000000367a         align      128

                     loc_3680:
0000000000003680         mov        esi, 0x20                                   ; argument #2 for method j___overflow, CODE XREF=wrapf+315
0000000000003685         call       j___overflow                                ; __overflow
000000000000368a         mov        eax, dword [current_col]                    ; current_col
0000000000003690         jmp        loc_3668
0000000000003692         align      8

                     loc_3698:
0000000000003698         mov        esi, 0xa                                    ; argument #2 for method j___overflow, CODE XREF=wrapf+221
000000000000369d         call       j___overflow                                ; __overflow
00000000000036a2         jmp        loc_360e

                     loc_36a7:
00000000000036a7         call       xalloc_die                                  ; xalloc_die, CODE XREF=wrapf+175
                        ; endp

                     loc_36ac:
00000000000036ac         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=wrapf+298
                        ; endp
00000000000036b1         align      64                                          ; End of unwind block (FDE at 0xeb64)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     display_speed:
00000000000036c0         push       r12                                         ; Begin of unwind block (FDE at 0xeb8c), CODE XREF=main+986, main+1863, sub_4bd0+1863
00000000000036c2         push       rbp
00000000000036c3         mov        rbp, rdi
00000000000036c6         push       rbx
00000000000036c7         mov        ebx, esi
00000000000036c9         call       j_cfgetispeed                               ; cfgetispeed
00000000000036ce         test       eax, eax
00000000000036d0         je         loc_36ea

00000000000036d2         mov        rdi, rbp                                    ; argument "__termios_p" for method j_cfgetispeed
00000000000036d5         call       j_cfgetispeed                               ; cfgetispeed
00000000000036da         mov        rdi, rbp                                    ; argument "__termios_p" for method j_cfgetospeed
00000000000036dd         mov        r12d, eax
00000000000036e0         call       j_cfgetospeed                               ; cfgetospeed
00000000000036e5         cmp        r12d, eax
00000000000036e8         jne        loc_3760

                     loc_36ea:
00000000000036ea         mov        rdi, rbp                                    ; argument "__termios_p" for method j_cfgetospeed, CODE XREF=display_speed+16
00000000000036ed         call       j_cfgetospeed                               ; cfgetospeed
00000000000036f2         test       eax, eax
00000000000036f4         je         loc_3850

00000000000036fa         lea        rdx, qword [speeds+32]                      ; 0x20fa80
0000000000003701         lea        rsi, qword [a1345+7]                        ; 0xb663
0000000000003708         xor        ecx, ecx
000000000000370a         jmp        loc_3721
000000000000370c         align      16

                     loc_3710:
0000000000003710         add        rdx, 0x18                                   ; CODE XREF=display_speed+103
0000000000003714         cmp        eax, dword [rdx-0x18]
0000000000003717         je         loc_3800

000000000000371d         mov        rsi, qword [rdx-8]

                     loc_3721:
0000000000003721         add        ecx, 0x1                                    ; CODE XREF=display_speed+74
0000000000003724         test       rsi, rsi
0000000000003727         jne        loc_3710

                     loc_3729:
0000000000003729         lea        rax, qword [aSpeedLuBaud]                   ; "speed %lu baud;", CODE XREF=display_speed+339, display_speed+402
0000000000003730         lea        rdi, qword [aLuLun+4]                       ; 0xb2f8
0000000000003737         test       bl, bl
0000000000003739         cmovne     rdi, rax
000000000000373d         xor        eax, eax
000000000000373f         call       wrapf                                       ; wrapf

                     loc_3744:
0000000000003744         test       bl, bl                                      ; CODE XREF=display_speed+309
0000000000003746         jne        loc_3752

0000000000003748         mov        dword [current_col], 0x0                    ; current_col

                     loc_3752:
0000000000003752         pop        rbx                                         ; CODE XREF=display_speed+134
0000000000003753         pop        rbp
0000000000003754         pop        r12
0000000000003756         ret
                        ; endp
0000000000003757         align      32

                     loc_3760:
0000000000003760         mov        rdi, rbp                                    ; argument "__termios_p" for method j_cfgetospeed, CODE XREF=display_speed+40
0000000000003763         call       j_cfgetospeed                               ; cfgetospeed
0000000000003768         test       eax, eax
000000000000376a         je         loc_3799

000000000000376c         lea        rdx, qword [speeds+32]                      ; 0x20fa80
0000000000003773         lea        rsi, qword [a1345+7]                        ; 0xb663
000000000000377a         xor        ecx, ecx
000000000000377c         jmp        loc_3791
000000000000377e         align      128

                     loc_3780:
0000000000003780         add        rdx, 0x18                                   ; CODE XREF=display_speed+215
0000000000003784         cmp        eax, dword [rdx-0x18]
0000000000003787         je         loc_3838

000000000000378d         mov        rsi, qword [rdx-8]

                     loc_3791:
0000000000003791         add        ecx, 0x1                                    ; CODE XREF=display_speed+188
0000000000003794         test       rsi, rsi
0000000000003797         jne        loc_3780

                     loc_3799:
0000000000003799         xor        r12d, r12d                                  ; CODE XREF=display_speed+170

                     loc_379c:
000000000000379c         mov        rdi, rbp                                    ; argument "__termios_p" for method j_cfgetispeed, CODE XREF=display_speed+395
000000000000379f         call       j_cfgetispeed                               ; cfgetispeed
00000000000037a4         test       eax, eax
00000000000037a6         je         loc_37d5

00000000000037a8         lea        rcx, qword [speeds+32]                      ; 0x20fa80
00000000000037af         lea        rdi, qword [a1345+7]                        ; 0xb663
00000000000037b6         xor        esi, esi
00000000000037b8         jmp        loc_37cd
00000000000037ba         align      64

                     loc_37c0:
00000000000037c0         add        rcx, 0x18                                   ; CODE XREF=display_speed+275
00000000000037c4         cmp        eax, dword [rcx-0x18]
00000000000037c7         je         loc_3820

00000000000037c9         mov        rdi, qword [rcx-8]

                     loc_37cd:
00000000000037cd         add        esi, 0x1                                    ; CODE XREF=display_speed+248
00000000000037d0         test       rdi, rdi
00000000000037d3         jne        loc_37c0

                     loc_37d5:
00000000000037d5         xor        esi, esi                                    ; CODE XREF=display_speed+230

                     loc_37d7:
00000000000037d7         lea        rax, qword [aIspeedLuBaudOs]                ; "ispeed %lu baud; ospeed %lu baud;", CODE XREF=display_speed+371
00000000000037de         lea        rdi, qword [aLuLun]                         ; "%lu %lu\\n"
00000000000037e5         test       bl, bl
00000000000037e7         mov        rdx, r12
00000000000037ea         cmovne     rdi, rax
00000000000037ee         xor        eax, eax
00000000000037f0         call       wrapf                                       ; wrapf
00000000000037f5         jmp        loc_3744
00000000000037fa         align      2048

                     loc_3800:
0000000000003800         movsxd     rcx, ecx                                    ; CODE XREF=display_speed+87
0000000000003803         lea        rax, qword [speeds]                         ; speeds
000000000000380a         lea        rdx, qword [rcx+rcx*2]
000000000000380e         mov        rsi, qword [rax+rdx*8+0x10]
0000000000003813         jmp        loc_3729
0000000000003818         align      32

                     loc_3820:
0000000000003820         movsxd     rsi, esi                                    ; CODE XREF=display_speed+263
0000000000003823         lea        rax, qword [speeds]                         ; speeds
000000000000382a         lea        rdx, qword [rsi+rsi*2]
000000000000382e         mov        rsi, qword [rax+rdx*8+0x10]
0000000000003833         jmp        loc_37d7
0000000000003835         align      8

                     loc_3838:
0000000000003838         movsxd     rcx, ecx                                    ; CODE XREF=display_speed+199
000000000000383b         lea        rax, qword [speeds]                         ; speeds
0000000000003842         lea        rdx, qword [rcx+rcx*2]
0000000000003846         mov        r12, qword [rax+rdx*8+0x10]
000000000000384b         jmp        loc_379c

                     loc_3850:
0000000000003850         xor        esi, esi                                    ; CODE XREF=display_speed+52
0000000000003852         jmp        loc_3729
0000000000003857         align      32                                          ; End of unwind block (FDE at 0xeb8c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     integer_arg:
0000000000003860         push       rbp                                         ; Begin of unwind block (FDE at 0xebbc), CODE XREF=sub_4bd0+976, sub_4bd0+1016, sub_4bd0+1192, sub_4bd0+1509
0000000000003861         push       rbx
0000000000003862         mov        rbp, rsi
0000000000003865         lea        rsi, qword [aInvalidInteger]                ; argument "msgid" for method j_dcgettext, "invalid integer argument"
000000000000386c         mov        rbx, rdi
000000000000386f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003874         sub        rsp, 0x8
0000000000003878         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000387a         call       j_dcgettext                                 ; dcgettext
000000000000387f         sub        rsp, 0x8
0000000000003883         lea        r8, qword [aInvalidInteger+25]              ; 0xb316
000000000000388a         mov        rcx, rbp
000000000000388d         push       0x0
000000000000388f         mov        rdi, rbx
0000000000003892         mov        r9, rax
0000000000003895         xor        edx, edx
0000000000003897         xor        esi, esi
0000000000003899         call       xnumtoumax                                  ; xnumtoumax
000000000000389e         add        rsp, 0x18
00000000000038a2         pop        rbx
00000000000038a3         pop        rbp
00000000000038a4         ret
                        ; endp
00000000000038a5         align      16                                          ; End of unwind block (FDE at 0xebbc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     visible.part.0:
00000000000038b0         cmp        dil, 0x1f                                   ; Begin of unwind block (FDE at 0xebec), CODE XREF=main+1838, main+2016
00000000000038b4         jbe        loc_38d8

00000000000038b6         cmp        dil, 0x7e
00000000000038ba         ja         loc_3900

00000000000038bc         lea        rax, qword [byte_211121]                    ; byte_211121
00000000000038c3         mov        byte [buf.7417], dil                        ; buf.7417
00000000000038ca         mov        byte [rax], 0x0
00000000000038cd         lea        rax, qword [buf.7417]                       ; buf.7417
00000000000038d4         ret
                        ; endp
00000000000038d5         align      8

                     loc_38d8:
00000000000038d8         add        edi, 0x40                                   ; CODE XREF=visible.part.0+4
00000000000038db         lea        rax, qword [byte_211122]                    ; byte_211122
00000000000038e2         mov        byte [buf.7417], 0x5e                       ; buf.7417
00000000000038e9         mov        byte [byte_211121], dil                     ; byte_211121

                     loc_38f0:
00000000000038f0         mov        byte [rax], 0x0                             ; CODE XREF=visible.part.0+127, visible.part.0+155, visible.part.0+184, visible.part.0+211
00000000000038f3         lea        rax, qword [buf.7417]                       ; buf.7417
00000000000038fa         ret
                        ; endp
00000000000038fb         align      256

                     loc_3900:
0000000000003900         cmp        dil, 0x7f                                   ; CODE XREF=visible.part.0+10
0000000000003904         je         loc_3938

0000000000003906         mov        edx, 0x2d4d
000000000000390b         cmp        dil, 0x9f
000000000000390f         mov        word [buf.7417], dx                         ; buf.7417
0000000000003916         jbe        loc_3950

0000000000003918         cmp        dil, 0xff
000000000000391c         je         loc_3970

000000000000391e         add        edi, 0xffffff80
0000000000003921         lea        rax, qword [byte_211123]                    ; byte_211123
0000000000003928         mov        byte [byte_211122], dil                     ; byte_211122
000000000000392f         jmp        loc_38f0
0000000000003931         align      8

                     loc_3938:
0000000000003938         mov        ecx, 0x3f5e                                 ; CODE XREF=visible.part.0+84
000000000000393d         lea        rax, qword [byte_211122]                    ; byte_211122
0000000000003944         mov        word [buf.7417], cx                         ; buf.7417
000000000000394b         jmp        loc_38f0
000000000000394d         align      16

                     loc_3950:
0000000000003950         sub        edi, 0x40                                   ; CODE XREF=visible.part.0+102
0000000000003953         mov        byte [byte_211122], 0x5e                    ; byte_211122
000000000000395a         lea        rax, qword [byte_211123+1]                  ; 0x211124
0000000000003961         mov        byte [byte_211123], dil                     ; byte_211123
0000000000003968         jmp        loc_38f0
000000000000396a         align      16

                     loc_3970:
0000000000003970         mov        eax, 0x3f5e                                 ; CODE XREF=visible.part.0+108
0000000000003975         mov        word [byte_211122], ax                      ; byte_211122
000000000000397c         lea        rax, qword [byte_211123+1]                  ; 0x211124
0000000000003983         jmp        loc_38f0
0000000000003988         align      16                                          ; End of unwind block (FDE at 0xebec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_16: int16_t, -22
        ;    var_18: int8_t, -24
        ;    var_20: int64_t, -32


                     screen_columns:
0000000000003990         sub        rsp, 0x28                                   ; Begin of unwind block (FDE at 0xec00), CODE XREF=main+931, sub_4bd0+1639, sub_4bd0+1845
0000000000003994         mov        esi, 0x5413                                 ; argument "__request" for method j_ioctl
0000000000003999         mov        edi, 0x1                                    ; argument "__fd" for method j_ioctl
000000000000399e         mov        rax, qword [fs:0x28]
00000000000039a7         mov        qword [rsp+0x28+var_10], rax
00000000000039ac         xor        eax, eax
00000000000039ae         lea        rdx, qword [rsp+0x28+var_18]
00000000000039b3         call       j_ioctl                                     ; ioctl
00000000000039b8         test       eax, eax
00000000000039ba         jne        loc_39c6

00000000000039bc         movzx      eax, word [rsp+0x28+var_16]
00000000000039c1         test       ax, ax
00000000000039c4         jne        loc_39f8

                     loc_39c6:
00000000000039c6         lea        rdi, qword [aColumns]                       ; argument "__name" for method j_getenv, "COLUMNS", CODE XREF=screen_columns+42
00000000000039cd         call       j_getenv                                    ; getenv
00000000000039d2         test       rax, rax
00000000000039d5         je         loc_39f3

00000000000039d7         lea        rcx, qword [rsp+0x28+var_20]
00000000000039dc         lea        r8, qword [aWrittenBySSAnd+27]              ; 0xe041
00000000000039e3         xor        edx, edx
00000000000039e5         xor        esi, esi
00000000000039e7         mov        rdi, rax
00000000000039ea         call       xstrtol                                     ; xstrtol
00000000000039ef         test       eax, eax
00000000000039f1         je         loc_3a10

                     loc_39f3:
00000000000039f3         mov        eax, 0x50                                   ; CODE XREF=screen_columns+69, screen_columns+144

                     loc_39f8:
00000000000039f8         mov        rcx, qword [rsp+0x28+var_10]                ; CODE XREF=screen_columns+52, screen_columns+146
00000000000039fd         xor        rcx, qword [fs:0x28]
0000000000003a06         jne        loc_3a24

0000000000003a08         add        rsp, 0x28
0000000000003a0c         ret
                        ; endp
0000000000003a0d         align      16

                     loc_3a10:
0000000000003a10         mov        rax, qword [rsp+0x28+var_20]                ; CODE XREF=screen_columns+97
0000000000003a15         lea        rdx, qword [rax-1]
0000000000003a19         cmp        rdx, 0x7ffffffe
0000000000003a20         ja         loc_39f3

0000000000003a22         jmp        loc_39f8

                     loc_3a24:
0000000000003a24         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=screen_columns+118
                        ; endp
0000000000003a29         align      16                                          ; End of unwind block (FDE at 0xec00)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_36: int16_t, -54
        ;    var_38: int16_t, -56
        ;    var_58: int64_t, -88
        ;    var_5E: int16_t, -94
        ;    var_60: int16_t, -96
        ;    var_90: int64_t, -144
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_E0: int64_t, -224
        ;    var_E8: int64_t, -232
        ;    var_F0: int64_t, -240
        ;    var_F8: int64_t, -248
        ;    var_100: int64_t, -256
        ;    var_108: int64_t, -264


                     set_window_size:
0000000000003a30         push       r14                                         ; Begin of unwind block (FDE at 0xec1c), CODE XREF=sub_4bd0+991, sub_4bd0+1207
0000000000003a32         push       r13
0000000000003a34         mov        r13, rdx
0000000000003a37         push       r12
0000000000003a39         push       rbp
0000000000003a3a         mov        r12d, edi
0000000000003a3d         push       rbx
0000000000003a3e         xor        edi, edi                                    ; argument "__fd" for method j_ioctl
0000000000003a40         mov        ebp, esi
0000000000003a42         mov        esi, 0x5413                                 ; argument "__request" for method j_ioctl
0000000000003a47         sub        rsp, 0x10
0000000000003a4b         mov        rax, qword [fs:0x28]
0000000000003a54         mov        qword [rsp+0x38+var_30], rax
0000000000003a59         xor        eax, eax
0000000000003a5b         mov        rbx, rsp
0000000000003a5e         mov        rdx, rbx
0000000000003a61         call       j_ioctl                                     ; ioctl
0000000000003a66         test       eax, eax
0000000000003a68         je         loc_3a7e

0000000000003a6a         call       j___errno_location                          ; __errno_location
0000000000003a6f         cmp        dword [rax], 0x16
0000000000003a72         mov        r14, rax
0000000000003a75         jne        loc_3ac3

0000000000003a77         mov        qword [rbx], 0x0

                     loc_3a7e:
0000000000003a7e         test       r12d, r12d                                  ; CODE XREF=set_window_size+56
0000000000003a81         js         loc_3a88

0000000000003a83         mov        word [rsp+0x38+var_38], r12w

                     loc_3a88:
0000000000003a88         test       ebp, ebp                                    ; CODE XREF=set_window_size+81
0000000000003a8a         js         loc_3a91

0000000000003a8c         mov        word [rsp+0x38+var_36], bp

                     loc_3a91:
0000000000003a91         xor        edi, edi                                    ; argument "__fd" for method j_ioctl, CODE XREF=set_window_size+90
0000000000003a93         xor        eax, eax
0000000000003a95         mov        rdx, rbx
0000000000003a98         mov        esi, 0x5414                                 ; argument "__request" for method j_ioctl
0000000000003a9d         call       j_ioctl                                     ; ioctl
0000000000003aa2         test       eax, eax
0000000000003aa4         jne        loc_3af0

0000000000003aa6         mov        rax, qword [rsp+0x38+var_30]
0000000000003aab         xor        rax, qword [fs:0x28]
0000000000003ab4         jne        loc_3aeb

0000000000003ab6         add        rsp, 0x10
0000000000003aba         pop        rbx
0000000000003abb         pop        rbp
0000000000003abc         pop        r12
0000000000003abe         pop        r13
0000000000003ac0         pop        r14
0000000000003ac2         ret
                        ; endp

                     loc_3ac3:
0000000000003ac3         mov        rdx, r13                                    ; CODE XREF=set_window_size+69
0000000000003ac6         mov        esi, 0x3
0000000000003acb         xor        edi, edi
0000000000003acd         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000003ad2         mov        esi, dword [r14]                            ; argument "__errnum" for method j_error
0000000000003ad5         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0xdacc
0000000000003adc         mov        rcx, rax
0000000000003adf         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003ae4         xor        eax, eax
0000000000003ae6         call       j_error                                     ; error

                     loc_3aeb:
0000000000003aeb         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=set_window_size+132
                        ; endp

                     loc_3af0:
0000000000003af0         mov        rdx, r13                                    ; CODE XREF=set_window_size+116
0000000000003af3         mov        esi, 0x3
0000000000003af8         xor        edi, edi
0000000000003afa         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000003aff         mov        rbx, rax
0000000000003b02         call       j___errno_location                          ; __errno_location
0000000000003b07         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000003b09         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0xdacc
0000000000003b10         mov        rcx, rbx
0000000000003b13         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003b18         xor        eax, eax
0000000000003b1a         call       j_error                                     ; error
0000000000003b1f         nop                                                    ; End of unwind block (FDE at 0xec1c)
                     display_window_size:
0000000000003b20         push       r12                                         ; Begin of unwind block (FDE at 0xec60), CODE XREF=main+1876, sub_4bd0+1667
0000000000003b22         push       rbp
0000000000003b23         mov        rbp, rsi
0000000000003b26         push       rbx
0000000000003b27         mov        esi, 0x5413                                 ; argument "__request" for method j_ioctl
0000000000003b2c         mov        ebx, edi
0000000000003b2e         xor        edi, edi                                    ; argument "__fd" for method j_ioctl
0000000000003b30         sub        rsp, 0x10
0000000000003b34         mov        rax, qword [fs:0x28]
0000000000003b3d         mov        qword [rsp+0x60+var_58], rax
0000000000003b42         xor        eax, eax
0000000000003b44         mov        rdx, rsp
0000000000003b47         call       j_ioctl                                     ; ioctl
0000000000003b4c         test       eax, eax
0000000000003b4e         je         loc_3b80

0000000000003b50         call       j___errno_location                          ; __errno_location
0000000000003b55         cmp        dword [rax], 0x16
0000000000003b58         mov        r12, rax
0000000000003b5b         jne        loc_3bba

0000000000003b5d         test       bl, bl
0000000000003b5f         je         loc_3be8

                     loc_3b65:
0000000000003b65         mov        rax, qword [rsp+0x60+var_58]                ; CODE XREF=display_window_size+123, display_window_size+152
0000000000003b6a         xor        rax, qword [fs:0x28]
0000000000003b73         jne        loc_3be3

0000000000003b75         add        rsp, 0x10
0000000000003b79         pop        rbx
0000000000003b7a         pop        rbp
0000000000003b7b         pop        r12
0000000000003b7d         ret
                        ; endp
0000000000003b7e         align      128

                     loc_3b80:
0000000000003b80         test       bl, bl                                      ; CODE XREF=display_window_size+46
0000000000003b82         movzx      edx, word [rsp+0x60+var_5E]
0000000000003b87         movzx      esi, word [rsp+0x60+var_60]
0000000000003b8b         je         loc_3ba0

0000000000003b8d         lea        rdi, qword [aRowsDColumnsD]                 ; "rows %d; columns %d;"
0000000000003b94         xor        eax, eax
0000000000003b96         call       wrapf                                       ; wrapf
0000000000003b9b         jmp        loc_3b65
0000000000003b9d         align      32

                     loc_3ba0:
0000000000003ba0         lea        rdi, qword [aDDn]                           ; "%d %d\\n", CODE XREF=display_window_size+107
0000000000003ba7         xor        eax, eax
0000000000003ba9         call       wrapf                                       ; wrapf
0000000000003bae         mov        dword [current_col], 0x0                    ; current_col
0000000000003bb8         jmp        loc_3b65

                     loc_3bba:
0000000000003bba         mov        rdx, rbp                                    ; CODE XREF=display_window_size+59
0000000000003bbd         mov        esi, 0x3
0000000000003bc2         xor        edi, edi
0000000000003bc4         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000003bc9         mov        esi, dword [r12]                            ; argument "__errnum" for method j_error
0000000000003bcd         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0xdacc
0000000000003bd4         mov        rcx, rax
0000000000003bd7         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003bdc         xor        eax, eax
0000000000003bde         call       j_error                                     ; error

                     loc_3be3:
0000000000003be3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=display_window_size+83
                        ; endp

                     loc_3be8:
0000000000003be8         mov        rdx, rbp                                    ; CODE XREF=display_window_size+63
0000000000003beb         mov        esi, 0x3
0000000000003bf0         xor        edi, edi
0000000000003bf2         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000003bf7         lea        rsi, qword [aSNoSizeInforma]                ; argument "msgid" for method j_dcgettext, "%s: no size information for this device"
0000000000003bfe         mov        rbx, rax
0000000000003c01         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003c06         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003c08         call       j_dcgettext                                 ; dcgettext
0000000000003c0d         mov        rcx, rbx
0000000000003c10         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000003c13         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003c15         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000003c1a         xor        eax, eax
0000000000003c1c         call       j_error                                     ; error
0000000000003c21         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0xec60)
0000000000003c26         nop        word [cs:rax+rax]
                     usage:
0000000000003c30         push       r13                                         ; Begin of unwind block (FDE at 0xec94), CODE XREF=main+1564, sub_4bd0+1278
0000000000003c32         push       r12
0000000000003c34         mov        edx, 0x5
0000000000003c39         push       rbp
0000000000003c3a         push       rbx
0000000000003c3b         mov        ebp, edi
0000000000003c3d         sub        rsp, 0x88
0000000000003c44         mov        rbx, qword [program_name]                   ; program_name
0000000000003c4b         mov        rax, qword [fs:0x28]
0000000000003c54         mov        qword [rsp+0x108+var_90], rax
0000000000003c59         xor        eax, eax
0000000000003c5b         test       edi, edi
0000000000003c5d         je         loc_3c8d

0000000000003c5f         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
0000000000003c66         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003c68         call       j_dcgettext                                 ; dcgettext
0000000000003c6d         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000003c74         mov        rdx, rax
0000000000003c77         mov        rcx, rbx
0000000000003c7a         mov        esi, 0x1
0000000000003c7f         xor        eax, eax
0000000000003c81         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_3c86:
0000000000003c86         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+3686
0000000000003c88         call       j_exit                                      ; exit
                        ; endp

                     loc_3c8d:
0000000000003c8d         lea        rsi, qword [aUsageSFDeviceF]                ; argument "msgid" for method j_dcgettext, "Usage: %s [-F DEVICE | --file=DEVICE] [SETTING]...\\n  or:  %s [-F DEVICE | --file=DEVICE] [-a|--all]\\n  or:  %s [-F DEVICE | --file=DEVICE] [-g|--save]\\n", CODE XREF=usage+45
0000000000003c94         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003c96         call       j_dcgettext                                 ; dcgettext
0000000000003c9b         mov        r8, rbx
0000000000003c9e         mov        rcx, rbx
0000000000003ca1         mov        rdx, rbx
0000000000003ca4         mov        rsi, rax
0000000000003ca7         mov        edi, 0x1
0000000000003cac         xor        eax, eax
0000000000003cae         call       j___printf_chk                              ; __printf_chk
0000000000003cb3         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003cba         lea        rsi, qword [aPrintOrChangeT]                ; argument "msgid" for method j_dcgettext, "Print or change terminal characteristics.\\n"
0000000000003cc1         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003cc6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003cc8         call       j_dcgettext                                 ; dcgettext
0000000000003ccd         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003cd0         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003cd3         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003cd8         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003cdf         lea        rsi, qword [aNmandatoryArgu]                ; argument "msgid" for method j_dcgettext, "\\nMandatory arguments to long options are mandatory for short options too.\\n"
0000000000003ce6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003ceb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003ced         call       j_dcgettext                                 ; dcgettext
0000000000003cf2         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003cf5         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003cf8         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003cfd         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003d04         lea        rsi, qword [aAAllPrintAllCu]                ; argument "msgid" for method j_dcgettext, "  -a, --all          print all current settings in human-readable form\\n  -g, --save         print all current settings in a stty-readable form\\n  -F, --file=DEVICE  open and use the specified DEVICE instead of stdin\\n"
0000000000003d0b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003d10         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003d12         call       j_dcgettext                                 ; dcgettext
0000000000003d17         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003d1a         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003d1d         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003d22         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003d29         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
0000000000003d30         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003d35         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003d37         call       j_dcgettext                                 ; dcgettext
0000000000003d3c         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003d3f         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003d42         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003d47         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003d4e         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
0000000000003d55         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003d5a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003d5c         call       j_dcgettext                                 ; dcgettext
0000000000003d61         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003d64         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003d67         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003d6c         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003d73         lea        rsi, qword [aNoptionalBefor]                ; argument "msgid" for method j_dcgettext, "\\nOptional - before SETTING indicates negation.  An * marks non-POSIX\\nsettings.  The underlying system defines which settings are available.\\n"
0000000000003d7a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003d7f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003d81         call       j_dcgettext                                 ; dcgettext
0000000000003d86         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003d89         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003d8c         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003d91         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003d98         lea        rsi, qword [aNspecialCharac]                ; argument "msgid" for method j_dcgettext, "\\nSpecial characters:\\n"
0000000000003d9f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003da4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003da6         call       j_dcgettext                                 ; dcgettext
0000000000003dab         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003dae         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003db1         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003db6         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003dbd         lea        rsi, qword [aDiscardCharCha]                ; argument "msgid" for method j_dcgettext, " * discard CHAR  CHAR will toggle discarding of output\\n"
0000000000003dc4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003dc9         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003dcb         call       j_dcgettext                                 ; dcgettext
0000000000003dd0         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003dd3         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003dd6         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003ddb         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003de2         lea        rsi, qword [aEofCharCharWil]                ; argument "msgid" for method j_dcgettext, "   eof CHAR      CHAR will send an end of file (terminate the input)\\n   eol CHAR      CHAR will end the line\\n"
0000000000003de9         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003dee         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003df0         call       j_dcgettext                                 ; dcgettext
0000000000003df5         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003df8         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003dfb         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003e00         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003e07         lea        rsi, qword [aEol2CharAltern]                ; argument "msgid" for method j_dcgettext, " * eol2 CHAR     alternate CHAR for ending the line\\n"
0000000000003e0e         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003e13         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003e15         call       j_dcgettext                                 ; dcgettext
0000000000003e1a         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003e1d         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003e20         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003e25         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003e2c         lea        rsi, qword [aEraseCharCharW]                ; argument "msgid" for method j_dcgettext, "   erase CHAR    CHAR will erase the last character typed\\n   intr CHAR     CHAR will send an interrupt signal\\n   kill CHAR     CHAR will erase the current line\\n"
0000000000003e33         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003e38         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003e3a         call       j_dcgettext                                 ; dcgettext
0000000000003e3f         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003e42         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003e45         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003e4a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003e51         lea        rsi, qword [aLnextCharCharW]                ; argument "msgid" for method j_dcgettext, " * lnext CHAR    CHAR will enter the next character quoted\\n"
0000000000003e58         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003e5d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003e5f         call       j_dcgettext                                 ; dcgettext
0000000000003e64         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003e67         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003e6a         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003e6f         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003e76         lea        rsi, qword [aQuitCharCharWi]                ; argument "msgid" for method j_dcgettext, "   quit CHAR     CHAR will send a quit signal\\n"
0000000000003e7d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003e82         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003e84         call       j_dcgettext                                 ; dcgettext
0000000000003e89         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003e8c         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003e8f         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003e94         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003e9b         lea        rsi, qword [aRprntCharCharW]                ; argument "msgid" for method j_dcgettext, " * rprnt CHAR    CHAR will redraw the current line\\n"
0000000000003ea2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003ea7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003ea9         call       j_dcgettext                                 ; dcgettext
0000000000003eae         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003eb1         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003eb4         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003eb9         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003ec0         lea        rsi, qword [aStartCharCharW]                ; argument "msgid" for method j_dcgettext, "   start CHAR    CHAR will restart the output after stopping it\\n   stop CHAR     CHAR will stop the output\\n   susp CHAR     CHAR will send a terminal stop signal\\n"
0000000000003ec7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003ecc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003ece         call       j_dcgettext                                 ; dcgettext
0000000000003ed3         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003ed6         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003ed9         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003ede         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003ee5         lea        rsi, qword [aSwtchCharCharW]                ; argument "msgid" for method j_dcgettext, " * swtch CHAR    CHAR will switch to a different shell layer\\n"
0000000000003eec         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003ef1         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003ef3         call       j_dcgettext                                 ; dcgettext
0000000000003ef8         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003efb         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003efe         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003f03         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003f0a         lea        rsi, qword [aWeraseCharChar]                ; argument "msgid" for method j_dcgettext, " * werase CHAR   CHAR will erase the last word typed\\n"
0000000000003f11         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003f16         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003f18         call       j_dcgettext                                 ; dcgettext
0000000000003f1d         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003f20         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003f23         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003f28         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003f2f         lea        rsi, qword [aNspecialSettin]                ; argument "msgid" for method j_dcgettext, "\\nSpecial settings:\\n   N             set the input and output speeds to N bauds\\n"
0000000000003f36         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003f3b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003f3d         call       j_dcgettext                                 ; dcgettext
0000000000003f42         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003f45         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003f48         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003f4d         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003f54         lea        rsi, qword [aColsNTellTheKe]                ; argument "msgid" for method j_dcgettext, " * cols N        tell the kernel that the terminal has N columns\\n * columns N     same as cols N\\n"
0000000000003f5b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003f60         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003f62         call       j_dcgettext                                 ; dcgettext
0000000000003f67         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003f6a         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003f6d         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003f72         cmp        dword [tcsetattr_options], 0x1              ; tcsetattr_options
0000000000003f79         mov        edx, 0x5
0000000000003f7e         je         loc_4a9b

0000000000003f84         lea        rsi, qword [aIxoff+2]                       ; argument "msgid" for method j_dcgettext, 0xb7db
0000000000003f8b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003f8d         call       j_dcgettext                                 ; dcgettext
0000000000003f92         mov        rbx, rax

                     loc_3f95:
0000000000003f95         lea        rsi, qword [aDrainWaitForTr]                ; argument "msgid" for method j_dcgettext, " * [-]drain      wait for transmission before applying settings (%s by default)\\n", CODE XREF=usage+3708
0000000000003f9c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003f9e         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003fa3         call       j_dcgettext                                 ; dcgettext
0000000000003fa8         mov        rdx, rbx
0000000000003fab         mov        rsi, rax
0000000000003fae         mov        edi, 0x1
0000000000003fb3         xor        eax, eax
0000000000003fb5         call       j___printf_chk                              ; __printf_chk
0000000000003fba         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003fc1         lea        rsi, qword [aIspeedNSetTheI]                ; argument "msgid" for method j_dcgettext, "   ispeed N      set the input speed to N\\n"
0000000000003fc8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003fcd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003fcf         call       j_dcgettext                                 ; dcgettext
0000000000003fd4         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003fd7         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003fda         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003fdf         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003fe6         lea        rsi, qword [aLineNUseLineDi]                ; argument "msgid" for method j_dcgettext, " * line N        use line discipline N\\n"
0000000000003fed         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003ff2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003ff4         call       j_dcgettext                                 ; dcgettext
0000000000003ff9         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003ffc         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003fff         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004004         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000400b         lea        rsi, qword [aMinNWithIcanon]                ; argument "msgid" for method j_dcgettext, "   min N         with -icanon, set N characters minimum for a completed read\\n   ospeed N      set the output speed to N\\n"
0000000000004012         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004017         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004019         call       j_dcgettext                                 ; dcgettext
000000000000401e         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004021         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004024         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004029         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004030         lea        rsi, qword [aRowsNTellTheKe]                ; argument "msgid" for method j_dcgettext, " * rows N        tell the kernel that the terminal has N rows\\n * size          print the number of rows and columns according to the kernel\\n"
0000000000004037         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000403c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000403e         call       j_dcgettext                                 ; dcgettext
0000000000004043         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004046         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004049         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000404e         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004055         lea        rsi, qword [aSpeedPrintTheT]                ; argument "msgid" for method j_dcgettext, "   speed         print the terminal speed\\n   time N        with -icanon, set read timeout of N tenths of a second\\n"
000000000000405c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004061         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004063         call       j_dcgettext                                 ; dcgettext
0000000000004068         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000406b         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000406e         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004073         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000407a         lea        rsi, qword [aNcontrolSettin]                ; argument "msgid" for method j_dcgettext, "\\nControl settings:\\n   [-]clocal     disable modem control signals\\n   [-]cread      allow input to be received\\n"
0000000000004081         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004086         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004088         call       j_dcgettext                                 ; dcgettext
000000000000408d         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004090         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004093         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004098         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000409f         lea        rsi, qword [aCrtsctsEnableR]                ; argument "msgid" for method j_dcgettext, " * [-]crtscts    enable RTS/CTS handshaking\\n"
00000000000040a6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000040ab         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000040ad         call       j_dcgettext                                 ; dcgettext
00000000000040b2         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000040b5         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000040b8         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000040bd         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000040c4         lea        rsi, qword [aCsnSetCharacte]                ; argument "msgid" for method j_dcgettext, "   csN           set character size to N bits, N in [5..8]\\n"
00000000000040cb         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000040d0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000040d2         call       j_dcgettext                                 ; dcgettext
00000000000040d7         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000040da         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000040dd         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000040e2         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000040e9         lea        rsi, qword [aCstopbUseTwoSt]                ; argument "msgid" for method j_dcgettext, "   [-]cstopb     use two stop bits per character (one with '-')\\n   [-]hup        send a hangup signal when the last process closes the tty\\n   [-]hupcl      same as [-]hup\\n   [-]parenb     generate parity bit in output and expect parity bit in input\\n   [-]p…"
00000000000040f0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000040f5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000040f7         call       j_dcgettext                                 ; dcgettext
00000000000040fc         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000040ff         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004102         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004107         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000410e         lea        rsi, qword [aCmsparUseStick]                ; argument "msgid" for method j_dcgettext, " * [-]cmspar     use \\\"stick\\\" (mark/space) parity\\n"
0000000000004115         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000411a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000411c         call       j_dcgettext                                 ; dcgettext
0000000000004121         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004124         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004127         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000412c         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004133         lea        rsi, qword [aNinputSettings]                ; argument "msgid" for method j_dcgettext, "\\nInput settings:\\n   [-]brkint     breaks cause an interrupt signal\\n   [-]icrnl      translate carriage return to newline\\n   [-]ignbrk     ignore break characters\\n   [-]igncr      ignore carriage return\\n   [-]ignpar     ignore characters with parity errors\\n"
000000000000413a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000413f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004141         call       j_dcgettext                                 ; dcgettext
0000000000004146         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004149         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000414c         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004151         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004158         lea        rsi, qword [aImaxbelBeepAnd]                ; argument "msgid" for method j_dcgettext, " * [-]imaxbel    beep and do not flush a full input buffer on a character\\n"
000000000000415f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004164         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004166         call       j_dcgettext                                 ; dcgettext
000000000000416b         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000416e         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004171         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004176         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000417d         lea        rsi, qword [aInlcrTranslate]                ; argument "msgid" for method j_dcgettext, "   [-]inlcr      translate newline to carriage return\\n   [-]inpck      enable input parity checking\\n   [-]istrip     clear high (8th) bit of input characters\\n"
0000000000004184         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004189         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000418b         call       j_dcgettext                                 ; dcgettext
0000000000004190         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004193         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004196         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000419b         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000041a2         lea        rsi, qword [aIutf8AssumeInp]                ; argument "msgid" for method j_dcgettext, " * [-]iutf8      assume input characters are UTF-8 encoded\\n"
00000000000041a9         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000041ae         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000041b0         call       j_dcgettext                                 ; dcgettext
00000000000041b5         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000041b8         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000041bb         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000041c0         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000041c7         lea        rsi, qword [aIuclcTranslate]                ; argument "msgid" for method j_dcgettext, " * [-]iuclc      translate uppercase characters to lowercase\\n"
00000000000041ce         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000041d3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000041d5         call       j_dcgettext                                 ; dcgettext
00000000000041da         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000041dd         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000041e0         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000041e5         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000041ec         lea        rsi, qword [aIxanyLetAnyCha]                ; argument "msgid" for method j_dcgettext, " * [-]ixany      let any character restart output, not only start character\\n"
00000000000041f3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000041f8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000041fa         call       j_dcgettext                                 ; dcgettext
00000000000041ff         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004202         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004205         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000420a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004211         lea        rsi, qword [aIxoffEnableSen]                ; argument "msgid" for method j_dcgettext, "   [-]ixoff      enable sending of start/stop characters\\n   [-]ixon       enable XON/XOFF flow control\\n   [-]parmrk     mark parity errors (with a 255-0-character sequence)\\n   [-]tandem     same as [-]ixoff\\n"
0000000000004218         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000421d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000421f         call       j_dcgettext                                 ; dcgettext
0000000000004224         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004227         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000422a         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000422f         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004236         lea        rsi, qword [aNoutputSetting]                ; argument "msgid" for method j_dcgettext, "\\nOutput settings:\\n"
000000000000423d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004242         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004244         call       j_dcgettext                                 ; dcgettext
0000000000004249         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000424c         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000424f         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004254         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000425b         lea        rsi, qword [aBsnBackspaceDe]                ; argument "msgid" for method j_dcgettext, " * bsN           backspace delay style, N in [0..1]\\n"
0000000000004262         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004267         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004269         call       j_dcgettext                                 ; dcgettext
000000000000426e         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004271         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004274         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004279         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004280         lea        rsi, qword [aCrnCarriageRet]                ; argument "msgid" for method j_dcgettext, " * crN           carriage return delay style, N in [0..3]\\n"
0000000000004287         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000428c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000428e         call       j_dcgettext                                 ; dcgettext
0000000000004293         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004296         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004299         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000429e         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000042a5         lea        rsi, qword [aFfnFormFeedDel]                ; argument "msgid" for method j_dcgettext, " * ffN           form feed delay style, N in [0..1]\\n"
00000000000042ac         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000042ae         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000042b3         call       j_dcgettext                                 ; dcgettext
00000000000042b8         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000042bb         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000042be         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000042c3         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000042ca         lea        rsi, qword [aNlnNewlineDela]                ; argument "msgid" for method j_dcgettext, " * nlN           newline delay style, N in [0..1]\\n"
00000000000042d1         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000042d6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000042d8         call       j_dcgettext                                 ; dcgettext
00000000000042dd         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000042e0         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000042e3         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000042e8         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000042ef         lea        rsi, qword [aOcrnlTranslate]                ; argument "msgid" for method j_dcgettext, " * [-]ocrnl      translate carriage return to newline\\n"
00000000000042f6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000042fb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000042fd         call       j_dcgettext                                 ; dcgettext
0000000000004302         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004305         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004308         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000430d         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004314         lea        rsi, qword [aOfdelUseDelete]                ; argument "msgid" for method j_dcgettext, " * [-]ofdel      use delete characters for fill instead of NUL characters\\n"
000000000000431b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004320         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004322         call       j_dcgettext                                 ; dcgettext
0000000000004327         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000432a         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000432d         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004332         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004339         lea        rsi, qword [aOfillUseFillPa]                ; argument "msgid" for method j_dcgettext, " * [-]ofill      use fill (padding) characters instead of timing for delays\\n"
0000000000004340         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004345         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004347         call       j_dcgettext                                 ; dcgettext
000000000000434c         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000434f         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004352         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004357         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000435e         lea        rsi, qword [aOlcucTranslate]                ; argument "msgid" for method j_dcgettext, " * [-]olcuc      translate lowercase characters to uppercase\\n"
0000000000004365         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000436a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000436c         call       j_dcgettext                                 ; dcgettext
0000000000004371         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004374         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004377         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000437c         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004383         lea        rsi, qword [aOnlcrTranslate]                ; argument "msgid" for method j_dcgettext, " * [-]onlcr      translate newline to carriage return-newline\\n"
000000000000438a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000438f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004391         call       j_dcgettext                                 ; dcgettext
0000000000004396         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004399         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000439c         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000043a1         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000043a8         lea        rsi, qword [aOnlretNewlineP]                ; argument "msgid" for method j_dcgettext, " * [-]onlret     newline performs a carriage return\\n"
00000000000043af         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000043b4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000043b6         call       j_dcgettext                                 ; dcgettext
00000000000043bb         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000043be         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000043c1         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000043c6         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000043cd         lea        rsi, qword [aOnocrDoNotPrin]                ; argument "msgid" for method j_dcgettext, " * [-]onocr      do not print carriage returns in the first column\\n"
00000000000043d4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000043d9         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000043db         call       j_dcgettext                                 ; dcgettext
00000000000043e0         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000043e3         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000043e6         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000043eb         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000043f2         lea        rsi, qword [aOpostPostproce]                ; argument "msgid" for method j_dcgettext, "   [-]opost      postprocess output\\n"
00000000000043f9         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000043fe         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004400         call       j_dcgettext                                 ; dcgettext
0000000000004405         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004408         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000440b         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004410         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004417         lea        rsi, qword [aTabnHorizontal]                ; argument "msgid" for method j_dcgettext, " * tabN          horizontal tab delay style, N in [0..3]\\n * tabs          same as tab0\\n * -tabs         same as tab3\\n"
000000000000441e         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004423         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004425         call       j_dcgettext                                 ; dcgettext
000000000000442a         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000442d         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004430         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004435         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000443c         lea        rsi, qword [aVtnVerticalTab]                ; argument "msgid" for method j_dcgettext, " * vtN           vertical tab delay style, N in [0..1]\\n"
0000000000004443         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004448         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000444a         call       j_dcgettext                                 ; dcgettext
000000000000444f         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004452         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004455         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000445a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004461         lea        rsi, qword [aNlocalSettings]                ; argument "msgid" for method j_dcgettext, "\\nLocal settings:\\n   [-]crterase   echo erase characters as backspace-space-backspace\\n"
0000000000004468         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000446d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000446f         call       j_dcgettext                                 ; dcgettext
0000000000004474         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004477         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000447a         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000447f         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004486         lea        rsi, qword [aCrtkillKillAll]                ; argument "msgid" for method j_dcgettext, " * crtkill       kill all line by obeying the echoprt and echoe settings\\n * -crtkill      kill all line by obeying the echoctl and echok settings\\n"
000000000000448d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004492         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004494         call       j_dcgettext                                 ; dcgettext
0000000000004499         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000449c         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000449f         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000044a4         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000044ab         lea        rsi, qword [aCtlechoEchoCon]                ; argument "msgid" for method j_dcgettext, " * [-]ctlecho    echo control characters in hat notation ('^c')\\n"
00000000000044b2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000044b7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000044b9         call       j_dcgettext                                 ; dcgettext
00000000000044be         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000044c1         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000044c4         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000044c9         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000044d0         lea        rsi, qword [aEchoEchoInputC]                ; argument "msgid" for method j_dcgettext, "   [-]echo       echo input characters\\n"
00000000000044d7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000044dc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000044de         call       j_dcgettext                                 ; dcgettext
00000000000044e3         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000044e6         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000044e9         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000044ee         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000044f5         lea        rsi, qword [aEchoctlSameAsC]                ; argument "msgid" for method j_dcgettext, " * [-]echoctl    same as [-]ctlecho\\n"
00000000000044fc         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004501         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004503         call       j_dcgettext                                 ; dcgettext
0000000000004508         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000450b         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000450e         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004513         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000451a         lea        rsi, qword [aEchoeSameAsCrt]                ; argument "msgid" for method j_dcgettext, "   [-]echoe      same as [-]crterase\\n   [-]echok      echo a newline after a kill character\\n"
0000000000004521         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004526         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004528         call       j_dcgettext                                 ; dcgettext
000000000000452d         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004530         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004533         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004538         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000453f         lea        rsi, qword [aEchokeSameAsCr]                ; argument "msgid" for method j_dcgettext, " * [-]echoke     same as [-]crtkill\\n"
0000000000004546         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000454b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000454d         call       j_dcgettext                                 ; dcgettext
0000000000004552         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004555         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004558         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000455d         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004564         lea        rsi, qword [aEchonlEchoNewl]                ; argument "msgid" for method j_dcgettext, "   [-]echonl     echo newline even if not echoing other characters\\n"
000000000000456b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004570         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004572         call       j_dcgettext                                 ; dcgettext
0000000000004577         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000457a         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000457d         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004582         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004589         lea        rsi, qword [aEchoprtEchoEra]                ; argument "msgid" for method j_dcgettext, " * [-]echoprt    echo erased characters backward, between '\\' and '/'\\n"
0000000000004590         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004595         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004597         call       j_dcgettext                                 ; dcgettext
000000000000459c         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000459f         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000045a2         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000045a7         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000045ae         lea        rsi, qword [aExtprocEnableL]                ; argument "msgid" for method j_dcgettext, " * [-]extproc    enable \\\"LINEMODE\\\"; useful with high latency links\\n"
00000000000045b5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000045ba         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000045bc         call       j_dcgettext                                 ; dcgettext
00000000000045c1         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000045c4         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000045c7         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000045cc         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000045d3         lea        rsi, qword [aFlushoDiscardO]                ; argument "msgid" for method j_dcgettext, " * [-]flusho     discard output\\n"
00000000000045da         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000045df         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000045e1         call       j_dcgettext                                 ; dcgettext
00000000000045e6         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000045e9         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000045ec         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000045f1         lea        rsi, qword [aIcanonEnableSp]                ; argument "msgid" for method j_dcgettext, "   [-]icanon     enable special characters: %s\\n   [-]iexten     enable non-POSIX special characters\\n"
00000000000045f8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000045fa         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000045ff         call       j_dcgettext                                 ; dcgettext
0000000000004604         lea        rdx, qword [aEraseKillWeras]                ; "erase, kill, werase, rprnt"
000000000000460b         mov        rsi, rax
000000000000460e         mov        edi, 0x1
0000000000004613         xor        eax, eax
0000000000004615         call       j___printf_chk                              ; __printf_chk
000000000000461a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004621         lea        rsi, qword [aIsigEnableInte]                ; argument "msgid" for method j_dcgettext, "   [-]isig       enable interrupt, quit, and suspend special characters\\n   [-]noflsh     disable flushing after interrupt and quit special characters\\n"
0000000000004628         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000462d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000462f         call       j_dcgettext                                 ; dcgettext
0000000000004634         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004637         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000463a         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000463f         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004646         lea        rsi, qword [aPrteraseSameAs]                ; argument "msgid" for method j_dcgettext, " * [-]prterase   same as [-]echoprt\\n"
000000000000464d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004652         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004654         call       j_dcgettext                                 ; dcgettext
0000000000004659         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000465c         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000465f         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004664         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000466b         lea        rsi, qword [aTostopStopBack]                ; argument "msgid" for method j_dcgettext, " * [-]tostop     stop background jobs that try to write to the terminal\\n"
0000000000004672         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004677         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004679         call       j_dcgettext                                 ; dcgettext
000000000000467e         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004681         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004684         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004689         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004690         lea        rsi, qword [aXcaseWithIcano]                ; argument "msgid" for method j_dcgettext, " * [-]xcase      with icanon, escape with '\\' for uppercase characters\\n"
0000000000004697         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000469c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000469e         call       j_dcgettext                                 ; dcgettext
00000000000046a3         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000046a6         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000046a9         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000046ae         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000046b5         lea        rsi, qword [aNcombinationSe]                ; argument "msgid" for method j_dcgettext, "\\nCombination settings:\\n"
00000000000046bc         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000046c1         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000046c3         call       j_dcgettext                                 ; dcgettext
00000000000046c8         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000046cb         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000046ce         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000046d3         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000046da         lea        rsi, qword [aLcaseSameAsLca]                ; argument "msgid" for method j_dcgettext, " * [-]LCASE      same as [-]lcase\\n"
00000000000046e1         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000046e6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000046e8         call       j_dcgettext                                 ; dcgettext
00000000000046ed         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000046f0         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000046f3         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000046f8         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000046ff         lea        rsi, qword [aCbreakSameAsIc]                ; argument "msgid" for method j_dcgettext, "   cbreak        same as -icanon\\n   -cbreak       same as icanon\\n"
0000000000004706         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000470b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000470d         call       j_dcgettext                                 ; dcgettext
0000000000004712         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004715         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004718         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000471d         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004724         lea        rsi, qword [aCookedSameAsBr]                ; argument "msgid" for method j_dcgettext, "   cooked        same as brkint ignpar istrip icrnl ixon opost isig\\n                 icanon, eof and eol characters to their default values\\n   -cooked       same as raw\\n"
000000000000472b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004730         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004732         call       j_dcgettext                                 ; dcgettext
0000000000004737         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000473a         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000473d         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004742         lea        rsi, qword [aCrtSameAsSn]                   ; argument "msgid" for method j_dcgettext, "   crt           same as %s\\n"
0000000000004749         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000474b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004750         call       j_dcgettext                                 ; dcgettext
0000000000004755         lea        rdx, qword [aEchoeEchoctlEc]                ; "echoe echoctl echoke"
000000000000475c         mov        rsi, rax
000000000000475f         mov        edi, 0x1
0000000000004764         xor        eax, eax
0000000000004766         call       j___printf_chk                              ; __printf_chk
000000000000476b         lea        rsi, qword [aDecSameAsSIntr]                ; argument "msgid" for method j_dcgettext, "   dec           same as %s intr ^c erase 0177\\n                 kill ^u\\n"
0000000000004772         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004774         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004779         call       j_dcgettext                                 ; dcgettext
000000000000477e         lea        rdx, qword [aEchoeEchoctlEc_b3d0]           ; "echoe echoctl echoke -ixany"
0000000000004785         mov        rsi, rax
0000000000004788         mov        edi, 0x1
000000000000478d         xor        eax, eax
000000000000478f         call       j___printf_chk                              ; __printf_chk
0000000000004794         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000479b         lea        rsi, qword [aDecctlqSameAsI]                ; argument "msgid" for method j_dcgettext, " * [-]decctlq    same as [-]ixany\\n"
00000000000047a2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000047a7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000047a9         call       j_dcgettext                                 ; dcgettext
00000000000047ae         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000047b1         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000047b4         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000047b9         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000047c0         lea        rsi, qword [aEkEraseAndKill]                ; argument "msgid" for method j_dcgettext, "   ek            erase and kill characters to their default values\\n   evenp         same as parenb -parodd cs7\\n   -evenp        same as -parenb cs8\\n"
00000000000047c7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000047cc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000047ce         call       j_dcgettext                                 ; dcgettext
00000000000047d3         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000047d6         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000047d9         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000047de         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000047e5         lea        rsi, qword [aLcaseSameAsXca]                ; argument "msgid" for method j_dcgettext, " * [-]lcase      same as xcase iuclc olcuc\\n"
00000000000047ec         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000047f1         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000047f3         call       j_dcgettext                                 ; dcgettext
00000000000047f8         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000047fb         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000047fe         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004803         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000480a         lea        rsi, qword [aLitoutSameAsPa]                ; argument "msgid" for method j_dcgettext, "   litout        same as -parenb -istrip -opost cs8\\n   -litout       same as parenb istrip opost cs7\\n"
0000000000004811         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004816         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004818         call       j_dcgettext                                 ; dcgettext
000000000000481d         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004820         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004823         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004828         lea        rsi, qword [aNlSameAsSnNlSa]                ; argument "msgid" for method j_dcgettext, "   nl            same as %s\\n   -nl           same as %s\\n"
000000000000482f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004831         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004836         call       j_dcgettext                                 ; dcgettext
000000000000483b         lea        rcx, qword [aIcrnlInlcrIgnc]                ; "icrnl -inlcr -igncr onlcr -ocrnl -onlret"
0000000000004842         lea        rdx, qword [aIcrnlOnlcr]                    ; "-icrnl -onlcr"
0000000000004849         mov        rsi, rax
000000000000484c         mov        edi, 0x1
0000000000004851         xor        eax, eax
0000000000004853         call       j___printf_chk                              ; __printf_chk
0000000000004858         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000485f         lea        rsi, qword [aOddpSameAsPare]                ; argument "msgid" for method j_dcgettext, "   oddp          same as parenb parodd cs7\\n   -oddp         same as -parenb cs8\\n   [-]parity     same as [-]evenp\\n   pass8         same as -parenb -istrip cs8\\n   -pass8        same as parenb istrip cs7\\n"
0000000000004866         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000486b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000486d         call       j_dcgettext                                 ; dcgettext
0000000000004872         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004875         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004878         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000487d         lea        rsi, qword [aRawSameAsIgnbr]                ; argument "msgid" for method j_dcgettext, "   raw           same as -ignbrk -brkint -ignpar -parmrk -inpck -istrip\\n                 -inlcr -igncr -icrnl -ixon -ixoff -icanon -opost\\n                 -isig%s min 1 time 0\\n   -raw          same as cooked\\n"
0000000000004884         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004886         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000488b         call       j_dcgettext                                 ; dcgettext
0000000000004890         lea        rdx, qword [aIuclcIxanyImax]                ; " -iuclc -ixany -imaxbel -xcase"
0000000000004897         mov        rsi, rax
000000000000489a         mov        edi, 0x1
000000000000489f         xor        eax, eax
00000000000048a1         call       j___printf_chk                              ; __printf_chk
00000000000048a6         lea        rsi, qword [aSaneSameAsCrea]                ; argument "msgid" for method j_dcgettext, "   sane          same as cread -ignbrk brkint -inlcr -igncr icrnl\\n                 icanon iexten echo echoe echok -echonl -noflsh\\n                 %s\\n                 %s\\n                 %s,\\n                 all special characters to their default values\\n"
00000000000048ad         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000048af         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000048b4         call       j_dcgettext                                 ; dcgettext
00000000000048b9         lea        rcx, qword [aOpostOfillOnlc]                ; "opost -ofill onlcr -onocr -onlret nl0 cr0 tab0 bs0 vt0 ff0"
00000000000048c0         lea        r8, qword [aIsigTostopOfde]                 ; "isig -tostop -ofdel -echoprt echoctl echoke -extproc -flusho"
00000000000048c7         lea        rdx, qword [aIxoffIutf8Iucl]                ; "-ixoff -iutf8 -iuclc -ixany imaxbel -xcase -olcuc -ocrnl"
00000000000048ce         mov        rsi, rax
00000000000048d1         mov        edi, 0x1
00000000000048d6         xor        eax, eax
00000000000048d8         call       j___printf_chk                              ; __printf_chk
00000000000048dd         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000048e4         lea        rsi, qword [aNhandleTheTtyL]                ; argument "msgid" for method j_dcgettext, "\\nHandle the tty line connected to standard input.  Without arguments,\\nprints baud rate, line discipline, and deviations from stty sane.  In\\nsettings, CHAR is taken literally, or coded as in ^c, 0x37, 0177 or\\n127; special values ^- or undef used to disable …"
00000000000048eb         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000048f0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000048f2         call       j_dcgettext                                 ; dcgettext
00000000000048f7         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000048fa         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000048fd         lea        rbx, qword [aRowsDColumnsD+21]              ; 0xb33d
0000000000004904         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004909         lea        rax, qword [aIcrnlOnlcr+14]                 ; 0xb3fa
0000000000004910         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
0000000000004917         mov        qword [rsp+0x108+var_A8], 0x0
0000000000004920         mov        qword [rsp+0x108+var_A0], 0x0
0000000000004929         mov        rdx, rsp
000000000000492c         mov        qword [rsp+0x108+var_108], rax
0000000000004930         lea        rax, qword [aTestInvocation]                ; "test invocation"
0000000000004937         mov        qword [rsp+0x108+var_D8], rcx
000000000000493c         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
0000000000004943         mov        qword [rsp+0x108+var_100], rax
0000000000004948         lea        rax, qword [aCoreutils]                     ; "coreutils"
000000000000494f         mov        qword [rsp+0x108+var_C8], rcx
0000000000004954         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
000000000000495b         mov        qword [rsp+0x108+var_F8], rax
0000000000004960         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
0000000000004967         mov        qword [rsp+0x108+var_B8], rcx
000000000000496c         mov        qword [rsp+0x108+var_F0], rax
0000000000004971         lea        rax, qword [aSha224sum]                     ; "sha224sum"
0000000000004978         mov        qword [rsp+0x108+var_E8], rax
000000000000497d         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
0000000000004984         mov        qword [rsp+0x108+var_E0], rax
0000000000004989         mov        qword [rsp+0x108+var_D0], rax
000000000000498e         mov        qword [rsp+0x108+var_C0], rax
0000000000004993         mov        qword [rsp+0x108+var_B0], rax
0000000000004998         nop        dword [rax+rax]

                     loc_49a0:
00000000000049a0         add        rdx, 0x10                                   ; CODE XREF=usage+3469
00000000000049a4         mov        rdi, qword [rdx]
00000000000049a7         test       rdi, rdi
00000000000049aa         je         loc_49bf

00000000000049ac         mov        ecx, 0x5
00000000000049b1         mov        rsi, rbx
00000000000049b4         rep  cmpsb byte [rsi], byte [rdi]
00000000000049b6         seta       al
00000000000049b9         sbb        al, 0x0
00000000000049bb         test       al, al
00000000000049bd         jne        loc_49a0

                     loc_49bf:
00000000000049bf         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+3450
00000000000049c3         xor        edi, edi
00000000000049c5         mov        edx, 0x5
00000000000049ca         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
00000000000049d1         test       r12, r12
00000000000049d4         je         loc_4ae2

00000000000049da         call       j_dcgettext                                 ; dcgettext
00000000000049df         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000049e6         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0xb470
00000000000049ed         mov        rsi, rax
00000000000049f0         mov        edi, 0x1
00000000000049f5         xor        eax, eax
00000000000049f7         call       j___printf_chk                              ; __printf_chk
00000000000049fc         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
00000000000049fe         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000004a03         call       j_setlocale                                 ; setlocale
0000000000004a08         test       rax, rax
0000000000004a0b         je         loc_4a29

0000000000004a0d         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0xb47e
0000000000004a14         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000004a19         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
0000000000004a1c         call       j_strncmp                                   ; strncmp
0000000000004a21         test       eax, eax
0000000000004a23         jne        loc_4ab8

                     loc_4a29:
0000000000004a29         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+3547, usage+3757
0000000000004a30         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004a32         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004a37         call       j_dcgettext                                 ; dcgettext
0000000000004a3c         lea        rcx, qword [aRowsDColumnsD+21]              ; 0xb33d
0000000000004a43         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000004a4a         mov        rsi, rax
0000000000004a4d         mov        edi, 0x1
0000000000004a52         xor        eax, eax
0000000000004a54         call       j___printf_chk                              ; __printf_chk
0000000000004a59         cmp        r12, rbx
0000000000004a5c         lea        rcx, qword [aMulticallInvoc+10]             ; 0xb416
0000000000004a63         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0xe041
0000000000004a6a         cmove      rbx, rcx

                     loc_4a6e:
0000000000004a6e         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+3899
0000000000004a75         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004a77         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004a7c         call       j_dcgettext                                 ; dcgettext
0000000000004a81         mov        rcx, rbx
0000000000004a84         mov        rsi, rax
0000000000004a87         mov        rdx, r12
0000000000004a8a         mov        edi, 0x1
0000000000004a8f         xor        eax, eax
0000000000004a91         call       j___printf_chk                              ; __printf_chk
0000000000004a96         jmp        loc_3c86

                     loc_4a9b:
0000000000004a9b         lea        rsi, qword [aVersion+5]                     ; argument "msgid" for method j_dcgettext, 0xb71a, CODE XREF=usage+846
0000000000004aa2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004aa4         call       j_dcgettext                                 ; dcgettext
0000000000004aa9         mov        rbx, rax
0000000000004aac         jmp        loc_3f95

                     loc_4ab1:
0000000000004ab1         lea        r12, qword [aRowsDColumnsD+21]              ; 0xb33d, CODE XREF=usage+3835

                     loc_4ab8:
0000000000004ab8         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+3571
0000000000004abf         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
0000000000004ac6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004ac8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004acd         call       j_dcgettext                                 ; dcgettext
0000000000004ad2         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004ad5         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004ad8         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004add         jmp        loc_4a29

                     loc_4ae2:
0000000000004ae2         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+3492
0000000000004ae7         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000004aee         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0xb470
0000000000004af5         mov        rsi, rax
0000000000004af8         mov        edi, 0x1
0000000000004afd         xor        eax, eax
0000000000004aff         call       j___printf_chk                              ; __printf_chk
0000000000004b04         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000004b06         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000004b0b         call       j_setlocale                                 ; setlocale
0000000000004b10         test       rax, rax
0000000000004b13         je         loc_4b2d

0000000000004b15         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0xb47e
0000000000004b1c         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000004b21         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
0000000000004b24         call       j_strncmp                                   ; strncmp
0000000000004b29         test       eax, eax
0000000000004b2b         jne        loc_4ab1

                     loc_4b2d:
0000000000004b2d         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+3811
0000000000004b34         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004b39         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004b3b         lea        r12, qword [aRowsDColumnsD+21]              ; 0xb33d
0000000000004b42         lea        rbx, qword [aMulticallInvoc+10]             ; 0xb416
0000000000004b49         call       j_dcgettext                                 ; dcgettext
0000000000004b4e         lea        rcx, qword [aRowsDColumnsD+21]              ; 0xb33d
0000000000004b55         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000004b5c         mov        rsi, rax
0000000000004b5f         mov        edi, 0x1
0000000000004b64         xor        eax, eax
0000000000004b66         call       j___printf_chk                              ; __printf_chk
0000000000004b6b         jmp        loc_4a6e


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_4C: int32_t, -76
        ;    var_50: int32_t, -80
        ;    var_54: int32_t, -84
        ;    var_58: int32_t, -88
        ;    var_60: int64_t, -96
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     apply_settings:
0000000000004b70         push       r15                                         ; End of unwind block (FDE at 0xec94), Begin of unwind block (FDE at 0xecc0), CODE XREF=main+607, main+780, main+2383
0000000000004b72         push       r14
0000000000004b74         push       r13
0000000000004b76         push       r12
0000000000004b78         push       rbp
0000000000004b79         push       rbx
0000000000004b7a         sub        rsp, 0x78
0000000000004b7e         mov        rax, qword [rsp+0xa8+arg_0]
0000000000004b86         mov        qword [rsp+0xa8+var_78], rsi
0000000000004b8b         mov        qword [rsp+0xa8+var_A0], rdx
0000000000004b90         mov        dword [rsp+0xa8+var_70], ecx
0000000000004b94         mov        qword [rsp+0xa8+var_90], r8
0000000000004b99         mov        qword [rsp+0xa8+var_80], r9
0000000000004b9e         mov        qword [rsp+0xa8+var_88], rax
0000000000004ba3         mov        byte [rsp+0xa8+var_6A], dil
0000000000004ba8         mov        rax, qword [fs:0x28]
0000000000004bb1         mov        qword [rsp+0xa8+var_40], rax
0000000000004bb6         xor        eax, eax
0000000000004bb8         cmp        ecx, 0x1
0000000000004bbb         jle        loc_4d10

0000000000004bc1         mov        ebp, 0x1
0000000000004bc6         lea        r14, qword [mode_info]                      ; mode_info
0000000000004bcd         jmp        loc_4bf1
0000000000004bcf         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    ret_addr: int8_t, 0


                     sub_4bd0:
0000000000004bd0         movzx      r13d, byte [rsp+ret_addr]                   ; CODE XREF=sub_4bd0+116
0000000000004bd5         xor        r13d, 0x1
0000000000004bd9         movzx      r13d, r13b
0000000000004bdd         mov        dword [tcsetattr_options], r13d             ; tcsetattr_options
                        ; endp

                     loc_4be4:
0000000000004be4         add        ebp, 0x1                                    ; CODE XREF=sub_4bd0+61, sub_4bd0+268, sub_4bd0+674, sub_4bd0+765, sub_4bd0+804, sub_4bd0+880, sub_4bd0+965, sub_4bd0+996, sub_4bd0+1080, sub_4bd0+1181, sub_4bd0+1212
0000000000004be7         cmp        dword [rsp+0xa8+var_70], ebp
0000000000004beb         jle        loc_4d10

                     loc_4bf1:
0000000000004bf1         movsxd     rax, ebp                                    ; CODE XREF=apply_settings+93, sub_4bd0+314
0000000000004bf4         lea        rdx, qword [rax*8]
0000000000004bfc         mov        qword [rsp+0xa8+var_98], rdx
0000000000004c01         mov        rdx, qword [rsp+0xa8+var_A0]
0000000000004c06         mov        rbx, qword [rdx+rax*8]
0000000000004c0a         test       rbx, rbx
0000000000004c0d         je         loc_4be4

0000000000004c0f         cmp        byte [rbx], 0x2d
0000000000004c12         mov        byte [rsp+0xa8+var_A8], 0x0
0000000000004c16         jne        loc_4c20

0000000000004c18         add        rbx, 0x1
0000000000004c1c         mov        byte [rsp+0xa8+var_A8], 0x1

                     loc_4c20:
0000000000004c20         lea        rdi, qword [aDrain]                         ; "drain", CODE XREF=sub_4bd0+70
0000000000004c27         mov        ecx, 0x6
0000000000004c2c         mov        rsi, rbx
0000000000004c2f         lea        r15, qword [aParenb]                        ; "parenb"
0000000000004c36         rep  cmpsb byte [rsi], byte [rdi]
0000000000004c38         seta       al
0000000000004c3b         sbb        al, 0x0
0000000000004c3d         xor        r13d, r13d
0000000000004c40         test       al, al
0000000000004c42         jne        loc_4c68

0000000000004c44         jmp        sub_4bd0                                    ; sub_4bd0
                        ; endp
0000000000004c46         align      16

                     loc_4c50:
0000000000004c50         add        r13, 0x1                                    ; CODE XREF=sub_4bd0+168
0000000000004c54         mov        rax, r13
0000000000004c57         shl        rax, 0x5
0000000000004c5b         mov        r15, qword [r14+rax]
0000000000004c5f         test       r15, r15
0000000000004c62         je         loc_4d38

                     loc_4c68:
0000000000004c68         mov        rsi, r15                                    ; argument "__s2" for method j_strcmp, CODE XREF=sub_4bd0+114
0000000000004c6b         mov        rdi, rbx                                    ; argument "__s1" for method j_strcmp
0000000000004c6e         movsxd     r12, r13d
0000000000004c71         call       j_strcmp                                    ; strcmp
0000000000004c76         test       eax, eax
0000000000004c78         jne        loc_4c50

0000000000004c7a         shl        r12, 0x5
0000000000004c7e         add        r12, r14
0000000000004c81         movzx      eax, byte [r12+0xc]
0000000000004c87         test       al, 0x10
0000000000004c89         je         loc_4f00

                     loc_4c8f:
0000000000004c8f         lea        rdi, qword [aIspeed]                        ; "ispeed", CODE XREF=sub_4bd0+407
0000000000004c96         mov        ecx, 0x7
0000000000004c9b         mov        rsi, rbx
0000000000004c9e         rep  cmpsb byte [rsi], byte [rdi]
0000000000004ca0         seta       al
0000000000004ca3         sbb        al, 0x0
0000000000004ca5         test       al, al
0000000000004ca7         jne        loc_4e80

0000000000004cad         mov        eax, dword [rsp+0xa8+var_70]
0000000000004cb1         sub        eax, 0x1
0000000000004cb4         cmp        eax, ebp
0000000000004cb6         je         loc_5601

0000000000004cbc         mov        rax, qword [rsp+0xa8+var_A0]
0000000000004cc1         mov        rcx, qword [rsp+0xa8+var_98]
0000000000004cc6         mov        rdi, qword [rax+rcx+8]
0000000000004ccb         test       rdi, rdi
0000000000004cce         je         loc_5601

0000000000004cd4         add        ebp, 0x1
0000000000004cd7         cmp        byte [rsp+0xa8+var_6A], 0x0
0000000000004cdc         jne        loc_4be4

0000000000004ce2         call       string_to_baud                              ; string_to_baud
0000000000004ce7         mov        rdi, qword [rsp+0xa8+var_90]                ; argument "__termios_p" for method j_cfsetispeed
0000000000004cec         mov        esi, eax                                    ; argument "__speed" for method j_cfsetispeed
0000000000004cee         add        ebp, 0x1
0000000000004cf1         call       j_cfsetispeed                               ; cfsetispeed
0000000000004cf6         mov        rax, qword [rsp+0xa8+var_80]
0000000000004cfb         cmp        dword [rsp+0xa8+var_70], ebp
0000000000004cff         mov        byte [rax], 0x1
0000000000004d02         mov        rax, qword [rsp+0xa8+var_88]
0000000000004d07         mov        byte [rax], 0x1
0000000000004d0a         jg         loc_4bf1

                     loc_4d10:
0000000000004d10         mov        rax, qword [rsp+0xa8+var_40]                ; CODE XREF=apply_settings+75, sub_4bd0+27
0000000000004d15         xor        rax, qword [fs:0x28]
0000000000004d1e         jne        loc_565b

0000000000004d24         add        rsp, 0x78
0000000000004d28         pop        rbx
0000000000004d29         pop        rbp
0000000000004d2a         pop        r12
0000000000004d2c         pop        r13
0000000000004d2e         pop        r14
0000000000004d30         pop        r15
0000000000004d32         ret
                        ; endp
0000000000004d33         align      8

                     loc_4d38:
0000000000004d38         cmp        byte [rsp+0xa8+var_A8], 0x0                 ; CODE XREF=sub_4bd0+146
0000000000004d3c         jne        loc_5099

0000000000004d42         lea        r15, qword [control_info+24]                ; 0x20fe98
0000000000004d49         xor        r12d, r12d
0000000000004d4c         lea        r13, qword [aIntr]                          ; "intr"
0000000000004d53         jmp        loc_4d6d
0000000000004d55         align      8

                     loc_4d58:
0000000000004d58         add        r15, 0x18                                   ; CODE XREF=sub_4bd0+426
0000000000004d5c         mov        r13, qword [r15-0x18]
0000000000004d60         add        r12d, 0x1
0000000000004d64         test       r13, r13
0000000000004d67         je         loc_4c8f

                     loc_4d6d:
0000000000004d6d         mov        rsi, r13                                    ; argument "__s2" for method j_strcmp, CODE XREF=sub_4bd0+387
0000000000004d70         mov        rdi, rbx                                    ; argument "__s1" for method j_strcmp
0000000000004d73         call       j_strcmp                                    ; strcmp
0000000000004d78         test       eax, eax
0000000000004d7a         jne        loc_4d58

0000000000004d7c         mov        eax, dword [rsp+0xa8+var_70]
0000000000004d80         sub        eax, 0x1
0000000000004d83         cmp        eax, ebp
0000000000004d85         je         loc_5601

0000000000004d8b         mov        rax, qword [rsp+0xa8+var_A0]
0000000000004d90         mov        rcx, qword [rsp+0xa8+var_98]
0000000000004d95         mov        r15, qword [rax+rcx+8]
0000000000004d9a         test       r15, r15
0000000000004d9d         je         loc_5601

0000000000004da3         lea        rdi, qword [aMissingArgumen+23]             ; 0xb544
0000000000004daa         movsxd     r12, r12d
0000000000004dad         mov        ecx, 0x4
0000000000004db2         mov        rsi, r13
0000000000004db5         lea        rax, qword [control_info]                   ; control_info
0000000000004dbc         add        ebp, 0x1
0000000000004dbf         lea        rdx, qword [r12+r12*2]
0000000000004dc3         rep  cmpsb byte [rsi], byte [rdi]
0000000000004dc5         lea        rbx, qword [rax+rdx*8]
0000000000004dc9         seta       al
0000000000004dcc         sbb        al, 0x0
0000000000004dce         test       al, al
0000000000004dd0         je         loc_4fc0

0000000000004dd6         lea        rdi, qword [aTime]                          ; "time"
0000000000004ddd         mov        ecx, 0x5
0000000000004de2         mov        rsi, r13
0000000000004de5         rep  cmpsb byte [rsi], byte [rdi]
0000000000004de7         seta       al
0000000000004dea         sbb        al, 0x0
0000000000004dec         test       al, al
0000000000004dee         je         loc_4fc0

0000000000004df4         movzx      r13d, byte [r15]
0000000000004df8         test       r13b, r13b
0000000000004dfb         je         loc_4e58

0000000000004dfd         movzx      edx, byte [r15+1]
0000000000004e02         test       dl, dl
0000000000004e04         je         loc_4e58

0000000000004e06         lea        rsi, qword [aTime+5]                        ; argument "__s2" for method j_strcmp, 0xb54d
0000000000004e0d         mov        rdi, r15                                    ; argument "__s1" for method j_strcmp
0000000000004e10         mov        byte [rsp+0xa8+var_A8], dl
0000000000004e13         xor        r12d, r12d
0000000000004e16         call       j_strcmp                                    ; strcmp
0000000000004e1b         test       eax, eax
0000000000004e1d         je         loc_4e5c

0000000000004e1f         lea        rsi, qword [aUndef]                         ; argument "__s2" for method j_strcmp, "undef"
0000000000004e26         mov        rdi, r15                                    ; argument "__s1" for method j_strcmp
0000000000004e29         call       j_strcmp                                    ; strcmp
0000000000004e2e         test       eax, eax
0000000000004e30         je         loc_4e5c

0000000000004e32         cmp        r13b, 0x5e
0000000000004e36         jne        loc_4fc0

0000000000004e3c         movzx      edx, byte [rsp+0xa8+var_A8]
0000000000004e40         cmp        dl, 0x3f
0000000000004e43         je         loc_551f

0000000000004e49         mov        r12, rdx
0000000000004e4c         and        r12d, 0x9f
0000000000004e53         jmp        loc_4e5c
0000000000004e55         align      8

                     loc_4e58:
0000000000004e58         movzx      r12d, r13b                                  ; CODE XREF=sub_4bd0+555, sub_4bd0+564

                     loc_4e5c:
0000000000004e5c         mov        rax, qword [rbx+0x10]                       ; CODE XREF=sub_4bd0+589, sub_4bd0+608, sub_4bd0+643, sub_4bd0+1024, sub_4bd0+2389
0000000000004e60         mov        rcx, qword [rsp+0xa8+var_90]
0000000000004e65         mov        byte [rcx+rax+0x11], r12b
0000000000004e6a         mov        rax, qword [rsp+0xa8+var_88]
0000000000004e6f         mov        byte [rax], 0x1
0000000000004e72         jmp        loc_4be4
0000000000004e77         align      128

                     loc_4e80:
0000000000004e80         lea        rdi, qword [aOspeed]                        ; "ospeed", CODE XREF=sub_4bd0+215
0000000000004e87         mov        ecx, 0x7
0000000000004e8c         mov        rsi, rbx
0000000000004e8f         rep  cmpsb byte [rsi], byte [rdi]
0000000000004e91         seta       al
0000000000004e94         sbb        al, 0x0
0000000000004e96         test       al, al
0000000000004e98         jne        loc_4f48

0000000000004e9e         mov        eax, dword [rsp+0xa8+var_70]
0000000000004ea2         sub        eax, 0x1
0000000000004ea5         cmp        eax, ebp
0000000000004ea7         je         loc_5601

0000000000004ead         mov        rax, qword [rsp+0xa8+var_A0]
0000000000004eb2         mov        rcx, qword [rsp+0xa8+var_98]
0000000000004eb7         mov        rdi, qword [rax+rcx+8]
0000000000004ebc         test       rdi, rdi
0000000000004ebf         je         loc_5601

0000000000004ec5         add        ebp, 0x1
0000000000004ec8         cmp        byte [rsp+0xa8+var_6A], 0x0
0000000000004ecd         jne        loc_4be4

0000000000004ed3         call       string_to_baud                              ; string_to_baud
0000000000004ed8         mov        rdi, qword [rsp+0xa8+var_90]
0000000000004edd         mov        esi, eax

                     loc_4edf:
0000000000004edf         call       j_cfsetospeed                               ; cfsetospeed, CODE XREF=sub_4bd0+2027
0000000000004ee4         mov        rax, qword [rsp+0xa8+var_80]
0000000000004ee9         mov        byte [rax], 0x1
0000000000004eec         mov        rax, qword [rsp+0xa8+var_88]
0000000000004ef1         mov        byte [rax], 0x1
0000000000004ef4         jmp        loc_4be4
0000000000004ef9         align      256

                     loc_4f00:
0000000000004f00         cmp        byte [rsp+0xa8+var_A8], 0x0                 ; CODE XREF=sub_4bd0+185
0000000000004f04         je         loc_4fd8

0000000000004f0a         test       al, 0x4
0000000000004f0c         je         loc_5091

0000000000004f12         mov        rsi, qword [rsp+0xa8+var_90]
0000000000004f17         mov        edi, dword [r12+8]
0000000000004f1c         call       mode_type_flag                              ; mode_type_flag
0000000000004f21         test       rax, rax
0000000000004f24         je         loc_52a9

0000000000004f2a         mov        rdx, qword [r12+0x10]
0000000000004f2f         or         edx, dword [r12+0x18]
0000000000004f34         not        edx
0000000000004f36         and        dword [rax], edx
0000000000004f38         mov        rax, qword [rsp+0xa8+var_88]
0000000000004f3d         mov        byte [rax], 0x1
0000000000004f40         jmp        loc_4be4
0000000000004f45         align      8

                     loc_4f48:
0000000000004f48         lea        rdi, qword [aOspeed+7]                      ; 0xb55d, CODE XREF=sub_4bd0+712
0000000000004f4f         mov        ecx, 0x5
0000000000004f54         mov        rsi, rbx
0000000000004f57         rep  cmpsb byte [rsi], byte [rdi]
0000000000004f59         seta       al
0000000000004f5c         sbb        al, 0x0
0000000000004f5e         test       al, al
0000000000004f60         jne        loc_500d

0000000000004f66         mov        eax, dword [rsp+0xa8+var_70]
0000000000004f6a         sub        eax, 0x1
0000000000004f6d         cmp        eax, ebp
0000000000004f6f         je         loc_5601

0000000000004f75         mov        rax, qword [rsp+0xa8+var_A0]
0000000000004f7a         mov        rcx, qword [rsp+0xa8+var_98]
0000000000004f7f         mov        rdi, qword [rax+rcx+8]
0000000000004f84         test       rdi, rdi
0000000000004f87         je         loc_5601

0000000000004f8d         add        ebp, 0x1
0000000000004f90         cmp        byte [rsp+0xa8+var_6A], 0x0
0000000000004f95         jne        loc_4be4

0000000000004f9b         mov        esi, 0x7fffffff
0000000000004fa0         call       integer_arg                                 ; integer_arg
0000000000004fa5         mov        rdx, qword [rsp+0xa8+var_78]
0000000000004faa         or         esi, 0xffffffff
0000000000004fad         mov        edi, eax
0000000000004faf         call       set_window_size                             ; set_window_size
0000000000004fb4         jmp        loc_4be4
0000000000004fb9         align      64

                     loc_4fc0:
0000000000004fc0         mov        esi, 0xff                                   ; CODE XREF=sub_4bd0+512, sub_4bd0+542, sub_4bd0+614
0000000000004fc5         mov        rdi, r15
0000000000004fc8         call       integer_arg                                 ; integer_arg
0000000000004fcd         mov        r12, rax
0000000000004fd0         jmp        loc_4e5c
0000000000004fd5         align      8

                     loc_4fd8:
0000000000004fd8         mov        rsi, qword [rsp+0xa8+var_90]                ; CODE XREF=sub_4bd0+820
0000000000004fdd         mov        edi, dword [r12+8]
0000000000004fe2         call       mode_type_flag                              ; mode_type_flag
0000000000004fe7         test       rax, rax
0000000000004fea         je         loc_50d8

0000000000004ff0         mov        edx, dword [r12+0x18]
0000000000004ff5         not        edx
0000000000004ff7         and        edx, dword [rax]
0000000000004ff9         or         edx, dword [r12+0x10]
0000000000004ffe         mov        dword [rax], edx
0000000000005000         mov        rax, qword [rsp+0xa8+var_88]
0000000000005005         mov        byte [rax], 0x1
0000000000005008         jmp        loc_4be4

                     loc_500d:
000000000000500d         lea        rdi, qword [aOspeed+12]                     ; 0xb562, CODE XREF=sub_4bd0+912
0000000000005014         mov        ecx, 0x5
0000000000005019         mov        rsi, rbx
000000000000501c         rep  cmpsb byte [rsi], byte [rdi]
000000000000501e         seta       al
0000000000005021         sbb        al, 0x0
0000000000005023         test       al, al
0000000000005025         je         loc_503e

0000000000005027         lea        rsi, qword [aColumns_b567]                  ; argument "__s2" for method j_strcmp, "columns"
000000000000502e         mov        rdi, rbx                                    ; argument "__s1" for method j_strcmp
0000000000005031         call       j_strcmp                                    ; strcmp
0000000000005036         test       eax, eax
0000000000005038         jne        loc_5155

                     loc_503e:
000000000000503e         mov        eax, dword [rsp+0xa8+var_70]                ; CODE XREF=sub_4bd0+1109
0000000000005042         sub        eax, 0x1
0000000000005045         cmp        eax, ebp
0000000000005047         je         loc_5601

000000000000504d         mov        rax, qword [rsp+0xa8+var_A0]
0000000000005052         mov        rcx, qword [rsp+0xa8+var_98]
0000000000005057         mov        rdi, qword [rax+rcx+8]
000000000000505c         test       rdi, rdi
000000000000505f         je         loc_5601

0000000000005065         add        ebp, 0x1
0000000000005068         cmp        byte [rsp+0xa8+var_6A], 0x0
000000000000506d         jne        loc_4be4

0000000000005073         mov        esi, 0x7fffffff
0000000000005078         call       integer_arg                                 ; integer_arg
000000000000507d         mov        rdx, qword [rsp+0xa8+var_78]
0000000000005082         mov        esi, eax
0000000000005084         or         edi, 0xffffffff
0000000000005087         call       set_window_size                             ; set_window_size
000000000000508c         jmp        loc_4be4

                     loc_5091:
0000000000005091         mov        rax, qword [rsp+0xa8+var_88]                ; CODE XREF=sub_4bd0+828
0000000000005096         mov        byte [rax], 0x1

                     loc_5099:
0000000000005099         lea        rdi, qword [rbx-1]                          ; CODE XREF=sub_4bd0+364
000000000000509d         call       quote                                       ; quote
00000000000050a2         lea        rsi, qword [aInvalidArgumen]                ; "invalid argument %s"
00000000000050a9         mov        rbx, rax
00000000000050ac         mov        edx, 0x5

                     loc_50b1:
00000000000050b1         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=sub_4bd0+2378, sub_4bd0+2632
00000000000050b3         call       j_dcgettext                                 ; dcgettext
00000000000050b8         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000050ba         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000050bd         mov        rcx, rbx
00000000000050c0         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000050c2         xor        eax, eax
00000000000050c4         call       j_error                                     ; error
00000000000050c9         mov        edi, 0x1                                    ; argument #1 for method usage
00000000000050ce         call       usage                                       ; usage
00000000000050d3         nop        dword [rax+rax]

                     loc_50d8:
00000000000050d8         lea        rdi, qword [aEvenp]                         ; "evenp", CODE XREF=sub_4bd0+1050
00000000000050df         mov        ecx, 0x6
00000000000050e4         mov        rsi, r15
00000000000050e7         rep  cmpsb byte [rsi], byte [rdi]
00000000000050e9         seta       al
00000000000050ec         sbb        al, 0x0
00000000000050ee         test       al, al
00000000000050f0         je         loc_5207

00000000000050f6         lea        rsi, qword [aParity]                        ; argument "__s2" for method j_strcmp, "parity"
00000000000050fd         mov        rdi, r15                                    ; argument "__s1" for method j_strcmp
0000000000005100         call       j_strcmp                                    ; strcmp
0000000000005105         test       eax, eax
0000000000005107         je         loc_5207

                     loc_510d:
000000000000510d         lea        rsi, qword [aOddp]                          ; argument "__s2" for method j_strcmp, "oddp", CODE XREF=sub_4bd0+2736
0000000000005114         mov        rdi, r15                                    ; argument "__s1" for method j_strcmp
0000000000005117         call       j_strcmp                                    ; strcmp
000000000000511c         test       eax, eax
000000000000511e         jne        loc_525d

0000000000005124         cmp        byte [rsp+0xa8+var_A8], 0x0
0000000000005128         mov        rcx, qword [rsp+0xa8+var_90]
000000000000512d         mov        eax, dword [rcx+8]
0000000000005130         jne        loc_52cb

0000000000005136         mov        rcx, qword [rsp+0xa8+var_90]
000000000000513b         and        eax, 0xfffffccf
0000000000005140         or         eax, 0x320
0000000000005145         mov        dword [rcx+8], eax
0000000000005148         mov        rax, qword [rsp+0xa8+var_88]
000000000000514d         mov        byte [rax], 0x1
0000000000005150         jmp        loc_4be4

                     loc_5155:
0000000000005155         lea        rsi, qword [aColumns_b567+8]                ; argument "__s2" for method j_strcmp, 0xb56f, CODE XREF=sub_4bd0+1128
000000000000515c         mov        rdi, rbx                                    ; argument "__s1" for method j_strcmp
000000000000515f         call       j_strcmp                                    ; strcmp
0000000000005164         test       eax, eax
0000000000005166         je         loc_522c

000000000000516c         lea        rsi, qword [aColumns_b567+13]               ; argument "__s2" for method j_strcmp, 0xb574
0000000000005173         mov        rdi, rbx                                    ; argument "__s1" for method j_strcmp
0000000000005176         call       j_strcmp                                    ; strcmp
000000000000517b         test       eax, eax
000000000000517d         jne        loc_52e3

0000000000005183         mov        eax, dword [rsp+0xa8+var_70]
0000000000005187         sub        eax, 0x1
000000000000518a         cmp        eax, ebp
000000000000518c         je         loc_5601

0000000000005192         mov        rax, qword [rsp+0xa8+var_A0]
0000000000005197         mov        rcx, qword [rsp+0xa8+var_98]
000000000000519c         lea        r12, qword [rax+rcx+8]
00000000000051a1         mov        rdi, qword [r12]
00000000000051a5         test       rdi, rdi
00000000000051a8         je         loc_5601

00000000000051ae         or         rsi, 0xffffffffffffffff
00000000000051b2         add        ebp, 0x1
00000000000051b5         call       integer_arg                                 ; integer_arg
00000000000051ba         mov        rcx, qword [rsp+0xa8+var_90]
00000000000051bf         test       rax, 0xffffffffffffff00
00000000000051c5         mov        byte [rcx+0x10], al
00000000000051c8         je         loc_51fa

00000000000051ca         mov        rdi, qword [r12]
00000000000051ce         call       quote                                       ; quote
00000000000051d3         lea        rsi, qword [aInvalidLineDis]                ; argument "msgid" for method j_dcgettext, "invalid line discipline %s"
00000000000051da         mov        rbx, rax
00000000000051dd         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000051e2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000051e4         call       j_dcgettext                                 ; dcgettext
00000000000051e9         mov        rcx, rbx
00000000000051ec         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000051ef         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000051f1         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000051f3         xor        eax, eax
00000000000051f5         call       j_error                                     ; error

                     loc_51fa:
00000000000051fa         mov        rax, qword [rsp+0xa8+var_88]                ; CODE XREF=sub_4bd0+1528, sub_4bd0+2556, sub_4bd0+2708, sub_4bd0+3320
00000000000051ff         mov        byte [rax], 0x1
0000000000005202         jmp        loc_4be4

                     loc_5207:
0000000000005207         mov        rcx, qword [rsp+0xa8+var_90]                ; CODE XREF=sub_4bd0+1312, sub_4bd0+1335
000000000000520c         mov        eax, dword [rcx+8]
000000000000520f         mov        dword [rsp+0xa8+var_A8], eax
0000000000005212         and        eax, 0xfffffccf
0000000000005217         or         eax, 0x120
000000000000521c         mov        dword [rcx+8], eax
000000000000521f         mov        rax, qword [rsp+0xa8+var_88]
0000000000005224         mov        byte [rax], 0x1
0000000000005227         jmp        loc_4be4

                     loc_522c:
000000000000522c         cmp        byte [rsp+0xa8+var_6A], 0x0                 ; CODE XREF=sub_4bd0+1430
0000000000005231         jne        loc_4be4

0000000000005237         call       screen_columns                              ; screen_columns
000000000000523c         mov        rsi, qword [rsp+0xa8+var_78]
0000000000005241         xor        edi, edi
0000000000005243         mov        dword [max_col], eax                        ; max_col
0000000000005249         mov        dword [current_col], 0x0                    ; current_col
0000000000005253         call       display_window_size                         ; display_window_size
0000000000005258         jmp        loc_4be4

                     loc_525d:
000000000000525d         lea        rsi, qword [aEchonl+4]                      ; argument "__s2" for method j_strcmp, 0xb895, CODE XREF=sub_4bd0+1358
0000000000005264         mov        rdi, r15                                    ; argument "__s1" for method j_strcmp
0000000000005267         call       j_strcmp                                    ; strcmp
000000000000526c         test       eax, eax
000000000000526e         jne        loc_5321

0000000000005274         cmp        byte [rsp+0xa8+var_A8], 0x0
0000000000005278         mov        rcx, qword [rsp+0xa8+var_90]
000000000000527d         mov        eax, dword [rcx+4]
0000000000005280         mov        edx, dword [rcx]
0000000000005282         je         loc_53c0

0000000000005288         and        eax, 0xffffffd3
000000000000528b         and        edx, 0xfffffe3f
0000000000005291         or         eax, 0x4
0000000000005294         or         dh, 0x1
0000000000005297         mov        dword [rcx+4], eax
000000000000529a         mov        rax, qword [rsp+0xa8+var_88]
000000000000529f         mov        dword [rcx], edx
00000000000052a1         mov        byte [rax], 0x1
00000000000052a4         jmp        loc_4be4

                     loc_52a9:
00000000000052a9         lea        rsi, qword [aEvenp]                         ; argument "__s2" for method j_strcmp, "evenp", CODE XREF=sub_4bd0+852
00000000000052b0         mov        rdi, r15                                    ; argument "__s1" for method j_strcmp
00000000000052b3         call       j_strcmp                                    ; strcmp
00000000000052b8         test       eax, eax
00000000000052ba         jne        loc_5669

                     loc_52c0:
00000000000052c0         mov        rcx, qword [rsp+0xa8+var_90]                ; CODE XREF=sub_4bd0+2730
00000000000052c5         mov        eax, dword [rcx+8]
00000000000052c8         mov        dword [rsp+0xa8+var_A8], eax

                     loc_52cb:
00000000000052cb         and        eax, 0xfffffecf                             ; CODE XREF=sub_4bd0+1376
00000000000052d0         or         eax, 0x30
00000000000052d3         mov        dword [rcx+8], eax
00000000000052d6         mov        rax, qword [rsp+0xa8+var_88]
00000000000052db         mov        byte [rax], 0x1
00000000000052de         jmp        loc_4be4

                     loc_52e3:
00000000000052e3         lea        rsi, qword [aIspeed+1]                      ; argument "__s2" for method j_strcmp, 0xb595, CODE XREF=sub_4bd0+1453
00000000000052ea         mov        rdi, rbx                                    ; argument "__s1" for method j_strcmp
00000000000052ed         call       j_strcmp                                    ; strcmp
00000000000052f2         test       eax, eax
00000000000052f4         jne        loc_538b

00000000000052fa         cmp        byte [rsp+0xa8+var_6A], 0x0
00000000000052ff         jne        loc_4be4

0000000000005305         call       screen_columns                              ; screen_columns
000000000000530a         mov        rdi, qword [rsp+0xa8+var_90]
000000000000530f         xor        esi, esi
0000000000005311         mov        dword [max_col], eax                        ; max_col
0000000000005317         call       display_speed                               ; display_speed
000000000000531c         jmp        loc_4be4

                     loc_5321:
0000000000005321         lea        rsi, qword [aOddp+5]                        ; argument "__s2" for method j_strcmp, 0xb4ae, CODE XREF=sub_4bd0+1694
0000000000005328         mov        rdi, r15                                    ; argument "__s1" for method j_strcmp
000000000000532b         call       j_strcmp                                    ; strcmp
0000000000005330         test       eax, eax
0000000000005332         je         loc_53dd

0000000000005338         lea        rsi, qword [aSane]                          ; argument "__s2" for method j_strcmp, "sane"
000000000000533f         mov        rdi, r15                                    ; argument "__s1" for method j_strcmp
0000000000005342         call       j_strcmp                                    ; strcmp
0000000000005347         test       eax, eax
0000000000005349         je         loc_5578

000000000000534f         lea        rsi, qword [aCbreak]                        ; argument "__s2" for method j_strcmp, "cbreak"
0000000000005356         mov        rdi, r15                                    ; argument "__s1" for method j_strcmp
0000000000005359         call       j_strcmp                                    ; strcmp
000000000000535e         test       eax, eax
0000000000005360         jne        loc_552a

0000000000005366         cmp        byte [rsp+0xa8+var_A8], 0x0
000000000000536a         mov        rcx, qword [rsp+0xa8+var_90]
000000000000536f         mov        eax, dword [rcx+0xc]
0000000000005372         je         loc_5685

0000000000005378         or         eax, 0x2
000000000000537b         mov        dword [rcx+0xc], eax
000000000000537e         mov        rax, qword [rsp+0xa8+var_88]
0000000000005383         mov        byte [rax], 0x1
0000000000005386         jmp        loc_4be4

                     loc_538b:
000000000000538b         mov        rdi, rbx                                    ; CODE XREF=sub_4bd0+1828
000000000000538e         call       string_to_baud                              ; string_to_baud
0000000000005393         cmp        eax, 0xffffffff
0000000000005396         mov        r12d, eax
0000000000005399         je         loc_53f5

000000000000539b         cmp        byte [rsp+0xa8+var_6A], 0x0
00000000000053a0         jne        loc_4be4

00000000000053a6         mov        rbx, qword [rsp+0xa8+var_90]
00000000000053ab         mov        esi, eax                                    ; argument "__speed" for method j_cfsetispeed
00000000000053ad         mov        rdi, rbx                                    ; argument "__termios_p" for method j_cfsetispeed
00000000000053b0         call       j_cfsetispeed                               ; cfsetispeed
00000000000053b5         mov        esi, r12d
00000000000053b8         mov        rdi, rbx
00000000000053bb         jmp        loc_4edf

                     loc_53c0:
00000000000053c0         mov        rcx, qword [rsp+0xa8+var_90]                ; CODE XREF=sub_4bd0+1714
00000000000053c5         and        eax, 0xfffffffb
00000000000053c8         and        dh, 0xfe
00000000000053cb         mov        dword [rcx+4], eax
00000000000053ce         mov        rax, qword [rsp+0xa8+var_88]
00000000000053d3         mov        dword [rcx], edx
00000000000053d5         mov        byte [rax], 0x1
00000000000053d8         jmp        loc_4be4

                     loc_53dd:
00000000000053dd         mov        rax, qword [rsp+0xa8+var_90]                ; CODE XREF=sub_4bd0+1890
00000000000053e2         mov        word [rax+0x13], 0x157f
00000000000053e8         mov        rax, qword [rsp+0xa8+var_88]
00000000000053ed         mov        byte [rax], 0x1
00000000000053f0         jmp        loc_4be4

                     loc_53f5:
00000000000053f5         call       j___errno_location                          ; __errno_location, CODE XREF=sub_4bd0+1993
00000000000053fa         mov        r12, rax
00000000000053fd         lea        rax, qword [rsp+0xa8+var_60]
0000000000005402         mov        r13, rbx
0000000000005405         xor        r15d, r15d
0000000000005408         mov        qword [rsp+0xa8+var_A8], rax

                     loc_540c:
000000000000540c         mov        rsi, qword [rsp+0xa8+var_A8]                ; argument "__endptr" for method j_strtoul, CODE XREF=sub_4bd0+2195
0000000000005410         mov        dword [r12], 0x0
0000000000005418         mov        edx, 0x10                                   ; argument "__base" for method j_strtoul
000000000000541d         mov        rdi, r13                                    ; argument "__nptr" for method j_strtoul
0000000000005420         call       j_strtoul                                   ; strtoul
0000000000005425         cmp        dword [r12], 0x0
000000000000542a         jne        loc_5503

0000000000005430         mov        rdx, qword [rsp+0xa8+var_60]
0000000000005435         cmp        byte [rdx], 0x3a
0000000000005438         jne        loc_5503

000000000000543e         cmp        rdx, r13
0000000000005441         je         loc_5503

0000000000005447         mov        ecx, eax
0000000000005449         cmp        rax, rcx
000000000000544c         jne        loc_5503

0000000000005452         mov        dword [rsp+r15*4+0xa8+var_58], eax
0000000000005457         add        r15, 0x1
000000000000545b         lea        r13, qword [rdx+1]
000000000000545f         cmp        r15, 0x4
0000000000005463         jne        loc_540c

0000000000005465         mov        rcx, qword [rsp+0xa8+var_90]
000000000000546a         mov        eax, dword [rsp+0xa8+var_58]
000000000000546e         xor        r15d, r15d
0000000000005471         mov        dword [rsp+0xa8+var_98], ebp
0000000000005475         xor        r9d, r9d
0000000000005478         mov        rbp, rbx
000000000000547b         mov        dword [rcx], eax
000000000000547d         mov        eax, dword [rsp+0xa8+var_54]
0000000000005481         mov        dword [rcx+4], eax
0000000000005484         mov        eax, dword [rsp+0xa8+var_50]
0000000000005488         mov        dword [rcx+8], eax
000000000000548b         mov        eax, dword [rsp+0xa8+var_4C]
000000000000548f         mov        dword [rcx+0xc], eax
0000000000005492         jmp        loc_54cc

                     loc_5494:
0000000000005494         mov        rdx, qword [rsp+0xa8+var_60]                ; CODE XREF=sub_4bd0+2350
0000000000005499         cmp        byte [rdx], bl
000000000000549b         jne        loc_5500

000000000000549d         cmp        rdx, r13
00000000000054a0         je         loc_5500

00000000000054a2         test       rax, 0xffffffffffffff00
00000000000054a8         jne        loc_5500

00000000000054aa         mov        rcx, qword [rsp+0xa8+var_90]
00000000000054af         lea        r13, qword [rdx+1]
00000000000054b3         movzx      r9d, byte [rsp+0xa8+var_69]
00000000000054b9         mov        byte [rcx+r15+0x11], al
00000000000054be         add        r15, 0x1
00000000000054c2         cmp        r15, 0x20
00000000000054c6         je         loc_5660

                     loc_54cc:
00000000000054cc         mov        rsi, qword [rsp+0xa8+var_A8]                ; argument "__endptr" for method j_strtoul, CODE XREF=sub_4bd0+2242
00000000000054d0         cmp        r15, 0x1f
00000000000054d4         mov        eax, 0x3a
00000000000054d9         cmove      eax, r9d
00000000000054dd         mov        dword [r12], 0x0
00000000000054e5         mov        edx, 0x10                                   ; argument "__base" for method j_strtoul
00000000000054ea         mov        rdi, r13                                    ; argument "__nptr" for method j_strtoul
00000000000054ed         mov        byte [rsp+0xa8+var_69], r9b
00000000000054f2         mov        ebx, eax
00000000000054f4         call       j_strtoul                                   ; strtoul
00000000000054f9         cmp        dword [r12], 0x0
00000000000054fe         je         loc_5494

                     loc_5500:
0000000000005500         mov        rbx, rbp                                    ; CODE XREF=sub_4bd0+2251, sub_4bd0+2256, sub_4bd0+2264

                     loc_5503:
0000000000005503         mov        rdi, rbx                                    ; CODE XREF=sub_4bd0+2138, sub_4bd0+2152, sub_4bd0+2161, sub_4bd0+2172
0000000000005506         call       quote                                       ; quote
000000000000550b         mov        edx, 0x5
0000000000005510         mov        rbx, rax
0000000000005513         lea        rsi, qword [aInvalidArgumen]                ; "invalid argument %s"
000000000000551a         jmp        loc_50b1

                     loc_551f:
000000000000551f         mov        r12d, 0x7f                                  ; CODE XREF=sub_4bd0+627
0000000000005525         jmp        loc_4e5c

                     loc_552a:
000000000000552a         lea        rsi, qword [aPass8]                         ; argument "__s2" for method j_strcmp, "pass8", CODE XREF=sub_4bd0+1936
0000000000005531         mov        rdi, r15                                    ; argument "__s1" for method j_strcmp
0000000000005534         call       j_strcmp                                    ; strcmp
0000000000005539         test       eax, eax
000000000000553b         jne        loc_56ba

0000000000005541         mov        rcx, qword [rsp+0xa8+var_90]
0000000000005546         mov        eax, dword [rcx+8]
0000000000005549         mov        edx, dword [rcx]
000000000000554b         mov        dword [rsp+0xa8+var_98], eax
000000000000554f         and        eax, 0xfffffecf
0000000000005554         cmp        byte [rsp+0xa8+var_A8], 0x0
0000000000005558         je         loc_569d

000000000000555e         or         eax, 0x120
0000000000005563         or         edx, 0x20
0000000000005566         mov        dword [rcx+8], eax
0000000000005569         mov        rax, qword [rsp+0xa8+var_88]
000000000000556e         mov        dword [rcx], edx
0000000000005570         mov        byte [rax], 0x1
0000000000005573         jmp        loc_4be4

                     loc_5578:
0000000000005578         lea        rax, qword [control_info]                   ; control_info, CODE XREF=sub_4bd0+1913

                     loc_557f:
000000000000557f         add        rax, 0x18                                   ; CODE XREF=sub_4bd0+2507
0000000000005583         cmp        qword [rax-0x18], 0x0
0000000000005588         je         loc_559d

000000000000558a         movzx      ecx, byte [rax-0x10]
000000000000558e         mov        rdx, qword [rax-8]
0000000000005592         mov        rsi, qword [rsp+0xa8+var_90]
0000000000005597         mov        byte [rsi+rdx+0x11], cl
000000000000559b         jmp        loc_557f

                     loc_559d:
000000000000559d         lea        rbx, qword [mode_info]                      ; mode_info, CODE XREF=sub_4bd0+2488
00000000000055a4         jmp        loc_55c8

                     loc_55a6:
00000000000055a6         mov        edi, dword [rbx+8]                          ; CODE XREF=sub_4bd0+2572
00000000000055a9         mov        rsi, qword [rsp+0xa8+var_90]
00000000000055ae         call       mode_type_flag                              ; mode_type_flag
00000000000055b3         test       rax, rax
00000000000055b6         je         loc_561d

00000000000055b8         mov        edx, dword [rbx+0x18]
00000000000055bb         not        edx
00000000000055bd         and        edx, dword [rax]
00000000000055bf         or         edx, dword [rbx+0x10]
00000000000055c2         mov        dword [rax], edx

                     loc_55c4:
00000000000055c4         add        rbx, 0x20                                   ; CODE XREF=sub_4bd0+2568, sub_4bd0+2576, sub_4bd0+2607

                     loc_55c8:
00000000000055c8         cmp        qword [rbx], 0x0                            ; CODE XREF=sub_4bd0+2516
00000000000055cc         je         loc_51fa

00000000000055d2         movzx      eax, byte [rbx+0xc]
00000000000055d6         test       al, 0x10
00000000000055d8         jne        loc_55c4

00000000000055da         test       al, 0x1
00000000000055dc         jne        loc_55a6

00000000000055de         test       al, 0x2
00000000000055e0         je         loc_55c4

00000000000055e2         mov        edi, dword [rbx+8]
00000000000055e5         mov        rsi, qword [rsp+0xa8+var_90]
00000000000055ea         call       mode_type_flag                              ; mode_type_flag
00000000000055ef         test       rax, rax
00000000000055f2         je         loc_563c

00000000000055f4         mov        rdx, qword [rbx+0x10]
00000000000055f8         or         edx, dword [rbx+0x18]
00000000000055fb         not        edx
00000000000055fd         and        dword [rax], edx
00000000000055ff         jmp        loc_55c4

                     loc_5601:
0000000000005601         mov        rdi, rbx                                    ; CODE XREF=sub_4bd0+230, sub_4bd0+254, sub_4bd0+437, sub_4bd0+461, sub_4bd0+727, sub_4bd0+751, sub_4bd0+927, sub_4bd0+951, sub_4bd0+1143, sub_4bd0+1167, sub_4bd0+1468
0000000000005604         call       quote                                       ; quote
0000000000005609         mov        edx, 0x5
000000000000560e         mov        rbx, rax
0000000000005611         lea        rsi, qword [aMissingArgumen]                ; "missing argument to %s"
0000000000005618         jmp        loc_50b1

                     loc_561d:
000000000000561d         lea        rcx, qword [__PRETTY_FUNCTION__.7410]       ; argument "__function" for method j___assert_fail, "sane_mode", CODE XREF=sub_4bd0+2534
0000000000005624         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/stty.c"
000000000000562b         lea        rdi, qword [aBitsp]                         ; argument "__assertion" for method j___assert_fail, "bitsp"
0000000000005632         mov        edx, 0x8cb                                  ; argument "__line" for method j___assert_fail
0000000000005637         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_563c:
000000000000563c         lea        rcx, qword [__PRETTY_FUNCTION__.7410]       ; argument "__function" for method j___assert_fail, "sane_mode", CODE XREF=sub_4bd0+2594
0000000000005643         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/stty.c"
000000000000564a         lea        rdi, qword [aBitsp]                         ; argument "__assertion" for method j___assert_fail, "bitsp"
0000000000005651         mov        edx, 0x8d1                                  ; argument "__line" for method j___assert_fail
0000000000005656         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_565b:
000000000000565b         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_4bd0+334
                        ; endp

                     loc_5660:
0000000000005660         mov        ebp, dword [rsp+0xa8+var_98]                ; CODE XREF=sub_4bd0+2294
0000000000005664         jmp        loc_51fa

                     loc_5669:
0000000000005669         lea        rsi, qword [aParity]                        ; argument "__s2" for method j_strcmp, "parity", CODE XREF=sub_4bd0+1770
0000000000005670         mov        rdi, r15                                    ; argument "__s1" for method j_strcmp
0000000000005673         call       j_strcmp                                    ; strcmp
0000000000005678         test       eax, eax
000000000000567a         je         loc_52c0

0000000000005680         jmp        loc_510d

                     loc_5685:
0000000000005685         mov        rcx, qword [rsp+0xa8+var_90]                ; CODE XREF=sub_4bd0+1954
000000000000568a         and        eax, 0xfffffffd
000000000000568d         mov        dword [rcx+0xc], eax
0000000000005690         mov        rax, qword [rsp+0xa8+var_88]
0000000000005695         mov        byte [rax], 0x1
0000000000005698         jmp        loc_4be4

                     loc_569d:
000000000000569d         mov        rcx, qword [rsp+0xa8+var_90]                ; CODE XREF=sub_4bd0+2440
00000000000056a2         or         eax, 0x30
00000000000056a5         and        edx, 0xffffffdf
00000000000056a8         mov        dword [rcx+8], eax
00000000000056ab         mov        rax, qword [rsp+0xa8+var_88]
00000000000056b0         mov        dword [rcx], edx
00000000000056b2         mov        byte [rax], 0x1
00000000000056b5         jmp        loc_4be4

                     loc_56ba:
00000000000056ba         lea        rsi, qword [aLitout]                        ; argument "__s2" for method j_strcmp, "litout", CODE XREF=sub_4bd0+2411
00000000000056c1         mov        rdi, r15                                    ; argument "__s1" for method j_strcmp
00000000000056c4         call       j_strcmp                                    ; strcmp
00000000000056c9         test       eax, eax
00000000000056cb         jne        loc_570d

00000000000056cd         mov        rsi, qword [rsp+0xa8+var_90]
00000000000056d2         mov        eax, dword [rsi+8]
00000000000056d5         mov        edx, dword [rsi+4]
00000000000056d8         mov        ecx, dword [rsi]
00000000000056da         mov        dword [rsp+0xa8+var_98], eax
00000000000056de         and        eax, 0xfffffecf
00000000000056e3         cmp        byte [rsp+0xa8+var_A8], 0x0
00000000000056e7         je         loc_5795

00000000000056ed         or         eax, 0x120
00000000000056f2         or         ecx, 0x20
00000000000056f5         or         edx, 0x1
00000000000056f8         mov        dword [rsi+8], eax
00000000000056fb         mov        rax, qword [rsp+0xa8+var_88]
0000000000005700         mov        dword [rsi], ecx
0000000000005702         mov        dword [rsi+4], edx
0000000000005705         mov        byte [rax], 0x1
0000000000005708         jmp        loc_4be4

                     loc_570d:
000000000000570d         lea        rsi, qword [aLitout+7]                      ; argument "__s2" for method j_strcmp, 0xb4ed, CODE XREF=sub_4bd0+2811
0000000000005714         mov        rdi, r15                                    ; argument "__s1" for method j_strcmp
0000000000005717         call       j_strcmp                                    ; strcmp
000000000000571c         test       eax, eax
000000000000571e         je         loc_5737

0000000000005720         lea        rsi, qword [aCooked]                        ; argument "__s2" for method j_strcmp, "cooked"
0000000000005727         mov        rdi, r15                                    ; argument "__s1" for method j_strcmp
000000000000572a         call       j_strcmp                                    ; strcmp
000000000000572f         test       eax, eax
0000000000005731         jne        loc_57b8

                     loc_5737:
0000000000005737         movzx      eax, byte [r15]                             ; CODE XREF=sub_4bd0+2894
000000000000573b         cmp        al, 0x72
000000000000573d         je         loc_576f

000000000000573f         cmp        al, 0x63
0000000000005741         jne        loc_5749

0000000000005743         cmp        byte [rsp+0xa8+var_A8], 0x0
0000000000005747         je         loc_5775

                     loc_5749:
0000000000005749         mov        rax, qword [rsp+0xa8+var_90]                ; CODE XREF=sub_4bd0+2929, sub_4bd0+2979
000000000000574e         mov        dword [rax], 0x0
0000000000005754         and        dword [rax+4], 0xfffffffe
0000000000005758         and        dword [rax+0xc], 0xfffffff8
000000000000575c         mov        word [rax+0x16], 0x100
0000000000005762         mov        rax, qword [rsp+0xa8+var_88]
0000000000005767         mov        byte [rax], 0x1
000000000000576a         jmp        loc_4be4

                     loc_576f:
000000000000576f         cmp        byte [rsp+0xa8+var_A8], 0x0                 ; CODE XREF=sub_4bd0+2925
0000000000005773         je         loc_5749

                     loc_5775:
0000000000005775         mov        rax, qword [rsp+0xa8+var_90]                ; CODE XREF=sub_4bd0+2935
000000000000577a         or         dword [rax], 0x526
0000000000005780         or         dword [rax+4], 0x1
0000000000005784         or         dword [rax+0xc], 0x3
0000000000005788         mov        rax, qword [rsp+0xa8+var_88]
000000000000578d         mov        byte [rax], 0x1
0000000000005790         jmp        loc_4be4

                     loc_5795:
0000000000005795         mov        rsi, qword [rsp+0xa8+var_90]                ; CODE XREF=sub_4bd0+2839
000000000000579a         or         eax, 0x30
000000000000579d         and        ecx, 0xffffffdf
00000000000057a0         and        edx, 0xfffffffe
00000000000057a3         mov        dword [rsi+8], eax
00000000000057a6         mov        rax, qword [rsp+0xa8+var_88]
00000000000057ab         mov        dword [rsi], ecx
00000000000057ad         mov        dword [rsi+4], edx
00000000000057b0         mov        byte [rax], 0x1
00000000000057b3         jmp        loc_4be4

                     loc_57b8:
00000000000057b8         lea        rsi, qword [aDecctlq]                       ; argument "__s2" for method j_strcmp, "decctlq", CODE XREF=sub_4bd0+2913
00000000000057bf         mov        rdi, r15                                    ; argument "__s1" for method j_strcmp
00000000000057c2         call       j_strcmp                                    ; strcmp
00000000000057c7         test       eax, eax
00000000000057c9         jne        loc_57ea

00000000000057cb         cmp        byte [rsp+0xa8+var_A8], 0x0
00000000000057cf         mov        rcx, qword [rsp+0xa8+var_90]
00000000000057d4         mov        eax, dword [rcx]
00000000000057d6         je         loc_581e

00000000000057d8         or         ah, 0x8
00000000000057db         mov        dword [rcx], eax
00000000000057dd         mov        rax, qword [rsp+0xa8+var_88]
00000000000057e2         mov        byte [rax], 0x1
00000000000057e5         jmp        loc_4be4

                     loc_57ea:
00000000000057ea         lea        rsi, qword [aTabs]                          ; argument "__s2" for method j_strcmp, "tabs", CODE XREF=sub_4bd0+3065
00000000000057f1         mov        rdi, r15                                    ; argument "__s1" for method j_strcmp
00000000000057f4         call       j_strcmp                                    ; strcmp
00000000000057f9         test       eax, eax
00000000000057fb         jne        loc_584d

00000000000057fd         cmp        byte [rsp+0xa8+var_A8], 0x0
0000000000005801         mov        rcx, qword [rsp+0xa8+var_90]
0000000000005806         mov        eax, dword [rcx+4]
0000000000005809         je         loc_5835

000000000000580b         or         ah, 0x18
000000000000580e         mov        dword [rcx+4], eax
0000000000005811         mov        rax, qword [rsp+0xa8+var_88]
0000000000005816         mov        byte [rax], 0x1
0000000000005819         jmp        loc_4be4

                     loc_581e:
000000000000581e         mov        rcx, qword [rsp+0xa8+var_90]                ; CODE XREF=sub_4bd0+3078
0000000000005823         and        ah, 0xf7
0000000000005826         mov        dword [rcx], eax
0000000000005828         mov        rax, qword [rsp+0xa8+var_88]
000000000000582d         mov        byte [rax], 0x1
0000000000005830         jmp        loc_4be4

                     loc_5835:
0000000000005835         mov        rcx, qword [rsp+0xa8+var_90]                ; CODE XREF=sub_4bd0+3129
000000000000583a         and        ah, 0xe7
000000000000583d         mov        dword [rcx+4], eax
0000000000005840         mov        rax, qword [rsp+0xa8+var_88]
0000000000005845         mov        byte [rax], 0x1
0000000000005848         jmp        loc_4be4

                     loc_584d:
000000000000584d         lea        rsi, qword [aLcase]                         ; argument "__s2" for method j_strcmp, "lcase", CODE XREF=sub_4bd0+3115
0000000000005854         mov        rdi, r15                                    ; argument "__s1" for method j_strcmp
0000000000005857         call       j_strcmp                                    ; strcmp
000000000000585c         test       eax, eax
000000000000585e         je         loc_5873

0000000000005860         lea        rsi, qword [aLcase_b50b]                    ; argument "__s2" for method j_strcmp, "LCASE"
0000000000005867         mov        rdi, r15                                    ; argument "__s1" for method j_strcmp
000000000000586a         call       j_strcmp                                    ; strcmp
000000000000586f         test       eax, eax
0000000000005871         jne        loc_58a4

                     loc_5873:
0000000000005873         cmp        byte [rsp+0xa8+var_A8], 0x0                 ; CODE XREF=sub_4bd0+3214
0000000000005877         mov        rsi, qword [rsp+0xa8+var_90]
000000000000587c         mov        eax, dword [rsi+4]
000000000000587f         mov        ecx, dword [rsi+0xc]
0000000000005882         mov        edx, dword [rsi]
0000000000005884         je         loc_58f7

0000000000005886         and        eax, 0xfffffffd
0000000000005889         and        ecx, 0xfffffffb
000000000000588c         and        dh, 0xfd
000000000000588f         mov        dword [rsi+4], eax
0000000000005892         mov        rax, qword [rsp+0xa8+var_88]
0000000000005897         mov        dword [rsi+0xc], ecx
000000000000589a         mov        dword [rsi], edx
000000000000589c         mov        byte [rax], 0x1
000000000000589f         jmp        loc_4be4

                     loc_58a4:
00000000000058a4         lea        rsi, qword [aLcase_b50b+6]                  ; argument "__s2" for method j_strcmp, 0xb511, CODE XREF=sub_4bd0+3233
00000000000058ab         mov        rdi, r15                                    ; argument "__s1" for method j_strcmp
00000000000058ae         call       j_strcmp                                    ; strcmp
00000000000058b3         test       eax, eax
00000000000058b5         je         loc_591a

00000000000058b7         lea        rsi, qword [aLcase_b50b+10]                 ; argument "__s2" for method j_strcmp, 0xb515
00000000000058be         mov        rdi, r15                                    ; argument "__s1" for method j_strcmp
00000000000058c1         call       j_strcmp                                    ; strcmp
00000000000058c6         test       eax, eax
00000000000058c8         jne        loc_51fa

00000000000058ce         mov        rax, qword [rsp+0xa8+var_90]
00000000000058d3         and        dword [rax], 0xfffff7ff
00000000000058d9         mov        byte [rax+0x11], 0x3
00000000000058dd         mov        word [rax+0x13], 0x157f
00000000000058e3         or         dword [rax+0xc], aStrrchr                   ; "strrchr"
00000000000058ea         mov        rax, qword [rsp+0xa8+var_88]
00000000000058ef         mov        byte [rax], 0x1
00000000000058f2         jmp        loc_4be4

                     loc_58f7:
00000000000058f7         mov        rsi, qword [rsp+0xa8+var_90]                ; CODE XREF=sub_4bd0+3252
00000000000058fc         or         eax, 0x2
00000000000058ff         or         ecx, 0x4
0000000000005902         or         dh, 0x2
0000000000005905         mov        dword [rsi+4], eax
0000000000005908         mov        rax, qword [rsp+0xa8+var_88]
000000000000590d         mov        dword [rsi+0xc], ecx
0000000000005910         mov        dword [rsi], edx
0000000000005912         mov        byte [rax], 0x1
0000000000005915         jmp        loc_4be4

                     loc_591a:
000000000000591a         mov        rax, qword [rsp+0xa8+var_90]                ; CODE XREF=sub_4bd0+3301
000000000000591f         or         dword [rax+0xc], aStrrchr                   ; "strrchr"
0000000000005926         mov        rax, qword [rsp+0xa8+var_88]
000000000000592b         mov        byte [rax], 0x1
000000000000592e         jmp        loc_4be4
0000000000005933         align      64                                          ; End of unwind block (FDE at 0xecc0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
0000000000005940         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0xed84), file_name
0000000000005947         ret
                        ; endp
0000000000005948         align      16                                          ; End of unwind block (FDE at 0xed84)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
0000000000005950         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0xed98), ignore_EPIPE
0000000000005957         ret
                        ; endp
0000000000005958         align      32                                          ; End of unwind block (FDE at 0xed98)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
0000000000005960         push       rbp                                         ; Begin of unwind block (FDE at 0xedac), DATA XREF=main+106
0000000000005961         push       rbx
0000000000005962         sub        rsp, 0x8
0000000000005966         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000596d         call       close_stream                                ; close_stream
0000000000005972         test       eax, eax
0000000000005974         je         loc_598c

0000000000005976         call       j___errno_location                          ; __errno_location
000000000000597b         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
0000000000005982         mov        rbx, rax
0000000000005985         je         loc_59a3

0000000000005987         cmp        dword [rax], 0x20
000000000000598a         jne        loc_59a3

                     loc_598c:
000000000000598c         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
0000000000005993         call       close_stream                                ; close_stream
0000000000005998         test       eax, eax
000000000000599a         jne        loc_59e2

000000000000599c         add        rsp, 0x8
00000000000059a0         pop        rbx
00000000000059a1         pop        rbp
00000000000059a2         ret
                        ; endp

                     loc_59a3:
00000000000059a3         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
00000000000059aa         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000059ac         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000059b1         call       j_dcgettext                                 ; dcgettext
00000000000059b6         mov        rdi, qword [file_name]                      ; file_name
00000000000059bd         mov        rbp, rax
00000000000059c0         test       rdi, rdi
00000000000059c3         je         loc_59ed

00000000000059c5         call       quotearg_colon                              ; quotearg_colon
00000000000059ca         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
00000000000059cc         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
00000000000059d3         mov        rcx, rax
00000000000059d6         mov        r8, rbp
00000000000059d9         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000059db         xor        eax, eax
00000000000059dd         call       j_error                                     ; error

                     loc_59e2:
00000000000059e2         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
00000000000059e8         call       j__exit                                     ; _exit
                        ; endp

                     loc_59ed:
00000000000059ed         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
00000000000059ef         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0xdacc
00000000000059f6         mov        rcx, rax
00000000000059f9         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000059fb         xor        eax, eax
00000000000059fd         call       j_error                                     ; error
0000000000005a02         jmp        loc_59e2
0000000000005a04         align      16                                          ; End of unwind block (FDE at 0xedac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fd_reopen:
0000000000005a10         push       r13                                         ; Begin of unwind block (FDE at 0xeddc), CODE XREF=main+626
0000000000005a12         push       r12
0000000000005a14         xor        eax, eax
0000000000005a16         push       rbp
0000000000005a17         push       rbx
0000000000005a18         mov        ebp, edi
0000000000005a1a         mov        rdi, rsi                                    ; argument "__file" for method j_open
0000000000005a1d         mov        esi, edx                                    ; argument "__oflag" for method j_open
0000000000005a1f         mov        edx, ecx
0000000000005a21         sub        rsp, 0x8
0000000000005a25         call       j_open                                      ; open
0000000000005a2a         cmp        ebp, eax
0000000000005a2c         mov        ebx, eax
0000000000005a2e         je         loc_5a59

0000000000005a30         test       eax, eax
0000000000005a32         js         loc_5a59

0000000000005a34         mov        esi, ebp                                    ; argument "__fd2" for method j_dup2
0000000000005a36         mov        edi, eax                                    ; argument "__fd" for method j_dup2
0000000000005a38         call       j_dup2                                      ; dup2
0000000000005a3d         mov        r12d, eax
0000000000005a40         call       j___errno_location                          ; __errno_location
0000000000005a45         mov        r13d, dword [rax]
0000000000005a48         mov        rbp, rax
0000000000005a4b         mov        edi, ebx                                    ; argument "__fd" for method j_close
0000000000005a4d         call       j_close                                     ; close
0000000000005a52         mov        ebx, r12d
0000000000005a55         mov        dword [rbp], r13d

                     loc_5a59:
0000000000005a59         add        rsp, 0x8                                    ; CODE XREF=fd_reopen+30, fd_reopen+34
0000000000005a5d         mov        eax, ebx
0000000000005a5f         pop        rbx
0000000000005a60         pop        rbp
0000000000005a61         pop        r12
0000000000005a63         pop        r13
0000000000005a65         ret
                        ; endp
0000000000005a66         align      16                                          ; End of unwind block (FDE at 0xeddc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000005a70         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xee14), CODE XREF=main+53
0000000000005a73         push       rbx
0000000000005a74         je         loc_5aed

0000000000005a76         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
0000000000005a7b         mov        rbx, rdi
0000000000005a7e         call       j_strrchr                                   ; strrchr
0000000000005a83         test       rax, rax
0000000000005a86         je         loc_5add

0000000000005a88         lea        r8, qword [rax+1]
0000000000005a8c         mov        rdx, r8
0000000000005a8f         sub        rdx, rbx
0000000000005a92         cmp        rdx, 0x6
0000000000005a96         jle        loc_5add

0000000000005a98         lea        rsi, qword [rax-6]
0000000000005a9c         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000005aa3         mov        ecx, 0x7
0000000000005aa8         rep  cmpsb byte [rsi], byte [rdi]
0000000000005aaa         seta       dl
0000000000005aad         sbb        dl, 0x0
0000000000005ab0         test       dl, dl
0000000000005ab2         jne        loc_5add

0000000000005ab4         lea        rdi, qword [aLibs+8]                        ; 0xdb10
0000000000005abb         mov        ecx, 0x3
0000000000005ac0         mov        rsi, r8
0000000000005ac3         mov        rbx, r8
0000000000005ac6         rep  cmpsb byte [rsi], byte [rdi]
0000000000005ac8         seta       dl
0000000000005acb         sbb        dl, 0x0
0000000000005ace         test       dl, dl
0000000000005ad0         jne        loc_5add

0000000000005ad2         lea        rbx, qword [rax+4]
0000000000005ad6         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_5add:
0000000000005add         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
0000000000005ae4         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
0000000000005aeb         pop        rbx
0000000000005aec         ret
                        ; endp

                     loc_5aed:
0000000000005aed         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
0000000000005af4         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
0000000000005afb         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
0000000000005b00         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
0000000000005b05         call       j_fwrite                                    ; fwrite
0000000000005b0a         call       j_abort                                     ; abort
                        ; endp
0000000000005b0f         align      16                                          ; End of unwind block (FDE at 0xee14)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
0000000000005b10         push       rbp                                         ; Begin of unwind block (FDE at 0xee34), CODE XREF=sub_6340+2597, sub_6340+2619
0000000000005b11         push       rbx
0000000000005b12         mov        rbp, rdi
0000000000005b15         mov        ebx, esi
0000000000005b17         sub        rsp, 0x8
0000000000005b1b         call       locale_charset                              ; locale_charset
0000000000005b20         movzx      edx, byte [rax]
0000000000005b23         and        edx, 0xffffffdf
0000000000005b26         cmp        dl, 0x55
0000000000005b29         je         loc_5ba0

0000000000005b2b         cmp        dl, 0x47
0000000000005b2e         je         loc_5b50

                     loc_5b30:
0000000000005b30         lea        rax, qword [aLibs+27]                       ; 0xdb23, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
0000000000005b37         lea        rdx, qword [aLibs+29]                       ; 0xdb25
0000000000005b3e         cmp        ebx, 0x9
0000000000005b41         cmovne     rax, rdx
0000000000005b45         add        rsp, 0x8
0000000000005b49         pop        rbx
0000000000005b4a         pop        rbp
0000000000005b4b         ret
                        ; endp
0000000000005b4c         align      16

                     loc_5b50:
0000000000005b50         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
0000000000005b54         and        edx, 0xffffffdf
0000000000005b57         cmp        dl, 0x42
0000000000005b5a         jne        loc_5b30

0000000000005b5c         cmp        byte [rax+2], 0x31
0000000000005b60         jne        loc_5b30

0000000000005b62         cmp        byte [rax+3], 0x38
0000000000005b66         jne        loc_5b30

0000000000005b68         cmp        byte [rax+4], 0x30
0000000000005b6c         jne        loc_5b30

0000000000005b6e         cmp        byte [rax+5], 0x33
0000000000005b72         jne        loc_5b30

0000000000005b74         cmp        byte [rax+6], 0x30
0000000000005b78         jne        loc_5b30

0000000000005b7a         cmp        byte [rax+7], 0x0
0000000000005b7e         jne        loc_5b30

0000000000005b80         cmp        byte [rbp], 0x60
0000000000005b84         lea        rax, qword [aLibs+20]                       ; 0xdb1c
0000000000005b8b         lea        rdx, qword [aLibs+24]                       ; 0xdb20
0000000000005b92         cmovne     rax, rdx
0000000000005b96         add        rsp, 0x8
0000000000005b9a         pop        rbx
0000000000005b9b         pop        rbp
0000000000005b9c         ret
                        ; endp
0000000000005b9d         align      32

                     loc_5ba0:
0000000000005ba0         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
0000000000005ba4         and        edx, 0xffffffdf
0000000000005ba7         cmp        dl, 0x54
0000000000005baa         jne        loc_5b30

0000000000005bac         movzx      edx, byte [rax+2]
0000000000005bb0         and        edx, 0xffffffdf
0000000000005bb3         cmp        dl, 0x46
0000000000005bb6         jne        loc_5b30

0000000000005bbc         cmp        byte [rax+3], 0x2d
0000000000005bc0         jne        loc_5b30

0000000000005bc6         cmp        byte [rax+4], 0x38
0000000000005bca         jne        loc_5b30

0000000000005bd0         cmp        byte [rax+5], 0x0
0000000000005bd4         jne        loc_5b30

0000000000005bda         cmp        byte [rbp], 0x60
0000000000005bde         lea        rax, qword [aLibs+12]                       ; 0xdb14
0000000000005be5         lea        rdx, qword [aLibs+16]                       ; 0xdb18
0000000000005bec         cmovne     rax, rdx
0000000000005bf0         add        rsp, 0x8
0000000000005bf4         pop        rbx
0000000000005bf5         pop        rbp
0000000000005bf6         ret
                        ; endp
0000000000005bf7         align      1024                                        ; End of unwind block (FDE at 0xee34)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
0000000000005c00         push       r15                                         ; Begin of unwind block (FDE at 0xee78), CODE XREF=sub_6340+1165, sub_6340+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
0000000000005c02         push       r14
0000000000005c04         mov        r15d, r8d
0000000000005c07         push       r13
0000000000005c09         push       r12
0000000000005c0b         mov        r14, rdi
0000000000005c0e         push       rbp
0000000000005c0f         push       rbx
0000000000005c10         mov        ebx, r9d
0000000000005c13         mov        r13, rsi
0000000000005c16         mov        rbp, rcx
0000000000005c19         and        ebx, 0x2
0000000000005c1c         sub        rsp, 0xb8
0000000000005c23         mov        rax, qword [rsp+0xe8+arg_0]
0000000000005c2b         mov        qword [rsp+0xe8+var_D8], rdx
0000000000005c30         mov        dword [rsp+0xe8+var_E0], r8d
0000000000005c35         mov        dword [rsp+0xe8+var_70], r9d
0000000000005c3a         mov        qword [rsp+0xe8+var_C8], rax
0000000000005c3f         mov        rax, qword [rsp+0xe8+arg_8]
0000000000005c47         mov        qword [rsp+0xe8+var_80], rax
0000000000005c4c         mov        rax, qword [rsp+0xe8+arg_10]
0000000000005c54         mov        qword [rsp+0xe8+var_88], rax
0000000000005c59         mov        rax, qword [fs:0x28]
0000000000005c62         mov        qword [rsp+0xe8+var_40], rax
0000000000005c6a         xor        eax, eax
0000000000005c6c         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000005c71         cmp        r15d, 0xa
0000000000005c75         mov        qword [rsp+0xe8+var_90], rax
0000000000005c7a         ja         loc_6e2f

0000000000005c80         lea        rcx, qword [switch_table_db80]              ; switch_table_db80
0000000000005c87         mov        edx, r15d
0000000000005c8a         movsxd     rax, dword [rcx+rdx*4]
0000000000005c8e         add        rax, rcx
0000000000005c91         jmp        rax                                         ; switch statement using table at 0xdb80, with 11 cases, 0x5c93,0x6864,0x68c0,0x6915,0x695a,0x6994,0x6a3a,0x6a74,0x6c68

                     loc_5c93:
0000000000005c93         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_6340+1318
0000000000005c98         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000005c9d         xor        r12d, r12d
0000000000005ca0         mov        qword [rsp+0xe8+var_98], 0x0
0000000000005ca9         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000005cae         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_5cb3:
0000000000005cb3         lea        rax, qword [aLibs+29]                       ; 0xdb25, CODE XREF=sub_6340+1876
0000000000005cba         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000005cc3         xor        r15d, r15d
0000000000005cc6         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000005cce         mov        qword [rsp+0xe8+var_A0], rax

                     loc_5cd3:
0000000000005cd3         xor        r11d, r11d                                  ; CODE XREF=sub_6340+180, sub_6340+1400, sub_6340+1488, sub_6340+1557, sub_6340+1615, sub_6340+1781, sub_6340+1839, sub_6340+2408, sub_6340+2485
0000000000005cd6         mov        rax, rbp
0000000000005cd9         mov        r8d, r12d
0000000000005cdc         mov        rbp, r11
0000000000005cdf         mov        r11, rax
0000000000005ce2         nop        word [rax+rax]

                     loc_5ce8:
0000000000005ce8         cmp        r11, rbp                                    ; CODE XREF=sub_5df0+194
0000000000005ceb         setne      r12b
0000000000005cef         cmp        r11, 0xffffffffffffffff
0000000000005cf3         jne        loc_5d02

0000000000005cf5         mov        rax, qword [rsp+0xe8+var_D8]
0000000000005cfa         cmp        byte [rax+rbp], 0x0
0000000000005cfe         setne      r12b

                     loc_5d02:
0000000000005d02         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
0000000000005d05         je         loc_6360

0000000000005d0b         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000005d10         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000005d15         lea        r9, qword [rdi+rbp]
0000000000005d19         setne      al
0000000000005d1c         and        al, byte [rsp+0xe8+var_DB]
0000000000005d20         mov        r10d, eax
0000000000005d23         je         loc_5dd0

0000000000005d29         mov        rax, qword [rsp+0xe8+var_D0]
0000000000005d2e         test       rax, rax
0000000000005d31         je         loc_6160

0000000000005d37         cmp        r11, 0xffffffffffffffff
0000000000005d3b         lea        rbx, qword [rbp+rax]
0000000000005d40         jne        loc_5d70

0000000000005d42         cmp        rax, 0x1
0000000000005d46         jbe        loc_5d70

0000000000005d48         mov        byte [rsp+0xe8+var_B0], r8b
0000000000005d4d         mov        byte [rsp+0xe8+var_B8], r10b
0000000000005d52         mov        qword [rsp+0xe8+var_C0], r9
0000000000005d57         call       j_strlen                                    ; strlen
0000000000005d5c         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000005d62         movzx      r10d, byte [rsp+0xe8+var_B8]
0000000000005d68         mov        r11, rax
0000000000005d6b         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_5d70:
0000000000005d70         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
0000000000005d73         mov        byte [rsp+0xe8+var_C0], r10b
0000000000005d78         ja         loc_6330

0000000000005d7e         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
0000000000005d83         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
0000000000005d88         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
0000000000005d8b         mov        qword [rsp+0xe8+var_A8], r11
0000000000005d90         mov        byte [rsp+0xe8+var_B0], r8b
0000000000005d95         mov        qword [rsp+0xe8+var_B8], r9
0000000000005d9a         call       j_memcmp                                    ; memcmp
0000000000005d9f         test       eax, eax
0000000000005da1         mov        r9, qword [rsp+0xe8+var_B8]
0000000000005da6         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000005dac         mov        r11, qword [rsp+0xe8+var_A8]
0000000000005db1         jne        loc_6330

0000000000005db7         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000005dbc         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000005dc2         jne        loc_6d45

0000000000005dc8         nop        dword [rax+rax]

                     loc_5dd0:
0000000000005dd0         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_6320+19
0000000000005dd4         cmp        bl, 0x7e
0000000000005dd7         ja         loc_60f8

0000000000005ddd         lea        rcx, qword [switch_table_db80+44]           ; 0xdbac
0000000000005de4         movzx      edx, bl
0000000000005de7         movsxd     rax, dword [rcx+rdx*4]
0000000000005deb         add        rax, rcx
0000000000005dee         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_5df0:
0000000000005df0         xor        r10d, r10d
0000000000005df3         cmp        r11, 0x1
0000000000005df7         setne      al
0000000000005dfa         cmp        r11, 0xffffffffffffffff
0000000000005dfe         jne        loc_5e0c

0000000000005e00         mov        rax, qword [rsp+arg_8]
0000000000005e05         cmp        byte [rax+1], 0x0
0000000000005e09         setne      al

                     loc_5e0c:
0000000000005e0c         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_5df0+14
0000000000005e11         sete       dl
0000000000005e14         test       al, al
0000000000005e16         je         loc_6068

                     loc_5e1c:
0000000000005e1c         xor        r12d, r12d                                  ; CODE XREF=sub_6060+11
0000000000005e1f         xor        eax, eax
0000000000005e21         nop        dword [rax]
                        ; endp

                     loc_5e28:
0000000000005e28         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_6010+50, sub_60e0+119
0000000000005e2d         jne        loc_5f42

0000000000005e33         test       dl, dl
0000000000005e35         jne        loc_5f42

                     loc_5e3b:
0000000000005e3b         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_5ef0+87
0000000000005e40         test       rsi, rsi
0000000000005e43         je         loc_5e59

0000000000005e45         mov        edx, ebx
0000000000005e47         shr        dl, 0x5
0000000000005e4a         movzx      edx, dl
0000000000005e4d         mov        edx, dword [rsi+rdx*4]
0000000000005e50         bt         edx, ebx
0000000000005e53         jb         loc_5fa3

                     loc_5e59:
0000000000005e59         test       r10b, r10b                                  ; CODE XREF=sub_5df0+83, sub_5ef0+93
0000000000005e5c         jne        loc_5fa3

0000000000005e62         xor        eax, 0x1
0000000000005e65         add        rbp, 0x1
0000000000005e69         and        eax, r8d

                     loc_5e6c:
0000000000005e6c         test       al, al                                      ; CODE XREF=sub_6340+936
0000000000005e6e         je         loc_5e90

0000000000005e70         cmp        r13, r15
0000000000005e73         jbe        loc_5e7a

0000000000005e75         mov        byte [r14+r15], 0x27

                     loc_5e7a:
0000000000005e7a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_5df0+131
0000000000005e7e         cmp        r13, rax
0000000000005e81         jbe        loc_5e89

0000000000005e83         mov        byte [r14+r15+1], 0x27

                     loc_5e89:
0000000000005e89         add        r15, 0x2                                    ; CODE XREF=sub_5df0+145
0000000000005e8d         xor        r8d, r8d

                     loc_5e90:
0000000000005e90         cmp        r15, r13                                    ; CODE XREF=sub_5df0+126, sub_5ef0+275, sub_6340+869
0000000000005e93         jae        loc_5e99

0000000000005e95         mov        byte [r14+r15], bl

                     loc_5e99:
0000000000005e99         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_5df0+163
0000000000005e9e         add        r15, 0x1
0000000000005ea2         mov        eax, 0x0
0000000000005ea7         test       r12b, r12b
0000000000005eaa         cmove      edi, eax
0000000000005ead         mov        byte [rsp+0xe8+var_DA], dil
0000000000005eb2         jmp        loc_5ce8
0000000000005eb7         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_5ec0:
0000000000005ec0         xor        r10d, r10d
0000000000005ec3         mov        eax, dword [rsp+arg_0]
0000000000005ec7         cmp        eax, 0x2
0000000000005eca         je         loc_6488

0000000000005ed0         cmp        eax, 0x5
0000000000005ed3         je         loc_6448

0000000000005ed9         cmp        eax, 0x2
0000000000005edc         mov        ebx, 0x3f
0000000000005ee1         sete       dl
0000000000005ee4         xor        r12d, r12d
0000000000005ee7         xor        eax, eax
0000000000005ee9         jmp        sub_5df0+56
                        ; endp
0000000000005eee         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_5ef0:
0000000000005ef0         xor        r10d, r10d
0000000000005ef3         cmp        dword [rsp+arg_0], 0x2
0000000000005ef8         je         loc_6400

0000000000005efe         mov        byte [rsp+arg_74], r12b
0000000000005f03         xor        edx, edx
0000000000005f05         xor        eax, eax
0000000000005f07         mov        ebx, 0x27
0000000000005f0c         jmp        sub_5df0+56
                        ; endp
0000000000005f11         nop        dword [rax]
0000000000005f18         mov        edx, 0x9
0000000000005f1d         mov        ebx, 0x74

                     loc_5f22:
0000000000005f22         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_60b0+10, sub_61a0+37, sub_62e0+53
0000000000005f27         sete       al
0000000000005f2a         and        al, byte [rsp+arg_7]
0000000000005f2e         jne        sub_6060+30

0000000000005f34         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_5ef0+114
0000000000005f39         jne        loc_5fa0

                     loc_5f3b:
0000000000005f3b         mov        ebx, edx                                    ; CODE XREF=sub_6010+18
0000000000005f3d         xor        r12d, r12d
0000000000005f40         xor        eax, eax
                        ; endp

                     loc_5f42:
0000000000005f42         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_5df0+61, sub_5df0+69
0000000000005f47         jne        loc_5e3b

0000000000005f4d         jmp        loc_5e59
0000000000005f52         nop        word [rax+rax]
0000000000005f58         mov        edx, 0x8
0000000000005f5d         mov        ebx, 0x62
0000000000005f62         jmp        sub_5ef0+68
0000000000005f64         nop        dword [rax]
0000000000005f68         cmp        dword [rsp+8], 0x2
0000000000005f6d         je         sub_6340                                    ; sub_6340
0000000000005f73         cmp        byte [rsp+0xd], 0x0
0000000000005f78         je         sub_6180+16

                     loc_5f7e:
0000000000005f7e         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_6180+8
0000000000005f83         je         loc_6190

0000000000005f89         cmp        qword [rsp+arg_10], 0x0
0000000000005f8f         jne        loc_634b

0000000000005f95         mov        ebx, 0x5c
0000000000005f9a         nop        word [rax+rax]
                        ; endp

                     loc_5fa0:
0000000000005fa0         xor        r12d, r12d                                  ; CODE XREF=sub_5ef0+73, sub_62e0+29
                        ; endp

                     loc_5fa3:
0000000000005fa3         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_5df0+99, sub_5df0+108
0000000000005fa8         sete       dl
0000000000005fab         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000005fb0         mov        eax, edx
0000000000005fb2         jne        loc_6808

0000000000005fb8         mov        eax, r8d
0000000000005fbb         xor        eax, 0x1
0000000000005fbe         and        al, dl
0000000000005fc0         je         loc_5ff1

0000000000005fc2         cmp        r13, r15
0000000000005fc5         jbe        loc_5fcc

0000000000005fc7         mov        byte [r14+r15], 0x27

                     loc_5fcc:
0000000000005fcc         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_5ef0+213
0000000000005fd0         cmp        r13, rdx
0000000000005fd3         jbe        loc_5fdb

0000000000005fd5         mov        byte [r14+r15+1], 0x24

                     loc_5fdb:
0000000000005fdb         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_5ef0+227
0000000000005fdf         cmp        r13, rdx
0000000000005fe2         jbe        loc_5fea

0000000000005fe4         mov        byte [r14+r15+2], 0x27

                     loc_5fea:
0000000000005fea         add        r15, 0x3                                    ; CODE XREF=sub_5ef0+242
0000000000005fee         mov        r8d, eax

                     loc_5ff1:
0000000000005ff1         cmp        r13, r15                                    ; CODE XREF=sub_5ef0+208
0000000000005ff4         jbe        loc_5ffb

0000000000005ff6         mov        byte [r14+r15], 0x5c

                     loc_5ffb:
0000000000005ffb         add        r15, 0x1                                    ; CODE XREF=sub_5ef0+260
0000000000005fff         add        rbp, 0x1
0000000000006003         jmp        loc_5e90
0000000000006008         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_6010:
0000000000006010         cmp        byte [rsp+arg_5], 0x0
0000000000006015         jne        loc_61e3

000000000000601b         xor        edx, edx
000000000000601d         test       byte [rsp+arg_70], 0x1
0000000000006022         je         loc_5f3b

0000000000006028         add        rbp, 0x1
000000000000602c         jmp        quotearg_buffer_restyled+232
                        ; endp
0000000000006031         nop        dword [rax]
0000000000006038         cmp        dword [rsp+8], 0x2
000000000000603d         sete       dl
0000000000006040         xor        eax, eax
0000000000006042         jmp        sub_5df0+56
0000000000006047         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6050:
0000000000006050         mov        edx, 0x7
0000000000006055         mov        ebx, 0x61
000000000000605a         jmp        sub_5ef0+68
                        ; endp
000000000000605f         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6060:
0000000000006060         cmp        dword [rsp+8], 0x2
0000000000006065         sete       dl
                        ; endp

                     loc_6068:
0000000000006068         test       rbp, rbp                                    ; CODE XREF=sub_5df0+38, sub_6280+35
000000000000606b         jne        loc_5e1c

0000000000006071         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_62b0+43
0000000000006076         and        al, dl
0000000000006078         je         sub_5df0+56

000000000000607e         mov        rbp, r11
0000000000006081         mov        dword [rsp+arg_0], 0x2
0000000000006089         jmp        sub_6340+1097
                        ; endp
000000000000608e         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_6090:
0000000000006090         cmp        dword [rsp+arg_0], 0x2
0000000000006095         sete       dl
0000000000006098         xor        r12d, r12d
000000000000609b         jmp        sub_6060+17
                        ; endp
000000000000609d         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_60a0:
00000000000060a0         cmp        dword [rsp+arg_0], 0x2
00000000000060a5         mov        ebx, 0x20
00000000000060aa         sete       dl
00000000000060ad         jmp        sub_6060+17
                        ; endp
00000000000060af         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_60b0:
00000000000060b0         mov        edx, 0xd
00000000000060b5         mov        ebx, 0x72
00000000000060ba         jmp        loc_5f22
00000000000060bf         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_60c0:
00000000000060c0         mov        edx, 0xc
00000000000060c5         mov        ebx, 0x66
00000000000060ca         jmp        sub_5ef0+68
                        ; endp
00000000000060cf         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_60d0:
00000000000060d0         mov        edx, 0xb
00000000000060d5         mov        ebx, 0x76
00000000000060da         jmp        sub_5ef0+68
                        ; endp
00000000000060df         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_60e0:
00000000000060e0         mov        edx, 0xa
00000000000060e5         mov        ebx, 0x6e
00000000000060ea         jmp        sub_5ef0+50
                        ; endp
00000000000060ef         align      16

                     loc_60f0:
00000000000060f0         xor        r10d, r10d                                  ; CODE XREF=sub_60e0+135
00000000000060f3         nop        dword [rax+rax]

                     loc_60f8:
00000000000060f8         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
00000000000060fe         jne        loc_64a8

0000000000006104         mov        qword [rsp+0xe8+var_B0], r11
0000000000006109         mov        byte [rsp+0xe8+var_B8], r8b
000000000000610e         mov        byte [rsp+0xe8+var_C0], r10b
0000000000006113         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000006118         mov        rcx, qword [rax]
000000000000611b         movzx      edx, bl
000000000000611e         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000006124         movzx      r8d, byte [rsp+0xe8+var_B8]
000000000000612a         mov        r11, qword [rsp+0xe8+var_B0]
000000000000612f         mov        edi, 0x1
0000000000006134         movzx      eax, word [rcx+rdx*2]
0000000000006138         and        ax, 0x4000
000000000000613c         setne      r12b
0000000000006140         sete       al
0000000000006143         and        al, byte [rsp+0xe8+var_DB]

                     loc_6147:
0000000000006147         test       al, al                                      ; CODE XREF=sub_6340+2221
0000000000006149         jne        loc_6ae1

000000000000614f         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000006154         sete       dl
0000000000006157         jmp        loc_5e28
000000000000615c         align      32

                     loc_6160:
0000000000006160         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
0000000000006164         cmp        bl, 0x7e
0000000000006167         ja         loc_60f0

0000000000006169         lea        rcx, qword [switch_table_db80+552]          ; 0xdda8
0000000000006170         movzx      edx, bl
0000000000006173         movsxd     rax, dword [rcx+rdx*4]
0000000000006177         add        rax, rcx
000000000000617a         jmp        rax
                        ; endp
000000000000617c         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_6180:
0000000000006180         xor        r10d, r10d
0000000000006183         cmp        byte [rsp+arg_5], 0x0
0000000000006188         jne        loc_5f7e

000000000000618e         nop

                     loc_6190:
0000000000006190         mov        edx, 0x5c                                   ; CODE XREF=sub_5ef0+136, sub_5ef0+147
0000000000006195         mov        ebx, 0x5c
000000000000619a         jmp        sub_5ef0+68
                        ; endp
000000000000619f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_61a0:
00000000000061a0         mov        edx, 0xc
00000000000061a5         xor        r10d, r10d
00000000000061a8         mov        ebx, 0x66
00000000000061ad         jmp        sub_5ef0+68
                        ; endp
00000000000061b2         nop        word [rax+rax]
00000000000061b8         mov        edx, 0xa
00000000000061bd         xor        r10d, r10d
00000000000061c0         mov        ebx, 0x6e
00000000000061c5         jmp        sub_5ef0+50
00000000000061ca         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_61d0:
00000000000061d0         mov        ebx, 0x61
00000000000061d5         jmp        sub_5ef0+176
                        ; endp
00000000000061da         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_61e0:
00000000000061e0         xor        r10d, r10d
                        ; endp

                     loc_61e3:
00000000000061e3         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_6010+5
00000000000061e8         sete       dl
00000000000061eb         cmp        byte [rsp+arg_7], 0x0
00000000000061f0         jne        loc_6d8a

00000000000061f6         mov        eax, r8d
00000000000061f9         mov        rcx, r15
00000000000061fc         xor        eax, 0x1
00000000000061ff         and        al, dl
0000000000006201         je         loc_6230

0000000000006203         cmp        r13, r15
0000000000006206         jbe        loc_620d

0000000000006208         mov        byte [r14+r15], 0x27

                     loc_620d:
000000000000620d         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_61e0+38
0000000000006211         cmp        r13, rcx
0000000000006214         jbe        loc_621c

0000000000006216         mov        byte [r14+r15+1], 0x24

                     loc_621c:
000000000000621c         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_61e0+52
0000000000006220         cmp        r13, rcx
0000000000006223         ja         loc_6859

                     loc_6229:
0000000000006229         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_6340+1311
000000000000622d         mov        r8d, eax

                     loc_6230:
0000000000006230         cmp        r13, rcx                                    ; CODE XREF=sub_61e0+33
0000000000006233         jbe        loc_623a

0000000000006235         mov        byte [r14+rcx], 0x5c

                     loc_623a:
000000000000623a         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_61e0+83
000000000000623f         lea        r15, qword [rcx+1]
0000000000006243         je         loc_6849

0000000000006249         lea        rax, qword [rbp+1]
000000000000624d         cmp        rax, r11
0000000000006250         jae        loc_626b

0000000000006252         mov        rax, qword [rsp+arg_8]
0000000000006257         movzx      eax, byte [rax+rbp+1]
000000000000625c         mov        byte [rsp+arg_20], al
0000000000006260         sub        eax, 0x30
0000000000006263         cmp        al, 0x9
0000000000006265         jbe        loc_6a99

                     loc_626b:
000000000000626b         mov        eax, r12d                                   ; CODE XREF=sub_61e0+112
000000000000626e         mov        ebx, 0x30
0000000000006273         xor        r12d, r12d
0000000000006276         jmp        sub_5df0+56
                        ; endp
000000000000627b         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_6280:
0000000000006280         cmp        dword [rsp+arg_0], 0x2
0000000000006285         mov        r12d, r10d
0000000000006288         sete       dl
000000000000628b         xor        r10d, r10d
000000000000628e         xor        eax, eax
0000000000006290         jmp        sub_5df0+56
                        ; endp
0000000000006295         nop        dword [rax]
0000000000006298         cmp        dword [rsp+8], 0x2
000000000000629d         sete       dl
00000000000062a0         xor        r10d, r10d
00000000000062a3         jmp        sub_6060+8
00000000000062a8         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_62b0:
00000000000062b0         cmp        dword [rsp+8], 0x2
00000000000062b5         sete       dl
00000000000062b8         xor        r10d, r10d
00000000000062bb         xor        r12d, r12d
00000000000062be         jmp        sub_6060+17
                        ; endp
00000000000062c3         nop        dword [rax+rax]
00000000000062c8         cmp        dword [rsp+8], 0x2
00000000000062cd         mov        r12d, r10d
00000000000062d0         mov        ebx, 0x20
00000000000062d5         sete       dl
00000000000062d8         xor        r10d, r10d
00000000000062db         jmp        sub_6060+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_62e0:
00000000000062e0         mov        edx, 0xd
00000000000062e5         xor        r10d, r10d
00000000000062e8         mov        ebx, 0x72
00000000000062ed         jmp        sub_5ef0+50
                        ; endp
00000000000062f2         nop        word [rax+rax]
00000000000062f8         mov        ebx, 0x76
00000000000062fd         jmp        sub_5ef0+176
0000000000006302         nop        word [rax+rax]
0000000000006308         mov        edx, 0x9
000000000000630d         xor        r10d, r10d
0000000000006310         mov        ebx, 0x74
0000000000006315         jmp        sub_5ef0+50
000000000000631a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6320:
0000000000006320         mov        ebx, 0x62
0000000000006325         jmp        sub_5ef0+176
                        ; endp
000000000000632a         nop        word [rax+rax]

                     loc_6330:
0000000000006330         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
0000000000006333         jmp        loc_5dd0
0000000000006338         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_6340:
0000000000006340         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_5ef0+125
0000000000006345         jne        sub_6340+2416
                        ; endp

                     loc_634b:
000000000000634b         add        rbp, 0x1                                    ; CODE XREF=sub_5ef0+159
000000000000634f         mov        eax, r8d
0000000000006352         xor        r12d, r12d
0000000000006355         mov        ebx, 0x5c
000000000000635a         jmp        sub_5df0+124
                        ; endp
000000000000635f         align      32

                     loc_6360:
0000000000006360         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
0000000000006365         movzx      ebx, byte [rsp+0xe8+var_D9]
000000000000636a         mov        r12d, r8d
000000000000636d         mov        rbp, r11
0000000000006370         sete       dl
0000000000006373         mov        eax, ebx
0000000000006375         test       r15, r15
0000000000006378         sete       cl
000000000000637b         and        eax, edx
000000000000637d         and        al, cl
000000000000637f         jne        loc_6de6

0000000000006385         mov        eax, ebx
0000000000006387         xor        eax, 0x1
000000000000638a         and        dl, al
000000000000638c         je         loc_6cfc

0000000000006392         cmp        byte [rsp+0xe8+var_6C], 0x0
0000000000006397         je         loc_6cfa

000000000000639d         cmp        byte [rsp+0xe8+var_DA], 0x0
00000000000063a2         jne        loc_6d9d

00000000000063a8         test       r13, r13
00000000000063ab         sete       al
00000000000063ae         cmp        qword [rsp+0xe8+var_98], 0x0
00000000000063b4         setne      dl
00000000000063b7         and        al, dl
00000000000063b9         je         loc_6ddc

00000000000063bf         mov        r13, qword [rsp+0xe8+var_98]

                     loc_63c4:
00000000000063c4         lea        rbx, qword [aLibs+29]                       ; 0xdb25, CODE XREF=sub_6340+2781
00000000000063cb         mov        byte [r14], 0x27
00000000000063cf         mov        dword [rsp+0xe8+var_E0], 0x2
00000000000063d7         mov        r15d, 0x1
00000000000063dd         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000063e6         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000063eb         mov        qword [rsp+0xe8+var_A0], rbx
00000000000063f0         mov        byte [rsp+0xe8+var_6C], al
00000000000063f4         jmp        loc_5cd3
00000000000063f9         align      1024

                     loc_6400:
0000000000006400         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_5ef0+8
0000000000006405         jne        sub_6340+2416

000000000000640b         test       r13, r13
000000000000640e         je         loc_6810

0000000000006414         xor        edx, edx
0000000000006416         cmp        qword [rsp+arg_48], 0x0
000000000000641c         jne        loc_6810

                     loc_6422:
0000000000006422         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_6340+1284, sub_6340+2794
0000000000006427         add        r15, 0x3
000000000000642b         xor        eax, eax
000000000000642d         mov        byte [rsp+arg_74], r12b
0000000000006432         xor        r8d, r8d
0000000000006435         mov        r13, rdx
0000000000006438         mov        ebx, 0x27
000000000000643d         jmp        sub_5df0+105
                        ; endp
0000000000006442         align      8

                     loc_6448:
0000000000006448         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_5ec0+19
000000000000644d         je         loc_6470

000000000000644f         lea        rcx, qword [rbp+2]
0000000000006453         cmp        rcx, r11
0000000000006456         jae        loc_6470

0000000000006458         mov        rax, qword [rsp+arg_8]
000000000000645d         cmp        byte [rax+rbp+1], 0x3f
0000000000006462         je         loc_6bf2

0000000000006468         nop        dword [rax+rax]

                     loc_6470:
0000000000006470         xor        edx, edx                                    ; CODE XREF=sub_6340+269, sub_6340+278, sub_6340+2233, sub_6340+2253
0000000000006472         xor        r12d, r12d
0000000000006475         xor        eax, eax
0000000000006477         mov        ebx, 0x3f
000000000000647c         jmp        sub_5df0+56
                        ; endp
0000000000006481         align      8

                     loc_6488:
0000000000006488         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_5ec0+10
000000000000648d         jne        loc_6cb0

0000000000006493         xor        r12d, r12d
0000000000006496         xor        eax, eax
0000000000006498         mov        ebx, 0x3f
000000000000649d         jmp        sub_5df0+105
                        ; endp
00000000000064a2         align      8

                     loc_64a8:
00000000000064a8         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_60e0+30
00000000000064b0         cmp        r11, 0xffffffffffffffff
00000000000064b4         mov        qword [rsp+0xe8+var_48], 0x0
00000000000064c0         mov        qword [rsp+0xe8+var_C0], rax
00000000000064c5         jne        loc_64f4

00000000000064c7         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
00000000000064cc         mov        byte [rsp+0xe8+var_A8], r8b
00000000000064d1         mov        byte [rsp+0xe8+var_B0], r10b
00000000000064d6         mov        qword [rsp+0xe8+var_B8], r9
00000000000064db         call       j_strlen                                    ; strlen
00000000000064e0         movzx      r8d, byte [rsp+0xe8+var_A8]
00000000000064e6         movzx      r10d, byte [rsp+0xe8+var_B0]
00000000000064ec         mov        r11, rax
00000000000064ef         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_64f4:
00000000000064f4         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_6340+389
00000000000064fc         xor        ecx, ecx
00000000000064fe         mov        byte [rsp+0xe8+var_6A], bl
0000000000006502         mov        byte [rsp+0xe8+var_6B], r8b
0000000000006507         mov        rbx, rcx
000000000000650a         mov        qword [rsp+0xe8+var_60], r9
0000000000006512         mov        qword [rsp+0xe8+var_B0], rax
0000000000006517         mov        byte [rsp+0xe8+var_69], r10b
000000000000651c         mov        qword [rsp+0xe8+var_68], r15
0000000000006524         mov        qword [rsp+0xe8+var_A8], r14
0000000000006529         mov        qword [rsp+0xe8+var_78], r13
000000000000652e         mov        qword [rsp+0xe8+var_B8], r11

                     loc_6533:
0000000000006533         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_6340+623
0000000000006538         lea        r14, qword [rbp+rbx]
000000000000653d         mov        rdx, qword [rsp+0xe8+var_B8]
0000000000006542         mov        rcx, qword [rsp+0xe8+var_C0]
0000000000006547         mov        rdi, qword [rsp+0xe8+var_B0]
000000000000654c         lea        r13, qword [rax+r14]
0000000000006550         sub        rdx, r14
0000000000006553         mov        rsi, r13
0000000000006556         call       rpl_mbrtowc                                 ; rpl_mbrtowc
000000000000655b         test       rax, rax
000000000000655e         mov        r15, rax
0000000000006561         je         loc_65b1

0000000000006563         cmp        rax, 0xffffffffffffffff
0000000000006567         je         loc_6b85

000000000000656d         cmp        rax, 0xfffffffffffffffe
0000000000006571         je         loc_6b11

0000000000006577         cmp        dword [rsp+0xe8+var_E0], 0x2
000000000000657c         sete       al
000000000000657f         and        al, byte [rsp+0xe8+var_D9]
0000000000006583         jne        loc_6720

                     loc_6589:
0000000000006589         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_6340+996, sub_6340+1031
0000000000006590         call       j_iswprint                                  ; iswprint
0000000000006595         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
000000000000659a         test       eax, eax
000000000000659c         mov        eax, 0x0
00000000000065a1         cmove      r12d, eax
00000000000065a5         add        rbx, r15
00000000000065a8         call       j_mbsinit                                   ; mbsinit
00000000000065ad         test       eax, eax
00000000000065af         je         loc_6533

                     loc_65b1:
00000000000065b1         mov        edx, r12d                                   ; CODE XREF=sub_6340+545
00000000000065b4         mov        rdi, rbx
00000000000065b7         movzx      r8d, byte [rsp+0xe8+var_6B]
00000000000065bd         xor        edx, 0x1
00000000000065c0         movzx      ebx, byte [rsp+0xe8+var_6A]
00000000000065c5         movzx      r10d, byte [rsp+0xe8+var_69]
00000000000065cb         and        dl, byte [rsp+0xe8+var_DB]
00000000000065cf         mov        r15, qword [rsp+0xe8+var_68]
00000000000065d7         mov        r14, qword [rsp+0xe8+var_A8]
00000000000065dc         mov        r13, qword [rsp+0xe8+var_78]
00000000000065e1         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_65e6:
00000000000065e6         cmp        rdi, 0x1                                    ; CODE XREF=sub_6340+2112, sub_6340+2168
00000000000065ea         jbe        loc_6beb

                     loc_65f0:
00000000000065f0         mov        rcx, rdi                                    ; CODE XREF=sub_6340+1961
00000000000065f3         xor        esi, esi
00000000000065f5         movzx      r9d, byte [rsp+0xe8+var_D9]
00000000000065fb         add        rcx, rbp
00000000000065fe         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000006603         jmp        loc_66be
0000000000006608         align      16

                     loc_6610:
0000000000006610         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_6340+896
0000000000006615         sete       al
0000000000006618         test       r9b, r9b
000000000000661b         jne        loc_6ad0

0000000000006621         mov        esi, r8d
0000000000006624         xor        esi, 0x1
0000000000006627         and        al, sil
000000000000662a         je         loc_665b

000000000000662c         cmp        r13, r15
000000000000662f         jbe        loc_6636

0000000000006631         mov        byte [r14+r15], 0x27

                     loc_6636:
0000000000006636         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_6340+751
000000000000663a         cmp        r13, rsi
000000000000663d         jbe        loc_6645

000000000000663f         mov        byte [r14+r15+1], 0x24

                     loc_6645:
0000000000006645         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_6340+765
0000000000006649         cmp        r13, rsi
000000000000664c         jbe        loc_6654

000000000000664e         mov        byte [r14+r15+2], 0x27

                     loc_6654:
0000000000006654         add        r15, 0x3                                    ; CODE XREF=sub_6340+780
0000000000006658         mov        r8d, eax

                     loc_665b:
000000000000665b         cmp        r13, r15                                    ; CODE XREF=sub_6340+746
000000000000665e         jbe        loc_6665

0000000000006660         mov        byte [r14+r15], 0x5c

                     loc_6665:
0000000000006665         lea        rax, qword [r15+1]                          ; CODE XREF=sub_6340+798
0000000000006669         cmp        r13, rax
000000000000666c         jbe        loc_667b

000000000000666e         mov        eax, ebx
0000000000006670         shr        al, 0x6
0000000000006673         add        eax, 0x30
0000000000006676         mov        byte [r14+r15+1], al

                     loc_667b:
000000000000667b         lea        rax, qword [r15+2]                          ; CODE XREF=sub_6340+812
000000000000667f         cmp        r13, rax
0000000000006682         jbe        loc_6694

0000000000006684         mov        eax, ebx
0000000000006686         shr        al, 0x3
0000000000006689         and        eax, 0x7
000000000000668c         add        eax, 0x30
000000000000668f         mov        byte [r14+r15+2], al

                     loc_6694:
0000000000006694         and        ebx, 0x7                                    ; CODE XREF=sub_6340+834
0000000000006697         add        rbp, 0x1
000000000000669b         add        r15, 0x3
000000000000669f         add        ebx, 0x30
00000000000066a2         cmp        rbp, rcx
00000000000066a5         jae        loc_5e90

00000000000066ab         mov        esi, edx

                     loc_66ad:
00000000000066ad         cmp        r13, r15                                    ; CODE XREF=sub_6340+985, sub_6340+1969
00000000000066b0         jbe        loc_66b6

00000000000066b2         mov        byte [r14+r15], bl

                     loc_66b6:
00000000000066b6         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_6340+880
00000000000066ba         add        r15, 0x1

                     loc_66be:
00000000000066be         test       dl, dl                                      ; CODE XREF=sub_6340+707
00000000000066c0         jne        loc_6610

00000000000066c6         mov        eax, esi
00000000000066c8         xor        eax, 0x1
00000000000066cb         and        eax, r8d
00000000000066ce         test       r10b, r10b
00000000000066d1         je         loc_66e1

00000000000066d3         cmp        r13, r15
00000000000066d6         jbe        loc_66dd

00000000000066d8         mov        byte [r14+r15], 0x5c

                     loc_66dd:
00000000000066dd         add        r15, 0x1                                    ; CODE XREF=sub_6340+918

                     loc_66e1:
00000000000066e1         add        rbp, 0x1                                    ; CODE XREF=sub_6340+913
00000000000066e5         cmp        rbp, rcx
00000000000066e8         jae        loc_5e6c

00000000000066ee         test       al, al
00000000000066f0         je         loc_6aee

00000000000066f6         cmp        r13, r15
00000000000066f9         jbe        loc_6700

00000000000066fb         mov        byte [r14+r15], 0x27

                     loc_6700:
0000000000006700         lea        rax, qword [r15+1]                          ; CODE XREF=sub_6340+953
0000000000006704         cmp        r13, rax
0000000000006707         jbe        loc_670f

0000000000006709         mov        byte [r14+r15+1], 0x27

                     loc_670f:
000000000000670f         add        r15, 0x2                                    ; CODE XREF=sub_6340+967
0000000000006713         xor        r10d, r10d
0000000000006716         xor        r8d, r8d
0000000000006719         jmp        loc_66ad
000000000000671b         align      32

                     loc_6720:
0000000000006720         cmp        r15, 0x1                                    ; CODE XREF=sub_6340+579
0000000000006724         je         loc_6589

000000000000672a         mov        rdi, qword [rsp+0xe8+var_D8]
000000000000672f         lea        rcx, qword [rdi+r15]
0000000000006733         lea        rdx, qword [rdi+r14+1]
0000000000006738         lea        r8, qword [rcx+r14]
000000000000673c         jmp        loc_674d
000000000000673e         align      64

                     loc_6740:
0000000000006740         add        rdx, 0x1                                    ; CODE XREF=sub_6340+1046, sub_6340+1072
0000000000006744         cmp        r8, rdx
0000000000006747         je         loc_6589

                     loc_674d:
000000000000674d         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_6340+1020
0000000000006750         sub        ecx, 0x5b
0000000000006753         cmp        cl, 0x21
0000000000006756         ja         loc_6740

0000000000006758         mov        esi, 0x1
000000000000675d         shl        rsi, cl
0000000000006760         mov        rcx, rsi
0000000000006763         movabs     rsi, 0x20000002b
000000000000676d         test       rcx, rsi
0000000000006770         je         loc_6740

0000000000006772         mov        r14, qword [rsp+0xe8+var_A8]
0000000000006777         mov        r13, qword [rsp+0xe8+var_78]
000000000000677c         mov        rbp, qword [rsp+0xe8+var_B8]
0000000000006781         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_6789:
0000000000006789         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_6340+1227, sub_6340+1948, sub_6340+2585, sub_6340+2734
000000000000678e         je         loc_67a0

0000000000006790         test       al, al
0000000000006792         mov        eax, 0x4
0000000000006797         cmove      eax, dword [rsp+0xe8+var_E0]
000000000000679c         mov        dword [rsp+0xe8+var_E0], eax

                     loc_67a0:
00000000000067a0         sub        rsp, 0x8                                    ; CODE XREF=sub_6340+1102
00000000000067a4         mov        rcx, rbp
00000000000067a7         mov        rsi, r13
00000000000067aa         push       qword [rsp+0xf0+var_88]
00000000000067ae         push       qword [rsp+0xf8+var_80]
00000000000067b2         mov        rdi, r14
00000000000067b5         push       0x0
00000000000067b7         mov        r9d, dword [rsp+0x108+var_70]
00000000000067bf         mov        r8d, dword [rsp+0x108+var_E0]
00000000000067c4         mov        rdx, qword [rsp+0x108+var_D8]
00000000000067c9         and        r9d, 0xfffffffd
00000000000067cd         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000067d2         add        rsp, 0x20
00000000000067d6         mov        r15, rax

                     loc_67d9:
00000000000067d9         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_6340+2549, sub_6340+2560, sub_6340+2711
00000000000067e1         xor        rbx, qword [fs:0x28]
00000000000067ea         mov        rax, r15
00000000000067ed         jne        loc_6df3

00000000000067f3         add        rsp, 0xb8
00000000000067fa         pop        rbx
00000000000067fb         pop        rbp
00000000000067fc         pop        r12
00000000000067fe         pop        r13
0000000000006800         pop        r14
0000000000006802         pop        r15
0000000000006804         ret
                        ; endp
0000000000006805         align      8

                     loc_6808:
0000000000006808         mov        rbp, r11                                    ; CODE XREF=sub_5ef0+194
000000000000680b         jmp        loc_6789

                     loc_6810:
0000000000006810         cmp        r13, r15                                    ; CODE XREF=sub_6340+206, sub_6340+220
0000000000006813         jbe        loc_681a

0000000000006815         mov        byte [r14+r15], 0x27

                     loc_681a:
000000000000681a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_6340+1235
000000000000681e         cmp        r13, rax
0000000000006821         jbe        loc_6829

0000000000006823         mov        byte [r14+r15+1], 0x5c

                     loc_6829:
0000000000006829         lea        rax, qword [r15+2]                          ; CODE XREF=sub_6340+1249
000000000000682d         cmp        r13, rax
0000000000006830         jbe        loc_6e22

0000000000006836         mov        rdx, r13
0000000000006839         mov        byte [r14+r15+2], 0x27
000000000000683f         mov        r13, qword [rsp+arg_48]
0000000000006844         jmp        loc_6422

                     loc_6849:
0000000000006849         mov        eax, r12d                                   ; CODE XREF=sub_61e0+99
000000000000684c         mov        ebx, 0x30
0000000000006851         xor        r12d, r12d
0000000000006854         jmp        sub_5df0+105
                        ; endp

                     loc_6859:
0000000000006859         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_61e0+67
000000000000685f         jmp        loc_6229

                     loc_6864:
0000000000006864         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
0000000000006866         jne        loc_5c93

000000000000686c         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_6871:
0000000000006871         test       r13, r13                                    ; CODE XREF=sub_6340+2749
0000000000006874         jne        loc_6e0a

000000000000687a         lea        rax, qword [aLibs+29]                       ; 0xdb25
0000000000006881         mov        qword [rsp+0xe8+var_98], 0x0
000000000000688a         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000688f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000006894         xor        r12d, r12d
0000000000006897         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000689c         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000068a5         mov        qword [rsp+0xe8+var_A0], rax
00000000000068aa         mov        r15d, 0x1
00000000000068b0         mov        dword [rsp+0xe8+var_E0], 0x2
00000000000068b8         jmp        loc_5cd3
00000000000068bd         align      64

                     loc_68c0:
00000000000068c0         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
00000000000068c2         jne        loc_6cbd

00000000000068c8         test       r13, r13
00000000000068cb         je         loc_6af6

00000000000068d1         mov        byte [r14], 0x22
00000000000068d5         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000068da         xor        r12d, r12d
00000000000068dd         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000068e2         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_68eb:
00000000000068eb         lea        rax, qword [aLibs+27]                       ; 0xdb23, CODE XREF=sub_6340+1996
00000000000068f2         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000068f7         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000068fc         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000006905         mov        r15d, 0x1
000000000000690b         mov        qword [rsp+0xe8+var_A0], rax
0000000000006910         jmp        loc_5cd3

                     loc_6915:
0000000000006915         lea        rax, qword [aLibs+27]                       ; case 6, 0xdb23, CODE XREF=quotearg_buffer_restyled+145
000000000000691c         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000006921         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000006926         xor        r12d, r12d
0000000000006929         mov        qword [rsp+0xe8+var_98], 0x0
0000000000006932         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000006937         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000693c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000006945         xor        r15d, r15d
0000000000006948         mov        qword [rsp+0xe8+var_A0], rax
000000000000694d         mov        dword [rsp+0xe8+var_E0], 0x5
0000000000006955         jmp        loc_5cd3

                     loc_695a:
000000000000695a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
000000000000695f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000006964         xor        r12d, r12d
0000000000006967         mov        qword [rsp+0xe8+var_98], 0x0
0000000000006970         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000006975         xor        r15d, r15d
0000000000006978         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000697d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000006986         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000698f         jmp        loc_5cd3

                     loc_6994:
0000000000006994         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
0000000000006999         je         loc_69f1

000000000000699b         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0xdb27
00000000000069a2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000069a4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000069a9         call       j_dcgettext                                 ; dcgettext
00000000000069ae         mov        rcx, rax
00000000000069b1         mov        qword [rsp+0xe8+var_80], rax
00000000000069b6         lea        rax, qword [aLibs+31]                       ; 0xdb27
00000000000069bd         cmp        rcx, rax
00000000000069c0         je         loc_6d5e

                     loc_69c6:
00000000000069c6         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0xdb25, CODE XREF=sub_6340+2607
00000000000069cd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000069cf         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000069d4         call       j_dcgettext                                 ; dcgettext
00000000000069d9         mov        rcx, rax
00000000000069dc         mov        qword [rsp+0xe8+var_88], rax
00000000000069e1         lea        rax, qword [aLibs+29]                       ; 0xdb25
00000000000069e8         cmp        rcx, rax
00000000000069eb         je         loc_6d74

                     loc_69f1:
00000000000069f1         xor        r15d, r15d                                  ; CODE XREF=sub_6340+1625, sub_6340+2629
00000000000069f4         test       ebx, ebx
00000000000069f6         je         loc_6bbd

                     loc_69fc:
00000000000069fc         test       ebx, ebx                                    ; CODE XREF=sub_6340+2183, sub_6340+2214
00000000000069fe         mov        rbx, qword [rsp+0xe8+var_88]
0000000000006a03         setne      byte [rsp+0xe8+var_D9]
0000000000006a08         xor        r12d, r12d
0000000000006a0b         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
0000000000006a0e         call       j_strlen                                    ; strlen
0000000000006a13         mov        qword [rsp+0xe8+var_A0], rbx
0000000000006a18         mov        qword [rsp+0xe8+var_D0], rax
0000000000006a1d         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000006a22         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000006a27         mov        qword [rsp+0xe8+var_98], 0x0
0000000000006a30         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000006a35         jmp        loc_5cd3

                     loc_6a3a:
0000000000006a3a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
0000000000006a3f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000006a44         xor        r12d, r12d
0000000000006a47         mov        qword [rsp+0xe8+var_98], 0x0
0000000000006a50         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000006a55         xor        r15d, r15d
0000000000006a58         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000006a5d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000006a66         mov        qword [rsp+0xe8+var_A0], 0x0
0000000000006a6f         jmp        loc_5cd3

                     loc_6a74:
0000000000006a74         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000006a79         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000006a7e         xor        r12d, r12d
0000000000006a81         mov        qword [rsp+0xe8+var_98], 0x0
0000000000006a8a         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000006a8f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000006a94         jmp        loc_5cb3

                     loc_6a99:
0000000000006a99         cmp        r13, r15                                    ; CODE XREF=sub_61e0+133
0000000000006a9c         jbe        loc_6aa3

0000000000006a9e         mov        byte [r14+r15], 0x30

                     loc_6aa3:
0000000000006aa3         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_6340+1884
0000000000006aa7         cmp        r13, rax
0000000000006aaa         jbe        loc_6ab2

0000000000006aac         mov        byte [r14+rcx+2], 0x30

                     loc_6ab2:
0000000000006ab2         mov        eax, r12d                                   ; CODE XREF=sub_6340+1898
0000000000006ab5         lea        r15, qword [rcx+3]
0000000000006ab9         xor        r12d, r12d
0000000000006abc         mov        ebx, 0x30
0000000000006ac1         jmp        sub_5df0+56
                        ; endp
0000000000006ac6         align      16

                     loc_6ad0:
0000000000006ad0         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_6340+731
0000000000006ad5         mov        rbp, r11
0000000000006ad8         mov        byte [rsp+0xe8+var_DB], bl
0000000000006adc         jmp        loc_6789

                     loc_6ae1:
0000000000006ae1         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_60e0+105
0000000000006ae6         xor        r12d, r12d
0000000000006ae9         jmp        loc_65f0

                     loc_6aee:
0000000000006aee         xor        r10d, r10d                                  ; CODE XREF=sub_6340+944
0000000000006af1         jmp        loc_66ad

                     loc_6af6:
0000000000006af6         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_6340+1419
0000000000006aff         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000006b04         xor        r12d, r12d
0000000000006b07         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000006b0c         jmp        loc_68eb

                     loc_6b11:
0000000000006b11         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_6340+561
0000000000006b16         mov        rsi, r14
0000000000006b19         mov        rcx, r13
0000000000006b1c         mov        rax, rbx
0000000000006b1f         mov        rdi, rbx
0000000000006b22         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000006b28         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000006b2d         mov        r9, qword [rsp+0xe8+var_60]
0000000000006b35         cmp        rsi, r11
0000000000006b38         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000006b3e         mov        r15, qword [rsp+0xe8+var_68]
0000000000006b46         mov        r14, qword [rsp+0xe8+var_A8]
0000000000006b4b         mov        r13, qword [rsp+0xe8+var_78]
0000000000006b50         jae        loc_6b78

0000000000006b52         cmp        byte [rcx], 0x0
0000000000006b55         jne        loc_6b67

0000000000006b57         jmp        loc_6b78
0000000000006b59         align      32

                     loc_6b60:
0000000000006b60         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_6340+2099
0000000000006b65         je         loc_6b75

                     loc_6b67:
0000000000006b67         add        rax, 0x1                                    ; CODE XREF=sub_6340+2069
0000000000006b6b         lea        rdx, qword [rbp+rax]
0000000000006b70         cmp        r11, rdx
0000000000006b73         ja         loc_6b60

                     loc_6b75:
0000000000006b75         mov        rdi, rax                                    ; CODE XREF=sub_6340+2085

                     loc_6b78:
0000000000006b78         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_6340+2064, sub_6340+2071
0000000000006b7d         xor        r12d, r12d
0000000000006b80         jmp        loc_65e6

                     loc_6b85:
0000000000006b85         mov        rdi, rbx                                    ; CODE XREF=sub_6340+551
0000000000006b88         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000006b8e         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000006b93         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000006b99         mov        r15, qword [rsp+0xe8+var_68]
0000000000006ba1         xor        r12d, r12d
0000000000006ba4         mov        r14, qword [rsp+0xe8+var_A8]
0000000000006ba9         mov        r13, qword [rsp+0xe8+var_78]
0000000000006bae         mov        r11, qword [rsp+0xe8+var_B8]
0000000000006bb3         movzx      edx, byte [rsp+0xe8+var_DB]
0000000000006bb8         jmp        loc_65e6

                     loc_6bbd:
0000000000006bbd         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_6340+1718
0000000000006bc2         movzx      eax, byte [rdx]
0000000000006bc5         test       al, al
0000000000006bc7         je         loc_69fc

0000000000006bcd         nop        dword [rax]

                     loc_6bd0:
0000000000006bd0         cmp        r13, r15                                    ; CODE XREF=sub_6340+2212
0000000000006bd3         jbe        loc_6bd9

0000000000006bd5         mov        byte [r14+r15], al

                     loc_6bd9:
0000000000006bd9         add        r15, 0x1                                    ; CODE XREF=sub_6340+2195
0000000000006bdd         movzx      eax, byte [rdx+r15]
0000000000006be2         test       al, al
0000000000006be4         jne        loc_6bd0

0000000000006be6         jmp        loc_69fc

                     loc_6beb:
0000000000006beb         mov        eax, edx                                    ; CODE XREF=sub_6340+682
0000000000006bed         jmp        loc_6147

                     loc_6bf2:
0000000000006bf2         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_6340+290
0000000000006bf6         cmp        bl, 0x3e
0000000000006bf9         ja         loc_6470

0000000000006bff         movabs     rax, 0x7000a38200000000
0000000000006c09         bt         rax, rbx
0000000000006c0d         jae        loc_6470

0000000000006c13         cmp        byte [rsp+arg_7], 0x0
0000000000006c18         jne        loc_6e02

0000000000006c1e         cmp        r13, r15
0000000000006c21         jbe        loc_6c28

0000000000006c23         mov        byte [r14+r15], 0x3f

                     loc_6c28:
0000000000006c28         lea        rax, qword [r15+1]                          ; CODE XREF=sub_6340+2273
0000000000006c2c         cmp        r13, rax
0000000000006c2f         jbe        loc_6c37

0000000000006c31         mov        byte [r14+r15+1], 0x22

                     loc_6c37:
0000000000006c37         lea        rax, qword [r15+2]                          ; CODE XREF=sub_6340+2287
0000000000006c3b         cmp        r13, rax
0000000000006c3e         jbe        loc_6c46

0000000000006c40         mov        byte [r14+r15+2], 0x22

                     loc_6c46:
0000000000006c46         lea        rax, qword [r15+3]                          ; CODE XREF=sub_6340+2302
0000000000006c4a         cmp        r13, rax
0000000000006c4d         jbe        loc_6c55

0000000000006c4f         mov        byte [r14+r15+3], 0x3f

                     loc_6c55:
0000000000006c55         add        r15, 0x4                                    ; CODE XREF=sub_6340+2317
0000000000006c59         xor        edx, edx
0000000000006c5b         xor        r12d, r12d
0000000000006c5e         xor        eax, eax
0000000000006c60         mov        rbp, rcx
0000000000006c63         jmp        sub_5df0+56
                        ; endp

                     loc_6c68:
0000000000006c68         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
0000000000006c6a         je         loc_6df8

0000000000006c70         lea        rax, qword [aLibs+29]                       ; 0xdb25
0000000000006c77         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000006c7c         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000006c81         xor        r12d, r12d
0000000000006c84         mov        qword [rsp+0xe8+var_98], 0x0
0000000000006c8d         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000006c92         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000006c97         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000006ca0         xor        r15d, r15d
0000000000006ca3         mov        qword [rsp+0xe8+var_A0], rax
0000000000006ca8         jmp        loc_5cd3
0000000000006cad         align      16

                     loc_6cb0:
0000000000006cb0         mov        rbp, r11                                    ; CODE XREF=sub_6340+333
0000000000006cb3         movzx      eax, byte [rsp+arg_7]
0000000000006cb8         jmp        sub_6340+1097
                        ; endp

                     loc_6cbd:
0000000000006cbd         lea        rax, qword [aLibs+27]                       ; 0xdb23, CODE XREF=sub_6340+1410
0000000000006cc4         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000006cc9         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000006cce         xor        r12d, r12d
0000000000006cd1         mov        qword [rsp+0xe8+var_98], 0x0
0000000000006cda         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000006cdf         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000006ce4         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000006ced         xor        r15d, r15d
0000000000006cf0         mov        qword [rsp+0xe8+var_A0], rax
0000000000006cf5         jmp        loc_5cd3

                     loc_6cfa:
0000000000006cfa         mov        eax, edx                                    ; CODE XREF=sub_6340+87

                     loc_6cfc:
0000000000006cfc         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_6340+76, sub_6340+2721
0000000000006d01         test       rbx, rbx
0000000000006d04         je         loc_6d32

0000000000006d06         test       al, al
0000000000006d08         je         loc_6d32

0000000000006d0a         movzx      ecx, byte [rbx]
0000000000006d0d         mov        rax, rbx
0000000000006d10         test       cl, cl
0000000000006d12         je         loc_6d32

0000000000006d14         mov        rdx, r15
0000000000006d17         sub        rax, r15

                     loc_6d1a:
0000000000006d1a         cmp        r13, rdx                                    ; CODE XREF=sub_6340+2541
0000000000006d1d         jbe        loc_6d23

0000000000006d1f         mov        byte [r14+rdx], cl

                     loc_6d23:
0000000000006d23         add        rdx, 0x1                                    ; CODE XREF=sub_6340+2525
0000000000006d27         movzx      ecx, byte [rax+rdx]
0000000000006d2b         test       cl, cl
0000000000006d2d         jne        loc_6d1a

0000000000006d2f         mov        r15, rdx

                     loc_6d32:
0000000000006d32         cmp        r13, r15                                    ; CODE XREF=sub_6340+2500, sub_6340+2504, sub_6340+2514
0000000000006d35         jbe        loc_67d9

0000000000006d3b         mov        byte [r14+r15], 0x0
0000000000006d40         jmp        loc_67d9

                     loc_6d45:
0000000000006d45         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
0000000000006d4a         movzx      ebx, byte [rsp+0xe8+var_D9]
0000000000006d4f         mov        rbp, r11
0000000000006d52         sete       al
0000000000006d55         mov        byte [rsp+0xe8+var_DB], bl
0000000000006d59         jmp        loc_6789

                     loc_6d5e:
0000000000006d5e         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_6340+1664
0000000000006d62         mov        rdi, rcx
0000000000006d65         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000006d6a         mov        qword [rsp+0xe8+var_80], rax
0000000000006d6f         jmp        loc_69c6

                     loc_6d74:
0000000000006d74         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_6340+1707
0000000000006d78         mov        rdi, rcx
0000000000006d7b         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000006d80         mov        qword [rsp+0xe8+var_88], rax
0000000000006d85         jmp        loc_69f1

                     loc_6d8a:
0000000000006d8a         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_61e0+16
0000000000006d8f         mov        rbp, r11
0000000000006d92         mov        eax, edx
0000000000006d94         mov        byte [rsp+arg_5], bl
0000000000006d98         jmp        sub_6340+1097
                        ; endp

                     loc_6d9d:
0000000000006d9d         sub        rsp, 0x8                                    ; CODE XREF=sub_6340+98
0000000000006da1         mov        r8d, 0x5
0000000000006da7         mov        rcx, r11
0000000000006daa         push       qword [rsp+0xf0+var_88]
0000000000006dae         push       qword [rsp+0xf8+var_80]
0000000000006db2         mov        rdi, r14
0000000000006db5         push       qword [rsp+0x100+var_C8]
0000000000006db9         mov        r9d, dword [rsp+0x108+var_70]
0000000000006dc1         mov        rdx, qword [rsp+0x108+var_D8]
0000000000006dc6         mov        rsi, qword [rsp+0x108+var_98]
0000000000006dcb         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000006dd0         add        rsp, 0x20
0000000000006dd4         mov        r15, rax
0000000000006dd7         jmp        loc_67d9

                     loc_6ddc:
0000000000006ddc         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_6340+121
0000000000006de1         jmp        loc_6cfc

                     loc_6de6:
0000000000006de6         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_6340+63
0000000000006dee         jmp        loc_6789

                     loc_6df3:
0000000000006df3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_6340+1197
                        ; endp

                     loc_6df8:
0000000000006df8         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_6340+2346
0000000000006dfd         jmp        loc_6871

                     loc_6e02:
0000000000006e02         mov        rbp, r11                                    ; CODE XREF=sub_6340+2264
0000000000006e05         jmp        sub_6340+1120
                        ; endp

                     loc_6e0a:
0000000000006e0a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_6340+1332
0000000000006e0f         xor        eax, eax
0000000000006e11         xor        r12d, r12d
0000000000006e14         mov        qword [rsp+0xe8+var_98], 0x0
0000000000006e1d         jmp        loc_63c4

                     loc_6e22:
0000000000006e22         mov        rdx, r13                                    ; CODE XREF=sub_6340+1264
0000000000006e25         mov        r13, qword [rsp+arg_48]
0000000000006e2a         jmp        loc_6422

                     loc_6e2f:
0000000000006e2f         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
0000000000006e34         align      64                                          ; End of unwind block (FDE at 0xee78)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
0000000000006e40         push       r15                                         ; Begin of unwind block (FDE at 0xeef0), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
0000000000006e42         push       r14
0000000000006e44         movsxd     r15, edi
0000000000006e47         push       r13
0000000000006e49         push       r12
0000000000006e4b         mov        r14, rdx
0000000000006e4e         push       rbp
0000000000006e4f         push       rbx
0000000000006e50         mov        rbp, rcx
0000000000006e53         sub        rsp, 0x28
0000000000006e57         mov        qword [rsp+0x58+var_50], rsi
0000000000006e5c         call       j___errno_location                          ; __errno_location
0000000000006e61         mov        r13, rax
0000000000006e64         mov        eax, dword [rax]
0000000000006e66         test       r15d, r15d
0000000000006e69         mov        rbx, qword [slotvec]                        ; slotvec
0000000000006e70         mov        dword [rsp+0x58+var_40], eax
0000000000006e74         js         loc_6fe1

0000000000006e7a         cmp        dword [nslots], r15d                        ; nslots
0000000000006e81         jg         loc_6ee5

0000000000006e83         cmp        r15d, 0x7fffffff
0000000000006e8a         je         loc_6fe6

0000000000006e90         lea        r12d, dword [r15+1]
0000000000006e94         lea        rax, qword [slotvec0]                       ; slotvec0
0000000000006e9b         movsxd     rsi, r12d
0000000000006e9e         shl        rsi, 0x4
0000000000006ea2         cmp        rbx, rax
0000000000006ea5         je         loc_6fc0

0000000000006eab         mov        rdi, rbx                                    ; argument #1 for method xrealloc
0000000000006eae         call       xrealloc                                    ; xrealloc
0000000000006eb3         mov        rbx, rax
0000000000006eb6         mov        qword [slotvec], rax                        ; slotvec

                     loc_6ebd:
0000000000006ebd         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
0000000000006ec4         mov        edx, r12d
0000000000006ec7         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000006ec9         sub        edx, edi
0000000000006ecb         shl        rdi, 0x4
0000000000006ecf         movsxd     rdx, edx
0000000000006ed2         add        rdi, rbx                                    ; argument "__s" for method j_memset
0000000000006ed5         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
0000000000006ed9         call       j_memset                                    ; memset
0000000000006ede         mov        dword [nslots], r12d                        ; nslots

                     loc_6ee5:
0000000000006ee5         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
0000000000006ee8         shl        r15, 0x4
0000000000006eec         sub        rsp, 0x8
0000000000006ef0         add        rbx, r15
0000000000006ef3         lea        r15, qword [rbp+8]
0000000000006ef7         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000006efb         mov        r11, qword [rbx]
0000000000006efe         mov        r12, qword [rbx+8]
0000000000006f02         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000006f05         or         eax, 0x1
0000000000006f08         mov        dword [rsp+0x60+var_3C], eax
0000000000006f0c         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000006f0f         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
0000000000006f12         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000006f15         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000006f17         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
0000000000006f1a         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000006f1f         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
0000000000006f22         mov        qword [rsp+0x78+var_48], r11
0000000000006f27         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000006f2c         add        rsp, 0x20
0000000000006f30         mov        r11, qword [rsp+0x58+var_48]
0000000000006f35         cmp        r11, rax
0000000000006f38         ja         loc_6fa1

0000000000006f3a         lea        rsi, qword [rax+1]
0000000000006f3e         lea        rax, qword [slot0]                          ; slot0
0000000000006f45         cmp        r12, rax
0000000000006f48         mov        qword [rbx], rsi
0000000000006f4b         je         loc_6f5f

0000000000006f4d         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000006f50         mov        qword [rsp+0x58+var_48], rsi
0000000000006f55         call       j_free                                      ; free
0000000000006f5a         mov        rsi, qword [rsp+0x58+var_48]

                     loc_6f5f:
0000000000006f5f         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
0000000000006f62         mov        qword [rsp+0x58+var_48], rsi
0000000000006f67         call       xmalloc                                     ; xmalloc
0000000000006f6c         sub        rsp, 0x8
0000000000006f70         mov        qword [rbx+8], rax
0000000000006f74         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000006f78         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000006f7b         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000006f7e         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000006f81         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000006f83         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
0000000000006f88         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
0000000000006f8b         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000006f90         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
0000000000006f95         mov        r12, rax
0000000000006f98         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000006f9d         add        rsp, 0x20

                     loc_6fa1:
0000000000006fa1         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
0000000000006fa5         mov        dword [r13], eax
0000000000006fa9         add        rsp, 0x28
0000000000006fad         mov        rax, r12
0000000000006fb0         pop        rbx
0000000000006fb1         pop        rbp
0000000000006fb2         pop        r12
0000000000006fb4         pop        r13
0000000000006fb6         pop        r14
0000000000006fb8         pop        r15
0000000000006fba         ret
                        ; endp
0000000000006fbb         align      64

                     loc_6fc0:
0000000000006fc0         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
0000000000006fc2         call       xrealloc                                    ; xrealloc
0000000000006fc7         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
0000000000006fcf         mov        rbx, rax
0000000000006fd2         mov        qword [slotvec], rax                        ; slotvec
0000000000006fd9         movups     xmmword [rax], xmm0
0000000000006fdc         jmp        loc_6ebd

                     loc_6fe1:
0000000000006fe1         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_6fe6:
0000000000006fe6         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6feb:
0000000000006feb         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0xeef0)
                     clone_quoting_options:
0000000000006ff0         push       r12                                         ; Begin of unwind block (FDE at 0xef5c)
0000000000006ff2         push       rbp
0000000000006ff3         push       rbx
0000000000006ff4         mov        rbx, rdi
0000000000006ff7         call       j___errno_location                          ; __errno_location
0000000000006ffc         mov        r12d, dword [rax]
0000000000006fff         mov        rbp, rax
0000000000007002         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000007009         test       rbx, rbx
000000000000700c         mov        esi, 0x38
0000000000007011         cmove      rbx, rax
0000000000007015         mov        rdi, rbx
0000000000007018         call       xmemdup                                     ; xmemdup
000000000000701d         mov        dword [rbp], r12d
0000000000007021         pop        rbx
0000000000007022         pop        rbp
0000000000007023         pop        r12
0000000000007025         ret
                        ; endp
0000000000007026         align      16                                          ; End of unwind block (FDE at 0xef5c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
0000000000007030         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xef88), default_quoting_options
0000000000007037         test       rdi, rdi
000000000000703a         cmove      rdi, rax
000000000000703e         mov        eax, dword [rdi]
0000000000007040         ret
                        ; endp
0000000000007041         align      16                                          ; End of unwind block (FDE at 0xef88)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
0000000000007050         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xef9c), default_quoting_options
0000000000007057         test       rdi, rdi
000000000000705a         cmove      rdi, rax
000000000000705e         mov        dword [rdi], esi
0000000000007060         ret
                        ; endp
0000000000007061         align      16                                          ; End of unwind block (FDE at 0xef9c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
0000000000007070         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xefb0), default_quoting_options
0000000000007077         test       rdi, rdi
000000000000707a         mov        ecx, esi
000000000000707c         cmove      rdi, rax
0000000000007080         mov        eax, esi
0000000000007082         and        ecx, 0x1f
0000000000007085         shr        al, 0x5
0000000000007088         movzx      eax, al
000000000000708b         lea        rdi, qword [rdi+rax*4+8]
0000000000007090         mov        esi, dword [rdi]
0000000000007092         mov        eax, esi
0000000000007094         shr        eax, cl
0000000000007096         xor        edx, eax
0000000000007098         and        eax, 0x1
000000000000709b         and        edx, 0x1
000000000000709e         shl        edx, cl
00000000000070a0         xor        edx, esi
00000000000070a2         mov        dword [rdi], edx
00000000000070a4         ret
                        ; endp
00000000000070a5         align      16                                          ; End of unwind block (FDE at 0xefb0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
00000000000070b0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xefc4), default_quoting_options
00000000000070b7         test       rdi, rdi
00000000000070ba         cmove      rdi, rax
00000000000070be         mov        eax, dword [rdi+4]
00000000000070c1         mov        dword [rdi+4], esi
00000000000070c4         ret
                        ; endp
00000000000070c5         align      16                                          ; End of unwind block (FDE at 0xefc4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
00000000000070d0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xefd8), default_quoting_options
00000000000070d7         test       rdi, rdi
00000000000070da         cmove      rdi, rax
00000000000070de         test       rsi, rsi
00000000000070e1         mov        dword [rdi], 0xa
00000000000070e7         je         loc_70f7

00000000000070e9         test       rdx, rdx
00000000000070ec         je         loc_70f7

00000000000070ee         mov        qword [rdi+0x28], rsi
00000000000070f2         mov        qword [rdi+0x30], rdx
00000000000070f6         ret
                        ; endp

                     loc_70f7:
00000000000070f7         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
00000000000070fb         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
0000000000007100         push       r15                                         ; End of unwind block (FDE at 0xefd8), Begin of unwind block (FDE at 0xefec)
0000000000007102         push       r14
0000000000007104         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000710b         push       r13
000000000000710d         push       r12
000000000000710f         mov        r13, rdi
0000000000007112         push       rbp
0000000000007113         push       rbx
0000000000007114         mov        rbx, r8
0000000000007117         mov        r14, rsi
000000000000711a         mov        r15, rdx
000000000000711d         sub        rsp, 0x18
0000000000007121         test       r8, r8
0000000000007124         cmove      rbx, rax
0000000000007128         mov        qword [rsp+0x48+var_40], rcx
000000000000712d         call       j___errno_location                          ; __errno_location
0000000000007132         mov        r12d, dword [rax]
0000000000007135         mov        rbp, rax
0000000000007138         lea        rax, qword [rbx+8]
000000000000713c         sub        rsp, 0x8
0000000000007140         mov        r9d, dword [rbx+4]
0000000000007144         push       qword [rbx+0x30]
0000000000007147         mov        r8d, dword [rbx]
000000000000714a         push       qword [rbx+0x28]
000000000000714d         mov        rdx, r15
0000000000007150         push       rax
0000000000007151         mov        rcx, qword [rsp+0x68+var_40]
0000000000007156         mov        rsi, r14
0000000000007159         mov        rdi, r13
000000000000715c         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000007161         mov        dword [rbp], r12d
0000000000007165         add        rsp, 0x38
0000000000007169         pop        rbx
000000000000716a         pop        rbp
000000000000716b         pop        r12
000000000000716d         pop        r13
000000000000716f         pop        r14
0000000000007171         pop        r15
0000000000007173         ret
                        ; endp
0000000000007174         align      128                                         ; End of unwind block (FDE at 0xefec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
0000000000007180         push       r15                                         ; Begin of unwind block (FDE at 0xf040), CODE XREF=quotearg_alloc+5
0000000000007182         push       r14
0000000000007184         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000718b         push       r13
000000000000718d         push       r12
000000000000718f         mov        r12, rdx
0000000000007192         push       rbp
0000000000007193         push       rbx
0000000000007194         mov        rbx, rcx
0000000000007197         mov        r14, rdi
000000000000719a         mov        r15, rsi
000000000000719d         sub        rsp, 0x38
00000000000071a1         test       rcx, rcx
00000000000071a4         cmove      rbx, rax
00000000000071a8         xor        ebp, ebp
00000000000071aa         call       j___errno_location                          ; __errno_location
00000000000071af         test       r12, r12
00000000000071b2         mov        r13, rax
00000000000071b5         mov        eax, dword [rax]
00000000000071b7         sete       bpl
00000000000071bb         or         ebp, dword [rbx+4]
00000000000071be         lea        r10, qword [rbx+8]
00000000000071c2         sub        rsp, 0x8
00000000000071c6         mov        r8d, dword [rbx]
00000000000071c9         mov        rcx, r15
00000000000071cc         mov        dword [rsp+0x70+var_5C], eax
00000000000071d0         push       qword [rbx+0x30]
00000000000071d3         mov        rdx, r14
00000000000071d6         push       qword [rbx+0x28]
00000000000071d9         push       r10
00000000000071db         xor        esi, esi
00000000000071dd         mov        r9d, ebp
00000000000071e0         xor        edi, edi
00000000000071e2         mov        qword [rsp+0x88+var_48], r10
00000000000071e7         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000071ec         lea        rsi, qword [rax+1]
00000000000071f0         mov        qword [rsp+0x88+var_40], rax
00000000000071f5         add        rsp, 0x20
00000000000071f9         mov        rdi, rsi
00000000000071fc         mov        qword [rsp+0x68+var_50], rsi
0000000000007201         call       xmalloc                                     ; xmalloc
0000000000007206         mov        qword [rsp+0x68+var_58], rax
000000000000720b         sub        rsp, 0x8
000000000000720f         push       qword [rbx+0x30]
0000000000007212         push       qword [rbx+0x28]
0000000000007215         mov        r10, qword [rsp+0x80+var_48]
000000000000721a         mov        r9d, ebp
000000000000721d         mov        r8d, dword [rbx]
0000000000007220         mov        rcx, r15
0000000000007223         mov        rdx, r14
0000000000007226         mov        rdi, rax
0000000000007229         push       r10
000000000000722b         mov        rsi, qword [rsp+0x88+var_50]
0000000000007230         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000007235         mov        eax, dword [rsp+0x88+var_5C]
0000000000007239         add        rsp, 0x20
000000000000723d         test       r12, r12
0000000000007240         mov        dword [r13], eax
0000000000007244         je         loc_724f

0000000000007246         mov        r11, qword [rsp+0x68+var_40]
000000000000724b         mov        qword [r12], r11

                     loc_724f:
000000000000724f         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
0000000000007254         add        rsp, 0x38
0000000000007258         pop        rbx
0000000000007259         pop        rbp
000000000000725a         pop        r12
000000000000725c         pop        r13
000000000000725e         pop        r14
0000000000007260         pop        r15
0000000000007262         ret
                        ; endp
0000000000007263         align      16                                          ; End of unwind block (FDE at 0xf040)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
0000000000007270         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0xf0ac)
0000000000007273         xor        edx, edx
0000000000007275         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
000000000000727a         align      128                                         ; End of unwind block (FDE at 0xf0ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
0000000000007280         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0xf0c0), nslots
0000000000007286         push       r12
0000000000007288         mov        r12, qword [slotvec]                        ; slotvec
000000000000728f         push       rbp
0000000000007290         push       rbx
0000000000007291         cmp        eax, 0x1
0000000000007294         jle        loc_72c1

0000000000007296         sub        eax, 0x2
0000000000007299         lea        rbx, qword [r12+0x18]
000000000000729e         shl        rax, 0x4
00000000000072a2         lea        rbp, qword [r12+rax+0x28]
00000000000072a7         nop        word [rax+rax]

                     loc_72b0:
00000000000072b0         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
00000000000072b3         add        rbx, 0x10
00000000000072b7         call       j_free                                      ; free
00000000000072bc         cmp        rbx, rbp
00000000000072bf         jne        loc_72b0

                     loc_72c1:
00000000000072c1         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
00000000000072c6         lea        rbx, qword [slot0]                          ; slot0
00000000000072cd         cmp        rdi, rbx
00000000000072d0         je         loc_72e9

00000000000072d2         call       j_free                                      ; free
00000000000072d7         mov        qword [slotvec0], 0x100                     ; slotvec0
00000000000072e2         mov        qword [slotvec0+8], rbx                     ; 0x211098

                     loc_72e9:
00000000000072e9         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
00000000000072f0         cmp        r12, rbx
00000000000072f3         je         loc_7304

00000000000072f5         mov        rdi, r12                                    ; argument "__ptr" for method j_free
00000000000072f8         call       j_free                                      ; free
00000000000072fd         mov        qword [slotvec], rbx                        ; slotvec

                     loc_7304:
0000000000007304         pop        rbx                                         ; CODE XREF=quotearg_free+115
0000000000007305         mov        dword [nslots], 0x1                         ; nslots
000000000000730f         pop        rbp
0000000000007310         pop        r12
0000000000007312         ret
                        ; endp
0000000000007313         align      32                                          ; End of unwind block (FDE at 0xf0c0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
0000000000007320         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xf0ec), default_quoting_options
0000000000007327         mov        rdx, 0xffffffffffffffff
000000000000732e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000007333         align      64                                          ; End of unwind block (FDE at 0xf0ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
0000000000007340         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xf100), default_quoting_options
0000000000007347         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000734c         align      16                                          ; End of unwind block (FDE at 0xf100)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
0000000000007350         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xf114), default_quoting_options
0000000000007357         mov        rsi, rdi
000000000000735a         mov        rdx, 0xffffffffffffffff
0000000000007361         xor        edi, edi
0000000000007363         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000007368         align      16                                          ; End of unwind block (FDE at 0xf114)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
0000000000007370         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0xf128), default_quoting_options
0000000000007377         mov        rdx, rsi
000000000000737a         mov        rsi, rdi
000000000000737d         xor        edi, edi
000000000000737f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000007384         align      16                                          ; End of unwind block (FDE at 0xf128)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
0000000000007390         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xf13c)
0000000000007394         mov        rax, rdx
0000000000007397         mov        rdx, qword [fs:0x28]
00000000000073a0         mov        qword [rsp+0x48+var_10], rdx
00000000000073a5         xor        edx, edx
00000000000073a7         cmp        esi, 0xa
00000000000073aa         je         loc_7414

00000000000073ac         mov        dword [rsp+0x48+var_48], esi
00000000000073af         mov        rcx, rsp
00000000000073b2         mov        rdx, 0xffffffffffffffff
00000000000073b9         mov        rsi, rax
00000000000073bc         mov        qword [rsp+0x48+var_44], 0x0
00000000000073c5         mov        qword [rsp+0x48+var_3C], 0x0
00000000000073ce         mov        qword [rsp+0x48+var_34], 0x0
00000000000073d7         mov        qword [rsp+0x48+var_2C], 0x0
00000000000073e0         mov        qword [rsp+0x48+var_24], 0x0
00000000000073e9         mov        qword [rsp+0x48+var_1C], 0x0
00000000000073f2         mov        dword [rsp+0x48+var_14], 0x0
00000000000073fa         call       quotearg_n_options                          ; quotearg_n_options
00000000000073ff         mov        rcx, qword [rsp+0x48+var_10]
0000000000007404         xor        rcx, qword [fs:0x28]
000000000000740d         jne        loc_7419

000000000000740f         add        rsp, 0x48
0000000000007413         ret
                        ; endp

                     loc_7414:
0000000000007414         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_7419:
0000000000007419         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
000000000000741e         align      32                                          ; End of unwind block (FDE at 0xf13c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
0000000000007420         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xf158), CODE XREF=quotearg_style_mem+10
0000000000007424         mov        rax, rdx
0000000000007427         mov        rdx, rcx
000000000000742a         mov        rcx, qword [fs:0x28]
0000000000007433         mov        qword [rsp+0x48+var_10], rcx
0000000000007438         xor        ecx, ecx
000000000000743a         cmp        esi, 0xa
000000000000743d         je         loc_74a0

000000000000743f         mov        dword [rsp+0x48+var_48], esi
0000000000007442         mov        rcx, rsp
0000000000007445         mov        rsi, rax
0000000000007448         mov        qword [rsp+0x48+var_44], 0x0
0000000000007451         mov        qword [rsp+0x48+var_3C], 0x0
000000000000745a         mov        qword [rsp+0x48+var_34], 0x0
0000000000007463         mov        qword [rsp+0x48+var_2C], 0x0
000000000000746c         mov        qword [rsp+0x48+var_24], 0x0
0000000000007475         mov        qword [rsp+0x48+var_1C], 0x0
000000000000747e         mov        dword [rsp+0x48+var_14], 0x0
0000000000007486         call       quotearg_n_options                          ; quotearg_n_options
000000000000748b         mov        rdx, qword [rsp+0x48+var_10]
0000000000007490         xor        rdx, qword [fs:0x28]
0000000000007499         jne        loc_74a5

000000000000749b         add        rsp, 0x48
000000000000749f         ret
                        ; endp

                     loc_74a0:
00000000000074a0         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_74a5:
00000000000074a5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
00000000000074aa         align      16                                          ; End of unwind block (FDE at 0xf158)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
00000000000074b0         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0xf174)
00000000000074b3         mov        esi, edi
00000000000074b5         xor        edi, edi
00000000000074b7         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
00000000000074bc         align      64                                          ; End of unwind block (FDE at 0xf174)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
00000000000074c0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0xf188)
00000000000074c3         mov        rdx, rsi
00000000000074c6         mov        esi, edi
00000000000074c8         xor        edi, edi
00000000000074ca         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
00000000000074cf         align      16                                          ; End of unwind block (FDE at 0xf188)

                     quotearg_char_mem:
00000000000074d0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xf19c), CODE XREF=quotearg_char+11
00000000000074d4         mov        ecx, edx
00000000000074d6         mov        rax, qword [fs:0x28]
00000000000074df         mov        qword [rsp+0x48+var_10], rax
00000000000074e4         xor        eax, eax
00000000000074e6         mov        rax, qword [qword_211350]                   ; qword_211350
00000000000074ed         mov        r8, rsp
00000000000074f0         and        ecx, 0x1f
00000000000074f3         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
00000000000074fb         mov        qword [rsp+0x48+var_18], rax
0000000000007500         mov        eax, edx
0000000000007502         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000007506         shr        al, 0x5
0000000000007509         movzx      eax, al
000000000000750c         lea        r9, qword [r8+rax*4+8]
0000000000007511         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x211330
0000000000007519         movaps     xmmword [rsp+0x48+var_38], xmm0
000000000000751e         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x211340
0000000000007526         movaps     xmmword [rsp+0x48+var_28], xmm0
000000000000752b         mov        edx, dword [r9]
000000000000752e         mov        eax, edx
0000000000007530         shr        eax, cl
0000000000007532         not        eax
0000000000007534         and        eax, 0x1
0000000000007537         shl        eax, cl
0000000000007539         mov        rcx, r8
000000000000753c         xor        eax, edx
000000000000753e         mov        rdx, rsi
0000000000007541         mov        rsi, rdi
0000000000007544         mov        dword [r9], eax
0000000000007547         xor        edi, edi
0000000000007549         call       quotearg_n_options                          ; quotearg_n_options
000000000000754e         mov        rsi, qword [rsp+0x48+var_10]
0000000000007553         xor        rsi, qword [fs:0x28]
000000000000755c         jne        loc_7563

000000000000755e         add        rsp, 0x48
0000000000007562         ret
                        ; endp

                     loc_7563:
0000000000007563         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
0000000000007568         align      16                                          ; End of unwind block (FDE at 0xf19c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
0000000000007570         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0xf1b8)
0000000000007574         mov        rsi, 0xffffffffffffffff
000000000000757b         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
0000000000007580         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0xf1b8), Begin of unwind block (FDE at 0xf1cc), CODE XREF=close_stdout+101
0000000000007585         mov        rsi, 0xffffffffffffffff
000000000000758c         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000007591         align      32                                          ; End of unwind block (FDE at 0xf1cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
00000000000075a0         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0xf1e0)
00000000000075a5         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
00000000000075aa         align      16                                          ; End of unwind block (FDE at 0xf1e0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
00000000000075b0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xf1f4), CODE XREF=main+894, main+1710, main+2673, main+2720, main+2834, main+2899, set_window_size+157, set_window_size+202, display_window_size+164, display_window_size+210
00000000000075b4         mov        rax, rdx
00000000000075b7         mov        rdx, qword [fs:0x28]
00000000000075c0         mov        qword [rsp+0x48+var_10], rdx
00000000000075c5         xor        edx, edx
00000000000075c7         cmp        esi, 0xa
00000000000075ca         je         loc_7634

00000000000075cc         mov        dword [rsp+0x48+var_48], esi
00000000000075cf         mov        rcx, rsp
00000000000075d2         mov        rdx, 0xffffffffffffffff
00000000000075d9         mov        rsi, rax
00000000000075dc         mov        qword [rsp+0x48+var_44], 0x0
00000000000075e5         mov        qword [rsp+0x48+var_3C], 0x4000000
00000000000075ee         mov        qword [rsp+0x48+var_34], 0x0
00000000000075f7         mov        qword [rsp+0x48+var_2C], 0x0
0000000000007600         mov        qword [rsp+0x48+var_24], 0x0
0000000000007609         mov        qword [rsp+0x48+var_1C], 0x0
0000000000007612         mov        dword [rsp+0x48+var_14], 0x0
000000000000761a         call       quotearg_n_options                          ; quotearg_n_options
000000000000761f         mov        rcx, qword [rsp+0x48+var_10]
0000000000007624         xor        rcx, qword [fs:0x28]
000000000000762d         jne        loc_7639

000000000000762f         add        rsp, 0x48
0000000000007633         ret
                        ; endp

                     loc_7634:
0000000000007634         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_7639:
0000000000007639         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
000000000000763e         align      64                                          ; End of unwind block (FDE at 0xf1f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom_mem:
0000000000007640         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0xf210), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
0000000000007644         mov        r9, rcx
0000000000007647         mov        rcx, qword [qword_211350]                   ; qword_211350
000000000000764e         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000007656         mov        rax, qword [fs:0x28]
000000000000765f         mov        qword [rsp+0x48+var_10], rax
0000000000007664         xor        eax, eax
0000000000007666         movaps     xmmword [rsp+0x48+var_48], xmm0
000000000000766a         test       rsi, rsi
000000000000766d         mov        qword [rsp+0x48+var_18], rcx
0000000000007672         mov        dword [rsp+0x48+var_48], 0xa
0000000000007679         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x211330
0000000000007681         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000007686         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x211340
000000000000768e         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000007693         je         loc_76c7

0000000000007695         test       rdx, rdx
0000000000007698         je         loc_76c7

000000000000769a         mov        qword [rsp+0x48+var_20], rsi
000000000000769f         mov        qword [rsp+0x48+var_18], rdx
00000000000076a4         mov        rcx, rsp
00000000000076a7         mov        rdx, r8
00000000000076aa         mov        rsi, r9
00000000000076ad         call       quotearg_n_options                          ; quotearg_n_options
00000000000076b2         mov        rdi, qword [rsp+0x48+var_10]
00000000000076b7         xor        rdi, qword [fs:0x28]
00000000000076c0         jne        loc_76cc

00000000000076c2         add        rsp, 0x48
00000000000076c6         ret
                        ; endp

                     loc_76c7:
00000000000076c7         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_76cc:
00000000000076cc         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
00000000000076d1         align      32                                          ; End of unwind block (FDE at 0xf210)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_custom:
00000000000076e0         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0xf22c)
00000000000076e7         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
00000000000076ec         align      16                                          ; End of unwind block (FDE at 0xf22c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
00000000000076f0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0xf240)
00000000000076f3         mov        r8, 0xffffffffffffffff
00000000000076fa         mov        rdx, rsi
00000000000076fd         mov        rsi, rdi
0000000000007700         xor        edi, edi
0000000000007702         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000007707         align      16                                          ; End of unwind block (FDE at 0xf240)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
0000000000007710         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0xf254)
0000000000007713         mov        rcx, rdx
0000000000007716         mov        rdx, rsi
0000000000007719         mov        rsi, rdi
000000000000771c         xor        edi, edi
000000000000771e         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000007723         align      16                                          ; End of unwind block (FDE at 0xf254)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
0000000000007730         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xf268), quote_quoting_options
0000000000007737         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000773c         align      64                                          ; End of unwind block (FDE at 0xf268)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
0000000000007740         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xf27c), quote_quoting_options
0000000000007747         mov        rdx, rsi
000000000000774a         mov        rsi, rdi
000000000000774d         xor        edi, edi
000000000000774f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000007754         align      32                                          ; End of unwind block (FDE at 0xf27c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
0000000000007760         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xf290), quote_quoting_options
0000000000007767         mov        rdx, 0xffffffffffffffff
000000000000776e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000007773         align      128                                         ; End of unwind block (FDE at 0xf290)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
0000000000007780         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0xf2a4), quote_quoting_options, CODE XREF=sub_4bd0+1229, sub_4bd0+1534, sub_4bd0+2358, sub_4bd0+2612, xnumtoumax+109
0000000000007787         mov        rsi, rdi
000000000000778a         mov        rdx, 0xffffffffffffffff
0000000000007791         xor        edi, edi
0000000000007793         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000007798         align      32                                          ; End of unwind block (FDE at 0xf2a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
00000000000077a0         push       r15                                         ; Begin of unwind block (FDE at 0xf2bc), CODE XREF=j_version_etc_arn, version_etc_va+75, version_etc+161
00000000000077a2         push       r14
00000000000077a4         push       r13
00000000000077a6         push       r12
00000000000077a8         mov        r12, r9
00000000000077ab         push       rbp
00000000000077ac         push       rbx
00000000000077ad         mov        rbp, rdi
00000000000077b0         mov        rbx, r8
00000000000077b3         sub        rsp, 0x28
00000000000077b7         test       rsi, rsi
00000000000077ba         je         loc_78d8

00000000000077c0         mov        r8, rdx
00000000000077c3         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
00000000000077ca         mov        r9, rcx
00000000000077cd         xor        eax, eax
00000000000077cf         mov        rcx, rsi
00000000000077d2         mov        esi, 0x1
00000000000077d7         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_77dc:
00000000000077dc         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0xdffb, CODE XREF=version_etc_arn+337
00000000000077e3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000077e5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000077ea         call       j_dcgettext                                 ; dcgettext
00000000000077ef         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
00000000000077f6         mov        rcx, rax
00000000000077f9         mov        r8d, 0x7e3
00000000000077ff         mov        esi, 0x1
0000000000007804         mov        rdi, rbp
0000000000007807         xor        eax, eax
0000000000007809         call       j___fprintf_chk                             ; __fprintf_chk
000000000000780e         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000007815         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000007817         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000781c         call       j_dcgettext                                 ; dcgettext
0000000000007821         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
0000000000007824         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000007827         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000782c         cmp        r12, 0x9
0000000000007830         ja         loc_7b70

0000000000007836         lea        rdx, qword [switch_table_e2e4]              ; switch_table_e2e4
000000000000783d         movsxd     rax, dword [rdx+r12*4]
0000000000007841         add        rax, rdx
0000000000007844         jmp        rax                                         ; switch statement using table at 0xe2e4, with 10 cases, 0x7850,0x78c6,0x7900,0x7958,0x7998,0x79e0,0x7a30,0x7a88,0x7ab8,0x7b20
0000000000007846         align      16

                     loc_7850:
0000000000007850         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
0000000000007854         mov        rax, qword [rbx+0x10]
0000000000007858         lea        rsi, qword [aWrittenBySSSns_e1f8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
000000000000785f         mov        r8, qword [rbx+8]
0000000000007863         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000007868         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000786a         mov        r13, qword [rbx+0x30]
000000000000786e         mov        r12, qword [rbx+0x28]
0000000000007872         mov        qword [rsp+0x58+var_48], r9
0000000000007877         mov        r15, qword [rbx+0x20]
000000000000787b         mov        r14, qword [rbx+0x18]
000000000000787f         mov        qword [rsp+0x58+var_58], rax
0000000000007883         mov        qword [rsp+0x58+var_50], r8
0000000000007888         mov        rbx, qword [rbx]
000000000000788b         call       j_dcgettext                                 ; dcgettext
0000000000007890         sub        rsp, 0x8

                     loc_7894:
0000000000007894         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
0000000000007899         mov        rdx, rax
000000000000789c         mov        rcx, rbx
000000000000789f         mov        esi, 0x1
00000000000078a4         mov        rdi, rbp
00000000000078a7         xor        eax, eax
00000000000078a9         push       r9
00000000000078ab         push       r13
00000000000078ad         push       r12
00000000000078af         push       r15
00000000000078b1         push       r14
00000000000078b3         mov        r9, qword [rsp+0x88+var_58]
00000000000078b8         mov        r8, qword [rsp+0x88+var_50]
00000000000078bd         call       j___fprintf_chk                             ; __fprintf_chk
00000000000078c2         add        rsp, 0x30

                     loc_78c6:
00000000000078c6         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
00000000000078ca         pop        rbx
00000000000078cb         pop        rbp
00000000000078cc         pop        r12
00000000000078ce         pop        r13
00000000000078d0         pop        r14
00000000000078d2         pop        r15
00000000000078d4         ret
                        ; endp
00000000000078d5         align      8

                     loc_78d8:
00000000000078d8         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
00000000000078db         mov        rcx, rdx
00000000000078de         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
00000000000078e5         mov        esi, 0x1
00000000000078ea         xor        eax, eax
00000000000078ec         call       j___fprintf_chk                             ; __fprintf_chk
00000000000078f1         jmp        loc_77dc
00000000000078f6         align      256

                     loc_7900:
0000000000007900         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
0000000000007904         mov        r9, qword [rbx+0x38]
0000000000007908         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
000000000000790f         mov        rax, qword [rbx+0x10]
0000000000007913         mov        r8, qword [rbx+8]
0000000000007917         mov        edx, 0x5
000000000000791c         mov        r13, qword [rbx+0x30]
0000000000007920         mov        r12, qword [rbx+0x28]
0000000000007924         mov        r15, qword [rbx+0x20]
0000000000007928         mov        r14, qword [rbx+0x18]
000000000000792c         mov        rbx, qword [rbx]
000000000000792f         mov        qword [rsp+0x58+var_40], r10
0000000000007934         mov        qword [rsp+0x58+var_48], r9
0000000000007939         mov        qword [rsp+0x58+var_58], rax
000000000000793d         mov        qword [rsp+0x58+var_50], r8

                     loc_7942:
0000000000007942         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
0000000000007944         call       j_dcgettext                                 ; dcgettext
0000000000007949         mov        r10, qword [rsp+0x58+var_40]
000000000000794e         push       r10
0000000000007950         jmp        loc_7894
0000000000007955         align      8

                     loc_7958:
0000000000007958         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
000000000000795b         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
0000000000007962         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000007967         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000007969         call       j_dcgettext                                 ; dcgettext
000000000000796e         add        rsp, 0x28
0000000000007972         mov        rcx, rbx
0000000000007975         mov        rdi, rbp
0000000000007978         pop        rbx
0000000000007979         pop        rbp
000000000000797a         pop        r12
000000000000797c         pop        r13
000000000000797e         pop        r14
0000000000007980         pop        r15
0000000000007982         mov        rdx, rax
0000000000007985         mov        esi, 0x1
000000000000798a         xor        eax, eax
000000000000798c         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000007991         align      8

                     loc_7998:
0000000000007998         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
000000000000799c         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
00000000000079a3         mov        rbx, qword [rbx]
00000000000079a6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000079ab         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000079ad         call       j_dcgettext                                 ; dcgettext
00000000000079b2         add        rsp, 0x28
00000000000079b6         mov        r8, r12
00000000000079b9         mov        rcx, rbx
00000000000079bc         mov        rdi, rbp
00000000000079bf         mov        rdx, rax
00000000000079c2         mov        esi, 0x1
00000000000079c7         pop        rbx
00000000000079c8         pop        rbp
00000000000079c9         pop        r12
00000000000079cb         pop        r13
00000000000079cd         pop        r14
00000000000079cf         pop        r15
00000000000079d1         xor        eax, eax
00000000000079d3         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
00000000000079d8         align      32

                     loc_79e0:
00000000000079e0         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
00000000000079e4         mov        r12, qword [rbx+8]
00000000000079e8         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
00000000000079ef         mov        rbx, qword [rbx]
00000000000079f2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000079f7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000079f9         call       j_dcgettext                                 ; dcgettext
00000000000079fe         add        rsp, 0x28
0000000000007a02         mov        r9, r13
0000000000007a05         mov        r8, r12
0000000000007a08         mov        rcx, rbx
0000000000007a0b         mov        rdi, rbp
0000000000007a0e         mov        rdx, rax
0000000000007a11         pop        rbx
0000000000007a12         pop        rbp
0000000000007a13         pop        r12
0000000000007a15         pop        r13
0000000000007a17         pop        r14
0000000000007a19         pop        r15
0000000000007a1b         mov        esi, 0x1
0000000000007a20         xor        eax, eax
0000000000007a22         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000007a27         align      16

                     loc_7a30:
0000000000007a30         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
0000000000007a37         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000007a3c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000007a3e         mov        r14, qword [rbx+0x18]
0000000000007a42         mov        r13, qword [rbx+0x10]
0000000000007a46         mov        r12, qword [rbx+8]
0000000000007a4a         mov        rbx, qword [rbx]
0000000000007a4d         call       j_dcgettext                                 ; dcgettext
0000000000007a52         sub        rsp, 0x8

                     loc_7a56:
0000000000007a56         push       r14                                         ; CODE XREF=version_etc_arn+784
0000000000007a58         mov        rdx, rax
0000000000007a5b         mov        r9, r13
0000000000007a5e         mov        r8, r12
0000000000007a61         mov        rcx, rbx
0000000000007a64         mov        rdi, rbp
0000000000007a67         mov        esi, 0x1
0000000000007a6c         xor        eax, eax
0000000000007a6e         call       j___fprintf_chk                             ; __fprintf_chk
0000000000007a73         pop        rax
0000000000007a74         pop        rdx
0000000000007a75         add        rsp, 0x28
0000000000007a79         pop        rbx
0000000000007a7a         pop        rbp
0000000000007a7b         pop        r12
0000000000007a7d         pop        r13
0000000000007a7f         pop        r14
0000000000007a81         pop        r15
0000000000007a83         ret
                        ; endp
0000000000007a84         align      8

                     loc_7a88:
0000000000007a88         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
0000000000007a8c         lea        rsi, qword [aWrittenBySSSns_e178]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
0000000000007a93         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000007a98         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000007a9a         mov        r14, qword [rbx+0x18]
0000000000007a9e         mov        r13, qword [rbx+0x10]
0000000000007aa2         mov        r12, qword [rbx+8]
0000000000007aa6         mov        rbx, qword [rbx]
0000000000007aa9         call       j_dcgettext                                 ; dcgettext
0000000000007aae         push       r15
0000000000007ab0         jmp        loc_7a56
0000000000007ab2         align      8

                     loc_7ab8:
0000000000007ab8         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
0000000000007abc         mov        r12, qword [rbx+0x28]
0000000000007ac0         lea        rsi, qword [aWrittenBySSSns_e1a0]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
0000000000007ac7         mov        r15, qword [rbx+0x20]
0000000000007acb         mov        r14, qword [rbx+0x18]
0000000000007acf         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000007ad4         mov        r13, qword [rbx+0x10]
0000000000007ad8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000007ada         mov        rbx, qword [rbx]
0000000000007add         mov        qword [rsp+0x58+var_58], r8
0000000000007ae1         call       j_dcgettext                                 ; dcgettext
0000000000007ae6         sub        rsp, 0x8
0000000000007aea         mov        r9, r13
0000000000007aed         push       r12
0000000000007aef         push       r15
0000000000007af1         push       r14

                     loc_7af3:
0000000000007af3         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
0000000000007af8         mov        rcx, rbx
0000000000007afb         mov        rdx, rax
0000000000007afe         mov        rdi, rbp
0000000000007b01         mov        esi, 0x1
0000000000007b06         xor        eax, eax
0000000000007b08         call       j___fprintf_chk                             ; __fprintf_chk
0000000000007b0d         add        rsp, 0x20
0000000000007b11         add        rsp, 0x28
0000000000007b15         pop        rbx
0000000000007b16         pop        rbp
0000000000007b17         pop        r12
0000000000007b19         pop        r13
0000000000007b1b         pop        r14
0000000000007b1d         pop        r15
0000000000007b1f         ret
                        ; endp

                     loc_7b20:
0000000000007b20         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
0000000000007b24         mov        r13, qword [rbx+0x30]
0000000000007b28         lea        rsi, qword [aWrittenBySSSns_e1c8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
0000000000007b2f         mov        r12, qword [rbx+0x28]
0000000000007b33         mov        r15, qword [rbx+0x20]
0000000000007b37         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000007b3c         mov        r14, qword [rbx+0x18]
0000000000007b40         mov        r8, qword [rbx+8]
0000000000007b44         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000007b46         mov        qword [rsp+0x58+var_50], r9
0000000000007b4b         mov        rbx, qword [rbx]
0000000000007b4e         mov        qword [rsp+0x58+var_58], r8
0000000000007b52         call       j_dcgettext                                 ; dcgettext
0000000000007b57         push       r13
0000000000007b59         push       r12
0000000000007b5b         push       r15
0000000000007b5d         push       r14
0000000000007b5f         mov        r9, qword [rsp+0x78+var_50]
0000000000007b64         jmp        loc_7af3
0000000000007b66         align      16

                     loc_7b70:
0000000000007b70         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
0000000000007b74         mov        r9, qword [rbx+0x38]
0000000000007b78         mov        edx, 0x5
0000000000007b7d         mov        rax, qword [rbx+0x10]
0000000000007b81         mov        r8, qword [rbx+8]
0000000000007b85         lea        rsi, qword [aWrittenBySSSns_e260]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
0000000000007b8c         mov        r13, qword [rbx+0x30]
0000000000007b90         mov        r12, qword [rbx+0x28]
0000000000007b94         mov        r15, qword [rbx+0x20]
0000000000007b98         mov        r14, qword [rbx+0x18]
0000000000007b9c         mov        qword [rsp+0x58+var_40], r10
0000000000007ba1         mov        qword [rsp+0x58+var_48], r9
0000000000007ba6         mov        qword [rsp+0x58+var_58], rax
0000000000007baa         mov        qword [rsp+0x58+var_50], r8
0000000000007baf         mov        rbx, qword [rbx]
0000000000007bb2         jmp        loc_7942
0000000000007bb7         align      64                                          ; End of unwind block (FDE at 0xf2bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
0000000000007bc0         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0xf3d0)
0000000000007bc3         cmp        qword [r8], 0x0
0000000000007bc7         je         j_version_etc_arn                           ; version_etc_arn

0000000000007bc9         nop        dword [rax]

                     loc_7bd0:
0000000000007bd0         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
0000000000007bd4         cmp        qword [r8+r9*8], 0x0
0000000000007bd9         jne        loc_7bd0

                     j_version_etc_arn:        // version_etc_arn
0000000000007bdb         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
0000000000007be0         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0xf3d0), Begin of unwind block (FDE at 0xf3e4)
0000000000007be4         mov        r10, r8
0000000000007be7         xor        r9d, r9d
0000000000007bea         mov        rax, qword [fs:0x28]
0000000000007bf3         mov        qword [rsp+0x68+var_10], rax
0000000000007bf8         xor        eax, eax
0000000000007bfa         mov        r8, rsp
0000000000007bfd         nop        dword [rax]

                     loc_7c00:
0000000000007c00         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000007c03         cmp        eax, 0x2f
0000000000007c06         ja         loc_7c4a

0000000000007c08         mov        r11d, eax
0000000000007c0b         add        r11, qword [r10+0x10]
0000000000007c0f         add        eax, 0x8
0000000000007c12         mov        dword [r10], eax

                     loc_7c15:
0000000000007c15         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000007c18         test       rax, rax
0000000000007c1b         mov        qword [r8+r9*8], rax
0000000000007c1f         je         loc_7c2b

0000000000007c21         add        r9, 0x1
0000000000007c25         cmp        r9, 0xa
0000000000007c29         jne        loc_7c00

                     loc_7c2b:
0000000000007c2b         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
0000000000007c30         mov        rax, qword [rsp+0x68+var_10]
0000000000007c35         xor        rax, qword [fs:0x28]
0000000000007c3e         jne        loc_7c45

0000000000007c40         add        rsp, 0x68
0000000000007c44         ret
                        ; endp

                     loc_7c45:
0000000000007c45         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_7c4a:
0000000000007c4a         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
0000000000007c4e         lea        rax, qword [r11+8]
0000000000007c52         mov        qword [r10+8], rax
0000000000007c56         jmp        loc_7c15
0000000000007c58         align      32                                          ; End of unwind block (FDE at 0xf3e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
0000000000007c60         push       rbp                                         ; Begin of unwind block (FDE at 0xf400), CODE XREF=main+351
0000000000007c61         push       rbx
0000000000007c62         mov        r10d, 0x20
0000000000007c68         xor        r11d, r11d
0000000000007c6b         sub        rsp, 0xb8
0000000000007c72         mov        rax, qword [fs:0x28]
0000000000007c7b         mov        qword [rsp+0xc8+var_50], rax
0000000000007c80         xor        eax, eax
0000000000007c82         lea        rax, qword [rsp+0xc8+arg_0]
0000000000007c8a         mov        qword [rsp+0xc8+var_28], r8
0000000000007c92         lea        rbx, qword [rsp+0xc8+arg_0]
0000000000007c9a         lea        r8, qword [rsp+0xc8+var_A8]
0000000000007c9f         mov        qword [rsp+0xc8+var_20], r9
0000000000007ca7         mov        dword [rsp+0xc8+var_C0], 0x20
0000000000007caf         mov        qword [rsp+0xc8+var_B8], rax
0000000000007cb4         lea        rax, qword [rsp+0xc8+var_48]
0000000000007cbc         xor        r9d, r9d
0000000000007cbf         mov        qword [rsp+0xc8+var_B0], rax
0000000000007cc4         mov        rbp, rax
0000000000007cc7         nop        word [rax+rax]

                     loc_7cd0:
0000000000007cd0         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
0000000000007cd4         ja         loc_7d2c

0000000000007cd6         mov        eax, r10d
0000000000007cd9         mov        r11d, 0x1
0000000000007cdf         add        r10d, 0x8
0000000000007ce3         add        rax, rbp

                     loc_7ce6:
0000000000007ce6         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
0000000000007ce9         test       rax, rax
0000000000007cec         mov        qword [r8+r9*8], rax
0000000000007cf0         je         loc_7cfc

0000000000007cf2         add        r9, 0x1
0000000000007cf6         cmp        r9, 0xa
0000000000007cfa         jne        loc_7cd0

                     loc_7cfc:
0000000000007cfc         test       r11b, r11b                                  ; CODE XREF=version_etc+144
0000000000007cff         jne        loc_7d25

                     loc_7d01:
0000000000007d01         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000007d06         mov        rax, qword [rsp+0xc8+var_50]
0000000000007d0b         xor        rax, qword [fs:0x28]
0000000000007d14         jne        loc_7d20

0000000000007d16         add        rsp, 0xb8
0000000000007d1d         pop        rbx
0000000000007d1e         pop        rbp
0000000000007d1f         ret
                        ; endp

                     loc_7d20:
0000000000007d20         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_7d25:
0000000000007d25         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
0000000000007d2a         jmp        loc_7d01

                     loc_7d2c:
0000000000007d2c         mov        rax, rbx                                    ; CODE XREF=version_etc+116
0000000000007d2f         add        rbx, 0x8
0000000000007d33         jmp        loc_7ce6
0000000000007d35         align      64                                          ; End of unwind block (FDE at 0xf400)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
0000000000007d40         push       rbx                                         ; Begin of unwind block (FDE at 0xf42c)
0000000000007d41         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
0000000000007d48         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000007d4d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000007d4f         call       j_dcgettext                                 ; dcgettext
0000000000007d54         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
0000000000007d5b         mov        rsi, rax
0000000000007d5e         mov        edi, 0x1
0000000000007d63         xor        eax, eax
0000000000007d65         call       j___printf_chk                              ; __printf_chk
0000000000007d6a         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
0000000000007d71         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000007d76         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000007d78         call       j_dcgettext                                 ; dcgettext
0000000000007d7d         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000007d84         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0xb470
0000000000007d8b         mov        rsi, rax
0000000000007d8e         mov        edi, 0x1
0000000000007d93         xor        eax, eax
0000000000007d95         call       j___printf_chk                              ; __printf_chk
0000000000007d9a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000007da1         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
0000000000007da8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000007daa         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000007daf         call       j_dcgettext                                 ; dcgettext
0000000000007db4         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000007db7         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000007dba         pop        rbx
0000000000007dbb         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
0000000000007dc0         push       rbx                                         ; End of unwind block (FDE at 0xf42c), Begin of unwind block (FDE at 0xf44c), CODE XREF=quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15
0000000000007dc1         mov        rbx, rdi
0000000000007dc4         call       j_malloc                                    ; malloc
0000000000007dc9         test       rax, rax
0000000000007dcc         jne        loc_7dd3

0000000000007dce         test       rbx, rbx
0000000000007dd1         jne        loc_7dd5

                     loc_7dd3:
0000000000007dd3         pop        rbx                                         ; CODE XREF=xmalloc+12
0000000000007dd4         ret
                        ; endp

                     loc_7dd5:
0000000000007dd5         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_7dda:
0000000000007dda         nop        word [rax+rax]                              ; End of unwind block (FDE at 0xf44c)
                     xnmalloc:
0000000000007de0         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0xf468)
0000000000007de3         mul        rsi
0000000000007de6         mov        rdi, rax
0000000000007de9         seto       al
0000000000007dec         test       rdi, rdi
0000000000007def         js         loc_7dfb

0000000000007df1         movzx      eax, al
0000000000007df4         test       rax, rax
0000000000007df7         jne        loc_7dfb

0000000000007df9         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_7dfb:
0000000000007dfb         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
0000000000007dff         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_7e04:
0000000000007e04         nop                                                    ; End of unwind block (FDE at 0xf468)
0000000000007e06         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000007e10         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0xf47c)
                        ; endp
0000000000007e12         align      32                                          ; End of unwind block (FDE at 0xf47c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000007e20         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0xf490), CODE XREF=quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
0000000000007e23         push       rbx
0000000000007e24         mov        rbx, rsi
0000000000007e27         jne        loc_7e2e

0000000000007e29         test       rdi, rdi
0000000000007e2c         jne        loc_7e48

                     loc_7e2e:
0000000000007e2e         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000007e31         call       j_realloc                                   ; realloc
0000000000007e36         test       rax, rax
0000000000007e39         jne        loc_7e40

0000000000007e3b         test       rbx, rbx
0000000000007e3e         jne        loc_7e51

                     loc_7e40:
0000000000007e40         pop        rbx                                         ; CODE XREF=xrealloc+25
0000000000007e41         ret
                        ; endp
0000000000007e42         align      8

                     loc_7e48:
0000000000007e48         call       j_free                                      ; free, CODE XREF=xrealloc+12
0000000000007e4d         xor        eax, eax
0000000000007e4f         pop        rbx
0000000000007e50         ret
                        ; endp

                     loc_7e51:
0000000000007e51         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_7e56:
0000000000007e56         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0xf490)
                     xnrealloc:
0000000000007e60         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0xf4b4)
0000000000007e63         mul        rdx
0000000000007e66         mov        rsi, rax
0000000000007e69         seto       al
0000000000007e6c         test       rsi, rsi
0000000000007e6f         js         loc_7e7b

0000000000007e71         movzx      eax, al
0000000000007e74         test       rax, rax
0000000000007e77         jne        loc_7e7b

0000000000007e79         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_7e7b:
0000000000007e7b         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
0000000000007e7f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_7e84:
0000000000007e84         nop                                                    ; End of unwind block (FDE at 0xf4b4)
0000000000007e86         nop        word [cs:rax+rax]
                     x2nrealloc:
0000000000007e90         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xf4c8)
0000000000007e93         mov        r9, rdx
0000000000007e96         mov        rcx, qword [rsi]
0000000000007e99         je         loc_7ed0

0000000000007e9b         xor        edx, edx
0000000000007e9d         movabs     rax, 0x5555555555555554
0000000000007ea7         div        r9
0000000000007eaa         cmp        rax, rcx
0000000000007ead         jbe        loc_7eeb

0000000000007eaf         mov        rax, rcx
0000000000007eb2         shr        rax, 0x1
0000000000007eb5         lea        rcx, qword [rax+rcx+1]

                     loc_7eba:
0000000000007eba         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
0000000000007ebd         imul       rcx, r9                                     ; argument #4 for method xrealloc
0000000000007ec1         mov        rsi, rcx                                    ; argument #2 for method xrealloc
0000000000007ec4         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000007ec9         align      16

                     loc_7ed0:
0000000000007ed0         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
0000000000007ed3         je         loc_7ef8

                     loc_7ed5:
0000000000007ed5         mov        rax, rcx                                    ; CODE XREF=sub_7ef4+28
0000000000007ed8         mul        r9
0000000000007edb         seto       dl
0000000000007ede         test       rax, rax
0000000000007ee1         movzx      edx, dl
0000000000007ee4         js         loc_7eeb

0000000000007ee6         test       rdx, rdx
0000000000007ee9         je         loc_7eba

                     loc_7eeb:
0000000000007eeb         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
0000000000007eef         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_7ef4:
0000000000007ef4         nop        dword [rax]
                        ; endp

                     loc_7ef8:
0000000000007ef8         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
0000000000007efa         mov        eax, 0x80
0000000000007eff         xor        r8d, r8d
0000000000007f02         div        r9
0000000000007f05         test       rax, rax
0000000000007f08         sete       r8b
0000000000007f0c         lea        rcx, qword [r8+rax]
0000000000007f10         jmp        loc_7ed5
0000000000007f12         align      32                                          ; End of unwind block (FDE at 0xf4c8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000007f20         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xf4e0)
0000000000007f23         mov        rax, qword [rsi]
0000000000007f26         je         loc_7f50

0000000000007f28         movabs     rdx, 0x5555555555555553
0000000000007f32         cmp        rax, rdx
0000000000007f35         ja         loc_7f61

0000000000007f37         mov        rdx, rax
0000000000007f3a         shr        rdx, 0x1
0000000000007f3d         lea        rax, qword [rdx+rax+1]

                     loc_7f42:
0000000000007f42         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
0000000000007f45         mov        rsi, rax                                    ; argument #2 for method xrealloc
0000000000007f48         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000007f4d         align      16

                     loc_7f50:
0000000000007f50         test       rax, rax                                    ; CODE XREF=x2realloc+6
0000000000007f53         mov        edx, 0x80
0000000000007f58         cmove      rax, rdx
0000000000007f5c         test       rax, rax
0000000000007f5f         jns        loc_7f42

                     loc_7f61:
0000000000007f61         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
0000000000007f65         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_7f6a:
0000000000007f6a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0xf4e0)
                     xzalloc:
0000000000007f70         push       rbx                                         ; Begin of unwind block (FDE at 0xf4f8)
0000000000007f71         mov        rbx, rdi
0000000000007f74         call       xmalloc                                     ; xmalloc
0000000000007f79         mov        rdx, rbx                                    ; argument "__n" for method j_memset
0000000000007f7c         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000007f7e         mov        rdi, rax                                    ; argument "__s" for method j_memset
0000000000007f81         pop        rbx
0000000000007f82         jmp        j_memset                                    ; memset
                        ; endp
0000000000007f87         align      16                                          ; End of unwind block (FDE at 0xf4f8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
0000000000007f90         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0xf514)
0000000000007f93         sub        rsp, 0x8
0000000000007f97         mul        rsi
0000000000007f9a         seto       dl
0000000000007f9d         test       rax, rax
0000000000007fa0         js         loc_7fb9

0000000000007fa2         movzx      edx, dl
0000000000007fa5         test       rdx, rdx
0000000000007fa8         jne        loc_7fb9

0000000000007faa         call       j_calloc                                    ; calloc
0000000000007faf         test       rax, rax
0000000000007fb2         je         loc_7fb9

0000000000007fb4         add        rsp, 0x8
0000000000007fb8         ret
                        ; endp

                     loc_7fb9:
0000000000007fb9         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_7fbe:
0000000000007fbe         nop                                                    ; End of unwind block (FDE at 0xf514)
                        ; endp

                     xmemdup:
0000000000007fc0         push       rbp                                         ; Begin of unwind block (FDE at 0xf530), CODE XREF=clone_quoting_options+40, xstrdup+17
0000000000007fc1         push       rbx
0000000000007fc2         mov        rbp, rdi
0000000000007fc5         mov        rdi, rsi
0000000000007fc8         mov        rbx, rsi
0000000000007fcb         sub        rsp, 0x8
0000000000007fcf         call       xmalloc                                     ; xmalloc
0000000000007fd4         add        rsp, 0x8
0000000000007fd8         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
0000000000007fdb         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
0000000000007fde         pop        rbx
0000000000007fdf         pop        rbp
0000000000007fe0         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000007fe3         jmp        j_memcpy                                    ; memcpy
                        ; endp
0000000000007fe8         align      16                                          ; End of unwind block (FDE at 0xf530)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000007ff0         push       rbx                                         ; Begin of unwind block (FDE at 0xf558)
0000000000007ff1         mov        rbx, rdi
0000000000007ff4         call       j_strlen                                    ; strlen
0000000000007ff9         mov        rdi, rbx
0000000000007ffc         lea        rsi, qword [rax+1]
0000000000008000         pop        rbx
0000000000008001         jmp        xmemdup                                     ; xmemdup
0000000000008003         align      16                                          ; End of unwind block (FDE at 0xf558)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000008010         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0xf574), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=wrapf+391, quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41
0000000000008017         sub        rsp, 0x8
000000000000801b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000008020         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000008022         call       j_dcgettext                                 ; dcgettext
0000000000008027         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
000000000000802d         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0xdacc
0000000000008034         mov        rcx, rax
0000000000008037         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000008039         xor        eax, eax
000000000000803b         call       j_error                                     ; error
0000000000008040         call       j_abort                                     ; abort
                        ; endp
0000000000008045         align      16                                          ; End of unwind block (FDE at 0xf574)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72


                     xnumtoumax:
0000000000008050         push       r15                                         ; Begin of unwind block (FDE at 0xf58c), CODE XREF=integer_arg+57, xdectoumax+23
0000000000008052         push       r14
0000000000008054         mov        r15, rcx
0000000000008057         push       r13
0000000000008059         push       r12
000000000000805b         mov        r14, rdx
000000000000805e         push       rbp
000000000000805f         push       rbx
0000000000008060         mov        edx, esi
0000000000008062         xor        esi, esi
0000000000008064         mov        r12, rdi
0000000000008067         mov        r13, r9
000000000000806a         sub        rsp, 0x18
000000000000806e         mov        rcx, rsp
0000000000008071         mov        ebx, dword [rsp+0x48+arg_0]
0000000000008075         mov        rax, qword [fs:0x28]
000000000000807e         mov        qword [rsp+0x48+var_40], rax
0000000000008083         xor        eax, eax
0000000000008085         call       xstrtoumax                                  ; xstrtoumax
000000000000808a         test       eax, eax
000000000000808c         jne        loc_8120

0000000000008092         mov        rbp, qword [rsp+0x48+var_48]
0000000000008096         cmp        rbp, r14
0000000000008099         jb         loc_80a0

000000000000809b         cmp        rbp, r15
000000000000809e         jbe        loc_80f4

                     loc_80a0:
00000000000080a0         call       j___errno_location                          ; __errno_location, CODE XREF=xnumtoumax+73
00000000000080a5         cmp        rbp, 0x40000000
00000000000080ac         mov        r14, rax
00000000000080af         sbb        eax, eax
00000000000080b1         and        eax, 0xffffffd7
00000000000080b4         add        eax, 0x4b
00000000000080b7         mov        dword [r14], eax

                     loc_80ba:
00000000000080ba         mov        rdi, r12                                    ; CODE XREF=xnumtoumax+226, xnumtoumax+234, xnumtoumax+246
00000000000080bd         call       quote                                       ; quote
00000000000080c2         mov        esi, dword [r14]
00000000000080c5         mov        r8, rax
00000000000080c8         mov        eax, 0x0
00000000000080cd         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
00000000000080d4         mov        rcx, r13
00000000000080d7         cmp        esi, 0x16
00000000000080da         cmove      esi, eax                                    ; argument "__errnum" for method j_error
00000000000080dd         test       ebx, ebx
00000000000080df         mov        eax, 0x1
00000000000080e4         cmove      ebx, eax
00000000000080e7         xor        eax, eax
00000000000080e9         mov        edi, ebx                                    ; argument "__status" for method j_error
00000000000080eb         call       j_error                                     ; error
00000000000080f0         mov        rbp, qword [rsp+0x48+var_48]

                     loc_80f4:
00000000000080f4         mov        rdx, qword [rsp+0x48+var_40]                ; CODE XREF=xnumtoumax+78
00000000000080f9         xor        rdx, qword [fs:0x28]
0000000000008102         mov        rax, rbp
0000000000008105         jne        loc_814b

0000000000008107         add        rsp, 0x18
000000000000810b         pop        rbx
000000000000810c         pop        rbp
000000000000810d         pop        r12
000000000000810f         pop        r13
0000000000008111         pop        r14
0000000000008113         pop        r15
0000000000008115         ret
                        ; endp
0000000000008116         align      32

                     loc_8120:
0000000000008120         mov        ebp, eax                                    ; CODE XREF=xnumtoumax+60
0000000000008122         call       j___errno_location                          ; __errno_location
0000000000008127         cmp        ebp, 0x1
000000000000812a         mov        r14, rax
000000000000812d         je         loc_8140

000000000000812f         cmp        ebp, 0x3
0000000000008132         jne        loc_80ba

0000000000008134         mov        dword [rax], 0x0
000000000000813a         jmp        loc_80ba
000000000000813f         align      64

                     loc_8140:
0000000000008140         mov        dword [rax], 0x4b                           ; CODE XREF=xnumtoumax+221
0000000000008146         jmp        loc_80ba

                     loc_814b:
000000000000814b         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=xnumtoumax+181
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xdectoumax:
0000000000008150         sub        rsp, 0x10                                   ; End of unwind block (FDE at 0xf58c), Begin of unwind block (FDE at 0xf5d8)
0000000000008154         push       r9
0000000000008156         mov        r9, r8
0000000000008159         mov        r8, rcx
000000000000815c         mov        rcx, rdx
000000000000815f         mov        rdx, rsi
0000000000008162         mov        esi, 0xa
0000000000008167         call       xnumtoumax                                  ; xnumtoumax
000000000000816c         add        rsp, 0x18
0000000000008170         ret
                        ; endp
0000000000008171         align      128                                         ; End of unwind block (FDE at 0xf5d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80


                     xstrtol:
0000000000008180         push       r15                                         ; Begin of unwind block (FDE at 0xf5f4), CODE XREF=screen_columns+90
0000000000008182         push       r14
0000000000008184         push       r13
0000000000008186         push       r12
0000000000008188         push       rbp
0000000000008189         push       rbx
000000000000818a         sub        rsp, 0x28
000000000000818e         mov        rax, qword [fs:0x28]
0000000000008197         mov        qword [rsp+0x58+var_40], rax
000000000000819c         xor        eax, eax
000000000000819e         cmp        edx, 0x24
00000000000081a1         ja         loc_880f

00000000000081a7         lea        rax, qword [rsp+0x58+var_48]
00000000000081ac         test       rsi, rsi
00000000000081af         mov        rbx, rsi
00000000000081b2         mov        r12, rdi
00000000000081b5         mov        ebp, edx
00000000000081b7         mov        r14, rcx
00000000000081ba         cmove      rbx, rax
00000000000081be         mov        r15, r8
00000000000081c1         call       j___errno_location                          ; __errno_location
00000000000081c6         mov        edx, ebp                                    ; argument "__base" for method j_strtol
00000000000081c8         mov        dword [rax], 0x0
00000000000081ce         mov        rsi, rbx                                    ; argument "__endptr" for method j_strtol
00000000000081d1         mov        rdi, r12                                    ; argument "__nptr" for method j_strtol
00000000000081d4         mov        r13, rax
00000000000081d7         call       j_strtol                                    ; strtol
00000000000081dc         mov        rcx, qword [rbx]
00000000000081df         mov        rbp, rax
00000000000081e2         cmp        rcx, r12
00000000000081e5         je         loc_8248

00000000000081e7         mov        eax, dword [r13]
00000000000081eb         test       eax, eax
00000000000081ed         jne        loc_8230

00000000000081ef         xor        r12d, r12d

                     loc_81f2:
00000000000081f2         test       r15, r15                                    ; CODE XREF=xstrtol+193
00000000000081f5         je         loc_8204

00000000000081f7         movzx      r13d, byte [rcx]
00000000000081fb         test       r13b, r13b
00000000000081fe         jne        loc_8283

                     loc_8204:
0000000000008204         mov        qword [r14], rbp                            ; CODE XREF=xstrtol+117, xstrtol+550

                     loc_8207:
0000000000008207         mov        rdi, qword [rsp+0x58+var_40]                ; CODE XREF=xstrtol+185, xstrtol+227, xstrtol+249, xstrtol+383, xstrtol+1382
000000000000820c         xor        rdi, qword [fs:0x28]
0000000000008215         mov        eax, r12d
0000000000008218         jne        loc_882e

000000000000821e         add        rsp, 0x28
0000000000008222         pop        rbx
0000000000008223         pop        rbp
0000000000008224         pop        r12
0000000000008226         pop        r13
0000000000008228         pop        r14
000000000000822a         pop        r15
000000000000822c         ret
                        ; endp
000000000000822d         align      16

                     loc_8230:
0000000000008230         cmp        eax, 0x22                                   ; CODE XREF=xstrtol+109
0000000000008233         mov        r12d, 0x4
0000000000008239         jne        loc_8207

000000000000823b         mov        r12d, 0x1
0000000000008241         jmp        loc_81f2
0000000000008243         align      8

                     loc_8248:
0000000000008248         test       r15, r15                                    ; CODE XREF=xstrtol+101
000000000000824b         je         loc_86e0

0000000000008251         movzx      r13d, byte [rcx]
0000000000008255         mov        qword [rsp+0x58+var_50], rcx
000000000000825a         mov        r12d, 0x4
0000000000008260         test       r13b, r13b
0000000000008263         je         loc_8207

0000000000008265         movsx      esi, r13b                                   ; argument "__c" for method j_strchr
0000000000008269         mov        rdi, r15                                    ; argument "__s" for method j_strchr
000000000000826c         call       j_strchr                                    ; strchr
0000000000008271         test       rax, rax
0000000000008274         mov        rcx, qword [rsp+0x58+var_50]
0000000000008279         je         loc_8207

000000000000827b         mov        ebp, 0x1
0000000000008280         xor        r12d, r12d

                     loc_8283:
0000000000008283         movsx      esi, r13b                                   ; argument "__c" for method j_strchr, CODE XREF=xstrtol+126
0000000000008287         mov        rdi, r15                                    ; argument "__s" for method j_strchr
000000000000828a         mov        qword [rsp+0x58+var_50], rcx
000000000000828f         call       j_strchr                                    ; strchr
0000000000008294         test       rax, rax
0000000000008297         mov        rcx, qword [rsp+0x58+var_50]
000000000000829c         je         loc_82f8

000000000000829e         lea        eax, dword [r13-0x45]
00000000000082a2         cmp        al, 0x2f
00000000000082a4         ja         loc_8308

00000000000082a6         movabs     rdx, 0x814400308945
00000000000082b0         bt         rdx, rax
00000000000082b4         jae        loc_8308

00000000000082b6         mov        esi, 0x30                                   ; argument "__c" for method j_strchr
00000000000082bb         mov        rdi, r15                                    ; argument "__s" for method j_strchr
00000000000082be         mov        qword [rsp+0x58+var_50], rcx
00000000000082c3         call       j_strchr                                    ; strchr
00000000000082c8         test       rax, rax
00000000000082cb         mov        rcx, qword [rsp+0x58+var_50]
00000000000082d0         je         loc_8308

00000000000082d2         movzx      eax, byte [rcx+1]
00000000000082d6         cmp        al, 0x44
00000000000082d8         je         loc_82e6

00000000000082da         cmp        al, 0x69
00000000000082dc         je         loc_87c8

00000000000082e2         cmp        al, 0x42
00000000000082e4         jne        loc_8308

                     loc_82e6:
00000000000082e6         mov        edi, 0x2                                    ; CODE XREF=xstrtol+344
00000000000082eb         mov        eax, 0x3e8
00000000000082f0         jmp        loc_8312
00000000000082f2         align      8

                     loc_82f8:
00000000000082f8         mov        qword [r14], rbp                            ; case 52, CODE XREF=xstrtol+284, xstrtol+410, xstrtol+430
00000000000082fb         or         r12d, 0x2
00000000000082ff         jmp        loc_8207
0000000000008304         align      8

                     loc_8308:
0000000000008308         mov        edi, 0x1                                    ; CODE XREF=xstrtol+292, xstrtol+308, xstrtol+336, xstrtol+356
000000000000830d         mov        eax, 0x400

                     loc_8312:
0000000000008312         sub        r13d, 0x42                                  ; CODE XREF=xstrtol+368, xstrtol+1627
0000000000008316         cmp        r13b, 0x35
000000000000831a         ja         loc_82f8

000000000000831c         lea        rsi, qword [switch_table_e3a8]              ; switch_table_e3a8
0000000000008323         movzx      r13d, r13b
0000000000008327         movsxd     rdx, dword [rsi+r13*4]
000000000000832b         add        rdx, rsi
000000000000832e         jmp        rdx                                         ; switch statement using table at 0xe3a8, with 54 cases, 0x82f8,0x8330,0x8390,0x83b0,0x83e0,0x8410,0x8480,0x84f0,0x8530,0x8590,0x85f8,0x8660,0x8690

                     loc_8330:
0000000000008330         movabs     r8, 0x8000000000000000                      ; case 43, CODE XREF=xstrtol+430
000000000000833a         movsxd     rsi, eax
000000000000833d         mov        rax, r8
0000000000008340         cqo
0000000000008342         idiv       rsi
0000000000008345         cmp        rbp, rax
0000000000008348         mov        r9, rax
000000000000834b         jl         loc_87f5

0000000000008351         movabs     r10, 0x7fffffffffffffff
000000000000835b         mov        rax, r10
000000000000835e         cqo
0000000000008360         idiv       rsi
0000000000008363         cmp        rbp, rax
0000000000008366         jg         loc_8802

000000000000836c         imul       rbp, rsi
0000000000008370         cmp        r9, rbp
0000000000008373         jg         loc_87f5

0000000000008379         cmp        rax, rbp
000000000000837c         jl         loc_8802

0000000000008382         imul       rbp, rsi
0000000000008386         xor        eax, eax

                     loc_8388:
0000000000008388         or         r12d, eax                                   ; CODE XREF=xstrtol+1661, xstrtol+1674
000000000000838b         nop        dword [rax+rax]

                     loc_8390:
0000000000008390         movsxd     rax, edi                                    ; case 33, CODE XREF=xstrtol+430, xstrtol+601, xstrtol+650, xstrtol+935, xstrtol+1027, xstrtol+1290, xstrtol+1408, xstrtol+1600
0000000000008393         add        rcx, rax
0000000000008396         mov        eax, r12d
0000000000008399         or         eax, 0x2
000000000000839c         mov        qword [rbx], rcx
000000000000839f         cmp        byte [rcx], 0x0
00000000000083a2         cmovne     r12d, eax
00000000000083a6         jmp        loc_8204
00000000000083ab         align      16

                     loc_83b0:
00000000000083b0         movabs     rax, 0xc000000000000000                     ; case 53, CODE XREF=xstrtol+430
00000000000083ba         cmp        rbp, rax
00000000000083bd         jl         loc_86f0

00000000000083c3         movabs     rax, 0x3fffffffffffffff
00000000000083cd         cmp        rbp, rax
00000000000083d0         jg         loc_87b0

00000000000083d6         add        rbp, rbp
00000000000083d9         jmp        loc_8390
00000000000083db         align      32

                     loc_83e0:
00000000000083e0         movabs     rax, 0xffc0000000000000                     ; case 32, CODE XREF=xstrtol+430
00000000000083ea         cmp        rbp, rax
00000000000083ed         jl         loc_86f0

00000000000083f3         movabs     rax, 0x3fffffffffffff
00000000000083fd         cmp        rbp, rax
0000000000008400         jg         loc_87b0

0000000000008406         shl        rbp, 0x9
000000000000840a         jmp        loc_8390
000000000000840c         align      16

                     loc_8410:
0000000000008410         movsxd     rsi, eax                                    ; case 24, CODE XREF=xstrtol+430
0000000000008413         movabs     rax, 0x8000000000000000
000000000000841d         mov        r8d, 0x7
0000000000008423         cqo
0000000000008425         xor        r11d, r11d
0000000000008428         movabs     r9, 0x7fffffffffffffff
0000000000008432         idiv       rsi
0000000000008435         mov        r10, rax
0000000000008438         jmp        loc_845f
000000000000843a         align      64

                     loc_8440:
0000000000008440         mov        rax, r9                                     ; CODE XREF=xstrtol+738
0000000000008443         cqo
0000000000008445         idiv       rsi
0000000000008448         cmp        rax, rbp
000000000000844b         jl         loc_8738

0000000000008451         imul       rbp, rsi

                     loc_8455:
0000000000008455         sub        r8d, 0x1                                    ; CODE XREF=xstrtol+756, xstrtol+1480
0000000000008459         je         loc_8580

                     loc_845f:
000000000000845f         cmp        r10, rbp                                    ; CODE XREF=xstrtol+696
0000000000008462         jle        loc_8440

0000000000008464         mov        r11d, 0x1
000000000000846a         movabs     rbp, 0x8000000000000000
0000000000008474         jmp        loc_8455
0000000000008476         align      128

                     loc_8480:
0000000000008480         movsxd     rsi, eax                                    ; case 23, CODE XREF=xstrtol+430
0000000000008483         movabs     rax, 0x8000000000000000
000000000000848d         mov        r8d, 0x8
0000000000008493         cqo
0000000000008495         xor        r11d, r11d
0000000000008498         movabs     r9, 0x7fffffffffffffff
00000000000084a2         idiv       rsi
00000000000084a5         mov        r10, rax
00000000000084a8         jmp        loc_84cf
00000000000084aa         align      16

                     loc_84b0:
00000000000084b0         mov        rax, r9                                     ; CODE XREF=xstrtol+850
00000000000084b3         cqo
00000000000084b5         idiv       rsi
00000000000084b8         cmp        rax, rbp
00000000000084bb         jl         loc_8708

00000000000084c1         imul       rbp, rsi

                     loc_84c5:
00000000000084c5         sub        r8d, 0x1                                    ; CODE XREF=xstrtol+868, xstrtol+1432
00000000000084c9         je         loc_8580

                     loc_84cf:
00000000000084cf         cmp        r10, rbp                                    ; CODE XREF=xstrtol+808
00000000000084d2         jle        loc_84b0

00000000000084d4         mov        r11d, 0x1
00000000000084da         movabs     rbp, 0x8000000000000000
00000000000084e4         jmp        loc_84c5
00000000000084e6         align      16

                     loc_84f0:
00000000000084f0         movabs     r8, 0x8000000000000000                      ; case 41, CODE XREF=xstrtol+430
00000000000084fa         movsxd     rsi, eax
00000000000084fd         mov        rax, r8
0000000000008500         cqo
0000000000008502         idiv       rsi
0000000000008505         cmp        rbp, rax
0000000000008508         jl         loc_86f0

000000000000850e         sub        r8, 0x1
0000000000008512         mov        rax, r8
0000000000008515         cqo
0000000000008517         idiv       rsi
000000000000851a         cmp        rbp, rax
000000000000851d         jg         loc_87b0

0000000000008523         imul       rbp, rsi
0000000000008527         jmp        loc_8390
000000000000852c         align      16

                     loc_8530:
0000000000008530         movsxd     rsi, eax                                    ; case 37, CODE XREF=xstrtol+430
0000000000008533         movabs     rax, 0x8000000000000000
000000000000853d         mov        r8d, 0x3
0000000000008543         cqo
0000000000008545         xor        r11d, r11d
0000000000008548         movabs     r9, 0x7fffffffffffffff
0000000000008552         idiv       rsi
0000000000008555         mov        r10, rax

                     loc_8558:
0000000000008558         cmp        r10, rbp                                    ; CODE XREF=xstrtol+1018
000000000000855b         jg         loc_8750

0000000000008561         mov        rax, r9
0000000000008564         cqo
0000000000008566         idiv       rsi
0000000000008569         cmp        rax, rbp
000000000000856c         jl         loc_87e0

0000000000008572         imul       rbp, rsi

                     loc_8576:
0000000000008576         sub        r8d, 0x1                                    ; CODE XREF=xstrtol+1504, xstrtol+1648
000000000000857a         jne        loc_8558

000000000000857c         nop        dword [rax]

                     loc_8580:
0000000000008580         or         r12d, r11d                                  ; CODE XREF=xstrtol+729, xstrtol+841, xstrtol+1113, xstrtol+1217, xstrtol+1368
0000000000008583         jmp        loc_8390
0000000000008588         align      16

                     loc_8590:
0000000000008590         movsxd     rsi, eax                                    ; case 3, CODE XREF=xstrtol+430
0000000000008593         movabs     rax, 0x8000000000000000
000000000000859d         mov        r8d, 0x6
00000000000085a3         cqo
00000000000085a5         xor        r11d, r11d
00000000000085a8         movabs     r9, 0x7fffffffffffffff
00000000000085b2         idiv       rsi
00000000000085b5         mov        r10, rax
00000000000085b8         jmp        loc_85db
00000000000085ba         align      64

                     loc_85c0:
00000000000085c0         mov        rax, r9                                     ; CODE XREF=xstrtol+1118
00000000000085c3         cqo
00000000000085c5         idiv       rsi
00000000000085c8         cmp        rax, rbp
00000000000085cb         jl         loc_8768

00000000000085d1         imul       rbp, rsi

                     loc_85d5:
00000000000085d5         sub        r8d, 0x1                                    ; CODE XREF=xstrtol+1136, xstrtol+1528
00000000000085d9         je         loc_8580

                     loc_85db:
00000000000085db         cmp        r10, rbp                                    ; CODE XREF=xstrtol+1080
00000000000085de         jle        loc_85c0

00000000000085e0         mov        r11d, 0x1
00000000000085e6         movabs     rbp, 0x8000000000000000
00000000000085f0         jmp        loc_85d5
00000000000085f2         align      8

                     loc_85f8:
00000000000085f8         movsxd     rsi, eax                                    ; case 14, CODE XREF=xstrtol+430
00000000000085fb         movabs     rax, 0x8000000000000000
0000000000008605         mov        r8d, 0x5
000000000000860b         cqo
000000000000860d         xor        r11d, r11d
0000000000008610         movabs     r9, 0x7fffffffffffffff
000000000000861a         idiv       rsi
000000000000861d         mov        r10, rax
0000000000008620         jmp        loc_8647
0000000000008622         align      8

                     loc_8628:
0000000000008628         mov        rax, r9                                     ; CODE XREF=xstrtol+1226
000000000000862b         cqo
000000000000862d         idiv       rsi
0000000000008630         cmp        rax, rbp
0000000000008633         jl         loc_8780

0000000000008639         imul       rbp, rsi

                     loc_863d:
000000000000863d         sub        r8d, 0x1                                    ; CODE XREF=xstrtol+1244, xstrtol+1552
0000000000008641         je         loc_8580

                     loc_8647:
0000000000008647         cmp        r10, rbp                                    ; CODE XREF=xstrtol+1184
000000000000864a         jle        loc_8628

000000000000864c         mov        r11d, 0x1
0000000000008652         movabs     rbp, 0x8000000000000000
000000000000865c         jmp        loc_863d
000000000000865e         align      32

                     loc_8660:
0000000000008660         movabs     rax, 0xffe0000000000000                     ; case 0, CODE XREF=xstrtol+430
000000000000866a         cmp        rbp, rax
000000000000866d         jl         loc_86f0

0000000000008673         movabs     rax, 0x1fffffffffffff
000000000000867d         cmp        rbp, rax
0000000000008680         jg         loc_87b0

0000000000008686         shl        rbp, 0xa
000000000000868a         jmp        loc_8390
000000000000868f         align      16

                     loc_8690:
0000000000008690         movsxd     rsi, eax                                    ; case 50, CODE XREF=xstrtol+430
0000000000008693         movabs     rax, 0x8000000000000000
000000000000869d         mov        r8d, 0x4
00000000000086a3         cqo
00000000000086a5         xor        r11d, r11d
00000000000086a8         movabs     r9, 0x7fffffffffffffff
00000000000086b2         idiv       rsi
00000000000086b5         mov        r10, rax

                     loc_86b8:
00000000000086b8         cmp        r10, rbp                                    ; CODE XREF=xstrtol+1366
00000000000086bb         jg         loc_8720

00000000000086bd         mov        rax, r9
00000000000086c0         cqo
00000000000086c2         idiv       rsi
00000000000086c5         cmp        rax, rbp
00000000000086c8         jl         loc_8798

00000000000086ce         imul       rbp, rsi

                     loc_86d2:
00000000000086d2         sub        r8d, 0x1                                    ; CODE XREF=xstrtol+1456, xstrtol+1576
00000000000086d6         jne        loc_86b8

00000000000086d8         jmp        loc_8580
00000000000086dd         align      32

                     loc_86e0:
00000000000086e0         mov        r12d, 0x4                                   ; CODE XREF=xstrtol+203
00000000000086e6         jmp        loc_8207
00000000000086eb         align      16

                     loc_86f0:
00000000000086f0         mov        r12d, 0x1                                   ; CODE XREF=xstrtol+573, xstrtol+621, xstrtol+904, xstrtol+1261
00000000000086f6         movabs     rbp, 0x8000000000000000
0000000000008700         jmp        loc_8390
0000000000008705         align      8

                     loc_8708:
0000000000008708         mov        r11d, 0x1                                   ; CODE XREF=xstrtol+827
000000000000870e         movabs     rbp, 0x7fffffffffffffff
0000000000008718         jmp        loc_84c5
000000000000871d         align      32

                     loc_8720:
0000000000008720         mov        r11d, 0x1                                   ; CODE XREF=xstrtol+1339
0000000000008726         movabs     rbp, 0x8000000000000000
0000000000008730         jmp        loc_86d2
0000000000008732         align      8

                     loc_8738:
0000000000008738         mov        r11d, 0x1                                   ; CODE XREF=xstrtol+715
000000000000873e         movabs     rbp, 0x7fffffffffffffff
0000000000008748         jmp        loc_8455
000000000000874d         align      16

                     loc_8750:
0000000000008750         mov        r11d, 0x1                                   ; CODE XREF=xstrtol+987
0000000000008756         movabs     rbp, 0x8000000000000000
0000000000008760         jmp        loc_8576
0000000000008765         align      8

                     loc_8768:
0000000000008768         mov        r11d, 0x1                                   ; CODE XREF=xstrtol+1099
000000000000876e         movabs     rbp, 0x7fffffffffffffff
0000000000008778         jmp        loc_85d5
000000000000877d         align      128

                     loc_8780:
0000000000008780         mov        r11d, 0x1                                   ; CODE XREF=xstrtol+1203
0000000000008786         movabs     rbp, 0x7fffffffffffffff
0000000000008790         jmp        loc_863d
0000000000008795         align      8

                     loc_8798:
0000000000008798         mov        r11d, 0x1                                   ; CODE XREF=xstrtol+1352
000000000000879e         movabs     rbp, 0x7fffffffffffffff
00000000000087a8         jmp        loc_86d2
00000000000087ad         align      16

                     loc_87b0:
00000000000087b0         mov        r12d, 0x1                                   ; CODE XREF=xstrtol+592, xstrtol+640, xstrtol+925, xstrtol+1280
00000000000087b6         movabs     rbp, 0x7fffffffffffffff
00000000000087c0         jmp        loc_8390
00000000000087c5         align      8

                     loc_87c8:
00000000000087c8         xor        edi, edi                                    ; CODE XREF=xstrtol+348
00000000000087ca         cmp        byte [rcx+2], 0x42
00000000000087ce         mov        eax, 0x400
00000000000087d3         sete       dil
00000000000087d7         lea        edi, dword [rdi+rdi+1]
00000000000087db         jmp        loc_8312

                     loc_87e0:
00000000000087e0         mov        r11d, 0x1                                   ; CODE XREF=xstrtol+1004
00000000000087e6         movabs     rbp, 0x7fffffffffffffff
00000000000087f0         jmp        loc_8576

                     loc_87f5:
00000000000087f5         mov        eax, 0x1                                    ; CODE XREF=xstrtol+459, xstrtol+499
00000000000087fa         mov        rbp, r8
00000000000087fd         jmp        loc_8388

                     loc_8802:
0000000000008802         mov        eax, 0x1                                    ; CODE XREF=xstrtol+486, xstrtol+508
0000000000008807         mov        rbp, r10
000000000000880a         jmp        loc_8388

                     loc_880f:
000000000000880f         lea        rcx, qword [__PRETTY_FUNCTION__.4162]       ; argument "__function" for method j___assert_fail, "xstrtol", CODE XREF=xstrtol+33
0000000000008816         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/xstrtol.c"
000000000000881d         lea        rdi, qword [a0StrtolbaseStr]                ; argument "__assertion" for method j___assert_fail, "0 <= strtol_base && strtol_base <= 36"
0000000000008824         mov        edx, 0x54                                   ; argument "__line" for method j___assert_fail
0000000000008829         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_882e:
000000000000882e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=xstrtol+152
                        ; endp
0000000000008833         align      64                                          ; End of unwind block (FDE at 0xf5f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80


                     xstrtoumax:
0000000000008840         push       r15                                         ; Begin of unwind block (FDE at 0xf644), CODE XREF=xnumtoumax+53
0000000000008842         push       r14
0000000000008844         push       r13
0000000000008846         push       r12
0000000000008848         push       rbp
0000000000008849         push       rbx
000000000000884a         sub        rsp, 0x28
000000000000884e         mov        rax, qword [fs:0x28]
0000000000008857         mov        qword [rsp+0x58+var_40], rax
000000000000885c         xor        eax, eax
000000000000885e         cmp        edx, 0x24
0000000000008861         ja         loc_8bc5

0000000000008867         lea        rax, qword [rsp+0x58+var_48]
000000000000886c         mov        r15, rsi
000000000000886f         test       rsi, rsi
0000000000008872         mov        rbp, rdi
0000000000008875         mov        dword [rsp+0x58+var_50], edx
0000000000008879         mov        r14, rcx
000000000000887c         mov        r13, r8
000000000000887f         cmove      r15, rax
0000000000008883         call       j___errno_location                          ; __errno_location
0000000000008888         mov        dword [rax], 0x0
000000000000888e         mov        r12, rax
0000000000008891         movzx      ebx, byte [rbp]
0000000000008895         call       j___ctype_b_loc                             ; __ctype_b_loc
000000000000889a         mov        edx, dword [rsp+0x58+var_50]
000000000000889e         mov        rsi, qword [rax]
00000000000088a1         mov        rax, rbp
00000000000088a4         jmp        loc_88b7
00000000000088a6         align      16

                     loc_88b0:
00000000000088b0         add        rax, 0x1                                    ; CODE XREF=xstrtoumax+127
00000000000088b4         movzx      ebx, byte [rax]

                     loc_88b7:
00000000000088b7         movzx      ecx, bl                                     ; CODE XREF=xstrtoumax+100
00000000000088ba         test       byte [rsi+rcx*2+1], 0x20
00000000000088bf         jne        loc_88b0

00000000000088c1         cmp        bl, 0x2d
00000000000088c4         je         loc_8918

00000000000088c6         xor        ecx, ecx
00000000000088c8         mov        rsi, r15
00000000000088cb         mov        rdi, rbp
00000000000088ce         call       j___strtoul_internal                        ; __strtoul_internal
00000000000088d3         mov        rcx, qword [r15]
00000000000088d6         mov        rbx, rax
00000000000088d9         cmp        rcx, rbp
00000000000088dc         je         loc_8908

00000000000088de         mov        eax, dword [r12]
00000000000088e2         test       eax, eax
00000000000088e4         je         loc_8948

00000000000088e6         cmp        eax, 0x22
00000000000088e9         mov        ebp, 0x1
00000000000088ee         jne        loc_8918

                     loc_88f0:
00000000000088f0         test       r13, r13                                    ; CODE XREF=xstrtoumax+266
00000000000088f3         je         loc_88fe

00000000000088f5         movzx      r12d, byte [rcx]
00000000000088f9         test       r12b, r12b
00000000000088fc         jne        loc_8977

                     loc_88fe:
00000000000088fe         mov        qword [r14], rbx                            ; CODE XREF=xstrtoumax+179
0000000000008901         jmp        loc_891d
0000000000008903         align      8

                     loc_8908:
0000000000008908         test       r13, r13                                    ; CODE XREF=xstrtoumax+156
000000000000890b         mov        qword [rsp+0x58+var_50], rcx
0000000000008910         jne        loc_8950

0000000000008912         nop        word [rax+rax]

                     loc_8918:
0000000000008918         mov        ebp, 0x4                                    ; CODE XREF=xstrtoumax+132, xstrtoumax+174, xstrtoumax+280, xstrtoumax+309

                     loc_891d:
000000000000891d         mov        rdi, qword [rsp+0x58+var_40]                ; CODE XREF=xstrtoumax+193, xstrtoumax+535, xstrtoumax+546
0000000000008922         xor        rdi, qword [fs:0x28]
000000000000892b         mov        eax, ebp
000000000000892d         jne        loc_8bc0

0000000000008933         add        rsp, 0x28
0000000000008937         pop        rbx
0000000000008938         pop        rbp
0000000000008939         pop        r12
000000000000893b         pop        r13
000000000000893d         pop        r14
000000000000893f         pop        r15
0000000000008941         ret
                        ; endp
0000000000008942         align      8

                     loc_8948:
0000000000008948         xor        ebp, ebp                                    ; CODE XREF=xstrtoumax+164
000000000000894a         jmp        loc_88f0
000000000000894c         align      16

                     loc_8950:
0000000000008950         movzx      r12d, byte [rbp]                            ; CODE XREF=xstrtoumax+208
0000000000008955         test       r12b, r12b
0000000000008958         je         loc_8918

000000000000895a         movsx      esi, r12b                                   ; argument "__c" for method j_strchr
000000000000895e         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000008961         xor        ebp, ebp
0000000000008963         call       j_strchr                                    ; strchr
0000000000008968         test       rax, rax
000000000000896b         mov        ebx, 0x1
0000000000008970         mov        rcx, qword [rsp+0x58+var_50]
0000000000008975         je         loc_8918

                     loc_8977:
0000000000008977         movsx      esi, r12b                                   ; argument "__c" for method j_strchr, CODE XREF=xstrtoumax+188
000000000000897b         mov        rdi, r13                                    ; argument "__s" for method j_strchr
000000000000897e         mov        qword [rsp+0x58+var_50], rcx
0000000000008983         call       j_strchr                                    ; strchr
0000000000008988         test       rax, rax
000000000000898b         mov        rcx, qword [rsp+0x58+var_50]
0000000000008990         je         loc_8a5c

0000000000008996         lea        eax, dword [r12-0x45]
000000000000899b         cmp        al, 0x2f
000000000000899d         ja         loc_89f0

000000000000899f         movabs     rdx, 0x814400308945
00000000000089a9         bt         rdx, rax
00000000000089ad         jae        loc_89f0

00000000000089af         mov        esi, 0x30                                   ; argument "__c" for method j_strchr
00000000000089b4         mov        rdi, r13                                    ; argument "__s" for method j_strchr
00000000000089b7         mov        qword [rsp+0x58+var_50], rcx
00000000000089bc         call       j_strchr                                    ; strchr
00000000000089c1         test       rax, rax
00000000000089c4         mov        rcx, qword [rsp+0x58+var_50]
00000000000089c9         je         loc_89f0

00000000000089cb         movzx      eax, byte [rcx+1]
00000000000089cf         cmp        al, 0x44
00000000000089d1         je         loc_89df

00000000000089d3         cmp        al, 0x69
00000000000089d5         je         loc_8ba8

00000000000089db         cmp        al, 0x42
00000000000089dd         jne        loc_89f0

                     loc_89df:
00000000000089df         mov        edi, 0x2                                    ; CODE XREF=xstrtoumax+401
00000000000089e4         mov        esi, 0x3e8
00000000000089e9         jmp        loc_89fa
00000000000089eb         align      16

                     loc_89f0:
00000000000089f0         mov        edi, 0x1                                    ; CODE XREF=xstrtoumax+349, xstrtoumax+365, xstrtoumax+393, xstrtoumax+413
00000000000089f5         mov        esi, 0x400

                     loc_89fa:
00000000000089fa         sub        r12d, 0x42                                  ; CODE XREF=xstrtoumax+425, xstrtoumax+891
00000000000089fe         cmp        r12b, 0x35
0000000000008a02         ja         loc_8a5c

0000000000008a04         lea        rdx, qword [switch_table_e488]              ; switch_table_e488
0000000000008a0b         movzx      r12d, r12b
0000000000008a0f         movsxd     rax, dword [rdx+r12*4]
0000000000008a13         add        rax, rdx
0000000000008a16         jmp        rax                                         ; switch statement using table at 0xe488, with 54 cases, 0x8a18,0x8a40,0x8a5c,0x8a67,0x8a7d,0x8a94,0x8aba,0x8adf,0x8aff,0x8b20,0x8b43,0x8b66,0x8b7c

                     loc_8a18:
0000000000008a18         mov        rax, rbx                                    ; case 43, CODE XREF=xstrtoumax+470
0000000000008a1b         mul        rsi
0000000000008a1e         jo         loc_8c11

0000000000008a24         xor        r8d, r8d

                     loc_8a27:
0000000000008a27         mul        rsi                                         ; CODE XREF=xstrtoumax+846, xstrtoumax+862, xstrtoumax+987
0000000000008a2a         jo         loc_8c02

0000000000008a30         mov        rbx, rax

                     loc_8a33:
0000000000008a33         or         ebp, r8d                                    ; CODE XREF=xstrtoumax+972
0000000000008a36         nop        word [cs:rax+rax]

                     loc_8a40:
0000000000008a40         movsxd     rdi, edi                                    ; case 33, CODE XREF=xstrtoumax+470, xstrtoumax+571, xstrtoumax+594, xstrtoumax+632, xstrtoumax+712, xstrtoumax+727, xstrtoumax+823
0000000000008a43         mov        eax, ebp
0000000000008a45         add        rcx, rdi
0000000000008a48         or         eax, 0x2
0000000000008a4b         mov        qword [r15], rcx
0000000000008a4e         cmp        byte [rcx], 0x0
0000000000008a51         mov        qword [r14], rbx
0000000000008a54         cmovne     ebp, eax
0000000000008a57         jmp        loc_891d

                     loc_8a5c:
0000000000008a5c         mov        qword [r14], rbx                            ; case 52, CODE XREF=xstrtoumax+336, xstrtoumax+450, xstrtoumax+470
0000000000008a5f         or         ebp, 0x2
0000000000008a62         jmp        loc_891d

                     loc_8a67:
0000000000008a67         mov        edx, 0x2                                    ; case 53, CODE XREF=xstrtoumax+470
0000000000008a6c         mov        rax, rdx
0000000000008a6f         mul        rbx
0000000000008a72         jo         loc_8b0e

0000000000008a78         add        rbx, rbx
0000000000008a7b         jmp        loc_8a40

                     loc_8a7d:
0000000000008a7d         mov        edx, 0x200                                  ; case 32, CODE XREF=xstrtoumax+470
0000000000008a82         mov        rax, rdx
0000000000008a85         mul        rbx
0000000000008a88         jo         loc_8b0e

0000000000008a8e         shl        rbx, 0x9
0000000000008a92         jmp        loc_8a40

                     loc_8a94:
0000000000008a94         mov        r8d, 0x7                                    ; case 24, CODE XREF=xstrtoumax+470
0000000000008a9a         xor        r9d, r9d
0000000000008a9d         nop        dword [rax]

                     loc_8aa0:
0000000000008aa0         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+627
0000000000008aa3         mul        rsi
0000000000008aa6         mov        rbx, rax
0000000000008aa9         jo         loc_8c3e

                     loc_8aaf:
0000000000008aaf         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1032
0000000000008ab3         jne        loc_8aa0

                     loc_8ab5:
0000000000008ab5         or         ebp, r9d                                    ; CODE XREF=xstrtoumax+669, xstrtoumax+701, xstrtoumax+766, xstrtoumax+801
0000000000008ab8         jmp        loc_8a40

                     loc_8aba:
0000000000008aba         mov        r8d, 0x8                                    ; case 23, CODE XREF=xstrtoumax+470
0000000000008ac0         xor        r9d, r9d
0000000000008ac3         nop        dword [rax+rax]

                     loc_8ac8:
0000000000008ac8         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+667
0000000000008acb         mul        rsi
0000000000008ace         mov        rbx, rax
0000000000008ad1         jo         loc_8c20

                     loc_8ad7:
0000000000008ad7         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1002
0000000000008adb         jne        loc_8ac8

0000000000008add         jmp        loc_8ab5

                     loc_8adf:
0000000000008adf         mov        r8d, 0x4                                    ; case 50, CODE XREF=xstrtoumax+470
0000000000008ae5         xor        r9d, r9d

                     loc_8ae8:
0000000000008ae8         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+699
0000000000008aeb         mul        rsi
0000000000008aee         mov        rbx, rax
0000000000008af1         jo         loc_8bf3

                     loc_8af7:
0000000000008af7         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+957
0000000000008afb         jne        loc_8ae8

0000000000008afd         jmp        loc_8ab5

                     loc_8aff:
0000000000008aff         mov        rax, rbx                                    ; case 41, CODE XREF=xstrtoumax+470
0000000000008b02         mul        rsi
0000000000008b05         mov        rbx, rax
0000000000008b08         jno        loc_8a40

                     loc_8b0e:
0000000000008b0e         mov        ebp, 0x1                                    ; CODE XREF=xstrtoumax+562, xstrtoumax+584, xstrtoumax+817
0000000000008b13         or         rbx, 0xffffffffffffffff
0000000000008b17         jmp        loc_8a40
0000000000008b1c         align      32

                     loc_8b20:
0000000000008b20         mov        r8d, 0x5                                    ; case 14, CODE XREF=xstrtoumax+470
0000000000008b26         xor        r9d, r9d

                     loc_8b29:
0000000000008b29         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+764
0000000000008b2c         mul        rsi
0000000000008b2f         mov        rbx, rax
0000000000008b32         jo         loc_8c2f

                     loc_8b38:
0000000000008b38         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1017
0000000000008b3c         jne        loc_8b29

0000000000008b3e         jmp        loc_8ab5

                     loc_8b43:
0000000000008b43         mov        r8d, 0x6                                    ; case 3, CODE XREF=xstrtoumax+470
0000000000008b49         xor        r9d, r9d

                     loc_8b4c:
0000000000008b4c         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+799
0000000000008b4f         mul        rsi
0000000000008b52         mov        rbx, rax
0000000000008b55         jo         loc_8be4

                     loc_8b5b:
0000000000008b5b         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+942
0000000000008b5f         jne        loc_8b4c

0000000000008b61         jmp        loc_8ab5

                     loc_8b66:
0000000000008b66         mov        edx, 0x400                                  ; case 0, CODE XREF=xstrtoumax+470
0000000000008b6b         mov        rax, rdx
0000000000008b6e         mul        rbx
0000000000008b71         jo         loc_8b0e

0000000000008b73         shl        rbx, 0xa
0000000000008b77         jmp        loc_8a40

                     loc_8b7c:
0000000000008b7c         mov        rax, rbx                                    ; case 37, CODE XREF=xstrtoumax+470
0000000000008b7f         mul        rsi
0000000000008b82         jo         loc_8c4d

0000000000008b88         xor        r8d, r8d

                     loc_8b8b:
0000000000008b8b         mul        rsi                                         ; CODE XREF=xstrtoumax+1047
0000000000008b8e         jno        loc_8a27

0000000000008b94         mov        r8d, 0x1
0000000000008b9a         or         rax, 0xffffffffffffffff
0000000000008b9e         jmp        loc_8a27
0000000000008ba3         align      8

                     loc_8ba8:
0000000000008ba8         xor        edi, edi                                    ; CODE XREF=xstrtoumax+405
0000000000008baa         cmp        byte [rcx+2], 0x42
0000000000008bae         mov        esi, 0x400
0000000000008bb3         sete       dil
0000000000008bb7         lea        edi, dword [rdi+rdi+1]
0000000000008bbb         jmp        loc_89fa

                     loc_8bc0:
0000000000008bc0         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=xstrtoumax+237
                        ; endp

                     loc_8bc5:
0000000000008bc5         lea        rcx, qword [__PRETTY_FUNCTION__.4162_e560]  ; argument "__function" for method j___assert_fail, "xstrtoumax", CODE XREF=xstrtoumax+33
0000000000008bcc         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/xstrtol.c"
0000000000008bd3         lea        rdi, qword [a0StrtolbaseStr]                ; argument "__assertion" for method j___assert_fail, "0 <= strtol_base && strtol_base <= 36"
0000000000008bda         mov        edx, 0x54                                   ; argument "__line" for method j___assert_fail
0000000000008bdf         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_8be4:
0000000000008be4         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+789
0000000000008bea         or         rbx, 0xffffffffffffffff
0000000000008bee         jmp        loc_8b5b

                     loc_8bf3:
0000000000008bf3         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+689
0000000000008bf9         or         rbx, 0xffffffffffffffff
0000000000008bfd         jmp        loc_8af7

                     loc_8c02:
0000000000008c02         mov        r8d, 0x1                                    ; CODE XREF=xstrtoumax+490
0000000000008c08         or         rbx, 0xffffffffffffffff
0000000000008c0c         jmp        loc_8a33

                     loc_8c11:
0000000000008c11         or         rax, 0xffffffffffffffff                     ; CODE XREF=xstrtoumax+478
0000000000008c15         mov        r8d, 0x1
0000000000008c1b         jmp        loc_8a27

                     loc_8c20:
0000000000008c20         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+657
0000000000008c26         or         rbx, 0xffffffffffffffff
0000000000008c2a         jmp        loc_8ad7

                     loc_8c2f:
0000000000008c2f         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+754
0000000000008c35         or         rbx, 0xffffffffffffffff
0000000000008c39         jmp        loc_8b38

                     loc_8c3e:
0000000000008c3e         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+617
0000000000008c44         or         rbx, 0xffffffffffffffff
0000000000008c48         jmp        loc_8aaf

                     loc_8c4d:
0000000000008c4d         mov        r8d, 0x1                                    ; CODE XREF=xstrtoumax+834
0000000000008c53         or         rax, 0xffffffffffffffff
0000000000008c57         jmp        loc_8b8b
0000000000008c5c         align      32                                          ; End of unwind block (FDE at 0xf644)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int32_t, -104


                     rpl_fcntl:
0000000000008c60         push       r12                                         ; Begin of unwind block (FDE at 0xf694), CODE XREF=main+648, main+676
0000000000008c62         push       rbp
0000000000008c63         mov        ebp, edi
0000000000008c65         push       rbx
0000000000008c66         sub        rsp, 0x50
0000000000008c6a         mov        rax, qword [fs:0x28]
0000000000008c73         mov        qword [rsp+0x68+var_50], rax
0000000000008c78         xor        eax, eax
0000000000008c7a         lea        rax, qword [rsp+0x68+arg_0]
0000000000008c7f         test       esi, esi
0000000000008c81         mov        qword [rsp+0x68+var_38], rdx
0000000000008c86         mov        qword [rsp+0x68+var_30], rcx
0000000000008c8b         mov        qword [rsp+0x68+var_28], r8
0000000000008c90         mov        qword [rsp+0x68+var_60], rax
0000000000008c95         lea        rax, qword [rsp+0x68+var_48]
0000000000008c9a         mov        qword [rsp+0x68+var_20], r9
0000000000008c9f         mov        dword [rsp+0x68+var_68], 0x10
0000000000008ca6         mov        qword [rsp+0x68+var_58], rax
0000000000008cab         je         loc_8eb2

0000000000008cb1         cmp        esi, 0x406
0000000000008cb7         jne        loc_8d00

0000000000008cb9         mov        rax, qword [rsp+0x68+var_58]
0000000000008cbe         cmp        dword [have_dupfd_cloexec.3326], 0x0        ; have_dupfd_cloexec.3326
0000000000008cc5         mov        dword [rsp+0x68+var_68], 0x18
0000000000008ccc         mov        r12d, dword [rax+0x10]
0000000000008cd0         mov        edx, r12d
0000000000008cd3         js         loc_8e03

0000000000008cd9         xor        eax, eax
0000000000008cdb         mov        esi, 0x406                                  ; argument "__cmd" for method j_fcntl
0000000000008ce0         call       j_fcntl                                     ; fcntl
0000000000008ce5         test       eax, eax
0000000000008ce7         mov        ebx, eax
0000000000008ce9         js         loc_8e78

                     loc_8cef:
0000000000008cef         mov        dword [have_dupfd_cloexec.3326], 0x1        ; have_dupfd_cloexec.3326, CODE XREF=rpl_fcntl+544
0000000000008cf9         jmp        loc_8d40
0000000000008cfb         align      256

                     loc_8d00:
0000000000008d00         cmp        esi, 0xb                                    ; CODE XREF=rpl_fcntl+87
0000000000008d03         je         loc_8d30

0000000000008d05         jg         loc_8d60

0000000000008d07         cmp        esi, 0x4
0000000000008d0a         je         loc_8de0

0000000000008d10         jg         loc_8dd0

0000000000008d16         cmp        esi, 0x2
0000000000008d19         je         loc_8de0

0000000000008d1f         jg         loc_8d30

0000000000008d21         cmp        esi, 0x1
0000000000008d24         jne        loc_8d88

0000000000008d26         nop        word [cs:rax+rax]

                     loc_8d30:
0000000000008d30         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl, CODE XREF=rpl_fcntl+163, rpl_fcntl+191, rpl_fcntl+278, rpl_fcntl+344, rpl_fcntl+358, rpl_fcntl+371
0000000000008d32         xor        eax, eax
0000000000008d34         call       j_fcntl                                     ; fcntl
0000000000008d39         mov        ebx, eax
0000000000008d3b         nop        dword [rax+rax]

                     loc_8d40:
0000000000008d40         mov        rcx, qword [rsp+0x68+var_50]                ; CODE XREF=rpl_fcntl+153, rpl_fcntl+327, rpl_fcntl+414, rpl_fcntl+432, rpl_fcntl+445, rpl_fcntl+491, rpl_fcntl+524, rpl_fcntl+568, rpl_fcntl+613
0000000000008d45         xor        rcx, qword [fs:0x28]
0000000000008d4e         mov        eax, ebx
0000000000008d50         jne        loc_8ead

0000000000008d56         add        rsp, 0x50
0000000000008d5a         pop        rbx
0000000000008d5b         pop        rbp
0000000000008d5c         pop        r12
0000000000008d5e         ret
                        ; endp
0000000000008d5f         align      32

                     loc_8d60:
0000000000008d60         cmp        esi, 0x407                                  ; CODE XREF=rpl_fcntl+165
0000000000008d66         jg         loc_8db0

0000000000008d68         cmp        esi, 0x406
0000000000008d6e         jge        loc_8de0

0000000000008d70         cmp        esi, 0x401
0000000000008d76         je         loc_8d30

0000000000008d78         cmp        esi, 0x402
0000000000008d7e         je         loc_8de0

0000000000008d80         cmp        esi, 0x400
0000000000008d86         je         loc_8de0

                     loc_8d88:
0000000000008d88         mov        eax, dword [rsp+0x68+var_68]                ; CODE XREF=rpl_fcntl+196, rpl_fcntl+356, rpl_fcntl+382
0000000000008d8b         cmp        eax, 0x2f
0000000000008d8e         ja         loc_8eca

0000000000008d94         add        rax, qword [rsp+0x68+var_58]

                     loc_8d99:
0000000000008d99         mov        rdx, qword [rax]                            ; CODE XREF=rpl_fcntl+623
0000000000008d9c         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
0000000000008d9e         xor        eax, eax
0000000000008da0         call       j_fcntl                                     ; fcntl
0000000000008da5         mov        ebx, eax
0000000000008da7         jmp        loc_8d40
0000000000008da9         align      16

                     loc_8db0:
0000000000008db0         cmp        esi, 0x409                                  ; CODE XREF=rpl_fcntl+262
0000000000008db6         je         loc_8de0

0000000000008db8         jl         loc_8d30

0000000000008dbe         cmp        esi, 0x40a
0000000000008dc4         jne        loc_8d88

0000000000008dc6         jmp        loc_8d30
0000000000008dcb         align      16

                     loc_8dd0:
0000000000008dd0         cmp        esi, 0x9                                    ; CODE XREF=rpl_fcntl+176
0000000000008dd3         je         loc_8d30

0000000000008dd9         jg         loc_8de0

0000000000008ddb         cmp        esi, 0x8
0000000000008dde         jne        loc_8d88

                     loc_8de0:
0000000000008de0         mov        eax, dword [rsp+0x68+var_68]                ; CODE XREF=rpl_fcntl+170, rpl_fcntl+185, rpl_fcntl+270, rpl_fcntl+286, rpl_fcntl+294, rpl_fcntl+342, rpl_fcntl+377
0000000000008de3         cmp        eax, 0x2f
0000000000008de6         ja         loc_8ed4

0000000000008dec         add        rax, qword [rsp+0x68+var_58]

                     loc_8df1:
0000000000008df1         mov        edx, dword [rax]                            ; CODE XREF=rpl_fcntl+633
0000000000008df3         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
0000000000008df5         xor        eax, eax
0000000000008df7         call       j_fcntl                                     ; fcntl
0000000000008dfc         mov        ebx, eax
0000000000008dfe         jmp        loc_8d40

                     loc_8e03:
0000000000008e03         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl, CODE XREF=rpl_fcntl+115
0000000000008e05         xor        eax, eax
0000000000008e07         call       j_fcntl                                     ; fcntl
0000000000008e0c         test       eax, eax
0000000000008e0e         mov        ebx, eax
0000000000008e10         js         loc_8d40

0000000000008e16         cmp        dword [have_dupfd_cloexec.3326], 0xffffffff ; have_dupfd_cloexec.3326
0000000000008e1d         jne        loc_8d40

                     loc_8e23:
0000000000008e23         xor        eax, eax                                    ; CODE XREF=rpl_fcntl+584
0000000000008e25         mov        esi, 0x1                                    ; argument "__cmd" for method j_fcntl
0000000000008e2a         mov        edi, ebx                                    ; argument "__fd" for method j_fcntl
0000000000008e2c         call       j_fcntl                                     ; fcntl
0000000000008e31         test       eax, eax
0000000000008e33         js         loc_8e51

0000000000008e35         or         eax, 0x1
0000000000008e38         mov        esi, 0x2                                    ; argument "__cmd" for method j_fcntl
0000000000008e3d         mov        edi, ebx                                    ; argument "__fd" for method j_fcntl
0000000000008e3f         mov        edx, eax
0000000000008e41         xor        eax, eax
0000000000008e43         call       j_fcntl                                     ; fcntl
0000000000008e48         cmp        eax, 0xffffffff
0000000000008e4b         jne        loc_8d40

                     loc_8e51:
0000000000008e51         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fcntl+467
0000000000008e56         mov        r12d, dword [rax]
0000000000008e59         mov        rbp, rax
0000000000008e5c         mov        edi, ebx                                    ; argument "__fd" for method j_close
0000000000008e5e         call       j_close                                     ; close
0000000000008e63         mov        ebx, 0xffffffff
0000000000008e68         mov        dword [rbp], r12d
0000000000008e6c         jmp        loc_8d40
0000000000008e71         align      8

                     loc_8e78:
0000000000008e78         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_fcntl+137
0000000000008e7d         cmp        dword [rax], 0x16
0000000000008e80         jne        loc_8cef

0000000000008e86         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl
0000000000008e88         xor        eax, eax
0000000000008e8a         mov        edx, r12d
0000000000008e8d         mov        edi, ebp                                    ; argument "__fd" for method j_fcntl
0000000000008e8f         call       j_fcntl                                     ; fcntl
0000000000008e94         test       eax, eax
0000000000008e96         mov        ebx, eax
0000000000008e98         js         loc_8d40

0000000000008e9e         mov        dword [have_dupfd_cloexec.3326], 0xffffffff ; have_dupfd_cloexec.3326
0000000000008ea8         jmp        loc_8e23

                     loc_8ead:
0000000000008ead         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_fcntl+240
                        ; endp

                     loc_8eb2:
0000000000008eb2         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=rpl_fcntl+75
0000000000008eb7         xor        esi, esi                                    ; argument "__cmd" for method j_fcntl
0000000000008eb9         mov        edx, dword [rax+0x10]
0000000000008ebc         xor        eax, eax
0000000000008ebe         call       j_fcntl                                     ; fcntl
0000000000008ec3         mov        ebx, eax
0000000000008ec5         jmp        loc_8d40

                     loc_8eca:
0000000000008eca         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=rpl_fcntl+302
0000000000008ecf         jmp        loc_8d99

                     loc_8ed4:
0000000000008ed4         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=rpl_fcntl+390
0000000000008ed9         jmp        loc_8df1
0000000000008ede         align      32                                          ; End of unwind block (FDE at 0xf694)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
0000000000008ee0         push       r13                                         ; Begin of unwind block (FDE at 0xf6cc), CODE XREF=sub_6340+534
0000000000008ee2         push       r12
0000000000008ee4         mov        r13, rsi
0000000000008ee7         push       rbp
0000000000008ee8         push       rbx
0000000000008ee9         mov        rbx, rdi
0000000000008eec         mov        r12, rdx
0000000000008eef         sub        rsp, 0x18
0000000000008ef3         mov        rax, qword [fs:0x28]
0000000000008efc         mov        qword [rsp+0x38+var_30], rax
0000000000008f01         xor        eax, eax
0000000000008f03         lea        rax, qword [rsp+0x38+var_34]
0000000000008f08         test       rdi, rdi
0000000000008f0b         cmove      rbx, rax
0000000000008f0f         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
0000000000008f12         call       j_mbrtowc                                   ; mbrtowc
0000000000008f17         cmp        rax, 0xfffffffffffffffd
0000000000008f1b         mov        rbp, rax
0000000000008f1e         jbe        loc_8f40

0000000000008f20         test       r12, r12
0000000000008f23         je         loc_8f40

0000000000008f25         xor        edi, edi
0000000000008f27         call       hard_locale                                 ; hard_locale
0000000000008f2c         test       al, al
0000000000008f2e         jne        loc_8f40

0000000000008f30         movzx      eax, byte [r13]
0000000000008f35         mov        ebp, 0x1
0000000000008f3a         mov        dword [rbx], eax
0000000000008f3c         nop        dword [rax]

                     loc_8f40:
0000000000008f40         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
0000000000008f45         xor        rdx, qword [fs:0x28]
0000000000008f4e         mov        rax, rbp
0000000000008f51         jne        loc_8f5e

0000000000008f53         add        rsp, 0x18
0000000000008f57         pop        rbx
0000000000008f58         pop        rbp
0000000000008f59         pop        r12
0000000000008f5b         pop        r13
0000000000008f5d         ret
                        ; endp

                     loc_8f5e:
0000000000008f5e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
0000000000008f63         align      16                                          ; End of unwind block (FDE at 0xf6cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24


                     rpl_vasprintf:
0000000000008f70         push       rbx                                         ; Begin of unwind block (FDE at 0xf70c), CODE XREF=wrapf+166
0000000000008f71         mov        rax, rsi
0000000000008f74         mov        rbx, rdi
0000000000008f77         xor        edi, edi
0000000000008f79         sub        rsp, 0x10
0000000000008f7d         mov        rcx, qword [fs:0x28]
0000000000008f86         mov        qword [rsp+0x18+var_10], rcx
0000000000008f8b         xor        ecx, ecx
0000000000008f8d         mov        rsi, rsp
0000000000008f90         mov        rcx, rdx
0000000000008f93         mov        rdx, rax
0000000000008f96         call       vasnprintf                                  ; vasnprintf
0000000000008f9b         test       rax, rax
0000000000008f9e         je         loc_8fe2

0000000000008fa0         mov        rdx, qword [rsp+0x18+var_18]
0000000000008fa4         cmp        rdx, 0x7fffffff
0000000000008fab         ja         loc_8fc8

0000000000008fad         mov        qword [rbx], rax
0000000000008fb0         mov        eax, edx

                     loc_8fb2:
0000000000008fb2         mov        rbx, qword [rsp+0x18+var_10]                ; CODE XREF=rpl_vasprintf+112, rpl_vasprintf+119
0000000000008fb7         xor        rbx, qword [fs:0x28]
0000000000008fc0         jne        loc_8fe9

0000000000008fc2         add        rsp, 0x10
0000000000008fc6         pop        rbx
0000000000008fc7         ret
                        ; endp

                     loc_8fc8:
0000000000008fc8         mov        rdi, rax                                    ; argument "__ptr" for method j_free, CODE XREF=rpl_vasprintf+59
0000000000008fcb         call       j_free                                      ; free
0000000000008fd0         call       j___errno_location                          ; __errno_location
0000000000008fd5         mov        dword [rax], 0x4b
0000000000008fdb         mov        eax, 0xffffffff
0000000000008fe0         jmp        loc_8fb2

                     loc_8fe2:
0000000000008fe2         mov        eax, 0xffffffff                             ; CODE XREF=rpl_vasprintf+46
0000000000008fe7         jmp        loc_8fb2

                     loc_8fe9:
0000000000008fe9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_vasprintf+80
                        ; endp
0000000000008fee         align      16                                          ; End of unwind block (FDE at 0xf70c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
0000000000008ff0         push       r12                                         ; Begin of unwind block (FDE at 0xf734), CODE XREF=close_stdout+13, close_stdout+51
0000000000008ff2         push       rbp
0000000000008ff3         mov        rbp, rdi
0000000000008ff6         push       rbx
0000000000008ff7         call       j___fpending                                ; __fpending
0000000000008ffc         mov        ebx, dword [rbp]
0000000000008fff         mov        rdi, rbp
0000000000009002         mov        r12, rax
0000000000009005         call       rpl_fclose                                  ; rpl_fclose
000000000000900a         and        ebx, 0x20
000000000000900d         test       ebx, ebx
000000000000900f         jne        loc_9028

0000000000009011         test       eax, eax
0000000000009013         je         loc_901f

0000000000009015         test       r12, r12
0000000000009018         mov        eax, 0xffffffff
000000000000901d         je         loc_9058

                     loc_901f:
000000000000901f         pop        rbx                                         ; CODE XREF=close_stream+35
0000000000009020         pop        rbp
0000000000009021         pop        r12
0000000000009023         ret
                        ; endp
0000000000009024         align      8

                     loc_9028:
0000000000009028         test       eax, eax                                    ; CODE XREF=close_stream+31
000000000000902a         jne        loc_9048

000000000000902c         call       j___errno_location                          ; __errno_location
0000000000009031         mov        dword [rax], 0x0
0000000000009037         mov        eax, 0xffffffff
000000000000903c         pop        rbx
000000000000903d         pop        rbp
000000000000903e         pop        r12
0000000000009040         ret
                        ; endp
0000000000009041         align      8

                     loc_9048:
0000000000009048         pop        rbx                                         ; CODE XREF=close_stream+58
0000000000009049         mov        eax, 0xffffffff
000000000000904e         pop        rbp
000000000000904f         pop        r12
0000000000009051         ret
                        ; endp
0000000000009052         align      8

                     loc_9058:
0000000000009058         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
000000000000905d         cmp        dword [rax], 0x9
0000000000009060         pop        rbx
0000000000009061         pop        rbp
0000000000009062         pop        r12
0000000000009064         setne      al
0000000000009067         movzx      eax, al
000000000000906a         neg        eax
000000000000906c         ret
                        ; endp
000000000000906d         align      16                                          ; End of unwind block (FDE at 0xf734)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
0000000000009070         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0xf784), CODE XREF=rpl_mbrtowc+71
0000000000009074         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000009076         call       j_setlocale                                 ; setlocale
000000000000907b         mov        rdx, rax
000000000000907e         mov        eax, 0x1
0000000000009083         test       rdx, rdx
0000000000009086         je         loc_90a5

0000000000009088         lea        rdi, qword [__PRETTY_FUNCTION__.4162_e560+11] ; 0xe56b
000000000000908f         mov        ecx, 0x2
0000000000009094         mov        rsi, rdx
0000000000009097         rep  cmpsb byte [rsi], byte [rdi]
0000000000009099         seta       cl
000000000000909c         sbb        cl, 0x0
000000000000909f         xor        eax, eax
00000000000090a1         test       cl, cl
00000000000090a3         jne        loc_90b0

                     loc_90a5:
00000000000090a5         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
00000000000090a9         ret
                        ; endp
00000000000090aa         align      16

                     loc_90b0:
00000000000090b0         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
00000000000090b7         mov        ecx, 0x6
00000000000090bc         mov        rsi, rdx
00000000000090bf         rep  cmpsb byte [rsi], byte [rdi]
00000000000090c1         seta       al
00000000000090c4         sbb        al, 0x0
00000000000090c6         test       al, al
00000000000090c8         setne      al
00000000000090cb         add        rsp, 0x8
00000000000090cf         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
00000000000090d0         sub        rsp, 0x8                                    ; End of unwind block (FDE at 0xf784), Begin of unwind block (FDE at 0xf7a4), CODE XREF=gettext_quote.part.1+11
00000000000090d4         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
00000000000090d9         call       j_nl_langinfo                               ; nl_langinfo
00000000000090de         test       rax, rax
00000000000090e1         je         loc_9100

00000000000090e3         cmp        byte [rax], 0x0
00000000000090e6         lea        rdx, qword [aAscii]                         ; "ASCII"
00000000000090ed         cmove      rax, rdx
00000000000090f1         add        rsp, 0x8
00000000000090f5         ret
                        ; endp
00000000000090f6         align      256

                     loc_9100:
0000000000009100         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
0000000000009107         add        rsp, 0x8
000000000000910b         ret
                        ; endp
000000000000910c         align      16                                          ; End of unwind block (FDE at 0xf7a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
0000000000009110         push       r12                                         ; Begin of unwind block (FDE at 0xf7c4), CODE XREF=close_stream+21
0000000000009112         push       rbp
0000000000009113         push       rbx
0000000000009114         mov        rbx, rdi
0000000000009117         call       j_fileno                                    ; fileno
000000000000911c         test       eax, eax
000000000000911e         mov        rdi, rbx
0000000000009121         js         loc_9177

0000000000009123         call       j___freading                                ; __freading
0000000000009128         test       eax, eax
000000000000912a         jne        loc_9158

                     loc_912c:
000000000000912c         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
000000000000912f         call       rpl_fflush                                  ; rpl_fflush
0000000000009134         test       eax, eax
0000000000009136         je         loc_9174

0000000000009138         call       j___errno_location                          ; __errno_location
000000000000913d         mov        r12d, dword [rax]
0000000000009140         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
0000000000009143         mov        rbp, rax
0000000000009146         call       j_fclose                                    ; fclose
000000000000914b         test       r12d, r12d
000000000000914e         jne        loc_9180

                     loc_9150:
0000000000009150         pop        rbx                                         ; CODE XREF=rpl_fclose+121
0000000000009151         pop        rbp
0000000000009152         pop        r12
0000000000009154         ret
                        ; endp
0000000000009155         align      8

                     loc_9158:
0000000000009158         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
000000000000915b         call       j_fileno                                    ; fileno
0000000000009160         xor        esi, esi                                    ; argument "__offset" for method j_lseek
0000000000009162         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000009167         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000009169         call       j_lseek                                     ; lseek
000000000000916e         cmp        rax, 0xffffffffffffffff
0000000000009172         jne        loc_912c

                     loc_9174:
0000000000009174         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_9177:
0000000000009177         pop        rbx                                         ; CODE XREF=rpl_fclose+17
0000000000009178         pop        rbp
0000000000009179         pop        r12
000000000000917b         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_9180:
0000000000009180         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
0000000000009184         mov        eax, 0xffffffff
0000000000009189         jmp        loc_9150
000000000000918b         align      16                                          ; End of unwind block (FDE at 0xf7c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
0000000000009190         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0xf7fc), CODE XREF=rpl_fclose+31
0000000000009193         push       rbx
0000000000009194         mov        rbx, rdi
0000000000009197         je         loc_91aa

0000000000009199         call       j___freading                                ; __freading
000000000000919e         test       eax, eax
00000000000091a0         je         loc_91aa

00000000000091a2         test       dword [rbx], 0x100
00000000000091a8         jne        loc_91b8

                     loc_91aa:
00000000000091aa         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
00000000000091ad         pop        rbx
00000000000091ae         jmp        j_fflush                                    ; fflush
                        ; endp
00000000000091b3         align      8

                     loc_91b8:
00000000000091b8         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
00000000000091bb         mov        edx, 0x1
00000000000091c0         xor        esi, esi
00000000000091c2         call       rpl_fseeko                                  ; rpl_fseeko
00000000000091c7         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
00000000000091ca         pop        rbx
00000000000091cb         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
00000000000091d0         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0xf7fc), Begin of unwind block (FDE at 0xf81c), CODE XREF=rpl_fflush+50
00000000000091d4         cmp        qword [rdi+0x10], rax
00000000000091d8         je         loc_91e0

                     j_j_fseeko:        // fseeko
00000000000091da         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
00000000000091df         align      32

                     loc_91e0:
00000000000091e0         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
00000000000091e4         cmp        qword [rdi+0x28], rax
00000000000091e8         jne        j_j_fseeko                                  ; fseeko

00000000000091ea         cmp        qword [rdi+0x48], 0x0
00000000000091ef         jne        j_j_fseeko                                  ; fseeko

00000000000091f1         push       r12
00000000000091f3         push       rbp
00000000000091f4         mov        r12d, edx
00000000000091f7         push       rbx
00000000000091f8         mov        rbp, rsi
00000000000091fb         mov        rbx, rdi
00000000000091fe         call       j_fileno                                    ; fileno
0000000000009203         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000009206         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000009209         mov        edi, eax                                    ; argument "__fd" for method j_lseek
000000000000920b         call       j_lseek                                     ; lseek
0000000000009210         cmp        rax, 0xffffffffffffffff
0000000000009214         je         loc_9222

0000000000009216         and        dword [rbx], 0xffffffef
0000000000009219         mov        qword [rbx+0x90], rax
0000000000009220         xor        eax, eax

                     loc_9222:
0000000000009222         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
0000000000009223         pop        rbp
0000000000009224         pop        r12
0000000000009226         ret
                        ; endp
0000000000009227         align      16                                          ; End of unwind block (FDE at 0xf81c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_28: int8_t, -40
        ;    var_38: int64_t, -56
        ;    var_2A8: int64_t, -680
        ;    var_2B0: int64_t, -688
        ;    var_2B8: int64_t, -696
        ;    var_2C0: int64_t, -704
        ;    var_3A8: int64_t, -936
        ;    var_3B0: int8_t, -944
        ;    var_3B4: int32_t, -948
        ;    var_3B8: int32_t, -952
        ;    var_3BC: int32_t, -956
        ;    var_3C8: int64_t, -968
        ;    var_3D0: int64_t, -976
        ;    var_3D8: int64_t, -984
        ;    var_3E0: int64_t, -992
        ;    var_3E8: int64_t, -1000
        ;    var_3F0: int64_t, -1008
        ;    var_3F8: int64_t, -1016
        ;    var_400: int64_t, -1024
        ;    var_408: int64_t, -1032
        ;    var_410: int64_t, -1040
        ;    var_418: int64_t, -1048
        ;    var_420: int64_t, -1056
        ;    var_421: int8_t, -1057
        ;    var_424: int32_t, -1060
        ;    var_430: int64_t, -1072
        ;    var_440: -1088
        ;    var_450: -1104


                     vasnprintf:
0000000000009230         push       rbp                                         ; Begin of unwind block (FDE at 0xf84c), CODE XREF=rpl_vasprintf+38
0000000000009231         mov        rbp, rsp
0000000000009234         push       r15
0000000000009236         push       r14
0000000000009238         push       r13
000000000000923a         push       r12
000000000000923c         lea        r14, qword [rbp+var_3B0]
0000000000009243         push       rbx
0000000000009244         mov        rbx, rdx
0000000000009247         mov        r12, rcx
000000000000924a         mov        rdx, r14
000000000000924d         sub        rsp, 0x408
0000000000009254         mov        qword [rbp+var_418], rsi
000000000000925b         lea        rsi, qword [rbp+var_2C0]
0000000000009262         mov        qword [rbp+var_3E8], rdi
0000000000009269         mov        rdi, rbx
000000000000926c         mov        qword [rbp+var_410], r14
0000000000009273         mov        rax, qword [fs:0x28]
000000000000927c         mov        qword [rbp+var_38], rax
0000000000009280         xor        eax, eax
0000000000009282         mov        qword [rbp+var_408], rsi
0000000000009289         call       printf_parse                                ; printf_parse
000000000000928e         test       eax, eax
0000000000009290         js         loc_a0f8

0000000000009296         mov        rsi, r14
0000000000009299         mov        rdi, r12
000000000000929c         call       printf_fetchargs                            ; printf_fetchargs
00000000000092a1         test       eax, eax
00000000000092a3         js         loc_a160

00000000000092a9         mov        rax, qword [rbp+var_2B0]
00000000000092b0         mov        rdx, 0xffffffffffffffff
00000000000092b7         add        rax, 0x7
00000000000092bb         cmp        rax, 0x6
00000000000092bf         cmovbe     rax, rdx
00000000000092c3         add        rax, qword [rbp+var_2A8]
00000000000092ca         jb         loc_9cf8

00000000000092d0         mov        rdi, rax
00000000000092d3         xor        r8d, r8d
00000000000092d6         add        rdi, 0x6
00000000000092da         setb       r8b
00000000000092de         jb         loc_9cf8

00000000000092e4         cmp        rdi, 0xf9f
00000000000092eb         jbe        loc_9438

00000000000092f1         cmp        rdi, 0xffffffffffffffff
00000000000092f5         mov        qword [rbp+var_3C8], r8
00000000000092fc         je         loc_9cf8

0000000000009302         call       j_malloc                                    ; malloc
0000000000009307         test       rax, rax
000000000000930a         mov        qword [rbp+var_3D8], rax
0000000000009311         je         loc_9cf8

0000000000009317         mov        r8, qword [rbp+var_3C8]
000000000000931e         mov        qword [rbp+var_420], rax

                     loc_9325:
0000000000009325         xor        r12d, r12d                                  ; CODE XREF=vasnprintf+558
0000000000009328         cmp        qword [rbp+var_3E8], 0x0
0000000000009330         je         loc_933c

0000000000009332         mov        rax, qword [rbp+var_418]
0000000000009339         mov        r12, qword [rax]

                     loc_933c:
000000000000933c         mov        r13, qword [rbp+var_2B8]                    ; CODE XREF=vasnprintf+256
0000000000009343         lea        rax, qword [rbp+var_3BC]
000000000000934a         mov        r15, qword [rbp+var_3E8]
0000000000009351         mov        qword [rbp+var_400], 0x0
000000000000935c         mov        qword [rbp+var_3F0], rax
0000000000009363         mov        rax, rbx
0000000000009366         mov        rbx, r8
0000000000009369         mov        rcx, qword [r13]
000000000000936d         mov        r8, rax
0000000000009370         cmp        rcx, r8
0000000000009373         je         loc_9ce1

                     loc_9379:
0000000000009379         sub        rcx, r8                                     ; CODE XREF=vasnprintf+2731
000000000000937c         mov        rax, rbx
000000000000937f         add        rax, rcx
0000000000009382         mov        r14, rax
0000000000009385         jae        loc_9468

000000000000938b         cmp        r12, 0xffffffffffffffff
000000000000938f         je         loc_9e60

                     loc_9395:
0000000000009395         call       j___errno_location                          ; __errno_location, CODE XREF=vasnprintf+1250, vasnprintf+2694, loc_9da0, vasnprintf+2950, vasnprintf+3039, loc_9ef8, vasnprintf+3299, vasnprintf+3309, vasnprintf+3371, vasnprintf+3515, loc_a110
000000000000939a         mov        qword [rbp+var_3C8], rax

                     loc_93a1:
00000000000093a1         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+1600, vasnprintf+1618, vasnprintf+1668, vasnprintf+2558, vasnprintf+4338
00000000000093a8         je         loc_93b3

00000000000093aa         test       r15, r15
00000000000093ad         jne        loc_9e90

                     loc_93b3:
00000000000093b3         mov        rax, qword [rbp+var_420]                    ; CODE XREF=vasnprintf+376, vasnprintf+3176
00000000000093ba         test       rax, rax
00000000000093bd         je         loc_93c7

00000000000093bf         mov        rdi, rax                                    ; argument "__ptr" for method j_free
00000000000093c2         call       j_free                                      ; free

                     loc_93c7:
00000000000093c7         mov        rax, qword [rbp+var_408]                    ; CODE XREF=vasnprintf+397, vasnprintf+2772
00000000000093ce         mov        rdi, qword [rbp+var_2B8]
00000000000093d5         add        rax, 0x20
00000000000093d9         cmp        rdi, rax
00000000000093dc         je         loc_93e3

00000000000093de         call       j_free                                      ; free

                     loc_93e3:
00000000000093e3         mov        rax, qword [rbp+var_410]                    ; CODE XREF=vasnprintf+428
00000000000093ea         mov        rdi, qword [rbp+var_3A8]
00000000000093f1         add        rax, 0x10
00000000000093f5         cmp        rdi, rax
00000000000093f8         je         loc_93ff

00000000000093fa         call       j_free                                      ; free

                     loc_93ff:
00000000000093ff         mov        rax, qword [rbp+var_3C8]                    ; CODE XREF=vasnprintf+456
0000000000009406         xor        r15d, r15d
0000000000009409         mov        dword [rax], 0xc

                     loc_940f:
000000000000940f         mov        rdi, qword [rbp+var_38]                     ; CODE XREF=vasnprintf+1978, vasnprintf+3774, vasnprintf+3787, vasnprintf+3958, vasnprintf+4183
0000000000009413         xor        rdi, qword [fs:0x28]
000000000000941c         mov        rax, r15
000000000000941f         jne        loc_a327

0000000000009425         lea        rsp, qword [rbp+var_28]
0000000000009429         pop        rbx
000000000000942a         pop        r12
000000000000942c         pop        r13
000000000000942e         pop        r14
0000000000009430         pop        r15
0000000000009432         pop        rbp
0000000000009433         ret
                        ; endp
0000000000009434         align      8

                     loc_9438:
0000000000009438         add        rax, 0x24                                   ; CODE XREF=vasnprintf+187
000000000000943c         mov        qword [rbp+var_420], 0x0
0000000000009447         and        rax, 0xfffffffffffffff0
000000000000944b         sub        rsp, rax
000000000000944e         lea        rax, qword [rsp+0x430+var_421]
0000000000009453         and        rax, 0xfffffffffffffff0
0000000000009457         mov        qword [rbp+var_3D8], rax
000000000000945e         jmp        loc_9325
0000000000009463         align      8

                     loc_9468:
0000000000009468         cmp        r12, rax                                    ; CODE XREF=vasnprintf+341
000000000000946b         jae        loc_94d4

000000000000946d         test       r12, r12
0000000000009470         jne        loc_9da0

0000000000009476         cmp        rax, 0xc
000000000000947a         ja         loc_9db2

0000000000009480         mov        r12d, 0xc

                     loc_9486:
0000000000009486         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+2940
000000000000948d         sete       dl
0000000000009490         test       r15, r15
0000000000009493         je         loc_9dd8

                     loc_9499:
0000000000009499         test       dl, dl                                      ; CODE XREF=vasnprintf+2972
000000000000949b         jne        loc_9dd8

00000000000094a1         mov        rsi, r12                                    ; argument "__size" for method j_realloc
00000000000094a4         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
00000000000094a7         mov        qword [rbp+var_3D0], r8
00000000000094ae         mov        qword [rbp+var_3C8], rcx
00000000000094b5         call       j_realloc                                   ; realloc
00000000000094ba         test       rax, rax
00000000000094bd         mov        rcx, qword [rbp+var_3C8]
00000000000094c4         mov        r8, qword [rbp+var_3D0]
00000000000094cb         je         loc_9e7b

00000000000094d1         mov        r15, rax

                     loc_94d4:
00000000000094d4         lea        rdi, qword [r15+rbx]                        ; argument "__dest" for method j_memcpy, CODE XREF=vasnprintf+571, vasnprintf+3107, vasnprintf+3123, vasnprintf+3571
00000000000094d8         mov        rdx, rcx                                    ; argument "__n" for method j_memcpy
00000000000094db         mov        rsi, r8                                     ; argument "__src" for method j_memcpy
00000000000094de         call       j_memcpy                                    ; memcpy

                     loc_94e3:
00000000000094e3         mov        rax, qword [rbp+var_400]                    ; CODE XREF=vasnprintf+2740
00000000000094ea         cmp        qword [rbp+var_2C0], rax
00000000000094f1         je         loc_a1ab

00000000000094f7         movzx      edx, byte [r13+0x48]
00000000000094fc         mov        rax, qword [r13+0x50]
0000000000009500         cmp        dl, 0x25
0000000000009503         je         loc_9c98

0000000000009509         cmp        rax, 0xffffffffffffffff
000000000000950d         je         loc_a156

0000000000009513         mov        r8, qword [rbp+var_3A8]
000000000000951a         shl        rax, 0x5
000000000000951e         add        rax, r8
0000000000009521         cmp        dl, 0x6e
0000000000009524         mov        edi, dword [rax]
0000000000009526         mov        dword [rbp+var_3D0], edi
000000000000952c         je         loc_9d10

0000000000009532         mov        eax, dword [r13+0x10]
0000000000009536         mov        rdi, qword [rbp+var_3D8]
000000000000953d         test       al, 0x1
000000000000953f         mov        byte [rdi], 0x25
0000000000009542         lea        rbx, qword [rdi+1]
0000000000009546         je         loc_9557

0000000000009548         mov        rdi, qword [rbp+var_3D8]
000000000000954f         lea        rbx, qword [rdi+2]
0000000000009553         mov        byte [rdi+1], 0x27

                     loc_9557:
0000000000009557         test       al, 0x2                                     ; CODE XREF=vasnprintf+790
0000000000009559         je         loc_9562

000000000000955b         mov        byte [rbx], 0x2d
000000000000955e         add        rbx, 0x1

                     loc_9562:
0000000000009562         test       al, 0x4                                     ; CODE XREF=vasnprintf+809
0000000000009564         je         loc_956d

0000000000009566         mov        byte [rbx], 0x2b
0000000000009569         add        rbx, 0x1

                     loc_956d:
000000000000956d         test       al, 0x8                                     ; CODE XREF=vasnprintf+820
000000000000956f         je         loc_9578

0000000000009571         mov        byte [rbx], 0x20
0000000000009574         add        rbx, 0x1

                     loc_9578:
0000000000009578         test       al, 0x10                                    ; CODE XREF=vasnprintf+831
000000000000957a         je         loc_9583

000000000000957c         mov        byte [rbx], 0x23
000000000000957f         add        rbx, 0x1

                     loc_9583:
0000000000009583         test       al, 0x40                                    ; CODE XREF=vasnprintf+842
0000000000009585         je         loc_958e

0000000000009587         mov        byte [rbx], 0x49
000000000000958a         add        rbx, 0x1

                     loc_958e:
000000000000958e         test       al, 0x20                                    ; CODE XREF=vasnprintf+853
0000000000009590         je         loc_9599

0000000000009592         mov        byte [rbx], 0x30
0000000000009595         add        rbx, 0x1

                     loc_9599:
0000000000009599         mov        rsi, qword [r13+0x18]                       ; CODE XREF=vasnprintf+864
000000000000959d         mov        rdx, qword [r13+0x20]
00000000000095a1         cmp        rsi, rdx
00000000000095a4         je         loc_95d6

00000000000095a6         mov        rcx, rdx
00000000000095a9         mov        rdi, rbx                                    ; argument "__dest" for method j_memcpy
00000000000095ac         mov        qword [rbp+var_3E0], r8
00000000000095b3         sub        rcx, rsi
00000000000095b6         mov        rdx, rcx                                    ; argument "__n" for method j_memcpy
00000000000095b9         mov        qword [rbp+var_3C8], rcx
00000000000095c0         call       j_memcpy                                    ; memcpy
00000000000095c5         mov        rcx, qword [rbp+var_3C8]
00000000000095cc         mov        r8, qword [rbp+var_3E0]
00000000000095d3         add        rbx, rcx

                     loc_95d6:
00000000000095d6         mov        rsi, qword [r13+0x30]                       ; CODE XREF=vasnprintf+884
00000000000095da         mov        rdx, qword [r13+0x38]
00000000000095de         cmp        rsi, rdx
00000000000095e1         je         loc_9613

00000000000095e3         mov        rcx, rdx
00000000000095e6         mov        rdi, rbx                                    ; argument "__dest" for method j_memcpy
00000000000095e9         mov        qword [rbp+var_3E0], r8
00000000000095f0         sub        rcx, rsi
00000000000095f3         mov        rdx, rcx                                    ; argument "__n" for method j_memcpy
00000000000095f6         mov        qword [rbp+var_3C8], rcx
00000000000095fd         call       j_memcpy                                    ; memcpy
0000000000009602         mov        rcx, qword [rbp+var_3C8]
0000000000009609         mov        r8, qword [rbp+var_3E0]
0000000000009610         add        rbx, rcx

                     loc_9613:
0000000000009613         mov        edi, dword [rbp+var_3D0]                    ; CODE XREF=vasnprintf+945
0000000000009619         cmp        edi, 0x10
000000000000961c         ja         loc_964b

000000000000961e         mov        eax, 0x1
0000000000009623         mov        ecx, edi
0000000000009625         shl        rax, cl
0000000000009628         test       eax, 0x14180
000000000000962d         jne        loc_9644

000000000000962f         test       ah, 0x10
0000000000009632         jne        loc_9f90

0000000000009638         test       ah, 0x6
000000000000963b         je         loc_964b

000000000000963d         mov        byte [rbx], 0x6c
0000000000009640         add        rbx, 0x1

                     loc_9644:
0000000000009644         mov        byte [rbx], 0x6c                            ; CODE XREF=vasnprintf+1021
0000000000009647         add        rbx, 0x1

                     loc_964b:
000000000000964b         movzx      eax, byte [r13+0x48]                        ; CODE XREF=vasnprintf+1004, vasnprintf+1035, vasnprintf+3431
0000000000009650         mov        byte [rbx+1], 0x0
0000000000009654         mov        byte [rbx], al
0000000000009656         mov        rax, qword [r13+0x28]
000000000000965a         cmp        rax, 0xffffffffffffffff
000000000000965e         je         loc_9d90

0000000000009664         shl        rax, 0x5
0000000000009668         add        rax, r8
000000000000966b         cmp        dword [rax], 0x5
000000000000966e         jne        loc_a156

0000000000009674         mov        eax, dword [rax+0x10]
0000000000009677         mov        dword [rbp+var_3E0], 0x1
0000000000009681         mov        dword [rbp+var_3B8], eax

                     loc_9687:
0000000000009687         mov        rax, qword [r13+0x40]                       ; CODE XREF=vasnprintf+2922
000000000000968b         cmp        rax, 0xffffffffffffffff
000000000000968f         je         loc_96bc

0000000000009691         shl        rax, 0x5
0000000000009695         add        r8, rax
0000000000009698         cmp        dword [r8], 0x5
000000000000969c         jne        loc_a156

00000000000096a2         mov        eax, dword [rbp+var_3E0]
00000000000096a8         mov        edx, dword [r8+0x10]
00000000000096ac         mov        dword [rbp+rax*4+var_3B8], edx
00000000000096b3         lea        eax, dword [rax+1]
00000000000096b6         mov        dword [rbp+var_3E0], eax

                     loc_96bc:
00000000000096bc         mov        rax, r14                                    ; CODE XREF=vasnprintf+1119
00000000000096bf         xor        edx, edx
00000000000096c1         add        rax, 0x2
00000000000096c5         jb         loc_a32c

00000000000096cb         cmp        r12, rax
00000000000096ce         jae        loc_971b

00000000000096d0         test       r12, r12
00000000000096d3         jne        loc_9ef8

00000000000096d9         cmp        rax, 0xc
00000000000096dd         ja         loc_9f10

00000000000096e3         mov        r12d, 0xc

                     loc_96e9:
00000000000096e9         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+3284
00000000000096f0         sete       dl
00000000000096f3         test       r15, r15
00000000000096f6         je         loc_9f40

                     loc_96fc:
00000000000096fc         test       dl, dl                                      ; CODE XREF=vasnprintf+3331
00000000000096fe         jne        loc_9f40

0000000000009704         mov        rsi, r12                                    ; argument "__size" for method j_realloc
0000000000009707         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
000000000000970a         call       j_realloc                                   ; realloc
000000000000970f         test       rax, rax
0000000000009712         je         loc_9395

0000000000009718         mov        r15, rax

                     loc_971b:
000000000000971b         mov        byte [r15+r14], 0x0                         ; CODE XREF=vasnprintf+1182, vasnprintf+3411, vasnprintf+3795, vasnprintf+4357
0000000000009720         call       j___errno_location                          ; __errno_location
0000000000009725         mov        qword [rbp+var_3C8], rax
000000000000972c         mov        eax, dword [rax]
000000000000972e         mov        qword [rbp+var_3F8], rbx
0000000000009735         mov        dword [rbp+var_424], eax
000000000000973b         nop        dword [rax+rax]

                     loc_9740:
0000000000009740         mov        rax, qword [rbp+var_3C8]                    ; CODE XREF=vasnprintf+1591, vasnprintf+1677, vasnprintf+2598, vasnprintf+2652, vasnprintf+2755, vasnprintf+4332
0000000000009747         mov        rbx, r12
000000000000974a         mov        r10d, 0x7fffffff
0000000000009750         sub        rbx, r14
0000000000009753         mov        dword [rbp+var_3BC], 0xffffffff
000000000000975d         cmp        rbx, 0x7fffffff
0000000000009764         mov        dword [rax], 0x0
000000000000976a         mov        eax, dword [rbp+var_3D0]
0000000000009770         cmovbe     r10, rbx
0000000000009774         cmp        eax, 0x11
0000000000009777         ja         loc_a156

000000000000977d         lea        rsi, qword [switch_table_e57c]              ; switch_table_e57c
0000000000009784         movsxd     rax, dword [rsi+rax*4]
0000000000009788         add        rax, rsi
000000000000978b         jmp        rax                                         ; switch statement using table at 0xe57c, with 18 cases, 0x9790,0x98c8,0x99f0,0x9a78,0x9af8,0x9b38,0x9bc0,0x9bf0,0xa156
000000000000978d         align      16

                     loc_9790:
0000000000009790         mov        rax, qword [r13+0x50]                       ; case 17, CODE XREF=vasnprintf+1371
0000000000009794         lea        rdi, qword [r15+r14]
0000000000009798         shl        rax, 0x5
000000000000979c         add        rax, qword [rbp+var_3A8]
00000000000097a3         mov        r9, qword [rax+0x10]
00000000000097a7         mov        eax, dword [rbp+var_3E0]
00000000000097ad         cmp        eax, 0x1
00000000000097b0         je         loc_9c78

00000000000097b6         cmp        eax, 0x2
00000000000097b9         je         loc_9c60

00000000000097bf         sub        rsp, 0x8
00000000000097c3         push       qword [rbp+var_3F0]

                     loc_97c9:
00000000000097c9         mov        r8, qword [rbp+var_3D8]                     ; CODE XREF=vasnprintf+3262
00000000000097d0         mov        rsi, r10
00000000000097d3         mov        rcx, 0xffffffffffffffff
00000000000097da         mov        edx, 0x1
00000000000097df         xor        eax, eax
00000000000097e1         mov        qword [rbp+var_430], r10
00000000000097e8         call       j___snprintf_chk                            ; __snprintf_chk
00000000000097ed         pop        rsi
00000000000097ee         pop        rdi
00000000000097ef         mov        r10, qword [rbp+var_430]

                     loc_97f6:
00000000000097f6         mov        ecx, dword [rbp+var_3BC]                    ; CODE XREF=vasnprintf+2109, vasnprintf+2238, vasnprintf+2433, vasnprintf+3237
00000000000097fc         test       ecx, ecx
00000000000097fe         js         loc_993c

                     loc_9804:
0000000000009804         movsxd     rdx, ecx                                    ; CODE XREF=vasnprintf+1798
0000000000009807         cmp        rdx, r10
000000000000980a         jae        loc_981a

000000000000980c         add        rdx, r15
000000000000980f         cmp        byte [rdx+r14], 0x0
0000000000009814         jne        loc_a156

                     loc_981a:
000000000000981a         cmp        ecx, eax                                    ; CODE XREF=vasnprintf+1498
000000000000981c         jge        loc_9826

                     loc_981e:
000000000000981e         mov        dword [rbp+var_3BC], eax                    ; CODE XREF=vasnprintf+1823
0000000000009824         mov        ecx, eax

                     loc_9826:
0000000000009826         lea        eax, dword [rcx+1]                          ; CODE XREF=vasnprintf+1516
0000000000009829         cmp        rax, r10
000000000000982c         jb         loc_a060

0000000000009832         cmp        rbx, 0x7ffffffe
0000000000009839         ja         loc_a080

000000000000983f         lea        rsi, qword [r12+r12]
0000000000009843         lea        edx, dword [rcx+2]
0000000000009846         test       r12, r12
0000000000009849         mov        rax, 0xffffffffffffffff
0000000000009850         cmovns     rax, rsi
0000000000009854         add        rdx, r14
0000000000009857         jb         loc_a318

000000000000985d         cmp        rax, rdx
0000000000009860         cmovb      rax, rdx
0000000000009864         cmp        r12, rax
0000000000009867         jae        loc_9740

000000000000986d         test       r12, r12
0000000000009870         js         loc_93a1

0000000000009876         cmp        rsi, rax
0000000000009879         mov        r12, rsi
000000000000987c         jae        loc_988b

000000000000987e         cmp        rax, 0xffffffffffffffff
0000000000009882         je         loc_93a1

0000000000009888         mov        r12, rax

                     loc_988b:
000000000000988b         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+1612
0000000000009892         sete       bl
0000000000009895         test       r15, r15
0000000000009898         je         loc_9c20

000000000000989e         test       bl, bl
00000000000098a0         jne        loc_9c20

00000000000098a6         mov        rsi, r12                                    ; argument "__size" for method j_realloc
00000000000098a9         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
00000000000098ac         call       j_realloc                                   ; realloc
00000000000098b1         test       rax, rax
00000000000098b4         je         loc_93a1

00000000000098ba         mov        r15, rax
00000000000098bd         jmp        loc_9740
00000000000098c2         align      8

                     loc_98c8:
00000000000098c8         mov        rax, qword [r13+0x50]                       ; case 14, CODE XREF=vasnprintf+1371
00000000000098cc         lea        rdi, qword [r15+r14]
00000000000098d0         shl        rax, 0x5
00000000000098d4         add        rax, qword [rbp+var_3A8]
00000000000098db         mov        r9d, dword [rax+0x10]
00000000000098df         mov        eax, dword [rbp+var_3E0]
00000000000098e5         cmp        eax, 0x1
00000000000098e8         je         loc_9b20

                     loc_98ee:
00000000000098ee         cmp        eax, 0x2                                    ; CODE XREF=vasnprintf+2281, vasnprintf+2481, vasnprintf+2529
00000000000098f1         je         loc_9b68

                     loc_98f7:
00000000000098f7         sub        rsp, 0x8                                    ; CODE XREF=vasnprintf+2350
00000000000098fb         push       qword [rbp+var_3F0]

                     loc_9901:
0000000000009901         mov        r8, qword [rbp+var_3D8]                     ; CODE XREF=vasnprintf+2303
0000000000009908         mov        rcx, 0xffffffffffffffff
000000000000990f         mov        edx, 0x1
0000000000009914         mov        rsi, r10
0000000000009917         xor        eax, eax
0000000000009919         mov        qword [rbp+var_430], r10
0000000000009920         call       j___snprintf_chk                            ; __snprintf_chk
0000000000009925         pop        rdx
0000000000009926         pop        rcx
0000000000009927         mov        ecx, dword [rbp+var_3BC]
000000000000992d         mov        r10, qword [rbp+var_430]
0000000000009934         test       ecx, ecx
0000000000009936         jns        loc_9804

                     loc_993c:
000000000000993c         mov        rdi, qword [rbp+var_3F8]                    ; CODE XREF=vasnprintf+1486
0000000000009943         cmp        byte [rdi+1], 0x0
0000000000009947         jne        loc_9c88

000000000000994d         test       eax, eax
000000000000994f         jns        loc_981e

0000000000009955         mov        rax, qword [rbp+var_3C8]
000000000000995c         mov        ebx, dword [rax]
000000000000995e         test       ebx, ebx
0000000000009960         jne        loc_9980

0000000000009962         movzx      eax, byte [r13+0x48]
0000000000009967         mov        ebx, 0x16
000000000000996c         and        eax, 0xffffffef
000000000000996f         cmp        al, 0x63
0000000000009971         mov        eax, 0x54
0000000000009976         cmove      ebx, eax
0000000000009979         nop        dword [rax]

                     loc_9980:
0000000000009980         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+1840
0000000000009987         je         loc_9992

0000000000009989         test       r15, r15
000000000000998c         jne        loc_a13c

                     loc_9992:
0000000000009992         mov        rax, qword [rbp+var_420]                    ; CODE XREF=vasnprintf+1879, vasnprintf+3860
0000000000009999         test       rax, rax
000000000000999c         je         loc_99a6

000000000000999e         mov        rdi, rax                                    ; argument "__ptr" for method j_free
00000000000099a1         call       j_free                                      ; free

                     loc_99a6:
00000000000099a6         mov        rax, qword [rbp+var_408]                    ; CODE XREF=vasnprintf+1900
00000000000099ad         mov        rdi, qword [rbp+var_2B8]
00000000000099b4         add        rax, 0x20
00000000000099b8         cmp        rdi, rax
00000000000099bb         je         loc_99c2

00000000000099bd         call       j_free                                      ; free

                     loc_99c2:
00000000000099c2         mov        rax, qword [rbp+var_410]                    ; CODE XREF=vasnprintf+1931
00000000000099c9         mov        rdi, qword [rbp+var_3A8]
00000000000099d0         add        rax, 0x10
00000000000099d4         cmp        rdi, rax
00000000000099d7         je         loc_99de

00000000000099d9         call       j_free                                      ; free

                     loc_99de:
00000000000099de         mov        rax, qword [rbp+var_3C8]                    ; CODE XREF=vasnprintf+1959
00000000000099e5         xor        r15d, r15d
00000000000099e8         mov        dword [rax], ebx
00000000000099ea         jmp        loc_940f
00000000000099ef         align      16

                     loc_99f0:
00000000000099f0         mov        rax, qword [r13+0x50]                       ; case 12, CODE XREF=vasnprintf+1371
00000000000099f4         lea        rdi, qword [r15+r14]
00000000000099f8         shl        rax, 0x5
00000000000099fc         add        rax, qword [rbp+var_3A8]
0000000000009a03         fld        tword [rax+0x10]
0000000000009a06         mov        eax, dword [rbp+var_3E0]
0000000000009a0c         cmp        eax, 0x1
0000000000009a0f         je         loc_a040

0000000000009a15         cmp        eax, 0x2
0000000000009a18         jne        loc_9ee0

0000000000009a1e         mov        eax, dword [rbp+var_3B4]
0000000000009a24         sub        rsp, 0x8
0000000000009a28         push       qword [rbp+var_3F0]
0000000000009a2e         mov        r9d, dword [rbp+var_3B8]
0000000000009a35         mov        r8, qword [rbp+var_3D8]
0000000000009a3c         mov        rsi, r10
0000000000009a3f         sub        rsp, 0x18
0000000000009a43         mov        rcx, 0xffffffffffffffff
0000000000009a4a         mov        edx, 0x1
0000000000009a4f         fstp       tword [rsp+0x458+var_450]
0000000000009a53         push       rax
0000000000009a54         xor        eax, eax
0000000000009a56         mov        qword [rbp+var_430], r10
0000000000009a5d         call       j___snprintf_chk                            ; __snprintf_chk
0000000000009a62         add        rsp, 0x30
0000000000009a66         mov        r10, qword [rbp+var_430]
0000000000009a6d         jmp        loc_97f6
0000000000009a72         align      8

                     loc_9a78:
0000000000009a78         mov        rax, qword [r13+0x50]                       ; case 11, CODE XREF=vasnprintf+1371
0000000000009a7c         lea        rdi, qword [r15+r14]
0000000000009a80         shl        rax, 0x5
0000000000009a84         add        rax, qword [rbp+var_3A8]
0000000000009a8b         movsd      xmm0, qword [rax+0x10]
0000000000009a90         mov        eax, dword [rbp+var_3E0]
0000000000009a96         cmp        eax, 0x1
0000000000009a99         je         loc_a030

0000000000009a9f         cmp        eax, 0x2
0000000000009aa2         jne        loc_9ea0

0000000000009aa8         mov        eax, dword [rbp+var_3B4]
0000000000009aae         push       qword [rbp+var_3F0]
0000000000009ab4         push       rax

                     loc_9ab5:
0000000000009ab5         mov        r9d, dword [rbp+var_3B8]                    ; CODE XREF=vasnprintf+3594
0000000000009abc         mov        r8, qword [rbp+var_3D8]
0000000000009ac3         mov        rsi, r10
0000000000009ac6         mov        rcx, 0xffffffffffffffff
0000000000009acd         mov        edx, 0x1
0000000000009ad2         mov        eax, 0x1
0000000000009ad7         mov        qword [rbp+var_430], r10
0000000000009ade         call       j___snprintf_chk                            ; __snprintf_chk
0000000000009ae3         pop        r8
0000000000009ae5         mov        r10, qword [rbp+var_430]
0000000000009aec         pop        r9
0000000000009aee         jmp        loc_97f6
0000000000009af3         align      8

                     loc_9af8:
0000000000009af8         mov        rax, qword [r13+0x50]                       ; case 4, CODE XREF=vasnprintf+1371
0000000000009afc         lea        rdi, qword [r15+r14]
0000000000009b00         shl        rax, 0x5
0000000000009b04         add        rax, qword [rbp+var_3A8]
0000000000009b0b         movzx      r9d, word [rax+0x10]
0000000000009b10         mov        eax, dword [rbp+var_3E0]
0000000000009b16         cmp        eax, 0x1
0000000000009b19         jne        loc_98ee

0000000000009b1f         nop

                     loc_9b20:
0000000000009b20         push       qword [rbp+var_3F0]                         ; CODE XREF=vasnprintf+1720, vasnprintf+2345, vasnprintf+2487, vasnprintf+2535
0000000000009b26         push       r9

                     loc_9b28:
0000000000009b28         mov        r9d, dword [rbp+var_3B8]                    ; CODE XREF=vasnprintf+2640
0000000000009b2f         jmp        loc_9901
0000000000009b34         align      8

                     loc_9b38:
0000000000009b38         mov        rax, qword [r13+0x50]                       ; case 3, CODE XREF=vasnprintf+1371
0000000000009b3c         lea        rdi, qword [r15+r14]
0000000000009b40         shl        rax, 0x5
0000000000009b44         add        rax, qword [rbp+var_3A8]
0000000000009b4b         movsx      r9d, word [rax+0x10]
0000000000009b50         mov        eax, dword [rbp+var_3E0]
0000000000009b56         cmp        eax, 0x1
0000000000009b59         je         loc_9b20

0000000000009b5b         cmp        eax, 0x2
0000000000009b5e         jne        loc_98f7

0000000000009b64         nop        dword [rax]

                     loc_9b68:
0000000000009b68         sub        rsp, 0x8                                    ; CODE XREF=vasnprintf+1729
0000000000009b6c         push       qword [rbp+var_3F0]
0000000000009b72         push       r9

                     loc_9b74:
0000000000009b74         mov        eax, dword [rbp+var_3B4]                    ; CODE XREF=vasnprintf+2620
0000000000009b7a         push       rax

                     loc_9b7b:
0000000000009b7b         mov        r9d, dword [rbp+var_3B8]                    ; CODE XREF=vasnprintf+3617
0000000000009b82         mov        r8, qword [rbp+var_3D8]
0000000000009b89         mov        rsi, r10
0000000000009b8c         mov        rcx, 0xffffffffffffffff
0000000000009b93         mov        edx, 0x1
0000000000009b98         xor        eax, eax
0000000000009b9a         mov        qword [rbp+var_430], r10
0000000000009ba1         call       j___snprintf_chk                            ; __snprintf_chk
0000000000009ba6         add        rsp, 0x20
0000000000009baa         mov        r10, qword [rbp+var_430]
0000000000009bb1         jmp        loc_97f6
0000000000009bb6         align      64

                     loc_9bc0:
0000000000009bc0         mov        rax, qword [r13+0x50]                       ; case 2, CODE XREF=vasnprintf+1371
0000000000009bc4         lea        rdi, qword [r15+r14]
0000000000009bc8         shl        rax, 0x5
0000000000009bcc         add        rax, qword [rbp+var_3A8]
0000000000009bd3         movzx      r9d, byte [rax+0x10]
0000000000009bd8         mov        eax, dword [rbp+var_3E0]
0000000000009bde         cmp        eax, 0x1
0000000000009be1         jne        loc_98ee

0000000000009be7         jmp        loc_9b20
0000000000009bec         align      16

                     loc_9bf0:
0000000000009bf0         mov        rax, qword [r13+0x50]                       ; case 1, CODE XREF=vasnprintf+1371
0000000000009bf4         lea        rdi, qword [r15+r14]
0000000000009bf8         shl        rax, 0x5
0000000000009bfc         add        rax, qword [rbp+var_3A8]
0000000000009c03         movsx      r9d, byte [rax+0x10]
0000000000009c08         mov        eax, dword [rbp+var_3E0]
0000000000009c0e         cmp        eax, 0x1
0000000000009c11         jne        loc_98ee

0000000000009c17         jmp        loc_9b20
0000000000009c1c         align      32

                     loc_9c20:
0000000000009c20         mov        rdi, r12                                    ; argument "__size" for method j_malloc, CODE XREF=vasnprintf+1640, vasnprintf+1648
0000000000009c23         call       j_malloc                                    ; malloc
0000000000009c28         test       rax, rax
0000000000009c2b         mov        rcx, rax
0000000000009c2e         je         loc_93a1

0000000000009c34         test       r14, r14
0000000000009c37         je         loc_9cf0

0000000000009c3d         test       bl, bl
0000000000009c3f         je         loc_9cf0

0000000000009c45         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
0000000000009c48         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
0000000000009c4b         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000009c4e         call       j_memcpy                                    ; memcpy
0000000000009c53         mov        r15, rax
0000000000009c56         jmp        loc_9740
0000000000009c5b         align      32

                     loc_9c60:
0000000000009c60         sub        rsp, 0x8                                    ; CODE XREF=vasnprintf+1417
0000000000009c64         push       qword [rbp+var_3F0]
0000000000009c6a         push       r9
0000000000009c6c         jmp        loc_9b74
0000000000009c71         align      8

                     loc_9c78:
0000000000009c78         push       qword [rbp+var_3F0]                         ; CODE XREF=vasnprintf+1408
0000000000009c7e         push       r9
0000000000009c80         jmp        loc_9b28
0000000000009c85         align      8

                     loc_9c88:
0000000000009c88         mov        byte [rdi+1], 0x0                           ; CODE XREF=vasnprintf+1815
0000000000009c8c         jmp        loc_9740
0000000000009c91         align      8

                     loc_9c98:
0000000000009c98         cmp        rax, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+723
0000000000009c9c         jne        loc_a156

0000000000009ca2         mov        rax, r14
0000000000009ca5         add        rax, 0x1
0000000000009ca9         mov        rbx, rax
0000000000009cac         jae        loc_9d38

0000000000009cb2         cmp        r12, 0xffffffffffffffff
0000000000009cb6         jne        loc_9395

0000000000009cbc         mov        rbx, r12

                     loc_9cbf:
0000000000009cbf         mov        byte [r15+r14], 0x25                        ; CODE XREF=vasnprintf+2827, vasnprintf+2904, vasnprintf+3555, vasnprintf+3847

                     loc_9cc4:
0000000000009cc4         mov        r8, qword [r13+8]                           ; CODE XREF=vasnprintf+3142, vasnprintf+3446, vasnprintf+3462, vasnprintf+3479, vasnprintf+3653
0000000000009cc8         add        r13, 0x58
0000000000009ccc         mov        rcx, qword [r13]
0000000000009cd0         add        qword [rbp+var_400], 0x1
0000000000009cd8         cmp        rcx, r8
0000000000009cdb         jne        loc_9379

                     loc_9ce1:
0000000000009ce1         mov        r14, rbx                                    ; CODE XREF=vasnprintf+323
0000000000009ce4         jmp        loc_94e3
0000000000009ce9         align      16

                     loc_9cf0:
0000000000009cf0         mov        r15, rcx                                    ; CODE XREF=vasnprintf+2567, vasnprintf+2575
0000000000009cf3         jmp        loc_9740

                     loc_9cf8:
0000000000009cf8         call       j___errno_location                          ; __errno_location, CODE XREF=vasnprintf+154, vasnprintf+174, vasnprintf+204, vasnprintf+225
0000000000009cfd         mov        qword [rbp+var_3C8], rax
0000000000009d04         jmp        loc_93c7
0000000000009d09         align      16

                     loc_9d10:
0000000000009d10         mov        edx, edi                                    ; CODE XREF=vasnprintf+764
0000000000009d12         sub        edx, 0x12
0000000000009d15         cmp        edx, 0x4
0000000000009d18         ja         loc_a156

0000000000009d1e         lea        rdi, qword [switch_table_e5c4]              ; switch_table_e5c4
0000000000009d25         mov        rax, qword [rax+0x10]
0000000000009d29         movsxd     rdx, dword [rdi+rdx*4]
0000000000009d2d         add        rdx, rdi
0000000000009d30         jmp        rdx                                         ; switch statement using table at 0xe5c4, with 5 cases, 0x9e70,0x9fa0,0x9fb0,0x9fc0
0000000000009d32         align      8

                     loc_9d38:
0000000000009d38         cmp        r12, rax                                    ; CODE XREF=vasnprintf+2684
0000000000009d3b         jae        loc_9cbf

0000000000009d3d         test       r12, r12
0000000000009d40         jne        loc_a110

0000000000009d46         cmp        rax, 0xc
0000000000009d4a         ja         loc_a122

0000000000009d50         mov        r12d, 0xc

                     loc_9d56:
0000000000009d56         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+3820, vasnprintf+3839
0000000000009d5d         sete       dl
0000000000009d60         test       r15, r15
0000000000009d63         je         loc_9fd0

0000000000009d69         test       dl, dl
0000000000009d6b         jne        loc_9fd0

0000000000009d71         mov        rsi, r12                                    ; argument "__size" for method j_realloc
0000000000009d74         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
0000000000009d77         call       j_realloc                                   ; realloc
0000000000009d7c         test       rax, rax
0000000000009d7f         je         loc_9e7b

0000000000009d85         mov        r15, rax
0000000000009d88         jmp        loc_9cbf
0000000000009d8d         align      16

                     loc_9d90:
0000000000009d90         mov        dword [rbp+var_3E0], 0x0                    ; CODE XREF=vasnprintf+1070
0000000000009d9a         jmp        loc_9687
0000000000009d9f         align      32

                     loc_9da0:
0000000000009da0         js         loc_9395                                    ; CODE XREF=vasnprintf+576

0000000000009da6         add        r12, r12
0000000000009da9         cmp        r12, rax
0000000000009dac         jae        loc_9486

                     loc_9db2:
0000000000009db2         cmp        rax, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+586
0000000000009db6         je         loc_9395

0000000000009dbc         cmp        r15, qword [rbp+var_3E8]
0000000000009dc3         mov        r12, rax
0000000000009dc6         sete       dl
0000000000009dc9         test       r15, r15
0000000000009dcc         jne        loc_9499

0000000000009dd2         nop        word [rax+rax]

                     loc_9dd8:
0000000000009dd8         mov        rdi, r12                                    ; argument "__size" for method j_malloc, CODE XREF=vasnprintf+611, vasnprintf+619
0000000000009ddb         mov        qword [rbp+var_3E0], r8
0000000000009de2         mov        byte [rbp+var_3D0], dl
0000000000009de8         mov        qword [rbp+var_3C8], rcx
0000000000009def         call       j_malloc                                    ; malloc
0000000000009df4         test       rax, rax
0000000000009df7         mov        r9, rax
0000000000009dfa         mov        rcx, qword [rbp+var_3C8]
0000000000009e01         movzx      edx, byte [rbp+var_3D0]
0000000000009e08         mov        r8, qword [rbp+var_3E0]
0000000000009e0f         je         loc_9395

0000000000009e15         test       rbx, rbx
0000000000009e18         je         loc_a020

0000000000009e1e         test       dl, dl
0000000000009e20         je         loc_a020

0000000000009e26         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
0000000000009e29         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
0000000000009e2c         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000009e2f         mov        qword [rbp+var_3D0], r8
0000000000009e36         mov        qword [rbp+var_3C8], rcx
0000000000009e3d         call       j_memcpy                                    ; memcpy
0000000000009e42         mov        rcx, qword [rbp+var_3C8]
0000000000009e49         mov        r15, rax
0000000000009e4c         mov        r8, qword [rbp+var_3D0]
0000000000009e53         jmp        loc_94d4
0000000000009e58         align      32

                     loc_9e60:
0000000000009e60         mov        r14, r12                                    ; CODE XREF=vasnprintf+351
0000000000009e63         jmp        loc_94d4
0000000000009e68         align      16

                     loc_9e70:
0000000000009e70         mov        qword [rax], r14                            ; case 4, CODE XREF=vasnprintf+2816
0000000000009e73         mov        rbx, r14
0000000000009e76         jmp        loc_9cc4

                     loc_9e7b:
0000000000009e7b         call       j___errno_location                          ; __errno_location, CODE XREF=vasnprintf+667, vasnprintf+2895, vasnprintf+4051
0000000000009e80         mov        qword [rbp+var_3C8], rax
0000000000009e87         nop        word [rax+rax]

                     loc_9e90:
0000000000009e90         mov        rdi, r15                                    ; argument "__ptr" for method j_free, CODE XREF=vasnprintf+381
0000000000009e93         call       j_free                                      ; free
0000000000009e98         jmp        loc_93b3
0000000000009e9d         align      32

                     loc_9ea0:
0000000000009ea0         mov        r9, qword [rbp+var_3F0]                     ; CODE XREF=vasnprintf+2162
0000000000009ea7         mov        r8, qword [rbp+var_3D8]
0000000000009eae         mov        rsi, r10
0000000000009eb1         mov        rcx, 0xffffffffffffffff
0000000000009eb8         mov        edx, 0x1
0000000000009ebd         mov        eax, 0x1
0000000000009ec2         mov        qword [rbp+var_430], r10
0000000000009ec9         call       j___snprintf_chk                            ; __snprintf_chk
0000000000009ece         mov        r10, qword [rbp+var_430]
0000000000009ed5         jmp        loc_97f6
0000000000009eda         align      32

                     loc_9ee0:
0000000000009ee0         sub        rsp, 0x10                                   ; CODE XREF=vasnprintf+2024
0000000000009ee4         mov        r9, qword [rbp+var_3F0]
0000000000009eeb         fstp       tword [rsp+0x440+var_440]
0000000000009eee         jmp        loc_97c9
0000000000009ef3         align      8

                     loc_9ef8:
0000000000009ef8         js         loc_9395                                    ; CODE XREF=vasnprintf+1187

0000000000009efe         add        r12, r12
0000000000009f01         cmp        r12, rax
0000000000009f04         jae        loc_96e9

0000000000009f0a         nop        word [rax+rax]

                     loc_9f10:
0000000000009f10         test       rdx, rdx                                    ; CODE XREF=vasnprintf+1197, vasnprintf+4372
0000000000009f13         jne        loc_9395

0000000000009f19         cmp        rax, 0xffffffffffffffff
0000000000009f1d         je         loc_9395

0000000000009f23         cmp        r15, qword [rbp+var_3E8]
0000000000009f2a         mov        r12, rax
0000000000009f2d         sete       dl
0000000000009f30         test       r15, r15
0000000000009f33         jne        loc_96fc

0000000000009f39         nop        dword [rax]

                     loc_9f40:
0000000000009f40         mov        rdi, r12                                    ; argument "__size" for method j_malloc, CODE XREF=vasnprintf+1222, vasnprintf+1230
0000000000009f43         mov        byte [rbp+var_3C8], dl
0000000000009f49         call       j_malloc                                    ; malloc
0000000000009f4e         test       rax, rax
0000000000009f51         mov        rcx, rax
0000000000009f54         movzx      edx, byte [rbp+var_3C8]
0000000000009f5b         je         loc_9395

0000000000009f61         test       r14, r14
0000000000009f64         je         loc_a100

0000000000009f6a         test       dl, dl
0000000000009f6c         je         loc_a100

0000000000009f72         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
0000000000009f75         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
0000000000009f78         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000009f7b         call       j_memcpy                                    ; memcpy
0000000000009f80         mov        r15, rax
0000000000009f83         jmp        loc_971b
0000000000009f88         align      16

                     loc_9f90:
0000000000009f90         mov        byte [rbx], 0x4c                            ; CODE XREF=vasnprintf+1026
0000000000009f93         add        rbx, 0x1
0000000000009f97         jmp        loc_964b
0000000000009f9c         align      32

                     loc_9fa0:
0000000000009fa0         mov        byte [rax], r14b                            ; case 0, CODE XREF=vasnprintf+2816
0000000000009fa3         mov        rbx, r14
0000000000009fa6         jmp        loc_9cc4
0000000000009fab         align      16

                     loc_9fb0:
0000000000009fb0         mov        dword [rax], r14d                           ; case 2, CODE XREF=vasnprintf+2816
0000000000009fb3         mov        rbx, r14
0000000000009fb6         jmp        loc_9cc4
0000000000009fbb         align      64

                     loc_9fc0:
0000000000009fc0         mov        word [rax], r14w                            ; case 1, CODE XREF=vasnprintf+2816
0000000000009fc4         mov        rbx, r14
0000000000009fc7         jmp        loc_9cc4
0000000000009fcc         align      16

                     loc_9fd0:
0000000000009fd0         mov        rdi, r12                                    ; argument "__size" for method j_malloc, CODE XREF=vasnprintf+2867, vasnprintf+2875
0000000000009fd3         mov        byte [rbp+var_3C8], dl
0000000000009fd9         call       j_malloc                                    ; malloc
0000000000009fde         test       rax, rax
0000000000009fe1         mov        rcx, rax
0000000000009fe4         movzx      edx, byte [rbp+var_3C8]
0000000000009feb         je         loc_9395

0000000000009ff1         test       r14, r14
0000000000009ff4         je         loc_a134

0000000000009ffa         test       dl, dl
0000000000009ffc         je         loc_a134

000000000000a002         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
000000000000a005         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
000000000000a008         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
000000000000a00b         call       j_memcpy                                    ; memcpy
000000000000a010         mov        r15, rax
000000000000a013         jmp        loc_9cbf
000000000000a018         align      32

                     loc_a020:
000000000000a020         mov        r15, r9                                     ; CODE XREF=vasnprintf+3048, vasnprintf+3056
000000000000a023         jmp        loc_94d4
000000000000a028         align      16

                     loc_a030:
000000000000a030         sub        rsp, 0x8                                    ; CODE XREF=vasnprintf+2153
000000000000a034         push       qword [rbp+var_3F0]
000000000000a03a         jmp        loc_9ab5
000000000000a03f         align      64

                     loc_a040:
000000000000a040         sub        rsp, 0x8                                    ; CODE XREF=vasnprintf+2015
000000000000a044         push       qword [rbp+var_3F0]
000000000000a04a         sub        rsp, 0x10
000000000000a04e         fstp       tword [rsp+0x450+var_450]
000000000000a051         jmp        loc_9b7b
000000000000a056         align      32

                     loc_a060:
000000000000a060         mov        rax, qword [rbp+var_3C8]                    ; CODE XREF=vasnprintf+1532
000000000000a067         mov        edi, dword [rbp+var_424]
000000000000a06d         movsxd     rbx, ecx
000000000000a070         add        rbx, r14
000000000000a073         mov        dword [rax], edi
000000000000a075         jmp        loc_9cc4
000000000000a07a         align      128

                     loc_a080:
000000000000a080         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+1545
000000000000a087         je         loc_a092

000000000000a089         test       r15, r15
000000000000a08c         jne        loc_a149

                     loc_a092:
000000000000a092         mov        rax, qword [rbp+var_420]                    ; CODE XREF=vasnprintf+3671, vasnprintf+3873
000000000000a099         test       rax, rax
000000000000a09c         je         loc_a0a6

000000000000a09e         mov        rdi, rax                                    ; argument "__ptr" for method j_free
000000000000a0a1         call       j_free                                      ; free

                     loc_a0a6:
000000000000a0a6         mov        rax, qword [rbp+var_408]                    ; CODE XREF=vasnprintf+3692
000000000000a0ad         mov        rdi, qword [rbp+var_2B8]
000000000000a0b4         add        rax, 0x20
000000000000a0b8         cmp        rdi, rax
000000000000a0bb         je         loc_a0c2

000000000000a0bd         call       j_free                                      ; free

                     loc_a0c2:
000000000000a0c2         mov        rax, qword [rbp+var_410]                    ; CODE XREF=vasnprintf+3723
000000000000a0c9         mov        rdi, qword [rbp+var_3A8]
000000000000a0d0         add        rax, 0x10
000000000000a0d4         cmp        rdi, rax
000000000000a0d7         je         loc_a0de

000000000000a0d9         call       j_free                                      ; free

                     loc_a0de:
000000000000a0de         mov        rax, qword [rbp+var_3C8]                    ; CODE XREF=vasnprintf+3751
000000000000a0e5         xor        r15d, r15d
000000000000a0e8         mov        dword [rax], 0x4b
000000000000a0ee         jmp        loc_940f
000000000000a0f3         align      8

                     loc_a0f8:
000000000000a0f8         xor        r15d, r15d                                  ; CODE XREF=vasnprintf+96
000000000000a0fb         jmp        loc_940f

                     loc_a100:
000000000000a100         mov        r15, rcx                                    ; CODE XREF=vasnprintf+3380, vasnprintf+3388
000000000000a103         jmp        loc_971b
000000000000a108         align      16

                     loc_a110:
000000000000a110         js         loc_9395                                    ; CODE XREF=vasnprintf+2832

000000000000a116         add        r12, r12
000000000000a119         cmp        r12, rax
000000000000a11c         jae        loc_9d56

                     loc_a122:
000000000000a122         cmp        rax, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+2842
000000000000a126         je         loc_9395

000000000000a12c         mov        r12, rax
000000000000a12f         jmp        loc_9d56

                     loc_a134:
000000000000a134         mov        r15, rcx                                    ; CODE XREF=vasnprintf+3524, vasnprintf+3532
000000000000a137         jmp        loc_9cbf

                     loc_a13c:
000000000000a13c         mov        rdi, r15                                    ; argument "__ptr" for method j_free, CODE XREF=vasnprintf+1884
000000000000a13f         call       j_free                                      ; free
000000000000a144         jmp        loc_9992

                     loc_a149:
000000000000a149         mov        rdi, r15                                    ; argument "__ptr" for method j_free, CODE XREF=vasnprintf+3676
000000000000a14c         call       j_free                                      ; free
000000000000a151         jmp        loc_a092

                     loc_a156:
000000000000a156         call       j_abort                                     ; abort, case 0, CODE XREF=vasnprintf+733, vasnprintf+1086, vasnprintf+1132, vasnprintf+1351, vasnprintf+1371, vasnprintf+1508, vasnprintf+2668, vasnprintf+2792
                        ; endp
000000000000a15b         align      32

                     loc_a160:
000000000000a160         mov        rax, qword [rbp+var_408]                    ; CODE XREF=vasnprintf+115
000000000000a167         mov        rdi, qword [rbp+var_2B8]
000000000000a16e         add        rax, 0x20
000000000000a172         cmp        rdi, rax
000000000000a175         je         loc_a17c

000000000000a177         call       j_free                                      ; free

                     loc_a17c:
000000000000a17c         mov        rax, qword [rbp+var_410]                    ; CODE XREF=vasnprintf+3909
000000000000a183         mov        rdi, qword [rbp+var_3A8]
000000000000a18a         add        rax, 0x10
000000000000a18e         cmp        rdi, rax
000000000000a191         je         loc_a198

000000000000a193         call       j_free                                      ; free

                     loc_a198:
000000000000a198         call       j___errno_location                          ; __errno_location, CODE XREF=vasnprintf+3937
000000000000a19d         xor        r15d, r15d
000000000000a1a0         mov        dword [rax], 0x16
000000000000a1a6         jmp        loc_940f

                     loc_a1ab:
000000000000a1ab         mov        rbx, r14                                    ; CODE XREF=vasnprintf+705
000000000000a1ae         xor        eax, eax
000000000000a1b0         add        rbx, 0x1
000000000000a1b4         jb         loc_a2c0

000000000000a1ba         cmp        r12, rbx
000000000000a1bd         jae        loc_a20c

000000000000a1bf         test       r12, r12
000000000000a1c2         jne        loc_a2f9

000000000000a1c8         cmp        rbx, 0xc
000000000000a1cc         ja         loc_a2de

000000000000a1d2         mov        r12d, 0xc

                     loc_a1d8:
000000000000a1d8         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+4292, vasnprintf+4309
000000000000a1df         sete       r13b
000000000000a1e3         test       r15, r15
000000000000a1e6         je         loc_a28c

000000000000a1ec         test       r13b, r13b
000000000000a1ef         jne        loc_a28c

000000000000a1f5         mov        rsi, r12                                    ; argument "__size" for method j_realloc
000000000000a1f8         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
000000000000a1fb         call       j_realloc                                   ; realloc
000000000000a200         test       rax, rax
000000000000a203         je         loc_9e7b

000000000000a209         mov        r15, rax

                     loc_a20c:
000000000000a20c         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+3981, vasnprintf+4235, vasnprintf+4249, vasnprintf+4323
000000000000a213         mov        byte [r15+r14], 0x0
000000000000a218         je         loc_a231

000000000000a21a         cmp        r12, rbx
000000000000a21d         jbe        loc_a231

000000000000a21f         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
000000000000a222         mov        rsi, rbx                                    ; argument "__size" for method j_realloc
000000000000a225         call       j_realloc                                   ; realloc
000000000000a22a         test       rax, rax
000000000000a22d         cmovne     r15, rax

                     loc_a231:
000000000000a231         mov        rax, qword [rbp+var_420]                    ; CODE XREF=vasnprintf+4072, vasnprintf+4077
000000000000a238         test       rax, rax
000000000000a23b         je         loc_a245

000000000000a23d         mov        rdi, rax                                    ; argument "__ptr" for method j_free
000000000000a240         call       j_free                                      ; free

                     loc_a245:
000000000000a245         mov        rax, qword [rbp+var_408]                    ; CODE XREF=vasnprintf+4107
000000000000a24c         mov        rdi, qword [rbp+var_2B8]
000000000000a253         add        rax, 0x20
000000000000a257         cmp        rdi, rax
000000000000a25a         je         loc_a261

000000000000a25c         call       j_free                                      ; free

                     loc_a261:
000000000000a261         mov        rax, qword [rbp+var_410]                    ; CODE XREF=vasnprintf+4138
000000000000a268         mov        rdi, qword [rbp+var_3A8]
000000000000a26f         add        rax, 0x10
000000000000a273         cmp        rdi, rax
000000000000a276         je         loc_a27d

000000000000a278         call       j_free                                      ; free

                     loc_a27d:
000000000000a27d         mov        rax, qword [rbp+var_418]                    ; CODE XREF=vasnprintf+4166
000000000000a284         mov        qword [rax], r14
000000000000a287         jmp        loc_940f

                     loc_a28c:
000000000000a28c         mov        rdi, r12                                    ; argument "__size" for method j_malloc, CODE XREF=vasnprintf+4022, vasnprintf+4031
000000000000a28f         call       j_malloc                                    ; malloc
000000000000a294         test       rax, rax
000000000000a297         mov        rcx, rax
000000000000a29a         je         loc_9395

000000000000a2a0         test       r14, r14
000000000000a2a3         je         loc_a310

000000000000a2a5         test       r13b, r13b
000000000000a2a8         je         loc_a310

000000000000a2aa         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
000000000000a2ad         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
000000000000a2b0         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
000000000000a2b3         call       j_memcpy                                    ; memcpy
000000000000a2b8         mov        r15, rax
000000000000a2bb         jmp        loc_a20c

                     loc_a2c0:
000000000000a2c0         cmp        r12, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+3972
000000000000a2c4         mov        eax, 0x1
000000000000a2c9         je         loc_a20c

000000000000a2cf         test       r12, r12
000000000000a2d2         je         loc_9395

000000000000a2d8         js         loc_9395

                     loc_a2de:
000000000000a2de         test       rax, rax                                    ; CODE XREF=vasnprintf+3996, vasnprintf+4315
000000000000a2e1         jne        loc_9395

000000000000a2e7         cmp        rbx, 0xffffffffffffffff
000000000000a2eb         je         loc_9395

000000000000a2f1         mov        r12, rbx
000000000000a2f4         jmp        loc_a1d8

                     loc_a2f9:
000000000000a2f9         js         loc_9395                                    ; CODE XREF=vasnprintf+3986

000000000000a2ff         add        r12, r12
000000000000a302         cmp        r12, rbx
000000000000a305         jae        loc_a1d8

000000000000a30b         jmp        loc_a2de
000000000000a30d         align      16

                     loc_a310:
000000000000a310         mov        r15, rcx                                    ; CODE XREF=vasnprintf+4211, vasnprintf+4216
000000000000a313         jmp        loc_a20c

                     loc_a318:
000000000000a318         cmp        r12, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+1575
000000000000a31c         je         loc_9740

000000000000a322         jmp        loc_93a1

                     loc_a327:
000000000000a327         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=vasnprintf+495
                        ; endp

                     loc_a32c:
000000000000a32c         cmp        r12, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+1173
000000000000a330         mov        edx, 0x1
000000000000a335         je         loc_971b

000000000000a33b         test       r12, r12
000000000000a33e         je         loc_9395

000000000000a344         jns        loc_9f10

000000000000a34a         jmp        loc_9395
000000000000a34f         align      16                                          ; End of unwind block (FDE at 0xf84c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     printf_fetchargs:
000000000000a350         cmp        qword [rsi], 0x0                            ; Begin of unwind block (FDE at 0xf87c), CODE XREF=vasnprintf+108
000000000000a354         mov        rax, qword [rsi+8]
000000000000a358         je         loc_a3bd

000000000000a35a         lea        r8, qword [aNull+8]                         ; 0xe5e0
000000000000a361         lea        r10, qword [wide_null_string.2696]          ; wide_null_string.2696
000000000000a368         lea        r9, qword [aNull]                           ; "(NULL)"
000000000000a36f         xor        ecx, ecx
000000000000a371         nop        dword [rax]
000000000000a378         cmp        dword [rax], 0x16
000000000000a37b         ja         loc_a3c0

000000000000a37d         mov        edx, dword [rax]
000000000000a37f         movsxd     rdx, dword [r8+rdx*4]
000000000000a383         add        rdx, r8
000000000000a386         jmp        rdx
                        ; endp
000000000000a388         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_a390:
000000000000a390         mov        rdx, qword [rdi+8]
000000000000a394         add        rdx, 0xf
000000000000a398         and        rdx, 0xfffffffffffffff0
000000000000a39c         lea        r11, qword [rdx+0x10]
000000000000a3a0         mov        qword [rdi+8], r11
000000000000a3a4         fld        tword [rdx]
000000000000a3a6         fstp       tword [rax+0x10]
000000000000a3a9         nop        dword [rax]
000000000000a3b0         add        rcx, 0x1                                    ; CODE XREF=sub_a3c6+137, sub_a3c6+183
000000000000a3b4         add        rax, 0x20
000000000000a3b8         cmp        qword [rsi], rcx
000000000000a3bb         ja         printf_fetchargs+40
                        ; endp

                     loc_a3bd:
000000000000a3bd         xor        eax, eax                                    ; CODE XREF=printf_fetchargs+8
000000000000a3bf         ret
                        ; endp

                     loc_a3c0:
000000000000a3c0         mov        eax, 0xffffffff                             ; CODE XREF=printf_fetchargs+43
000000000000a3c5         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_a3c6:
000000000000a3c6         mov        r11d, dword [rdi]
000000000000a3c9         cmp        r11d, 0x2f
000000000000a3cd         ja         loc_a50a

000000000000a3d3         mov        edx, r11d
000000000000a3d6         add        rdx, qword [rdi+0x10]
000000000000a3da         add        r11d, 0x8
000000000000a3de         mov        dword [rdi], r11d

                     loc_a3e1:
000000000000a3e1         mov        rdx, qword [rdx]                            ; CODE XREF=sub_a4b0+102
000000000000a3e4         mov        qword [rax+0x10], rdx
000000000000a3e8         jmp        sub_a390+32
                        ; endp
000000000000a3ea         mov        r11d, dword [rdi]
000000000000a3ed         cmp        r11d, 0x2f
000000000000a3f1         ja         sub_a52c                                    ; sub_a52c
000000000000a3f7         mov        edx, r11d
000000000000a3fa         add        rdx, qword [rdi+0x10]
000000000000a3fe         add        r11d, 0x8
000000000000a402         mov        dword [rdi], r11d

                     loc_a405:
000000000000a405         mov        edx, dword [rdx]                            ; CODE XREF=sub_a52c+12
000000000000a407         mov        dword [rax+0x10], edx
000000000000a40a         jmp        sub_a390+32
                        ; endp
000000000000a40c         mov        r11d, dword [rdi]
000000000000a40f         cmp        r11d, 0x2f
000000000000a413         ja         sub_a51b                                    ; sub_a51b
000000000000a419         mov        edx, r11d
000000000000a41c         add        rdx, qword [rdi+0x10]
000000000000a420         add        r11d, 0x8
000000000000a424         mov        dword [rdi], r11d

                     loc_a427:
000000000000a427         mov        edx, dword [rdx]                            ; CODE XREF=sub_a51b+12
000000000000a429         mov        byte [rax+0x10], dl
000000000000a42c         jmp        sub_a390+32
                        ; endp
000000000000a42e         mov        r11d, dword [rdi]
000000000000a431         cmp        r11d, 0x2f
000000000000a435         ja         sub_a4b0+42
000000000000a43b         mov        edx, r11d
000000000000a43e         add        rdx, qword [rdi+0x10]
000000000000a442         add        r11d, 0x8
000000000000a446         mov        dword [rdi], r11d
000000000000a449         mov        edx, dword [rdx]                            ; CODE XREF=sub_a4b0+54
000000000000a44b         mov        word [rax+0x10], dx
000000000000a44f         jmp        sub_a390+32
000000000000a454         mov        r11d, dword [rdi]
000000000000a457         cmp        r11d, 0x2f
000000000000a45b         ja         sub_a4b0+59
000000000000a461         mov        edx, r11d
000000000000a464         add        rdx, qword [rdi+0x10]
000000000000a468         add        r11d, 0x8
000000000000a46c         mov        dword [rdi], r11d
000000000000a46f         mov        rdx, qword [rdx]                            ; CODE XREF=sub_a4b0+71
000000000000a472         test       rdx, rdx
000000000000a475         cmove      rdx, r9
000000000000a479         mov        qword [rax+0x10], rdx
000000000000a47d         jmp        sub_a390+32
000000000000a482         mov        r11d, dword [rdi+4]
000000000000a486         cmp        r11d, 0xaf
000000000000a48d         ja         sub_a53d                                    ; sub_a53d
000000000000a493         mov        edx, r11d
000000000000a496         add        rdx, qword [rdi+0x10]
000000000000a49a         add        r11d, 0x10
000000000000a49e         mov        dword [rdi+4], r11d

                     loc_a4a2:
000000000000a4a2         movsd      xmm0, qword [rdx]                           ; CODE XREF=sub_a53d+12
000000000000a4a6         movsd      qword [rax+0x10], xmm0
000000000000a4ab         jmp        sub_a390+32
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_a4b0:
000000000000a4b0         mov        r11d, dword [rdi]
000000000000a4b3         cmp        r11d, 0x2f
000000000000a4b7         ja         loc_a4fc

000000000000a4b9         mov        edx, r11d
000000000000a4bc         add        rdx, qword [rdi+0x10]
000000000000a4c0         add        r11d, 0x8
000000000000a4c4         mov        dword [rdi], r11d

                     loc_a4c7:
000000000000a4c7         mov        rdx, qword [rdx]                            ; CODE XREF=sub_a4b0+88
000000000000a4ca         test       rdx, rdx
000000000000a4cd         cmove      rdx, r10
000000000000a4d1         mov        qword [rax+0x10], rdx
000000000000a4d5         jmp        sub_a390+32
                        ; endp
000000000000a4da         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_a3c6+111
000000000000a4de         lea        r11, qword [rdx+8]
000000000000a4e2         mov        qword [rdi+8], r11
000000000000a4e6         jmp        sub_a3c6+131
000000000000a4eb         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_a3c6+149
000000000000a4ef         lea        r11, qword [rdx+8]
000000000000a4f3         mov        qword [rdi+8], r11
000000000000a4f7         jmp        sub_a3c6+169

                     loc_a4fc:
000000000000a4fc         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_a4b0+7
000000000000a500         lea        r11, qword [rdx+8]
000000000000a504         mov        qword [rdi+8], r11
000000000000a508         jmp        loc_a4c7

                     loc_a50a:
000000000000a50a         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_a3c6+7
000000000000a50e         lea        r11, qword [rdx+8]
000000000000a512         mov        qword [rdi+8], r11
000000000000a516         jmp        loc_a3e1


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_a51b:
000000000000a51b         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_a3c6+77
000000000000a51f         lea        r11, qword [rdx+8]
000000000000a523         mov        qword [rdi+8], r11
000000000000a527         jmp        loc_a427


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_a52c:
000000000000a52c         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_a3c6+43
000000000000a530         lea        r11, qword [rdx+8]
000000000000a534         mov        qword [rdi+8], r11
000000000000a538         jmp        loc_a405


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_a53d:
000000000000a53d         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_a3c6+199
000000000000a541         lea        r11, qword [rdx+8]
000000000000a545         mov        qword [rdi+8], r11
000000000000a549         jmp        loc_a4a2


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_a54e:
000000000000a54e         nop                                                    ; End of unwind block (FDE at 0xf87c)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128


                     printf_parse:
000000000000a550         push       r15                                         ; Begin of unwind block (FDE at 0xf894), CODE XREF=vasnprintf+89
000000000000a552         push       r14
000000000000a554         lea        rcx, qword [rsi+0x20]
000000000000a558         push       r13
000000000000a55a         push       r12
000000000000a55c         lea        rax, qword [rdx+0x10]
000000000000a560         push       rbp
000000000000a561         push       rbx
000000000000a562         mov        r14, rsi
000000000000a565         mov        r15, rdx
000000000000a568         xor        ebx, ebx
000000000000a56a         mov        r9d, 0x7
000000000000a570         sub        rsp, 0x58
000000000000a574         mov        r10d, 0x7
000000000000a57a         mov        qword [rsi], 0x0
000000000000a581         mov        qword [rsi+8], rcx
000000000000a585         mov        qword [rsp+0x88+var_60], rcx
000000000000a58a         mov        r8, 0xffffffffffffffff
000000000000a591         mov        qword [rdx], 0x0
000000000000a598         mov        qword [rsp+0x88+var_80], rax
000000000000a59d         mov        qword [rdx+8], rax
000000000000a5a1         mov        qword [rsp+0x88+var_70], 0x0
000000000000a5aa         mov        qword [rsp+0x88+var_78], 0x0
000000000000a5b3         mov        qword [rsp+0x88+var_68], 0x0
000000000000a5bc         jmp        loc_a5cb
000000000000a5be         align      64

                     loc_a5c0:
000000000000a5c0         cmp        al, 0x25                                    ; CODE XREF=printf_parse+128
000000000000a5c2         lea        rbp, qword [rdi+1]
000000000000a5c6         je         loc_a608

                     loc_a5c8:
000000000000a5c8         mov        rdi, rbp                                    ; CODE XREF=printf_parse+859, printf_parse+868

                     loc_a5cb:
000000000000a5cb         movzx      eax, byte [rdi]                             ; CODE XREF=printf_parse+108
000000000000a5ce         test       al, al
000000000000a5d0         jne        loc_a5c0

000000000000a5d2         lea        rax, qword [rbx+rbx*4]
000000000000a5d6         lea        rax, qword [rbx+rax*2]
000000000000a5da         mov        qword [rcx+rax*8], rdi
000000000000a5de         mov        rax, qword [rsp+0x88+var_78]
000000000000a5e3         mov        qword [r14+0x10], rax
000000000000a5e7         mov        rax, qword [rsp+0x88+var_70]
000000000000a5ec         mov        qword [r14+0x18], rax
000000000000a5f0         xor        eax, eax

                     loc_a5f2:
000000000000a5f2         add        rsp, 0x58                                   ; CODE XREF=printf_parse+2174, printf_parse+2844
000000000000a5f6         pop        rbx
000000000000a5f7         pop        rbp
000000000000a5f8         pop        r12
000000000000a5fa         pop        r13
000000000000a5fc         pop        r14
000000000000a5fe         pop        r15
000000000000a600         ret
                        ; endp
000000000000a601         align      8

                     loc_a608:
000000000000a608         lea        rax, qword [rbx+rbx*4]                      ; CODE XREF=printf_parse+118
000000000000a60c         mov        r13, r8
000000000000a60f         lea        rax, qword [rbx+rax*2]
000000000000a613         lea        r12, qword [rcx+rax*8]
000000000000a617         mov        qword [r12], rdi
000000000000a61b         mov        dword [r12+0x10], 0x0
000000000000a624         mov        qword [r12+0x18], 0x0
000000000000a62d         mov        qword [r12+0x20], 0x0
000000000000a636         mov        qword [r12+0x28], r8
000000000000a63b         mov        qword [r12+0x30], 0x0
000000000000a644         mov        qword [r12+0x38], 0x0
000000000000a64d         mov        qword [r12+0x40], r8
000000000000a652         mov        qword [r12+0x50], r8
000000000000a657         movzx      ebx, byte [rdi+1]
000000000000a65b         lea        eax, dword [rbx-0x30]
000000000000a65e         cmp        al, 0x9
000000000000a660         ja         loc_a69e

000000000000a662         jmp        loc_aa9a
000000000000a667         align      16

                     loc_a670:
000000000000a670         cmp        bl, 0x2d                                    ; CODE XREF=printf_parse+344
000000000000a673         je         loc_a6b8

000000000000a675         cmp        bl, 0x2b
000000000000a678         je         loc_a6c0

000000000000a67a         cmp        bl, 0x20
000000000000a67d         je         loc_a6d0

000000000000a67f         cmp        bl, 0x23
000000000000a682         je         loc_a6e0

000000000000a684         cmp        bl, 0x30
000000000000a687         je         loc_a6f0

000000000000a689         cmp        bl, 0x49
000000000000a68c         jne        loc_a700

000000000000a68e         or         dword [r12+0x10], 0x40
000000000000a694         nop        dword [rax]

                     loc_a698:
000000000000a698         movzx      ebx, byte [rax]                             ; CODE XREF=printf_parse+352, printf_parse+366, printf_parse+374, printf_parse+390, printf_parse+406, printf_parse+422
000000000000a69b         mov        rbp, rax

                     loc_a69e:
000000000000a69e         lea        rax, qword [rbp+1]                          ; CODE XREF=printf_parse+272, printf_parse+1381, printf_parse+1490
000000000000a6a2         cmp        bl, 0x27
000000000000a6a5         mov        rdx, rax
000000000000a6a8         jne        loc_a670

000000000000a6aa         or         dword [r12+0x10], 0x1
000000000000a6b0         jmp        loc_a698
000000000000a6b2         align      8

                     loc_a6b8:
000000000000a6b8         or         dword [r12+0x10], 0x2                       ; CODE XREF=printf_parse+291
000000000000a6be         jmp        loc_a698

                     loc_a6c0:
000000000000a6c0         or         dword [r12+0x10], 0x4                       ; CODE XREF=printf_parse+296
000000000000a6c6         jmp        loc_a698
000000000000a6c8         align      16

                     loc_a6d0:
000000000000a6d0         or         dword [r12+0x10], 0x8                       ; CODE XREF=printf_parse+301
000000000000a6d6         jmp        loc_a698
000000000000a6d8         align      32

                     loc_a6e0:
000000000000a6e0         or         dword [r12+0x10], 0x10                      ; CODE XREF=printf_parse+306
000000000000a6e6         jmp        loc_a698
000000000000a6e8         align      16

                     loc_a6f0:
000000000000a6f0         or         dword [r12+0x10], 0x20                      ; CODE XREF=printf_parse+311
000000000000a6f6         jmp        loc_a698
000000000000a6f8         align      256

                     loc_a700:
000000000000a700         cmp        bl, 0x2a                                    ; CODE XREF=printf_parse+316
000000000000a703         je         loc_a8b9

000000000000a709         lea        ecx, dword [rbx-0x30]
000000000000a70c         cmp        cl, 0x9
000000000000a70f         jbe        loc_ab27

                     loc_a715:
000000000000a715         cmp        bl, 0x2e                                    ; CODE XREF=printf_parse+1577, printf_parse+2412
000000000000a718         je         loc_a9ef

                     loc_a71e:
000000000000a71e         xor        eax, eax                                    ; CODE XREF=printf_parse+1177, printf_parse+1349, printf_parse+1648, printf_parse+2650
000000000000a720         mov        esi, 0x1
000000000000a725         jmp        loc_a757
000000000000a727         align      16

                     loc_a730:
000000000000a730         cmp        bl, 0x4c                                    ; CODE XREF=printf_parse+526
000000000000a733         je         loc_a770

000000000000a735         cmp        bl, 0x6c
000000000000a738         je         loc_a750

000000000000a73a         cmp        bl, 0x6a
000000000000a73d         je         loc_a750

000000000000a73f         mov        edx, ebx
000000000000a741         and        edx, 0xffffffdf
000000000000a744         cmp        dl, 0x5a
000000000000a747         je         loc_a750

000000000000a749         cmp        bl, 0x74
000000000000a74c         jne        loc_a778

000000000000a74e         nop

                     loc_a750:
000000000000a750         add        eax, 0x8                                    ; CODE XREF=printf_parse+488, printf_parse+493, printf_parse+503

                     loc_a753:
000000000000a753         movzx      ebx, byte [rbp]                             ; CODE XREF=printf_parse+539, printf_parse+547

                     loc_a757:
000000000000a757         add        rbp, 0x1                                    ; CODE XREF=printf_parse+469
000000000000a75b         cmp        bl, 0x68
000000000000a75e         jne        loc_a730

000000000000a760         mov        ecx, eax
000000000000a762         mov        edx, esi
000000000000a764         and        ecx, 0x1
000000000000a767         shl        edx, cl
000000000000a769         or         eax, edx
000000000000a76b         jmp        loc_a753
000000000000a76d         align      16

                     loc_a770:
000000000000a770         or         eax, 0x4                                    ; CODE XREF=printf_parse+483
000000000000a773         jmp        loc_a753
000000000000a775         align      8

                     loc_a778:
000000000000a778         lea        edx, dword [rbx-0x25]                       ; CODE XREF=printf_parse+508
000000000000a77b         cmp        dl, 0x53
000000000000a77e         ja         loc_ad9b

000000000000a784         lea        rcx, qword [switch_table_e65c]              ; switch_table_e65c
000000000000a78b         movzx      edx, dl
000000000000a78e         movsxd     rdx, dword [rcx+rdx*4]
000000000000a792         add        rdx, rcx
000000000000a795         jmp        rdx                                         ; switch statement using table at 0xe65c, with 84 cases, 0xa797,0xa80b,0xac4c,0xac98,0xacab,0xacf8,0xad0b,0xad2c,0xad3c,0xad90,0xad9b

                     loc_a797:
000000000000a797         mov        r11d, 0x10                                  ; case 46, CODE XREF=printf_parse+581
000000000000a79d         mov        ebx, 0x73
000000000000a7a2         nop        word [rax+rax]

                     loc_a7a8:
000000000000a7a8         cmp        r13, 0xffffffffffffffff                     ; CODE XREF=printf_parse+1797, printf_parse+1805, printf_parse+1820, printf_parse+1834, printf_parse+1853, printf_parse+1878, printf_parse+1892, printf_parse+1900, printf_parse+1915, printf_parse+1929, printf_parse+1952
000000000000a7ac         je         loc_ae67

000000000000a7b2         mov        qword [r12+0x50], r13

                     loc_a7b7:
000000000000a7b7         cmp        r9, r13                                     ; CODE XREF=printf_parse+2361
000000000000a7ba         mov        rcx, qword [r15+8]
000000000000a7be         jbe        loc_ade0

                     loc_a7c4:
000000000000a7c4         mov        rax, qword [r15]                            ; CODE XREF=printf_parse+2322
000000000000a7c7         mov        rdx, rax
000000000000a7ca         shl        rdx, 0x5
000000000000a7ce         add        rdx, rcx
000000000000a7d1         cmp        rax, r13
000000000000a7d4         ja         loc_a7f6

000000000000a7d6         nop        word [cs:rax+rax]

                     loc_a7e0:
000000000000a7e0         add        rax, 0x1                                    ; CODE XREF=printf_parse+673
000000000000a7e4         mov        dword [rdx], 0x0
000000000000a7ea         add        rdx, 0x20
000000000000a7ee         cmp        rax, r13
000000000000a7f1         jbe        loc_a7e0

000000000000a7f3         mov        qword [r15], rax

                     loc_a7f6:
000000000000a7f6         shl        r13, 0x5                                    ; CODE XREF=printf_parse+644
000000000000a7fa         lea        rax, qword [rcx+r13]
000000000000a7fe         mov        edx, dword [rax]
000000000000a800         test       edx, edx
000000000000a802         jne        loc_add3

000000000000a808         mov        dword [rax], r11d

                     loc_a80b:
000000000000a80b         mov        byte [r12+0x48], bl                         ; case 0, CODE XREF=printf_parse+581, printf_parse+2182
000000000000a810         mov        rax, qword [r14]
000000000000a813         mov        qword [r12+8], rbp
000000000000a818         lea        rbx, qword [rax+1]
000000000000a81c         cmp        r10, rbx
000000000000a81f         mov        qword [r14], rbx
000000000000a822         ja         loc_a8b0

000000000000a828         test       r10, r10
000000000000a82b         js         loc_b1d7

000000000000a831         add        r10, r10
000000000000a834         movabs     rax, 0x2e8ba2e8ba2e8ba
000000000000a83e         cmp        r10, rax
000000000000a841         ja         loc_b1d7

000000000000a847         lea        rax, qword [r10+r10*4]
000000000000a84b         mov        rdi, qword [r14+8]
000000000000a84f         cmp        qword [rsp+0x88+var_60], rdi
000000000000a854         mov        qword [rsp+0x88+var_48], r9
000000000000a859         mov        qword [rsp+0x88+var_50], r10
000000000000a85e         lea        rax, qword [r10+rax*2]
000000000000a862         mov        qword [rsp+0x88+var_58], r8
000000000000a867         lea        rsi, qword [rax*8]
000000000000a86f         je         loc_af2d

000000000000a875         call       j_realloc                                   ; realloc
000000000000a87a         test       rax, rax
000000000000a87d         mov        rcx, rax
000000000000a880         mov        r8, qword [rsp+0x88+var_58]
000000000000a885         mov        r10, qword [rsp+0x88+var_50]
000000000000a88a         mov        r9, qword [rsp+0x88+var_48]
000000000000a88f         je         loc_b1d7

000000000000a895         mov        rax, qword [rsp+0x88+var_60]
000000000000a89a         cmp        rax, qword [r14+8]
000000000000a89e         mov        rbx, qword [r14]
000000000000a8a1         je         loc_af50

                     loc_a8a7:
000000000000a8a7         mov        qword [r14+8], rcx                          ; CODE XREF=printf_parse+2621
000000000000a8ab         jmp        loc_a5c8

                     loc_a8b0:
000000000000a8b0         mov        rcx, qword [r14+8]                          ; CODE XREF=printf_parse+722
000000000000a8b4         jmp        loc_a5c8

                     loc_a8b9:
000000000000a8b9         mov        rsi, qword [rsp+0x88+var_78]                ; CODE XREF=printf_parse+435
000000000000a8be         mov        ecx, 0x1
000000000000a8c3         mov        qword [r12+0x18], rbp
000000000000a8c8         mov        qword [r12+0x20], rax
000000000000a8cd         test       rsi, rsi
000000000000a8d0         cmovne     rcx, rsi
000000000000a8d4         mov        qword [rsp+0x88+var_78], rcx
000000000000a8d9         movzx      ecx, byte [rbp+1]
000000000000a8dd         lea        esi, dword [rcx-0x30]
000000000000a8e0         cmp        sil, 0x9
000000000000a8e4         jbe        loc_abc5

                     loc_a8ea:
000000000000a8ea         mov        rsi, qword [rsp+0x88+var_68]                ; CODE XREF=printf_parse+1677
000000000000a8ef         cmp        rsi, 0xffffffffffffffff
000000000000a8f3         lea        rdx, qword [rsi+1]
000000000000a8f7         mov        qword [r12+0x28], rsi
000000000000a8fc         je         loc_ad9b

000000000000a902         mov        rbx, qword [rsp+0x88+var_68]
000000000000a907         mov        rbp, rax
000000000000a90a         mov        qword [rsp+0x88+var_68], rdx

                     loc_a90f:
000000000000a90f         cmp        r9, rbx                                     ; CODE XREF=printf_parse+1783
000000000000a912         mov        rcx, qword [r15+8]
000000000000a916         ja         loc_af92

000000000000a91c         add        r9, r9
000000000000a91f         lea        rax, qword [rbx+1]
000000000000a923         cmp        r9, rbx
000000000000a926         cmovbe     r9, rax
000000000000a92a         movabs     rax, 0x7ffffffffffffff
000000000000a934         cmp        r9, rax
000000000000a937         ja         loc_b1db

000000000000a93d         mov        rsi, r9
000000000000a940         mov        qword [rsp+0x88+var_48], r9
000000000000a945         mov        qword [rsp+0x88+var_50], r10
000000000000a94a         shl        rsi, 0x5
000000000000a94e         cmp        qword [rsp+0x88+var_80], rcx
000000000000a953         mov        qword [rsp+0x88+var_58], r8
000000000000a958         je         loc_b071

000000000000a95e         mov        rdi, rcx                                    ; argument "__ptr" for method j_realloc
000000000000a961         call       j_realloc                                   ; realloc
000000000000a966         mov        rdx, qword [r15+8]
000000000000a96a         mov        r8, qword [rsp+0x88+var_58]
000000000000a96f         mov        rcx, rax
000000000000a972         mov        r10, qword [rsp+0x88+var_50]
000000000000a977         mov        r9, qword [rsp+0x88+var_48]

                     loc_a97c:
000000000000a97c         test       rcx, rcx                                    ; CODE XREF=printf_parse+2880
000000000000a97f         je         loc_b237

000000000000a985         cmp        qword [rsp+0x88+var_80], rdx
000000000000a98a         mov        rax, qword [r15]
000000000000a98d         je         loc_b14b

                     loc_a993:
000000000000a993         mov        qword [r15+8], rcx                          ; CODE XREF=printf_parse+3123

                     loc_a997:
000000000000a997         mov        rdx, rax                                    ; CODE XREF=printf_parse+2629
000000000000a99a         shl        rdx, 0x5
000000000000a99e         add        rdx, rcx
000000000000a9a1         cmp        rax, rbx
000000000000a9a4         ja         loc_a9c6

000000000000a9a6         nop        word [cs:rax+rax]

                     loc_a9b0:
000000000000a9b0         add        rax, 0x1                                    ; CODE XREF=printf_parse+1137
000000000000a9b4         mov        dword [rdx], 0x0
000000000000a9ba         add        rdx, 0x20
000000000000a9be         cmp        rax, rbx
000000000000a9c1         jbe        loc_a9b0

000000000000a9c3         mov        qword [r15], rax

                     loc_a9c6:
000000000000a9c6         shl        rbx, 0x5                                    ; CODE XREF=printf_parse+1108
000000000000a9ca         lea        rax, qword [rcx+rbx]
000000000000a9ce         mov        edx, dword [rax]
000000000000a9d0         test       edx, edx
000000000000a9d2         jne        loc_aeab

000000000000a9d8         mov        dword [rax], 0x5
000000000000a9de         movzx      ebx, byte [rbp]
000000000000a9e2         lea        rdx, qword [rbp+1]
000000000000a9e6         cmp        bl, 0x2e
000000000000a9e9         jne        loc_a71e

                     loc_a9ef:
000000000000a9ef         cmp        byte [rbp+1], 0x2a                          ; CODE XREF=printf_parse+456
000000000000a9f3         mov        qword [r12+0x30], rbp
000000000000a9f8         jne        loc_ab7e

000000000000a9fe         mov        rsi, qword [rsp+0x88+var_70]
000000000000aa03         lea        r11, qword [rbp+2]
000000000000aa07         mov        eax, 0x2
000000000000aa0c         mov        qword [r12+0x38], r11
000000000000aa11         cmp        rsi, 0x2
000000000000aa15         cmovae     rax, rsi
000000000000aa19         mov        qword [rsp+0x88+var_70], rax
000000000000aa1e         movsx      eax, byte [rbp+2]
000000000000aa22         lea        edx, dword [rax-0x30]
000000000000aa25         cmp        dl, 0x9
000000000000aa28         jbe        loc_b0bc

                     loc_aa2e:
000000000000aa2e         mov        rbx, qword [r12+0x40]                       ; CODE XREF=printf_parse+2946
000000000000aa33         cmp        rbx, 0xffffffffffffffff
000000000000aa37         je         loc_b095

                     loc_aa3d:
000000000000aa3d         cmp        r9, rbx                                     ; CODE XREF=printf_parse+2919, printf_parse+3161
000000000000aa40         mov        rcx, qword [r15+8]
000000000000aa44         jbe        loc_afaf

000000000000aa4a         mov        rax, qword [r15]

                     loc_aa4d:
000000000000aa4d         mov        rdx, rax                                    ; CODE XREF=printf_parse+2788
000000000000aa50         shl        rdx, 0x5
000000000000aa54         add        rdx, rcx
000000000000aa57         cmp        rax, rbx
000000000000aa5a         ja         loc_aa76

000000000000aa5c         nop        dword [rax]

                     loc_aa60:
000000000000aa60         add        rax, 0x1                                    ; CODE XREF=printf_parse+1313
000000000000aa64         mov        dword [rdx], 0x0
000000000000aa6a         add        rdx, 0x20
000000000000aa6e         cmp        rax, rbx
000000000000aa71         jbe        loc_aa60

000000000000aa73         mov        qword [r15], rax

                     loc_aa76:
000000000000aa76         shl        rbx, 0x5                                    ; CODE XREF=printf_parse+1290
000000000000aa7a         lea        rax, qword [rcx+rbx]
000000000000aa7e         mov        edx, dword [rax]
000000000000aa80         test       edx, edx
000000000000aa82         jne        loc_af9a

000000000000aa88         mov        dword [rax], 0x5
000000000000aa8e         mov        rbp, r11
000000000000aa91         movzx      ebx, byte [r11]
000000000000aa95         jmp        loc_a71e

                     loc_aa9a:
000000000000aa9a         mov        rax, rbp                                    ; CODE XREF=printf_parse+274
000000000000aa9d         nop        dword [rax]

                     loc_aaa0:
000000000000aaa0         add        rax, 0x1                                    ; CODE XREF=printf_parse+1373
000000000000aaa4         movzx      edx, byte [rax]
000000000000aaa7         lea        ecx, dword [rdx-0x30]
000000000000aaaa         cmp        cl, 0x9
000000000000aaad         jbe        loc_aaa0

000000000000aaaf         cmp        dl, 0x24
000000000000aab2         mov        r13, r8
000000000000aab5         jne        loc_a69e

000000000000aabb         xor        edx, edx

                     loc_aabd:
000000000000aabd         movsx      eax, bl                                     ; CODE XREF=printf_parse+1463
000000000000aac0         movabs     rdi, 0x1999999999999999
000000000000aaca         mov        rsi, r8
000000000000aacd         sub        eax, 0x30
000000000000aad0         cmp        rdx, rdi
000000000000aad3         cdqe
000000000000aad5         ja         loc_aade

000000000000aad7         lea        rsi, qword [rdx+rdx*4]
000000000000aadb         add        rsi, rsi

                     loc_aade:
000000000000aade         mov        rcx, rbp                                    ; CODE XREF=printf_parse+1413

                     loc_aae1:
000000000000aae1         add        rax, rsi                                    ; CODE XREF=printf_parse+2390
000000000000aae4         movzx      ebx, byte [rbp+1]
000000000000aae8         setb       sil
000000000000aaec         add        rbp, 0x1
000000000000aaf0         mov        rdx, rax
000000000000aaf3         movzx      esi, sil
000000000000aaf7         test       rsi, rsi
000000000000aafa         lea        edi, dword [rbx-0x30]
000000000000aafd         jne        loc_ae8e

000000000000ab03         cmp        dil, 0x9
000000000000ab07         jbe        loc_aabd

000000000000ab09         mov        r13, rax
000000000000ab0c         sub        r13, 0x1
000000000000ab10         cmp        r13, 0xfffffffffffffffd
000000000000ab14         ja         loc_ad9b

000000000000ab1a         lea        rbp, qword [rcx+2]
000000000000ab1e         movzx      ebx, byte [rcx+2]
000000000000ab22         jmp        loc_a69e

                     loc_ab27:
000000000000ab27         mov        qword [r12+0x18], rbp                       ; CODE XREF=printf_parse+447
000000000000ab2c         movzx      edi, byte [rbp]
000000000000ab30         mov        rsi, rbp
000000000000ab33         lea        ecx, dword [rdi-0x30]
000000000000ab36         cmp        cl, 0x9
000000000000ab39         jbe        loc_ab47

000000000000ab3b         jmp        loc_ab70
000000000000ab3d         align      64

                     loc_ab40:
000000000000ab40         mov        rbp, rax                                    ; CODE XREF=printf_parse+1536
000000000000ab43         add        rax, 0x1

                     loc_ab47:
000000000000ab47         movzx      edi, byte [rax]                             ; CODE XREF=printf_parse+1513
000000000000ab4a         lea        edx, dword [rdi-0x30]
000000000000ab4d         cmp        dl, 0x9
000000000000ab50         jbe        loc_ab40

000000000000ab52         mov        rcx, rax
000000000000ab55         lea        rdx, qword [rbp+2]
000000000000ab59         mov        rbp, rax
000000000000ab5c         sub        rcx, rsi
000000000000ab5f         mov        rsi, qword [rsp+0x88+var_78]
000000000000ab64         cmp        rsi, rcx
000000000000ab67         cmovae     rcx, rsi
000000000000ab6b         mov        qword [rsp+0x88+var_78], rcx

                     loc_ab70:
000000000000ab70         mov        qword [r12+0x20], rbp                       ; CODE XREF=printf_parse+1515
000000000000ab75         movzx      ebx, byte [rbp]
000000000000ab79         jmp        loc_a715

                     loc_ab7e:
000000000000ab7e         movzx      eax, byte [rbp+1]                           ; CODE XREF=printf_parse+1192
000000000000ab82         sub        eax, 0x30
000000000000ab85         cmp        al, 0x9
000000000000ab87         ja         loc_ab9e

000000000000ab89         nop        dword [rax]

                     loc_ab90:
000000000000ab90         add        rdx, 0x1                                    ; CODE XREF=printf_parse+1612
000000000000ab94         movzx      eax, byte [rdx]
000000000000ab97         sub        eax, 0x30
000000000000ab9a         cmp        al, 0x9
000000000000ab9c         jbe        loc_ab90

                     loc_ab9e:
000000000000ab9e         mov        rsi, qword [rsp+0x88+var_70]                ; CODE XREF=printf_parse+1591
000000000000aba3         mov        rax, rdx
000000000000aba6         mov        qword [r12+0x38], rdx
000000000000abab         sub        rax, rbp
000000000000abae         movzx      ebx, byte [rdx]
000000000000abb1         mov        rbp, rdx
000000000000abb4         cmp        rsi, rax
000000000000abb7         cmovae     rax, rsi
000000000000abbb         mov        qword [rsp+0x88+var_70], rax
000000000000abc0         jmp        loc_a71e

                     loc_abc5:
000000000000abc5         mov        rsi, rax                                    ; CODE XREF=printf_parse+916

                     loc_abc8:
000000000000abc8         add        rsi, 0x1                                    ; CODE XREF=printf_parse+1671
000000000000abcc         movzx      edi, byte [rsi]
000000000000abcf         lea        r11d, dword [rdi-0x30]
000000000000abd3         cmp        r11b, 0x9
000000000000abd7         jbe        loc_abc8

000000000000abd9         cmp        dil, 0x24
000000000000abdd         jne        loc_a8ea

000000000000abe3         xor        esi, esi

                     loc_abe5:
000000000000abe5         movsx      eax, cl                                     ; CODE XREF=printf_parse+1758
000000000000abe8         movabs     rdi, 0x1999999999999999
000000000000abf2         mov        rcx, r8
000000000000abf5         sub        eax, 0x30
000000000000abf8         cmp        rsi, rdi
000000000000abfb         cdqe
000000000000abfd         ja         loc_ac06

000000000000abff         lea        rcx, qword [rsi+rsi*4]
000000000000ac03         add        rcx, rcx

                     loc_ac06:
000000000000ac06         mov        rbp, rdx                                    ; CODE XREF=printf_parse+1709

                     loc_ac09:
000000000000ac09         xor        r11d, r11d                                  ; CODE XREF=printf_parse+3062
000000000000ac0c         add        rax, rcx
000000000000ac0f         movzx      ecx, byte [rdx+1]
000000000000ac13         setb       r11b
000000000000ac17         add        rdx, 0x1
000000000000ac1b         mov        rsi, rax
000000000000ac1e         test       r11, r11
000000000000ac21         lea        edi, dword [rcx-0x30]
000000000000ac24         jne        loc_b12e

000000000000ac2a         cmp        dil, 0x9
000000000000ac2e         jbe        loc_abe5

000000000000ac30         lea        rbx, qword [rax-1]
000000000000ac34         cmp        rbx, 0xfffffffffffffffd
000000000000ac38         ja         loc_ad9b

000000000000ac3e         mov        qword [r12+0x28], rbx
000000000000ac43         add        rbp, 0x2
000000000000ac47         jmp        loc_a90f

                     loc_ac4c:
000000000000ac4c         cmp        eax, 0xf                                    ; case 73, CODE XREF=printf_parse+581
000000000000ac4f         mov        r11d, 0x16
000000000000ac55         jg         loc_a7a8

000000000000ac5b         test       al, 0x4
000000000000ac5d         jne        loc_a7a8

000000000000ac63         cmp        eax, 0x7
000000000000ac66         mov        r11d, 0x15
000000000000ac6c         jg         loc_a7a8

000000000000ac72         test       al, 0x2
000000000000ac74         mov        r11d, 0x12
000000000000ac7a         jne        loc_a7a8

000000000000ac80         xor        r11d, r11d
000000000000ac83         test       al, 0x1
000000000000ac85         sete       r11b
000000000000ac89         add        r11d, 0x13
000000000000ac8d         jmp        loc_a7a8
000000000000ac92         align      8

                     loc_ac98:
000000000000ac98         xor        r11d, r11d                                  ; case 62, CODE XREF=printf_parse+581
000000000000ac9b         cmp        eax, 0x7
000000000000ac9e         setg       r11b
000000000000aca2         add        r11d, 0xd
000000000000aca6         jmp        loc_a7a8

                     loc_acab:
000000000000acab         cmp        eax, 0xf                                    ; case 68, CODE XREF=printf_parse+581
000000000000acae         mov        r11d, 0x9
000000000000acb4         jg         loc_a7a8

000000000000acba         test       al, 0x4
000000000000acbc         jne        loc_a7a8

000000000000acc2         cmp        eax, 0x7
000000000000acc5         mov        r11d, 0x7
000000000000accb         jg         loc_a7a8

000000000000acd1         test       al, 0x2
000000000000acd3         mov        r11d, 0x1
000000000000acd9         jne        loc_a7a8

000000000000acdf         and        eax, 0x1
000000000000ace2         cmp        eax, 0x1
000000000000ace5         sbb        r11d, r11d
000000000000ace8         and        r11d, 0x2
000000000000acec         add        r11d, 0x3
000000000000acf0         jmp        loc_a7a8
000000000000acf5         align      8

                     loc_acf8:
000000000000acf8         xor        r11d, r11d                                  ; case 78, CODE XREF=printf_parse+581
000000000000acfb         cmp        eax, 0x7
000000000000acfe         setg       r11b
000000000000ad02         add        r11d, 0xf
000000000000ad06         jmp        loc_a7a8

                     loc_ad0b:
000000000000ad0b         cmp        eax, 0xf                                    ; case 66, CODE XREF=printf_parse+581
000000000000ad0e         mov        r11d, 0xc
000000000000ad14         jg         loc_a7a8

000000000000ad1a         xor        r11d, r11d
000000000000ad1d         test       al, 0x4
000000000000ad1f         setne      r11b
000000000000ad23         add        r11d, 0xb
000000000000ad27         jmp        loc_a7a8

                     loc_ad2c:
000000000000ad2c         mov        r11d, 0xe                                   ; case 30, CODE XREF=printf_parse+581
000000000000ad32         mov        ebx, 0x63
000000000000ad37         jmp        loc_a7a8

                     loc_ad3c:
000000000000ad3c         cmp        eax, 0xf                                    ; case 83, CODE XREF=printf_parse+581
000000000000ad3f         mov        r11d, 0xa
000000000000ad45         jg         loc_a7a8

000000000000ad4b         test       al, 0x4
000000000000ad4d         jne        loc_a7a8

000000000000ad53         cmp        eax, 0x7
000000000000ad56         mov        r11d, 0x8
000000000000ad5c         jg         loc_a7a8

000000000000ad62         test       al, 0x2
000000000000ad64         mov        r11d, 0x2
000000000000ad6a         jne        loc_a7a8

000000000000ad70         and        eax, 0x1
000000000000ad73         cmp        eax, 0x1
000000000000ad76         sbb        r11d, r11d
000000000000ad79         and        r11d, 0x2
000000000000ad7d         add        r11d, 0x4
000000000000ad81         jmp        loc_a7a8
000000000000ad86         align      16

                     loc_ad90:
000000000000ad90         mov        r11d, 0x11                                  ; case 75, CODE XREF=printf_parse+581
000000000000ad96         jmp        loc_a7a8

                     loc_ad9b:
000000000000ad9b         mov        rcx, qword [r15+8]                          ; case 82, CODE XREF=printf_parse+558, printf_parse+581, printf_parse+940, printf_parse+1476, printf_parse+1768, printf_parse+2345, printf_parse+2370, printf_parse+2903, printf_parse+3019, printf_parse+3042, printf_parse+3146

                     loc_ad9f:
000000000000ad9f         cmp        qword [rsp+0x88+var_80], rcx                ; CODE XREF=printf_parse+2188, printf_parse+2398, printf_parse+2637
000000000000ada4         je         loc_adae

000000000000ada6         mov        rdi, rcx                                    ; argument "__ptr" for method j_free
000000000000ada9         call       j_free                                      ; free

                     loc_adae:
000000000000adae         mov        rdi, qword [r14+8]                          ; CODE XREF=printf_parse+2132
000000000000adb2         cmp        qword [rsp+0x88+var_60], rdi
000000000000adb7         je         loc_adbe

000000000000adb9         call       j_free                                      ; free

                     loc_adbe:
000000000000adbe         call       j___errno_location                          ; __errno_location, CODE XREF=printf_parse+2151
000000000000adc3         mov        dword [rax], 0x16
000000000000adc9         mov        eax, 0xffffffff
000000000000adce         jmp        loc_a5f2

                     loc_add3:
000000000000add3         cmp        edx, r11d                                   ; CODE XREF=printf_parse+690
000000000000add6         je         loc_a80b

000000000000addc         jmp        loc_ad9f
000000000000adde         align      32

                     loc_ade0:
000000000000ade0         add        r9, r9                                      ; CODE XREF=printf_parse+622
000000000000ade3         lea        rax, qword [r13+1]
000000000000ade7         cmp        r9, r13
000000000000adea         cmovbe     r9, rax
000000000000adee         movabs     rax, 0x7ffffffffffffff
000000000000adf8         cmp        r9, rax
000000000000adfb         ja         loc_b1db

000000000000ae01         mov        rsi, r9
000000000000ae04         mov        qword [rsp+0x88+var_40], r9
000000000000ae09         mov        qword [rsp+0x88+var_48], r10
000000000000ae0e         shl        rsi, 0x5
000000000000ae12         cmp        qword [rsp+0x88+var_80], rcx
000000000000ae17         mov        qword [rsp+0x88+var_50], r8
000000000000ae1c         mov        dword [rsp+0x88+var_58], r11d
000000000000ae21         je         loc_aec1

000000000000ae27         mov        rdi, rcx                                    ; argument "__ptr" for method j_realloc
000000000000ae2a         call       j_realloc                                   ; realloc
000000000000ae2f         test       rax, rax
000000000000ae32         mov        rcx, rax
000000000000ae35         mov        r11d, dword [rsp+0x88+var_58]
000000000000ae3a         mov        r8, qword [rsp+0x88+var_50]
000000000000ae3f         mov        r10, qword [rsp+0x88+var_48]
000000000000ae44         mov        r9, qword [rsp+0x88+var_40]
000000000000ae49         je         loc_b1d7

000000000000ae4f         mov        rax, qword [rsp+0x88+var_80]
000000000000ae54         cmp        rax, qword [r15+8]
000000000000ae58         je         loc_aee9

                     loc_ae5e:
000000000000ae5e         mov        qword [r15+8], rcx                          ; CODE XREF=printf_parse+2520
000000000000ae62         jmp        loc_a7c4

                     loc_ae67:
000000000000ae67         mov        rsi, qword [rsp+0x88+var_68]                ; CODE XREF=printf_parse+604
000000000000ae6c         cmp        rsi, 0xffffffffffffffff
000000000000ae70         lea        rax, qword [rsi+1]
000000000000ae74         mov        qword [r12+0x50], rsi
000000000000ae79         je         loc_ad9b

000000000000ae7f         mov        r13, qword [rsp+0x88+var_68]
000000000000ae84         mov        qword [rsp+0x88+var_68], rax
000000000000ae89         jmp        loc_a7b7

                     loc_ae8e:
000000000000ae8e         cmp        dil, 0x9                                    ; CODE XREF=printf_parse+1453
000000000000ae92         ja         loc_ad9b

000000000000ae98         movsx      eax, bl
000000000000ae9b         mov        rsi, r8
000000000000ae9e         mov        rcx, rbp
000000000000aea1         sub        eax, 0x30
000000000000aea4         cdqe
000000000000aea6         jmp        loc_aae1

                     loc_aeab:
000000000000aeab         cmp        edx, 0x5                                    ; CODE XREF=printf_parse+1154
000000000000aeae         jne        loc_ad9f

000000000000aeb4         movzx      ebx, byte [rbp]
000000000000aeb8         lea        rdx, qword [rbp+1]
000000000000aebc         jmp        loc_a715

                     loc_aec1:
000000000000aec1         mov        rdi, rsi                                    ; argument "__size" for method j_malloc, CODE XREF=printf_parse+2257
000000000000aec4         call       j_malloc                                    ; malloc
000000000000aec9         test       rax, rax
000000000000aecc         mov        rcx, rax
000000000000aecf         mov        r11d, dword [rsp+0x88+var_58]
000000000000aed4         mov        r8, qword [rsp+0x88+var_50]
000000000000aed9         mov        r10, qword [rsp+0x88+var_48]
000000000000aede         mov        r9, qword [rsp+0x88+var_40]
000000000000aee3         je         loc_b04c

                     loc_aee9:
000000000000aee9         mov        rdx, qword [r15]                            ; CODE XREF=printf_parse+2312
000000000000aeec         mov        rsi, qword [rsp+0x88+var_80]                ; argument "__src" for method j_memcpy
000000000000aef1         mov        rdi, rcx                                    ; argument "__dest" for method j_memcpy
000000000000aef4         mov        qword [rsp+0x88+var_40], r9
000000000000aef9         mov        qword [rsp+0x88+var_48], r10
000000000000aefe         mov        qword [rsp+0x88+var_50], r8
000000000000af03         mov        dword [rsp+0x88+var_58], r11d
000000000000af08         shl        rdx, 0x5                                    ; argument "__n" for method j_memcpy
000000000000af0c         call       j_memcpy                                    ; memcpy
000000000000af11         mov        r9, qword [rsp+0x88+var_40]
000000000000af16         mov        r10, qword [rsp+0x88+var_48]
000000000000af1b         mov        rcx, rax
000000000000af1e         mov        r8, qword [rsp+0x88+var_50]
000000000000af23         mov        r11d, dword [rsp+0x88+var_58]
000000000000af28         jmp        loc_ae5e

                     loc_af2d:
000000000000af2d         mov        rdi, rsi                                    ; argument "__size" for method j_malloc, CODE XREF=printf_parse+799
000000000000af30         call       j_malloc                                    ; malloc
000000000000af35         test       rax, rax
000000000000af38         mov        rcx, rax
000000000000af3b         mov        r8, qword [rsp+0x88+var_58]
000000000000af40         mov        r10, qword [rsp+0x88+var_50]
000000000000af45         mov        r9, qword [rsp+0x88+var_48]
000000000000af4a         je         loc_b039

                     loc_af50:
000000000000af50         lea        rax, qword [rbx+rbx*4]                      ; CODE XREF=printf_parse+849
000000000000af54         mov        rsi, qword [rsp+0x88+var_60]                ; argument "__src" for method j_memcpy
000000000000af59         mov        rdi, rcx                                    ; argument "__dest" for method j_memcpy
000000000000af5c         mov        qword [rsp+0x88+var_48], r9
000000000000af61         mov        qword [rsp+0x88+var_50], r10
000000000000af66         lea        rdx, qword [rbx+rax*2]
000000000000af6a         mov        qword [rsp+0x88+var_58], r8
000000000000af6f         shl        rdx, 0x3                                    ; argument "__n" for method j_memcpy
000000000000af73         call       j_memcpy                                    ; memcpy
000000000000af78         mov        rbx, qword [r14]
000000000000af7b         mov        rcx, rax
000000000000af7e         mov        r9, qword [rsp+0x88+var_48]
000000000000af83         mov        r10, qword [rsp+0x88+var_50]
000000000000af88         mov        r8, qword [rsp+0x88+var_58]
000000000000af8d         jmp        loc_a8a7

                     loc_af92:
000000000000af92         mov        rax, qword [r15]                            ; CODE XREF=printf_parse+966
000000000000af95         jmp        loc_a997

                     loc_af9a:
000000000000af9a         cmp        edx, 0x5                                    ; CODE XREF=printf_parse+1330
000000000000af9d         jne        loc_ad9f

000000000000afa3         movzx      ebx, byte [r11]
000000000000afa7         mov        rbp, r11
000000000000afaa         jmp        loc_a71e

                     loc_afaf:
000000000000afaf         add        r9, r9                                      ; CODE XREF=printf_parse+1268
000000000000afb2         lea        rax, qword [rbx+1]
000000000000afb6         cmp        r9, rbx
000000000000afb9         cmovbe     r9, rax
000000000000afbd         movabs     rax, 0x7ffffffffffffff
000000000000afc7         cmp        r9, rax
000000000000afca         ja         loc_b1db

000000000000afd0         mov        rsi, r9
000000000000afd3         mov        qword [rsp+0x88+var_40], r9
000000000000afd8         mov        qword [rsp+0x88+var_48], r10
000000000000afdd         shl        rsi, 0x5
000000000000afe1         cmp        qword [rsp+0x88+var_80], rcx
000000000000afe6         mov        qword [rsp+0x88+var_50], r8
000000000000afeb         mov        qword [rsp+0x88+var_58], r11
000000000000aff0         je         loc_b1ae

000000000000aff6         mov        rdi, rcx                                    ; argument "__ptr" for method j_realloc
000000000000aff9         call       j_realloc                                   ; realloc
000000000000affe         mov        rdx, qword [r15+8]
000000000000b002         mov        r11, qword [rsp+0x88+var_58]
000000000000b007         mov        rcx, rax
000000000000b00a         mov        r8, qword [rsp+0x88+var_50]
000000000000b00f         mov        r10, qword [rsp+0x88+var_48]
000000000000b014         mov        r9, qword [rsp+0x88+var_40]

                     loc_b019:
000000000000b019         test       rcx, rcx                                    ; CODE XREF=printf_parse+3202
000000000000b01c         je         loc_b237

000000000000b022         cmp        qword [rsp+0x88+var_80], rdx
000000000000b027         mov        rax, qword [r15]
000000000000b02a         je         loc_b1f0

                     loc_b030:
000000000000b030         mov        qword [r15+8], rcx                          ; CODE XREF=printf_parse+3298
000000000000b034         jmp        loc_aa4d

                     loc_b039:
000000000000b039         mov        rcx, qword [r15+8]                          ; CODE XREF=printf_parse+2554
000000000000b03d         cmp        qword [rsp+0x88+var_80], rcx
000000000000b042         je         loc_b05c

                     loc_b044:
000000000000b044         mov        rdi, rcx                                    ; argument "__ptr" for method j_free, CODE XREF=printf_parse+3216
000000000000b047         call       j_free                                      ; free

                     loc_b04c:
000000000000b04c         mov        rdi, qword [r14+8]                          ; CODE XREF=printf_parse+2451, printf_parse+3222
000000000000b050         cmp        qword [rsp+0x88+var_60], rdi
000000000000b055         je         loc_b05c

000000000000b057         call       j_free                                      ; free

                     loc_b05c:
000000000000b05c         call       j___errno_location                          ; __errno_location, CODE XREF=printf_parse+2802, printf_parse+2821
000000000000b061         mov        dword [rax], 0xc
000000000000b067         mov        eax, 0xffffffff
000000000000b06c         jmp        loc_a5f2

                     loc_b071:
000000000000b071         mov        rdi, rsi                                    ; argument "__size" for method j_malloc, CODE XREF=printf_parse+1032
000000000000b074         call       j_malloc                                    ; malloc
000000000000b079         mov        rdx, qword [rsp+0x88+var_80]
000000000000b07e         mov        rcx, rax
000000000000b081         mov        r9, qword [rsp+0x88+var_48]
000000000000b086         mov        r10, qword [rsp+0x88+var_50]
000000000000b08b         mov        r8, qword [rsp+0x88+var_58]
000000000000b090         jmp        loc_a97c

                     loc_b095:
000000000000b095         mov        rsi, qword [rsp+0x88+var_68]                ; CODE XREF=printf_parse+1255
000000000000b09a         cmp        rsi, 0xffffffffffffffff
000000000000b09e         lea        rax, qword [rsi+1]
000000000000b0a2         mov        qword [r12+0x40], rsi
000000000000b0a7         je         loc_ad9b

000000000000b0ad         mov        rbx, qword [rsp+0x88+var_68]
000000000000b0b2         mov        qword [rsp+0x88+var_68], rax
000000000000b0b7         jmp        loc_aa3d

                     loc_b0bc:
000000000000b0bc         mov        rdx, r11                                    ; CODE XREF=printf_parse+1240

                     loc_b0bf:
000000000000b0bf         add        rdx, 0x1                                    ; CODE XREF=printf_parse+2941
000000000000b0c3         movzx      ecx, byte [rdx]
000000000000b0c6         lea        esi, dword [rcx-0x30]
000000000000b0c9         cmp        sil, 0x9
000000000000b0cd         jbe        loc_b0bf

000000000000b0cf         cmp        cl, 0x24
000000000000b0d2         jne        loc_aa2e

000000000000b0d8         xor        ecx, ecx

                     loc_b0da:
000000000000b0da         movabs     rsi, 0x1999999999999999                     ; CODE XREF=printf_parse+3132
000000000000b0e4         sub        eax, 0x30
000000000000b0e7         mov        rdx, r8
000000000000b0ea         cmp        rcx, rsi
000000000000b0ed         cdqe
000000000000b0ef         ja         loc_b0f8

000000000000b0f1         lea        rdx, qword [rcx+rcx*4]
000000000000b0f5         add        rdx, rdx

                     loc_b0f8:
000000000000b0f8         mov        rsi, r11                                    ; CODE XREF=printf_parse+2975

                     loc_b0fb:
000000000000b0fb         xor        ebx, ebx                                    ; CODE XREF=printf_parse+3036
000000000000b0fd         add        rdx, rax
000000000000b100         movsx      eax, byte [r11+1]
000000000000b105         setb       bl
000000000000b108         add        r11, 0x1
000000000000b10c         mov        rcx, rdx
000000000000b10f         test       rbx, rbx
000000000000b112         lea        edi, dword [rax-0x30]
000000000000b115         je         loc_b188

000000000000b117         cmp        dil, 0x9
000000000000b11b         ja         loc_ad9b

000000000000b121         sub        eax, 0x30
000000000000b124         mov        rdx, r8
000000000000b127         mov        rsi, r11
000000000000b12a         cdqe
000000000000b12c         jmp        loc_b0fb

                     loc_b12e:
000000000000b12e         cmp        dil, 0x9                                    ; CODE XREF=printf_parse+1748
000000000000b132         ja         loc_ad9b

000000000000b138         movsx      eax, cl
000000000000b13b         mov        rbp, rdx
000000000000b13e         mov        rcx, r8
000000000000b141         sub        eax, 0x30
000000000000b144         cdqe
000000000000b146         jmp        loc_ac09

                     loc_b14b:
000000000000b14b         mov        rsi, qword [rsp+0x88+var_80]                ; argument "__src" for method j_memcpy, CODE XREF=printf_parse+1085
000000000000b150         shl        rax, 0x5
000000000000b154         mov        rdi, rcx                                    ; argument "__dest" for method j_memcpy
000000000000b157         mov        rdx, rax                                    ; argument "__n" for method j_memcpy
000000000000b15a         mov        qword [rsp+0x88+var_48], r9
000000000000b15f         mov        qword [rsp+0x88+var_50], r10
000000000000b164         mov        qword [rsp+0x88+var_58], r8
000000000000b169         call       j_memcpy                                    ; memcpy
000000000000b16e         mov        r9, qword [rsp+0x88+var_48]
000000000000b173         mov        rcx, rax
000000000000b176         mov        r10, qword [rsp+0x88+var_50]
000000000000b17b         mov        rax, qword [r15]
000000000000b17e         mov        r8, qword [rsp+0x88+var_58]
000000000000b183         jmp        loc_a993

                     loc_b188:
000000000000b188         cmp        dil, 0x9                                    ; CODE XREF=printf_parse+3013
000000000000b18c         jbe        loc_b0da

000000000000b192         lea        rbx, qword [rdx-1]
000000000000b196         cmp        rbx, 0xfffffffffffffffd
000000000000b19a         ja         loc_ad9b

000000000000b1a0         mov        qword [r12+0x40], rbx
000000000000b1a5         lea        r11, qword [rsi+2]
000000000000b1a9         jmp        loc_aa3d

                     loc_b1ae:
000000000000b1ae         mov        rdi, rsi                                    ; argument "__size" for method j_malloc, CODE XREF=printf_parse+2720
000000000000b1b1         call       j_malloc                                    ; malloc
000000000000b1b6         mov        rdx, qword [rsp+0x88+var_80]
000000000000b1bb         mov        rcx, rax
000000000000b1be         mov        r9, qword [rsp+0x88+var_40]
000000000000b1c3         mov        r10, qword [rsp+0x88+var_48]
000000000000b1c8         mov        r8, qword [rsp+0x88+var_50]
000000000000b1cd         mov        r11, qword [rsp+0x88+var_58]
000000000000b1d2         jmp        loc_b019

                     loc_b1d7:
000000000000b1d7         mov        rcx, qword [r15+8]                          ; CODE XREF=printf_parse+731, printf_parse+753, printf_parse+831, printf_parse+2297

                     loc_b1db:
000000000000b1db         cmp        qword [rsp+0x88+var_80], rcx                ; CODE XREF=printf_parse+999, printf_parse+2219, printf_parse+2682, printf_parse+3306
000000000000b1e0         jne        loc_b044

000000000000b1e6         jmp        loc_b04c
000000000000b1eb         align      16

                     loc_b1f0:
000000000000b1f0         mov        rsi, qword [rsp+0x88+var_80]                ; argument "__src" for method j_memcpy, CODE XREF=printf_parse+2778
000000000000b1f5         shl        rax, 0x5
000000000000b1f9         mov        rdi, rcx                                    ; argument "__dest" for method j_memcpy
000000000000b1fc         mov        rdx, rax                                    ; argument "__n" for method j_memcpy
000000000000b1ff         mov        qword [rsp+0x88+var_40], r9
000000000000b204         mov        qword [rsp+0x88+var_48], r10
000000000000b209         mov        qword [rsp+0x88+var_50], r8
000000000000b20e         mov        qword [rsp+0x88+var_58], r11
000000000000b213         call       j_memcpy                                    ; memcpy
000000000000b218         mov        r9, qword [rsp+0x88+var_40]
000000000000b21d         mov        rcx, rax
000000000000b220         mov        r10, qword [rsp+0x88+var_48]
000000000000b225         mov        rax, qword [r15]
000000000000b228         mov        r8, qword [rsp+0x88+var_50]
000000000000b22d         mov        r11, qword [rsp+0x88+var_58]
000000000000b232         jmp        loc_b030

                     loc_b237:
000000000000b237         mov        rcx, rdx                                    ; CODE XREF=printf_parse+1071, printf_parse+2764
000000000000b23a         jmp        loc_b1db
000000000000b23c         align      64                                          ; End of unwind block (FDE at 0xf894)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
000000000000b240         push       r15                                         ; Begin of unwind block (FDE at 0xf8e4), DATA XREF=_start+22
000000000000b242         push       r14
000000000000b244         mov        r15, rdx
000000000000b247         push       r13
000000000000b249         push       r12
000000000000b24b         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
000000000000b252         push       rbp
000000000000b253         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
000000000000b25a         push       rbx
000000000000b25b         mov        r13d, edi
000000000000b25e         mov        r14, rsi
000000000000b261         sub        rbp, r12
000000000000b264         sub        rsp, 0x8
000000000000b268         sar        rbp, 0x3
000000000000b26c         call       _init                                       ; _init
000000000000b271         test       rbp, rbp
000000000000b274         je         loc_b296

000000000000b276         xor        ebx, ebx
000000000000b278         nop        dword [rax+rax]

                     loc_b280:
000000000000b280         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
000000000000b283         mov        rsi, r14
000000000000b286         mov        edi, r13d
000000000000b289         call       qword [r12+rbx*8]
000000000000b28d         add        rbx, 0x1
000000000000b291         cmp        rbp, rbx
000000000000b294         jne        loc_b280

                     loc_b296:
000000000000b296         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
000000000000b29a         pop        rbx
000000000000b29b         pop        rbp
000000000000b29c         pop        r12
000000000000b29e         pop        r13
000000000000b2a0         pop        r14
000000000000b2a2         pop        r15
000000000000b2a4         ret
                        ; endp
000000000000b2a5         align      16                                          ; End of unwind block (FDE at 0xf8e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
000000000000b2b0         ret                                                    ; Begin of unwind block (FDE at 0xf92c), DATA XREF=_start+15
                        ; endp
000000000000b2b2         align      64                                          ; End of unwind block (FDE at 0xf92c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
000000000000b2c0         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0xf944), __dso_handle, CODE XREF=main+113
000000000000b2c7         xor        esi, esi
000000000000b2c9         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
000000000000b2ce         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0xf944)
000000000000b2cf         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0xb2d0; 0xb2d9[ (9 bytes)
        ; File offset : [45776; 45785[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
000000000000b2d0         sub        rsp, 0x8
000000000000b2d4         add        rsp, 0x8
000000000000b2d8         ret
                        ; endp
000000000000b2d9         db  0x00 ; '.'
000000000000b2da         db  0x00 ; '.'
000000000000b2db         db  0x00 ; '.'
000000000000b2dc         db  0x00 ; '.'
000000000000b2dd         db  0x00 ; '.'
000000000000b2de         db  0x00 ; '.'
000000000000b2df         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0xb2e0; 0xe7ac[ (13516 bytes)
        ; File offset : [45792; 59308[ (13516 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
000000000000b2e0         db  0x01 ; '.'
000000000000b2e1         db  0x00 ; '.'
000000000000b2e2         db  0x02 ; '.'
000000000000b2e3         db  0x00 ; '.'
                     aSpeedLuBaud:
000000000000b2e4         db         "speed %lu baud;", 0                        ; DATA XREF=display_speed+105
                     aLuLun:
000000000000b2f4         db         "%lu %lu\n", 0                              ; DATA XREF=display_speed+286
                     aInvalidInteger:
000000000000b2fd         db         "invalid integer argument", 0               ; DATA XREF=integer_arg+5
000000000000b316         db  0x62 ; 'b'                                         ; DATA XREF=integer_arg+35
000000000000b317         db  0x42 ; 'B'
000000000000b318         db  0x00 ; '.'
                     aColumns:
000000000000b319         db         "COLUMNS", 0                                ; DATA XREF=screen_columns+54
                     aDDn:
000000000000b321         db         "%d %d\n", 0                                ; DATA XREF=display_window_size+128
                     aRowsDColumnsD:
000000000000b328         db         "rows %d; columns %d;", 0                   ; DATA XREF=display_window_size+109
000000000000b33d         db  0x73 ; 's'                                         ; DATA XREF=main+339, usage+3277, usage+3596, usage+3713, usage+3851, usage+3870
000000000000b33e         db  0x74 ; 't'
000000000000b33f         db  0x74 ; 't'
000000000000b340         db  0x79 ; 'y'
000000000000b341         db  0x00 ; '.'
                     aNspecialCharac:
000000000000b342         db         "\nSpecial characters:\n", 0                ; DATA XREF=usage+360
                     aNoutputSetting:
000000000000b358         db         "\nOutput settings:\n", 0                   ; DATA XREF=usage+1542
                     aEraseKillWeras:
000000000000b36b         db         "erase, kill, werase, rprnt", 0             ; DATA XREF=usage+2516
                     aNcombinationSe:
000000000000b386         db         "\nCombination settings:\n", 0              ; DATA XREF=usage+2693
                     aCrtSameAsSn:
000000000000b39e         db         "   crt           same as %s\n", 0          ; DATA XREF=usage+2834
                     aEchoeEchoctlEc:
000000000000b3bb         db         "echoe echoctl echoke", 0                   ; DATA XREF=usage+2853
                     aEchoeEchoctlEc_b3d0:        // aEchoeEchoctlEc
000000000000b3d0         db         "echoe echoctl echoke -ixany", 0            ; DATA XREF=usage+2894
                     aIcrnlOnlcr:
000000000000b3ec         db         "-icrnl -onlcr", 0                          ; DATA XREF=usage+3090
000000000000b3fa         db  0x5b ; '['                                         ; DATA XREF=usage+3289
000000000000b3fb         db  0x00 ; '.'
                     aTestInvocation:
000000000000b3fc         db         "test invocation", 0                        ; DATA XREF=usage+3328
                     aMulticallInvoc:
000000000000b40c         db         "Multi-call invocation", 0                  ; DATA XREF=usage+3376
                     aSha224sum:
000000000000b422         db         "sha224sum", 0                              ; DATA XREF=usage+3393
                     aSha2Utilities:
000000000000b42c         db         "sha2 utilities", 0                         ; DATA XREF=usage+3405
                     aSha256sum:
000000000000b43b         db         "sha256sum", 0                              ; DATA XREF=usage+3296
                     aSha384sum:
000000000000b445         db         "sha384sum", 0                              ; DATA XREF=usage+3340
                     aSha512sum:
000000000000b44f         db         "sha512sum", 0                              ; DATA XREF=usage+3364
                     aNsOnlineHelpSn:
000000000000b459         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+3482
000000000000b470         db  0x47 ; 'G'                                         ; DATA XREF=main+332, usage+3510, usage+3774, emit_bug_reporting_address+68
000000000000b471         db  0x4e ; 'N'
000000000000b472         db  0x55 ; 'U'
000000000000b473         db  0x20 ; ' '
                     aCoreutils:
000000000000b474         db         "coreutils", 0                              ; DATA XREF=main+82, main+94, usage+3352
000000000000b47e         db  0x65 ; 'e'                                         ; DATA XREF=usage+3549, usage+3813
000000000000b47f         db  0x6e ; 'n'
000000000000b480         db  0x5f ; '_'
000000000000b481         db  0x00 ; '.'
                     aFullDocumentat:
000000000000b482         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+3577, usage+3837
                     aParenb:
000000000000b49d         db         "parenb", 0                                 ; DATA XREF=sub_4bd0+95
                     aIntr:
000000000000b4a4         db         "intr", 0                                   ; DATA XREF=sub_4bd0+380
                     aOddp:
000000000000b4a9         db         "oddp", 0                                   ; DATA XREF=sub_4bd0+1341
000000000000b4ae         db  0x65 ; 'e'                                         ; DATA XREF=sub_4bd0+1873
000000000000b4af         db  0x6b ; 'k'
000000000000b4b0         db  0x00 ; '.'
                     aSane:
000000000000b4b1         db         "sane", 0                                   ; DATA XREF=sub_4bd0+1896
                     aCoreutils831sr:
000000000000b4b6         db         "../coreutils-8.31/src/stty.c", 0           ; DATA XREF=main+2524, main+2764, sub_4bd0+2644, sub_4bd0+2675
                     aBitsp:
000000000000b4d3         db         "bitsp", 0                                  ; DATA XREF=main+2531, main+2771, sub_4bd0+2651, sub_4bd0+2682
                     aCbreak:
000000000000b4d9         db         "cbreak", 0                                 ; DATA XREF=sub_4bd0+1919
                     aPass8:
000000000000b4e0         db         "pass8", 0                                  ; DATA XREF=sub_4bd0+2394
                     aLitout:
000000000000b4e6         db         "litout", 0                                 ; DATA XREF=sub_4bd0+2794
000000000000b4ed         db  0x72 ; 'r'                                         ; DATA XREF=sub_4bd0+2877
000000000000b4ee         db  0x61 ; 'a'
000000000000b4ef         db  0x77 ; 'w'
000000000000b4f0         db  0x00 ; '.'
                     aCooked:
000000000000b4f1         db         "cooked", 0                                 ; DATA XREF=sub_4bd0+2896
                     aDecctlq:
000000000000b4f8         db         "decctlq", 0                                ; DATA XREF=sub_4bd0+3048
                     aTabs:
000000000000b500         db         "tabs", 0                                   ; DATA XREF=sub_4bd0+3098
                     aLcase:
000000000000b505         db         "lcase", 0                                  ; DATA XREF=sub_4bd0+3197
                     aLcase_b50b:        // aLcase
000000000000b50b         db         "LCASE", 0                                  ; DATA XREF=sub_4bd0+3216
000000000000b511         db  0x63 ; 'c'                                         ; DATA XREF=sub_4bd0+3284
000000000000b512         db  0x72 ; 'r'
000000000000b513         db  0x74 ; 't'
000000000000b514         db  0x00 ; '.'
000000000000b515         db  0x64 ; 'd'                                         ; DATA XREF=sub_4bd0+3303
000000000000b516         db  0x65 ; 'e'
000000000000b517         db  0x63 ; 'c'
000000000000b518         db  0x00 ; '.'
                     aInvalidArgumen:
000000000000b519         db         "invalid argument %s", 0                    ; DATA XREF=sub_4bd0+1234, sub_4bd0+2371
                     aMissingArgumen:
000000000000b52d         db         "missing argument to %s", 0                 ; DATA XREF=sub_4bd0+2625
000000000000b544         db  0x6d ; 'm'                                         ; DATA XREF=main+1067, main+1951, sub_4bd0+467
000000000000b545         db  0x69 ; 'i'
000000000000b546         db  0x6e ; 'n'
000000000000b547         db  0x00 ; '.'
                     aTime:
000000000000b548         db         "time", 0                                   ; DATA XREF=sub_4bd0+518
000000000000b54d         db  0x5e ; '^'                                         ; DATA XREF=sub_4bd0+566
000000000000b54e         db  0x2d ; '-'
000000000000b54f         db  0x00 ; '.'
                     aUndef:
000000000000b550         db         "undef", 0                                  ; DATA XREF=sub_4bd0+591
                     aOspeed:
000000000000b556         db         "ospeed", 0                                 ; DATA XREF=sub_4bd0+688
000000000000b55d         db  0x72 ; 'r'                                         ; DATA XREF=sub_4bd0+888
000000000000b55e         db  0x6f ; 'o'
000000000000b55f         db  0x77 ; 'w'
000000000000b560         db  0x73 ; 's'
000000000000b561         db  0x00 ; '.'
000000000000b562         db  0x63 ; 'c'                                         ; DATA XREF=sub_4bd0+1085
000000000000b563         db  0x6f ; 'o'
000000000000b564         db  0x6c ; 'l'
000000000000b565         db  0x73 ; 's'
000000000000b566         db  0x00 ; '.'
                     aColumns_b567:        // aColumns
000000000000b567         db         "columns", 0                                ; DATA XREF=sub_4bd0+1111
000000000000b56f         db  0x73 ; 's'                                         ; DATA XREF=sub_4bd0+1413
000000000000b570         db  0x69 ; 'i'
000000000000b571         db  0x7a ; 'z'
000000000000b572         db  0x65 ; 'e'
000000000000b573         db  0x00 ; '.'
000000000000b574         db  0x6c ; 'l'                                         ; DATA XREF=sub_4bd0+1436
000000000000b575         db  0x69 ; 'i'
000000000000b576         db  0x6e ; 'n'
000000000000b577         db  0x65 ; 'e'
000000000000b578         db  0x00 ; '.'
                     aInvalidLineDis:
000000000000b579         db         "invalid line discipline %s", 0             ; DATA XREF=sub_4bd0+1539
                     aIspeed:
000000000000b594         db         "ispeed", 0                                 ; DATA XREF=sub_4bd0+191
                     aEvenp:
000000000000b59b         db         "evenp", 0                                  ; DATA XREF=sub_4bd0+1288, sub_4bd0+1753
                     aParity:
000000000000b5a1         db         "parity", 0                                 ; DATA XREF=sub_4bd0+1318, sub_4bd0+2713
                     aUndef_b5a8:        // aUndef
000000000000b5a8         db         "<undef>", 0                                ; DATA XREF=main+1121, main+1972
                     aUsrlocalsharel:
000000000000b5b0         db         "/usr/local/share/locale", 0                ; DATA XREF=main+75
                     aDavidMackenzie:
000000000000b5c8         db         "David MacKenzie", 0                        ; DATA XREF=main+325
000000000000b5d8         db  0x2d ; '-'                                         ; DATA XREF=main+403
                     aDrain:
000000000000b5d9         db         "drain", 0                                  ; DATA XREF=main+436, sub_4bd0+80
                     aAgf:
000000000000b5df         db         "-agF:", 0                                  ; DATA XREF=main+165
                     aStandardInput:
000000000000b5e5         db         "standard input", 0                         ; DATA XREF=main+844, main+2325
                     aLineD:
000000000000b5f4         db         "line = %d;", 0                             ; DATA XREF=main+998, main+1888
                     aFlush:
000000000000b5ff         db         "flush", 0                                  ; DATA XREF=main+1099, main+1958
                     aSS_b605:        // aSS
000000000000b605         db         "%s = %s;", 0                               ; DATA XREF=main+1134, main+2024
                     aMinLuTimeLun:
000000000000b60e         db         "min = %lu; time = %lu;\n", 0               ; DATA XREF=main+2425
000000000000b626         db  0x2d ; '-'                                         ; DATA XREF=main+1760, main+2284
000000000000b627         db  0x25 ; '%'
000000000000b628         db  0x73 ; 's'
000000000000b629         db  0x00 ; '.'
                     aMinLuTimeLu:
000000000000b62a         db         "min = %lu; time = %lu;", 0                 ; DATA XREF=main+2077
                     aLxlxlxlx:
000000000000b641         db         "%lx:%lx:%lx:%lx", 0                        ; DATA XREF=main+1446
000000000000b651         db  0x37 ; '7'
000000000000b652         db  0x35 ; '5'
000000000000b653         db  0x00 ; '.'
000000000000b654         db  0x31 ; '1'
000000000000b655         db  0x31 ; '1'
000000000000b656         db  0x30 ; '0'
000000000000b657         db  0x00 ; '.'
000000000000b658         db  0x31 ; '1'
000000000000b659         db  0x33 ; '3'
000000000000b65a         db  0x34 ; '4'
000000000000b65b         db  0x00 ; '.'
                     a1345:
000000000000b65c         db         "134.5", 0
000000000000b662         db  0x31 ; '1'
000000000000b663         db  0x35 ; '5'                                         ; DATA XREF=display_speed+65, display_speed+179, display_speed+239
000000000000b664         db  0x30 ; '0'
000000000000b665         db  0x00 ; '.'
000000000000b666         db  0x33 ; '3'
000000000000b667         db  0x30 ; '0'
000000000000b668         db  0x30 ; '0'
000000000000b669         db  0x00 ; '.'
                     a1200:
000000000000b66a         db         "1200", 0
                     a1800:
000000000000b66f         db         "1800", 0
                     a2400:
000000000000b674         db         "2400", 0
                     a4800:
000000000000b679         db         "4800", 0
                     a9600:
000000000000b67e         db         "9600", 0
                     a19200:
000000000000b683         db         "19200", 0
                     a38400:
000000000000b689         db         "38400", 0
                     aExta:
000000000000b68f         db         "exta", 0
                     aExtb:
000000000000b694         db         "extb", 0
                     a57600:
000000000000b699         db         "57600", 0
                     a115200:
000000000000b69f         db         "115200", 0
                     a230400:
000000000000b6a6         db         "230400", 0
                     a460800:
000000000000b6ad         db         "460800", 0
                     a576000:
000000000000b6b4         db         "576000", 0
                     a921600:
000000000000b6bb         db         "921600", 0
                     a1000000:
000000000000b6c2         db         "1000000", 0
                     a1152000:
000000000000b6ca         db         "1152000", 0
000000000000b6d2         db  0x31 ; '1'
                     a500000:
000000000000b6d3         db         "500000", 0
                     a2000000:
000000000000b6da         db         "2000000", 0
                     a2500000:
000000000000b6e2         db         "2500000", 0
                     a3000000:
000000000000b6ea         db         "3000000", 0
                     a3500000:
000000000000b6f2         db         "3500000", 0
                     a4000000:
000000000000b6fa         db         "4000000", 0
000000000000b702         db  0x61 ; 'a'
000000000000b703         db  0x6c ; 'l'
000000000000b704         db  0x6c ; 'l'
000000000000b705         db  0x00 ; '.'
                     aSave:
000000000000b706         db         "save", 0
                     aFile:
000000000000b70b         db         "file", 0
                     aHelp:
000000000000b710         db         "help", 0
                     aVersion:
000000000000b715         db         "version", 0
                     aQuit:
000000000000b71d         db         "quit", 0
000000000000b722         db  0x65 ; 'e'
000000000000b723         db  0x6f ; 'o'
000000000000b724         db  0x66 ; 'f'
000000000000b725         db  0x00 ; '.'
000000000000b726         db  0x65 ; 'e'
000000000000b727         db  0x6f ; 'o'
000000000000b728         db  0x6c ; 'l'
000000000000b729         db  0x00 ; '.'
                     aEol2:
000000000000b72a         db         "eol2", 0
                     aSwtch:
000000000000b72f         db         "swtch", 0
                     aStart:
000000000000b735         db         "start", 0
                     aSusp:
000000000000b73b         db         "susp", 0
                     aWerase:
000000000000b740         db         "werase", 0
                     aLnext:
000000000000b747         db         "lnext", 0
                     aDiscard:
000000000000b74d         db         "discard", 0
                     aParodd:
000000000000b755         db         "parodd", 0
                     aCmspar:
000000000000b75c         db         "cmspar", 0
000000000000b763         db  0x63 ; 'c'
000000000000b764         db  0x73 ; 's'
000000000000b765         db  0x35 ; '5'
000000000000b766         db  0x00 ; '.'
000000000000b767         db  0x63 ; 'c'
000000000000b768         db  0x73 ; 's'
000000000000b769         db  0x36 ; '6'
000000000000b76a         db  0x00 ; '.'
000000000000b76b         db  0x63 ; 'c'
000000000000b76c         db  0x73 ; 's'
000000000000b76d         db  0x37 ; '7'
000000000000b76e         db  0x00 ; '.'
000000000000b76f         db  0x63 ; 'c'
000000000000b770         db  0x73 ; 's'
000000000000b771         db  0x38 ; '8'
000000000000b772         db  0x00 ; '.'
                     aHupcl:
000000000000b773         db         "hupcl", 0
000000000000b779         db  0x68 ; 'h'
000000000000b77a         db  0x75 ; 'u'
000000000000b77b         db  0x70 ; 'p'
000000000000b77c         db  0x00 ; '.'
                     aCstopb:
000000000000b77d         db         "cstopb", 0
                     aCread:
000000000000b784         db         "cread", 0
                     aClocal:
000000000000b78a         db         "clocal", 0
                     aCrtscts:
000000000000b791         db         "crtscts", 0
                     aIgnbrk:
000000000000b799         db         "ignbrk", 0
                     aBrkint:
000000000000b7a0         db         "brkint", 0
                     aIgnpar:
000000000000b7a7         db         "ignpar", 0
                     aParmrk:
000000000000b7ae         db         "parmrk", 0
                     aInpck:
000000000000b7b5         db         "inpck", 0
                     aIstrip:
000000000000b7bb         db         "istrip", 0
                     aInlcr:
000000000000b7c2         db         "inlcr", 0
                     aIgncr:
000000000000b7c8         db         "igncr", 0
                     aIcrnl:
000000000000b7ce         db         "icrnl", 0
                     aIxon:
000000000000b7d4         db         "ixon", 0
                     aIxoff:
000000000000b7d9         db         "ixoff", 0
                     aTandem:
000000000000b7df         db         "tandem", 0
                     aIuclc:
000000000000b7e6         db         "iuclc", 0
                     aImaxbel:
000000000000b7ec         db         "imaxbel", 0
                     aIutf8:
000000000000b7f4         db         "iutf8", 0
                     aOpost:
000000000000b7fa         db         "opost", 0
                     aOlcuc:
000000000000b800         db         "olcuc", 0
                     aOcrnl:
000000000000b806         db         "ocrnl", 0
                     aOnocr:
000000000000b80c         db         "onocr", 0
                     aOnlret:
000000000000b812         db         "onlret", 0
                     aOfill:
000000000000b819         db         "ofill", 0
                     aOfdel:
000000000000b81f         db         "ofdel", 0
000000000000b825         db  0x6e ; 'n'
000000000000b826         db  0x6c ; 'l'
000000000000b827         db  0x31 ; '1'
000000000000b828         db  0x00 ; '.'
000000000000b829         db  0x6e ; 'n'
000000000000b82a         db  0x6c ; 'l'
000000000000b82b         db  0x30 ; '0'
000000000000b82c         db  0x00 ; '.'
000000000000b82d         db  0x63 ; 'c'
000000000000b82e         db  0x72 ; 'r'
000000000000b82f         db  0x33 ; '3'
000000000000b830         db  0x00 ; '.'
000000000000b831         db  0x63 ; 'c'
000000000000b832         db  0x72 ; 'r'
000000000000b833         db  0x32 ; '2'
000000000000b834         db  0x00 ; '.'
000000000000b835         db  0x63 ; 'c'
000000000000b836         db  0x72 ; 'r'
000000000000b837         db  0x31 ; '1'
000000000000b838         db  0x00 ; '.'
000000000000b839         db  0x63 ; 'c'
000000000000b83a         db  0x72 ; 'r'
000000000000b83b         db  0x30 ; '0'
000000000000b83c         db  0x00 ; '.'
                     aTab3:
000000000000b83d         db         "tab3", 0
                     aTab2:
000000000000b842         db         "tab2", 0
                     aTab1:
000000000000b847         db         "tab1", 0
                     aTab0:
000000000000b84c         db         "tab0", 0
000000000000b851         db  0x62 ; 'b'
000000000000b852         db  0x73 ; 's'
000000000000b853         db  0x31 ; '1'
000000000000b854         db  0x00 ; '.'
000000000000b855         db  0x62 ; 'b'
000000000000b856         db  0x73 ; 's'
000000000000b857         db  0x30 ; '0'
000000000000b858         db  0x00 ; '.'
000000000000b859         db  0x76 ; 'v'
000000000000b85a         db  0x74 ; 't'
000000000000b85b         db  0x31 ; '1'
000000000000b85c         db  0x00 ; '.'
000000000000b85d         db  0x76 ; 'v'
000000000000b85e         db  0x74 ; 't'
000000000000b85f         db  0x30 ; '0'
000000000000b860         db  0x00 ; '.'
000000000000b861         db  0x66 ; 'f'
000000000000b862         db  0x66 ; 'f'
000000000000b863         db  0x31 ; '1'
000000000000b864         db  0x00 ; '.'
000000000000b865         db  0x66 ; 'f'
000000000000b866         db  0x66 ; 'f'
000000000000b867         db  0x30 ; '0'
000000000000b868         db  0x00 ; '.'
                     aIsig:
000000000000b869         db         "isig", 0
                     aIcanon:
000000000000b86e         db         "icanon", 0
                     aIexten:
000000000000b875         db         "iexten", 0
                     aEchoe:
000000000000b87c         db         "echoe", 0
000000000000b882         db  0x63 ; 'c'
000000000000b883         db  0x72 ; 'r'
000000000000b884         db  0x74 ; 't'
                     aErase:
000000000000b885         db         "erase", 0
                     aEchok:
000000000000b88b         db         "echok", 0
                     aEchonl:
000000000000b891         db         "echonl", 0
                     aNoflsh:
000000000000b898         db         "noflsh", 0
                     aXcase:
000000000000b89f         db         "xcase", 0
000000000000b8a5         db  0x74 ; 't'
000000000000b8a6         db  0x6f ; 'o'
                     aStop:
000000000000b8a7         db         "stop", 0
                     aEchoprt:
000000000000b8ac         db         "echoprt", 0
                     aPrterase:
000000000000b8b4         db         "prterase", 0
                     aEchoctl:
000000000000b8bd         db         "echoctl", 0
000000000000b8c5         db  0x63 ; 'c'
000000000000b8c6         db  0x74 ; 't'
000000000000b8c7         db  0x6c ; 'l'
                     aEcho:
000000000000b8c8         db         "echo", 0
000000000000b8cd         db  0x63 ; 'c'
000000000000b8ce         db  0x72 ; 'r'
000000000000b8cf         db  0x74 ; 't'
                     aKill:
000000000000b8d0         db         "kill", 0
                     aFlusho:
000000000000b8d5         db         "flusho", 0
                     aExtproc:
000000000000b8dc         db         "extproc", 0
000000000000b8e4         align      16
                     switch_table_b8f0:        // switch_table
000000000000b8f0         dd         mode_type_flag.loc_3508-switch_table_b8f0, mode_type_flag.loc_3500-switch_table_b8f0, mode_type_flag.loc_34f8-switch_table_b8f0, mode_type_flag.loc_34f0-switch_table_b8f0 ; switch table used at 0x34e5 containing 5 entries, DATA XREF=mode_type_flag+5
000000000000b900         dd         mode_type_flag.loc_3510-switch_table_b8f0
000000000000b904         align      8
                     __PRETTY_FUNCTION__.7410:
000000000000b908         db         "sane_mode", 0                              ; DATA XREF=sub_4bd0+2637, sub_4bd0+2668
000000000000b912         align      8
                     __PRETTY_FUNCTION__.7335:
000000000000b918         db         "display_all", 0                            ; DATA XREF=main+2757
000000000000b924         align      16
                     __PRETTY_FUNCTION__.7318:
000000000000b930         db         "display_changed", 0                        ; DATA XREF=main+2517
                     aIspeedLuBaudOs:
000000000000b940         db         "ispeed %lu baud; ospeed %lu baud;", 0      ; DATA XREF=display_speed+279
000000000000b962         align      8
                     aSNoSizeInforma:
000000000000b968         db         "%s: no size information for this device", 0 ; DATA XREF=display_window_size+215
                     aTrySHelpForMor:
000000000000b990         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
000000000000b9b7         align      8
                     aUsageSFDeviceF:
000000000000b9b8         db         "Usage: %s [-F DEVICE | --file=DEVICE] [SETTING]...\n  or:  %s [-F DEVICE | --file=DEVICE] [-a|--all]\n  or:  %s [-F DEVICE | --file=DEVICE] [-g|--save]\n", 0 ; DATA XREF=usage+93
000000000000ba4f         align      16
                     aPrintOrChangeT:
000000000000ba50         db         "Print or change terminal characteristics.\n", 0 ; DATA XREF=usage+138
000000000000ba7b         align      128
                     aNmandatoryArgu:
000000000000ba80         db         "\nMandatory arguments to long options are mandatory for short options too.\n", 0 ; DATA XREF=usage+175
000000000000bacb         align      16
                     aAAllPrintAllCu:
000000000000bad0         db         "  -a, --all          print all current settings in human-readable form\n  -g, --save         print all current settings in a stty-readable form\n  -F, --file=DEVICE  open and use the specified DEVICE instead of stdin\n", 0 ; DATA XREF=usage+212
                     aHelpDisplayThi:
000000000000bba8         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+249
000000000000bbd5         align      8
                     aVersionOutputV:
000000000000bbd8         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+286
000000000000bc0e         align      16
                     aNoptionalBefor:
000000000000bc10         db         "\nOptional - before SETTING indicates negation.  An * marks non-POSIX\nsettings.  The underlying system defines which settings are available.\n", 0 ; DATA XREF=usage+323
000000000000bc9d         align      32
                     aDiscardCharCha:
000000000000bca0         db         " * discard CHAR  CHAR will toggle discarding of output\n", 0 ; DATA XREF=usage+397
                     aEofCharCharWil:
000000000000bcd8         db         "   eof CHAR      CHAR will send an end of file (terminate the input)\n   eol CHAR      CHAR will end the line\n", 0 ; DATA XREF=usage+434
000000000000bd46         align      8
                     aEol2CharAltern:
000000000000bd48         db         " * eol2 CHAR     alternate CHAR for ending the line\n", 0 ; DATA XREF=usage+471
000000000000bd7d         align      128
                     aEraseCharCharW:
000000000000bd80         db         "   erase CHAR    CHAR will erase the last character typed\n   intr CHAR     CHAR will send an interrupt signal\n   kill CHAR     CHAR will erase the current line\n", 0 ; DATA XREF=usage+508
000000000000be21         align      8
                     aLnextCharCharW:
000000000000be28         db         " * lnext CHAR    CHAR will enter the next character quoted\n", 0 ; DATA XREF=usage+545
000000000000be64         align      8
                     aQuitCharCharWi:
000000000000be68         db         "   quit CHAR     CHAR will send a quit signal\n", 0 ; DATA XREF=usage+582
000000000000be97         align      8
                     aRprntCharCharW:
000000000000be98         db         " * rprnt CHAR    CHAR will redraw the current line\n", 0 ; DATA XREF=usage+619
000000000000becc         align      16
                     aStartCharCharW:
000000000000bed0         db         "   start CHAR    CHAR will restart the output after stopping it\n   stop CHAR     CHAR will stop the output\n   susp CHAR     CHAR will send a terminal stop signal\n", 0 ; DATA XREF=usage+656
000000000000bf73         align      8
                     aSwtchCharCharW:
000000000000bf78         db         " * swtch CHAR    CHAR will switch to a different shell layer\n", 0 ; DATA XREF=usage+693
000000000000bfb6         align      8
                     aWeraseCharChar:
000000000000bfb8         db         " * werase CHAR   CHAR will erase the last word typed\n", 0 ; DATA XREF=usage+730
000000000000bfee         align      16
                     aNspecialSettin:
000000000000bff0         db         "\nSpecial settings:\n   N             set the input and output speeds to N bauds\n", 0 ; DATA XREF=usage+767
                     aColsNTellTheKe:
000000000000c040         db         " * cols N        tell the kernel that the terminal has N columns\n * columns N     same as cols N\n", 0 ; DATA XREF=usage+804
000000000000c0a2         align      8
                     aDrainWaitForTr:
000000000000c0a8         db         " * [-]drain      wait for transmission before applying settings (%s by default)\n", 0 ; DATA XREF=usage+869
000000000000c0f9         align      256
                     aIspeedNSetTheI:
000000000000c100         db         "   ispeed N      set the input speed to N\n", 0 ; DATA XREF=usage+913
000000000000c12b         align      16
                     aLineNUseLineDi:
000000000000c130         db         " * line N        use line discipline N\n", 0 ; DATA XREF=usage+950
                     aMinNWithIcanon:
000000000000c158         db         "   min N         with -icanon, set N characters minimum for a completed read\n   ospeed N      set the output speed to N\n", 0 ; DATA XREF=usage+987
000000000000c1d1         align      8
                     aRowsNTellTheKe:
000000000000c1d8         db         " * rows N        tell the kernel that the terminal has N rows\n * size          print the number of rows and columns according to the kernel\n", 0 ; DATA XREF=usage+1024
000000000000c265         align      8
                     aSpeedPrintTheT:
000000000000c268         db         "   speed         print the terminal speed\n   time N        with -icanon, set read timeout of N tenths of a second\n", 0 ; DATA XREF=usage+1061
000000000000c2db         align      32
                     aNcontrolSettin:
000000000000c2e0         db         "\nControl settings:\n   [-]clocal     disable modem control signals\n   [-]cread      allow input to be received\n", 0 ; DATA XREF=usage+1098
000000000000c34f         align      16
                     aCrtsctsEnableR:
000000000000c350         db         " * [-]crtscts    enable RTS/CTS handshaking\n", 0 ; DATA XREF=usage+1135
000000000000c37d         align      128
                     aCsnSetCharacte:
000000000000c380         db         "   csN           set character size to N bits, N in [5..8]\n", 0 ; DATA XREF=usage+1172
000000000000c3bc         align      64
                     aCstopbUseTwoSt:
000000000000c3c0         db         "   [-]cstopb     use two stop bits per character (one with '-')\n   [-]hup        send a hangup signal when the last process closes the tty\n   [-]hupcl      same as [-]hup\n   [-]parenb     generate parity bit in output and expect parity bit in input\n   [-]p" ; DATA XREF=usage+1209
000000000000c4c0         db         "arodd     set odd parity (or even parity with '-')\n", 0
000000000000c4f4         align      8
                     aCmsparUseStick:
000000000000c4f8         db         " * [-]cmspar     use \"stick\" (mark/space) parity\n", 0 ; DATA XREF=usage+1246
000000000000c52a         align      16
                     aNinputSettings:
000000000000c530         db         "\nInput settings:\n   [-]brkint     breaks cause an interrupt signal\n   [-]icrnl      translate carriage return to newline\n   [-]ignbrk     ignore break characters\n   [-]igncr      ignore carriage return\n   [-]ignpar     ignore characters with parity errors\n" ; DATA XREF=usage+1283
000000000000c630         db         "", 0
000000000000c631         align      8
                     aImaxbelBeepAnd:
000000000000c638         db         " * [-]imaxbel    beep and do not flush a full input buffer on a character\n", 0 ; DATA XREF=usage+1320
000000000000c683         align      8
                     aInlcrTranslate:
000000000000c688         db         "   [-]inlcr      translate newline to carriage return\n   [-]inpck      enable input parity checking\n   [-]istrip     clear high (8th) bit of input characters\n", 0 ; DATA XREF=usage+1357
000000000000c727         align      8
                     aIutf8AssumeInp:
000000000000c728         db         " * [-]iutf8      assume input characters are UTF-8 encoded\n", 0 ; DATA XREF=usage+1394
000000000000c764         align      8
                     aIuclcTranslate:
000000000000c768         db         " * [-]iuclc      translate uppercase characters to lowercase\n", 0 ; DATA XREF=usage+1431
000000000000c7a6         align      8
                     aIxanyLetAnyCha:
000000000000c7a8         db         " * [-]ixany      let any character restart output, not only start character\n", 0 ; DATA XREF=usage+1468
000000000000c7f5         align      8
                     aIxoffEnableSen:
000000000000c7f8         db         "   [-]ixoff      enable sending of start/stop characters\n   [-]ixon       enable XON/XOFF flow control\n   [-]parmrk     mark parity errors (with a 255-0-character sequence)\n   [-]tandem     same as [-]ixoff\n", 0 ; DATA XREF=usage+1505
                     aBsnBackspaceDe:
000000000000c8c8         db         " * bsN           backspace delay style, N in [0..1]\n", 0 ; DATA XREF=usage+1579
000000000000c8fd         align      256
                     aCrnCarriageRet:
000000000000c900         db         " * crN           carriage return delay style, N in [0..3]\n", 0 ; DATA XREF=usage+1616
000000000000c93b         align      64
                     aFfnFormFeedDel:
000000000000c940         db         " * ffN           form feed delay style, N in [0..1]\n", 0 ; DATA XREF=usage+1653
000000000000c975         align      8
                     aNlnNewlineDela:
000000000000c978         db         " * nlN           newline delay style, N in [0..1]\n", 0 ; DATA XREF=usage+1690
000000000000c9ab         align      16
                     aOcrnlTranslate:
000000000000c9b0         db         " * [-]ocrnl      translate carriage return to newline\n", 0 ; DATA XREF=usage+1727
000000000000c9e7         align      8
                     aOfdelUseDelete:
000000000000c9e8         db         " * [-]ofdel      use delete characters for fill instead of NUL characters\n", 0 ; DATA XREF=usage+1764
000000000000ca33         align      8
                     aOfillUseFillPa:
000000000000ca38         db         " * [-]ofill      use fill (padding) characters instead of timing for delays\n", 0 ; DATA XREF=usage+1801
000000000000ca85         align      8
                     aOlcucTranslate:
000000000000ca88         db         " * [-]olcuc      translate lowercase characters to uppercase\n", 0 ; DATA XREF=usage+1838
000000000000cac6         align      8
                     aOnlcrTranslate:
000000000000cac8         db         " * [-]onlcr      translate newline to carriage return-newline\n", 0 ; DATA XREF=usage+1875
000000000000cb07         align      8
                     aOnlretNewlineP:
000000000000cb08         db         " * [-]onlret     newline performs a carriage return\n", 0 ; DATA XREF=usage+1912
000000000000cb3d         align      64
                     aOnocrDoNotPrin:
000000000000cb40         db         " * [-]onocr      do not print carriage returns in the first column\n", 0 ; DATA XREF=usage+1949
000000000000cb84         align      8
                     aOpostPostproce:
000000000000cb88         db         "   [-]opost      postprocess output\n", 0  ; DATA XREF=usage+1986
000000000000cbad         align      16
                     aTabnHorizontal:
000000000000cbb0         db         " * tabN          horizontal tab delay style, N in [0..3]\n * tabs          same as tab0\n * -tabs         same as tab3\n", 0 ; DATA XREF=usage+2023
000000000000cc26         align      8
                     aVtnVerticalTab:
000000000000cc28         db         " * vtN           vertical tab delay style, N in [0..1]\n", 0 ; DATA XREF=usage+2060
                     aNlocalSettings:
000000000000cc60         db         "\nLocal settings:\n   [-]crterase   echo erase characters as backspace-space-backspace\n", 0 ; DATA XREF=usage+2097
000000000000ccb6         align      8
                     aCrtkillKillAll:
000000000000ccb8         db         " * crtkill       kill all line by obeying the echoprt and echoe settings\n * -crtkill      kill all line by obeying the echoctl and echok settings\n", 0 ; DATA XREF=usage+2134
000000000000cd4b         align      16
                     aCtlechoEchoCon:
000000000000cd50         db         " * [-]ctlecho    echo control characters in hat notation ('^c')\n", 0 ; DATA XREF=usage+2171
000000000000cd91         align      8
                     aEchoEchoInputC:
000000000000cd98         db         "   [-]echo       echo input characters\n", 0 ; DATA XREF=usage+2208
                     aEchoctlSameAsC:
000000000000cdc0         db         " * [-]echoctl    same as [-]ctlecho\n", 0  ; DATA XREF=usage+2245
000000000000cde5         align      8
                     aEchoeSameAsCrt:
000000000000cde8         db         "   [-]echoe      same as [-]crterase\n   [-]echok      echo a newline after a kill character\n", 0 ; DATA XREF=usage+2282
000000000000ce45         align      8
                     aEchokeSameAsCr:
000000000000ce48         db         " * [-]echoke     same as [-]crtkill\n", 0  ; DATA XREF=usage+2319
000000000000ce6d         align      16
                     aEchonlEchoNewl:
000000000000ce70         db         "   [-]echonl     echo newline even if not echoing other characters\n", 0 ; DATA XREF=usage+2356
000000000000ceb4         align      8
                     aEchoprtEchoEra:
000000000000ceb8         db         " * [-]echoprt    echo erased characters backward, between '\' and '/'\n", 0 ; DATA XREF=usage+2393
000000000000ceff         align      256
                     aExtprocEnableL:
000000000000cf00         db         " * [-]extproc    enable \"LINEMODE\"; useful with high latency links\n", 0 ; DATA XREF=usage+2430
000000000000cf44         align      8
                     aFlushoDiscardO:
000000000000cf48         db         " * [-]flusho     discard output\n", 0      ; DATA XREF=usage+2467
000000000000cf69         align      16
                     aIcanonEnableSp:
000000000000cf70         db         "   [-]icanon     enable special characters: %s\n   [-]iexten     enable non-POSIX special characters\n", 0 ; DATA XREF=usage+2497
000000000000cfd5         align      8
                     aIsigEnableInte:
000000000000cfd8         db         "   [-]isig       enable interrupt, quit, and suspend special characters\n   [-]noflsh     disable flushing after interrupt and quit special characters\n", 0 ; DATA XREF=usage+2545
000000000000d06f         align      16
                     aPrteraseSameAs:
000000000000d070         db         " * [-]prterase   same as [-]echoprt\n", 0  ; DATA XREF=usage+2582
000000000000d095         align      8
                     aTostopStopBack:
000000000000d098         db         " * [-]tostop     stop background jobs that try to write to the terminal\n", 0 ; DATA XREF=usage+2619
000000000000d0e1         align      8
                     aXcaseWithIcano:
000000000000d0e8         db         " * [-]xcase      with icanon, escape with '\' for uppercase characters\n", 0 ; DATA XREF=usage+2656
                     aLcaseSameAsLca:
000000000000d130         db         " * [-]LCASE      same as [-]lcase\n", 0    ; DATA XREF=usage+2730
000000000000d153         align      8
                     aCbreakSameAsIc:
000000000000d158         db         "   cbreak        same as -icanon\n   -cbreak       same as icanon\n", 0 ; DATA XREF=usage+2767
000000000000d19a         align      32
                     aCookedSameAsBr:
000000000000d1a0         db         "   cooked        same as brkint ignpar istrip icrnl ixon opost isig\n                 icanon, eof and eol characters to their default values\n   -cooked       same as raw\n", 0 ; DATA XREF=usage+2804
000000000000d24a         align      16
                     aDecSameAsSIntr:
000000000000d250         db         "   dec           same as %s intr ^c erase 0177\n                 kill ^u\n", 0 ; DATA XREF=usage+2875
000000000000d299         align      32
                     aDecctlqSameAsI:
000000000000d2a0         db         " * [-]decctlq    same as [-]ixany\n", 0    ; DATA XREF=usage+2923
000000000000d2c3         align      8
                     aEkEraseAndKill:
000000000000d2c8         db         "   ek            erase and kill characters to their default values\n   evenp         same as parenb -parodd cs7\n   -evenp        same as -parenb cs8\n", 0 ; DATA XREF=usage+2960
000000000000d35d         align      32
                     aLcaseSameAsXca:
000000000000d360         db         " * [-]lcase      same as xcase iuclc olcuc\n", 0 ; DATA XREF=usage+2997
000000000000d38c         align      16
                     aLitoutSameAsPa:
000000000000d390         db         "   litout        same as -parenb -istrip -opost cs8\n   -litout       same as parenb istrip opost cs7\n", 0 ; DATA XREF=usage+3034
000000000000d3f6         align      8
                     aNlSameAsSnNlSa:
000000000000d3f8         db         "   nl            same as %s\n   -nl           same as %s\n", 0 ; DATA XREF=usage+3064
000000000000d431         align      8
                     aIcrnlInlcrIgnc:
000000000000d438         db         "icrnl -inlcr -igncr onlcr -ocrnl -onlret", 0 ; DATA XREF=usage+3083
000000000000d461         align      8
                     aOddpSameAsPare:
000000000000d468         db         "   oddp          same as parenb parodd cs7\n   -oddp         same as -parenb cs8\n   [-]parity     same as [-]evenp\n   pass8         same as -parenb -istrip cs8\n   -pass8        same as parenb istrip cs7\n", 0 ; DATA XREF=usage+3119
000000000000d533         align      8
                     aRawSameAsIgnbr:
000000000000d538         db         "   raw           same as -ignbrk -brkint -ignpar -parmrk -inpck -istrip\n                 -inlcr -igncr -icrnl -ixon -ixoff -icanon -opost\n                 -isig%s min 1 time 0\n   -raw          same as cooked\n", 0 ; DATA XREF=usage+3149
000000000000d609         align      16
                     aIuclcIxanyImax:
000000000000d610         db         " -iuclc -ixany -imaxbel -xcase", 0         ; DATA XREF=usage+3168
000000000000d62f         align      16
                     aSaneSameAsCrea:
000000000000d630         db         "   sane          same as cread -ignbrk brkint -inlcr -igncr icrnl\n                 icanon iexten echo echoe echok -echonl -noflsh\n                 %s\n                 %s\n                 %s,\n                 all special characters to their default values\n", 0 ; DATA XREF=usage+3190
                     aIsigTostopOfde:
000000000000d730         db         "isig -tostop -ofdel -echoprt echoctl echoke -extproc -flusho", 0 ; DATA XREF=usage+3216
000000000000d76d         align      16
                     aOpostOfillOnlc:
000000000000d770         db         "opost -ofill onlcr -onocr -onlret nl0 cr0 tab0 bs0 vt0 ff0", 0 ; DATA XREF=usage+3209
000000000000d7ab         align      16
                     aIxoffIutf8Iucl:
000000000000d7b0         db         "-ixoff -iutf8 -iuclc -ixany imaxbel -xcase -olcuc -ocrnl", 0 ; DATA XREF=usage+3223
000000000000d7e9         align      16
                     aNhandleTheTtyL:
000000000000d7f0         db         "\nHandle the tty line connected to standard input.  Without arguments,\nprints baud rate, line discipline, and deviations from stty sane.  In\nsettings, CHAR is taken literally, or coded as in ^c, 0x37, 0177 or\n127; special values ^- or undef used to disable " ; DATA XREF=usage+3252
000000000000d8f0         db         "special characters.\n", 0
000000000000d905         align      8
                     aHttpswwwgnuorg:
000000000000d908         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+3503, usage+3603, usage+3767, usage+3877, emit_bug_reporting_address+61
                     aReportAnyTrans:
000000000000d930         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+3727
000000000000d977         align      8
                     aOrAvailableLoc:
000000000000d978         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+3646
000000000000d9ab         align      16
                     aOnlyOneDeviceM:
000000000000d9b0         db         "only one device may be specified", 0       ; DATA XREF=main+2589
000000000000d9d1         align      8
                     aTheOptionsForV:
000000000000d9d8         db         "the options for verbose and stty-readable output styles are\nmutually exclusive", 0 ; DATA XREF=main+2553
000000000000da27         align      8
                     aWhenSpecifying:
000000000000da28         db         "when specifying an output style, modes may not be set", 0 ; DATA XREF=main+2788
000000000000da5e         align      32
                     aSCouldntResetN:
000000000000da60         db         "%s: couldn't reset non-blocking mode", 0   ; DATA XREF=main+2839
000000000000da85         align      8
                     aSUnableToPerfo:
000000000000da88         db         "%s: unable to perform all requested operations", 0 ; DATA XREF=main+1715
                     a831:
000000000000dab7         db         "8.31", 0                                   ; DATA XREF=Version
                     aWriteError:
000000000000dabc         db         "write error", 0                            ; DATA XREF=close_stdout+67
                     aSS:
000000000000dac8         db         "%s: %s", 0                                 ; DATA XREF=close_stdout+108, xnumtoumax+125
000000000000dacf         align      16
                     aANullArgv0WasP:
000000000000dad0         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
000000000000db08         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
000000000000db10         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
000000000000db11         db  0x74 ; 't'
000000000000db12         db  0x2d ; '-'
000000000000db13         db  0x00 ; '.'
000000000000db14         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
000000000000db15         db  0x80 ; '.'
000000000000db16         db  0x98 ; '.'
000000000000db17         db  0x00 ; '.'
000000000000db18         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
000000000000db19         db  0x80 ; '.'
000000000000db1a         db  0x99 ; '.'
000000000000db1b         db  0x00 ; '.'
000000000000db1c         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
000000000000db1d         db  0x07 ; '.'
000000000000db1e         db  0x65 ; 'e'
000000000000db1f         db  0x00 ; '.'
000000000000db20         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
000000000000db21         db  0xaf ; '.'
000000000000db22         db  0x00 ; '.'
000000000000db23         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_6340+1451, sub_6340+1493, sub_6340+2429
000000000000db24         db  0x00 ; '.'
000000000000db25         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_6340+132, sub_6340+1338, sub_6340+1670, sub_6340+1697, sub_6340+2352
000000000000db26         db  0x00 ; '.'
000000000000db27         db  0x60 ; '`'                                         ; DATA XREF=sub_6340+1627, sub_6340+1654
000000000000db28         db  0x00 ; '.'
                     aLiteral:
000000000000db29         db         "literal", 0
                     aShell:
000000000000db31         db         "shell", 0
                     aShellalways:
000000000000db37         db         "shell-always", 0
000000000000db44         db  0x73 ; 's'
000000000000db45         db  0x68 ; 'h'
000000000000db46         db  0x65 ; 'e'
000000000000db47         db  0x6c ; 'l'
000000000000db48         db  0x6c ; 'l'
000000000000db49         db  0x2d ; '-'
                     aEscape:
000000000000db4a         db         "escape", 0
                     aShellescapealw:
000000000000db51         db         "shell-escape-always", 0
                     aCmaybe:
000000000000db65         db         "c-maybe", 0
                     aClocale:
000000000000db6d         db         "clocale", 0
000000000000db75         align      128
                     switch_table_db80:        // switch_table
000000000000db80         dd         quotearg_buffer_restyled.loc_6a3a-switch_table_db80, quotearg_buffer_restyled.loc_5c93-switch_table_db80, quotearg_buffer_restyled.loc_6c68-switch_table_db80, quotearg_buffer_restyled.loc_6a74-switch_table_db80 ; switch table used at 0x5c91 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
000000000000db90         dd         quotearg_buffer_restyled.loc_6864-switch_table_db80, quotearg_buffer_restyled.loc_68c0-switch_table_db80, quotearg_buffer_restyled.loc_6915-switch_table_db80, quotearg_buffer_restyled.loc_695a-switch_table_db80
000000000000dba0         dd         3 dup (quotearg_buffer_restyled.loc_6994-switch_table_db80)
000000000000dbac         db  0x64 ; 'd'                                         ; DATA XREF=quotearg_buffer_restyled+477
000000000000dbad         db  0x84 ; '.'
000000000000dbae         db  0xff ; '.'
000000000000dbaf         db  0xff ; '.'
000000000000dbb0         db  0x4c ; 'L'
000000000000dbb1         db  0x85 ; '.'
000000000000dbb2         db  0xff ; '.'
000000000000dbb3         db  0xff ; '.'
000000000000dbb4         db  0x4c ; 'L'
000000000000dbb5         db  0x85 ; '.'
000000000000dbb6         db  0xff ; '.'
000000000000dbb7         db  0xff ; '.'
000000000000dbb8         db  0x4c ; 'L'
000000000000dbb9         db  0x85 ; '.'
000000000000dbba         db  0xff ; '.'
000000000000dbbb         db  0xff ; '.'
000000000000dbbc         db  0x4c ; 'L'
000000000000dbbd         db  0x85 ; '.'
000000000000dbbe         db  0xff ; '.'
000000000000dbbf         db  0xff ; '.'
000000000000dbc0         db  0x4c ; 'L'
000000000000dbc1         db  0x85 ; '.'
000000000000dbc2         db  0xff ; '.'
000000000000dbc3         db  0xff ; '.'
000000000000dbc4         db  0x4c ; 'L'
000000000000dbc5         db  0x85 ; '.'
000000000000dbc6         db  0xff ; '.'
000000000000dbc7         db  0xff ; '.'
000000000000dbc8         db  0xa4 ; '.'
000000000000dbc9         db  0x84 ; '.'
000000000000dbca         db  0xff ; '.'
000000000000dbcb         db  0xff ; '.'
000000000000dbcc         db  0xac ; '.'
000000000000dbcd         db  0x83 ; '.'
000000000000dbce         db  0xff ; '.'
000000000000dbcf         db  0xff ; '.'
000000000000dbd0         db  0x6c ; 'l'
000000000000dbd1         db  0x83 ; '.'
000000000000dbd2         db  0xff ; '.'
000000000000dbd3         db  0xff ; '.'
000000000000dbd4         db  0x34 ; '4'
000000000000dbd5         db  0x85 ; '.'
000000000000dbd6         db  0xff ; '.'
000000000000dbd7         db  0xff ; '.'
000000000000dbd8         db  0x24 ; '$'
000000000000dbd9         db  0x85 ; '.'
000000000000dbda         db  0xff ; '.'
000000000000dbdb         db  0xff ; '.'
000000000000dbdc         db  0x14 ; '.'
000000000000dbdd         db  0x85 ; '.'
000000000000dbde         db  0xff ; '.'
000000000000dbdf         db  0xff ; '.'
000000000000dbe0         db  0x04 ; '.'
000000000000dbe1         db  0x85 ; '.'
000000000000dbe2         db  0xff ; '.'
000000000000dbe3         db  0xff ; '.'
000000000000dbe4         db  0x4c ; 'L'
000000000000dbe5         db  0x85 ; '.'
000000000000dbe6         db  0xff ; '.'
000000000000dbe7         db  0xff ; '.'
000000000000dbe8         db  0x4c ; 'L'
000000000000dbe9         db  0x85 ; '.'
000000000000dbea         db  0xff ; '.'
000000000000dbeb         db  0xff ; '.'
000000000000dbec         db  0x4c ; 'L'
000000000000dbed         db  0x85 ; '.'
000000000000dbee         db  0xff ; '.'
000000000000dbef         db  0xff ; '.'
000000000000dbf0         db  0x4c ; 'L'
000000000000dbf1         db  0x85 ; '.'
000000000000dbf2         db  0xff ; '.'
000000000000dbf3         db  0xff ; '.'
000000000000dbf4         db  0x4c ; 'L'
000000000000dbf5         db  0x85 ; '.'
000000000000dbf6         db  0xff ; '.'
000000000000dbf7         db  0xff ; '.'
000000000000dbf8         db  0x4c ; 'L'
000000000000dbf9         db  0x85 ; '.'
000000000000dbfa         db  0xff ; '.'
000000000000dbfb         db  0xff ; '.'
000000000000dbfc         db  0x4c ; 'L'
000000000000dbfd         db  0x85 ; '.'
000000000000dbfe         db  0xff ; '.'
000000000000dbff         db  0xff ; '.'
000000000000dc00         db  0x4c ; 'L'
000000000000dc01         db  0x85 ; '.'
000000000000dc02         db  0xff ; '.'
000000000000dc03         db  0xff ; '.'
000000000000dc04         db  0x4c ; 'L'
000000000000dc05         db  0x85 ; '.'
000000000000dc06         db  0xff ; '.'
000000000000dc07         db  0xff ; '.'
000000000000dc08         db  0x4c ; 'L'
000000000000dc09         db  0x85 ; '.'
000000000000dc0a         db  0xff ; '.'
000000000000dc0b         db  0xff ; '.'
000000000000dc0c         db  0x4c ; 'L'
000000000000dc0d         db  0x85 ; '.'
000000000000dc0e         db  0xff ; '.'
000000000000dc0f         db  0xff ; '.'
000000000000dc10         db  0x4c ; 'L'
000000000000dc11         db  0x85 ; '.'
000000000000dc12         db  0xff ; '.'
000000000000dc13         db  0xff ; '.'
000000000000dc14         db  0x4c ; 'L'
000000000000dc15         db  0x85 ; '.'
000000000000dc16         db  0xff ; '.'
000000000000dc17         db  0xff ; '.'
000000000000dc18         db  0x4c ; 'L'
000000000000dc19         db  0x85 ; '.'
000000000000dc1a         db  0xff ; '.'
000000000000dc1b         db  0xff ; '.'
000000000000dc1c         db  0x4c ; 'L'
000000000000dc1d         db  0x85 ; '.'
000000000000dc1e         db  0xff ; '.'
000000000000dc1f         db  0xff ; '.'
000000000000dc20         db  0x4c ; 'L'
000000000000dc21         db  0x85 ; '.'
000000000000dc22         db  0xff ; '.'
000000000000dc23         db  0xff ; '.'
000000000000dc24         db  0x4c ; 'L'
000000000000dc25         db  0x85 ; '.'
000000000000dc26         db  0xff ; '.'
000000000000dc27         db  0xff ; '.'
000000000000dc28         db  0x4c ; 'L'
000000000000dc29         db  0x85 ; '.'
000000000000dc2a         db  0xff ; '.'
000000000000dc2b         db  0xff ; '.'
000000000000dc2c         db  0xf4 ; '.'
000000000000dc2d         db  0x84 ; '.'
000000000000dc2e         db  0xff ; '.'
000000000000dc2f         db  0xff ; '.'
000000000000dc30         db  0xe4 ; '.'
000000000000dc31         db  0x84 ; '.'
000000000000dc32         db  0xff ; '.'
000000000000dc33         db  0xff ; '.'
000000000000dc34         db  0xe4 ; '.'
000000000000dc35         db  0x84 ; '.'
000000000000dc36         db  0xff ; '.'
000000000000dc37         db  0xff ; '.'
000000000000dc38         db  0xb4 ; '.'
000000000000dc39         db  0x84 ; '.'
000000000000dc3a         db  0xff ; '.'
000000000000dc3b         db  0xff ; '.'
000000000000dc3c         db  0xe4 ; '.'
000000000000dc3d         db  0x84 ; '.'
000000000000dc3e         db  0xff ; '.'
000000000000dc3f         db  0xff ; '.'
000000000000dc40         db  0x8c ; '.'
000000000000dc41         db  0x84 ; '.'
000000000000dc42         db  0xff ; '.'
000000000000dc43         db  0xff ; '.'
000000000000dc44         db  0xe4 ; '.'
000000000000dc45         db  0x84 ; '.'
000000000000dc46         db  0xff ; '.'
000000000000dc47         db  0xff ; '.'
000000000000dc48         db  0x47 ; 'G'
000000000000dc49         db  0x83 ; '.'
000000000000dc4a         db  0xff ; '.'
000000000000dc4b         db  0xff ; '.'
000000000000dc4c         db  0xe4 ; '.'
000000000000dc4d         db  0x84 ; '.'
000000000000dc4e         db  0xff ; '.'
000000000000dc4f         db  0xff ; '.'
000000000000dc50         db  0xe4 ; '.'
000000000000dc51         db  0x84 ; '.'
000000000000dc52         db  0xff ; '.'
000000000000dc53         db  0xff ; '.'
000000000000dc54         db  0xe4 ; '.'
000000000000dc55         db  0x84 ; '.'
000000000000dc56         db  0xff ; '.'
000000000000dc57         db  0xff ; '.'
000000000000dc58         db  0x8c ; '.'
000000000000dc59         db  0x84 ; '.'
000000000000dc5a         db  0xff ; '.'
000000000000dc5b         db  0xff ; '.'
000000000000dc5c         db  0x8c ; '.'
000000000000dc5d         db  0x84 ; '.'
000000000000dc5e         db  0xff ; '.'
000000000000dc5f         db  0xff ; '.'
000000000000dc60         db  0x8c ; '.'
000000000000dc61         db  0x84 ; '.'
000000000000dc62         db  0xff ; '.'
000000000000dc63         db  0xff ; '.'
000000000000dc64         db  0x8c ; '.'
000000000000dc65         db  0x84 ; '.'
000000000000dc66         db  0xff ; '.'
000000000000dc67         db  0xff ; '.'
000000000000dc68         db  0x8c ; '.'
000000000000dc69         db  0x84 ; '.'
000000000000dc6a         db  0xff ; '.'
000000000000dc6b         db  0xff ; '.'
000000000000dc6c         db  0x8c ; '.'
000000000000dc6d         db  0x84 ; '.'
000000000000dc6e         db  0xff ; '.'
000000000000dc6f         db  0xff ; '.'
000000000000dc70         db  0x8c ; '.'
000000000000dc71         db  0x84 ; '.'
000000000000dc72         db  0xff ; '.'
000000000000dc73         db  0xff ; '.'
000000000000dc74         db  0x8c ; '.'
000000000000dc75         db  0x84 ; '.'
000000000000dc76         db  0xff ; '.'
000000000000dc77         db  0xff ; '.'
000000000000dc78         db  0x8c ; '.'
000000000000dc79         db  0x84 ; '.'
000000000000dc7a         db  0xff ; '.'
000000000000dc7b         db  0xff ; '.'
000000000000dc7c         db  0x8c ; '.'
000000000000dc7d         db  0x84 ; '.'
000000000000dc7e         db  0xff ; '.'
000000000000dc7f         db  0xff ; '.'
000000000000dc80         db  0x8c ; '.'
000000000000dc81         db  0x84 ; '.'
000000000000dc82         db  0xff ; '.'
000000000000dc83         db  0xff ; '.'
000000000000dc84         db  0x8c ; '.'
000000000000dc85         db  0x84 ; '.'
000000000000dc86         db  0xff ; '.'
000000000000dc87         db  0xff ; '.'
000000000000dc88         db  0x8c ; '.'
000000000000dc89         db  0x84 ; '.'
000000000000dc8a         db  0xff ; '.'
000000000000dc8b         db  0xff ; '.'
000000000000dc8c         db  0x8c ; '.'
000000000000dc8d         db  0x84 ; '.'
000000000000dc8e         db  0xff ; '.'
000000000000dc8f         db  0xff ; '.'
000000000000dc90         db  0x8c ; '.'
000000000000dc91         db  0x84 ; '.'
000000000000dc92         db  0xff ; '.'
000000000000dc93         db  0xff ; '.'
000000000000dc94         db  0x8c ; '.'
000000000000dc95         db  0x84 ; '.'
000000000000dc96         db  0xff ; '.'
000000000000dc97         db  0xff ; '.'
000000000000dc98         db  0xe4 ; '.'
000000000000dc99         db  0x84 ; '.'
000000000000dc9a         db  0xff ; '.'
000000000000dc9b         db  0xff ; '.'
000000000000dc9c         db  0xe4 ; '.'
000000000000dc9d         db  0x84 ; '.'
000000000000dc9e         db  0xff ; '.'
000000000000dc9f         db  0xff ; '.'
000000000000dca0         db  0xe4 ; '.'
000000000000dca1         db  0x84 ; '.'
000000000000dca2         db  0xff ; '.'
000000000000dca3         db  0xff ; '.'
000000000000dca4         db  0xe4 ; '.'
000000000000dca5         db  0x84 ; '.'
000000000000dca6         db  0xff ; '.'
000000000000dca7         db  0xff ; '.'
000000000000dca8         db  0x17 ; '.'
000000000000dca9         db  0x83 ; '.'
000000000000dcaa         db  0xff ; '.'
000000000000dcab         db  0xff ; '.'
000000000000dcac         db  0x4c ; 'L'
000000000000dcad         db  0x85 ; '.'
000000000000dcae         db  0xff ; '.'
000000000000dcaf         db  0xff ; '.'
000000000000dcb0         db  0x8c ; '.'
000000000000dcb1         db  0x84 ; '.'
000000000000dcb2         db  0xff ; '.'
000000000000dcb3         db  0xff ; '.'
000000000000dcb4         db  0x8c ; '.'
000000000000dcb5         db  0x84 ; '.'
000000000000dcb6         db  0xff ; '.'
000000000000dcb7         db  0xff ; '.'
000000000000dcb8         db  0x8c ; '.'
000000000000dcb9         db  0x84 ; '.'
000000000000dcba         db  0xff ; '.'
000000000000dcbb         db  0xff ; '.'
000000000000dcbc         db  0x8c ; '.'
000000000000dcbd         db  0x84 ; '.'
000000000000dcbe         db  0xff ; '.'
000000000000dcbf         db  0xff ; '.'
000000000000dcc0         db  0x8c ; '.'
000000000000dcc1         db  0x84 ; '.'
000000000000dcc2         db  0xff ; '.'
000000000000dcc3         db  0xff ; '.'
000000000000dcc4         db  0x8c ; '.'
000000000000dcc5         db  0x84 ; '.'
000000000000dcc6         db  0xff ; '.'
000000000000dcc7         db  0xff ; '.'
000000000000dcc8         db  0x8c ; '.'
000000000000dcc9         db  0x84 ; '.'
000000000000dcca         db  0xff ; '.'
000000000000dccb         db  0xff ; '.'
000000000000dccc         db  0x8c ; '.'
000000000000dccd         db  0x84 ; '.'
000000000000dcce         db  0xff ; '.'
000000000000dccf         db  0xff ; '.'
000000000000dcd0         db  0x8c ; '.'
000000000000dcd1         db  0x84 ; '.'
000000000000dcd2         db  0xff ; '.'
000000000000dcd3         db  0xff ; '.'
000000000000dcd4         db  0x8c ; '.'
000000000000dcd5         db  0x84 ; '.'
000000000000dcd6         db  0xff ; '.'
000000000000dcd7         db  0xff ; '.'
000000000000dcd8         db  0x8c ; '.'
000000000000dcd9         db  0x84 ; '.'
000000000000dcda         db  0xff ; '.'
000000000000dcdb         db  0xff ; '.'
000000000000dcdc         db  0x8c ; '.'
000000000000dcdd         db  0x84 ; '.'
000000000000dcde         db  0xff ; '.'
000000000000dcdf         db  0xff ; '.'
000000000000dce0         db  0x8c ; '.'
000000000000dce1         db  0x84 ; '.'
000000000000dce2         db  0xff ; '.'
000000000000dce3         db  0xff ; '.'
000000000000dce4         db  0x8c ; '.'
000000000000dce5         db  0x84 ; '.'
000000000000dce6         db  0xff ; '.'
000000000000dce7         db  0xff ; '.'
000000000000dce8         db  0x8c ; '.'
000000000000dce9         db  0x84 ; '.'
000000000000dcea         db  0xff ; '.'
000000000000dceb         db  0xff ; '.'
000000000000dcec         db  0x8c ; '.'
000000000000dced         db  0x84 ; '.'
000000000000dcee         db  0xff ; '.'
000000000000dcef         db  0xff ; '.'
000000000000dcf0         db  0x8c ; '.'
000000000000dcf1         db  0x84 ; '.'
000000000000dcf2         db  0xff ; '.'
000000000000dcf3         db  0xff ; '.'
000000000000dcf4         db  0x8c ; '.'
000000000000dcf5         db  0x84 ; '.'
000000000000dcf6         db  0xff ; '.'
000000000000dcf7         db  0xff ; '.'
000000000000dcf8         db  0x8c ; '.'
000000000000dcf9         db  0x84 ; '.'
000000000000dcfa         db  0xff ; '.'
000000000000dcfb         db  0xff ; '.'
000000000000dcfc         db  0x8c ; '.'
000000000000dcfd         db  0x84 ; '.'
000000000000dcfe         db  0xff ; '.'
000000000000dcff         db  0xff ; '.'
000000000000dd00         db  0x8c ; '.'
000000000000dd01         db  0x84 ; '.'
000000000000dd02         db  0xff ; '.'
000000000000dd03         db  0xff ; '.'
000000000000dd04         db  0x8c ; '.'
000000000000dd05         db  0x84 ; '.'
000000000000dd06         db  0xff ; '.'
000000000000dd07         db  0xff ; '.'
000000000000dd08         db  0x8c ; '.'
000000000000dd09         db  0x84 ; '.'
000000000000dd0a         db  0xff ; '.'
000000000000dd0b         db  0xff ; '.'
000000000000dd0c         db  0x8c ; '.'
000000000000dd0d         db  0x84 ; '.'
000000000000dd0e         db  0xff ; '.'
000000000000dd0f         db  0xff ; '.'
000000000000dd10         db  0x8c ; '.'
000000000000dd11         db  0x84 ; '.'
000000000000dd12         db  0xff ; '.'
000000000000dd13         db  0xff ; '.'
000000000000dd14         db  0x8c ; '.'
000000000000dd15         db  0x84 ; '.'
000000000000dd16         db  0xff ; '.'
000000000000dd17         db  0xff ; '.'
000000000000dd18         db  0xe4 ; '.'
000000000000dd19         db  0x84 ; '.'
000000000000dd1a         db  0xff ; '.'
000000000000dd1b         db  0xff ; '.'
000000000000dd1c         db  0xbc ; '.'
000000000000dd1d         db  0x83 ; '.'
000000000000dd1e         db  0xff ; '.'
000000000000dd1f         db  0xff ; '.'
000000000000dd20         db  0x8c ; '.'
000000000000dd21         db  0x84 ; '.'
000000000000dd22         db  0xff ; '.'
000000000000dd23         db  0xff ; '.'
000000000000dd24         db  0xe4 ; '.'
000000000000dd25         db  0x84 ; '.'
000000000000dd26         db  0xff ; '.'
000000000000dd27         db  0xff ; '.'
000000000000dd28         db  0x8c ; '.'
000000000000dd29         db  0x84 ; '.'
000000000000dd2a         db  0xff ; '.'
000000000000dd2b         db  0xff ; '.'
000000000000dd2c         db  0xe4 ; '.'
000000000000dd2d         db  0x84 ; '.'
000000000000dd2e         db  0xff ; '.'
000000000000dd2f         db  0xff ; '.'
000000000000dd30         db  0x8c ; '.'
000000000000dd31         db  0x84 ; '.'
000000000000dd32         db  0xff ; '.'
000000000000dd33         db  0xff ; '.'
000000000000dd34         db  0x8c ; '.'
000000000000dd35         db  0x84 ; '.'
000000000000dd36         db  0xff ; '.'
000000000000dd37         db  0xff ; '.'
000000000000dd38         db  0x8c ; '.'
000000000000dd39         db  0x84 ; '.'
000000000000dd3a         db  0xff ; '.'
000000000000dd3b         db  0xff ; '.'
000000000000dd3c         db  0x8c ; '.'
000000000000dd3d         db  0x84 ; '.'
000000000000dd3e         db  0xff ; '.'
000000000000dd3f         db  0xff ; '.'
000000000000dd40         db  0x8c ; '.'
000000000000dd41         db  0x84 ; '.'
000000000000dd42         db  0xff ; '.'
000000000000dd43         db  0xff ; '.'
000000000000dd44         db  0x8c ; '.'
000000000000dd45         db  0x84 ; '.'
000000000000dd46         db  0xff ; '.'
000000000000dd47         db  0xff ; '.'
000000000000dd48         db  0x8c ; '.'
000000000000dd49         db  0x84 ; '.'
000000000000dd4a         db  0xff ; '.'
000000000000dd4b         db  0xff ; '.'
000000000000dd4c         db  0x8c ; '.'
000000000000dd4d         db  0x84 ; '.'
000000000000dd4e         db  0xff ; '.'
000000000000dd4f         db  0xff ; '.'
000000000000dd50         db  0x8c ; '.'
000000000000dd51         db  0x84 ; '.'
000000000000dd52         db  0xff ; '.'
000000000000dd53         db  0xff ; '.'
000000000000dd54         db  0x8c ; '.'
000000000000dd55         db  0x84 ; '.'
000000000000dd56         db  0xff ; '.'
000000000000dd57         db  0xff ; '.'
000000000000dd58         db  0x8c ; '.'
000000000000dd59         db  0x84 ; '.'
000000000000dd5a         db  0xff ; '.'
000000000000dd5b         db  0xff ; '.'
000000000000dd5c         db  0x8c ; '.'
000000000000dd5d         db  0x84 ; '.'
000000000000dd5e         db  0xff ; '.'
000000000000dd5f         db  0xff ; '.'
000000000000dd60         db  0x8c ; '.'
000000000000dd61         db  0x84 ; '.'
000000000000dd62         db  0xff ; '.'
000000000000dd63         db  0xff ; '.'
000000000000dd64         db  0x8c ; '.'
000000000000dd65         db  0x84 ; '.'
000000000000dd66         db  0xff ; '.'
000000000000dd67         db  0xff ; '.'
000000000000dd68         db  0x8c ; '.'
000000000000dd69         db  0x84 ; '.'
000000000000dd6a         db  0xff ; '.'
000000000000dd6b         db  0xff ; '.'
000000000000dd6c         db  0x8c ; '.'
000000000000dd6d         db  0x84 ; '.'
000000000000dd6e         db  0xff ; '.'
000000000000dd6f         db  0xff ; '.'
000000000000dd70         db  0x8c ; '.'
000000000000dd71         db  0x84 ; '.'
000000000000dd72         db  0xff ; '.'
000000000000dd73         db  0xff ; '.'
000000000000dd74         db  0x8c ; '.'
000000000000dd75         db  0x84 ; '.'
000000000000dd76         db  0xff ; '.'
000000000000dd77         db  0xff ; '.'
000000000000dd78         db  0x8c ; '.'
000000000000dd79         db  0x84 ; '.'
000000000000dd7a         db  0xff ; '.'
000000000000dd7b         db  0xff ; '.'
000000000000dd7c         db  0x8c ; '.'
000000000000dd7d         db  0x84 ; '.'
000000000000dd7e         db  0xff ; '.'
000000000000dd7f         db  0xff ; '.'
000000000000dd80         db  0x8c ; '.'
000000000000dd81         db  0x84 ; '.'
000000000000dd82         db  0xff ; '.'
000000000000dd83         db  0xff ; '.'
000000000000dd84         db  0x8c ; '.'
000000000000dd85         db  0x84 ; '.'
000000000000dd86         db  0xff ; '.'
000000000000dd87         db  0xff ; '.'
000000000000dd88         db  0x8c ; '.'
000000000000dd89         db  0x84 ; '.'
000000000000dd8a         db  0xff ; '.'
000000000000dd8b         db  0xff ; '.'
000000000000dd8c         db  0x8c ; '.'
000000000000dd8d         db  0x84 ; '.'
000000000000dd8e         db  0xff ; '.'
000000000000dd8f         db  0xff ; '.'
000000000000dd90         db  0x8c ; '.'
000000000000dd91         db  0x84 ; '.'
000000000000dd92         db  0xff ; '.'
000000000000dd93         db  0xff ; '.'
000000000000dd94         db  0x8c ; '.'
000000000000dd95         db  0x84 ; '.'
000000000000dd96         db  0xff ; '.'
000000000000dd97         db  0xff ; '.'
000000000000dd98         db  0x47 ; 'G'
000000000000dd99         db  0x82 ; '.'
000000000000dd9a         db  0xff ; '.'
000000000000dd9b         db  0xff ; '.'
000000000000dd9c         db  0xe4 ; '.'
000000000000dd9d         db  0x84 ; '.'
000000000000dd9e         db  0xff ; '.'
000000000000dd9f         db  0xff ; '.'
000000000000dda0         db  0x47 ; 'G'
000000000000dda1         db  0x82 ; '.'
000000000000dda2         db  0xff ; '.'
000000000000dda3         db  0xff ; '.'
000000000000dda4         db  0xb4 ; '.'
000000000000dda5         db  0x84 ; '.'
000000000000dda6         db  0xff ; '.'
000000000000dda7         db  0xff ; '.'
000000000000dda8         db  0x38 ; '8'                                         ; DATA XREF=sub_60e0+137
000000000000dda9         db  0x84 ; '.'
000000000000ddaa         db  0xff ; '.'
000000000000ddab         db  0xff ; '.'
000000000000ddac         db  0x48 ; 'H'
000000000000ddad         db  0x83 ; '.'
000000000000ddae         db  0xff ; '.'
000000000000ddaf         db  0xff ; '.'
000000000000ddb0         db  0x48 ; 'H'
000000000000ddb1         db  0x83 ; '.'
000000000000ddb2         db  0xff ; '.'
000000000000ddb3         db  0xff ; '.'
000000000000ddb4         db  0x48 ; 'H'
000000000000ddb5         db  0x83 ; '.'
000000000000ddb6         db  0xff ; '.'
000000000000ddb7         db  0xff ; '.'
000000000000ddb8         db  0x48 ; 'H'
000000000000ddb9         db  0x83 ; '.'
000000000000ddba         db  0xff ; '.'
000000000000ddbb         db  0xff ; '.'
000000000000ddbc         db  0x48 ; 'H'
000000000000ddbd         db  0x83 ; '.'
000000000000ddbe         db  0xff ; '.'
000000000000ddbf         db  0xff ; '.'
000000000000ddc0         db  0x48 ; 'H'
000000000000ddc1         db  0x83 ; '.'
000000000000ddc2         db  0xff ; '.'
000000000000ddc3         db  0xff ; '.'
000000000000ddc4         db  0x28 ; '('
000000000000ddc5         db  0x84 ; '.'
000000000000ddc6         db  0xff ; '.'
000000000000ddc7         db  0xff ; '.'
000000000000ddc8         db  0x78 ; 'x'
000000000000ddc9         db  0x85 ; '.'
000000000000ddca         db  0xff ; '.'
000000000000ddcb         db  0xff ; '.'
000000000000ddcc         db  0x60 ; '`'
000000000000ddcd         db  0x85 ; '.'
000000000000ddce         db  0xff ; '.'
000000000000ddcf         db  0xff ; '.'
000000000000ddd0         db  0x10 ; '.'
000000000000ddd1         db  0x84 ; '.'
000000000000ddd2         db  0xff ; '.'
000000000000ddd3         db  0xff ; '.'
000000000000ddd4         db  0x50 ; 'P'
000000000000ddd5         db  0x85 ; '.'
000000000000ddd6         db  0xff ; '.'
000000000000ddd7         db  0xff ; '.'
000000000000ddd8         db  0xf8 ; '.'
000000000000ddd9         db  0x83 ; '.'
000000000000ddda         db  0xff ; '.'
000000000000dddb         db  0xff ; '.'
000000000000dddc         db  0x38 ; '8'
000000000000dddd         db  0x85 ; '.'
000000000000ddde         db  0xff ; '.'
000000000000dddf         db  0xff ; '.'
000000000000dde0         db  0x48 ; 'H'
000000000000dde1         db  0x83 ; '.'
000000000000dde2         db  0xff ; '.'
000000000000dde3         db  0xff ; '.'
000000000000dde4         db  0x48 ; 'H'
000000000000dde5         db  0x83 ; '.'
000000000000dde6         db  0xff ; '.'
000000000000dde7         db  0xff ; '.'
000000000000dde8         db  0x48 ; 'H'
000000000000dde9         db  0x83 ; '.'
000000000000ddea         db  0xff ; '.'
000000000000ddeb         db  0xff ; '.'
000000000000ddec         db  0x48 ; 'H'
000000000000dded         db  0x83 ; '.'
000000000000ddee         db  0xff ; '.'
000000000000ddef         db  0xff ; '.'
000000000000ddf0         db  0x48 ; 'H'
000000000000ddf1         db  0x83 ; '.'
000000000000ddf2         db  0xff ; '.'
000000000000ddf3         db  0xff ; '.'
000000000000ddf4         db  0x48 ; 'H'
000000000000ddf5         db  0x83 ; '.'
000000000000ddf6         db  0xff ; '.'
000000000000ddf7         db  0xff ; '.'
000000000000ddf8         db  0x48 ; 'H'
000000000000ddf9         db  0x83 ; '.'
000000000000ddfa         db  0xff ; '.'
000000000000ddfb         db  0xff ; '.'
000000000000ddfc         db  0x48 ; 'H'
000000000000ddfd         db  0x83 ; '.'
000000000000ddfe         db  0xff ; '.'
000000000000ddff         db  0xff ; '.'
000000000000de00         db  0x48 ; 'H'
000000000000de01         db  0x83 ; '.'
000000000000de02         db  0xff ; '.'
000000000000de03         db  0xff ; '.'
000000000000de04         db  0x48 ; 'H'
000000000000de05         db  0x83 ; '.'
000000000000de06         db  0xff ; '.'
000000000000de07         db  0xff ; '.'
000000000000de08         db  0x48 ; 'H'
000000000000de09         db  0x83 ; '.'
000000000000de0a         db  0xff ; '.'
000000000000de0b         db  0xff ; '.'
000000000000de0c         db  0x48 ; 'H'
000000000000de0d         db  0x83 ; '.'
000000000000de0e         db  0xff ; '.'
000000000000de0f         db  0xff ; '.'
000000000000de10         db  0x48 ; 'H'
000000000000de11         db  0x83 ; '.'
000000000000de12         db  0xff ; '.'
000000000000de13         db  0xff ; '.'
000000000000de14         db  0x48 ; 'H'
000000000000de15         db  0x83 ; '.'
000000000000de16         db  0xff ; '.'
000000000000de17         db  0xff ; '.'
000000000000de18         db  0x48 ; 'H'
000000000000de19         db  0x83 ; '.'
000000000000de1a         db  0xff ; '.'
000000000000de1b         db  0xff ; '.'
000000000000de1c         db  0x48 ; 'H'
000000000000de1d         db  0x83 ; '.'
000000000000de1e         db  0xff ; '.'
000000000000de1f         db  0xff ; '.'
000000000000de20         db  0x48 ; 'H'
000000000000de21         db  0x83 ; '.'
000000000000de22         db  0xff ; '.'
000000000000de23         db  0xff ; '.'
000000000000de24         db  0x48 ; 'H'
000000000000de25         db  0x83 ; '.'
000000000000de26         db  0xff ; '.'
000000000000de27         db  0xff ; '.'
000000000000de28         db  0x20 ; ' '
000000000000de29         db  0x85 ; '.'
000000000000de2a         db  0xff ; '.'
000000000000de2b         db  0xff ; '.'
000000000000de2c         db  0x08 ; '.'
000000000000de2d         db  0x85 ; '.'
000000000000de2e         db  0xff ; '.'
000000000000de2f         db  0xff ; '.'
000000000000de30         db  0x08 ; '.'
000000000000de31         db  0x85 ; '.'
000000000000de32         db  0xff ; '.'
000000000000de33         db  0xff ; '.'
000000000000de34         db  0xf0 ; '.'
000000000000de35         db  0x84 ; '.'
000000000000de36         db  0xff ; '.'
000000000000de37         db  0xff ; '.'
000000000000de38         db  0x08 ; '.'
000000000000de39         db  0x85 ; '.'
000000000000de3a         db  0xff ; '.'
000000000000de3b         db  0xff ; '.'
000000000000de3c         db  0xd8 ; '.'
000000000000de3d         db  0x84 ; '.'
000000000000de3e         db  0xff ; '.'
000000000000de3f         db  0xff ; '.'
000000000000de40         db  0x08 ; '.'
000000000000de41         db  0x85 ; '.'
000000000000de42         db  0xff ; '.'
000000000000de43         db  0xff ; '.'
000000000000de44         db  0x48 ; 'H'
000000000000de45         db  0x81 ; '.'
000000000000de46         db  0xff ; '.'
000000000000de47         db  0xff ; '.'
000000000000de48         db  0x08 ; '.'
000000000000de49         db  0x85 ; '.'
000000000000de4a         db  0xff ; '.'
000000000000de4b         db  0xff ; '.'
000000000000de4c         db  0x08 ; '.'
000000000000de4d         db  0x85 ; '.'
000000000000de4e         db  0xff ; '.'
000000000000de4f         db  0xff ; '.'
000000000000de50         db  0x08 ; '.'
000000000000de51         db  0x85 ; '.'
000000000000de52         db  0xff ; '.'
000000000000de53         db  0xff ; '.'
000000000000de54         db  0xd8 ; '.'
000000000000de55         db  0x84 ; '.'
000000000000de56         db  0xff ; '.'
000000000000de57         db  0xff ; '.'
000000000000de58         db  0xd8 ; '.'
000000000000de59         db  0x84 ; '.'
000000000000de5a         db  0xff ; '.'
000000000000de5b         db  0xff ; '.'
000000000000de5c         db  0xd8 ; '.'
000000000000de5d         db  0x84 ; '.'
000000000000de5e         db  0xff ; '.'
000000000000de5f         db  0xff ; '.'
000000000000de60         db  0xd8 ; '.'
000000000000de61         db  0x84 ; '.'
000000000000de62         db  0xff ; '.'
000000000000de63         db  0xff ; '.'
000000000000de64         db  0xd8 ; '.'
000000000000de65         db  0x84 ; '.'
000000000000de66         db  0xff ; '.'
000000000000de67         db  0xff ; '.'
000000000000de68         db  0xd8 ; '.'
000000000000de69         db  0x84 ; '.'
000000000000de6a         db  0xff ; '.'
000000000000de6b         db  0xff ; '.'
000000000000de6c         db  0xd8 ; '.'
000000000000de6d         db  0x84 ; '.'
000000000000de6e         db  0xff ; '.'
000000000000de6f         db  0xff ; '.'
000000000000de70         db  0xd8 ; '.'
000000000000de71         db  0x84 ; '.'
000000000000de72         db  0xff ; '.'
000000000000de73         db  0xff ; '.'
000000000000de74         db  0xd8 ; '.'
000000000000de75         db  0x84 ; '.'
000000000000de76         db  0xff ; '.'
000000000000de77         db  0xff ; '.'
000000000000de78         db  0xd8 ; '.'
000000000000de79         db  0x84 ; '.'
000000000000de7a         db  0xff ; '.'
000000000000de7b         db  0xff ; '.'
000000000000de7c         db  0xd8 ; '.'
000000000000de7d         db  0x84 ; '.'
000000000000de7e         db  0xff ; '.'
000000000000de7f         db  0xff ; '.'
000000000000de80         db  0xd8 ; '.'
000000000000de81         db  0x84 ; '.'
000000000000de82         db  0xff ; '.'
000000000000de83         db  0xff ; '.'
000000000000de84         db  0xd8 ; '.'
000000000000de85         db  0x84 ; '.'
000000000000de86         db  0xff ; '.'
000000000000de87         db  0xff ; '.'
000000000000de88         db  0xd8 ; '.'
000000000000de89         db  0x84 ; '.'
000000000000de8a         db  0xff ; '.'
000000000000de8b         db  0xff ; '.'
000000000000de8c         db  0xd8 ; '.'
000000000000de8d         db  0x84 ; '.'
000000000000de8e         db  0xff ; '.'
000000000000de8f         db  0xff ; '.'
000000000000de90         db  0xd8 ; '.'
000000000000de91         db  0x84 ; '.'
000000000000de92         db  0xff ; '.'
000000000000de93         db  0xff ; '.'
000000000000de94         db  0x08 ; '.'
000000000000de95         db  0x85 ; '.'
000000000000de96         db  0xff ; '.'
000000000000de97         db  0xff ; '.'
000000000000de98         db  0x08 ; '.'
000000000000de99         db  0x85 ; '.'
000000000000de9a         db  0xff ; '.'
000000000000de9b         db  0xff ; '.'
000000000000de9c         db  0x08 ; '.'
000000000000de9d         db  0x85 ; '.'
000000000000de9e         db  0xff ; '.'
000000000000de9f         db  0xff ; '.'
000000000000dea0         db  0x08 ; '.'
000000000000dea1         db  0x85 ; '.'
000000000000dea2         db  0xff ; '.'
000000000000dea3         db  0xff ; '.'
000000000000dea4         db  0x18 ; '.'
000000000000dea5         db  0x81 ; '.'
000000000000dea6         db  0xff ; '.'
000000000000dea7         db  0xff ; '.'
000000000000dea8         db  0x48 ; 'H'
000000000000dea9         db  0x83 ; '.'
000000000000deaa         db  0xff ; '.'
000000000000deab         db  0xff ; '.'
000000000000deac         db  0xd8 ; '.'
000000000000dead         db  0x84 ; '.'
000000000000deae         db  0xff ; '.'
000000000000deaf         db  0xff ; '.'
000000000000deb0         db  0xd8 ; '.'
000000000000deb1         db  0x84 ; '.'
000000000000deb2         db  0xff ; '.'
000000000000deb3         db  0xff ; '.'
000000000000deb4         db  0xd8 ; '.'
000000000000deb5         db  0x84 ; '.'
000000000000deb6         db  0xff ; '.'
000000000000deb7         db  0xff ; '.'
000000000000deb8         db  0xd8 ; '.'
000000000000deb9         db  0x84 ; '.'
000000000000deba         db  0xff ; '.'
000000000000debb         db  0xff ; '.'
000000000000debc         db  0xd8 ; '.'
000000000000debd         db  0x84 ; '.'
000000000000debe         db  0xff ; '.'
000000000000debf         db  0xff ; '.'
000000000000dec0         db  0xd8 ; '.'
000000000000dec1         db  0x84 ; '.'
000000000000dec2         db  0xff ; '.'
000000000000dec3         db  0xff ; '.'
000000000000dec4         db  0xd8 ; '.'
000000000000dec5         db  0x84 ; '.'
000000000000dec6         db  0xff ; '.'
000000000000dec7         db  0xff ; '.'
000000000000dec8         db  0xd8 ; '.'
000000000000dec9         db  0x84 ; '.'
000000000000deca         db  0xff ; '.'
000000000000decb         db  0xff ; '.'
000000000000decc         db  0xd8 ; '.'
000000000000decd         db  0x84 ; '.'
000000000000dece         db  0xff ; '.'
000000000000decf         db  0xff ; '.'
000000000000ded0         db  0xd8 ; '.'
000000000000ded1         db  0x84 ; '.'
000000000000ded2         db  0xff ; '.'
000000000000ded3         db  0xff ; '.'
000000000000ded4         db  0xd8 ; '.'
000000000000ded5         db  0x84 ; '.'
000000000000ded6         db  0xff ; '.'
000000000000ded7         db  0xff ; '.'
000000000000ded8         db  0xd8 ; '.'
000000000000ded9         db  0x84 ; '.'
000000000000deda         db  0xff ; '.'
000000000000dedb         db  0xff ; '.'
000000000000dedc         db  0xd8 ; '.'
000000000000dedd         db  0x84 ; '.'
000000000000dede         db  0xff ; '.'
000000000000dedf         db  0xff ; '.'
000000000000dee0         db  0xd8 ; '.'
000000000000dee1         db  0x84 ; '.'
000000000000dee2         db  0xff ; '.'
000000000000dee3         db  0xff ; '.'
000000000000dee4         db  0xd8 ; '.'
000000000000dee5         db  0x84 ; '.'
000000000000dee6         db  0xff ; '.'
000000000000dee7         db  0xff ; '.'
000000000000dee8         db  0xd8 ; '.'
000000000000dee9         db  0x84 ; '.'
000000000000deea         db  0xff ; '.'
000000000000deeb         db  0xff ; '.'
000000000000deec         db  0xd8 ; '.'
000000000000deed         db  0x84 ; '.'
000000000000deee         db  0xff ; '.'
000000000000deef         db  0xff ; '.'
000000000000def0         db  0xd8 ; '.'
000000000000def1         db  0x84 ; '.'
000000000000def2         db  0xff ; '.'
000000000000def3         db  0xff ; '.'
000000000000def4         db  0xd8 ; '.'
000000000000def5         db  0x84 ; '.'
000000000000def6         db  0xff ; '.'
000000000000def7         db  0xff ; '.'
000000000000def8         db  0xd8 ; '.'
000000000000def9         db  0x84 ; '.'
000000000000defa         db  0xff ; '.'
000000000000defb         db  0xff ; '.'
000000000000defc         db  0xd8 ; '.'
000000000000defd         db  0x84 ; '.'
000000000000defe         db  0xff ; '.'
000000000000deff         db  0xff ; '.'
000000000000df00         db  0xd8 ; '.'
000000000000df01         db  0x84 ; '.'
000000000000df02         db  0xff ; '.'
000000000000df03         db  0xff ; '.'
000000000000df04         db  0xd8 ; '.'
000000000000df05         db  0x84 ; '.'
000000000000df06         db  0xff ; '.'
000000000000df07         db  0xff ; '.'
000000000000df08         db  0xd8 ; '.'
000000000000df09         db  0x84 ; '.'
000000000000df0a         db  0xff ; '.'
000000000000df0b         db  0xff ; '.'
000000000000df0c         db  0xd8 ; '.'
000000000000df0d         db  0x84 ; '.'
000000000000df0e         db  0xff ; '.'
000000000000df0f         db  0xff ; '.'
000000000000df10         db  0xd8 ; '.'
000000000000df11         db  0x84 ; '.'
000000000000df12         db  0xff ; '.'
000000000000df13         db  0xff ; '.'
000000000000df14         db  0x08 ; '.'
000000000000df15         db  0x85 ; '.'
000000000000df16         db  0xff ; '.'
000000000000df17         db  0xff ; '.'
000000000000df18         db  0xd8 ; '.'
000000000000df19         db  0x83 ; '.'
000000000000df1a         db  0xff ; '.'
000000000000df1b         db  0xff ; '.'
000000000000df1c         db  0xd8 ; '.'
000000000000df1d         db  0x84 ; '.'
000000000000df1e         db  0xff ; '.'
000000000000df1f         db  0xff ; '.'
000000000000df20         db  0x08 ; '.'
000000000000df21         db  0x85 ; '.'
000000000000df22         db  0xff ; '.'
000000000000df23         db  0xff ; '.'
000000000000df24         db  0xd8 ; '.'
000000000000df25         db  0x84 ; '.'
000000000000df26         db  0xff ; '.'
000000000000df27         db  0xff ; '.'
000000000000df28         db  0x08 ; '.'
000000000000df29         db  0x85 ; '.'
000000000000df2a         db  0xff ; '.'
000000000000df2b         db  0xff ; '.'
000000000000df2c         db  0xd8 ; '.'
000000000000df2d         db  0x84 ; '.'
000000000000df2e         db  0xff ; '.'
000000000000df2f         db  0xff ; '.'
000000000000df30         db  0xd8 ; '.'
000000000000df31         db  0x84 ; '.'
000000000000df32         db  0xff ; '.'
000000000000df33         db  0xff ; '.'
000000000000df34         db  0xd8 ; '.'
000000000000df35         db  0x84 ; '.'
000000000000df36         db  0xff ; '.'
000000000000df37         db  0xff ; '.'
000000000000df38         db  0xd8 ; '.'
000000000000df39         db  0x84 ; '.'
000000000000df3a         db  0xff ; '.'
000000000000df3b         db  0xff ; '.'
000000000000df3c         db  0xd8 ; '.'
000000000000df3d         db  0x84 ; '.'
000000000000df3e         db  0xff ; '.'
000000000000df3f         db  0xff ; '.'
000000000000df40         db  0xd8 ; '.'
000000000000df41         db  0x84 ; '.'
000000000000df42         db  0xff ; '.'
000000000000df43         db  0xff ; '.'
000000000000df44         db  0xd8 ; '.'
000000000000df45         db  0x84 ; '.'
000000000000df46         db  0xff ; '.'
000000000000df47         db  0xff ; '.'
000000000000df48         db  0xd8 ; '.'
000000000000df49         db  0x84 ; '.'
000000000000df4a         db  0xff ; '.'
000000000000df4b         db  0xff ; '.'
000000000000df4c         db  0xd8 ; '.'
000000000000df4d         db  0x84 ; '.'
000000000000df4e         db  0xff ; '.'
000000000000df4f         db  0xff ; '.'
000000000000df50         db  0xd8 ; '.'
000000000000df51         db  0x84 ; '.'
000000000000df52         db  0xff ; '.'
000000000000df53         db  0xff ; '.'
000000000000df54         db  0xd8 ; '.'
000000000000df55         db  0x84 ; '.'
000000000000df56         db  0xff ; '.'
000000000000df57         db  0xff ; '.'
000000000000df58         db  0xd8 ; '.'
000000000000df59         db  0x84 ; '.'
000000000000df5a         db  0xff ; '.'
000000000000df5b         db  0xff ; '.'
000000000000df5c         db  0xd8 ; '.'
000000000000df5d         db  0x84 ; '.'
000000000000df5e         db  0xff ; '.'
000000000000df5f         db  0xff ; '.'
000000000000df60         db  0xd8 ; '.'
000000000000df61         db  0x84 ; '.'
000000000000df62         db  0xff ; '.'
000000000000df63         db  0xff ; '.'
000000000000df64         db  0xd8 ; '.'
000000000000df65         db  0x84 ; '.'
000000000000df66         db  0xff ; '.'
000000000000df67         db  0xff ; '.'
000000000000df68         db  0xd8 ; '.'
000000000000df69         db  0x84 ; '.'
000000000000df6a         db  0xff ; '.'
000000000000df6b         db  0xff ; '.'
000000000000df6c         db  0xd8 ; '.'
000000000000df6d         db  0x84 ; '.'
000000000000df6e         db  0xff ; '.'
000000000000df6f         db  0xff ; '.'
000000000000df70         db  0xd8 ; '.'
000000000000df71         db  0x84 ; '.'
000000000000df72         db  0xff ; '.'
000000000000df73         db  0xff ; '.'
000000000000df74         db  0xd8 ; '.'
000000000000df75         db  0x84 ; '.'
000000000000df76         db  0xff ; '.'
000000000000df77         db  0xff ; '.'
000000000000df78         db  0xd8 ; '.'
000000000000df79         db  0x84 ; '.'
000000000000df7a         db  0xff ; '.'
000000000000df7b         db  0xff ; '.'
000000000000df7c         db  0xd8 ; '.'
000000000000df7d         db  0x84 ; '.'
000000000000df7e         db  0xff ; '.'
000000000000df7f         db  0xff ; '.'
000000000000df80         db  0xd8 ; '.'
000000000000df81         db  0x84 ; '.'
000000000000df82         db  0xff ; '.'
000000000000df83         db  0xff ; '.'
000000000000df84         db  0xd8 ; '.'
000000000000df85         db  0x84 ; '.'
000000000000df86         db  0xff ; '.'
000000000000df87         db  0xff ; '.'
000000000000df88         db  0xd8 ; '.'
000000000000df89         db  0x84 ; '.'
000000000000df8a         db  0xff ; '.'
000000000000df8b         db  0xff ; '.'
000000000000df8c         db  0xd8 ; '.'
000000000000df8d         db  0x84 ; '.'
000000000000df8e         db  0xff ; '.'
000000000000df8f         db  0xff ; '.'
000000000000df90         db  0xd8 ; '.'
000000000000df91         db  0x84 ; '.'
000000000000df92         db  0xff ; '.'
000000000000df93         db  0xff ; '.'
000000000000df94         db  0x48 ; 'H'
000000000000df95         db  0x80 ; '.'
000000000000df96         db  0xff ; '.'
000000000000df97         db  0xff ; '.'
000000000000df98         db  0x08 ; '.'
000000000000df99         db  0x85 ; '.'
000000000000df9a         db  0xff ; '.'
000000000000df9b         db  0xff ; '.'
000000000000df9c         db  0x48 ; 'H'
000000000000df9d         db  0x80 ; '.'
000000000000df9e         db  0xff ; '.'
000000000000df9f         db  0xff ; '.'
000000000000dfa0         db  0xf0 ; '.'
000000000000dfa1         db  0x84 ; '.'
000000000000dfa2         db  0xff ; '.'
000000000000dfa3         db  0xff ; '.'
000000000000dfa4         db  0x00 ; '.'
000000000000dfa5         db  0x00 ; '.'
000000000000dfa6         db  0x00 ; '.'
000000000000dfa7         db  0x00 ; '.'
000000000000dfa8         db  0x00 ; '.'
000000000000dfa9         db  0x00 ; '.'
000000000000dfaa         db  0x00 ; '.'
000000000000dfab         db  0x00 ; '.'
000000000000dfac         db  0x00 ; '.'
000000000000dfad         db  0x00 ; '.'
000000000000dfae         db  0x00 ; '.'
000000000000dfaf         db  0x00 ; '.'
000000000000dfb0         db  0x00 ; '.'
000000000000dfb1         db  0x00 ; '.'
000000000000dfb2         db  0x00 ; '.'
000000000000dfb3         db  0x00 ; '.'
000000000000dfb4         db  0x00 ; '.'
000000000000dfb5         db  0x00 ; '.'
000000000000dfb6         db  0x00 ; '.'
000000000000dfb7         db  0x00 ; '.'
000000000000dfb8         db  0x00 ; '.'
000000000000dfb9         db  0x00 ; '.'
000000000000dfba         db  0x00 ; '.'
000000000000dfbb         db  0x00 ; '.'
000000000000dfbc         db  0x00 ; '.'
000000000000dfbd         db  0x00 ; '.'
000000000000dfbe         db  0x00 ; '.'
000000000000dfbf         db  0x00 ; '.'
                     quoting_style_vals:
000000000000dfc0         db  0x00 ; '.'
000000000000dfc1         db  0x00 ; '.'
000000000000dfc2         db  0x00 ; '.'
000000000000dfc3         db  0x00 ; '.'
000000000000dfc4         db  0x01 ; '.'
000000000000dfc5         db  0x00 ; '.'
000000000000dfc6         db  0x00 ; '.'
000000000000dfc7         db  0x00 ; '.'
000000000000dfc8         db  0x02 ; '.'
000000000000dfc9         db  0x00 ; '.'
000000000000dfca         db  0x00 ; '.'
000000000000dfcb         db  0x00 ; '.'
000000000000dfcc         db  0x03 ; '.'
000000000000dfcd         db  0x00 ; '.'
000000000000dfce         db  0x00 ; '.'
000000000000dfcf         db  0x00 ; '.'
000000000000dfd0         db  0x04 ; '.'
000000000000dfd1         db  0x00 ; '.'
000000000000dfd2         db  0x00 ; '.'
000000000000dfd3         db  0x00 ; '.'
000000000000dfd4         db  0x05 ; '.'
000000000000dfd5         db  0x00 ; '.'
000000000000dfd6         db  0x00 ; '.'
000000000000dfd7         db  0x00 ; '.'
000000000000dfd8         db  0x06 ; '.'
000000000000dfd9         db  0x00 ; '.'
000000000000dfda         db  0x00 ; '.'
000000000000dfdb         db  0x00 ; '.'
000000000000dfdc         db  0x07 ; '.'
000000000000dfdd         db  0x00 ; '.'
000000000000dfde         db  0x00 ; '.'
000000000000dfdf         db  0x00 ; '.'
000000000000dfe0         db  0x08 ; '.'
000000000000dfe1         db  0x00 ; '.'
000000000000dfe2         db  0x00 ; '.'
000000000000dfe3         db  0x00 ; '.'
000000000000dfe4         db  0x09 ; '.'
000000000000dfe5         db  0x00 ; '.'
000000000000dfe6         db  0x00 ; '.'
000000000000dfe7         db  0x00 ; '.'
                     aSSSn:
000000000000dfe8         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
000000000000dff4         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
000000000000dffb         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
000000000000dffc         db  0x43 ; 'C'
000000000000dffd         db  0x29 ; ')'
000000000000dffe         db  0x00 ; '.'
                     aWrittenBySn:
000000000000dfff         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
000000000000e00f         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
000000000000e026         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
000000000000e042         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
000000000000e057         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
000000000000e06d         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
000000000000e081         align      8
                     aNlicenseGplv3G:
000000000000e088         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
000000000000e154         align      8
                     aWrittenBySSSna:
000000000000e158         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_e178:        // aWrittenBySSSns
000000000000e178         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
000000000000e19c         align      32
                     aWrittenBySSSns_e1a0:        // aWrittenBySSSns
000000000000e1a0         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_e1c8:        // aWrittenBySSSns
000000000000e1c8         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
000000000000e1f4         align      8
                     aWrittenBySSSns_e1f8:        // aWrittenBySSSns
000000000000e1f8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
000000000000e228         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
000000000000e25c         align      32
                     aWrittenBySSSns_e260:        // aWrittenBySSSns
000000000000e260         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
000000000000e29c         align      32
                     aGeneralHelpUsi:
000000000000e2a0         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
000000000000e2e1         align      4
                     switch_table_e2e4:        // switch_table
000000000000e2e4         dd         version_etc_arn.loc_78c6-switch_table_e2e4, version_etc_arn.loc_7958-switch_table_e2e4, version_etc_arn.loc_7998-switch_table_e2e4, version_etc_arn.loc_79e0-switch_table_e2e4 ; switch table used at 0x7844 containing 10 entries, DATA XREF=version_etc_arn+150
000000000000e2f4         dd         version_etc_arn.loc_7a30-switch_table_e2e4, version_etc_arn.loc_7a88-switch_table_e2e4, version_etc_arn.loc_7ab8-switch_table_e2e4, version_etc_arn.loc_7b20-switch_table_e2e4
000000000000e304         dd         version_etc_arn.loc_7850-switch_table_e2e4, version_etc_arn.loc_7900-switch_table_e2e4
000000000000e30c         align      32
                     version_etc_copyright:
000000000000e320         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
000000000000e34f         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
                     aCoreutils831li:
000000000000e360         db         "../coreutils-8.31/lib/xstrtol.c", 0        ; DATA XREF=xstrtol+1686, xstrtoumax+908
                     a0StrtolbaseStr:
000000000000e380         db         "0 <= strtol_base && strtol_base <= 36", 0  ; DATA XREF=xstrtol+1693, xstrtoumax+915
000000000000e3a6         align      8
                     switch_table_e3a8:        // switch_table
000000000000e3a8         dd         xstrtol.loc_8660-switch_table_e3a8, 2 dup (xstrtol.loc_82f8-switch_table_e3a8), xstrtol.loc_8590-switch_table_e3a8, xstrtol.loc_82f8-switch_table_e3a8 ; switch table used at 0x832e containing 54 entries, DATA XREF=xstrtol+412
000000000000e3bc         dd         xstrtol.loc_8530-switch_table_e3a8, 3 dup (xstrtol.loc_82f8-switch_table_e3a8), xstrtol.loc_84f0-switch_table_e3a8, xstrtol.loc_82f8-switch_table_e3a8
000000000000e3d4         dd         xstrtol.loc_8330-switch_table_e3a8, 2 dup (xstrtol.loc_82f8-switch_table_e3a8), xstrtol.loc_85f8-switch_table_e3a8, 3 dup (xstrtol.loc_82f8-switch_table_e3a8)
000000000000e3f0         dd         xstrtol.loc_8690-switch_table_e3a8, 4 dup (xstrtol.loc_82f8-switch_table_e3a8), xstrtol.loc_8480-switch_table_e3a8, xstrtol.loc_8410-switch_table_e3a8
000000000000e40c         dd         7 dup (xstrtol.loc_82f8-switch_table_e3a8), xstrtol.loc_83e0-switch_table_e3a8, xstrtol.loc_8390-switch_table_e3a8, 3 dup (xstrtol.loc_82f8-switch_table_e3a8)
000000000000e43c         dd         xstrtol.loc_8530-switch_table_e3a8, 3 dup (xstrtol.loc_82f8-switch_table_e3a8), xstrtol.loc_84f0-switch_table_e3a8, xstrtol.loc_82f8-switch_table_e3a8
000000000000e454         dd         xstrtol.loc_8330-switch_table_e3a8, 6 dup (xstrtol.loc_82f8-switch_table_e3a8), xstrtol.loc_8690-switch_table_e3a8, 2 dup (xstrtol.loc_82f8-switch_table_e3a8)
000000000000e47c         dd         xstrtol.loc_83b0-switch_table_e3a8
                     __PRETTY_FUNCTION__.4162:
000000000000e480         db         "xstrtol", 0                                ; DATA XREF=xstrtol+1679
                     switch_table_e488:        // switch_table
000000000000e488         dd         xstrtoumax.loc_8b66-switch_table_e488, 2 dup (xstrtoumax.loc_8a5c-switch_table_e488), xstrtoumax.loc_8b43-switch_table_e488, xstrtoumax.loc_8a5c-switch_table_e488 ; switch table used at 0x8a16 containing 54 entries, DATA XREF=xstrtoumax+452
000000000000e49c         dd         xstrtoumax.loc_8b7c-switch_table_e488, 3 dup (xstrtoumax.loc_8a5c-switch_table_e488), xstrtoumax.loc_8aff-switch_table_e488, xstrtoumax.loc_8a5c-switch_table_e488
000000000000e4b4         dd         xstrtoumax.loc_8a18-switch_table_e488, 2 dup (xstrtoumax.loc_8a5c-switch_table_e488), xstrtoumax.loc_8b20-switch_table_e488, 3 dup (xstrtoumax.loc_8a5c-switch_table_e488)
000000000000e4d0         dd         xstrtoumax.loc_8adf-switch_table_e488, 4 dup (xstrtoumax.loc_8a5c-switch_table_e488), xstrtoumax.loc_8aba-switch_table_e488, xstrtoumax.loc_8a94-switch_table_e488
000000000000e4ec         dd         7 dup (xstrtoumax.loc_8a5c-switch_table_e488), xstrtoumax.loc_8a7d-switch_table_e488, xstrtoumax.loc_8a40-switch_table_e488, 3 dup (xstrtoumax.loc_8a5c-switch_table_e488)
000000000000e51c         dd         xstrtoumax.loc_8b7c-switch_table_e488, 3 dup (xstrtoumax.loc_8a5c-switch_table_e488), xstrtoumax.loc_8aff-switch_table_e488, xstrtoumax.loc_8a5c-switch_table_e488
000000000000e534         dd         xstrtoumax.loc_8a18-switch_table_e488, 6 dup (xstrtoumax.loc_8a5c-switch_table_e488), xstrtoumax.loc_8adf-switch_table_e488, 2 dup (xstrtoumax.loc_8a5c-switch_table_e488)
000000000000e55c         dd         xstrtoumax.loc_8a67-switch_table_e488
                     __PRETTY_FUNCTION__.4162_e560:        // __PRETTY_FUNCTION__.4162
000000000000e560         db         "xstrtoumax", 0                             ; DATA XREF=xstrtoumax+901
000000000000e56b         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
000000000000e56c         db  0x00 ; '.'
                     aPosix:
000000000000e56d         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aAscii:
000000000000e573         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
000000000000e579         align      4
                     switch_table_e57c:        // switch_table
000000000000e57c         dd         vasnprintf.loc_a156-switch_table_e57c, vasnprintf.loc_9bf0-switch_table_e57c, vasnprintf.loc_9bc0-switch_table_e57c, vasnprintf.loc_9b38-switch_table_e57c ; switch table used at 0x978b containing 18 entries, DATA XREF=vasnprintf+1357
000000000000e58c         dd         vasnprintf.loc_9af8-switch_table_e57c, 2 dup (vasnprintf.loc_98c8-switch_table_e57c), 4 dup (vasnprintf.loc_9790-switch_table_e57c), vasnprintf.loc_9a78-switch_table_e57c
000000000000e5ac         dd         vasnprintf.loc_99f0-switch_table_e57c, 2 dup (vasnprintf.loc_98c8-switch_table_e57c), 3 dup (vasnprintf.loc_9790-switch_table_e57c)
                     switch_table_e5c4:        // switch_table
000000000000e5c4         dd         vasnprintf.loc_9fa0-switch_table_e5c4, vasnprintf.loc_9fc0-switch_table_e5c4, vasnprintf.loc_9fb0-switch_table_e5c4, 2 dup (vasnprintf.loc_9e70-switch_table_e5c4) ; switch table used at 0x9d30 containing 5 entries, DATA XREF=vasnprintf+2798
                     aNull:
000000000000e5d8         db         "(NULL)", 0                                 ; DATA XREF=printf_fetchargs+24
000000000000e5df         db  0x00 ; '.'
000000000000e5e0         db  0xe0 ; '.'                                         ; DATA XREF=printf_fetchargs+10
000000000000e5e1         db  0xbd ; '.'
000000000000e5e2         db  0xff ; '.'
000000000000e5e3         db  0xff ; '.'
000000000000e5e4         db  0x2c ; ','
000000000000e5e5         db  0xbe ; '.'
000000000000e5e6         db  0xff ; '.'
000000000000e5e7         db  0xff ; '.'
000000000000e5e8         db  0x2c ; ','
000000000000e5e9         db  0xbe ; '.'
000000000000e5ea         db  0xff ; '.'
000000000000e5eb         db  0xff ; '.'
000000000000e5ec         db  0x4e ; 'N'
000000000000e5ed         db  0xbe ; '.'
000000000000e5ee         db  0xff ; '.'
000000000000e5ef         db  0xff ; '.'
000000000000e5f0         db  0x4e ; 'N'
000000000000e5f1         db  0xbe ; '.'
000000000000e5f2         db  0xff ; '.'
000000000000e5f3         db  0xff ; '.'
000000000000e5f4         db  0x0a ; '.'
000000000000e5f5         db  0xbe ; '.'
000000000000e5f6         db  0xff ; '.'
000000000000e5f7         db  0xff ; '.'
000000000000e5f8         db  0x0a ; '.'
000000000000e5f9         db  0xbe ; '.'
000000000000e5fa         db  0xff ; '.'
000000000000e5fb         db  0xff ; '.'
000000000000e5fc         db  0xe6 ; '.'
000000000000e5fd         db  0xbd ; '.'
000000000000e5fe         db  0xff ; '.'
000000000000e5ff         db  0xff ; '.'
000000000000e600         db  0xe6 ; '.'
000000000000e601         db  0xbd ; '.'
000000000000e602         db  0xff ; '.'
000000000000e603         db  0xff ; '.'
000000000000e604         db  0xe6 ; '.'
000000000000e605         db  0xbd ; '.'
000000000000e606         db  0xff ; '.'
000000000000e607         db  0xff ; '.'
000000000000e608         db  0xe6 ; '.'
000000000000e609         db  0xbd ; '.'
000000000000e60a         db  0xff ; '.'
000000000000e60b         db  0xff ; '.'
000000000000e60c         db  0xa2 ; '.'
000000000000e60d         db  0xbe ; '.'
000000000000e60e         db  0xff ; '.'
000000000000e60f         db  0xff ; '.'
000000000000e610         db  0xb0 ; '.'
000000000000e611         db  0xbd ; '.'
000000000000e612         db  0xff ; '.'
000000000000e613         db  0xff ; '.'
000000000000e614         db  0x0a ; '.'
000000000000e615         db  0xbe ; '.'
000000000000e616         db  0xff ; '.'
000000000000e617         db  0xff ; '.'
000000000000e618         db  0x0a ; '.'
000000000000e619         db  0xbe ; '.'
000000000000e61a         db  0xff ; '.'
000000000000e61b         db  0xff ; '.'
000000000000e61c         db  0x74 ; 't'
000000000000e61d         db  0xbe ; '.'
000000000000e61e         db  0xff ; '.'
000000000000e61f         db  0xff ; '.'
000000000000e620         db  0xd0 ; '.'
000000000000e621         db  0xbe ; '.'
000000000000e622         db  0xff ; '.'
000000000000e623         db  0xff ; '.'
000000000000e624         db  0xe6 ; '.'
000000000000e625         db  0xbd ; '.'
000000000000e626         db  0xff ; '.'
000000000000e627         db  0xff ; '.'
000000000000e628         db  0xe6 ; '.'
000000000000e629         db  0xbd ; '.'
000000000000e62a         db  0xff ; '.'
000000000000e62b         db  0xff ; '.'
000000000000e62c         db  0xe6 ; '.'
000000000000e62d         db  0xbd ; '.'
000000000000e62e         db  0xff ; '.'
000000000000e62f         db  0xff ; '.'
000000000000e630         db  0xe6 ; '.'
000000000000e631         db  0xbd ; '.'
000000000000e632         db  0xff ; '.'
000000000000e633         db  0xff ; '.'
000000000000e634         db  0xe6 ; '.'
000000000000e635         db  0xbd ; '.'
000000000000e636         db  0xff ; '.'
000000000000e637         db  0xff ; '.'
000000000000e638         db  0xe6 ; '.'
000000000000e639         db  0xbd ; '.'
000000000000e63a         db  0xff ; '.'
000000000000e63b         db  0xff ; '.'
000000000000e63c         db  0x00 ; '.'
000000000000e63d         db  0x00 ; '.'
000000000000e63e         db  0x00 ; '.'
000000000000e63f         db  0x00 ; '.'
                     wide_null_string.2696:
000000000000e640         db  0x28 ; '('                                         ; DATA XREF=printf_fetchargs+17
000000000000e641         db  0x00 ; '.'
000000000000e642         db  0x00 ; '.'
000000000000e643         db  0x00 ; '.'
000000000000e644         db  0x4e ; 'N'
000000000000e645         db  0x00 ; '.'
000000000000e646         db  0x00 ; '.'
000000000000e647         db  0x00 ; '.'
000000000000e648         db  0x55 ; 'U'
000000000000e649         db  0x00 ; '.'
000000000000e64a         db  0x00 ; '.'
000000000000e64b         db  0x00 ; '.'
000000000000e64c         db  0x4c ; 'L'
000000000000e64d         db  0x00 ; '.'
000000000000e64e         db  0x00 ; '.'
000000000000e64f         db  0x00 ; '.'
000000000000e650         db  0x4c ; 'L'
000000000000e651         db  0x00 ; '.'
000000000000e652         db  0x00 ; '.'
000000000000e653         db  0x00 ; '.'
000000000000e654         db  0x29 ; ')'
000000000000e655         db  0x00 ; '.'
000000000000e656         db  0x00 ; '.'
000000000000e657         db  0x00 ; '.'
000000000000e658         db  0x00 ; '.'
000000000000e659         db  0x00 ; '.'
000000000000e65a         db  0x00 ; '.'
000000000000e65b         db  0x00 ; '.'
                     switch_table_e65c:        // switch_table
000000000000e65c         dd         printf_parse.loc_a80b-switch_table_e65c, 27 dup (printf_parse.loc_ad9b-switch_table_e65c), printf_parse.loc_ad0b-switch_table_e65c, printf_parse.loc_ad9b-switch_table_e65c ; switch table used at 0xa795 containing 84 entries, DATA XREF=printf_parse+564
000000000000e6d4         dd         printf_parse.loc_ad2c-switch_table_e65c, printf_parse.loc_ad9b-switch_table_e65c, 3 dup (printf_parse.loc_ad0b-switch_table_e65c), 11 dup (printf_parse.loc_ad9b-switch_table_e65c)
000000000000e714         dd         printf_parse.loc_a797-switch_table_e65c, 4 dup (printf_parse.loc_ad9b-switch_table_e65c), printf_parse.loc_ad3c-switch_table_e65c, 8 dup (printf_parse.loc_ad9b-switch_table_e65c)
000000000000e74c         dd         printf_parse.loc_ad0b-switch_table_e65c, printf_parse.loc_ad9b-switch_table_e65c, printf_parse.loc_ac98-switch_table_e65c, printf_parse.loc_acab-switch_table_e65c
000000000000e75c         dd         3 dup (printf_parse.loc_ad0b-switch_table_e65c), printf_parse.loc_ad9b-switch_table_e65c, printf_parse.loc_acab-switch_table_e65c, 4 dup (printf_parse.loc_ad9b-switch_table_e65c)
000000000000e780         dd         printf_parse.loc_ac4c-switch_table_e65c, printf_parse.loc_ad3c-switch_table_e65c, printf_parse.loc_ad90-switch_table_e65c, 2 dup (printf_parse.loc_ad9b-switch_table_e65c)
000000000000e794         dd         printf_parse.loc_acf8-switch_table_e65c, printf_parse.loc_ad9b-switch_table_e65c, printf_parse.loc_ad3c-switch_table_e65c, 2 dup (printf_parse.loc_ad9b-switch_table_e65c)
000000000000e7a8         dd         printf_parse.loc_ad3c-switch_table_e65c


        ; Section .eh_frame_hdr
        ; Range: [0xe7ac; 0xea88[ (732 bytes)
        ; File offset : [59308; 60040[ (732 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

000000000000e7ac         db  0x01 ; '.'
000000000000e7ad         db  0x1b ; '.'
000000000000e7ae         db  0x03 ; '.'
000000000000e7af         db  0x3b ; ';'
000000000000e7b0         db  0xd8 ; '.'
000000000000e7b1         db  0x02 ; '.'
000000000000e7b2         db  0x00 ; '.'
000000000000e7b3         db  0x00 ; '.'
000000000000e7b4         db  0x5a ; 'Z'
000000000000e7b5         db  0x00 ; '.'
000000000000e7b6         db  0x00 ; '.'
000000000000e7b7         db  0x00 ; '.'
000000000000e7b8         db  0x54 ; 'T'
000000000000e7b9         db  0x3c ; '<'
000000000000e7ba         db  0xff ; '.'
000000000000e7bb         db  0xff ; '.'
000000000000e7bc         db  0x24 ; '$'
000000000000e7bd         db  0x03 ; '.'
000000000000e7be         db  0x00 ; '.'
000000000000e7bf         db  0x00 ; '.'
000000000000e7c0         db  0x14 ; '.'
000000000000e7c1         db  0x40 ; '@'
000000000000e7c2         db  0xff ; '.'
000000000000e7c3         db  0xff ; '.'
000000000000e7c4         db  0x4c ; 'L'
000000000000e7c5         db  0x03 ; '.'
000000000000e7c6         db  0x00 ; '.'
000000000000e7c7         db  0x00 ; '.'
000000000000e7c8         db  0x24 ; '$'
000000000000e7c9         db  0x40 ; '@'
000000000000e7ca         db  0xff ; '.'
000000000000e7cb         db  0xff ; '.'
000000000000e7cc         db  0x60 ; '`'
000000000000e7cd         db  0x05 ; '.'
000000000000e7ce         db  0x00 ; '.'
000000000000e7cf         db  0x00 ; '.'
000000000000e7d0         db  0xa4 ; '.'
000000000000e7d1         db  0x4b ; 'K'
000000000000e7d2         db  0xff ; '.'
000000000000e7d3         db  0xff ; '.'
000000000000e7d4         db  0xf4 ; '.'
000000000000e7d5         db  0x02 ; '.'
000000000000e7d6         db  0x00 ; '.'
000000000000e7d7         db  0x00 ; '.'
000000000000e7d8         db  0xb4 ; '.'
000000000000e7d9         db  0x4c ; 'L'
000000000000e7da         db  0xff ; '.'
000000000000e7db         db  0xff ; '.'
000000000000e7dc         db  0x64 ; 'd'
000000000000e7dd         db  0x03 ; '.'
000000000000e7de         db  0x00 ; '.'
000000000000e7df         db  0x00 ; '.'
000000000000e7e0         db  0x24 ; '$'
000000000000e7e1         db  0x4d ; 'M'
000000000000e7e2         db  0xff ; '.'
000000000000e7e3         db  0xff ; '.'
000000000000e7e4         db  0x9c ; '.'
000000000000e7e5         db  0x03 ; '.'
000000000000e7e6         db  0x00 ; '.'
000000000000e7e7         db  0x00 ; '.'
000000000000e7e8         db  0x74 ; 't'
000000000000e7e9         db  0x4d ; 'M'
000000000000e7ea         db  0xff ; '.'
000000000000e7eb         db  0xff ; '.'
000000000000e7ec         db  0xb4 ; '.'
000000000000e7ed         db  0x03 ; '.'
000000000000e7ee         db  0x00 ; '.'
000000000000e7ef         db  0x00 ; '.'
000000000000e7f0         db  0x14 ; '.'
000000000000e7f1         db  0x4f ; 'O'
000000000000e7f2         db  0xff ; '.'
000000000000e7f3         db  0xff ; '.'
000000000000e7f4         db  0xdc ; '.'
000000000000e7f5         db  0x03 ; '.'
000000000000e7f6         db  0x00 ; '.'
000000000000e7f7         db  0x00 ; '.'
000000000000e7f8         db  0xb4 ; '.'
000000000000e7f9         db  0x50 ; 'P'
000000000000e7fa         db  0xff ; '.'
000000000000e7fb         db  0xff ; '.'
000000000000e7fc         db  0x0c ; '.'
000000000000e7fd         db  0x04 ; '.'
000000000000e7fe         db  0x00 ; '.'
000000000000e7ff         db  0x00 ; '.'
000000000000e800         db  0x04 ; '.'
000000000000e801         db  0x51 ; 'Q'
000000000000e802         db  0xff ; '.'
000000000000e803         db  0xff ; '.'
000000000000e804         db  0x3c ; '<'
000000000000e805         db  0x04 ; '.'
000000000000e806         db  0x00 ; '.'
000000000000e807         db  0x00 ; '.'
000000000000e808         db  0xe4 ; '.'
000000000000e809         db  0x51 ; 'Q'
000000000000e80a         db  0xff ; '.'
000000000000e80b         db  0xff ; '.'
000000000000e80c         db  0x50 ; 'P'
000000000000e80d         db  0x04 ; '.'
000000000000e80e         db  0x00 ; '.'
000000000000e80f         db  0x00 ; '.'
000000000000e810         db  0x84 ; '.'
000000000000e811         db  0x52 ; 'R'
000000000000e812         db  0xff ; '.'
000000000000e813         db  0xff ; '.'
000000000000e814         db  0x6c ; 'l'
000000000000e815         db  0x04 ; '.'
000000000000e816         db  0x00 ; '.'
000000000000e817         db  0x00 ; '.'
000000000000e818         db  0x74 ; 't'
000000000000e819         db  0x53 ; 'S'
000000000000e81a         db  0xff ; '.'
000000000000e81b         db  0xff ; '.'
000000000000e81c         db  0xb0 ; '.'
000000000000e81d         db  0x04 ; '.'
000000000000e81e         db  0x00 ; '.'
000000000000e81f         db  0x00 ; '.'
000000000000e820         db  0x84 ; '.'
000000000000e821         db  0x54 ; 'T'
000000000000e822         db  0xff ; '.'
000000000000e823         db  0xff ; '.'
000000000000e824         db  0xe4 ; '.'
000000000000e825         db  0x04 ; '.'
000000000000e826         db  0x00 ; '.'
000000000000e827         db  0x00 ; '.'
000000000000e828         db  0xc4 ; '.'
000000000000e829         db  0x63 ; 'c'
000000000000e82a         db  0xff ; '.'
000000000000e82b         db  0xff ; '.'
000000000000e82c         db  0x10 ; '.'
000000000000e82d         db  0x05 ; '.'
000000000000e82e         db  0x00 ; '.'
000000000000e82f         db  0x00 ; '.'
000000000000e830         db  0x94 ; '.'
000000000000e831         db  0x71 ; 'q'
000000000000e832         db  0xff ; '.'
000000000000e833         db  0xff ; '.'
000000000000e834         db  0xd4 ; '.'
000000000000e835         db  0x05 ; '.'
000000000000e836         db  0x00 ; '.'
000000000000e837         db  0x00 ; '.'
000000000000e838         db  0xa4 ; '.'
000000000000e839         db  0x71 ; 'q'
000000000000e83a         db  0xff ; '.'
000000000000e83b         db  0xff ; '.'
000000000000e83c         db  0xe8 ; '.'
000000000000e83d         db  0x05 ; '.'
000000000000e83e         db  0x00 ; '.'
000000000000e83f         db  0x00 ; '.'
000000000000e840         db  0xb4 ; '.'
000000000000e841         db  0x71 ; 'q'
000000000000e842         db  0xff ; '.'
000000000000e843         db  0xff ; '.'
000000000000e844         db  0xfc ; '.'
000000000000e845         db  0x05 ; '.'
000000000000e846         db  0x00 ; '.'
000000000000e847         db  0x00 ; '.'
000000000000e848         db  0x64 ; 'd'
000000000000e849         db  0x72 ; 'r'
000000000000e84a         db  0xff ; '.'
000000000000e84b         db  0xff ; '.'
000000000000e84c         db  0x2c ; ','
000000000000e84d         db  0x06 ; '.'
000000000000e84e         db  0x00 ; '.'
000000000000e84f         db  0x00 ; '.'
000000000000e850         db  0xc4 ; '.'
000000000000e851         db  0x72 ; 'r'
000000000000e852         db  0xff ; '.'
000000000000e853         db  0xff ; '.'
000000000000e854         db  0x64 ; 'd'
000000000000e855         db  0x06 ; '.'
000000000000e856         db  0x00 ; '.'
000000000000e857         db  0x00 ; '.'
000000000000e858         db  0x64 ; 'd'
000000000000e859         db  0x73 ; 's'
000000000000e85a         db  0xff ; '.'
000000000000e85b         db  0xff ; '.'
000000000000e85c         db  0x84 ; '.'
000000000000e85d         db  0x06 ; '.'
000000000000e85e         db  0x00 ; '.'
000000000000e85f         db  0x00 ; '.'
000000000000e860         db  0x54 ; 'T'
000000000000e861         db  0x74 ; 't'
000000000000e862         db  0xff ; '.'
000000000000e863         db  0xff ; '.'
000000000000e864         db  0xc8 ; '.'
000000000000e865         db  0x06 ; '.'
000000000000e866         db  0x00 ; '.'
000000000000e867         db  0x00 ; '.'
000000000000e868         db  0x94 ; '.'
000000000000e869         db  0x86 ; '.'
000000000000e86a         db  0xff ; '.'
000000000000e86b         db  0xff ; '.'
000000000000e86c         db  0x40 ; '@'
000000000000e86d         db  0x07 ; '.'
000000000000e86e         db  0x00 ; '.'
000000000000e86f         db  0x00 ; '.'
000000000000e870         db  0x44 ; 'D'
000000000000e871         db  0x88 ; '.'
000000000000e872         db  0xff ; '.'
000000000000e873         db  0xff ; '.'
000000000000e874         db  0xac ; '.'
000000000000e875         db  0x07 ; '.'
000000000000e876         db  0x00 ; '.'
000000000000e877         db  0x00 ; '.'
000000000000e878         db  0x84 ; '.'
000000000000e879         db  0x88 ; '.'
000000000000e87a         db  0xff ; '.'
000000000000e87b         db  0xff ; '.'
000000000000e87c         db  0xd8 ; '.'
000000000000e87d         db  0x07 ; '.'
000000000000e87e         db  0x00 ; '.'
000000000000e87f         db  0x00 ; '.'
000000000000e880         db  0xa4 ; '.'
000000000000e881         db  0x88 ; '.'
000000000000e882         db  0xff ; '.'
000000000000e883         db  0xff ; '.'
000000000000e884         db  0xec ; '.'
000000000000e885         db  0x07 ; '.'
000000000000e886         db  0x00 ; '.'
000000000000e887         db  0x00 ; '.'
000000000000e888         db  0xc4 ; '.'
000000000000e889         db  0x88 ; '.'
000000000000e88a         db  0xff ; '.'
000000000000e88b         db  0xff ; '.'
000000000000e88c         db  0x00 ; '.'
000000000000e88d         db  0x08 ; '.'
000000000000e88e         db  0x00 ; '.'
000000000000e88f         db  0x00 ; '.'
000000000000e890         db  0x04 ; '.'
000000000000e891         db  0x89 ; '.'
000000000000e892         db  0xff ; '.'
000000000000e893         db  0xff ; '.'
000000000000e894         db  0x14 ; '.'
000000000000e895         db  0x08 ; '.'
000000000000e896         db  0x00 ; '.'
000000000000e897         db  0x00 ; '.'
000000000000e898         db  0x24 ; '$'
000000000000e899         db  0x89 ; '.'
000000000000e89a         db  0xff ; '.'
000000000000e89b         db  0xff ; '.'
000000000000e89c         db  0x28 ; '('
000000000000e89d         db  0x08 ; '.'
000000000000e89e         db  0x00 ; '.'
000000000000e89f         db  0x00 ; '.'
000000000000e8a0         db  0x54 ; 'T'
000000000000e8a1         db  0x89 ; '.'
000000000000e8a2         db  0xff ; '.'
000000000000e8a3         db  0xff ; '.'
000000000000e8a4         db  0x3c ; '<'
000000000000e8a5         db  0x08 ; '.'
000000000000e8a6         db  0x00 ; '.'
000000000000e8a7         db  0x00 ; '.'
000000000000e8a8         db  0xd4 ; '.'
000000000000e8a9         db  0x89 ; '.'
000000000000e8aa         db  0xff ; '.'
000000000000e8ab         db  0xff ; '.'
000000000000e8ac         db  0x90 ; '.'
000000000000e8ad         db  0x08 ; '.'
000000000000e8ae         db  0x00 ; '.'
000000000000e8af         db  0x00 ; '.'
000000000000e8b0         db  0xc4 ; '.'
000000000000e8b1         db  0x8a ; '.'
000000000000e8b2         db  0xff ; '.'
000000000000e8b3         db  0xff ; '.'
000000000000e8b4         db  0xfc ; '.'
000000000000e8b5         db  0x08 ; '.'
000000000000e8b6         db  0x00 ; '.'
000000000000e8b7         db  0x00 ; '.'
000000000000e8b8         db  0xd4 ; '.'
000000000000e8b9         db  0x8a ; '.'
000000000000e8ba         db  0xff ; '.'
000000000000e8bb         db  0xff ; '.'
000000000000e8bc         db  0x10 ; '.'
000000000000e8bd         db  0x09 ; '.'
000000000000e8be         db  0x00 ; '.'
000000000000e8bf         db  0x00 ; '.'
000000000000e8c0         db  0x74 ; 't'
000000000000e8c1         db  0x8b ; '.'
000000000000e8c2         db  0xff ; '.'
000000000000e8c3         db  0xff ; '.'
000000000000e8c4         db  0x3c ; '<'
000000000000e8c5         db  0x09 ; '.'
000000000000e8c6         db  0x00 ; '.'
000000000000e8c7         db  0x00 ; '.'
000000000000e8c8         db  0x94 ; '.'
000000000000e8c9         db  0x8b ; '.'
000000000000e8ca         db  0xff ; '.'
000000000000e8cb         db  0xff ; '.'
000000000000e8cc         db  0x50 ; 'P'
000000000000e8cd         db  0x09 ; '.'
000000000000e8ce         db  0x00 ; '.'
000000000000e8cf         db  0x00 ; '.'
000000000000e8d0         db  0xa4 ; '.'
000000000000e8d1         db  0x8b ; '.'
000000000000e8d2         db  0xff ; '.'
000000000000e8d3         db  0xff ; '.'
000000000000e8d4         db  0x64 ; 'd'
000000000000e8d5         db  0x09 ; '.'
000000000000e8d6         db  0x00 ; '.'
000000000000e8d7         db  0x00 ; '.'
000000000000e8d8         db  0xc4 ; '.'
000000000000e8d9         db  0x8b ; '.'
000000000000e8da         db  0xff ; '.'
000000000000e8db         db  0xff ; '.'
000000000000e8dc         db  0x78 ; 'x'
000000000000e8dd         db  0x09 ; '.'
000000000000e8de         db  0x00 ; '.'
000000000000e8df         db  0x00 ; '.'
000000000000e8e0         db  0xe4 ; '.'
000000000000e8e1         db  0x8b ; '.'
000000000000e8e2         db  0xff ; '.'
000000000000e8e3         db  0xff ; '.'
000000000000e8e4         db  0x8c ; '.'
000000000000e8e5         db  0x09 ; '.'
000000000000e8e6         db  0x00 ; '.'
000000000000e8e7         db  0x00 ; '.'
000000000000e8e8         db  0x74 ; 't'
000000000000e8e9         db  0x8c ; '.'
000000000000e8ea         db  0xff ; '.'
000000000000e8eb         db  0xff ; '.'
000000000000e8ec         db  0xa8 ; '.'
000000000000e8ed         db  0x09 ; '.'
000000000000e8ee         db  0x00 ; '.'
000000000000e8ef         db  0x00 ; '.'
000000000000e8f0         db  0x04 ; '.'
000000000000e8f1         db  0x8d ; '.'
000000000000e8f2         db  0xff ; '.'
000000000000e8f3         db  0xff ; '.'
000000000000e8f4         db  0xc4 ; '.'
000000000000e8f5         db  0x09 ; '.'
000000000000e8f6         db  0x00 ; '.'
000000000000e8f7         db  0x00 ; '.'
000000000000e8f8         db  0x14 ; '.'
000000000000e8f9         db  0x8d ; '.'
000000000000e8fa         db  0xff ; '.'
000000000000e8fb         db  0xff ; '.'
000000000000e8fc         db  0xd8 ; '.'
000000000000e8fd         db  0x09 ; '.'
000000000000e8fe         db  0x00 ; '.'
000000000000e8ff         db  0x00 ; '.'
000000000000e900         db  0x24 ; '$'
000000000000e901         db  0x8d ; '.'
000000000000e902         db  0xff ; '.'
000000000000e903         db  0xff ; '.'
000000000000e904         db  0xec ; '.'
000000000000e905         db  0x09 ; '.'
000000000000e906         db  0x00 ; '.'
000000000000e907         db  0x00 ; '.'
000000000000e908         db  0xc4 ; '.'
000000000000e909         db  0x8d ; '.'
000000000000e90a         db  0xff ; '.'
000000000000e90b         db  0xff ; '.'
000000000000e90c         db  0x08 ; '.'
000000000000e90d         db  0x0a ; '.'
000000000000e90e         db  0x00 ; '.'
000000000000e90f         db  0x00 ; '.'
000000000000e910         db  0xd4 ; '.'
000000000000e911         db  0x8d ; '.'
000000000000e912         db  0xff ; '.'
000000000000e913         db  0xff ; '.'
000000000000e914         db  0x1c ; '.'
000000000000e915         db  0x0a ; '.'
000000000000e916         db  0x00 ; '.'
000000000000e917         db  0x00 ; '.'
000000000000e918         db  0xf4 ; '.'
000000000000e919         db  0x8d ; '.'
000000000000e91a         db  0xff ; '.'
000000000000e91b         db  0xff ; '.'
000000000000e91c         db  0x30 ; '0'
000000000000e91d         db  0x0a ; '.'
000000000000e91e         db  0x00 ; '.'
000000000000e91f         db  0x00 ; '.'
000000000000e920         db  0x04 ; '.'
000000000000e921         db  0x8e ; '.'
000000000000e922         db  0xff ; '.'
000000000000e923         db  0xff ; '.'
000000000000e924         db  0x44 ; 'D'
000000000000e925         db  0x0a ; '.'
000000000000e926         db  0x00 ; '.'
000000000000e927         db  0x00 ; '.'
000000000000e928         db  0x94 ; '.'
000000000000e929         db  0x8e ; '.'
000000000000e92a         db  0xff ; '.'
000000000000e92b         db  0xff ; '.'
000000000000e92c         db  0x60 ; '`'
000000000000e92d         db  0x0a ; '.'
000000000000e92e         db  0x00 ; '.'
000000000000e92f         db  0x00 ; '.'
000000000000e930         db  0x34 ; '4'
000000000000e931         db  0x8f ; '.'
000000000000e932         db  0xff ; '.'
000000000000e933         db  0xff ; '.'
000000000000e934         db  0x7c ; '|'
000000000000e935         db  0x0a ; '.'
000000000000e936         db  0x00 ; '.'
000000000000e937         db  0x00 ; '.'
000000000000e938         db  0x44 ; 'D'
000000000000e939         db  0x8f ; '.'
000000000000e93a         db  0xff ; '.'
000000000000e93b         db  0xff ; '.'
000000000000e93c         db  0x90 ; '.'
000000000000e93d         db  0x0a ; '.'
000000000000e93e         db  0x00 ; '.'
000000000000e93f         db  0x00 ; '.'
000000000000e940         db  0x64 ; 'd'
000000000000e941         db  0x8f ; '.'
000000000000e942         db  0xff ; '.'
000000000000e943         db  0xff ; '.'
000000000000e944         db  0xa4 ; '.'
000000000000e945         db  0x0a ; '.'
000000000000e946         db  0x00 ; '.'
000000000000e947         db  0x00 ; '.'
000000000000e948         db  0x84 ; '.'
000000000000e949         db  0x8f ; '.'
000000000000e94a         db  0xff ; '.'
000000000000e94b         db  0xff ; '.'
000000000000e94c         db  0xb8 ; '.'
000000000000e94d         db  0x0a ; '.'
000000000000e94e         db  0x00 ; '.'
000000000000e94f         db  0x00 ; '.'
000000000000e950         db  0x94 ; '.'
000000000000e951         db  0x8f ; '.'
000000000000e952         db  0xff ; '.'
000000000000e953         db  0xff ; '.'
000000000000e954         db  0xcc ; '.'
000000000000e955         db  0x0a ; '.'
000000000000e956         db  0x00 ; '.'
000000000000e957         db  0x00 ; '.'
000000000000e958         db  0xb4 ; '.'
000000000000e959         db  0x8f ; '.'
000000000000e95a         db  0xff ; '.'
000000000000e95b         db  0xff ; '.'
000000000000e95c         db  0xe0 ; '.'
000000000000e95d         db  0x0a ; '.'
000000000000e95e         db  0x00 ; '.'
000000000000e95f         db  0x00 ; '.'
000000000000e960         db  0xd4 ; '.'
000000000000e961         db  0x8f ; '.'
000000000000e962         db  0xff ; '.'
000000000000e963         db  0xff ; '.'
000000000000e964         db  0xf4 ; '.'
000000000000e965         db  0x0a ; '.'
000000000000e966         db  0x00 ; '.'
000000000000e967         db  0x00 ; '.'
000000000000e968         db  0xf4 ; '.'
000000000000e969         db  0x8f ; '.'
000000000000e96a         db  0xff ; '.'
000000000000e96b         db  0xff ; '.'
000000000000e96c         db  0x0c ; '.'
000000000000e96d         db  0x0b ; '.'
000000000000e96e         db  0x00 ; '.'
000000000000e96f         db  0x00 ; '.'
000000000000e970         db  0x14 ; '.'
000000000000e971         db  0x94 ; '.'
000000000000e972         db  0xff ; '.'
000000000000e973         db  0xff ; '.'
000000000000e974         db  0x20 ; ' '
000000000000e975         db  0x0c ; '.'
000000000000e976         db  0x00 ; '.'
000000000000e977         db  0x00 ; '.'
000000000000e978         db  0x34 ; '4'
000000000000e979         db  0x94 ; '.'
000000000000e97a         db  0xff ; '.'
000000000000e97b         db  0xff ; '.'
000000000000e97c         db  0x34 ; '4'
000000000000e97d         db  0x0c ; '.'
000000000000e97e         db  0x00 ; '.'
000000000000e97f         db  0x00 ; '.'
000000000000e980         db  0xb4 ; '.'
000000000000e981         db  0x94 ; '.'
000000000000e982         db  0xff ; '.'
000000000000e983         db  0xff ; '.'
000000000000e984         db  0x50 ; 'P'
000000000000e985         db  0x0c ; '.'
000000000000e986         db  0x00 ; '.'
000000000000e987         db  0x00 ; '.'
000000000000e988         db  0x94 ; '.'
000000000000e989         db  0x95 ; '.'
000000000000e98a         db  0xff ; '.'
000000000000e98b         db  0xff ; '.'
000000000000e98c         db  0x7c ; '|'
000000000000e98d         db  0x0c ; '.'
000000000000e98e         db  0x00 ; '.'
000000000000e98f         db  0x00 ; '.'
000000000000e990         db  0x14 ; '.'
000000000000e991         db  0x96 ; '.'
000000000000e992         db  0xff ; '.'
000000000000e993         db  0xff ; '.'
000000000000e994         db  0x9c ; '.'
000000000000e995         db  0x0c ; '.'
000000000000e996         db  0x00 ; '.'
000000000000e997         db  0x00 ; '.'
000000000000e998         db  0x34 ; '4'
000000000000e999         db  0x96 ; '.'
000000000000e99a         db  0xff ; '.'
000000000000e99b         db  0xff ; '.'
000000000000e99c         db  0xb8 ; '.'
000000000000e99d         db  0x0c ; '.'
000000000000e99e         db  0x00 ; '.'
000000000000e99f         db  0x00 ; '.'
000000000000e9a0         db  0x64 ; 'd'
000000000000e9a1         db  0x96 ; '.'
000000000000e9a2         db  0xff ; '.'
000000000000e9a3         db  0xff ; '.'
000000000000e9a4         db  0xcc ; '.'
000000000000e9a5         db  0x0c ; '.'
000000000000e9a6         db  0x00 ; '.'
000000000000e9a7         db  0x00 ; '.'
000000000000e9a8         db  0x74 ; 't'
000000000000e9a9         db  0x96 ; '.'
000000000000e9aa         db  0xff ; '.'
000000000000e9ab         db  0xff ; '.'
000000000000e9ac         db  0xe0 ; '.'
000000000000e9ad         db  0x0c ; '.'
000000000000e9ae         db  0x00 ; '.'
000000000000e9af         db  0x00 ; '.'
000000000000e9b0         db  0xb4 ; '.'
000000000000e9b1         db  0x96 ; '.'
000000000000e9b2         db  0xff ; '.'
000000000000e9b3         db  0xff ; '.'
000000000000e9b4         db  0x04 ; '.'
000000000000e9b5         db  0x0d ; '.'
000000000000e9b6         db  0x00 ; '.'
000000000000e9b7         db  0x00 ; '.'
000000000000e9b8         db  0xe4 ; '.'
000000000000e9b9         db  0x96 ; '.'
000000000000e9ba         db  0xff ; '.'
000000000000e9bb         db  0xff ; '.'
000000000000e9bc         db  0x18 ; '.'
000000000000e9bd         db  0x0d ; '.'
000000000000e9be         db  0x00 ; '.'
000000000000e9bf         db  0x00 ; '.'
000000000000e9c0         db  0x74 ; 't'
000000000000e9c1         db  0x97 ; '.'
000000000000e9c2         db  0xff ; '.'
000000000000e9c3         db  0xff ; '.'
000000000000e9c4         db  0x30 ; '0'
000000000000e9c5         db  0x0d ; '.'
000000000000e9c6         db  0x00 ; '.'
000000000000e9c7         db  0x00 ; '.'
000000000000e9c8         db  0xc4 ; '.'
000000000000e9c9         db  0x97 ; '.'
000000000000e9ca         db  0xff ; '.'
000000000000e9cb         db  0xff ; '.'
000000000000e9cc         db  0x48 ; 'H'
000000000000e9cd         db  0x0d ; '.'
000000000000e9ce         db  0x00 ; '.'
000000000000e9cf         db  0x00 ; '.'
000000000000e9d0         db  0xe4 ; '.'
000000000000e9d1         db  0x97 ; '.'
000000000000e9d2         db  0xff ; '.'
000000000000e9d3         db  0xff ; '.'
000000000000e9d4         db  0x64 ; 'd'
000000000000e9d5         db  0x0d ; '.'
000000000000e9d6         db  0x00 ; '.'
000000000000e9d7         db  0x00 ; '.'
000000000000e9d8         db  0x14 ; '.'
000000000000e9d9         db  0x98 ; '.'
000000000000e9da         db  0xff ; '.'
000000000000e9db         db  0xff ; '.'
000000000000e9dc         db  0x80 ; '.'
000000000000e9dd         db  0x0d ; '.'
000000000000e9de         db  0x00 ; '.'
000000000000e9df         db  0x00 ; '.'
000000000000e9e0         db  0x44 ; 'D'
000000000000e9e1         db  0x98 ; '.'
000000000000e9e2         db  0xff ; '.'
000000000000e9e3         db  0xff ; '.'
000000000000e9e4         db  0xa8 ; '.'
000000000000e9e5         db  0x0d ; '.'
000000000000e9e6         db  0x00 ; '.'
000000000000e9e7         db  0x00 ; '.'
000000000000e9e8         db  0x64 ; 'd'
000000000000e9e9         db  0x98 ; '.'
000000000000e9ea         db  0xff ; '.'
000000000000e9eb         db  0xff ; '.'
000000000000e9ec         db  0xc4 ; '.'
000000000000e9ed         db  0x0d ; '.'
000000000000e9ee         db  0x00 ; '.'
000000000000e9ef         db  0x00 ; '.'
000000000000e9f0         db  0xa4 ; '.'
000000000000e9f1         db  0x98 ; '.'
000000000000e9f2         db  0xff ; '.'
000000000000e9f3         db  0xff ; '.'
000000000000e9f4         db  0xdc ; '.'
000000000000e9f5         db  0x0d ; '.'
000000000000e9f6         db  0x00 ; '.'
000000000000e9f7         db  0x00 ; '.'
000000000000e9f8         db  0xa4 ; '.'
000000000000e9f9         db  0x99 ; '.'
000000000000e9fa         db  0xff ; '.'
000000000000e9fb         db  0xff ; '.'
000000000000e9fc         db  0x28 ; '('
000000000000e9fd         db  0x0e ; '.'
000000000000e9fe         db  0x00 ; '.'
000000000000e9ff         db  0x00 ; '.'
000000000000ea00         db  0xd4 ; '.'
000000000000ea01         db  0x99 ; '.'
000000000000ea02         db  0xff ; '.'
000000000000ea03         db  0xff ; '.'
000000000000ea04         db  0x44 ; 'D'
000000000000ea05         db  0x0e ; '.'
000000000000ea06         db  0x00 ; '.'
000000000000ea07         db  0x00 ; '.'
000000000000ea08         db  0x94 ; '.'
000000000000ea09         db  0xa0 ; '.'
000000000000ea0a         db  0xff ; '.'
000000000000ea0b         db  0xff ; '.'
000000000000ea0c         db  0x94 ; '.'
000000000000ea0d         db  0x0e ; '.'
000000000000ea0e         db  0x00 ; '.'
000000000000ea0f         db  0x00 ; '.'
000000000000ea10         db  0xb4 ; '.'
000000000000ea11         db  0xa4 ; '.'
000000000000ea12         db  0xff ; '.'
000000000000ea13         db  0xff ; '.'
000000000000ea14         db  0xe4 ; '.'
000000000000ea15         db  0x0e ; '.'
000000000000ea16         db  0x00 ; '.'
000000000000ea17         db  0x00 ; '.'
000000000000ea18         db  0x34 ; '4'
000000000000ea19         db  0xa7 ; '.'
000000000000ea1a         db  0xff ; '.'
000000000000ea1b         db  0xff ; '.'
000000000000ea1c         db  0x1c ; '.'
000000000000ea1d         db  0x0f ; '.'
000000000000ea1e         db  0x00 ; '.'
000000000000ea1f         db  0x00 ; '.'
000000000000ea20         db  0xc4 ; '.'
000000000000ea21         db  0xa7 ; '.'
000000000000ea22         db  0xff ; '.'
000000000000ea23         db  0xff ; '.'
000000000000ea24         db  0x5c ; '\'
000000000000ea25         db  0x0f ; '.'
000000000000ea26         db  0x00 ; '.'
000000000000ea27         db  0x00 ; '.'
000000000000ea28         db  0x44 ; 'D'
000000000000ea29         db  0xa8 ; '.'
000000000000ea2a         db  0xff ; '.'
000000000000ea2b         db  0xff ; '.'
000000000000ea2c         db  0x84 ; '.'
000000000000ea2d         db  0x0f ; '.'
000000000000ea2e         db  0x00 ; '.'
000000000000ea2f         db  0x00 ; '.'
000000000000ea30         db  0xc4 ; '.'
000000000000ea31         db  0xa8 ; '.'
000000000000ea32         db  0xff ; '.'
000000000000ea33         db  0xff ; '.'
000000000000ea34         db  0xd4 ; '.'
000000000000ea35         db  0x0f ; '.'
000000000000ea36         db  0x00 ; '.'
000000000000ea37         db  0x00 ; '.'
000000000000ea38         db  0x24 ; '$'
000000000000ea39         db  0xa9 ; '.'
000000000000ea3a         db  0xff ; '.'
000000000000ea3b         db  0xff ; '.'
000000000000ea3c         db  0xf4 ; '.'
000000000000ea3d         db  0x0f ; '.'
000000000000ea3e         db  0x00 ; '.'
000000000000ea3f         db  0x00 ; '.'
000000000000ea40         db  0x64 ; 'd'
000000000000ea41         db  0xa9 ; '.'
000000000000ea42         db  0xff ; '.'
000000000000ea43         db  0xff ; '.'
000000000000ea44         db  0x14 ; '.'
000000000000ea45         db  0x10 ; '.'
000000000000ea46         db  0x00 ; '.'
000000000000ea47         db  0x00 ; '.'
000000000000ea48         db  0xe4 ; '.'
000000000000ea49         db  0xa9 ; '.'
000000000000ea4a         db  0xff ; '.'
000000000000ea4b         db  0xff ; '.'
000000000000ea4c         db  0x4c ; 'L'
000000000000ea4d         db  0x10 ; '.'
000000000000ea4e         db  0x00 ; '.'
000000000000ea4f         db  0x00 ; '.'
000000000000ea50         db  0x24 ; '$'
000000000000ea51         db  0xaa ; '.'
000000000000ea52         db  0xff ; '.'
000000000000ea53         db  0xff ; '.'
000000000000ea54         db  0x6c ; 'l'
000000000000ea55         db  0x10 ; '.'
000000000000ea56         db  0x00 ; '.'
000000000000ea57         db  0x00 ; '.'
000000000000ea58         db  0x84 ; '.'
000000000000ea59         db  0xaa ; '.'
000000000000ea5a         db  0xff ; '.'
000000000000ea5b         db  0xff ; '.'
000000000000ea5c         db  0x9c ; '.'
000000000000ea5d         db  0x10 ; '.'
000000000000ea5e         db  0x00 ; '.'
000000000000ea5f         db  0x00 ; '.'
000000000000ea60         db  0xa4 ; '.'
000000000000ea61         db  0xbb ; '.'
000000000000ea62         db  0xff ; '.'
000000000000ea63         db  0xff ; '.'
000000000000ea64         db  0xcc ; '.'
000000000000ea65         db  0x10 ; '.'
000000000000ea66         db  0x00 ; '.'
000000000000ea67         db  0x00 ; '.'
000000000000ea68         db  0xa4 ; '.'
000000000000ea69         db  0xbd ; '.'
000000000000ea6a         db  0xff ; '.'
000000000000ea6b         db  0xff ; '.'
000000000000ea6c         db  0xe4 ; '.'
000000000000ea6d         db  0x10 ; '.'
000000000000ea6e         db  0x00 ; '.'
000000000000ea6f         db  0x00 ; '.'
000000000000ea70         db  0x94 ; '.'
000000000000ea71         db  0xca ; '.'
000000000000ea72         db  0xff ; '.'
000000000000ea73         db  0xff ; '.'
000000000000ea74         db  0x34 ; '4'
000000000000ea75         db  0x11 ; '.'
000000000000ea76         db  0x00 ; '.'
000000000000ea77         db  0x00 ; '.'
000000000000ea78         db  0x04 ; '.'
000000000000ea79         db  0xcb ; '.'
000000000000ea7a         db  0xff ; '.'
000000000000ea7b         db  0xff ; '.'
000000000000ea7c         db  0x7c ; '|'
000000000000ea7d         db  0x11 ; '.'
000000000000ea7e         db  0x00 ; '.'
000000000000ea7f         db  0x00 ; '.'
000000000000ea80         db  0x14 ; '.'
000000000000ea81         db  0xcb ; '.'
000000000000ea82         db  0xff ; '.'
000000000000ea83         db  0xff ; '.'
000000000000ea84         db  0x94 ; '.'
000000000000ea85         db  0x11 ; '.'
000000000000ea86         db  0x00 ; '.'
000000000000ea87         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0xea88; 0xf958[ (3792 bytes)
        ; File offset : [60040; 63832[ (3792 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

000000000000ea88         dd         0x00000014                                  ; Length of the record
000000000000ea8c         dd         0x00000000                                  ; CIE ID
000000000000ea90         db         0x01                                        ; Version
000000000000ea91         db         "zR", 0                                     ; Augmentation String
000000000000ea94         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
000000000000ea95         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
000000000000ea96         db         0x10                                        ; Return address register
000000000000ea97         db         0x01                                        ; Augmentation data length
000000000000ea98         db         0x1b                                        ; FDE encoding
000000000000ea99         db  0x0c ; '.'
000000000000ea9a         db  0x07 ; '.'
000000000000ea9b         db  0x08 ; '.'
000000000000ea9c         db  0x90 ; '.'
000000000000ea9d         db  0x01 ; '.'
000000000000ea9e         db  0x07 ; '.'
000000000000ea9f         db  0x10 ; '.'
000000000000eaa0         dd         0x00000014                                  ; Length of the record
000000000000eaa4         dd         0x0000001c                                  ; FDE: parent CIE at 0xea88 (FDE encoding = 0x1B)
000000000000eaa8         db         0xa8, 0x48, 2 dup (0xff)                    ; begin 0x3350
000000000000eaac         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x337b)
000000000000eab0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000eab1         align      8
000000000000eab8         dd         0x00000014                                  ; Length of the record
000000000000eabc         dd         0x00000000                                  ; CIE ID
000000000000eac0         db         0x01                                        ; Version
000000000000eac1         db         "zR", 0                                     ; Augmentation String
000000000000eac4         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
000000000000eac5         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
000000000000eac6         db         0x10                                        ; Return address register
000000000000eac7         db         0x01                                        ; Augmentation data length
000000000000eac8         db         0x1b                                        ; FDE encoding
000000000000eac9         db  0x0c ; '.'
000000000000eaca         db  0x07 ; '.'
000000000000eacb         db  0x08 ; '.'
000000000000eacc         db  0x90 ; '.'
000000000000eacd         db  0x01 ; '.'
000000000000eace         db  0x00 ; '.'
000000000000eacf         db  0x00 ; '.'
000000000000ead0         dd         0x00000024                                  ; Length of the record
000000000000ead4         dd         0x0000001c                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000ead8         db         0x28, 0x39, 2 dup (0xff)                    ; begin 0x2400
000000000000eadc         db         0xc0, 0x03, 2 dup (0x00)                    ; length 0x3c0 (end at 0x27c0)
000000000000eae0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000eae1         db  0x0e ; '.'
000000000000eae2         db  0x10 ; '.'
000000000000eae3         db  0x46 ; 'F'
000000000000eae4         db  0x0e ; '.'
000000000000eae5         db  0x18 ; '.'
000000000000eae6         db  0x4a ; 'J'
000000000000eae7         db  0x0f ; '.'
000000000000eae8         db  0x0b ; '.'
000000000000eae9         db  0x77 ; 'w'
000000000000eaea         db  0x08 ; '.'
000000000000eaeb         db  0x80 ; '.'
000000000000eaec         db  0x00 ; '.'
000000000000eaed         db  0x3f ; '?'
000000000000eaee         db  0x1a ; '.'
000000000000eaef         db  0x3b ; ';'
000000000000eaf0         db  0x2a ; '*'
000000000000eaf1         db  0x33 ; '3'
000000000000eaf2         db  0x24 ; '$'
000000000000eaf3         db  0x22 ; '"'
000000000000eaf4         db  0x00 ; '.'
000000000000eaf5         db  0x00 ; '.'
000000000000eaf6         db  0x00 ; '.'
000000000000eaf7         db  0x00 ; '.'
000000000000eaf8         dd         0x00000014                                  ; Length of the record
000000000000eafc         dd         0x00000044                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000eb00         db         0xc0, 0x3c, 2 dup (0xff)                    ; begin 0x27c0
000000000000eb04         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x27c8)
000000000000eb08         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000eb09         align      16
000000000000eb10         dd         0x00000034                                  ; Length of the record
000000000000eb14         dd         0x0000005c                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000eb18         db         0x48, 0x49, 2 dup (0xff)                    ; begin 0x3460
000000000000eb1c         db         0x62, 3 dup (0x00)                          ; length 0x62 (end at 0x34c2)
000000000000eb20         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000eb21         db  0x42 ; 'B'
000000000000eb22         db  0x0e ; '.'
000000000000eb23         db  0x10 ; '.'
000000000000eb24         db  0x8c ; '.'
000000000000eb25         db  0x02 ; '.'
000000000000eb26         db  0x48 ; 'H'
000000000000eb27         db  0x0e ; '.'
000000000000eb28         db  0x18 ; '.'
000000000000eb29         db  0x86 ; '.'
000000000000eb2a         db  0x03 ; '.'
000000000000eb2b         db  0x44 ; 'D'
000000000000eb2c         db  0x0e ; '.'
000000000000eb2d         db  0x20 ; ' '
000000000000eb2e         db  0x83 ; '.'
000000000000eb2f         db  0x04 ; '.'
000000000000eb30         db  0x7e ; '~'
000000000000eb31         db  0x0a ; '.'
000000000000eb32         db  0x0e ; '.'
000000000000eb33         db  0x18 ; '.'
000000000000eb34         db  0x45 ; 'E'
000000000000eb35         db  0x0e ; '.'
000000000000eb36         db  0x10 ; '.'
000000000000eb37         db  0x42 ; 'B'
000000000000eb38         db  0x0e ; '.'
000000000000eb39         db  0x08 ; '.'
000000000000eb3a         db  0x45 ; 'E'
000000000000eb3b         db  0x0b ; '.'
000000000000eb3c         db  0x41 ; 'A'
000000000000eb3d         db  0x0e ; '.'
000000000000eb3e         db  0x18 ; '.'
000000000000eb3f         db  0x46 ; 'F'
000000000000eb40         db  0x0e ; '.'
000000000000eb41         db  0x10 ; '.'
000000000000eb42         db  0x42 ; 'B'
000000000000eb43         db  0x0e ; '.'
000000000000eb44         db  0x08 ; '.'
000000000000eb45         db  0x00 ; '.'
000000000000eb46         db  0x00 ; '.'
000000000000eb47         db  0x00 ; '.'
000000000000eb48         dd         0x00000014                                  ; Length of the record
000000000000eb4c         dd         0x00000094                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000eb50         db         0x80, 0x49, 2 dup (0xff)                    ; begin 0x34d0
000000000000eb54         db         0x4c, 3 dup (0x00)                          ; length 0x4c (end at 0x351c)
000000000000eb58         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000eb59         db  0x02 ; '.'
000000000000eb5a         db  0x47 ; 'G'
000000000000eb5b         db  0x0e ; '.'
000000000000eb5c         db  0x10 ; '.'
000000000000eb5d         db  0x00 ; '.'
000000000000eb5e         db  0x00 ; '.'
000000000000eb5f         db  0x00 ; '.'
000000000000eb60         dd         0x00000024                                  ; Length of the record
000000000000eb64         dd         0x000000ac                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000eb68         db         0xb8, 0x49, 2 dup (0xff)                    ; begin 0x3520
000000000000eb6c         db         0x91, 0x01, 2 dup (0x00)                    ; length 0x191 (end at 0x36b1)
000000000000eb70         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000eb71         db  0x41 ; 'A'
000000000000eb72         db  0x0e ; '.'
000000000000eb73         db  0x10 ; '.'
000000000000eb74         db  0x83 ; '.'
000000000000eb75         db  0x02 ; '.'
000000000000eb76         db  0x4a ; 'J'
000000000000eb77         db  0x0e ; '.'
000000000000eb78         db  0xf0 ; '.'
000000000000eb79         db  0x01 ; '.'
000000000000eb7a         db  0x03 ; '.'
000000000000eb7b         db  0x28 ; '('
000000000000eb7c         db  0x01 ; '.'
000000000000eb7d         db  0x0a ; '.'
000000000000eb7e         db  0x0e ; '.'
000000000000eb7f         db  0x10 ; '.'
000000000000eb80         db  0x41 ; 'A'
000000000000eb81         db  0x0e ; '.'
000000000000eb82         db  0x08 ; '.'
000000000000eb83         db  0x44 ; 'D'
000000000000eb84         db  0x0b ; '.'
000000000000eb85         db  0x00 ; '.'
000000000000eb86         db  0x00 ; '.'
000000000000eb87         db  0x00 ; '.'
000000000000eb88         dd         0x0000002c                                  ; Length of the record
000000000000eb8c         dd         0x000000d4                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000eb90         db         0x30, 0x4b, 2 dup (0xff)                    ; begin 0x36c0
000000000000eb94         db         0x97, 0x01, 2 dup (0x00)                    ; length 0x197 (end at 0x3857)
000000000000eb98         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000eb99         db  0x42 ; 'B'
000000000000eb9a         db  0x0e ; '.'
000000000000eb9b         db  0x10 ; '.'
000000000000eb9c         db  0x8c ; '.'
000000000000eb9d         db  0x02 ; '.'
000000000000eb9e         db  0x41 ; 'A'
000000000000eb9f         db  0x0e ; '.'
000000000000eba0         db  0x18 ; '.'
000000000000eba1         db  0x86 ; '.'
000000000000eba2         db  0x03 ; '.'
000000000000eba3         db  0x44 ; 'D'
000000000000eba4         db  0x0e ; '.'
000000000000eba5         db  0x20 ; ' '
000000000000eba6         db  0x83 ; '.'
000000000000eba7         db  0x04 ; '.'
000000000000eba8         db  0x02 ; '.'
000000000000eba9         db  0x8c ; '.'
000000000000ebaa         db  0x0a ; '.'
000000000000ebab         db  0x0e ; '.'
000000000000ebac         db  0x18 ; '.'
000000000000ebad         db  0x41 ; 'A'
000000000000ebae         db  0x0e ; '.'
000000000000ebaf         db  0x10 ; '.'
000000000000ebb0         db  0x42 ; 'B'
000000000000ebb1         db  0x0e ; '.'
000000000000ebb2         db  0x08 ; '.'
000000000000ebb3         db  0x4a ; 'J'
000000000000ebb4         db  0x0b ; '.'
000000000000ebb5         db  0x00 ; '.'
000000000000ebb6         db  0x00 ; '.'
000000000000ebb7         db  0x00 ; '.'
000000000000ebb8         dd         0x0000002c                                  ; Length of the record
000000000000ebbc         dd         0x00000104                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000ebc0         db         0xa0, 0x4c, 2 dup (0xff)                    ; begin 0x3860
000000000000ebc4         db         0x45, 3 dup (0x00)                          ; length 0x45 (end at 0x38a5)
000000000000ebc8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ebc9         db  0x41 ; 'A'
000000000000ebca         db  0x0e ; '.'
000000000000ebcb         db  0x10 ; '.'
000000000000ebcc         db  0x86 ; '.'
000000000000ebcd         db  0x02 ; '.'
000000000000ebce         db  0x41 ; 'A'
000000000000ebcf         db  0x0e ; '.'
000000000000ebd0         db  0x18 ; '.'
000000000000ebd1         db  0x83 ; '.'
000000000000ebd2         db  0x03 ; '.'
000000000000ebd3         db  0x56 ; 'V'
000000000000ebd4         db  0x0e ; '.'
000000000000ebd5         db  0x20 ; ' '
000000000000ebd6         db  0x4b ; 'K'
000000000000ebd7         db  0x0e ; '.'
000000000000ebd8         db  0x28 ; '('
000000000000ebd9         db  0x4c ; 'L'
000000000000ebda         db  0x0e ; '.'
000000000000ebdb         db  0x30 ; '0'
000000000000ebdc         db  0x53 ; 'S'
000000000000ebdd         db  0x0e ; '.'
000000000000ebde         db  0x18 ; '.'
000000000000ebdf         db  0x41 ; 'A'
000000000000ebe0         db  0x0e ; '.'
000000000000ebe1         db  0x10 ; '.'
000000000000ebe2         db  0x41 ; 'A'
000000000000ebe3         db  0x0e ; '.'
000000000000ebe4         db  0x08 ; '.'
000000000000ebe5         db  0x00 ; '.'
000000000000ebe6         db  0x00 ; '.'
000000000000ebe7         db  0x00 ; '.'
000000000000ebe8         dd         0x00000010                                  ; Length of the record
000000000000ebec         dd         0x00000134                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000ebf0         db         0xc0, 0x4c, 2 dup (0xff)                    ; begin 0x38b0
000000000000ebf4         db         0xd8, 3 dup (0x00)                          ; length 0xd8 (end at 0x3988)
000000000000ebf8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ebf9         align      4
000000000000ebfc         dd         0x00000018                                  ; Length of the record
000000000000ec00         dd         0x00000148                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000ec04         db         0x8c, 0x4d, 2 dup (0xff)                    ; begin 0x3990
000000000000ec08         db         0x99, 3 dup (0x00)                          ; length 0x99 (end at 0x3a29)
000000000000ec0c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ec0d         db  0x44 ; 'D'
000000000000ec0e         db  0x0e ; '.'
000000000000ec0f         db  0x30 ; '0'
000000000000ec10         db  0x02 ; '.'
000000000000ec11         db  0x78 ; 'x'
000000000000ec12         db  0x0a ; '.'
000000000000ec13         db  0x0e ; '.'
000000000000ec14         db  0x08 ; '.'
000000000000ec15         db  0x44 ; 'D'
000000000000ec16         db  0x0b ; '.'
000000000000ec17         db  0x00 ; '.'
000000000000ec18         dd         0x00000040                                  ; Length of the record
000000000000ec1c         dd         0x00000164                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000ec20         db         0x10, 0x4e, 2 dup (0xff)                    ; begin 0x3a30
000000000000ec24         db         0xef, 3 dup (0x00)                          ; length 0xef (end at 0x3b1f)
000000000000ec28         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ec29         db  0x42 ; 'B'
000000000000ec2a         db  0x0e ; '.'
000000000000ec2b         db  0x10 ; '.'
000000000000ec2c         db  0x8e ; '.'
000000000000ec2d         db  0x02 ; '.'
000000000000ec2e         db  0x42 ; 'B'
000000000000ec2f         db  0x0e ; '.'
000000000000ec30         db  0x18 ; '.'
000000000000ec31         db  0x8d ; '.'
000000000000ec32         db  0x03 ; '.'
000000000000ec33         db  0x45 ; 'E'
000000000000ec34         db  0x0e ; '.'
000000000000ec35         db  0x20 ; ' '
000000000000ec36         db  0x8c ; '.'
000000000000ec37         db  0x04 ; '.'
000000000000ec38         db  0x41 ; 'A'
000000000000ec39         db  0x0e ; '.'
000000000000ec3a         db  0x28 ; '('
000000000000ec3b         db  0x86 ; '.'
000000000000ec3c         db  0x05 ; '.'
000000000000ec3d         db  0x44 ; 'D'
000000000000ec3e         db  0x0e ; '.'
000000000000ec3f         db  0x30 ; '0'
000000000000ec40         db  0x83 ; '.'
000000000000ec41         db  0x06 ; '.'
000000000000ec42         db  0x4d ; 'M'
000000000000ec43         db  0x0e ; '.'
000000000000ec44         db  0x40 ; '@'
000000000000ec45         db  0x02 ; '.'
000000000000ec46         db  0x6f ; 'o'
000000000000ec47         db  0x0a ; '.'
000000000000ec48         db  0x0e ; '.'
000000000000ec49         db  0x30 ; '0'
000000000000ec4a         db  0x41 ; 'A'
000000000000ec4b         db  0x0e ; '.'
000000000000ec4c         db  0x28 ; '('
000000000000ec4d         db  0x41 ; 'A'
000000000000ec4e         db  0x0e ; '.'
000000000000ec4f         db  0x20 ; ' '
000000000000ec50         db  0x42 ; 'B'
000000000000ec51         db  0x0e ; '.'
000000000000ec52         db  0x18 ; '.'
000000000000ec53         db  0x42 ; 'B'
000000000000ec54         db  0x0e ; '.'
000000000000ec55         db  0x10 ; '.'
000000000000ec56         db  0x42 ; 'B'
000000000000ec57         db  0x0e ; '.'
000000000000ec58         db  0x08 ; '.'
000000000000ec59         db  0x41 ; 'A'
000000000000ec5a         db  0x0b ; '.'
000000000000ec5b         db  0x00 ; '.'
000000000000ec5c         dd         0x00000030                                  ; Length of the record
000000000000ec60         dd         0x000001a8                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000ec64         db         0xbc, 0x4e, 2 dup (0xff)                    ; begin 0x3b20
000000000000ec68         db         2 dup (0x01), 2 dup (0x00)                  ; length 0x101 (end at 0x3c21)
000000000000ec6c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ec6d         db  0x42 ; 'B'
000000000000ec6e         db  0x0e ; '.'
000000000000ec6f         db  0x10 ; '.'
000000000000ec70         db  0x8c ; '.'
000000000000ec71         db  0x02 ; '.'
000000000000ec72         db  0x41 ; 'A'
000000000000ec73         db  0x0e ; '.'
000000000000ec74         db  0x18 ; '.'
000000000000ec75         db  0x86 ; '.'
000000000000ec76         db  0x03 ; '.'
000000000000ec77         db  0x44 ; 'D'
000000000000ec78         db  0x0e ; '.'
000000000000ec79         db  0x20 ; ' '
000000000000ec7a         db  0x83 ; '.'
000000000000ec7b         db  0x04 ; '.'
000000000000ec7c         db  0x4d ; 'M'
000000000000ec7d         db  0x0e ; '.'
000000000000ec7e         db  0x30 ; '0'
000000000000ec7f         db  0x02 ; '.'
000000000000ec80         db  0x45 ; 'E'
000000000000ec81         db  0x0a ; '.'
000000000000ec82         db  0x0e ; '.'
000000000000ec83         db  0x20 ; ' '
000000000000ec84         db  0x41 ; 'A'
000000000000ec85         db  0x0e ; '.'
000000000000ec86         db  0x18 ; '.'
000000000000ec87         db  0x41 ; 'A'
000000000000ec88         db  0x0e ; '.'
000000000000ec89         db  0x10 ; '.'
000000000000ec8a         db  0x42 ; 'B'
000000000000ec8b         db  0x0e ; '.'
000000000000ec8c         db  0x08 ; '.'
000000000000ec8d         db  0x43 ; 'C'
000000000000ec8e         db  0x0b ; '.'
000000000000ec8f         db  0x00 ; '.'
000000000000ec90         dd         0x00000028                                  ; Length of the record
000000000000ec94         dd         0x000001dc                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000ec98         db         0x98, 0x4f, 2 dup (0xff)                    ; begin 0x3c30
000000000000ec9c         db         0x40, 0x0f, 2 dup (0x00)                    ; length 0xf40 (end at 0x4b70)
000000000000eca0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000eca1         db  0x42 ; 'B'
000000000000eca2         db  0x0e ; '.'
000000000000eca3         db  0x10 ; '.'
000000000000eca4         db  0x8d ; '.'
000000000000eca5         db  0x02 ; '.'
000000000000eca6         db  0x42 ; 'B'
000000000000eca7         db  0x0e ; '.'
000000000000eca8         db  0x18 ; '.'
000000000000eca9         db  0x8c ; '.'
000000000000ecaa         db  0x03 ; '.'
000000000000ecab         db  0x46 ; 'F'
000000000000ecac         db  0x0e ; '.'
000000000000ecad         db  0x20 ; ' '
000000000000ecae         db  0x86 ; '.'
000000000000ecaf         db  0x04 ; '.'
000000000000ecb0         db  0x41 ; 'A'
000000000000ecb1         db  0x0e ; '.'
000000000000ecb2         db  0x28 ; '('
000000000000ecb3         db  0x83 ; '.'
000000000000ecb4         db  0x05 ; '.'
000000000000ecb5         db  0x49 ; 'I'
000000000000ecb6         db  0x0e ; '.'
000000000000ecb7         db  0xb0 ; '.'
000000000000ecb8         db  0x01 ; '.'
000000000000ecb9         db  0x00 ; '.'
000000000000ecba         db  0x00 ; '.'
000000000000ecbb         db  0x00 ; '.'
000000000000ecbc         dd         0x0000004c                                  ; Length of the record
000000000000ecc0         dd         0x00000208                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000ecc4         db         0xac, 0x5e, 2 dup (0xff)                    ; begin 0x4b70
000000000000ecc8         db         0xc3, 0x0d, 2 dup (0x00)                    ; length 0xdc3 (end at 0x5933)
000000000000eccc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000eccd         db  0x42 ; 'B'
000000000000ecce         db  0x0e ; '.'
000000000000eccf         db  0x10 ; '.'
000000000000ecd0         db  0x8f ; '.'
000000000000ecd1         db  0x02 ; '.'
000000000000ecd2         db  0x42 ; 'B'
000000000000ecd3         db  0x0e ; '.'
000000000000ecd4         db  0x18 ; '.'
000000000000ecd5         db  0x8e ; '.'
000000000000ecd6         db  0x03 ; '.'
000000000000ecd7         db  0x42 ; 'B'
000000000000ecd8         db  0x0e ; '.'
000000000000ecd9         db  0x20 ; ' '
000000000000ecda         db  0x8d ; '.'
000000000000ecdb         db  0x04 ; '.'
000000000000ecdc         db  0x42 ; 'B'
000000000000ecdd         db  0x0e ; '.'
000000000000ecde         db  0x28 ; '('
000000000000ecdf         db  0x8c ; '.'
000000000000ece0         db  0x05 ; '.'
000000000000ece1         db  0x41 ; 'A'
000000000000ece2         db  0x0e ; '.'
000000000000ece3         db  0x30 ; '0'
000000000000ece4         db  0x86 ; '.'
000000000000ece5         db  0x06 ; '.'
000000000000ece6         db  0x41 ; 'A'
000000000000ece7         db  0x0e ; '.'
000000000000ece8         db  0x38 ; '8'
000000000000ece9         db  0x83 ; '.'
000000000000ecea         db  0x07 ; '.'
000000000000eceb         db  0x44 ; 'D'
000000000000ecec         db  0x0e ; '.'
000000000000eced         db  0xb0 ; '.'
000000000000ecee         db  0x01 ; '.'
000000000000ecef         db  0x03 ; '.'
000000000000ecf0         db  0xaa ; '.'
000000000000ecf1         db  0x01 ; '.'
000000000000ecf2         db  0x0a ; '.'
000000000000ecf3         db  0x0e ; '.'
000000000000ecf4         db  0x38 ; '8'
000000000000ecf5         db  0x41 ; 'A'
000000000000ecf6         db  0x0e ; '.'
000000000000ecf7         db  0x30 ; '0'
000000000000ecf8         db  0x41 ; 'A'
000000000000ecf9         db  0x0e ; '.'
000000000000ecfa         db  0x28 ; '('
000000000000ecfb         db  0x42 ; 'B'
000000000000ecfc         db  0x0e ; '.'
000000000000ecfd         db  0x20 ; ' '
000000000000ecfe         db  0x42 ; 'B'
000000000000ecff         db  0x0e ; '.'
000000000000ed00         db  0x18 ; '.'
000000000000ed01         db  0x42 ; 'B'
000000000000ed02         db  0x0e ; '.'
000000000000ed03         db  0x10 ; '.'
000000000000ed04         db  0x42 ; 'B'
000000000000ed05         db  0x0e ; '.'
000000000000ed06         db  0x08 ; '.'
000000000000ed07         db  0x46 ; 'F'
000000000000ed08         db  0x0b ; '.'
000000000000ed09         db  0x00 ; '.'
000000000000ed0a         db  0x00 ; '.'
000000000000ed0b         db  0x00 ; '.'
000000000000ed0c         dd         0x00000070                                  ; Length of the record
000000000000ed10         dd         0x00000258                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000ed14         db         0xbc, 0x3a, 2 dup (0xff)                    ; begin 0x27d0
000000000000ed18         db         0x78, 0x0b, 2 dup (0x00)                    ; length 0xb78 (end at 0x3348)
000000000000ed1c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ed1d         db  0x42 ; 'B'
000000000000ed1e         db  0x0e ; '.'
000000000000ed1f         db  0x10 ; '.'
000000000000ed20         db  0x8f ; '.'
000000000000ed21         db  0x02 ; '.'
000000000000ed22         db  0x42 ; 'B'
000000000000ed23         db  0x0e ; '.'
000000000000ed24         db  0x18 ; '.'
000000000000ed25         db  0x8e ; '.'
000000000000ed26         db  0x03 ; '.'
000000000000ed27         db  0x48 ; 'H'
000000000000ed28         db  0x0e ; '.'
000000000000ed29         db  0x20 ; ' '
000000000000ed2a         db  0x8d ; '.'
000000000000ed2b         db  0x04 ; '.'
000000000000ed2c         db  0x42 ; 'B'
000000000000ed2d         db  0x0e ; '.'
000000000000ed2e         db  0x28 ; '('
000000000000ed2f         db  0x8c ; '.'
000000000000ed30         db  0x05 ; '.'
000000000000ed31         db  0x44 ; 'D'
000000000000ed32         db  0x0e ; '.'
000000000000ed33         db  0x30 ; '0'
000000000000ed34         db  0x86 ; '.'
000000000000ed35         db  0x06 ; '.'
000000000000ed36         db  0x41 ; 'A'
000000000000ed37         db  0x0e ; '.'
000000000000ed38         db  0x38 ; '8'
000000000000ed39         db  0x83 ; '.'
000000000000ed3a         db  0x07 ; '.'
000000000000ed3b         db  0x4f ; 'O'
000000000000ed3c         db  0x0e ; '.'
000000000000ed3d         db  0x60 ; '`'
000000000000ed3e         db  0x03 ; '.'
000000000000ed3f         db  0x1d ; '.'
000000000000ed40         db  0x02 ; '.'
000000000000ed41         db  0x0e ; '.'
000000000000ed42         db  0x68 ; 'h'
000000000000ed43         db  0x5b ; '['
000000000000ed44         db  0x0e ; '.'
000000000000ed45         db  0x70 ; 'p'
000000000000ed46         db  0x4b ; 'K'
000000000000ed47         db  0x0e ; '.'
000000000000ed48         db  0x68 ; 'h'
000000000000ed49         db  0x41 ; 'A'
000000000000ed4a         db  0x0e ; '.'
000000000000ed4b         db  0x60 ; '`'
000000000000ed4c         db  0x02 ; '.'
000000000000ed4d         db  0x89 ; '.'
000000000000ed4e         db  0x0e ; '.'
000000000000ed4f         db  0x68 ; 'h'
000000000000ed50         db  0x58 ; 'X'
000000000000ed51         db  0x0e ; '.'
000000000000ed52         db  0x70 ; 'p'
000000000000ed53         db  0x4b ; 'K'
000000000000ed54         db  0x0e ; '.'
000000000000ed55         db  0x68 ; 'h'
000000000000ed56         db  0x41 ; 'A'
000000000000ed57         db  0x0e ; '.'
000000000000ed58         db  0x60 ; '`'
000000000000ed59         db  0x65 ; 'e'
000000000000ed5a         db  0x0a ; '.'
000000000000ed5b         db  0x0e ; '.'
000000000000ed5c         db  0x38 ; '8'
000000000000ed5d         db  0x41 ; 'A'
000000000000ed5e         db  0x0e ; '.'
000000000000ed5f         db  0x30 ; '0'
000000000000ed60         db  0x41 ; 'A'
000000000000ed61         db  0x0e ; '.'
000000000000ed62         db  0x28 ; '('
000000000000ed63         db  0x42 ; 'B'
000000000000ed64         db  0x0e ; '.'
000000000000ed65         db  0x20 ; ' '
000000000000ed66         db  0x42 ; 'B'
000000000000ed67         db  0x0e ; '.'
000000000000ed68         db  0x18 ; '.'
000000000000ed69         db  0x42 ; 'B'
000000000000ed6a         db  0x0e ; '.'
000000000000ed6b         db  0x10 ; '.'
000000000000ed6c         db  0x42 ; 'B'
000000000000ed6d         db  0x0e ; '.'
000000000000ed6e         db  0x08 ; '.'
000000000000ed6f         db  0x41 ; 'A'
000000000000ed70         db  0x0b ; '.'
000000000000ed71         db  0x03 ; '.'
000000000000ed72         db  0xe9 ; '.'
000000000000ed73         db  0x05 ; '.'
000000000000ed74         db  0x0e ; '.'
000000000000ed75         db  0x68 ; 'h'
000000000000ed76         db  0x5e ; '^'
000000000000ed77         db  0x0e ; '.'
000000000000ed78         db  0x70 ; 'p'
000000000000ed79         db  0x4b ; 'K'
000000000000ed7a         db  0x0e ; '.'
000000000000ed7b         db  0x68 ; 'h'
000000000000ed7c         db  0x42 ; 'B'
000000000000ed7d         db  0x0e ; '.'
000000000000ed7e         db  0x60 ; '`'
000000000000ed7f         db  0x00 ; '.'
000000000000ed80         dd         0x00000010                                  ; Length of the record
000000000000ed84         dd         0x000002cc                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000ed88         db         0xb8, 0x6b, 2 dup (0xff)                    ; begin 0x5940
000000000000ed8c         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x5948)
000000000000ed90         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ed91         align      4
000000000000ed94         dd         0x00000010                                  ; Length of the record
000000000000ed98         dd         0x000002e0                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000ed9c         db         0xb4, 0x6b, 2 dup (0xff)                    ; begin 0x5950
000000000000eda0         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x5958)
000000000000eda4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000eda5         align      8
000000000000eda8         dd         0x0000002c                                  ; Length of the record
000000000000edac         dd         0x000002f4                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000edb0         db         0xb0, 0x6b, 2 dup (0xff)                    ; begin 0x5960
000000000000edb4         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x5a04)
000000000000edb8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000edb9         db  0x41 ; 'A'
000000000000edba         db  0x0e ; '.'
000000000000edbb         db  0x10 ; '.'
000000000000edbc         db  0x86 ; '.'
000000000000edbd         db  0x02 ; '.'
000000000000edbe         db  0x41 ; 'A'
000000000000edbf         db  0x0e ; '.'
000000000000edc0         db  0x18 ; '.'
000000000000edc1         db  0x83 ; '.'
000000000000edc2         db  0x03 ; '.'
000000000000edc3         db  0x44 ; 'D'
000000000000edc4         db  0x0e ; '.'
000000000000edc5         db  0x20 ; ' '
000000000000edc6         db  0x7a ; 'z'
000000000000edc7         db  0x0a ; '.'
000000000000edc8         db  0x0e ; '.'
000000000000edc9         db  0x18 ; '.'
000000000000edca         db  0x41 ; 'A'
000000000000edcb         db  0x0e ; '.'
000000000000edcc         db  0x10 ; '.'
000000000000edcd         db  0x41 ; 'A'
000000000000edce         db  0x0e ; '.'
000000000000edcf         db  0x08 ; '.'
000000000000edd0         db  0x41 ; 'A'
000000000000edd1         db  0x0b ; '.'
000000000000edd2         db  0x00 ; '.'
000000000000edd3         db  0x00 ; '.'
000000000000edd4         db  0x00 ; '.'
000000000000edd5         db  0x00 ; '.'
000000000000edd6         db  0x00 ; '.'
000000000000edd7         db  0x00 ; '.'
000000000000edd8         dd         0x00000034                                  ; Length of the record
000000000000eddc         dd         0x00000324                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000ede0         db         0x30, 0x6c, 2 dup (0xff)                    ; begin 0x5a10
000000000000ede4         db         0x56, 3 dup (0x00)                          ; length 0x56 (end at 0x5a66)
000000000000ede8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ede9         db  0x42 ; 'B'
000000000000edea         db  0x0e ; '.'
000000000000edeb         db  0x10 ; '.'
000000000000edec         db  0x8d ; '.'
000000000000eded         db  0x02 ; '.'
000000000000edee         db  0x42 ; 'B'
000000000000edef         db  0x0e ; '.'
000000000000edf0         db  0x18 ; '.'
000000000000edf1         db  0x8c ; '.'
000000000000edf2         db  0x03 ; '.'
000000000000edf3         db  0x43 ; 'C'
000000000000edf4         db  0x0e ; '.'
000000000000edf5         db  0x20 ; ' '
000000000000edf6         db  0x86 ; '.'
000000000000edf7         db  0x04 ; '.'
000000000000edf8         db  0x41 ; 'A'
000000000000edf9         db  0x0e ; '.'
000000000000edfa         db  0x28 ; '('
000000000000edfb         db  0x83 ; '.'
000000000000edfc         db  0x05 ; '.'
000000000000edfd         db  0x4d ; 'M'
000000000000edfe         db  0x0e ; '.'
000000000000edff         db  0x30 ; '0'
000000000000ee00         db  0x78 ; 'x'
000000000000ee01         db  0x0e ; '.'
000000000000ee02         db  0x28 ; '('
000000000000ee03         db  0x43 ; 'C'
000000000000ee04         db  0x0e ; '.'
000000000000ee05         db  0x20 ; ' '
000000000000ee06         db  0x41 ; 'A'
000000000000ee07         db  0x0e ; '.'
000000000000ee08         db  0x18 ; '.'
000000000000ee09         db  0x42 ; 'B'
000000000000ee0a         db  0x0e ; '.'
000000000000ee0b         db  0x10 ; '.'
000000000000ee0c         db  0x42 ; 'B'
000000000000ee0d         db  0x0e ; '.'
000000000000ee0e         db  0x08 ; '.'
000000000000ee0f         db  0x00 ; '.'
000000000000ee10         dd         0x0000001c                                  ; Length of the record
000000000000ee14         dd         0x0000035c                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000ee18         db         0x58, 0x6c, 2 dup (0xff)                    ; begin 0x5a70
000000000000ee1c         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x5b0f)
000000000000ee20         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ee21         db  0x44 ; 'D'
000000000000ee22         db  0x0e ; '.'
000000000000ee23         db  0x10 ; '.'
000000000000ee24         db  0x83 ; '.'
000000000000ee25         db  0x02 ; '.'
000000000000ee26         db  0x02 ; '.'
000000000000ee27         db  0x78 ; 'x'
000000000000ee28         db  0x0a ; '.'
000000000000ee29         db  0x0e ; '.'
000000000000ee2a         db  0x08 ; '.'
000000000000ee2b         db  0x41 ; 'A'
000000000000ee2c         db  0x0b ; '.'
000000000000ee2d         db  0x00 ; '.'
000000000000ee2e         db  0x00 ; '.'
000000000000ee2f         db  0x00 ; '.'
000000000000ee30         dd         0x00000040                                  ; Length of the record
000000000000ee34         dd         0x0000037c                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000ee38         db         0xd8, 0x6c, 2 dup (0xff)                    ; begin 0x5b10
000000000000ee3c         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x5bf7)
000000000000ee40         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ee41         db  0x41 ; 'A'
000000000000ee42         db  0x0e ; '.'
000000000000ee43         db  0x10 ; '.'
000000000000ee44         db  0x86 ; '.'
000000000000ee45         db  0x02 ; '.'
000000000000ee46         db  0x41 ; 'A'
000000000000ee47         db  0x0e ; '.'
000000000000ee48         db  0x18 ; '.'
000000000000ee49         db  0x83 ; '.'
000000000000ee4a         db  0x03 ; '.'
000000000000ee4b         db  0x49 ; 'I'
000000000000ee4c         db  0x0e ; '.'
000000000000ee4d         db  0x20 ; ' '
000000000000ee4e         db  0x6e ; 'n'
000000000000ee4f         db  0x0a ; '.'
000000000000ee50         db  0x0e ; '.'
000000000000ee51         db  0x18 ; '.'
000000000000ee52         db  0x41 ; 'A'
000000000000ee53         db  0x0e ; '.'
000000000000ee54         db  0x10 ; '.'
000000000000ee55         db  0x41 ; 'A'
000000000000ee56         db  0x0e ; '.'
000000000000ee57         db  0x08 ; '.'
000000000000ee58         db  0x45 ; 'E'
000000000000ee59         db  0x0b ; '.'
000000000000ee5a         db  0x02 ; '.'
000000000000ee5b         db  0x4a ; 'J'
000000000000ee5c         db  0x0a ; '.'
000000000000ee5d         db  0x0e ; '.'
000000000000ee5e         db  0x18 ; '.'
000000000000ee5f         db  0x41 ; 'A'
000000000000ee60         db  0x0e ; '.'
000000000000ee61         db  0x10 ; '.'
000000000000ee62         db  0x41 ; 'A'
000000000000ee63         db  0x0e ; '.'
000000000000ee64         db  0x08 ; '.'
000000000000ee65         db  0x44 ; 'D'
000000000000ee66         db  0x0b ; '.'
000000000000ee67         db  0x02 ; '.'
000000000000ee68         db  0x54 ; 'T'
000000000000ee69         db  0x0e ; '.'
000000000000ee6a         db  0x18 ; '.'
000000000000ee6b         db  0x41 ; 'A'
000000000000ee6c         db  0x0e ; '.'
000000000000ee6d         db  0x10 ; '.'
000000000000ee6e         db  0x41 ; 'A'
000000000000ee6f         db  0x0e ; '.'
000000000000ee70         db  0x08 ; '.'
000000000000ee71         db  0x00 ; '.'
000000000000ee72         db  0x00 ; '.'
000000000000ee73         db  0x00 ; '.'
000000000000ee74         dd         0x00000074                                  ; Length of the record
000000000000ee78         dd         0x000003c0                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000ee7c         db         0x84, 0x6d, 2 dup (0xff)                    ; begin 0x5c00
000000000000ee80         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x6e34)
000000000000ee84         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ee85         db  0x42 ; 'B'
000000000000ee86         db  0x0e ; '.'
000000000000ee87         db  0x10 ; '.'
000000000000ee88         db  0x8f ; '.'
000000000000ee89         db  0x02 ; '.'
000000000000ee8a         db  0x42 ; 'B'
000000000000ee8b         db  0x0e ; '.'
000000000000ee8c         db  0x18 ; '.'
000000000000ee8d         db  0x8e ; '.'
000000000000ee8e         db  0x03 ; '.'
000000000000ee8f         db  0x45 ; 'E'
000000000000ee90         db  0x0e ; '.'
000000000000ee91         db  0x20 ; ' '
000000000000ee92         db  0x8d ; '.'
000000000000ee93         db  0x04 ; '.'
000000000000ee94         db  0x42 ; 'B'
000000000000ee95         db  0x0e ; '.'
000000000000ee96         db  0x28 ; '('
000000000000ee97         db  0x8c ; '.'
000000000000ee98         db  0x05 ; '.'
000000000000ee99         db  0x44 ; 'D'
000000000000ee9a         db  0x0e ; '.'
000000000000ee9b         db  0x30 ; '0'
000000000000ee9c         db  0x86 ; '.'
000000000000ee9d         db  0x06 ; '.'
000000000000ee9e         db  0x41 ; 'A'
000000000000ee9f         db  0x0e ; '.'
000000000000eea0         db  0x38 ; '8'
000000000000eea1         db  0x83 ; '.'
000000000000eea2         db  0x07 ; '.'
000000000000eea3         db  0x53 ; 'S'
000000000000eea4         db  0x0e ; '.'
000000000000eea5         db  0xf0 ; '.'
000000000000eea6         db  0x01 ; '.'
000000000000eea7         db  0x03 ; '.'
000000000000eea8         db  0x81 ; '.'
000000000000eea9         db  0x0b ; '.'
000000000000eeaa         db  0x0e ; '.'
000000000000eeab         db  0xf8 ; '.'
000000000000eeac         db  0x01 ; '.'
000000000000eead         db  0x4a ; 'J'
000000000000eeae         db  0x0e ; '.'
000000000000eeaf         db  0x80 ; '.'
000000000000eeb0         db  0x02 ; '.'
000000000000eeb1         db  0x44 ; 'D'
000000000000eeb2         db  0x0e ; '.'
000000000000eeb3         db  0x88 ; '.'
000000000000eeb4         db  0x02 ; '.'
000000000000eeb5         db  0x45 ; 'E'
000000000000eeb6         db  0x0e ; '.'
000000000000eeb7         db  0x90 ; '.'
000000000000eeb8         db  0x02 ; '.'
000000000000eeb9         db  0x5f ; '_'
000000000000eeba         db  0x0e ; '.'
000000000000eebb         db  0xf0 ; '.'
000000000000eebc         db  0x01 ; '.'
000000000000eebd         db  0x64 ; 'd'
000000000000eebe         db  0x0a ; '.'
000000000000eebf         db  0x0e ; '.'
000000000000eec0         db  0x38 ; '8'
000000000000eec1         db  0x41 ; 'A'
000000000000eec2         db  0x0e ; '.'
000000000000eec3         db  0x30 ; '0'
000000000000eec4         db  0x41 ; 'A'
000000000000eec5         db  0x0e ; '.'
000000000000eec6         db  0x28 ; '('
000000000000eec7         db  0x42 ; 'B'
000000000000eec8         db  0x0e ; '.'
000000000000eec9         db  0x20 ; ' '
000000000000eeca         db  0x42 ; 'B'
000000000000eecb         db  0x0e ; '.'
000000000000eecc         db  0x18 ; '.'
000000000000eecd         db  0x42 ; 'B'
000000000000eece         db  0x0e ; '.'
000000000000eecf         db  0x10 ; '.'
000000000000eed0         db  0x42 ; 'B'
000000000000eed1         db  0x0e ; '.'
000000000000eed2         db  0x08 ; '.'
000000000000eed3         db  0x44 ; 'D'
000000000000eed4         db  0x0b ; '.'
000000000000eed5         db  0x03 ; '.'
000000000000eed6         db  0x99 ; '.'
000000000000eed7         db  0x05 ; '.'
000000000000eed8         db  0x0e ; '.'
000000000000eed9         db  0xf8 ; '.'
000000000000eeda         db  0x01 ; '.'
000000000000eedb         db  0x4d ; 'M'
000000000000eedc         db  0x0e ; '.'
000000000000eedd         db  0x80 ; '.'
000000000000eede         db  0x02 ; '.'
000000000000eedf         db  0x44 ; 'D'
000000000000eee0         db  0x0e ; '.'
000000000000eee1         db  0x88 ; '.'
000000000000eee2         db  0x02 ; '.'
000000000000eee3         db  0x47 ; 'G'
000000000000eee4         db  0x0e ; '.'
000000000000eee5         db  0x90 ; '.'
000000000000eee6         db  0x02 ; '.'
000000000000eee7         db  0x5b ; '['
000000000000eee8         db  0x0e ; '.'
000000000000eee9         db  0xf0 ; '.'
000000000000eeea         db  0x01 ; '.'
000000000000eeeb         db  0x00 ; '.'
000000000000eeec         dd         0x00000068                                  ; Length of the record
000000000000eef0         dd         0x00000438                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000eef4         db         0x4c, 0x7f, 2 dup (0xff)                    ; begin 0x6e40
000000000000eef8         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x6feb)
000000000000eefc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000eefd         db  0x42 ; 'B'
000000000000eefe         db  0x0e ; '.'
000000000000eeff         db  0x10 ; '.'
000000000000ef00         db  0x8f ; '.'
000000000000ef01         db  0x02 ; '.'
000000000000ef02         db  0x42 ; 'B'
000000000000ef03         db  0x0e ; '.'
000000000000ef04         db  0x18 ; '.'
000000000000ef05         db  0x8e ; '.'
000000000000ef06         db  0x03 ; '.'
000000000000ef07         db  0x45 ; 'E'
000000000000ef08         db  0x0e ; '.'
000000000000ef09         db  0x20 ; ' '
000000000000ef0a         db  0x8d ; '.'
000000000000ef0b         db  0x04 ; '.'
000000000000ef0c         db  0x42 ; 'B'
000000000000ef0d         db  0x0e ; '.'
000000000000ef0e         db  0x28 ; '('
000000000000ef0f         db  0x8c ; '.'
000000000000ef10         db  0x05 ; '.'
000000000000ef11         db  0x44 ; 'D'
000000000000ef12         db  0x0e ; '.'
000000000000ef13         db  0x30 ; '0'
000000000000ef14         db  0x86 ; '.'
000000000000ef15         db  0x06 ; '.'
000000000000ef16         db  0x41 ; 'A'
000000000000ef17         db  0x0e ; '.'
000000000000ef18         db  0x38 ; '8'
000000000000ef19         db  0x83 ; '.'
000000000000ef1a         db  0x07 ; '.'
000000000000ef1b         db  0x47 ; 'G'
000000000000ef1c         db  0x0e ; '.'
000000000000ef1d         db  0x60 ; '`'
000000000000ef1e         db  0x02 ; '.'
000000000000ef1f         db  0x99 ; '.'
000000000000ef20         db  0x0e ; '.'
000000000000ef21         db  0x68 ; 'h'
000000000000ef22         db  0x5f ; '_'
000000000000ef23         db  0x0e ; '.'
000000000000ef24         db  0x70 ; 'p'
000000000000ef25         db  0x46 ; 'F'
000000000000ef26         db  0x0e ; '.'
000000000000ef27         db  0x78 ; 'x'
000000000000ef28         db  0x42 ; 'B'
000000000000ef29         db  0x0e ; '.'
000000000000ef2a         db  0x80 ; '.'
000000000000ef2b         db  0x01 ; '.'
000000000000ef2c         db  0x59 ; 'Y'
000000000000ef2d         db  0x0e ; '.'
000000000000ef2e         db  0x60 ; '`'
000000000000ef2f         db  0x02 ; '.'
000000000000ef30         db  0x40 ; '@'
000000000000ef31         db  0x0e ; '.'
000000000000ef32         db  0x68 ; 'h'
000000000000ef33         db  0x4b ; 'K'
000000000000ef34         db  0x0e ; '.'
000000000000ef35         db  0x70 ; 'p'
000000000000ef36         db  0x43 ; 'C'
000000000000ef37         db  0x0e ; '.'
000000000000ef38         db  0x78 ; 'x'
000000000000ef39         db  0x45 ; 'E'
000000000000ef3a         db  0x0e ; '.'
000000000000ef3b         db  0x80 ; '.'
000000000000ef3c         db  0x01 ; '.'
000000000000ef3d         db  0x5e ; '^'
000000000000ef3e         db  0x0e ; '.'
000000000000ef3f         db  0x60 ; '`'
000000000000ef40         db  0x4c ; 'L'
000000000000ef41         db  0x0a ; '.'
000000000000ef42         db  0x0e ; '.'
000000000000ef43         db  0x38 ; '8'
000000000000ef44         db  0x44 ; 'D'
000000000000ef45         db  0x0e ; '.'
000000000000ef46         db  0x30 ; '0'
000000000000ef47         db  0x41 ; 'A'
000000000000ef48         db  0x0e ; '.'
000000000000ef49         db  0x28 ; '('
000000000000ef4a         db  0x42 ; 'B'
000000000000ef4b         db  0x0e ; '.'
000000000000ef4c         db  0x20 ; ' '
000000000000ef4d         db  0x42 ; 'B'
000000000000ef4e         db  0x0e ; '.'
000000000000ef4f         db  0x18 ; '.'
000000000000ef50         db  0x42 ; 'B'
000000000000ef51         db  0x0e ; '.'
000000000000ef52         db  0x10 ; '.'
000000000000ef53         db  0x42 ; 'B'
000000000000ef54         db  0x0e ; '.'
000000000000ef55         db  0x08 ; '.'
000000000000ef56         db  0x46 ; 'F'
000000000000ef57         db  0x0b ; '.'
000000000000ef58         dd         0x00000028                                  ; Length of the record
000000000000ef5c         dd         0x000004a4                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000ef60         db         0x90, 0x80, 2 dup (0xff)                    ; begin 0x6ff0
000000000000ef64         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x7026)
000000000000ef68         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ef69         db  0x42 ; 'B'
000000000000ef6a         db  0x0e ; '.'
000000000000ef6b         db  0x10 ; '.'
000000000000ef6c         db  0x8c ; '.'
000000000000ef6d         db  0x02 ; '.'
000000000000ef6e         db  0x41 ; 'A'
000000000000ef6f         db  0x0e ; '.'
000000000000ef70         db  0x18 ; '.'
000000000000ef71         db  0x86 ; '.'
000000000000ef72         db  0x03 ; '.'
000000000000ef73         db  0x41 ; 'A'
000000000000ef74         db  0x0e ; '.'
000000000000ef75         db  0x20 ; ' '
000000000000ef76         db  0x83 ; '.'
000000000000ef77         db  0x04 ; '.'
000000000000ef78         db  0x6e ; 'n'
000000000000ef79         db  0x0e ; '.'
000000000000ef7a         db  0x18 ; '.'
000000000000ef7b         db  0x41 ; 'A'
000000000000ef7c         db  0x0e ; '.'
000000000000ef7d         db  0x10 ; '.'
000000000000ef7e         db  0x42 ; 'B'
000000000000ef7f         db  0x0e ; '.'
000000000000ef80         db  0x08 ; '.'
000000000000ef81         db  0x00 ; '.'
000000000000ef82         db  0x00 ; '.'
000000000000ef83         db  0x00 ; '.'
000000000000ef84         dd         0x00000010                                  ; Length of the record
000000000000ef88         dd         0x000004d0                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000ef8c         db         0xa4, 0x80, 2 dup (0xff)                    ; begin 0x7030
000000000000ef90         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x7041)
000000000000ef94         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000ef95         align      8
000000000000ef98         dd         0x00000010                                  ; Length of the record
000000000000ef9c         dd         0x000004e4                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000efa0         db         0xb0, 0x80, 2 dup (0xff)                    ; begin 0x7050
000000000000efa4         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x7061)
000000000000efa8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000efa9         align      4
000000000000efac         dd         0x00000010                                  ; Length of the record
000000000000efb0         dd         0x000004f8                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000efb4         db         0xbc, 0x80, 2 dup (0xff)                    ; begin 0x7070
000000000000efb8         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x70a5)
000000000000efbc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000efbd         align      64
000000000000efc0         dd         0x00000010                                  ; Length of the record
000000000000efc4         dd         0x0000050c                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000efc8         db         0xe8, 0x80, 2 dup (0xff)                    ; begin 0x70b0
000000000000efcc         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x70c5)
000000000000efd0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000efd1         align      4
000000000000efd4         dd         0x00000010                                  ; Length of the record
000000000000efd8         dd         0x00000520                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000efdc         db         0xf4, 0x80, 2 dup (0xff)                    ; begin 0x70d0
000000000000efe0         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x7100)
000000000000efe4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000efe5         db  0x6b ; 'k'
000000000000efe6         db  0x0e ; '.'
000000000000efe7         db  0x10 ; '.'
000000000000efe8         dd         0x00000050                                  ; Length of the record
000000000000efec         dd         0x00000534                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000eff0         db         0x10, 0x81, 2 dup (0xff)                    ; begin 0x7100
000000000000eff4         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x7174)
000000000000eff8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000eff9         db  0x42 ; 'B'
000000000000effa         db  0x0e ; '.'
000000000000effb         db  0x10 ; '.'
000000000000effc         db  0x8f ; '.'
000000000000effd         db  0x02 ; '.'
000000000000effe         db  0x42 ; 'B'
000000000000efff         db  0x0e ; '.'
000000000000f000         db  0x18 ; '.'
000000000000f001         db  0x8e ; '.'
000000000000f002         db  0x03 ; '.'
000000000000f003         db  0x49 ; 'I'
000000000000f004         db  0x0e ; '.'
000000000000f005         db  0x20 ; ' '
000000000000f006         db  0x8d ; '.'
000000000000f007         db  0x04 ; '.'
000000000000f008         db  0x42 ; 'B'
000000000000f009         db  0x0e ; '.'
000000000000f00a         db  0x28 ; '('
000000000000f00b         db  0x8c ; '.'
000000000000f00c         db  0x05 ; '.'
000000000000f00d         db  0x44 ; 'D'
000000000000f00e         db  0x0e ; '.'
000000000000f00f         db  0x30 ; '0'
000000000000f010         db  0x86 ; '.'
000000000000f011         db  0x06 ; '.'
000000000000f012         db  0x41 ; 'A'
000000000000f013         db  0x0e ; '.'
000000000000f014         db  0x38 ; '8'
000000000000f015         db  0x83 ; '.'
000000000000f016         db  0x07 ; '.'
000000000000f017         db  0x4d ; 'M'
000000000000f018         db  0x0e ; '.'
000000000000f019         db  0x50 ; 'P'
000000000000f01a         db  0x5f ; '_'
000000000000f01b         db  0x0e ; '.'
000000000000f01c         db  0x58 ; 'X'
000000000000f01d         db  0x47 ; 'G'
000000000000f01e         db  0x0e ; '.'
000000000000f01f         db  0x60 ; '`'
000000000000f020         db  0x46 ; 'F'
000000000000f021         db  0x0e ; '.'
000000000000f022         db  0x68 ; 'h'
000000000000f023         db  0x44 ; 'D'
000000000000f024         db  0x0e ; '.'
000000000000f025         db  0x70 ; 'p'
000000000000f026         db  0x58 ; 'X'
000000000000f027         db  0x0e ; '.'
000000000000f028         db  0x38 ; '8'
000000000000f029         db  0x41 ; 'A'
000000000000f02a         db  0x0e ; '.'
000000000000f02b         db  0x30 ; '0'
000000000000f02c         db  0x41 ; 'A'
000000000000f02d         db  0x0e ; '.'
000000000000f02e         db  0x28 ; '('
000000000000f02f         db  0x42 ; 'B'
000000000000f030         db  0x0e ; '.'
000000000000f031         db  0x20 ; ' '
000000000000f032         db  0x42 ; 'B'
000000000000f033         db  0x0e ; '.'
000000000000f034         db  0x18 ; '.'
000000000000f035         db  0x42 ; 'B'
000000000000f036         db  0x0e ; '.'
000000000000f037         db  0x10 ; '.'
000000000000f038         db  0x42 ; 'B'
000000000000f039         db  0x0e ; '.'
000000000000f03a         db  0x08 ; '.'
000000000000f03b         db  0x00 ; '.'
000000000000f03c         dd         0x00000068                                  ; Length of the record
000000000000f040         dd         0x00000588                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f044         db         0x3c, 0x81, 2 dup (0xff)                    ; begin 0x7180
000000000000f048         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x7263)
000000000000f04c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f04d         db  0x42 ; 'B'
000000000000f04e         db  0x0e ; '.'
000000000000f04f         db  0x10 ; '.'
000000000000f050         db  0x8f ; '.'
000000000000f051         db  0x02 ; '.'
000000000000f052         db  0x42 ; 'B'
000000000000f053         db  0x0e ; '.'
000000000000f054         db  0x18 ; '.'
000000000000f055         db  0x8e ; '.'
000000000000f056         db  0x03 ; '.'
000000000000f057         db  0x49 ; 'I'
000000000000f058         db  0x0e ; '.'
000000000000f059         db  0x20 ; ' '
000000000000f05a         db  0x8d ; '.'
000000000000f05b         db  0x04 ; '.'
000000000000f05c         db  0x42 ; 'B'
000000000000f05d         db  0x0e ; '.'
000000000000f05e         db  0x28 ; '('
000000000000f05f         db  0x8c ; '.'
000000000000f060         db  0x05 ; '.'
000000000000f061         db  0x44 ; 'D'
000000000000f062         db  0x0e ; '.'
000000000000f063         db  0x30 ; '0'
000000000000f064         db  0x86 ; '.'
000000000000f065         db  0x06 ; '.'
000000000000f066         db  0x41 ; 'A'
000000000000f067         db  0x0e ; '.'
000000000000f068         db  0x38 ; '8'
000000000000f069         db  0x83 ; '.'
000000000000f06a         db  0x07 ; '.'
000000000000f06b         db  0x4d ; 'M'
000000000000f06c         db  0x0e ; '.'
000000000000f06d         db  0x70 ; 'p'
000000000000f06e         db  0x65 ; 'e'
000000000000f06f         db  0x0e ; '.'
000000000000f070         db  0x78 ; 'x'
000000000000f071         db  0x4d ; 'M'
000000000000f072         db  0x0e ; '.'
000000000000f073         db  0x80 ; '.'
000000000000f074         db  0x01 ; '.'
000000000000f075         db  0x46 ; 'F'
000000000000f076         db  0x0e ; '.'
000000000000f077         db  0x88 ; '.'
000000000000f078         db  0x01 ; '.'
000000000000f079         db  0x42 ; 'B'
000000000000f07a         db  0x0e ; '.'
000000000000f07b         db  0x90 ; '.'
000000000000f07c         db  0x01 ; '.'
000000000000f07d         db  0x5e ; '^'
000000000000f07e         db  0x0e ; '.'
000000000000f07f         db  0x70 ; 'p'
000000000000f080         db  0x56 ; 'V'
000000000000f081         db  0x0e ; '.'
000000000000f082         db  0x78 ; 'x'
000000000000f083         db  0x43 ; 'C'
000000000000f084         db  0x0e ; '.'
000000000000f085         db  0x80 ; '.'
000000000000f086         db  0x01 ; '.'
000000000000f087         db  0x43 ; 'C'
000000000000f088         db  0x0e ; '.'
000000000000f089         db  0x88 ; '.'
000000000000f08a         db  0x01 ; '.'
000000000000f08b         db  0x56 ; 'V'
000000000000f08c         db  0x0e ; '.'
000000000000f08d         db  0x90 ; '.'
000000000000f08e         db  0x01 ; '.'
000000000000f08f         db  0x52 ; 'R'
000000000000f090         db  0x0e ; '.'
000000000000f091         db  0x70 ; 'p'
000000000000f092         db  0x5b ; '['
000000000000f093         db  0x0e ; '.'
000000000000f094         db  0x38 ; '8'
000000000000f095         db  0x41 ; 'A'
000000000000f096         db  0x0e ; '.'
000000000000f097         db  0x30 ; '0'
000000000000f098         db  0x41 ; 'A'
000000000000f099         db  0x0e ; '.'
000000000000f09a         db  0x28 ; '('
000000000000f09b         db  0x42 ; 'B'
000000000000f09c         db  0x0e ; '.'
000000000000f09d         db  0x20 ; ' '
000000000000f09e         db  0x42 ; 'B'
000000000000f09f         db  0x0e ; '.'
000000000000f0a0         db  0x18 ; '.'
000000000000f0a1         db  0x42 ; 'B'
000000000000f0a2         db  0x0e ; '.'
000000000000f0a3         db  0x10 ; '.'
000000000000f0a4         db  0x42 ; 'B'
000000000000f0a5         db  0x0e ; '.'
000000000000f0a6         db  0x08 ; '.'
000000000000f0a7         db  0x00 ; '.'
000000000000f0a8         dd         0x00000010                                  ; Length of the record
000000000000f0ac         dd         0x000005f4                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f0b0         db         0xc0, 0x81, 2 dup (0xff)                    ; begin 0x7270
000000000000f0b4         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x727a)
000000000000f0b8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f0b9         align      4
000000000000f0bc         dd         0x00000028                                  ; Length of the record
000000000000f0c0         dd         0x00000608                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f0c4         db         0xbc, 0x81, 2 dup (0xff)                    ; begin 0x7280
000000000000f0c8         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x7313)
000000000000f0cc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f0cd         db  0x48 ; 'H'
000000000000f0ce         db  0x0e ; '.'
000000000000f0cf         db  0x10 ; '.'
000000000000f0d0         db  0x8c ; '.'
000000000000f0d1         db  0x02 ; '.'
000000000000f0d2         db  0x48 ; 'H'
000000000000f0d3         db  0x0e ; '.'
000000000000f0d4         db  0x18 ; '.'
000000000000f0d5         db  0x86 ; '.'
000000000000f0d6         db  0x03 ; '.'
000000000000f0d7         db  0x41 ; 'A'
000000000000f0d8         db  0x0e ; '.'
000000000000f0d9         db  0x20 ; ' '
000000000000f0da         db  0x83 ; '.'
000000000000f0db         db  0x04 ; '.'
000000000000f0dc         db  0x02 ; '.'
000000000000f0dd         db  0x74 ; 't'
000000000000f0de         db  0x0e ; '.'
000000000000f0df         db  0x18 ; '.'
000000000000f0e0         db  0x4b ; 'K'
000000000000f0e1         db  0x0e ; '.'
000000000000f0e2         db  0x10 ; '.'
000000000000f0e3         db  0x42 ; 'B'
000000000000f0e4         db  0x0e ; '.'
000000000000f0e5         db  0x08 ; '.'
000000000000f0e6         db  0x00 ; '.'
000000000000f0e7         db  0x00 ; '.'
000000000000f0e8         dd         0x00000010                                  ; Length of the record
000000000000f0ec         dd         0x00000634                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f0f0         db         0x30, 0x82, 2 dup (0xff)                    ; begin 0x7320
000000000000f0f4         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x7333)
000000000000f0f8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f0f9         align      4
000000000000f0fc         dd         0x00000010                                  ; Length of the record
000000000000f100         dd         0x00000648                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f104         db         0x3c, 0x82, 2 dup (0xff)                    ; begin 0x7340
000000000000f108         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x734c)
000000000000f10c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f10d         align      16
000000000000f110         dd         0x00000010                                  ; Length of the record
000000000000f114         dd         0x0000065c                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f118         db         0x38, 0x82, 2 dup (0xff)                    ; begin 0x7350
000000000000f11c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x7368)
000000000000f120         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f121         align      4
000000000000f124         dd         0x00000010                                  ; Length of the record
000000000000f128         dd         0x00000670                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f12c         db         0x44, 0x82, 2 dup (0xff)                    ; begin 0x7370
000000000000f130         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x7384)
000000000000f134         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f135         align      8
000000000000f138         dd         0x00000018                                  ; Length of the record
000000000000f13c         dd         0x00000684                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f140         db         0x50, 0x82, 2 dup (0xff)                    ; begin 0x7390
000000000000f144         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x741e)
000000000000f148         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f149         db  0x44 ; 'D'
000000000000f14a         db  0x0e ; '.'
000000000000f14b         db  0x50 ; 'P'
000000000000f14c         db  0x02 ; '.'
000000000000f14d         db  0x7f ; '.'
000000000000f14e         db  0x0a ; '.'
000000000000f14f         db  0x0e ; '.'
000000000000f150         db  0x08 ; '.'
000000000000f151         db  0x41 ; 'A'
000000000000f152         db  0x0b ; '.'
000000000000f153         db  0x00 ; '.'
000000000000f154         dd         0x00000018                                  ; Length of the record
000000000000f158         dd         0x000006a0                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f15c         db         0xc4, 0x82, 2 dup (0xff)                    ; begin 0x7420
000000000000f160         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x74aa)
000000000000f164         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f165         db  0x44 ; 'D'
000000000000f166         db  0x0e ; '.'
000000000000f167         db  0x50 ; 'P'
000000000000f168         db  0x02 ; '.'
000000000000f169         db  0x7b ; '{'
000000000000f16a         db  0x0a ; '.'
000000000000f16b         db  0x0e ; '.'
000000000000f16c         db  0x08 ; '.'
000000000000f16d         db  0x41 ; 'A'
000000000000f16e         db  0x0b ; '.'
000000000000f16f         db  0x00 ; '.'
000000000000f170         dd         0x00000010                                  ; Length of the record
000000000000f174         dd         0x000006bc                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f178         db         0x38, 0x83, 2 dup (0xff)                    ; begin 0x74b0
000000000000f17c         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x74bc)
000000000000f180         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f181         align      4
000000000000f184         dd         0x00000010                                  ; Length of the record
000000000000f188         dd         0x000006d0                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f18c         db         0x34, 0x83, 2 dup (0xff)                    ; begin 0x74c0
000000000000f190         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x74cf)
000000000000f194         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f195         align      8
000000000000f198         dd         0x00000018                                  ; Length of the record
000000000000f19c         dd         0x000006e4                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f1a0         db         0x30, 0x83, 2 dup (0xff)                    ; begin 0x74d0
000000000000f1a4         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x7568)
000000000000f1a8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f1a9         db  0x44 ; 'D'
000000000000f1aa         db  0x0e ; '.'
000000000000f1ab         db  0x50 ; 'P'
000000000000f1ac         db  0x02 ; '.'
000000000000f1ad         db  0x8e ; '.'
000000000000f1ae         db  0x0a ; '.'
000000000000f1af         db  0x0e ; '.'
000000000000f1b0         db  0x08 ; '.'
000000000000f1b1         db  0x41 ; 'A'
000000000000f1b2         db  0x0b ; '.'
000000000000f1b3         db  0x00 ; '.'
000000000000f1b4         dd         0x00000010                                  ; Length of the record
000000000000f1b8         dd         0x00000700                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f1bc         db         0xb4, 0x83, 2 dup (0xff)                    ; begin 0x7570
000000000000f1c0         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x7580)
000000000000f1c4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f1c5         align      8
000000000000f1c8         dd         0x00000010                                  ; Length of the record
000000000000f1cc         dd         0x00000714                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f1d0         db         0xb0, 0x83, 2 dup (0xff)                    ; begin 0x7580
000000000000f1d4         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x7591)
000000000000f1d8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f1d9         align      4
000000000000f1dc         dd         0x00000010                                  ; Length of the record
000000000000f1e0         dd         0x00000728                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f1e4         db         0xbc, 0x83, 2 dup (0xff)                    ; begin 0x75a0
000000000000f1e8         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x75aa)
000000000000f1ec         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f1ed         align      16
000000000000f1f0         dd         0x00000018                                  ; Length of the record
000000000000f1f4         dd         0x0000073c                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f1f8         db         0xb8, 0x83, 2 dup (0xff)                    ; begin 0x75b0
000000000000f1fc         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x763e)
000000000000f200         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f201         db  0x44 ; 'D'
000000000000f202         db  0x0e ; '.'
000000000000f203         db  0x50 ; 'P'
000000000000f204         db  0x02 ; '.'
000000000000f205         db  0x7f ; '.'
000000000000f206         db  0x0a ; '.'
000000000000f207         db  0x0e ; '.'
000000000000f208         db  0x08 ; '.'
000000000000f209         db  0x41 ; 'A'
000000000000f20a         db  0x0b ; '.'
000000000000f20b         db  0x00 ; '.'
000000000000f20c         dd         0x00000018                                  ; Length of the record
000000000000f210         dd         0x00000758                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f214         db         0x2c, 0x84, 2 dup (0xff)                    ; begin 0x7640
000000000000f218         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x76d1)
000000000000f21c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f21d         db  0x44 ; 'D'
000000000000f21e         db  0x0e ; '.'
000000000000f21f         db  0x50 ; 'P'
000000000000f220         db  0x02 ; '.'
000000000000f221         db  0x82 ; '.'
000000000000f222         db  0x0a ; '.'
000000000000f223         db  0x0e ; '.'
000000000000f224         db  0x08 ; '.'
000000000000f225         db  0x41 ; 'A'
000000000000f226         db  0x0b ; '.'
000000000000f227         db  0x00 ; '.'
000000000000f228         dd         0x00000010                                  ; Length of the record
000000000000f22c         dd         0x00000774                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f230         db         0xb0, 0x84, 2 dup (0xff)                    ; begin 0x76e0
000000000000f234         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x76ec)
000000000000f238         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f239         align      4
000000000000f23c         dd         0x00000010                                  ; Length of the record
000000000000f240         dd         0x00000788                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f244         db         0xac, 0x84, 2 dup (0xff)                    ; begin 0x76f0
000000000000f248         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x7707)
000000000000f24c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f24d         align      16
000000000000f250         dd         0x00000010                                  ; Length of the record
000000000000f254         dd         0x0000079c                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f258         db         0xb8, 0x84, 2 dup (0xff)                    ; begin 0x7710
000000000000f25c         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x7723)
000000000000f260         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f261         align      4
000000000000f264         dd         0x00000010                                  ; Length of the record
000000000000f268         dd         0x000007b0                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f26c         db         0xc4, 0x84, 2 dup (0xff)                    ; begin 0x7730
000000000000f270         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x773c)
000000000000f274         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f275         align      8
000000000000f278         dd         0x00000010                                  ; Length of the record
000000000000f27c         dd         0x000007c4                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f280         db         0xc0, 0x84, 2 dup (0xff)                    ; begin 0x7740
000000000000f284         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x7754)
000000000000f288         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f289         align      4
000000000000f28c         dd         0x00000010                                  ; Length of the record
000000000000f290         dd         0x000007d8                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f294         db         0xcc, 0x84, 2 dup (0xff)                    ; begin 0x7760
000000000000f298         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x7773)
000000000000f29c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f29d         align      32
000000000000f2a0         dd         0x00000014                                  ; Length of the record
000000000000f2a4         dd         0x000007ec                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f2a8         db         0xd8, 0x84, 2 dup (0xff)                    ; begin 0x7780
000000000000f2ac         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x7798)
000000000000f2b0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f2b1         align      8
000000000000f2b8         dd         0x00000110                                  ; Length of the record
000000000000f2bc         dd         0x00000804                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f2c0         db         0xe0, 0x84, 2 dup (0xff)                    ; begin 0x77a0
000000000000f2c4         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x7bb7)
000000000000f2c8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f2c9         db  0x42 ; 'B'
000000000000f2ca         db  0x0e ; '.'
000000000000f2cb         db  0x10 ; '.'
000000000000f2cc         db  0x8f ; '.'
000000000000f2cd         db  0x02 ; '.'
000000000000f2ce         db  0x42 ; 'B'
000000000000f2cf         db  0x0e ; '.'
000000000000f2d0         db  0x18 ; '.'
000000000000f2d1         db  0x8e ; '.'
000000000000f2d2         db  0x03 ; '.'
000000000000f2d3         db  0x42 ; 'B'
000000000000f2d4         db  0x0e ; '.'
000000000000f2d5         db  0x20 ; ' '
000000000000f2d6         db  0x8d ; '.'
000000000000f2d7         db  0x04 ; '.'
000000000000f2d8         db  0x42 ; 'B'
000000000000f2d9         db  0x0e ; '.'
000000000000f2da         db  0x28 ; '('
000000000000f2db         db  0x8c ; '.'
000000000000f2dc         db  0x05 ; '.'
000000000000f2dd         db  0x44 ; 'D'
000000000000f2de         db  0x0e ; '.'
000000000000f2df         db  0x30 ; '0'
000000000000f2e0         db  0x86 ; '.'
000000000000f2e1         db  0x06 ; '.'
000000000000f2e2         db  0x41 ; 'A'
000000000000f2e3         db  0x0e ; '.'
000000000000f2e4         db  0x38 ; '8'
000000000000f2e5         db  0x83 ; '.'
000000000000f2e6         db  0x07 ; '.'
000000000000f2e7         db  0x4a ; 'J'
000000000000f2e8         db  0x0e ; '.'
000000000000f2e9         db  0x60 ; '`'
000000000000f2ea         db  0x02 ; '.'
000000000000f2eb         db  0xdd ; '.'
000000000000f2ec         db  0x0e ; '.'
000000000000f2ed         db  0x68 ; 'h'
000000000000f2ee         db  0x57 ; 'W'
000000000000f2ef         db  0x0e ; '.'
000000000000f2f0         db  0x70 ; 'p'
000000000000f2f1         db  0x42 ; 'B'
000000000000f2f2         db  0x0e ; '.'
000000000000f2f3         db  0x78 ; 'x'
000000000000f2f4         db  0x42 ; 'B'
000000000000f2f5         db  0x0e ; '.'
000000000000f2f6         db  0x80 ; '.'
000000000000f2f7         db  0x01 ; '.'
000000000000f2f8         db  0x42 ; 'B'
000000000000f2f9         db  0x0e ; '.'
000000000000f2fa         db  0x88 ; '.'
000000000000f2fb         db  0x01 ; '.'
000000000000f2fc         db  0x42 ; 'B'
000000000000f2fd         db  0x0e ; '.'
000000000000f2fe         db  0x90 ; '.'
000000000000f2ff         db  0x01 ; '.'
000000000000f300         db  0x53 ; 'S'
000000000000f301         db  0x0e ; '.'
000000000000f302         db  0x60 ; '`'
000000000000f303         db  0x44 ; 'D'
000000000000f304         db  0x0a ; '.'
000000000000f305         db  0x0e ; '.'
000000000000f306         db  0x38 ; '8'
000000000000f307         db  0x41 ; 'A'
000000000000f308         db  0x0e ; '.'
000000000000f309         db  0x30 ; '0'
000000000000f30a         db  0x41 ; 'A'
000000000000f30b         db  0x0e ; '.'
000000000000f30c         db  0x28 ; '('
000000000000f30d         db  0x42 ; 'B'
000000000000f30e         db  0x0e ; '.'
000000000000f30f         db  0x20 ; ' '
000000000000f310         db  0x42 ; 'B'
000000000000f311         db  0x0e ; '.'
000000000000f312         db  0x18 ; '.'
000000000000f313         db  0x42 ; 'B'
000000000000f314         db  0x0e ; '.'
000000000000f315         db  0x10 ; '.'
000000000000f316         db  0x42 ; 'B'
000000000000f317         db  0x0e ; '.'
000000000000f318         db  0x08 ; '.'
000000000000f319         db  0x44 ; 'D'
000000000000f31a         db  0x0b ; '.'
000000000000f31b         db  0x02 ; '.'
000000000000f31c         db  0x78 ; 'x'
000000000000f31d         db  0x0a ; '.'
000000000000f31e         db  0x0e ; '.'
000000000000f31f         db  0x68 ; 'h'
000000000000f320         db  0x48 ; 'H'
000000000000f321         db  0x0b ; '.'
000000000000f322         db  0x5a ; 'Z'
000000000000f323         db  0x0a ; '.'
000000000000f324         db  0x0e ; '.'
000000000000f325         db  0x38 ; '8'
000000000000f326         db  0x47 ; 'G'
000000000000f327         db  0x0e ; '.'
000000000000f328         db  0x30 ; '0'
000000000000f329         db  0x41 ; 'A'
000000000000f32a         db  0x0e ; '.'
000000000000f32b         db  0x28 ; '('
000000000000f32c         db  0x42 ; 'B'
000000000000f32d         db  0x0e ; '.'
000000000000f32e         db  0x20 ; ' '
000000000000f32f         db  0x42 ; 'B'
000000000000f330         db  0x0e ; '.'
000000000000f331         db  0x18 ; '.'
000000000000f332         db  0x42 ; 'B'
000000000000f333         db  0x0e ; '.'
000000000000f334         db  0x10 ; '.'
000000000000f335         db  0x42 ; 'B'
000000000000f336         db  0x0e ; '.'
000000000000f337         db  0x08 ; '.'
000000000000f338         db  0x56 ; 'V'
000000000000f339         db  0x0b ; '.'
000000000000f33a         db  0x5e ; '^'
000000000000f33b         db  0x0a ; '.'
000000000000f33c         db  0x0e ; '.'
000000000000f33d         db  0x38 ; '8'
000000000000f33e         db  0x52 ; 'R'
000000000000f33f         db  0x0e ; '.'
000000000000f340         db  0x30 ; '0'
000000000000f341         db  0x41 ; 'A'
000000000000f342         db  0x0e ; '.'
000000000000f343         db  0x28 ; '('
000000000000f344         db  0x42 ; 'B'
000000000000f345         db  0x0e ; '.'
000000000000f346         db  0x20 ; ' '
000000000000f347         db  0x42 ; 'B'
000000000000f348         db  0x0e ; '.'
000000000000f349         db  0x18 ; '.'
000000000000f34a         db  0x42 ; 'B'
000000000000f34b         db  0x0e ; '.'
000000000000f34c         db  0x10 ; '.'
000000000000f34d         db  0x42 ; 'B'
000000000000f34e         db  0x0e ; '.'
000000000000f34f         db  0x08 ; '.'
000000000000f350         db  0x4f ; 'O'
000000000000f351         db  0x0b ; '.'
000000000000f352         db  0x62 ; 'b'
000000000000f353         db  0x0a ; '.'
000000000000f354         db  0x0e ; '.'
000000000000f355         db  0x38 ; '8'
000000000000f356         db  0x50 ; 'P'
000000000000f357         db  0x0e ; '.'
000000000000f358         db  0x30 ; '0'
000000000000f359         db  0x41 ; 'A'
000000000000f35a         db  0x0e ; '.'
000000000000f35b         db  0x28 ; '('
000000000000f35c         db  0x42 ; 'B'
000000000000f35d         db  0x0e ; '.'
000000000000f35e         db  0x20 ; ' '
000000000000f35f         db  0x42 ; 'B'
000000000000f360         db  0x0e ; '.'
000000000000f361         db  0x18 ; '.'
000000000000f362         db  0x42 ; 'B'
000000000000f363         db  0x0e ; '.'
000000000000f364         db  0x10 ; '.'
000000000000f365         db  0x42 ; 'B'
000000000000f366         db  0x0e ; '.'
000000000000f367         db  0x08 ; '.'
000000000000f368         db  0x55 ; 'U'
000000000000f369         db  0x0b ; '.'
000000000000f36a         db  0x66 ; 'f'
000000000000f36b         db  0x0e ; '.'
000000000000f36c         db  0x68 ; 'h'
000000000000f36d         db  0x42 ; 'B'
000000000000f36e         db  0x0e ; '.'
000000000000f36f         db  0x70 ; 'p'
000000000000f370         db  0x5c ; '\'
000000000000f371         db  0x0e ; '.'
000000000000f372         db  0x68 ; 'h'
000000000000f373         db  0x41 ; 'A'
000000000000f374         db  0x0e ; '.'
000000000000f375         db  0x60 ; '`'
000000000000f376         db  0x44 ; 'D'
000000000000f377         db  0x0a ; '.'
000000000000f378         db  0x0e ; '.'
000000000000f379         db  0x38 ; '8'
000000000000f37a         db  0x41 ; 'A'
000000000000f37b         db  0x0e ; '.'
000000000000f37c         db  0x30 ; '0'
000000000000f37d         db  0x41 ; 'A'
000000000000f37e         db  0x0e ; '.'
000000000000f37f         db  0x28 ; '('
000000000000f380         db  0x42 ; 'B'
000000000000f381         db  0x0e ; '.'
000000000000f382         db  0x20 ; ' '
000000000000f383         db  0x42 ; 'B'
000000000000f384         db  0x0e ; '.'
000000000000f385         db  0x18 ; '.'
000000000000f386         db  0x42 ; 'B'
000000000000f387         db  0x0e ; '.'
000000000000f388         db  0x10 ; '.'
000000000000f389         db  0x42 ; 'B'
000000000000f38a         db  0x0e ; '.'
000000000000f38b         db  0x08 ; '.'
000000000000f38c         db  0x45 ; 'E'
000000000000f38d         db  0x0b ; '.'
000000000000f38e         db  0x68 ; 'h'
000000000000f38f         db  0x0a ; '.'
000000000000f390         db  0x0e ; '.'
000000000000f391         db  0x68 ; 'h'
000000000000f392         db  0x48 ; 'H'
000000000000f393         db  0x0b ; '.'
000000000000f394         db  0x72 ; 'r'
000000000000f395         db  0x0e ; '.'
000000000000f396         db  0x68 ; 'h'
000000000000f397         db  0x45 ; 'E'
000000000000f398         db  0x0e ; '.'
000000000000f399         db  0x70 ; 'p'
000000000000f39a         db  0x42 ; 'B'
000000000000f39b         db  0x0e ; '.'
000000000000f39c         db  0x78 ; 'x'
000000000000f39d         db  0x42 ; 'B'
000000000000f39e         db  0x0e ; '.'
000000000000f39f         db  0x80 ; '.'
000000000000f3a0         db  0x01 ; '.'
000000000000f3a1         db  0x5e ; '^'
000000000000f3a2         db  0x0e ; '.'
000000000000f3a3         db  0x60 ; '`'
000000000000f3a4         db  0x44 ; 'D'
000000000000f3a5         db  0x0a ; '.'
000000000000f3a6         db  0x0e ; '.'
000000000000f3a7         db  0x38 ; '8'
000000000000f3a8         db  0x41 ; 'A'
000000000000f3a9         db  0x0e ; '.'
000000000000f3aa         db  0x30 ; '0'
000000000000f3ab         db  0x41 ; 'A'
000000000000f3ac         db  0x0e ; '.'
000000000000f3ad         db  0x28 ; '('
000000000000f3ae         db  0x42 ; 'B'
000000000000f3af         db  0x0e ; '.'
000000000000f3b0         db  0x20 ; ' '
000000000000f3b1         db  0x42 ; 'B'
000000000000f3b2         db  0x0e ; '.'
000000000000f3b3         db  0x18 ; '.'
000000000000f3b4         db  0x42 ; 'B'
000000000000f3b5         db  0x0e ; '.'
000000000000f3b6         db  0x10 ; '.'
000000000000f3b7         db  0x42 ; 'B'
000000000000f3b8         db  0x0e ; '.'
000000000000f3b9         db  0x08 ; '.'
000000000000f3ba         db  0x41 ; 'A'
000000000000f3bb         db  0x0b ; '.'
000000000000f3bc         db  0x79 ; 'y'
000000000000f3bd         db  0x0a ; '.'
000000000000f3be         db  0x0e ; '.'
000000000000f3bf         db  0x68 ; 'h'
000000000000f3c0         db  0x42 ; 'B'
000000000000f3c1         db  0x0e ; '.'
000000000000f3c2         db  0x70 ; 'p'
000000000000f3c3         db  0x42 ; 'B'
000000000000f3c4         db  0x0e ; '.'
000000000000f3c5         db  0x78 ; 'x'
000000000000f3c6         db  0x42 ; 'B'
000000000000f3c7         db  0x0e ; '.'
000000000000f3c8         db  0x80 ; '.'
000000000000f3c9         db  0x01 ; '.'
000000000000f3ca         db  0x51 ; 'Q'
000000000000f3cb         db  0x0b ; '.'
000000000000f3cc         dd         0x00000010                                  ; Length of the record
000000000000f3d0         dd         0x00000918                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f3d4         db         0xec, 0x87, 2 dup (0xff)                    ; begin 0x7bc0
000000000000f3d8         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x7be0)
000000000000f3dc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f3dd         align      32
000000000000f3e0         dd         0x00000018                                  ; Length of the record
000000000000f3e4         dd         0x0000092c                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f3e8         db         0xf8, 0x87, 2 dup (0xff)                    ; begin 0x7be0
000000000000f3ec         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x7c58)
000000000000f3f0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f3f1         db  0x44 ; 'D'
000000000000f3f2         db  0x0e ; '.'
000000000000f3f3         db  0x70 ; 'p'
000000000000f3f4         db  0x02 ; '.'
000000000000f3f5         db  0x60 ; '`'
000000000000f3f6         db  0x0a ; '.'
000000000000f3f7         db  0x0e ; '.'
000000000000f3f8         db  0x08 ; '.'
000000000000f3f9         db  0x41 ; 'A'
000000000000f3fa         db  0x0b ; '.'
000000000000f3fb         db  0x00 ; '.'
000000000000f3fc         dd         0x00000028                                  ; Length of the record
000000000000f400         dd         0x00000948                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f404         db         0x5c, 0x88, 2 dup (0xff)                    ; begin 0x7c60
000000000000f408         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x7d35)
000000000000f40c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f40d         db  0x41 ; 'A'
000000000000f40e         db  0x0e ; '.'
000000000000f40f         db  0x10 ; '.'
000000000000f410         db  0x86 ; '.'
000000000000f411         db  0x02 ; '.'
000000000000f412         db  0x41 ; 'A'
000000000000f413         db  0x0e ; '.'
000000000000f414         db  0x18 ; '.'
000000000000f415         db  0x83 ; '.'
000000000000f416         db  0x03 ; '.'
000000000000f417         db  0x50 ; 'P'
000000000000f418         db  0x0e ; '.'
000000000000f419         db  0xd0 ; '.'
000000000000f41a         db  0x01 ; '.'
000000000000f41b         db  0x02 ; '.'
000000000000f41c         db  0xab ; '.'
000000000000f41d         db  0x0a ; '.'
000000000000f41e         db  0x0e ; '.'
000000000000f41f         db  0x18 ; '.'
000000000000f420         db  0x41 ; 'A'
000000000000f421         db  0x0e ; '.'
000000000000f422         db  0x10 ; '.'
000000000000f423         db  0x41 ; 'A'
000000000000f424         db  0x0e ; '.'
000000000000f425         db  0x08 ; '.'
000000000000f426         db  0x41 ; 'A'
000000000000f427         db  0x0b ; '.'
000000000000f428         dd         0x0000001c                                  ; Length of the record
000000000000f42c         dd         0x00000974                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f430         db         0x10, 0x89, 2 dup (0xff)                    ; begin 0x7d40
000000000000f434         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x7dc0)
000000000000f438         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f439         db  0x41 ; 'A'
000000000000f43a         db  0x0e ; '.'
000000000000f43b         db  0x10 ; '.'
000000000000f43c         db  0x83 ; '.'
000000000000f43d         db  0x02 ; '.'
000000000000f43e         db  0x02 ; '.'
000000000000f43f         db  0x7a ; 'z'
000000000000f440         db  0x0e ; '.'
000000000000f441         db  0x08 ; '.'
000000000000f442         db  0x00 ; '.'
000000000000f443         db  0x00 ; '.'
000000000000f444         db  0x00 ; '.'
000000000000f445         db  0x00 ; '.'
000000000000f446         db  0x00 ; '.'
000000000000f447         db  0x00 ; '.'
000000000000f448         dd         0x00000018                                  ; Length of the record
000000000000f44c         dd         0x00000994                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f450         db         0x70, 0x89, 2 dup (0xff)                    ; begin 0x7dc0
000000000000f454         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x7dda)
000000000000f458         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f459         db  0x41 ; 'A'
000000000000f45a         db  0x0e ; '.'
000000000000f45b         db  0x10 ; '.'
000000000000f45c         db  0x83 ; '.'
000000000000f45d         db  0x02 ; '.'
000000000000f45e         db  0x53 ; 'S'
000000000000f45f         db  0x0a ; '.'
000000000000f460         db  0x0e ; '.'
000000000000f461         db  0x08 ; '.'
000000000000f462         db  0x41 ; 'A'
000000000000f463         db  0x0b ; '.'
000000000000f464         dd         0x00000010                                  ; Length of the record
000000000000f468         dd         0x000009b0                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f46c         db         0x74, 0x89, 2 dup (0xff)                    ; begin 0x7de0
000000000000f470         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x7e04)
000000000000f474         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f475         db  0x5f ; '_'
000000000000f476         db  0x0e ; '.'
000000000000f477         db  0x10 ; '.'
000000000000f478         dd         0x00000010                                  ; Length of the record
000000000000f47c         dd         0x000009c4                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f480         db         0x90, 0x89, 2 dup (0xff)                    ; begin 0x7e10
000000000000f484         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x7e12)
000000000000f488         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f489         align      4
000000000000f48c         dd         0x00000020                                  ; Length of the record
000000000000f490         dd         0x000009d8                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f494         db         0x8c, 0x89, 2 dup (0xff)                    ; begin 0x7e20
000000000000f498         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x7e56)
000000000000f49c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f49d         db  0x44 ; 'D'
000000000000f49e         db  0x0e ; '.'
000000000000f49f         db  0x10 ; '.'
000000000000f4a0         db  0x83 ; '.'
000000000000f4a1         db  0x02 ; '.'
000000000000f4a2         db  0x5d ; ']'
000000000000f4a3         db  0x0a ; '.'
000000000000f4a4         db  0x0e ; '.'
000000000000f4a5         db  0x08 ; '.'
000000000000f4a6         db  0x47 ; 'G'
000000000000f4a7         db  0x0b ; '.'
000000000000f4a8         db  0x48 ; 'H'
000000000000f4a9         db  0x0a ; '.'
000000000000f4aa         db  0x0e ; '.'
000000000000f4ab         db  0x08 ; '.'
000000000000f4ac         db  0x41 ; 'A'
000000000000f4ad         db  0x0b ; '.'
000000000000f4ae         db  0x00 ; '.'
000000000000f4af         db  0x00 ; '.'
000000000000f4b0         dd         0x00000010                                  ; Length of the record
000000000000f4b4         dd         0x000009fc                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f4b8         db         0xa8, 0x89, 2 dup (0xff)                    ; begin 0x7e60
000000000000f4bc         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x7e84)
000000000000f4c0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f4c1         db  0x5f ; '_'
000000000000f4c2         db  0x0e ; '.'
000000000000f4c3         db  0x10 ; '.'
000000000000f4c4         dd         0x00000014                                  ; Length of the record
000000000000f4c8         dd         0x00000a10                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f4cc         db         0xc4, 0x89, 2 dup (0xff)                    ; begin 0x7e90
000000000000f4d0         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x7f12)
000000000000f4d4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f4d5         db  0x02 ; '.'
000000000000f4d6         db  0x5f ; '_'
000000000000f4d7         db  0x0e ; '.'
000000000000f4d8         db  0x10 ; '.'
000000000000f4d9         db  0x49 ; 'I'
000000000000f4da         db  0x0e ; '.'
000000000000f4db         db  0x08 ; '.'
000000000000f4dc         dd         0x00000014                                  ; Length of the record
000000000000f4e0         dd         0x00000a28                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f4e4         db         0x3c, 0x8a, 2 dup (0xff)                    ; begin 0x7f20
000000000000f4e8         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x7f6a)
000000000000f4ec         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f4ed         db  0x02 ; '.'
000000000000f4ee         db  0x45 ; 'E'
000000000000f4ef         db  0x0e ; '.'
000000000000f4f0         db  0x10 ; '.'
000000000000f4f1         db  0x00 ; '.'
000000000000f4f2         db  0x00 ; '.'
000000000000f4f3         db  0x00 ; '.'
000000000000f4f4         dd         0x00000018                                  ; Length of the record
000000000000f4f8         dd         0x00000a40                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f4fc         db         0x74, 0x8a, 2 dup (0xff)                    ; begin 0x7f70
000000000000f500         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x7f87)
000000000000f504         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f505         db  0x41 ; 'A'
000000000000f506         db  0x0e ; '.'
000000000000f507         db  0x10 ; '.'
000000000000f508         db  0x83 ; '.'
000000000000f509         db  0x02 ; '.'
000000000000f50a         db  0x51 ; 'Q'
000000000000f50b         db  0x0e ; '.'
000000000000f50c         db  0x08 ; '.'
000000000000f50d         db  0x00 ; '.'
000000000000f50e         db  0x00 ; '.'
000000000000f50f         db  0x00 ; '.'
000000000000f510         dd         0x00000018                                  ; Length of the record
000000000000f514         dd         0x00000a5c                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f518         db         0x78, 0x8a, 2 dup (0xff)                    ; begin 0x7f90
000000000000f51c         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x7fbe)
000000000000f520         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f521         db  0x47 ; 'G'
000000000000f522         db  0x0e ; '.'
000000000000f523         db  0x10 ; '.'
000000000000f524         db  0x61 ; 'a'
000000000000f525         db  0x0a ; '.'
000000000000f526         db  0x0e ; '.'
000000000000f527         db  0x08 ; '.'
000000000000f528         db  0x41 ; 'A'
000000000000f529         db  0x0b ; '.'
000000000000f52a         db  0x00 ; '.'
000000000000f52b         db  0x00 ; '.'
000000000000f52c         dd         0x00000024                                  ; Length of the record
000000000000f530         dd         0x00000a78                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f534         db         0x8c, 0x8a, 2 dup (0xff)                    ; begin 0x7fc0
000000000000f538         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x7fe8)
000000000000f53c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f53d         db  0x41 ; 'A'
000000000000f53e         db  0x0e ; '.'
000000000000f53f         db  0x10 ; '.'
000000000000f540         db  0x86 ; '.'
000000000000f541         db  0x02 ; '.'
000000000000f542         db  0x41 ; 'A'
000000000000f543         db  0x0e ; '.'
000000000000f544         db  0x18 ; '.'
000000000000f545         db  0x83 ; '.'
000000000000f546         db  0x03 ; '.'
000000000000f547         db  0x4d ; 'M'
000000000000f548         db  0x0e ; '.'
000000000000f549         db  0x20 ; ' '
000000000000f54a         db  0x49 ; 'I'
000000000000f54b         db  0x0e ; '.'
000000000000f54c         db  0x18 ; '.'
000000000000f54d         db  0x47 ; 'G'
000000000000f54e         db  0x0e ; '.'
000000000000f54f         db  0x10 ; '.'
000000000000f550         db  0x41 ; 'A'
000000000000f551         db  0x0e ; '.'
000000000000f552         db  0x08 ; '.'
000000000000f553         db  0x00 ; '.'
000000000000f554         dd         0x00000018                                  ; Length of the record
000000000000f558         dd         0x00000aa0                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f55c         db         0x94, 0x8a, 2 dup (0xff)                    ; begin 0x7ff0
000000000000f560         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x8003)
000000000000f564         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f565         db  0x41 ; 'A'
000000000000f566         db  0x0e ; '.'
000000000000f567         db  0x10 ; '.'
000000000000f568         db  0x83 ; '.'
000000000000f569         db  0x02 ; '.'
000000000000f56a         db  0x50 ; 'P'
000000000000f56b         db  0x0e ; '.'
000000000000f56c         db  0x08 ; '.'
000000000000f56d         db  0x00 ; '.'
000000000000f56e         db  0x00 ; '.'
000000000000f56f         db  0x00 ; '.'
000000000000f570         dd         0x00000014                                  ; Length of the record
000000000000f574         dd         0x00000abc                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f578         db         0x98, 0x8a, 2 dup (0xff)                    ; begin 0x8010
000000000000f57c         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x8045)
000000000000f580         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f581         db  0x4b ; 'K'
000000000000f582         db  0x0e ; '.'
000000000000f583         db  0x10 ; '.'
000000000000f584         db  0x00 ; '.'
000000000000f585         db  0x00 ; '.'
000000000000f586         db  0x00 ; '.'
000000000000f587         db  0x00 ; '.'
000000000000f588         dd         0x00000048                                  ; Length of the record
000000000000f58c         dd         0x00000ad4                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f590         db         0xc0, 0x8a, 2 dup (0xff)                    ; begin 0x8050
000000000000f594         db         0x00, 0x01, 2 dup (0x00)                    ; length 0x100 (end at 0x8150)
000000000000f598         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f599         db  0x42 ; 'B'
000000000000f59a         db  0x0e ; '.'
000000000000f59b         db  0x10 ; '.'
000000000000f59c         db  0x8f ; '.'
000000000000f59d         db  0x02 ; '.'
000000000000f59e         db  0x42 ; 'B'
000000000000f59f         db  0x0e ; '.'
000000000000f5a0         db  0x18 ; '.'
000000000000f5a1         db  0x8e ; '.'
000000000000f5a2         db  0x03 ; '.'
000000000000f5a3         db  0x45 ; 'E'
000000000000f5a4         db  0x0e ; '.'
000000000000f5a5         db  0x20 ; ' '
000000000000f5a6         db  0x8d ; '.'
000000000000f5a7         db  0x04 ; '.'
000000000000f5a8         db  0x42 ; 'B'
000000000000f5a9         db  0x0e ; '.'
000000000000f5aa         db  0x28 ; '('
000000000000f5ab         db  0x8c ; '.'
000000000000f5ac         db  0x05 ; '.'
000000000000f5ad         db  0x44 ; 'D'
000000000000f5ae         db  0x0e ; '.'
000000000000f5af         db  0x30 ; '0'
000000000000f5b0         db  0x86 ; '.'
000000000000f5b1         db  0x06 ; '.'
000000000000f5b2         db  0x41 ; 'A'
000000000000f5b3         db  0x0e ; '.'
000000000000f5b4         db  0x38 ; '8'
000000000000f5b5         db  0x83 ; '.'
000000000000f5b6         db  0x07 ; '.'
000000000000f5b7         db  0x4e ; 'N'
000000000000f5b8         db  0x0e ; '.'
000000000000f5b9         db  0x50 ; 'P'
000000000000f5ba         db  0x02 ; '.'
000000000000f5bb         db  0x9d ; '.'
000000000000f5bc         db  0x0a ; '.'
000000000000f5bd         db  0x0e ; '.'
000000000000f5be         db  0x38 ; '8'
000000000000f5bf         db  0x41 ; 'A'
000000000000f5c0         db  0x0e ; '.'
000000000000f5c1         db  0x30 ; '0'
000000000000f5c2         db  0x41 ; 'A'
000000000000f5c3         db  0x0e ; '.'
000000000000f5c4         db  0x28 ; '('
000000000000f5c5         db  0x42 ; 'B'
000000000000f5c6         db  0x0e ; '.'
000000000000f5c7         db  0x20 ; ' '
000000000000f5c8         db  0x42 ; 'B'
000000000000f5c9         db  0x0e ; '.'
000000000000f5ca         db  0x18 ; '.'
000000000000f5cb         db  0x42 ; 'B'
000000000000f5cc         db  0x0e ; '.'
000000000000f5cd         db  0x10 ; '.'
000000000000f5ce         db  0x42 ; 'B'
000000000000f5cf         db  0x0e ; '.'
000000000000f5d0         db  0x08 ; '.'
000000000000f5d1         db  0x4b ; 'K'
000000000000f5d2         db  0x0b ; '.'
000000000000f5d3         db  0x00 ; '.'
000000000000f5d4         dd         0x00000018                                  ; Length of the record
000000000000f5d8         dd         0x00000b20                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f5dc         db         0x74, 0x8b, 2 dup (0xff)                    ; begin 0x8150
000000000000f5e0         db         0x21, 3 dup (0x00)                          ; length 0x21 (end at 0x8171)
000000000000f5e4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f5e5         db  0x44 ; 'D'
000000000000f5e6         db  0x0e ; '.'
000000000000f5e7         db  0x18 ; '.'
000000000000f5e8         db  0x42 ; 'B'
000000000000f5e9         db  0x0e ; '.'
000000000000f5ea         db  0x20 ; ' '
000000000000f5eb         db  0x5a ; 'Z'
000000000000f5ec         db  0x0e ; '.'
000000000000f5ed         db  0x08 ; '.'
000000000000f5ee         db  0x00 ; '.'
000000000000f5ef         db  0x00 ; '.'
000000000000f5f0         dd         0x0000004c                                  ; Length of the record
000000000000f5f4         dd         0x00000b3c                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f5f8         db         0x88, 0x8b, 2 dup (0xff)                    ; begin 0x8180
000000000000f5fc         db         0xb3, 0x06, 2 dup (0x00)                    ; length 0x6b3 (end at 0x8833)
000000000000f600         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f601         db  0x42 ; 'B'
000000000000f602         db  0x0e ; '.'
000000000000f603         db  0x10 ; '.'
000000000000f604         db  0x8f ; '.'
000000000000f605         db  0x02 ; '.'
000000000000f606         db  0x42 ; 'B'
000000000000f607         db  0x0e ; '.'
000000000000f608         db  0x18 ; '.'
000000000000f609         db  0x8e ; '.'
000000000000f60a         db  0x03 ; '.'
000000000000f60b         db  0x42 ; 'B'
000000000000f60c         db  0x0e ; '.'
000000000000f60d         db  0x20 ; ' '
000000000000f60e         db  0x8d ; '.'
000000000000f60f         db  0x04 ; '.'
000000000000f610         db  0x42 ; 'B'
000000000000f611         db  0x0e ; '.'
000000000000f612         db  0x28 ; '('
000000000000f613         db  0x8c ; '.'
000000000000f614         db  0x05 ; '.'
000000000000f615         db  0x41 ; 'A'
000000000000f616         db  0x0e ; '.'
000000000000f617         db  0x30 ; '0'
000000000000f618         db  0x86 ; '.'
000000000000f619         db  0x06 ; '.'
000000000000f61a         db  0x41 ; 'A'
000000000000f61b         db  0x0e ; '.'
000000000000f61c         db  0x38 ; '8'
000000000000f61d         db  0x83 ; '.'
000000000000f61e         db  0x07 ; '.'
000000000000f61f         db  0x44 ; 'D'
000000000000f620         db  0x0e ; '.'
000000000000f621         db  0x60 ; '`'
000000000000f622         db  0x02 ; '.'
000000000000f623         db  0x94 ; '.'
000000000000f624         db  0x0a ; '.'
000000000000f625         db  0x0e ; '.'
000000000000f626         db  0x38 ; '8'
000000000000f627         db  0x41 ; 'A'
000000000000f628         db  0x0e ; '.'
000000000000f629         db  0x30 ; '0'
000000000000f62a         db  0x41 ; 'A'
000000000000f62b         db  0x0e ; '.'
000000000000f62c         db  0x28 ; '('
000000000000f62d         db  0x42 ; 'B'
000000000000f62e         db  0x0e ; '.'
000000000000f62f         db  0x20 ; ' '
000000000000f630         db  0x42 ; 'B'
000000000000f631         db  0x0e ; '.'
000000000000f632         db  0x18 ; '.'
000000000000f633         db  0x42 ; 'B'
000000000000f634         db  0x0e ; '.'
000000000000f635         db  0x10 ; '.'
000000000000f636         db  0x42 ; 'B'
000000000000f637         db  0x0e ; '.'
000000000000f638         db  0x08 ; '.'
000000000000f639         db  0x44 ; 'D'
000000000000f63a         db  0x0b ; '.'
000000000000f63b         db  0x00 ; '.'
000000000000f63c         db  0x00 ; '.'
000000000000f63d         db  0x00 ; '.'
000000000000f63e         db  0x00 ; '.'
000000000000f63f         db  0x00 ; '.'
000000000000f640         dd         0x0000004c                                  ; Length of the record
000000000000f644         dd         0x00000b8c                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f648         db         0xf8, 0x91, 2 dup (0xff)                    ; begin 0x8840
000000000000f64c         db         0x1c, 0x04, 2 dup (0x00)                    ; length 0x41c (end at 0x8c5c)
000000000000f650         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f651         db  0x42 ; 'B'
000000000000f652         db  0x0e ; '.'
000000000000f653         db  0x10 ; '.'
000000000000f654         db  0x8f ; '.'
000000000000f655         db  0x02 ; '.'
000000000000f656         db  0x42 ; 'B'
000000000000f657         db  0x0e ; '.'
000000000000f658         db  0x18 ; '.'
000000000000f659         db  0x8e ; '.'
000000000000f65a         db  0x03 ; '.'
000000000000f65b         db  0x42 ; 'B'
000000000000f65c         db  0x0e ; '.'
000000000000f65d         db  0x20 ; ' '
000000000000f65e         db  0x8d ; '.'
000000000000f65f         db  0x04 ; '.'
000000000000f660         db  0x42 ; 'B'
000000000000f661         db  0x0e ; '.'
000000000000f662         db  0x28 ; '('
000000000000f663         db  0x8c ; '.'
000000000000f664         db  0x05 ; '.'
000000000000f665         db  0x41 ; 'A'
000000000000f666         db  0x0e ; '.'
000000000000f667         db  0x30 ; '0'
000000000000f668         db  0x86 ; '.'
000000000000f669         db  0x06 ; '.'
000000000000f66a         db  0x41 ; 'A'
000000000000f66b         db  0x0e ; '.'
000000000000f66c         db  0x38 ; '8'
000000000000f66d         db  0x83 ; '.'
000000000000f66e         db  0x07 ; '.'
000000000000f66f         db  0x44 ; 'D'
000000000000f670         db  0x0e ; '.'
000000000000f671         db  0x60 ; '`'
000000000000f672         db  0x02 ; '.'
000000000000f673         db  0xe9 ; '.'
000000000000f674         db  0x0a ; '.'
000000000000f675         db  0x0e ; '.'
000000000000f676         db  0x38 ; '8'
000000000000f677         db  0x41 ; 'A'
000000000000f678         db  0x0e ; '.'
000000000000f679         db  0x30 ; '0'
000000000000f67a         db  0x41 ; 'A'
000000000000f67b         db  0x0e ; '.'
000000000000f67c         db  0x28 ; '('
000000000000f67d         db  0x42 ; 'B'
000000000000f67e         db  0x0e ; '.'
000000000000f67f         db  0x20 ; ' '
000000000000f680         db  0x42 ; 'B'
000000000000f681         db  0x0e ; '.'
000000000000f682         db  0x18 ; '.'
000000000000f683         db  0x42 ; 'B'
000000000000f684         db  0x0e ; '.'
000000000000f685         db  0x10 ; '.'
000000000000f686         db  0x42 ; 'B'
000000000000f687         db  0x0e ; '.'
000000000000f688         db  0x08 ; '.'
000000000000f689         db  0x47 ; 'G'
000000000000f68a         db  0x0b ; '.'
000000000000f68b         db  0x00 ; '.'
000000000000f68c         db  0x00 ; '.'
000000000000f68d         db  0x00 ; '.'
000000000000f68e         db  0x00 ; '.'
000000000000f68f         db  0x00 ; '.'
000000000000f690         dd         0x00000034                                  ; Length of the record
000000000000f694         dd         0x00000bdc                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f698         db         0xc8, 0x95, 2 dup (0xff)                    ; begin 0x8c60
000000000000f69c         db         0x7e, 0x02, 2 dup (0x00)                    ; length 0x27e (end at 0x8ede)
000000000000f6a0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f6a1         db  0x42 ; 'B'
000000000000f6a2         db  0x0e ; '.'
000000000000f6a3         db  0x10 ; '.'
000000000000f6a4         db  0x8c ; '.'
000000000000f6a5         db  0x02 ; '.'
000000000000f6a6         db  0x41 ; 'A'
000000000000f6a7         db  0x0e ; '.'
000000000000f6a8         db  0x18 ; '.'
000000000000f6a9         db  0x86 ; '.'
000000000000f6aa         db  0x03 ; '.'
000000000000f6ab         db  0x43 ; 'C'
000000000000f6ac         db  0x0e ; '.'
000000000000f6ad         db  0x20 ; ' '
000000000000f6ae         db  0x83 ; '.'
000000000000f6af         db  0x04 ; '.'
000000000000f6b0         db  0x44 ; 'D'
000000000000f6b1         db  0x0e ; '.'
000000000000f6b2         db  0x70 ; 'p'
000000000000f6b3         db  0x02 ; '.'
000000000000f6b4         db  0xf0 ; '.'
000000000000f6b5         db  0x0a ; '.'
000000000000f6b6         db  0x0e ; '.'
000000000000f6b7         db  0x20 ; ' '
000000000000f6b8         db  0x41 ; 'A'
000000000000f6b9         db  0x0e ; '.'
000000000000f6ba         db  0x18 ; '.'
000000000000f6bb         db  0x41 ; 'A'
000000000000f6bc         db  0x0e ; '.'
000000000000f6bd         db  0x10 ; '.'
000000000000f6be         db  0x42 ; 'B'
000000000000f6bf         db  0x0e ; '.'
000000000000f6c0         db  0x08 ; '.'
000000000000f6c1         db  0x42 ; 'B'
000000000000f6c2         db  0x0b ; '.'
000000000000f6c3         db  0x00 ; '.'
000000000000f6c4         db  0x00 ; '.'
000000000000f6c5         db  0x00 ; '.'
000000000000f6c6         db  0x00 ; '.'
000000000000f6c7         db  0x00 ; '.'
000000000000f6c8         dd         0x0000003c                                  ; Length of the record
000000000000f6cc         dd         0x00000c14                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f6d0         db         0x10, 0x98, 2 dup (0xff)                    ; begin 0x8ee0
000000000000f6d4         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x8f63)
000000000000f6d8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f6d9         db  0x42 ; 'B'
000000000000f6da         db  0x0e ; '.'
000000000000f6db         db  0x10 ; '.'
000000000000f6dc         db  0x8d ; '.'
000000000000f6dd         db  0x02 ; '.'
000000000000f6de         db  0x42 ; 'B'
000000000000f6df         db  0x0e ; '.'
000000000000f6e0         db  0x18 ; '.'
000000000000f6e1         db  0x8c ; '.'
000000000000f6e2         db  0x03 ; '.'
000000000000f6e3         db  0x44 ; 'D'
000000000000f6e4         db  0x0e ; '.'
000000000000f6e5         db  0x20 ; ' '
000000000000f6e6         db  0x86 ; '.'
000000000000f6e7         db  0x04 ; '.'
000000000000f6e8         db  0x41 ; 'A'
000000000000f6e9         db  0x0e ; '.'
000000000000f6ea         db  0x28 ; '('
000000000000f6eb         db  0x83 ; '.'
000000000000f6ec         db  0x05 ; '.'
000000000000f6ed         db  0x4a ; 'J'
000000000000f6ee         db  0x0e ; '.'
000000000000f6ef         db  0x40 ; '@'
000000000000f6f0         db  0x02 ; '.'
000000000000f6f1         db  0x64 ; 'd'
000000000000f6f2         db  0x0a ; '.'
000000000000f6f3         db  0x0e ; '.'
000000000000f6f4         db  0x28 ; '('
000000000000f6f5         db  0x41 ; 'A'
000000000000f6f6         db  0x0e ; '.'
000000000000f6f7         db  0x20 ; ' '
000000000000f6f8         db  0x41 ; 'A'
000000000000f6f9         db  0x0e ; '.'
000000000000f6fa         db  0x18 ; '.'
000000000000f6fb         db  0x42 ; 'B'
000000000000f6fc         db  0x0e ; '.'
000000000000f6fd         db  0x10 ; '.'
000000000000f6fe         db  0x42 ; 'B'
000000000000f6ff         db  0x0e ; '.'
000000000000f700         db  0x08 ; '.'
000000000000f701         db  0x41 ; 'A'
000000000000f702         db  0x0b ; '.'
000000000000f703         db  0x00 ; '.'
000000000000f704         db  0x00 ; '.'
000000000000f705         db  0x00 ; '.'
000000000000f706         db  0x00 ; '.'
000000000000f707         db  0x00 ; '.'
000000000000f708         dd         0x00000024                                  ; Length of the record
000000000000f70c         dd         0x00000c54                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f710         db         0x60, 0x98, 2 dup (0xff)                    ; begin 0x8f70
000000000000f714         db         0x7e, 3 dup (0x00)                          ; length 0x7e (end at 0x8fee)
000000000000f718         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f719         db  0x41 ; 'A'
000000000000f71a         db  0x0e ; '.'
000000000000f71b         db  0x10 ; '.'
000000000000f71c         db  0x83 ; '.'
000000000000f71d         db  0x02 ; '.'
000000000000f71e         db  0x4c ; 'L'
000000000000f71f         db  0x0e ; '.'
000000000000f720         db  0x20 ; ' '
000000000000f721         db  0x02 ; '.'
000000000000f722         db  0x49 ; 'I'
000000000000f723         db  0x0a ; '.'
000000000000f724         db  0x0e ; '.'
000000000000f725         db  0x10 ; '.'
000000000000f726         db  0x41 ; 'A'
000000000000f727         db  0x0e ; '.'
000000000000f728         db  0x08 ; '.'
000000000000f729         db  0x41 ; 'A'
000000000000f72a         db  0x0b ; '.'
000000000000f72b         db  0x00 ; '.'
000000000000f72c         db  0x00 ; '.'
000000000000f72d         db  0x00 ; '.'
000000000000f72e         db  0x00 ; '.'
000000000000f72f         db  0x00 ; '.'
000000000000f730         dd         0x0000004c                                  ; Length of the record
000000000000f734         dd         0x00000c7c                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f738         db         0xb8, 0x98, 2 dup (0xff)                    ; begin 0x8ff0
000000000000f73c         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x906d)
000000000000f740         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f741         db  0x42 ; 'B'
000000000000f742         db  0x0e ; '.'
000000000000f743         db  0x10 ; '.'
000000000000f744         db  0x8c ; '.'
000000000000f745         db  0x02 ; '.'
000000000000f746         db  0x41 ; 'A'
000000000000f747         db  0x0e ; '.'
000000000000f748         db  0x18 ; '.'
000000000000f749         db  0x86 ; '.'
000000000000f74a         db  0x03 ; '.'
000000000000f74b         db  0x44 ; 'D'
000000000000f74c         db  0x0e ; '.'
000000000000f74d         db  0x20 ; ' '
000000000000f74e         db  0x83 ; '.'
000000000000f74f         db  0x04 ; '.'
000000000000f750         db  0x69 ; 'i'
000000000000f751         db  0x0a ; '.'
000000000000f752         db  0x0e ; '.'
000000000000f753         db  0x18 ; '.'
000000000000f754         db  0x41 ; 'A'
000000000000f755         db  0x0e ; '.'
000000000000f756         db  0x10 ; '.'
000000000000f757         db  0x42 ; 'B'
000000000000f758         db  0x0e ; '.'
000000000000f759         db  0x08 ; '.'
000000000000f75a         db  0x45 ; 'E'
000000000000f75b         db  0x0b ; '.'
000000000000f75c         db  0x55 ; 'U'
000000000000f75d         db  0x0a ; '.'
000000000000f75e         db  0x0e ; '.'
000000000000f75f         db  0x18 ; '.'
000000000000f760         db  0x41 ; 'A'
000000000000f761         db  0x0e ; '.'
000000000000f762         db  0x10 ; '.'
000000000000f763         db  0x42 ; 'B'
000000000000f764         db  0x0e ; '.'
000000000000f765         db  0x08 ; '.'
000000000000f766         db  0x48 ; 'H'
000000000000f767         db  0x0b ; '.'
000000000000f768         db  0x41 ; 'A'
000000000000f769         db  0x0a ; '.'
000000000000f76a         db  0x0e ; '.'
000000000000f76b         db  0x18 ; '.'
000000000000f76c         db  0x46 ; 'F'
000000000000f76d         db  0x0e ; '.'
000000000000f76e         db  0x10 ; '.'
000000000000f76f         db  0x42 ; 'B'
000000000000f770         db  0x0e ; '.'
000000000000f771         db  0x08 ; '.'
000000000000f772         db  0x47 ; 'G'
000000000000f773         db  0x0b ; '.'
000000000000f774         db  0x49 ; 'I'
000000000000f775         db  0x0e ; '.'
000000000000f776         db  0x18 ; '.'
000000000000f777         db  0x41 ; 'A'
000000000000f778         db  0x0e ; '.'
000000000000f779         db  0x10 ; '.'
000000000000f77a         db  0x42 ; 'B'
000000000000f77b         db  0x0e ; '.'
000000000000f77c         db  0x08 ; '.'
000000000000f77d         db  0x00 ; '.'
000000000000f77e         db  0x00 ; '.'
000000000000f77f         db  0x00 ; '.'
000000000000f780         dd         0x0000001c                                  ; Length of the record
000000000000f784         dd         0x00000ccc                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f788         db         0xe8, 0x98, 2 dup (0xff)                    ; begin 0x9070
000000000000f78c         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x90d0)
000000000000f790         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f791         db  0x44 ; 'D'
000000000000f792         db  0x0e ; '.'
000000000000f793         db  0x10 ; '.'
000000000000f794         db  0x75 ; 'u'
000000000000f795         db  0x0a ; '.'
000000000000f796         db  0x0e ; '.'
000000000000f797         db  0x08 ; '.'
000000000000f798         db  0x47 ; 'G'
000000000000f799         db  0x0b ; '.'
000000000000f79a         db  0x5f ; '_'
000000000000f79b         db  0x0e ; '.'
000000000000f79c         db  0x08 ; '.'
000000000000f79d         db  0x00 ; '.'
000000000000f79e         db  0x00 ; '.'
000000000000f79f         db  0x00 ; '.'
000000000000f7a0         dd         0x0000001c                                  ; Length of the record
000000000000f7a4         dd         0x00000cec                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f7a8         db         0x28, 0x99, 2 dup (0xff)                    ; begin 0x90d0
000000000000f7ac         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x910c)
000000000000f7b0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f7b1         db  0x44 ; 'D'
000000000000f7b2         db  0x0e ; '.'
000000000000f7b3         db  0x10 ; '.'
000000000000f7b4         db  0x61 ; 'a'
000000000000f7b5         db  0x0a ; '.'
000000000000f7b6         db  0x0e ; '.'
000000000000f7b7         db  0x08 ; '.'
000000000000f7b8         db  0x4b ; 'K'
000000000000f7b9         db  0x0b ; '.'
000000000000f7ba         db  0x4b ; 'K'
000000000000f7bb         db  0x0e ; '.'
000000000000f7bc         db  0x08 ; '.'
000000000000f7bd         db  0x00 ; '.'
000000000000f7be         db  0x00 ; '.'
000000000000f7bf         db  0x00 ; '.'
000000000000f7c0         dd         0x00000034                                  ; Length of the record
000000000000f7c4         dd         0x00000d0c                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f7c8         db         0x48, 0x99, 2 dup (0xff)                    ; begin 0x9110
000000000000f7cc         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x918b)
000000000000f7d0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f7d1         db  0x42 ; 'B'
000000000000f7d2         db  0x0e ; '.'
000000000000f7d3         db  0x10 ; '.'
000000000000f7d4         db  0x8c ; '.'
000000000000f7d5         db  0x02 ; '.'
000000000000f7d6         db  0x41 ; 'A'
000000000000f7d7         db  0x0e ; '.'
000000000000f7d8         db  0x18 ; '.'
000000000000f7d9         db  0x86 ; '.'
000000000000f7da         db  0x03 ; '.'
000000000000f7db         db  0x41 ; 'A'
000000000000f7dc         db  0x0e ; '.'
000000000000f7dd         db  0x20 ; ' '
000000000000f7de         db  0x83 ; '.'
000000000000f7df         db  0x04 ; '.'
000000000000f7e0         db  0x7d ; '}'
000000000000f7e1         db  0x0a ; '.'
000000000000f7e2         db  0x0e ; '.'
000000000000f7e3         db  0x18 ; '.'
000000000000f7e4         db  0x41 ; 'A'
000000000000f7e5         db  0x0e ; '.'
000000000000f7e6         db  0x10 ; '.'
000000000000f7e7         db  0x42 ; 'B'
000000000000f7e8         db  0x0e ; '.'
000000000000f7e9         db  0x08 ; '.'
000000000000f7ea         db  0x44 ; 'D'
000000000000f7eb         db  0x0b ; '.'
000000000000f7ec         db  0x60 ; '`'
000000000000f7ed         db  0x0a ; '.'
000000000000f7ee         db  0x0e ; '.'
000000000000f7ef         db  0x18 ; '.'
000000000000f7f0         db  0x41 ; 'A'
000000000000f7f1         db  0x0e ; '.'
000000000000f7f2         db  0x10 ; '.'
000000000000f7f3         db  0x42 ; 'B'
000000000000f7f4         db  0x0e ; '.'
000000000000f7f5         db  0x08 ; '.'
000000000000f7f6         db  0x45 ; 'E'
000000000000f7f7         db  0x0b ; '.'
000000000000f7f8         dd         0x0000001c                                  ; Length of the record
000000000000f7fc         dd         0x00000d44                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f800         db         0x90, 0x99, 2 dup (0xff)                    ; begin 0x9190
000000000000f804         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x91d0)
000000000000f808         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f809         db  0x44 ; 'D'
000000000000f80a         db  0x0e ; '.'
000000000000f80b         db  0x10 ; '.'
000000000000f80c         db  0x83 ; '.'
000000000000f80d         db  0x02 ; '.'
000000000000f80e         db  0x5a ; 'Z'
000000000000f80f         db  0x0a ; '.'
000000000000f810         db  0x0e ; '.'
000000000000f811         db  0x08 ; '.'
000000000000f812         db  0x4a ; 'J'
000000000000f813         db  0x0b ; '.'
000000000000f814         db  0x53 ; 'S'
000000000000f815         db  0x0e ; '.'
000000000000f816         db  0x08 ; '.'
000000000000f817         db  0x00 ; '.'
000000000000f818         dd         0x0000002c                                  ; Length of the record
000000000000f81c         dd         0x00000d64                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f820         db         0xb0, 0x99, 2 dup (0xff)                    ; begin 0x91d0
000000000000f824         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x9227)
000000000000f828         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f829         db  0x63 ; 'c'
000000000000f82a         db  0x0e ; '.'
000000000000f82b         db  0x10 ; '.'
000000000000f82c         db  0x8c ; '.'
000000000000f82d         db  0x02 ; '.'
000000000000f82e         db  0x41 ; 'A'
000000000000f82f         db  0x0e ; '.'
000000000000f830         db  0x18 ; '.'
000000000000f831         db  0x86 ; '.'
000000000000f832         db  0x03 ; '.'
000000000000f833         db  0x44 ; 'D'
000000000000f834         db  0x0e ; '.'
000000000000f835         db  0x20 ; ' '
000000000000f836         db  0x83 ; '.'
000000000000f837         db  0x04 ; '.'
000000000000f838         db  0x6b ; 'k'
000000000000f839         db  0x0e ; '.'
000000000000f83a         db  0x18 ; '.'
000000000000f83b         db  0x41 ; 'A'
000000000000f83c         db  0x0e ; '.'
000000000000f83d         db  0x10 ; '.'
000000000000f83e         db  0x42 ; 'B'
000000000000f83f         db  0x0e ; '.'
000000000000f840         db  0x08 ; '.'
000000000000f841         db  0x00 ; '.'
000000000000f842         db  0x00 ; '.'
000000000000f843         db  0x00 ; '.'
000000000000f844         db  0x00 ; '.'
000000000000f845         db  0x00 ; '.'
000000000000f846         db  0x00 ; '.'
000000000000f847         db  0x00 ; '.'
000000000000f848         dd         0x0000002c                                  ; Length of the record
000000000000f84c         dd         0x00000d94                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f850         db         0xe0, 0x99, 2 dup (0xff)                    ; begin 0x9230
000000000000f854         db         0x1f, 0x11, 2 dup (0x00)                    ; length 0x111f (end at 0xa34f)
000000000000f858         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f859         db  0x41 ; 'A'
000000000000f85a         db  0x0e ; '.'
000000000000f85b         db  0x10 ; '.'
000000000000f85c         db  0x86 ; '.'
000000000000f85d         db  0x02 ; '.'
000000000000f85e         db  0x43 ; 'C'
000000000000f85f         db  0x0d ; '.'
000000000000f860         db  0x06 ; '.'
000000000000f861         db  0x48 ; 'H'
000000000000f862         db  0x8f ; '.'
000000000000f863         db  0x03 ; '.'
000000000000f864         db  0x8e ; '.'
000000000000f865         db  0x04 ; '.'
000000000000f866         db  0x8d ; '.'
000000000000f867         db  0x05 ; '.'
000000000000f868         db  0x8c ; '.'
000000000000f869         db  0x06 ; '.'
000000000000f86a         db  0x48 ; 'H'
000000000000f86b         db  0x83 ; '.'
000000000000f86c         db  0x07 ; '.'
000000000000f86d         db  0x03 ; '.'
000000000000f86e         db  0xef ; '.'
000000000000f86f         db  0x01 ; '.'
000000000000f870         db  0x0a ; '.'
000000000000f871         db  0x0c ; '.'
000000000000f872         db  0x07 ; '.'
000000000000f873         db  0x08 ; '.'
000000000000f874         db  0x45 ; 'E'
000000000000f875         db  0x0b ; '.'
000000000000f876         db  0x00 ; '.'
000000000000f877         db  0x00 ; '.'
000000000000f878         dd         0x00000014                                  ; Length of the record
000000000000f87c         dd         0x00000dc4                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f880         db         0xd0, 0xaa, 2 dup (0xff)                    ; begin 0xa350
000000000000f884         db         0xfe, 0x01, 2 dup (0x00)                    ; length 0x1fe (end at 0xa54e)
000000000000f888         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f889         align      16
000000000000f890         dd         0x0000004c                                  ; Length of the record
000000000000f894         dd         0x00000ddc                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f898         db         0xb8, 0xac, 2 dup (0xff)                    ; begin 0xa550
000000000000f89c         db         0xec, 0x0c, 2 dup (0x00)                    ; length 0xcec (end at 0xb23c)
000000000000f8a0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f8a1         db  0x42 ; 'B'
000000000000f8a2         db  0x0e ; '.'
000000000000f8a3         db  0x10 ; '.'
000000000000f8a4         db  0x8f ; '.'
000000000000f8a5         db  0x02 ; '.'
000000000000f8a6         db  0x42 ; 'B'
000000000000f8a7         db  0x0e ; '.'
000000000000f8a8         db  0x18 ; '.'
000000000000f8a9         db  0x8e ; '.'
000000000000f8aa         db  0x03 ; '.'
000000000000f8ab         db  0x46 ; 'F'
000000000000f8ac         db  0x0e ; '.'
000000000000f8ad         db  0x20 ; ' '
000000000000f8ae         db  0x8d ; '.'
000000000000f8af         db  0x04 ; '.'
000000000000f8b0         db  0x42 ; 'B'
000000000000f8b1         db  0x0e ; '.'
000000000000f8b2         db  0x28 ; '('
000000000000f8b3         db  0x8c ; '.'
000000000000f8b4         db  0x05 ; '.'
000000000000f8b5         db  0x45 ; 'E'
000000000000f8b6         db  0x0e ; '.'
000000000000f8b7         db  0x30 ; '0'
000000000000f8b8         db  0x86 ; '.'
000000000000f8b9         db  0x06 ; '.'
000000000000f8ba         db  0x41 ; 'A'
000000000000f8bb         db  0x0e ; '.'
000000000000f8bc         db  0x38 ; '8'
000000000000f8bd         db  0x83 ; '.'
000000000000f8be         db  0x07 ; '.'
000000000000f8bf         db  0x52 ; 'R'
000000000000f8c0         db  0x0e ; '.'
000000000000f8c1         db  0x90 ; '.'
000000000000f8c2         db  0x01 ; '.'
000000000000f8c3         db  0x02 ; '.'
000000000000f8c4         db  0x82 ; '.'
000000000000f8c5         db  0x0a ; '.'
000000000000f8c6         db  0x0e ; '.'
000000000000f8c7         db  0x38 ; '8'
000000000000f8c8         db  0x41 ; 'A'
000000000000f8c9         db  0x0e ; '.'
000000000000f8ca         db  0x30 ; '0'
000000000000f8cb         db  0x41 ; 'A'
000000000000f8cc         db  0x0e ; '.'
000000000000f8cd         db  0x28 ; '('
000000000000f8ce         db  0x42 ; 'B'
000000000000f8cf         db  0x0e ; '.'
000000000000f8d0         db  0x20 ; ' '
000000000000f8d1         db  0x42 ; 'B'
000000000000f8d2         db  0x0e ; '.'
000000000000f8d3         db  0x18 ; '.'
000000000000f8d4         db  0x42 ; 'B'
000000000000f8d5         db  0x0e ; '.'
000000000000f8d6         db  0x10 ; '.'
000000000000f8d7         db  0x42 ; 'B'
000000000000f8d8         db  0x0e ; '.'
000000000000f8d9         db  0x08 ; '.'
000000000000f8da         db  0x48 ; 'H'
000000000000f8db         db  0x0b ; '.'
000000000000f8dc         db  0x00 ; '.'
000000000000f8dd         db  0x00 ; '.'
000000000000f8de         db  0x00 ; '.'
000000000000f8df         db  0x00 ; '.'
000000000000f8e0         dd         0x00000044                                  ; Length of the record
000000000000f8e4         dd         0x00000e2c                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f8e8         db         0x58, 0xb9, 2 dup (0xff)                    ; begin 0xb240
000000000000f8ec         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0xb2a5)
000000000000f8f0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f8f1         db  0x42 ; 'B'
000000000000f8f2         db  0x0e ; '.'
000000000000f8f3         db  0x10 ; '.'
000000000000f8f4         db  0x8f ; '.'
000000000000f8f5         db  0x02 ; '.'
000000000000f8f6         db  0x42 ; 'B'
000000000000f8f7         db  0x0e ; '.'
000000000000f8f8         db  0x18 ; '.'
000000000000f8f9         db  0x8e ; '.'
000000000000f8fa         db  0x03 ; '.'
000000000000f8fb         db  0x45 ; 'E'
000000000000f8fc         db  0x0e ; '.'
000000000000f8fd         db  0x20 ; ' '
000000000000f8fe         db  0x8d ; '.'
000000000000f8ff         db  0x04 ; '.'
000000000000f900         db  0x42 ; 'B'
000000000000f901         db  0x0e ; '.'
000000000000f902         db  0x28 ; '('
000000000000f903         db  0x8c ; '.'
000000000000f904         db  0x05 ; '.'
000000000000f905         db  0x48 ; 'H'
000000000000f906         db  0x0e ; '.'
000000000000f907         db  0x30 ; '0'
000000000000f908         db  0x86 ; '.'
000000000000f909         db  0x06 ; '.'
000000000000f90a         db  0x48 ; 'H'
000000000000f90b         db  0x0e ; '.'
000000000000f90c         db  0x38 ; '8'
000000000000f90d         db  0x83 ; '.'
000000000000f90e         db  0x07 ; '.'
000000000000f90f         db  0x4d ; 'M'
000000000000f910         db  0x0e ; '.'
000000000000f911         db  0x40 ; '@'
000000000000f912         db  0x72 ; 'r'
000000000000f913         db  0x0e ; '.'
000000000000f914         db  0x38 ; '8'
000000000000f915         db  0x41 ; 'A'
000000000000f916         db  0x0e ; '.'
000000000000f917         db  0x30 ; '0'
000000000000f918         db  0x41 ; 'A'
000000000000f919         db  0x0e ; '.'
000000000000f91a         db  0x28 ; '('
000000000000f91b         db  0x42 ; 'B'
000000000000f91c         db  0x0e ; '.'
000000000000f91d         db  0x20 ; ' '
000000000000f91e         db  0x42 ; 'B'
000000000000f91f         db  0x0e ; '.'
000000000000f920         db  0x18 ; '.'
000000000000f921         db  0x42 ; 'B'
000000000000f922         db  0x0e ; '.'
000000000000f923         db  0x10 ; '.'
000000000000f924         db  0x42 ; 'B'
000000000000f925         db  0x0e ; '.'
000000000000f926         db  0x08 ; '.'
000000000000f927         db  0x00 ; '.'
000000000000f928         dd         0x00000014                                  ; Length of the record
000000000000f92c         dd         0x00000e74                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f930         db         0x80, 0xb9, 2 dup (0xff)                    ; begin 0xb2b0
000000000000f934         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0xb2b2)
000000000000f938         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f939         align      64
000000000000f940         dd         0x00000010                                  ; Length of the record
000000000000f944         dd         0x00000e8c                                  ; FDE: parent CIE at 0xeab8 (FDE encoding = 0x1B)
000000000000f948         db         0x78, 0xb9, 2 dup (0xff)                    ; begin 0xb2c0
000000000000f94c         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0xb2ce)
000000000000f950         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000f951         align      8


        ; Segment Segment 3
        ; Range: [0x20fa50; 0x211360[ (6416 bytes)
        ; File offset : [64080; 69792[ (5712 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x20fa50; 0x20fa58[ (8 bytes)
        ; File offset : [64080; 64088[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
000000000020fa50         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x20fa58; 0x20fa60[ (8 bytes)
        ; File offset : [64088; 64096[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
000000000020fa58         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x20fa60; 0x210bf8[ (4504 bytes)
        ; File offset : [64096; 68600[ (4504 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     speeds:
000000000020fa60         db  0xc8 ; '.'                                         ; DATA XREF=string_to_baud+63, display_speed+323, display_speed+355, display_speed+379
000000000020fa61         db  0xb6 ; '.'
000000000020fa62         db  0x00 ; '.'
000000000020fa63         db  0x00 ; '.'
000000000020fa64         db  0x00 ; '.'
000000000020fa65         db  0x00 ; '.'
000000000020fa66         db  0x00 ; '.'
000000000020fa67         db  0x00 ; '.'
000000000020fa68         db  0x00 ; '.'
000000000020fa69         db  0x00 ; '.'
000000000020fa6a         db  0x00 ; '.'
000000000020fa6b         db  0x00 ; '.'
000000000020fa6c         db  0x00 ; '.'
000000000020fa6d         db  0x00 ; '.'
000000000020fa6e         db  0x00 ; '.'
000000000020fa6f         db  0x00 ; '.'
000000000020fa70         db  0x00 ; '.'
000000000020fa71         db  0x00 ; '.'
000000000020fa72         db  0x00 ; '.'
000000000020fa73         db  0x00 ; '.'
000000000020fa74         db  0x00 ; '.'
000000000020fa75         db  0x00 ; '.'
000000000020fa76         db  0x00 ; '.'
000000000020fa77         db  0x00 ; '.'
000000000020fa78         db  0x63 ; 'c'                                         ; DATA XREF=string_to_baud+16
000000000020fa79         db  0xb6 ; '.'
000000000020fa7a         db  0x00 ; '.'
000000000020fa7b         db  0x00 ; '.'
000000000020fa7c         db  0x00 ; '.'
000000000020fa7d         db  0x00 ; '.'
000000000020fa7e         db  0x00 ; '.'
000000000020fa7f         db  0x00 ; '.'
000000000020fa80         db  0x01 ; '.'                                         ; DATA XREF=display_speed+58, display_speed+172, display_speed+232
000000000020fa81         db  0x00 ; '.'
000000000020fa82         db  0x00 ; '.'
000000000020fa83         db  0x00 ; '.'
000000000020fa84         db  0x00 ; '.'
000000000020fa85         db  0x00 ; '.'
000000000020fa86         db  0x00 ; '.'
000000000020fa87         db  0x00 ; '.'
000000000020fa88         db  0x32 ; '2'
000000000020fa89         db  0x00 ; '.'
000000000020fa8a         db  0x00 ; '.'
000000000020fa8b         db  0x00 ; '.'
000000000020fa8c         db  0x00 ; '.'
000000000020fa8d         db  0x00 ; '.'
000000000020fa8e         db  0x00 ; '.'
000000000020fa8f         db  0x00 ; '.'
000000000020fa90         db  0x51 ; 'Q'
000000000020fa91         db  0xb6 ; '.'
000000000020fa92         db  0x00 ; '.'
000000000020fa93         db  0x00 ; '.'
000000000020fa94         db  0x00 ; '.'
000000000020fa95         db  0x00 ; '.'
000000000020fa96         db  0x00 ; '.'
000000000020fa97         db  0x00 ; '.'
000000000020fa98         db  0x02 ; '.'
000000000020fa99         db  0x00 ; '.'
000000000020fa9a         db  0x00 ; '.'
000000000020fa9b         db  0x00 ; '.'
000000000020fa9c         db  0x00 ; '.'
000000000020fa9d         db  0x00 ; '.'
000000000020fa9e         db  0x00 ; '.'
000000000020fa9f         db  0x00 ; '.'
000000000020faa0         db  0x4b ; 'K'
000000000020faa1         db  0x00 ; '.'
000000000020faa2         db  0x00 ; '.'
000000000020faa3         db  0x00 ; '.'
000000000020faa4         db  0x00 ; '.'
000000000020faa5         db  0x00 ; '.'
000000000020faa6         db  0x00 ; '.'
000000000020faa7         db  0x00 ; '.'
000000000020faa8         db  0x54 ; 'T'
000000000020faa9         db  0xb6 ; '.'
000000000020faaa         db  0x00 ; '.'
000000000020faab         db  0x00 ; '.'
000000000020faac         db  0x00 ; '.'
000000000020faad         db  0x00 ; '.'
000000000020faae         db  0x00 ; '.'
000000000020faaf         db  0x00 ; '.'
000000000020fab0         db  0x03 ; '.'
000000000020fab1         db  0x00 ; '.'
000000000020fab2         db  0x00 ; '.'
000000000020fab3         db  0x00 ; '.'
000000000020fab4         db  0x00 ; '.'
000000000020fab5         db  0x00 ; '.'
000000000020fab6         db  0x00 ; '.'
000000000020fab7         db  0x00 ; '.'
000000000020fab8         db  0x6e ; 'n'
000000000020fab9         db  0x00 ; '.'
000000000020faba         db  0x00 ; '.'
000000000020fabb         db  0x00 ; '.'
000000000020fabc         db  0x00 ; '.'
000000000020fabd         db  0x00 ; '.'
000000000020fabe         db  0x00 ; '.'
000000000020fabf         db  0x00 ; '.'
000000000020fac0         db  0x58 ; 'X'
000000000020fac1         db  0xb6 ; '.'
000000000020fac2         db  0x00 ; '.'
000000000020fac3         db  0x00 ; '.'
000000000020fac4         db  0x00 ; '.'
000000000020fac5         db  0x00 ; '.'
000000000020fac6         db  0x00 ; '.'
000000000020fac7         db  0x00 ; '.'
000000000020fac8         db  0x04 ; '.'
000000000020fac9         db  0x00 ; '.'
000000000020faca         db  0x00 ; '.'
000000000020facb         db  0x00 ; '.'
000000000020facc         db  0x00 ; '.'
000000000020facd         db  0x00 ; '.'
000000000020face         db  0x00 ; '.'
000000000020facf         db  0x00 ; '.'
000000000020fad0         db  0x86 ; '.'
000000000020fad1         db  0x00 ; '.'
000000000020fad2         db  0x00 ; '.'
000000000020fad3         db  0x00 ; '.'
000000000020fad4         db  0x00 ; '.'
000000000020fad5         db  0x00 ; '.'
000000000020fad6         db  0x00 ; '.'
000000000020fad7         db  0x00 ; '.'
000000000020fad8         db  0x5c ; '\'
000000000020fad9         db  0xb6 ; '.'
000000000020fada         db  0x00 ; '.'
000000000020fadb         db  0x00 ; '.'
000000000020fadc         db  0x00 ; '.'
000000000020fadd         db  0x00 ; '.'
000000000020fade         db  0x00 ; '.'
000000000020fadf         db  0x00 ; '.'
000000000020fae0         db  0x04 ; '.'
000000000020fae1         db  0x00 ; '.'
000000000020fae2         db  0x00 ; '.'
000000000020fae3         db  0x00 ; '.'
000000000020fae4         db  0x00 ; '.'
000000000020fae5         db  0x00 ; '.'
000000000020fae6         db  0x00 ; '.'
000000000020fae7         db  0x00 ; '.'
000000000020fae8         db  0x86 ; '.'
000000000020fae9         db  0x00 ; '.'
000000000020faea         db  0x00 ; '.'
000000000020faeb         db  0x00 ; '.'
000000000020faec         db  0x00 ; '.'
000000000020faed         db  0x00 ; '.'
000000000020faee         db  0x00 ; '.'
000000000020faef         db  0x00 ; '.'
000000000020faf0         db  0x62 ; 'b'
000000000020faf1         db  0xb6 ; '.'
000000000020faf2         db  0x00 ; '.'
000000000020faf3         db  0x00 ; '.'
000000000020faf4         db  0x00 ; '.'
000000000020faf5         db  0x00 ; '.'
000000000020faf6         db  0x00 ; '.'
000000000020faf7         db  0x00 ; '.'
000000000020faf8         db  0x05 ; '.'
000000000020faf9         db  0x00 ; '.'
000000000020fafa         db  0x00 ; '.'
000000000020fafb         db  0x00 ; '.'
000000000020fafc         db  0x00 ; '.'
000000000020fafd         db  0x00 ; '.'
000000000020fafe         db  0x00 ; '.'
000000000020faff         db  0x00 ; '.'
000000000020fb00         db  0x96 ; '.'
000000000020fb01         db  0x00 ; '.'
000000000020fb02         db  0x00 ; '.'
000000000020fb03         db  0x00 ; '.'
000000000020fb04         db  0x00 ; '.'
000000000020fb05         db  0x00 ; '.'
000000000020fb06         db  0x00 ; '.'
000000000020fb07         db  0x00 ; '.'
000000000020fb08         db  0x6b ; 'k'
000000000020fb09         db  0xb6 ; '.'
000000000020fb0a         db  0x00 ; '.'
000000000020fb0b         db  0x00 ; '.'
000000000020fb0c         db  0x00 ; '.'
000000000020fb0d         db  0x00 ; '.'
000000000020fb0e         db  0x00 ; '.'
000000000020fb0f         db  0x00 ; '.'
000000000020fb10         db  0x06 ; '.'
000000000020fb11         db  0x00 ; '.'
000000000020fb12         db  0x00 ; '.'
000000000020fb13         db  0x00 ; '.'
000000000020fb14         db  0x00 ; '.'
000000000020fb15         db  0x00 ; '.'
000000000020fb16         db  0x00 ; '.'
000000000020fb17         db  0x00 ; '.'
000000000020fb18         db  0xc8 ; '.'
000000000020fb19         db  0x00 ; '.'
000000000020fb1a         db  0x00 ; '.'
000000000020fb1b         db  0x00 ; '.'
000000000020fb1c         db  0x00 ; '.'
000000000020fb1d         db  0x00 ; '.'
000000000020fb1e         db  0x00 ; '.'
000000000020fb1f         db  0x00 ; '.'
000000000020fb20         db  0x66 ; 'f'
000000000020fb21         db  0xb6 ; '.'
000000000020fb22         db  0x00 ; '.'
000000000020fb23         db  0x00 ; '.'
000000000020fb24         db  0x00 ; '.'
000000000020fb25         db  0x00 ; '.'
000000000020fb26         db  0x00 ; '.'
000000000020fb27         db  0x00 ; '.'
000000000020fb28         db  0x07 ; '.'
000000000020fb29         db  0x00 ; '.'
000000000020fb2a         db  0x00 ; '.'
000000000020fb2b         db  0x00 ; '.'
000000000020fb2c         db  0x00 ; '.'
000000000020fb2d         db  0x00 ; '.'
000000000020fb2e         db  0x00 ; '.'
000000000020fb2f         db  0x00 ; '.'
000000000020fb30         db  0x2c ; ','
000000000020fb31         db  0x01 ; '.'
000000000020fb32         db  0x00 ; '.'
000000000020fb33         db  0x00 ; '.'
000000000020fb34         db  0x00 ; '.'
000000000020fb35         db  0x00 ; '.'
000000000020fb36         db  0x00 ; '.'
000000000020fb37         db  0x00 ; '.'
000000000020fb38         db  0xbe ; '.'
000000000020fb39         db  0xb6 ; '.'
000000000020fb3a         db  0x00 ; '.'
000000000020fb3b         db  0x00 ; '.'
000000000020fb3c         db  0x00 ; '.'
000000000020fb3d         db  0x00 ; '.'
000000000020fb3e         db  0x00 ; '.'
000000000020fb3f         db  0x00 ; '.'
000000000020fb40         db  0x08 ; '.'
000000000020fb41         db  0x00 ; '.'
000000000020fb42         db  0x00 ; '.'
000000000020fb43         db  0x00 ; '.'
000000000020fb44         db  0x00 ; '.'
000000000020fb45         db  0x00 ; '.'
000000000020fb46         db  0x00 ; '.'
000000000020fb47         db  0x00 ; '.'
000000000020fb48         db  0x58 ; 'X'
000000000020fb49         db  0x02 ; '.'
000000000020fb4a         db  0x00 ; '.'
000000000020fb4b         db  0x00 ; '.'
000000000020fb4c         db  0x00 ; '.'
000000000020fb4d         db  0x00 ; '.'
000000000020fb4e         db  0x00 ; '.'
000000000020fb4f         db  0x00 ; '.'
000000000020fb50         db  0x6a ; 'j'
000000000020fb51         db  0xb6 ; '.'
000000000020fb52         db  0x00 ; '.'
000000000020fb53         db  0x00 ; '.'
000000000020fb54         db  0x00 ; '.'
000000000020fb55         db  0x00 ; '.'
000000000020fb56         db  0x00 ; '.'
000000000020fb57         db  0x00 ; '.'
000000000020fb58         db  0x09 ; '.'
000000000020fb59         db  0x00 ; '.'
000000000020fb5a         db  0x00 ; '.'
000000000020fb5b         db  0x00 ; '.'
000000000020fb5c         db  0x00 ; '.'
000000000020fb5d         db  0x00 ; '.'
000000000020fb5e         db  0x00 ; '.'
000000000020fb5f         db  0x00 ; '.'
000000000020fb60         db  0xb0 ; '.'
000000000020fb61         db  0x04 ; '.'
000000000020fb62         db  0x00 ; '.'
000000000020fb63         db  0x00 ; '.'
000000000020fb64         db  0x00 ; '.'
000000000020fb65         db  0x00 ; '.'
000000000020fb66         db  0x00 ; '.'
000000000020fb67         db  0x00 ; '.'
000000000020fb68         db  0x6f ; 'o'
000000000020fb69         db  0xb6 ; '.'
000000000020fb6a         db  0x00 ; '.'
000000000020fb6b         db  0x00 ; '.'
000000000020fb6c         db  0x00 ; '.'
000000000020fb6d         db  0x00 ; '.'
000000000020fb6e         db  0x00 ; '.'
000000000020fb6f         db  0x00 ; '.'
000000000020fb70         db  0x0a ; '.'
000000000020fb71         db  0x00 ; '.'
000000000020fb72         db  0x00 ; '.'
000000000020fb73         db  0x00 ; '.'
000000000020fb74         db  0x00 ; '.'
000000000020fb75         db  0x00 ; '.'
000000000020fb76         db  0x00 ; '.'
000000000020fb77         db  0x00 ; '.'
000000000020fb78         db  0x08 ; '.'
000000000020fb79         db  0x07 ; '.'
000000000020fb7a         db  0x00 ; '.'
000000000020fb7b         db  0x00 ; '.'
000000000020fb7c         db  0x00 ; '.'
000000000020fb7d         db  0x00 ; '.'
000000000020fb7e         db  0x00 ; '.'
000000000020fb7f         db  0x00 ; '.'
000000000020fb80         db  0x74 ; 't'
000000000020fb81         db  0xb6 ; '.'
000000000020fb82         db  0x00 ; '.'
000000000020fb83         db  0x00 ; '.'
000000000020fb84         db  0x00 ; '.'
000000000020fb85         db  0x00 ; '.'
000000000020fb86         db  0x00 ; '.'
000000000020fb87         db  0x00 ; '.'
000000000020fb88         db  0x0b ; '.'
000000000020fb89         db  0x00 ; '.'
000000000020fb8a         db  0x00 ; '.'
000000000020fb8b         db  0x00 ; '.'
000000000020fb8c         db  0x00 ; '.'
000000000020fb8d         db  0x00 ; '.'
000000000020fb8e         db  0x00 ; '.'
000000000020fb8f         db  0x00 ; '.'
000000000020fb90         db  0x60 ; '`'
000000000020fb91         db  0x09 ; '.'
000000000020fb92         db  0x00 ; '.'
000000000020fb93         db  0x00 ; '.'
000000000020fb94         db  0x00 ; '.'
000000000020fb95         db  0x00 ; '.'
000000000020fb96         db  0x00 ; '.'
000000000020fb97         db  0x00 ; '.'
000000000020fb98         db  0x79 ; 'y'
000000000020fb99         db  0xb6 ; '.'
000000000020fb9a         db  0x00 ; '.'
000000000020fb9b         db  0x00 ; '.'
000000000020fb9c         db  0x00 ; '.'
000000000020fb9d         db  0x00 ; '.'
000000000020fb9e         db  0x00 ; '.'
000000000020fb9f         db  0x00 ; '.'
000000000020fba0         db  0x0c ; '.'
000000000020fba1         db  0x00 ; '.'
000000000020fba2         db  0x00 ; '.'
000000000020fba3         db  0x00 ; '.'
000000000020fba4         db  0x00 ; '.'
000000000020fba5         db  0x00 ; '.'
000000000020fba6         db  0x00 ; '.'
000000000020fba7         db  0x00 ; '.'
000000000020fba8         db  0xc0 ; '.'
000000000020fba9         db  0x12 ; '.'
000000000020fbaa         db  0x00 ; '.'
000000000020fbab         db  0x00 ; '.'
000000000020fbac         db  0x00 ; '.'
000000000020fbad         db  0x00 ; '.'
000000000020fbae         db  0x00 ; '.'
000000000020fbaf         db  0x00 ; '.'
000000000020fbb0         db  0x7e ; '~'
000000000020fbb1         db  0xb6 ; '.'
000000000020fbb2         db  0x00 ; '.'
000000000020fbb3         db  0x00 ; '.'
000000000020fbb4         db  0x00 ; '.'
000000000020fbb5         db  0x00 ; '.'
000000000020fbb6         db  0x00 ; '.'
000000000020fbb7         db  0x00 ; '.'
000000000020fbb8         db  0x0d ; '.'
000000000020fbb9         db  0x00 ; '.'
000000000020fbba         db  0x00 ; '.'
000000000020fbbb         db  0x00 ; '.'
000000000020fbbc         db  0x00 ; '.'
000000000020fbbd         db  0x00 ; '.'
000000000020fbbe         db  0x00 ; '.'
000000000020fbbf         db  0x00 ; '.'
000000000020fbc0         db  0x80 ; '.'
000000000020fbc1         db  0x25 ; '%'
000000000020fbc2         db  0x00 ; '.'
000000000020fbc3         db  0x00 ; '.'
000000000020fbc4         db  0x00 ; '.'
000000000020fbc5         db  0x00 ; '.'
000000000020fbc6         db  0x00 ; '.'
000000000020fbc7         db  0x00 ; '.'
000000000020fbc8         db  0x83 ; '.'
000000000020fbc9         db  0xb6 ; '.'
000000000020fbca         db  0x00 ; '.'
000000000020fbcb         db  0x00 ; '.'
000000000020fbcc         db  0x00 ; '.'
000000000020fbcd         db  0x00 ; '.'
000000000020fbce         db  0x00 ; '.'
000000000020fbcf         db  0x00 ; '.'
000000000020fbd0         db  0x0e ; '.'
000000000020fbd1         db  0x00 ; '.'
000000000020fbd2         db  0x00 ; '.'
000000000020fbd3         db  0x00 ; '.'
000000000020fbd4         db  0x00 ; '.'
000000000020fbd5         db  0x00 ; '.'
000000000020fbd6         db  0x00 ; '.'
000000000020fbd7         db  0x00 ; '.'
000000000020fbd8         db  0x00 ; '.'
000000000020fbd9         db  0x4b ; 'K'
000000000020fbda         db  0x00 ; '.'
000000000020fbdb         db  0x00 ; '.'
000000000020fbdc         db  0x00 ; '.'
000000000020fbdd         db  0x00 ; '.'
000000000020fbde         db  0x00 ; '.'
000000000020fbdf         db  0x00 ; '.'
000000000020fbe0         db  0x89 ; '.'
000000000020fbe1         db  0xb6 ; '.'
000000000020fbe2         db  0x00 ; '.'
000000000020fbe3         db  0x00 ; '.'
000000000020fbe4         db  0x00 ; '.'
000000000020fbe5         db  0x00 ; '.'
000000000020fbe6         db  0x00 ; '.'
000000000020fbe7         db  0x00 ; '.'
000000000020fbe8         db  0x0f ; '.'
000000000020fbe9         db  0x00 ; '.'
000000000020fbea         db  0x00 ; '.'
000000000020fbeb         db  0x00 ; '.'
000000000020fbec         db  0x00 ; '.'
000000000020fbed         db  0x00 ; '.'
000000000020fbee         db  0x00 ; '.'
000000000020fbef         db  0x00 ; '.'
000000000020fbf0         db  0x00 ; '.'
000000000020fbf1         db  0x96 ; '.'
000000000020fbf2         db  0x00 ; '.'
000000000020fbf3         db  0x00 ; '.'
000000000020fbf4         db  0x00 ; '.'
000000000020fbf5         db  0x00 ; '.'
000000000020fbf6         db  0x00 ; '.'
000000000020fbf7         db  0x00 ; '.'
000000000020fbf8         db  0x8f ; '.'
000000000020fbf9         db  0xb6 ; '.'
000000000020fbfa         db  0x00 ; '.'
000000000020fbfb         db  0x00 ; '.'
000000000020fbfc         db  0x00 ; '.'
000000000020fbfd         db  0x00 ; '.'
000000000020fbfe         db  0x00 ; '.'
000000000020fbff         db  0x00 ; '.'
000000000020fc00         db  0x0e ; '.'
000000000020fc01         db  0x00 ; '.'
000000000020fc02         db  0x00 ; '.'
000000000020fc03         db  0x00 ; '.'
000000000020fc04         db  0x00 ; '.'
000000000020fc05         db  0x00 ; '.'
000000000020fc06         db  0x00 ; '.'
000000000020fc07         db  0x00 ; '.'
000000000020fc08         db  0x00 ; '.'
000000000020fc09         db  0x4b ; 'K'
000000000020fc0a         db  0x00 ; '.'
000000000020fc0b         db  0x00 ; '.'
000000000020fc0c         db  0x00 ; '.'
000000000020fc0d         db  0x00 ; '.'
000000000020fc0e         db  0x00 ; '.'
000000000020fc0f         db  0x00 ; '.'
000000000020fc10         db  0x94 ; '.'
000000000020fc11         db  0xb6 ; '.'
000000000020fc12         db  0x00 ; '.'
000000000020fc13         db  0x00 ; '.'
000000000020fc14         db  0x00 ; '.'
000000000020fc15         db  0x00 ; '.'
000000000020fc16         db  0x00 ; '.'
000000000020fc17         db  0x00 ; '.'
000000000020fc18         db  0x0f ; '.'
000000000020fc19         db  0x00 ; '.'
000000000020fc1a         db  0x00 ; '.'
000000000020fc1b         db  0x00 ; '.'
000000000020fc1c         db  0x00 ; '.'
000000000020fc1d         db  0x00 ; '.'
000000000020fc1e         db  0x00 ; '.'
000000000020fc1f         db  0x00 ; '.'
000000000020fc20         db  0x00 ; '.'
000000000020fc21         db  0x96 ; '.'
000000000020fc22         db  0x00 ; '.'
000000000020fc23         db  0x00 ; '.'
000000000020fc24         db  0x00 ; '.'
000000000020fc25         db  0x00 ; '.'
000000000020fc26         db  0x00 ; '.'
000000000020fc27         db  0x00 ; '.'
000000000020fc28         db  0x99 ; '.'
000000000020fc29         db  0xb6 ; '.'
000000000020fc2a         db  0x00 ; '.'
000000000020fc2b         db  0x00 ; '.'
000000000020fc2c         db  0x00 ; '.'
000000000020fc2d         db  0x00 ; '.'
000000000020fc2e         db  0x00 ; '.'
000000000020fc2f         db  0x00 ; '.'
000000000020fc30         db  0x01 ; '.'
000000000020fc31         db  0x10 ; '.'
000000000020fc32         db  0x00 ; '.'
000000000020fc33         db  0x00 ; '.'
000000000020fc34         db  0x00 ; '.'
000000000020fc35         db  0x00 ; '.'
000000000020fc36         db  0x00 ; '.'
000000000020fc37         db  0x00 ; '.'
000000000020fc38         db  0x00 ; '.'
000000000020fc39         db  0xe1 ; '.'
000000000020fc3a         db  0x00 ; '.'
000000000020fc3b         db  0x00 ; '.'
000000000020fc3c         db  0x00 ; '.'
000000000020fc3d         db  0x00 ; '.'
000000000020fc3e         db  0x00 ; '.'
000000000020fc3f         db  0x00 ; '.'
000000000020fc40         db  0x9f ; '.'
000000000020fc41         db  0xb6 ; '.'
000000000020fc42         db  0x00 ; '.'
000000000020fc43         db  0x00 ; '.'
000000000020fc44         db  0x00 ; '.'
000000000020fc45         db  0x00 ; '.'
000000000020fc46         db  0x00 ; '.'
000000000020fc47         db  0x00 ; '.'
000000000020fc48         db  0x02 ; '.'
000000000020fc49         db  0x10 ; '.'
000000000020fc4a         db  0x00 ; '.'
000000000020fc4b         db  0x00 ; '.'
000000000020fc4c         db  0x00 ; '.'
000000000020fc4d         db  0x00 ; '.'
000000000020fc4e         db  0x00 ; '.'
000000000020fc4f         db  0x00 ; '.'
000000000020fc50         db  0x00 ; '.'
000000000020fc51         db  0xc2 ; '.'
000000000020fc52         db  0x01 ; '.'
000000000020fc53         db  0x00 ; '.'
000000000020fc54         db  0x00 ; '.'
000000000020fc55         db  0x00 ; '.'
000000000020fc56         db  0x00 ; '.'
000000000020fc57         db  0x00 ; '.'
000000000020fc58         db  0xa6 ; '.'
000000000020fc59         db  0xb6 ; '.'
000000000020fc5a         db  0x00 ; '.'
000000000020fc5b         db  0x00 ; '.'
000000000020fc5c         db  0x00 ; '.'
000000000020fc5d         db  0x00 ; '.'
000000000020fc5e         db  0x00 ; '.'
000000000020fc5f         db  0x00 ; '.'
000000000020fc60         db  0x03 ; '.'
000000000020fc61         db  0x10 ; '.'
000000000020fc62         db  0x00 ; '.'
000000000020fc63         db  0x00 ; '.'
000000000020fc64         db  0x00 ; '.'
000000000020fc65         db  0x00 ; '.'
000000000020fc66         db  0x00 ; '.'
000000000020fc67         db  0x00 ; '.'
000000000020fc68         db  0x00 ; '.'
000000000020fc69         db  0x84 ; '.'
000000000020fc6a         db  0x03 ; '.'
000000000020fc6b         db  0x00 ; '.'
000000000020fc6c         db  0x00 ; '.'
000000000020fc6d         db  0x00 ; '.'
000000000020fc6e         db  0x00 ; '.'
000000000020fc6f         db  0x00 ; '.'
000000000020fc70         db  0xad ; '.'
000000000020fc71         db  0xb6 ; '.'
000000000020fc72         db  0x00 ; '.'
000000000020fc73         db  0x00 ; '.'
000000000020fc74         db  0x00 ; '.'
000000000020fc75         db  0x00 ; '.'
000000000020fc76         db  0x00 ; '.'
000000000020fc77         db  0x00 ; '.'
000000000020fc78         db  0x04 ; '.'
000000000020fc79         db  0x10 ; '.'
000000000020fc7a         db  0x00 ; '.'
000000000020fc7b         db  0x00 ; '.'
000000000020fc7c         db  0x00 ; '.'
000000000020fc7d         db  0x00 ; '.'
000000000020fc7e         db  0x00 ; '.'
000000000020fc7f         db  0x00 ; '.'
000000000020fc80         db  0x00 ; '.'
000000000020fc81         db  0x08 ; '.'
000000000020fc82         db  0x07 ; '.'
000000000020fc83         db  0x00 ; '.'
000000000020fc84         db  0x00 ; '.'
000000000020fc85         db  0x00 ; '.'
000000000020fc86         db  0x00 ; '.'
000000000020fc87         db  0x00 ; '.'
000000000020fc88         db  0xd3 ; '.'
000000000020fc89         db  0xb6 ; '.'
000000000020fc8a         db  0x00 ; '.'
000000000020fc8b         db  0x00 ; '.'
000000000020fc8c         db  0x00 ; '.'
000000000020fc8d         db  0x00 ; '.'
000000000020fc8e         db  0x00 ; '.'
000000000020fc8f         db  0x00 ; '.'
000000000020fc90         db  0x05 ; '.'
000000000020fc91         db  0x10 ; '.'
000000000020fc92         db  0x00 ; '.'
000000000020fc93         db  0x00 ; '.'
000000000020fc94         db  0x00 ; '.'
000000000020fc95         db  0x00 ; '.'
000000000020fc96         db  0x00 ; '.'
000000000020fc97         db  0x00 ; '.'
000000000020fc98         db  0x20 ; ' '
000000000020fc99         db  0xa1 ; '.'
000000000020fc9a         db  0x07 ; '.'
000000000020fc9b         db  0x00 ; '.'
000000000020fc9c         db  0x00 ; '.'
000000000020fc9d         db  0x00 ; '.'
000000000020fc9e         db  0x00 ; '.'
000000000020fc9f         db  0x00 ; '.'
000000000020fca0         db  0xb4 ; '.'
000000000020fca1         db  0xb6 ; '.'
000000000020fca2         db  0x00 ; '.'
000000000020fca3         db  0x00 ; '.'
000000000020fca4         db  0x00 ; '.'
000000000020fca5         db  0x00 ; '.'
000000000020fca6         db  0x00 ; '.'
000000000020fca7         db  0x00 ; '.'
000000000020fca8         db  0x06 ; '.'
000000000020fca9         db  0x10 ; '.'
000000000020fcaa         db  0x00 ; '.'
000000000020fcab         db  0x00 ; '.'
000000000020fcac         db  0x00 ; '.'
000000000020fcad         db  0x00 ; '.'
000000000020fcae         db  0x00 ; '.'
000000000020fcaf         db  0x00 ; '.'
000000000020fcb0         db  0x00 ; '.'
000000000020fcb1         db  0xca ; '.'
000000000020fcb2         db  0x08 ; '.'
000000000020fcb3         db  0x00 ; '.'
000000000020fcb4         db  0x00 ; '.'
000000000020fcb5         db  0x00 ; '.'
000000000020fcb6         db  0x00 ; '.'
000000000020fcb7         db  0x00 ; '.'
000000000020fcb8         db  0xbb ; '.'
000000000020fcb9         db  0xb6 ; '.'
000000000020fcba         db  0x00 ; '.'
000000000020fcbb         db  0x00 ; '.'
000000000020fcbc         db  0x00 ; '.'
000000000020fcbd         db  0x00 ; '.'
000000000020fcbe         db  0x00 ; '.'
000000000020fcbf         db  0x00 ; '.'
000000000020fcc0         db  0x07 ; '.'
000000000020fcc1         db  0x10 ; '.'
000000000020fcc2         db  0x00 ; '.'
000000000020fcc3         db  0x00 ; '.'
000000000020fcc4         db  0x00 ; '.'
000000000020fcc5         db  0x00 ; '.'
000000000020fcc6         db  0x00 ; '.'
000000000020fcc7         db  0x00 ; '.'
000000000020fcc8         db  0x00 ; '.'
000000000020fcc9         db  0x10 ; '.'
000000000020fcca         db  0x0e ; '.'
000000000020fccb         db  0x00 ; '.'
000000000020fccc         db  0x00 ; '.'
000000000020fccd         db  0x00 ; '.'
000000000020fcce         db  0x00 ; '.'
000000000020fccf         db  0x00 ; '.'
000000000020fcd0         db  0xc2 ; '.'
000000000020fcd1         db  0xb6 ; '.'
000000000020fcd2         db  0x00 ; '.'
000000000020fcd3         db  0x00 ; '.'
000000000020fcd4         db  0x00 ; '.'
000000000020fcd5         db  0x00 ; '.'
000000000020fcd6         db  0x00 ; '.'
000000000020fcd7         db  0x00 ; '.'
000000000020fcd8         db  0x08 ; '.'
000000000020fcd9         db  0x10 ; '.'
000000000020fcda         db  0x00 ; '.'
000000000020fcdb         db  0x00 ; '.'
000000000020fcdc         db  0x00 ; '.'
000000000020fcdd         db  0x00 ; '.'
000000000020fcde         db  0x00 ; '.'
000000000020fcdf         db  0x00 ; '.'
000000000020fce0         db  0x40 ; '@'
000000000020fce1         db  0x42 ; 'B'
000000000020fce2         db  0x0f ; '.'
000000000020fce3         db  0x00 ; '.'
000000000020fce4         db  0x00 ; '.'
000000000020fce5         db  0x00 ; '.'
000000000020fce6         db  0x00 ; '.'
000000000020fce7         db  0x00 ; '.'
000000000020fce8         db  0xca ; '.'
000000000020fce9         db  0xb6 ; '.'
000000000020fcea         db  0x00 ; '.'
000000000020fceb         db  0x00 ; '.'
000000000020fcec         db  0x00 ; '.'
000000000020fced         db  0x00 ; '.'
000000000020fcee         db  0x00 ; '.'
000000000020fcef         db  0x00 ; '.'
000000000020fcf0         db  0x09 ; '.'
000000000020fcf1         db  0x10 ; '.'
000000000020fcf2         db  0x00 ; '.'
000000000020fcf3         db  0x00 ; '.'
000000000020fcf4         db  0x00 ; '.'
000000000020fcf5         db  0x00 ; '.'
000000000020fcf6         db  0x00 ; '.'
000000000020fcf7         db  0x00 ; '.'
000000000020fcf8         db  0x00 ; '.'
000000000020fcf9         db  0x94 ; '.'
000000000020fcfa         db  0x11 ; '.'
000000000020fcfb         db  0x00 ; '.'
000000000020fcfc         db  0x00 ; '.'
000000000020fcfd         db  0x00 ; '.'
000000000020fcfe         db  0x00 ; '.'
000000000020fcff         db  0x00 ; '.'
000000000020fd00         db  0xd2 ; '.'
000000000020fd01         db  0xb6 ; '.'
000000000020fd02         db  0x00 ; '.'
000000000020fd03         db  0x00 ; '.'
000000000020fd04         db  0x00 ; '.'
000000000020fd05         db  0x00 ; '.'
000000000020fd06         db  0x00 ; '.'
000000000020fd07         db  0x00 ; '.'
000000000020fd08         db  0x0a ; '.'
000000000020fd09         db  0x10 ; '.'
000000000020fd0a         db  0x00 ; '.'
000000000020fd0b         db  0x00 ; '.'
000000000020fd0c         db  0x00 ; '.'
000000000020fd0d         db  0x00 ; '.'
000000000020fd0e         db  0x00 ; '.'
000000000020fd0f         db  0x00 ; '.'
000000000020fd10         db  0x60 ; '`'
000000000020fd11         db  0xe3 ; '.'
000000000020fd12         db  0x16 ; '.'
000000000020fd13         db  0x00 ; '.'
000000000020fd14         db  0x00 ; '.'
000000000020fd15         db  0x00 ; '.'
000000000020fd16         db  0x00 ; '.'
000000000020fd17         db  0x00 ; '.'
000000000020fd18         db  0xda ; '.'
000000000020fd19         db  0xb6 ; '.'
000000000020fd1a         db  0x00 ; '.'
000000000020fd1b         db  0x00 ; '.'
000000000020fd1c         db  0x00 ; '.'
000000000020fd1d         db  0x00 ; '.'
000000000020fd1e         db  0x00 ; '.'
000000000020fd1f         db  0x00 ; '.'
000000000020fd20         db  0x0b ; '.'
000000000020fd21         db  0x10 ; '.'
000000000020fd22         db  0x00 ; '.'
000000000020fd23         db  0x00 ; '.'
000000000020fd24         db  0x00 ; '.'
000000000020fd25         db  0x00 ; '.'
000000000020fd26         db  0x00 ; '.'
000000000020fd27         db  0x00 ; '.'
000000000020fd28         db  0x80 ; '.'
000000000020fd29         db  0x84 ; '.'
000000000020fd2a         db  0x1e ; '.'
000000000020fd2b         db  0x00 ; '.'
000000000020fd2c         db  0x00 ; '.'
000000000020fd2d         db  0x00 ; '.'
000000000020fd2e         db  0x00 ; '.'
000000000020fd2f         db  0x00 ; '.'
000000000020fd30         db  0xe2 ; '.'
000000000020fd31         db  0xb6 ; '.'
000000000020fd32         db  0x00 ; '.'
000000000020fd33         db  0x00 ; '.'
000000000020fd34         db  0x00 ; '.'
000000000020fd35         db  0x00 ; '.'
000000000020fd36         db  0x00 ; '.'
000000000020fd37         db  0x00 ; '.'
000000000020fd38         db  0x0c ; '.'
000000000020fd39         db  0x10 ; '.'
000000000020fd3a         db  0x00 ; '.'
000000000020fd3b         db  0x00 ; '.'
000000000020fd3c         db  0x00 ; '.'
000000000020fd3d         db  0x00 ; '.'
000000000020fd3e         db  0x00 ; '.'
000000000020fd3f         db  0x00 ; '.'
000000000020fd40         db  0xa0 ; '.'
000000000020fd41         db  0x25 ; '%'
000000000020fd42         db  0x26 ; '&'
000000000020fd43         db  0x00 ; '.'
000000000020fd44         db  0x00 ; '.'
000000000020fd45         db  0x00 ; '.'
000000000020fd46         db  0x00 ; '.'
000000000020fd47         db  0x00 ; '.'
000000000020fd48         db  0xea ; '.'
000000000020fd49         db  0xb6 ; '.'
000000000020fd4a         db  0x00 ; '.'
000000000020fd4b         db  0x00 ; '.'
000000000020fd4c         db  0x00 ; '.'
000000000020fd4d         db  0x00 ; '.'
000000000020fd4e         db  0x00 ; '.'
000000000020fd4f         db  0x00 ; '.'
000000000020fd50         db  0x0d ; '.'
000000000020fd51         db  0x10 ; '.'
000000000020fd52         db  0x00 ; '.'
000000000020fd53         db  0x00 ; '.'
000000000020fd54         db  0x00 ; '.'
000000000020fd55         db  0x00 ; '.'
000000000020fd56         db  0x00 ; '.'
000000000020fd57         db  0x00 ; '.'
000000000020fd58         db  0xc0 ; '.'
000000000020fd59         db  0xc6 ; '.'
000000000020fd5a         db  0x2d ; '-'
000000000020fd5b         db  0x00 ; '.'
000000000020fd5c         db  0x00 ; '.'
000000000020fd5d         db  0x00 ; '.'
000000000020fd5e         db  0x00 ; '.'
000000000020fd5f         db  0x00 ; '.'
000000000020fd60         db  0xf2 ; '.'
000000000020fd61         db  0xb6 ; '.'
000000000020fd62         db  0x00 ; '.'
000000000020fd63         db  0x00 ; '.'
000000000020fd64         db  0x00 ; '.'
000000000020fd65         db  0x00 ; '.'
000000000020fd66         db  0x00 ; '.'
000000000020fd67         db  0x00 ; '.'
000000000020fd68         db  0x0e ; '.'
000000000020fd69         db  0x10 ; '.'
000000000020fd6a         db  0x00 ; '.'
000000000020fd6b         db  0x00 ; '.'
000000000020fd6c         db  0x00 ; '.'
000000000020fd6d         db  0x00 ; '.'
000000000020fd6e         db  0x00 ; '.'
000000000020fd6f         db  0x00 ; '.'
000000000020fd70         db  0xe0 ; '.'
000000000020fd71         db  0x67 ; 'g'
000000000020fd72         db  0x35 ; '5'
000000000020fd73         db  0x00 ; '.'
000000000020fd74         db  0x00 ; '.'
000000000020fd75         db  0x00 ; '.'
000000000020fd76         db  0x00 ; '.'
000000000020fd77         db  0x00 ; '.'
000000000020fd78         db  0xfa ; '.'
000000000020fd79         db  0xb6 ; '.'
000000000020fd7a         db  0x00 ; '.'
000000000020fd7b         db  0x00 ; '.'
000000000020fd7c         db  0x00 ; '.'
000000000020fd7d         db  0x00 ; '.'
000000000020fd7e         db  0x00 ; '.'
000000000020fd7f         db  0x00 ; '.'
000000000020fd80         db  0x0f ; '.'
000000000020fd81         db  0x10 ; '.'
000000000020fd82         db  0x00 ; '.'
000000000020fd83         db  0x00 ; '.'
000000000020fd84         db  0x00 ; '.'
000000000020fd85         db  0x00 ; '.'
000000000020fd86         db  0x00 ; '.'
000000000020fd87         db  0x00 ; '.'
000000000020fd88         db  0x00 ; '.'
000000000020fd89         db  0x09 ; '.'
000000000020fd8a         db  0x3d ; '='
000000000020fd8b         db  0x00 ; '.'
000000000020fd8c         db  0x00 ; '.'
000000000020fd8d         db  0x00 ; '.'
000000000020fd8e         db  0x00 ; '.'
000000000020fd8f         db  0x00 ; '.'
000000000020fd90         db  0x00 ; '.'
000000000020fd91         db  0x00 ; '.'
000000000020fd92         db  0x00 ; '.'
000000000020fd93         db  0x00 ; '.'
000000000020fd94         db  0x00 ; '.'
000000000020fd95         db  0x00 ; '.'
000000000020fd96         db  0x00 ; '.'
000000000020fd97         db  0x00 ; '.'
000000000020fd98         db  0x00 ; '.'
000000000020fd99         db  0x00 ; '.'
000000000020fd9a         db  0x00 ; '.'
000000000020fd9b         db  0x00 ; '.'
000000000020fd9c         db  0x00 ; '.'
000000000020fd9d         db  0x00 ; '.'
000000000020fd9e         db  0x00 ; '.'
000000000020fd9f         db  0x00 ; '.'
000000000020fda0         db  0x00 ; '.'
000000000020fda1         db  0x00 ; '.'
000000000020fda2         db  0x00 ; '.'
000000000020fda3         db  0x00 ; '.'
000000000020fda4         db  0x00 ; '.'
000000000020fda5         db  0x00 ; '.'
000000000020fda6         db  0x00 ; '.'
000000000020fda7         db  0x00 ; '.'
000000000020fda8         db  0x00 ; '.'
000000000020fda9         db  0x00 ; '.'
000000000020fdaa         db  0x00 ; '.'
000000000020fdab         db  0x00 ; '.'
000000000020fdac         db  0x00 ; '.'
000000000020fdad         db  0x00 ; '.'
000000000020fdae         db  0x00 ; '.'
000000000020fdaf         db  0x00 ; '.'
000000000020fdb0         db  0x00 ; '.'
000000000020fdb1         db  0x00 ; '.'
000000000020fdb2         db  0x00 ; '.'
000000000020fdb3         db  0x00 ; '.'
000000000020fdb4         db  0x00 ; '.'
000000000020fdb5         db  0x00 ; '.'
000000000020fdb6         db  0x00 ; '.'
000000000020fdb7         db  0x00 ; '.'
000000000020fdb8         db  0x00 ; '.'
000000000020fdb9         db  0x00 ; '.'
000000000020fdba         db  0x00 ; '.'
000000000020fdbb         db  0x00 ; '.'
000000000020fdbc         db  0x00 ; '.'
000000000020fdbd         db  0x00 ; '.'
000000000020fdbe         db  0x00 ; '.'
000000000020fdbf         db  0x00 ; '.'
                     longopts:
000000000020fdc0         db  0x02 ; '.'                                         ; DATA XREF=main+158
000000000020fdc1         db  0xb7 ; '.'
000000000020fdc2         db  0x00 ; '.'
000000000020fdc3         db  0x00 ; '.'
000000000020fdc4         db  0x00 ; '.'
000000000020fdc5         db  0x00 ; '.'
000000000020fdc6         db  0x00 ; '.'
000000000020fdc7         db  0x00 ; '.'
000000000020fdc8         db  0x00 ; '.'
000000000020fdc9         db  0x00 ; '.'
000000000020fdca         db  0x00 ; '.'
000000000020fdcb         db  0x00 ; '.'
000000000020fdcc         db  0x00 ; '.'
000000000020fdcd         db  0x00 ; '.'
000000000020fdce         db  0x00 ; '.'
000000000020fdcf         db  0x00 ; '.'
000000000020fdd0         db  0x00 ; '.'
000000000020fdd1         db  0x00 ; '.'
000000000020fdd2         db  0x00 ; '.'
000000000020fdd3         db  0x00 ; '.'
000000000020fdd4         db  0x00 ; '.'
000000000020fdd5         db  0x00 ; '.'
000000000020fdd6         db  0x00 ; '.'
000000000020fdd7         db  0x00 ; '.'
000000000020fdd8         db  0x61 ; 'a'
000000000020fdd9         db  0x00 ; '.'
000000000020fdda         db  0x00 ; '.'
000000000020fddb         db  0x00 ; '.'
000000000020fddc         db  0x00 ; '.'
000000000020fddd         db  0x00 ; '.'
000000000020fdde         db  0x00 ; '.'
000000000020fddf         db  0x00 ; '.'
000000000020fde0         db  0x06 ; '.'
000000000020fde1         db  0xb7 ; '.'
000000000020fde2         db  0x00 ; '.'
000000000020fde3         db  0x00 ; '.'
000000000020fde4         db  0x00 ; '.'
000000000020fde5         db  0x00 ; '.'
000000000020fde6         db  0x00 ; '.'
000000000020fde7         db  0x00 ; '.'
000000000020fde8         db  0x00 ; '.'
000000000020fde9         db  0x00 ; '.'
000000000020fdea         db  0x00 ; '.'
000000000020fdeb         db  0x00 ; '.'
000000000020fdec         db  0x00 ; '.'
000000000020fded         db  0x00 ; '.'
000000000020fdee         db  0x00 ; '.'
000000000020fdef         db  0x00 ; '.'
000000000020fdf0         db  0x00 ; '.'
000000000020fdf1         db  0x00 ; '.'
000000000020fdf2         db  0x00 ; '.'
000000000020fdf3         db  0x00 ; '.'
000000000020fdf4         db  0x00 ; '.'
000000000020fdf5         db  0x00 ; '.'
000000000020fdf6         db  0x00 ; '.'
000000000020fdf7         db  0x00 ; '.'
000000000020fdf8         db  0x67 ; 'g'
000000000020fdf9         db  0x00 ; '.'
000000000020fdfa         db  0x00 ; '.'
000000000020fdfb         db  0x00 ; '.'
000000000020fdfc         db  0x00 ; '.'
000000000020fdfd         db  0x00 ; '.'
000000000020fdfe         db  0x00 ; '.'
000000000020fdff         db  0x00 ; '.'
000000000020fe00         db  0x0b ; '.'
000000000020fe01         db  0xb7 ; '.'
000000000020fe02         db  0x00 ; '.'
000000000020fe03         db  0x00 ; '.'
000000000020fe04         db  0x00 ; '.'
000000000020fe05         db  0x00 ; '.'
000000000020fe06         db  0x00 ; '.'
000000000020fe07         db  0x00 ; '.'
000000000020fe08         db  0x01 ; '.'
000000000020fe09         db  0x00 ; '.'
000000000020fe0a         db  0x00 ; '.'
000000000020fe0b         db  0x00 ; '.'
000000000020fe0c         db  0x00 ; '.'
000000000020fe0d         db  0x00 ; '.'
000000000020fe0e         db  0x00 ; '.'
000000000020fe0f         db  0x00 ; '.'
000000000020fe10         db  0x00 ; '.'
000000000020fe11         db  0x00 ; '.'
000000000020fe12         db  0x00 ; '.'
000000000020fe13         db  0x00 ; '.'
000000000020fe14         db  0x00 ; '.'
000000000020fe15         db  0x00 ; '.'
000000000020fe16         db  0x00 ; '.'
000000000020fe17         db  0x00 ; '.'
000000000020fe18         db  0x46 ; 'F'
000000000020fe19         db  0x00 ; '.'
000000000020fe1a         db  0x00 ; '.'
000000000020fe1b         db  0x00 ; '.'
000000000020fe1c         db  0x00 ; '.'
000000000020fe1d         db  0x00 ; '.'
000000000020fe1e         db  0x00 ; '.'
000000000020fe1f         db  0x00 ; '.'
000000000020fe20         db  0x10 ; '.'
000000000020fe21         db  0xb7 ; '.'
000000000020fe22         db  0x00 ; '.'
000000000020fe23         db  0x00 ; '.'
000000000020fe24         db  0x00 ; '.'
000000000020fe25         db  0x00 ; '.'
000000000020fe26         db  0x00 ; '.'
000000000020fe27         db  0x00 ; '.'
000000000020fe28         db  0x00 ; '.'
000000000020fe29         db  0x00 ; '.'
000000000020fe2a         db  0x00 ; '.'
000000000020fe2b         db  0x00 ; '.'
000000000020fe2c         db  0x00 ; '.'
000000000020fe2d         db  0x00 ; '.'
000000000020fe2e         db  0x00 ; '.'
000000000020fe2f         db  0x00 ; '.'
000000000020fe30         db  0x00 ; '.'
000000000020fe31         db  0x00 ; '.'
000000000020fe32         db  0x00 ; '.'
000000000020fe33         db  0x00 ; '.'
000000000020fe34         db  0x00 ; '.'
000000000020fe35         db  0x00 ; '.'
000000000020fe36         db  0x00 ; '.'
000000000020fe37         db  0x00 ; '.'
000000000020fe38         db  0x7e ; '~'
000000000020fe39         db  0xff ; '.'
000000000020fe3a         db  0xff ; '.'
000000000020fe3b         db  0xff ; '.'
000000000020fe3c         db  0x00 ; '.'
000000000020fe3d         db  0x00 ; '.'
000000000020fe3e         db  0x00 ; '.'
000000000020fe3f         db  0x00 ; '.'
000000000020fe40         db  0x15 ; '.'
000000000020fe41         db  0xb7 ; '.'
000000000020fe42         db  0x00 ; '.'
000000000020fe43         db  0x00 ; '.'
000000000020fe44         db  0x00 ; '.'
000000000020fe45         db  0x00 ; '.'
000000000020fe46         db  0x00 ; '.'
000000000020fe47         db  0x00 ; '.'
000000000020fe48         db  0x00 ; '.'
000000000020fe49         db  0x00 ; '.'
000000000020fe4a         db  0x00 ; '.'
000000000020fe4b         db  0x00 ; '.'
000000000020fe4c         db  0x00 ; '.'
000000000020fe4d         db  0x00 ; '.'
000000000020fe4e         db  0x00 ; '.'
000000000020fe4f         db  0x00 ; '.'
000000000020fe50         db  0x00 ; '.'
000000000020fe51         db  0x00 ; '.'
000000000020fe52         db  0x00 ; '.'
000000000020fe53         db  0x00 ; '.'
000000000020fe54         db  0x00 ; '.'
000000000020fe55         db  0x00 ; '.'
000000000020fe56         db  0x00 ; '.'
000000000020fe57         db  0x00 ; '.'
000000000020fe58         db  0x7d ; '}'
000000000020fe59         db  0xff ; '.'
000000000020fe5a         db  0xff ; '.'
000000000020fe5b         db  0xff ; '.'
000000000020fe5c         db  0x00 ; '.'
000000000020fe5d         db  0x00 ; '.'
000000000020fe5e         db  0x00 ; '.'
000000000020fe5f         db  0x00 ; '.'
000000000020fe60         db  0x00 ; '.'
000000000020fe61         db  0x00 ; '.'
000000000020fe62         db  0x00 ; '.'
000000000020fe63         db  0x00 ; '.'
000000000020fe64         db  0x00 ; '.'
000000000020fe65         db  0x00 ; '.'
000000000020fe66         db  0x00 ; '.'
000000000020fe67         db  0x00 ; '.'
000000000020fe68         db  0x00 ; '.'
000000000020fe69         db  0x00 ; '.'
000000000020fe6a         db  0x00 ; '.'
000000000020fe6b         db  0x00 ; '.'
000000000020fe6c         db  0x00 ; '.'
000000000020fe6d         db  0x00 ; '.'
000000000020fe6e         db  0x00 ; '.'
000000000020fe6f         db  0x00 ; '.'
000000000020fe70         db  0x00 ; '.'
000000000020fe71         db  0x00 ; '.'
000000000020fe72         db  0x00 ; '.'
000000000020fe73         db  0x00 ; '.'
000000000020fe74         db  0x00 ; '.'
000000000020fe75         db  0x00 ; '.'
000000000020fe76         db  0x00 ; '.'
000000000020fe77         db  0x00 ; '.'
000000000020fe78         db  0x00 ; '.'
000000000020fe79         db  0x00 ; '.'
000000000020fe7a         db  0x00 ; '.'
000000000020fe7b         db  0x00 ; '.'
000000000020fe7c         db  0x00 ; '.'
000000000020fe7d         db  0x00 ; '.'
000000000020fe7e         db  0x00 ; '.'
000000000020fe7f         db  0x00 ; '.'
                     control_info:
000000000020fe80         db  0xa4 ; '.'                                         ; DATA XREF=main+1054, main+1944, sub_4bd0+485, sub_4bd0+2472
000000000020fe81         db  0xb4 ; '.'
000000000020fe82         db  0x00 ; '.'
000000000020fe83         db  0x00 ; '.'
000000000020fe84         db  0x00 ; '.'
000000000020fe85         db  0x00 ; '.'
000000000020fe86         db  0x00 ; '.'
000000000020fe87         db  0x00 ; '.'
000000000020fe88         db  0x03 ; '.'
000000000020fe89         db  0x00 ; '.'
000000000020fe8a         db  0x00 ; '.'
000000000020fe8b         db  0x00 ; '.'
000000000020fe8c         db  0x00 ; '.'
000000000020fe8d         db  0x00 ; '.'
000000000020fe8e         db  0x00 ; '.'
000000000020fe8f         db  0x00 ; '.'
000000000020fe90         db  0x00 ; '.'
000000000020fe91         db  0x00 ; '.'
000000000020fe92         db  0x00 ; '.'
000000000020fe93         db  0x00 ; '.'
000000000020fe94         db  0x00 ; '.'
000000000020fe95         db  0x00 ; '.'
000000000020fe96         db  0x00 ; '.'
000000000020fe97         db  0x00 ; '.'
000000000020fe98         db  0x1d ; '.'                                         ; DATA XREF=sub_4bd0+370
000000000020fe99         db  0xb7 ; '.'
000000000020fe9a         db  0x00 ; '.'
000000000020fe9b         db  0x00 ; '.'
000000000020fe9c         db  0x00 ; '.'
000000000020fe9d         db  0x00 ; '.'
000000000020fe9e         db  0x00 ; '.'
000000000020fe9f         db  0x00 ; '.'
000000000020fea0         db  0x1c ; '.'
000000000020fea1         db  0x00 ; '.'
000000000020fea2         db  0x00 ; '.'
000000000020fea3         db  0x00 ; '.'
000000000020fea4         db  0x00 ; '.'
000000000020fea5         db  0x00 ; '.'
000000000020fea6         db  0x00 ; '.'
000000000020fea7         db  0x00 ; '.'
000000000020fea8         db  0x01 ; '.'
000000000020fea9         db  0x00 ; '.'
000000000020feaa         db  0x00 ; '.'
000000000020feab         db  0x00 ; '.'
000000000020feac         db  0x00 ; '.'
000000000020fead         db  0x00 ; '.'
000000000020feae         db  0x00 ; '.'
000000000020feaf         db  0x00 ; '.'
000000000020feb0         db  0x85 ; '.'
000000000020feb1         db  0xb8 ; '.'
000000000020feb2         db  0x00 ; '.'
000000000020feb3         db  0x00 ; '.'
000000000020feb4         db  0x00 ; '.'
000000000020feb5         db  0x00 ; '.'
000000000020feb6         db  0x00 ; '.'
000000000020feb7         db  0x00 ; '.'
000000000020feb8         db  0x7f ; '.'
000000000020feb9         db  0x00 ; '.'
000000000020feba         db  0x00 ; '.'
000000000020febb         db  0x00 ; '.'
000000000020febc         db  0x00 ; '.'
000000000020febd         db  0x00 ; '.'
000000000020febe         db  0x00 ; '.'
000000000020febf         db  0x00 ; '.'
000000000020fec0         db  0x02 ; '.'
000000000020fec1         db  0x00 ; '.'
000000000020fec2         db  0x00 ; '.'
000000000020fec3         db  0x00 ; '.'
000000000020fec4         db  0x00 ; '.'
000000000020fec5         db  0x00 ; '.'
000000000020fec6         db  0x00 ; '.'
000000000020fec7         db  0x00 ; '.'
000000000020fec8         db  0xd0 ; '.'
000000000020fec9         db  0xb8 ; '.'
000000000020feca         db  0x00 ; '.'
000000000020fecb         db  0x00 ; '.'
000000000020fecc         db  0x00 ; '.'
000000000020fecd         db  0x00 ; '.'
000000000020fece         db  0x00 ; '.'
000000000020fecf         db  0x00 ; '.'
000000000020fed0         db  0x15 ; '.'
000000000020fed1         db  0x00 ; '.'
000000000020fed2         db  0x00 ; '.'
000000000020fed3         db  0x00 ; '.'
000000000020fed4         db  0x00 ; '.'
000000000020fed5         db  0x00 ; '.'
000000000020fed6         db  0x00 ; '.'
000000000020fed7         db  0x00 ; '.'
000000000020fed8         db  0x03 ; '.'
000000000020fed9         db  0x00 ; '.'
000000000020feda         db  0x00 ; '.'
000000000020fedb         db  0x00 ; '.'
000000000020fedc         db  0x00 ; '.'
000000000020fedd         db  0x00 ; '.'
000000000020fede         db  0x00 ; '.'
000000000020fedf         db  0x00 ; '.'
000000000020fee0         db  0x22 ; '"'
000000000020fee1         db  0xb7 ; '.'
000000000020fee2         db  0x00 ; '.'
000000000020fee3         db  0x00 ; '.'
000000000020fee4         db  0x00 ; '.'
000000000020fee5         db  0x00 ; '.'
000000000020fee6         db  0x00 ; '.'
000000000020fee7         db  0x00 ; '.'
000000000020fee8         db  0x04 ; '.'
000000000020fee9         db  0x00 ; '.'
000000000020feea         db  0x00 ; '.'
000000000020feeb         db  0x00 ; '.'
000000000020feec         db  0x00 ; '.'
000000000020feed         db  0x00 ; '.'
000000000020feee         db  0x00 ; '.'
000000000020feef         db  0x00 ; '.'
000000000020fef0         db  0x04 ; '.'
000000000020fef1         db  0x00 ; '.'
000000000020fef2         db  0x00 ; '.'
000000000020fef3         db  0x00 ; '.'
000000000020fef4         db  0x00 ; '.'
000000000020fef5         db  0x00 ; '.'
000000000020fef6         db  0x00 ; '.'
000000000020fef7         db  0x00 ; '.'
000000000020fef8         db  0x26 ; '&'
000000000020fef9         db  0xb7 ; '.'
000000000020fefa         db  0x00 ; '.'
000000000020fefb         db  0x00 ; '.'
000000000020fefc         db  0x00 ; '.'
000000000020fefd         db  0x00 ; '.'
000000000020fefe         db  0x00 ; '.'
000000000020feff         db  0x00 ; '.'
000000000020ff00         db  0x00 ; '.'
000000000020ff01         db  0x00 ; '.'
000000000020ff02         db  0x00 ; '.'
000000000020ff03         db  0x00 ; '.'
000000000020ff04         db  0x00 ; '.'
000000000020ff05         db  0x00 ; '.'
000000000020ff06         db  0x00 ; '.'
000000000020ff07         db  0x00 ; '.'
000000000020ff08         db  0x0b ; '.'
000000000020ff09         db  0x00 ; '.'
000000000020ff0a         db  0x00 ; '.'
000000000020ff0b         db  0x00 ; '.'
000000000020ff0c         db  0x00 ; '.'
000000000020ff0d         db  0x00 ; '.'
000000000020ff0e         db  0x00 ; '.'
000000000020ff0f         db  0x00 ; '.'
000000000020ff10         db  0x2a ; '*'
000000000020ff11         db  0xb7 ; '.'
000000000020ff12         db  0x00 ; '.'
000000000020ff13         db  0x00 ; '.'
000000000020ff14         db  0x00 ; '.'
000000000020ff15         db  0x00 ; '.'
000000000020ff16         db  0x00 ; '.'
000000000020ff17         db  0x00 ; '.'
000000000020ff18         db  0x00 ; '.'
000000000020ff19         db  0x00 ; '.'
000000000020ff1a         db  0x00 ; '.'
000000000020ff1b         db  0x00 ; '.'
000000000020ff1c         db  0x00 ; '.'
000000000020ff1d         db  0x00 ; '.'
000000000020ff1e         db  0x00 ; '.'
000000000020ff1f         db  0x00 ; '.'
000000000020ff20         db  0x10 ; '.'
000000000020ff21         db  0x00 ; '.'
000000000020ff22         db  0x00 ; '.'
000000000020ff23         db  0x00 ; '.'
000000000020ff24         db  0x00 ; '.'
000000000020ff25         db  0x00 ; '.'
000000000020ff26         db  0x00 ; '.'
000000000020ff27         db  0x00 ; '.'
000000000020ff28         db  0x2f ; '/'
000000000020ff29         db  0xb7 ; '.'
000000000020ff2a         db  0x00 ; '.'
000000000020ff2b         db  0x00 ; '.'
000000000020ff2c         db  0x00 ; '.'
000000000020ff2d         db  0x00 ; '.'
000000000020ff2e         db  0x00 ; '.'
000000000020ff2f         db  0x00 ; '.'
000000000020ff30         db  0x00 ; '.'
000000000020ff31         db  0x00 ; '.'
000000000020ff32         db  0x00 ; '.'
000000000020ff33         db  0x00 ; '.'
000000000020ff34         db  0x00 ; '.'
000000000020ff35         db  0x00 ; '.'
000000000020ff36         db  0x00 ; '.'
000000000020ff37         db  0x00 ; '.'
000000000020ff38         db  0x07 ; '.'
000000000020ff39         db  0x00 ; '.'
000000000020ff3a         db  0x00 ; '.'
000000000020ff3b         db  0x00 ; '.'
000000000020ff3c         db  0x00 ; '.'
000000000020ff3d         db  0x00 ; '.'
000000000020ff3e         db  0x00 ; '.'
000000000020ff3f         db  0x00 ; '.'
000000000020ff40         db  0x35 ; '5'
000000000020ff41         db  0xb7 ; '.'
000000000020ff42         db  0x00 ; '.'
000000000020ff43         db  0x00 ; '.'
000000000020ff44         db  0x00 ; '.'
000000000020ff45         db  0x00 ; '.'
000000000020ff46         db  0x00 ; '.'
000000000020ff47         db  0x00 ; '.'
000000000020ff48         db  0x11 ; '.'
000000000020ff49         db  0x00 ; '.'
000000000020ff4a         db  0x00 ; '.'
000000000020ff4b         db  0x00 ; '.'
000000000020ff4c         db  0x00 ; '.'
000000000020ff4d         db  0x00 ; '.'
000000000020ff4e         db  0x00 ; '.'
000000000020ff4f         db  0x00 ; '.'
000000000020ff50         db  0x08 ; '.'
000000000020ff51         db  0x00 ; '.'
000000000020ff52         db  0x00 ; '.'
000000000020ff53         db  0x00 ; '.'
000000000020ff54         db  0x00 ; '.'
000000000020ff55         db  0x00 ; '.'
000000000020ff56         db  0x00 ; '.'
000000000020ff57         db  0x00 ; '.'
000000000020ff58         db  0xa7 ; '.'
000000000020ff59         db  0xb8 ; '.'
000000000020ff5a         db  0x00 ; '.'
000000000020ff5b         db  0x00 ; '.'
000000000020ff5c         db  0x00 ; '.'
000000000020ff5d         db  0x00 ; '.'
000000000020ff5e         db  0x00 ; '.'
000000000020ff5f         db  0x00 ; '.'
000000000020ff60         db  0x13 ; '.'
000000000020ff61         db  0x00 ; '.'
000000000020ff62         db  0x00 ; '.'
000000000020ff63         db  0x00 ; '.'
000000000020ff64         db  0x00 ; '.'
000000000020ff65         db  0x00 ; '.'
000000000020ff66         db  0x00 ; '.'
000000000020ff67         db  0x00 ; '.'
000000000020ff68         db  0x09 ; '.'
000000000020ff69         db  0x00 ; '.'
000000000020ff6a         db  0x00 ; '.'
000000000020ff6b         db  0x00 ; '.'
000000000020ff6c         db  0x00 ; '.'
000000000020ff6d         db  0x00 ; '.'
000000000020ff6e         db  0x00 ; '.'
000000000020ff6f         db  0x00 ; '.'
000000000020ff70         db  0x3b ; ';'
000000000020ff71         db  0xb7 ; '.'
000000000020ff72         db  0x00 ; '.'
000000000020ff73         db  0x00 ; '.'
000000000020ff74         db  0x00 ; '.'
000000000020ff75         db  0x00 ; '.'
000000000020ff76         db  0x00 ; '.'
000000000020ff77         db  0x00 ; '.'
000000000020ff78         db  0x1a ; '.'
000000000020ff79         db  0x00 ; '.'
000000000020ff7a         db  0x00 ; '.'
000000000020ff7b         db  0x00 ; '.'
000000000020ff7c         db  0x00 ; '.'
000000000020ff7d         db  0x00 ; '.'
000000000020ff7e         db  0x00 ; '.'
000000000020ff7f         db  0x00 ; '.'
000000000020ff80         db  0x0a ; '.'
000000000020ff81         db  0x00 ; '.'
000000000020ff82         db  0x00 ; '.'
000000000020ff83         db  0x00 ; '.'
000000000020ff84         db  0x00 ; '.'
000000000020ff85         db  0x00 ; '.'
000000000020ff86         db  0x00 ; '.'
000000000020ff87         db  0x00 ; '.'
000000000020ff88         db  0x80 ; '.'
000000000020ff89         db  0xb3 ; '.'
000000000020ff8a         db  0x00 ; '.'
000000000020ff8b         db  0x00 ; '.'
000000000020ff8c         db  0x00 ; '.'
000000000020ff8d         db  0x00 ; '.'
000000000020ff8e         db  0x00 ; '.'
000000000020ff8f         db  0x00 ; '.'
000000000020ff90         db  0x12 ; '.'
000000000020ff91         db  0x00 ; '.'
000000000020ff92         db  0x00 ; '.'
000000000020ff93         db  0x00 ; '.'
000000000020ff94         db  0x00 ; '.'
000000000020ff95         db  0x00 ; '.'
000000000020ff96         db  0x00 ; '.'
000000000020ff97         db  0x00 ; '.'
000000000020ff98         db  0x0c ; '.'
000000000020ff99         db  0x00 ; '.'
000000000020ff9a         db  0x00 ; '.'
000000000020ff9b         db  0x00 ; '.'
000000000020ff9c         db  0x00 ; '.'
000000000020ff9d         db  0x00 ; '.'
000000000020ff9e         db  0x00 ; '.'
000000000020ff9f         db  0x00 ; '.'
000000000020ffa0         db  0x40 ; '@'
000000000020ffa1         db  0xb7 ; '.'
000000000020ffa2         db  0x00 ; '.'
000000000020ffa3         db  0x00 ; '.'
000000000020ffa4         db  0x00 ; '.'
000000000020ffa5         db  0x00 ; '.'
000000000020ffa6         db  0x00 ; '.'
000000000020ffa7         db  0x00 ; '.'
000000000020ffa8         db  0x17 ; '.'
000000000020ffa9         db  0x00 ; '.'
000000000020ffaa         db  0x00 ; '.'
000000000020ffab         db  0x00 ; '.'
000000000020ffac         db  0x00 ; '.'
000000000020ffad         db  0x00 ; '.'
000000000020ffae         db  0x00 ; '.'
000000000020ffaf         db  0x00 ; '.'
000000000020ffb0         db  0x0e ; '.'
000000000020ffb1         db  0x00 ; '.'
000000000020ffb2         db  0x00 ; '.'
000000000020ffb3         db  0x00 ; '.'
000000000020ffb4         db  0x00 ; '.'
000000000020ffb5         db  0x00 ; '.'
000000000020ffb6         db  0x00 ; '.'
000000000020ffb7         db  0x00 ; '.'
000000000020ffb8         db  0x47 ; 'G'
000000000020ffb9         db  0xb7 ; '.'
000000000020ffba         db  0x00 ; '.'
000000000020ffbb         db  0x00 ; '.'
000000000020ffbc         db  0x00 ; '.'
000000000020ffbd         db  0x00 ; '.'
000000000020ffbe         db  0x00 ; '.'
000000000020ffbf         db  0x00 ; '.'
000000000020ffc0         db  0x16 ; '.'
000000000020ffc1         db  0x00 ; '.'
000000000020ffc2         db  0x00 ; '.'
000000000020ffc3         db  0x00 ; '.'
000000000020ffc4         db  0x00 ; '.'
000000000020ffc5         db  0x00 ; '.'
000000000020ffc6         db  0x00 ; '.'
000000000020ffc7         db  0x00 ; '.'
000000000020ffc8         db  0x0f ; '.'
000000000020ffc9         db  0x00 ; '.'
000000000020ffca         db  0x00 ; '.'
000000000020ffcb         db  0x00 ; '.'
000000000020ffcc         db  0x00 ; '.'
000000000020ffcd         db  0x00 ; '.'
000000000020ffce         db  0x00 ; '.'
000000000020ffcf         db  0x00 ; '.'
000000000020ffd0         db  0xff ; '.'
000000000020ffd1         db  0xb5 ; '.'
000000000020ffd2         db  0x00 ; '.'
000000000020ffd3         db  0x00 ; '.'
000000000020ffd4         db  0x00 ; '.'
000000000020ffd5         db  0x00 ; '.'
000000000020ffd6         db  0x00 ; '.'
000000000020ffd7         db  0x00 ; '.'
000000000020ffd8         db  0x0f ; '.'
000000000020ffd9         db  0x00 ; '.'
000000000020ffda         db  0x00 ; '.'
000000000020ffdb         db  0x00 ; '.'
000000000020ffdc         db  0x00 ; '.'
000000000020ffdd         db  0x00 ; '.'
000000000020ffde         db  0x00 ; '.'
000000000020ffdf         db  0x00 ; '.'
000000000020ffe0         db  0x0d ; '.'
000000000020ffe1         db  0x00 ; '.'
000000000020ffe2         db  0x00 ; '.'
000000000020ffe3         db  0x00 ; '.'
000000000020ffe4         db  0x00 ; '.'
000000000020ffe5         db  0x00 ; '.'
000000000020ffe6         db  0x00 ; '.'
000000000020ffe7         db  0x00 ; '.'
000000000020ffe8         db  0x4d ; 'M'
000000000020ffe9         db  0xb7 ; '.'
000000000020ffea         db  0x00 ; '.'
000000000020ffeb         db  0x00 ; '.'
000000000020ffec         db  0x00 ; '.'
000000000020ffed         db  0x00 ; '.'
000000000020ffee         db  0x00 ; '.'
000000000020ffef         db  0x00 ; '.'
000000000020fff0         db  0x0f ; '.'
000000000020fff1         db  0x00 ; '.'
000000000020fff2         db  0x00 ; '.'
000000000020fff3         db  0x00 ; '.'
000000000020fff4         db  0x00 ; '.'
000000000020fff5         db  0x00 ; '.'
000000000020fff6         db  0x00 ; '.'
000000000020fff7         db  0x00 ; '.'
000000000020fff8         db  0x0d ; '.'
000000000020fff9         db  0x00 ; '.'
000000000020fffa         db  0x00 ; '.'
000000000020fffb         db  0x00 ; '.'
000000000020fffc         db  0x00 ; '.'
000000000020fffd         db  0x00 ; '.'
000000000020fffe         db  0x00 ; '.'
000000000020ffff         db  0x00 ; '.'
0000000000210000         db  0x44 ; 'D'
0000000000210001         db  0xb5 ; '.'
0000000000210002         db  0x00 ; '.'
0000000000210003         db  0x00 ; '.'
0000000000210004         db  0x00 ; '.'
0000000000210005         db  0x00 ; '.'
0000000000210006         db  0x00 ; '.'
0000000000210007         db  0x00 ; '.'
0000000000210008         db  0x01 ; '.'
0000000000210009         db  0x00 ; '.'
000000000021000a         db  0x00 ; '.'
000000000021000b         db  0x00 ; '.'
000000000021000c         db  0x00 ; '.'
000000000021000d         db  0x00 ; '.'
000000000021000e         db  0x00 ; '.'
000000000021000f         db  0x00 ; '.'
0000000000210010         db  0x06 ; '.'
0000000000210011         db  0x00 ; '.'
0000000000210012         db  0x00 ; '.'
0000000000210013         db  0x00 ; '.'
0000000000210014         db  0x00 ; '.'
0000000000210015         db  0x00 ; '.'
0000000000210016         db  0x00 ; '.'
0000000000210017         db  0x00 ; '.'
0000000000210018         db  0x48 ; 'H'
0000000000210019         db  0xb5 ; '.'
000000000021001a         db  0x00 ; '.'
000000000021001b         db  0x00 ; '.'
000000000021001c         db  0x00 ; '.'
000000000021001d         db  0x00 ; '.'
000000000021001e         db  0x00 ; '.'
000000000021001f         db  0x00 ; '.'
0000000000210020         db  0x00 ; '.'
0000000000210021         db  0x00 ; '.'
0000000000210022         db  0x00 ; '.'
0000000000210023         db  0x00 ; '.'
0000000000210024         db  0x00 ; '.'
0000000000210025         db  0x00 ; '.'
0000000000210026         db  0x00 ; '.'
0000000000210027         db  0x00 ; '.'
0000000000210028         db  0x05 ; '.'
0000000000210029         db  0x00 ; '.'
000000000021002a         db  0x00 ; '.'
000000000021002b         db  0x00 ; '.'
000000000021002c         db  0x00 ; '.'
000000000021002d         db  0x00 ; '.'
000000000021002e         db  0x00 ; '.'
000000000021002f         db  0x00 ; '.'
0000000000210030         db  0x00 ; '.'
0000000000210031         db  0x00 ; '.'
0000000000210032         db  0x00 ; '.'
0000000000210033         db  0x00 ; '.'
0000000000210034         db  0x00 ; '.'
0000000000210035         db  0x00 ; '.'
0000000000210036         db  0x00 ; '.'
0000000000210037         db  0x00 ; '.'
0000000000210038         db  0x00 ; '.'
0000000000210039         db  0x00 ; '.'
000000000021003a         db  0x00 ; '.'
000000000021003b         db  0x00 ; '.'
000000000021003c         db  0x00 ; '.'
000000000021003d         db  0x00 ; '.'
000000000021003e         db  0x00 ; '.'
000000000021003f         db  0x00 ; '.'
0000000000210040         db  0x00 ; '.'
0000000000210041         db  0x00 ; '.'
0000000000210042         db  0x00 ; '.'
0000000000210043         db  0x00 ; '.'
0000000000210044         db  0x00 ; '.'
0000000000210045         db  0x00 ; '.'
0000000000210046         db  0x00 ; '.'
0000000000210047         db  0x00 ; '.'
0000000000210048         db  0x00 ; '.'
0000000000210049         db  0x00 ; '.'
000000000021004a         db  0x00 ; '.'
000000000021004b         db  0x00 ; '.'
000000000021004c         db  0x00 ; '.'
000000000021004d         db  0x00 ; '.'
000000000021004e         db  0x00 ; '.'
000000000021004f         db  0x00 ; '.'
0000000000210050         db  0x00 ; '.'
0000000000210051         db  0x00 ; '.'
0000000000210052         db  0x00 ; '.'
0000000000210053         db  0x00 ; '.'
0000000000210054         db  0x00 ; '.'
0000000000210055         db  0x00 ; '.'
0000000000210056         db  0x00 ; '.'
0000000000210057         db  0x00 ; '.'
0000000000210058         db  0x00 ; '.'
0000000000210059         db  0x00 ; '.'
000000000021005a         db  0x00 ; '.'
000000000021005b         db  0x00 ; '.'
000000000021005c         db  0x00 ; '.'
000000000021005d         db  0x00 ; '.'
000000000021005e         db  0x00 ; '.'
000000000021005f         db  0x00 ; '.'
                     mode_info:
0000000000210060         db  0x9d ; '.'                                         ; DATA XREF=main+1236, main+2140, apply_settings+86, sub_4bd0+2509
0000000000210061         db  0xb4 ; '.'
0000000000210062         db  0x00 ; '.'
0000000000210063         db  0x00 ; '.'
0000000000210064         db  0x00 ; '.'
0000000000210065         db  0x00 ; '.'
0000000000210066         db  0x00 ; '.'
0000000000210067         db  0x00 ; '.'
0000000000210068         db  0x00 ; '.'
0000000000210069         db  0x00 ; '.'
000000000021006a         db  0x00 ; '.'
000000000021006b         db  0x00 ; '.'
000000000021006c         db  0x04 ; '.'
000000000021006d         db  0x00 ; '.'
000000000021006e         db  0x00 ; '.'
000000000021006f         db  0x00 ; '.'
0000000000210070         db  0x00 ; '.'
0000000000210071         db  0x01 ; '.'
0000000000210072         db  0x00 ; '.'
0000000000210073         db  0x00 ; '.'
0000000000210074         db  0x00 ; '.'
0000000000210075         db  0x00 ; '.'
0000000000210076         db  0x00 ; '.'
0000000000210077         db  0x00 ; '.'
0000000000210078         db  0x00 ; '.'
0000000000210079         db  0x00 ; '.'
000000000021007a         db  0x00 ; '.'
000000000021007b         db  0x00 ; '.'
000000000021007c         db  0x00 ; '.'
000000000021007d         db  0x00 ; '.'
000000000021007e         db  0x00 ; '.'
000000000021007f         db  0x00 ; '.'
0000000000210080         db  0x55 ; 'U'
0000000000210081         db  0xb7 ; '.'
0000000000210082         db  0x00 ; '.'
0000000000210083         db  0x00 ; '.'
0000000000210084         db  0x00 ; '.'
0000000000210085         db  0x00 ; '.'
0000000000210086         db  0x00 ; '.'
0000000000210087         db  0x00 ; '.'
0000000000210088         db  0x00 ; '.'
0000000000210089         db  0x00 ; '.'
000000000021008a         db  0x00 ; '.'
000000000021008b         db  0x00 ; '.'
000000000021008c         db  0x04 ; '.'
000000000021008d         db  0x00 ; '.'
000000000021008e         db  0x00 ; '.'
000000000021008f         db  0x00 ; '.'
0000000000210090         db  0x00 ; '.'
0000000000210091         db  0x02 ; '.'
0000000000210092         db  0x00 ; '.'
0000000000210093         db  0x00 ; '.'
0000000000210094         db  0x00 ; '.'
0000000000210095         db  0x00 ; '.'
0000000000210096         db  0x00 ; '.'
0000000000210097         db  0x00 ; '.'
0000000000210098         db  0x00 ; '.'
0000000000210099         db  0x00 ; '.'
000000000021009a         db  0x00 ; '.'
000000000021009b         db  0x00 ; '.'
000000000021009c         db  0x00 ; '.'
000000000021009d         db  0x00 ; '.'
000000000021009e         db  0x00 ; '.'
000000000021009f         db  0x00 ; '.'
00000000002100a0         db  0x5c ; '\'
00000000002100a1         db  0xb7 ; '.'
00000000002100a2         db  0x00 ; '.'
00000000002100a3         db  0x00 ; '.'
00000000002100a4         db  0x00 ; '.'
00000000002100a5         db  0x00 ; '.'
00000000002100a6         db  0x00 ; '.'
00000000002100a7         db  0x00 ; '.'
00000000002100a8         db  0x00 ; '.'
00000000002100a9         db  0x00 ; '.'
00000000002100aa         db  0x00 ; '.'
00000000002100ab         db  0x00 ; '.'
00000000002100ac         db  0x04 ; '.'
00000000002100ad         db  0x00 ; '.'
00000000002100ae         db  0x00 ; '.'
00000000002100af         db  0x00 ; '.'
00000000002100b0         db  0x00 ; '.'
00000000002100b1         db  0x00 ; '.'
00000000002100b2         db  0x00 ; '.'
00000000002100b3         db  0x40 ; '@'
00000000002100b4         db  0x00 ; '.'
00000000002100b5         db  0x00 ; '.'
00000000002100b6         db  0x00 ; '.'
00000000002100b7         db  0x00 ; '.'
00000000002100b8         db  0x00 ; '.'
00000000002100b9         db  0x00 ; '.'
00000000002100ba         db  0x00 ; '.'
00000000002100bb         db  0x00 ; '.'
00000000002100bc         db  0x00 ; '.'
00000000002100bd         db  0x00 ; '.'
00000000002100be         db  0x00 ; '.'
00000000002100bf         db  0x00 ; '.'
00000000002100c0         db  0x63 ; 'c'
00000000002100c1         db  0xb7 ; '.'
00000000002100c2         db  0x00 ; '.'
00000000002100c3         db  0x00 ; '.'
00000000002100c4         db  0x00 ; '.'
00000000002100c5         db  0x00 ; '.'
00000000002100c6         db  0x00 ; '.'
00000000002100c7         db  0x00 ; '.'
00000000002100c8         db  0x00 ; '.'
00000000002100c9         db  0x00 ; '.'
00000000002100ca         db  0x00 ; '.'
00000000002100cb         db  0x00 ; '.'
00000000002100cc         db  0x00 ; '.'
00000000002100cd         db  0x00 ; '.'
00000000002100ce         db  0x00 ; '.'
00000000002100cf         db  0x00 ; '.'
00000000002100d0         db  0x00 ; '.'
00000000002100d1         db  0x00 ; '.'
00000000002100d2         db  0x00 ; '.'
00000000002100d3         db  0x00 ; '.'
00000000002100d4         db  0x00 ; '.'
00000000002100d5         db  0x00 ; '.'
00000000002100d6         db  0x00 ; '.'
00000000002100d7         db  0x00 ; '.'
00000000002100d8         db  0x30 ; '0'
00000000002100d9         db  0x00 ; '.'
00000000002100da         db  0x00 ; '.'
00000000002100db         db  0x00 ; '.'
00000000002100dc         db  0x00 ; '.'
00000000002100dd         db  0x00 ; '.'
00000000002100de         db  0x00 ; '.'
00000000002100df         db  0x00 ; '.'
00000000002100e0         db  0x67 ; 'g'
00000000002100e1         db  0xb7 ; '.'
00000000002100e2         db  0x00 ; '.'
00000000002100e3         db  0x00 ; '.'
00000000002100e4         db  0x00 ; '.'
00000000002100e5         db  0x00 ; '.'
00000000002100e6         db  0x00 ; '.'
00000000002100e7         db  0x00 ; '.'
00000000002100e8         db  0x00 ; '.'
00000000002100e9         db  0x00 ; '.'
00000000002100ea         db  0x00 ; '.'
00000000002100eb         db  0x00 ; '.'
00000000002100ec         db  0x00 ; '.'
00000000002100ed         db  0x00 ; '.'
00000000002100ee         db  0x00 ; '.'
00000000002100ef         db  0x00 ; '.'
00000000002100f0         db  0x10 ; '.'
00000000002100f1         db  0x00 ; '.'
00000000002100f2         db  0x00 ; '.'
00000000002100f3         db  0x00 ; '.'
00000000002100f4         db  0x00 ; '.'
00000000002100f5         db  0x00 ; '.'
00000000002100f6         db  0x00 ; '.'
00000000002100f7         db  0x00 ; '.'
00000000002100f8         db  0x30 ; '0'
00000000002100f9         db  0x00 ; '.'
00000000002100fa         db  0x00 ; '.'
00000000002100fb         db  0x00 ; '.'
00000000002100fc         db  0x00 ; '.'
00000000002100fd         db  0x00 ; '.'
00000000002100fe         db  0x00 ; '.'
00000000002100ff         db  0x00 ; '.'
0000000000210100         db  0x6b ; 'k'
0000000000210101         db  0xb7 ; '.'
0000000000210102         db  0x00 ; '.'
0000000000210103         db  0x00 ; '.'
0000000000210104         db  0x00 ; '.'
0000000000210105         db  0x00 ; '.'
0000000000210106         db  0x00 ; '.'
0000000000210107         db  0x00 ; '.'
0000000000210108         db  0x00 ; '.'
0000000000210109         db  0x00 ; '.'
000000000021010a         db  0x00 ; '.'
000000000021010b         db  0x00 ; '.'
000000000021010c         db  0x00 ; '.'
000000000021010d         db  0x00 ; '.'
000000000021010e         db  0x00 ; '.'
000000000021010f         db  0x00 ; '.'
0000000000210110         db  0x20 ; ' '
0000000000210111         db  0x00 ; '.'
0000000000210112         db  0x00 ; '.'
0000000000210113         db  0x00 ; '.'
0000000000210114         db  0x00 ; '.'
0000000000210115         db  0x00 ; '.'
0000000000210116         db  0x00 ; '.'
0000000000210117         db  0x00 ; '.'
0000000000210118         db  0x30 ; '0'
0000000000210119         db  0x00 ; '.'
000000000021011a         db  0x00 ; '.'
000000000021011b         db  0x00 ; '.'
000000000021011c         db  0x00 ; '.'
000000000021011d         db  0x00 ; '.'
000000000021011e         db  0x00 ; '.'
000000000021011f         db  0x00 ; '.'
0000000000210120         db  0x6f ; 'o'
0000000000210121         db  0xb7 ; '.'
0000000000210122         db  0x00 ; '.'
0000000000210123         db  0x00 ; '.'
0000000000210124         db  0x00 ; '.'
0000000000210125         db  0x00 ; '.'
0000000000210126         db  0x00 ; '.'
0000000000210127         db  0x00 ; '.'
0000000000210128         db  0x00 ; '.'
0000000000210129         db  0x00 ; '.'
000000000021012a         db  0x00 ; '.'
000000000021012b         db  0x00 ; '.'
000000000021012c         db  0x00 ; '.'
000000000021012d         db  0x00 ; '.'
000000000021012e         db  0x00 ; '.'
000000000021012f         db  0x00 ; '.'
0000000000210130         db  0x30 ; '0'
0000000000210131         db  0x00 ; '.'
0000000000210132         db  0x00 ; '.'
0000000000210133         db  0x00 ; '.'
0000000000210134         db  0x00 ; '.'
0000000000210135         db  0x00 ; '.'
0000000000210136         db  0x00 ; '.'
0000000000210137         db  0x00 ; '.'
0000000000210138         db  0x30 ; '0'
0000000000210139         db  0x00 ; '.'
000000000021013a         db  0x00 ; '.'
000000000021013b         db  0x00 ; '.'
000000000021013c         db  0x00 ; '.'
000000000021013d         db  0x00 ; '.'
000000000021013e         db  0x00 ; '.'
000000000021013f         db  0x00 ; '.'
0000000000210140         db  0x73 ; 's'
0000000000210141         db  0xb7 ; '.'
0000000000210142         db  0x00 ; '.'
0000000000210143         db  0x00 ; '.'
0000000000210144         db  0x00 ; '.'
0000000000210145         db  0x00 ; '.'
0000000000210146         db  0x00 ; '.'
0000000000210147         db  0x00 ; '.'
0000000000210148         db  0x00 ; '.'
0000000000210149         db  0x00 ; '.'
000000000021014a         db  0x00 ; '.'
000000000021014b         db  0x00 ; '.'
000000000021014c         db  0x04 ; '.'
000000000021014d         db  0x00 ; '.'
000000000021014e         db  0x00 ; '.'
000000000021014f         db  0x00 ; '.'
0000000000210150         db  0x00 ; '.'
0000000000210151         db  0x04 ; '.'
0000000000210152         db  0x00 ; '.'
0000000000210153         db  0x00 ; '.'
0000000000210154         db  0x00 ; '.'
0000000000210155         db  0x00 ; '.'
0000000000210156         db  0x00 ; '.'
0000000000210157         db  0x00 ; '.'
0000000000210158         db  0x00 ; '.'
0000000000210159         db  0x00 ; '.'
000000000021015a         db  0x00 ; '.'
000000000021015b         db  0x00 ; '.'
000000000021015c         db  0x00 ; '.'
000000000021015d         db  0x00 ; '.'
000000000021015e         db  0x00 ; '.'
000000000021015f         db  0x00 ; '.'
0000000000210160         db  0x79 ; 'y'
0000000000210161         db  0xb7 ; '.'
0000000000210162         db  0x00 ; '.'
0000000000210163         db  0x00 ; '.'
0000000000210164         db  0x00 ; '.'
0000000000210165         db  0x00 ; '.'
0000000000210166         db  0x00 ; '.'
0000000000210167         db  0x00 ; '.'
0000000000210168         db  0x00 ; '.'
0000000000210169         db  0x00 ; '.'
000000000021016a         db  0x00 ; '.'
000000000021016b         db  0x00 ; '.'
000000000021016c         db  0x0c ; '.'
000000000021016d         db  0x00 ; '.'
000000000021016e         db  0x00 ; '.'
000000000021016f         db  0x00 ; '.'
0000000000210170         db  0x00 ; '.'
0000000000210171         db  0x04 ; '.'
0000000000210172         db  0x00 ; '.'
0000000000210173         db  0x00 ; '.'
0000000000210174         db  0x00 ; '.'
0000000000210175         db  0x00 ; '.'
0000000000210176         db  0x00 ; '.'
0000000000210177         db  0x00 ; '.'
0000000000210178         db  0x00 ; '.'
0000000000210179         db  0x00 ; '.'
000000000021017a         db  0x00 ; '.'
000000000021017b         db  0x00 ; '.'
000000000021017c         db  0x00 ; '.'
000000000021017d         db  0x00 ; '.'
000000000021017e         db  0x00 ; '.'
000000000021017f         db  0x00 ; '.'
0000000000210180         db  0x7d ; '}'
0000000000210181         db  0xb7 ; '.'
0000000000210182         db  0x00 ; '.'
0000000000210183         db  0x00 ; '.'
0000000000210184         db  0x00 ; '.'
0000000000210185         db  0x00 ; '.'
0000000000210186         db  0x00 ; '.'
0000000000210187         db  0x00 ; '.'
0000000000210188         db  0x00 ; '.'
0000000000210189         db  0x00 ; '.'
000000000021018a         db  0x00 ; '.'
000000000021018b         db  0x00 ; '.'
000000000021018c         db  0x04 ; '.'
000000000021018d         db  0x00 ; '.'
000000000021018e         db  0x00 ; '.'
000000000021018f         db  0x00 ; '.'
0000000000210190         db  0x40 ; '@'
0000000000210191         db  0x00 ; '.'
0000000000210192         db  0x00 ; '.'
0000000000210193         db  0x00 ; '.'
0000000000210194         db  0x00 ; '.'
0000000000210195         db  0x00 ; '.'
0000000000210196         db  0x00 ; '.'
0000000000210197         db  0x00 ; '.'
0000000000210198         db  0x00 ; '.'
0000000000210199         db  0x00 ; '.'
000000000021019a         db  0x00 ; '.'
000000000021019b         db  0x00 ; '.'
000000000021019c         db  0x00 ; '.'
000000000021019d         db  0x00 ; '.'
000000000021019e         db  0x00 ; '.'
000000000021019f         db  0x00 ; '.'
00000000002101a0         db  0x84 ; '.'
00000000002101a1         db  0xb7 ; '.'
00000000002101a2         db  0x00 ; '.'
00000000002101a3         db  0x00 ; '.'
00000000002101a4         db  0x00 ; '.'
00000000002101a5         db  0x00 ; '.'
00000000002101a6         db  0x00 ; '.'
00000000002101a7         db  0x00 ; '.'
00000000002101a8         db  0x00 ; '.'
00000000002101a9         db  0x00 ; '.'
00000000002101aa         db  0x00 ; '.'
00000000002101ab         db  0x00 ; '.'
00000000002101ac         db  0x05 ; '.'
00000000002101ad         db  0x00 ; '.'
00000000002101ae         db  0x00 ; '.'
00000000002101af         db  0x00 ; '.'
00000000002101b0         db  0x80 ; '.'
00000000002101b1         db  0x00 ; '.'
00000000002101b2         db  0x00 ; '.'
00000000002101b3         db  0x00 ; '.'
00000000002101b4         db  0x00 ; '.'
00000000002101b5         db  0x00 ; '.'
00000000002101b6         db  0x00 ; '.'
00000000002101b7         db  0x00 ; '.'
00000000002101b8         db  0x00 ; '.'
00000000002101b9         db  0x00 ; '.'
00000000002101ba         db  0x00 ; '.'
00000000002101bb         db  0x00 ; '.'
00000000002101bc         db  0x00 ; '.'
00000000002101bd         db  0x00 ; '.'
00000000002101be         db  0x00 ; '.'
00000000002101bf         db  0x00 ; '.'
00000000002101c0         db  0x8a ; '.'
00000000002101c1         db  0xb7 ; '.'
00000000002101c2         db  0x00 ; '.'
00000000002101c3         db  0x00 ; '.'
00000000002101c4         db  0x00 ; '.'
00000000002101c5         db  0x00 ; '.'
00000000002101c6         db  0x00 ; '.'
00000000002101c7         db  0x00 ; '.'
00000000002101c8         db  0x00 ; '.'
00000000002101c9         db  0x00 ; '.'
00000000002101ca         db  0x00 ; '.'
00000000002101cb         db  0x00 ; '.'
00000000002101cc         db  0x04 ; '.'
00000000002101cd         db  0x00 ; '.'
00000000002101ce         db  0x00 ; '.'
00000000002101cf         db  0x00 ; '.'
00000000002101d0         db  0x00 ; '.'
00000000002101d1         db  0x08 ; '.'
00000000002101d2         db  0x00 ; '.'
00000000002101d3         db  0x00 ; '.'
00000000002101d4         db  0x00 ; '.'
00000000002101d5         db  0x00 ; '.'
00000000002101d6         db  0x00 ; '.'
00000000002101d7         db  0x00 ; '.'
00000000002101d8         db  0x00 ; '.'
00000000002101d9         db  0x00 ; '.'
00000000002101da         db  0x00 ; '.'
00000000002101db         db  0x00 ; '.'
00000000002101dc         db  0x00 ; '.'
00000000002101dd         db  0x00 ; '.'
00000000002101de         db  0x00 ; '.'
00000000002101df         db  0x00 ; '.'
00000000002101e0         db  0x91 ; '.'
00000000002101e1         db  0xb7 ; '.'
00000000002101e2         db  0x00 ; '.'
00000000002101e3         db  0x00 ; '.'
00000000002101e4         db  0x00 ; '.'
00000000002101e5         db  0x00 ; '.'
00000000002101e6         db  0x00 ; '.'
00000000002101e7         db  0x00 ; '.'
00000000002101e8         db  0x00 ; '.'
00000000002101e9         db  0x00 ; '.'
00000000002101ea         db  0x00 ; '.'
00000000002101eb         db  0x00 ; '.'
00000000002101ec         db  0x04 ; '.'
00000000002101ed         db  0x00 ; '.'
00000000002101ee         db  0x00 ; '.'
00000000002101ef         db  0x00 ; '.'
00000000002101f0         db  0x00 ; '.'
00000000002101f1         db  0x00 ; '.'
00000000002101f2         db  0x00 ; '.'
00000000002101f3         db  0x80 ; '.'
00000000002101f4         db  0x00 ; '.'
00000000002101f5         db  0x00 ; '.'
00000000002101f6         db  0x00 ; '.'
00000000002101f7         db  0x00 ; '.'
00000000002101f8         db  0x00 ; '.'
00000000002101f9         db  0x00 ; '.'
00000000002101fa         db  0x00 ; '.'
00000000002101fb         db  0x00 ; '.'
00000000002101fc         db  0x00 ; '.'
00000000002101fd         db  0x00 ; '.'
00000000002101fe         db  0x00 ; '.'
00000000002101ff         db  0x00 ; '.'
0000000000210200         db  0x99 ; '.'
0000000000210201         db  0xb7 ; '.'
0000000000210202         db  0x00 ; '.'
0000000000210203         db  0x00 ; '.'
0000000000210204         db  0x00 ; '.'
0000000000210205         db  0x00 ; '.'
0000000000210206         db  0x00 ; '.'
0000000000210207         db  0x00 ; '.'
0000000000210208         db  0x01 ; '.'
0000000000210209         db  0x00 ; '.'
000000000021020a         db  0x00 ; '.'
000000000021020b         db  0x00 ; '.'
000000000021020c         db  0x06 ; '.'
000000000021020d         db  0x00 ; '.'
000000000021020e         db  0x00 ; '.'
000000000021020f         db  0x00 ; '.'
0000000000210210         db  0x01 ; '.'
0000000000210211         db  0x00 ; '.'
0000000000210212         db  0x00 ; '.'
0000000000210213         db  0x00 ; '.'
0000000000210214         db  0x00 ; '.'
0000000000210215         db  0x00 ; '.'
0000000000210216         db  0x00 ; '.'
0000000000210217         db  0x00 ; '.'
0000000000210218         db  0x00 ; '.'
0000000000210219         db  0x00 ; '.'
000000000021021a         db  0x00 ; '.'
000000000021021b         db  0x00 ; '.'
000000000021021c         db  0x00 ; '.'
000000000021021d         db  0x00 ; '.'
000000000021021e         db  0x00 ; '.'
000000000021021f         db  0x00 ; '.'
0000000000210220         db  0xa0 ; '.'
0000000000210221         db  0xb7 ; '.'
0000000000210222         db  0x00 ; '.'
0000000000210223         db  0x00 ; '.'
0000000000210224         db  0x00 ; '.'
0000000000210225         db  0x00 ; '.'
0000000000210226         db  0x00 ; '.'
0000000000210227         db  0x00 ; '.'
0000000000210228         db  0x01 ; '.'
0000000000210229         db  0x00 ; '.'
000000000021022a         db  0x00 ; '.'
000000000021022b         db  0x00 ; '.'
000000000021022c         db  0x05 ; '.'
000000000021022d         db  0x00 ; '.'
000000000021022e         db  0x00 ; '.'
000000000021022f         db  0x00 ; '.'
0000000000210230         db  0x02 ; '.'
0000000000210231         db  0x00 ; '.'
0000000000210232         db  0x00 ; '.'
0000000000210233         db  0x00 ; '.'
0000000000210234         db  0x00 ; '.'
0000000000210235         db  0x00 ; '.'
0000000000210236         db  0x00 ; '.'
0000000000210237         db  0x00 ; '.'
0000000000210238         db  0x00 ; '.'
0000000000210239         db  0x00 ; '.'
000000000021023a         db  0x00 ; '.'
000000000021023b         db  0x00 ; '.'
000000000021023c         db  0x00 ; '.'
000000000021023d         db  0x00 ; '.'
000000000021023e         db  0x00 ; '.'
000000000021023f         db  0x00 ; '.'
0000000000210240         db  0xa7 ; '.'
0000000000210241         db  0xb7 ; '.'
0000000000210242         db  0x00 ; '.'
0000000000210243         db  0x00 ; '.'
0000000000210244         db  0x00 ; '.'
0000000000210245         db  0x00 ; '.'
0000000000210246         db  0x00 ; '.'
0000000000210247         db  0x00 ; '.'
0000000000210248         db  0x01 ; '.'
0000000000210249         db  0x00 ; '.'
000000000021024a         db  0x00 ; '.'
000000000021024b         db  0x00 ; '.'
000000000021024c         db  0x04 ; '.'
000000000021024d         db  0x00 ; '.'
000000000021024e         db  0x00 ; '.'
000000000021024f         db  0x00 ; '.'
0000000000210250         db  0x04 ; '.'
0000000000210251         db  0x00 ; '.'
0000000000210252         db  0x00 ; '.'
0000000000210253         db  0x00 ; '.'
0000000000210254         db  0x00 ; '.'
0000000000210255         db  0x00 ; '.'
0000000000210256         db  0x00 ; '.'
0000000000210257         db  0x00 ; '.'
0000000000210258         db  0x00 ; '.'
0000000000210259         db  0x00 ; '.'
000000000021025a         db  0x00 ; '.'
000000000021025b         db  0x00 ; '.'
000000000021025c         db  0x00 ; '.'
000000000021025d         db  0x00 ; '.'
000000000021025e         db  0x00 ; '.'
000000000021025f         db  0x00 ; '.'
0000000000210260         db  0xae ; '.'
0000000000210261         db  0xb7 ; '.'
0000000000210262         db  0x00 ; '.'
0000000000210263         db  0x00 ; '.'
0000000000210264         db  0x00 ; '.'
0000000000210265         db  0x00 ; '.'
0000000000210266         db  0x00 ; '.'
0000000000210267         db  0x00 ; '.'
0000000000210268         db  0x01 ; '.'
0000000000210269         db  0x00 ; '.'
000000000021026a         db  0x00 ; '.'
000000000021026b         db  0x00 ; '.'
000000000021026c         db  0x04 ; '.'
000000000021026d         db  0x00 ; '.'
000000000021026e         db  0x00 ; '.'
000000000021026f         db  0x00 ; '.'
0000000000210270         db  0x08 ; '.'
0000000000210271         db  0x00 ; '.'
0000000000210272         db  0x00 ; '.'
0000000000210273         db  0x00 ; '.'
0000000000210274         db  0x00 ; '.'
0000000000210275         db  0x00 ; '.'
0000000000210276         db  0x00 ; '.'
0000000000210277         db  0x00 ; '.'
0000000000210278         db  0x00 ; '.'
0000000000210279         db  0x00 ; '.'
000000000021027a         db  0x00 ; '.'
000000000021027b         db  0x00 ; '.'
000000000021027c         db  0x00 ; '.'
000000000021027d         db  0x00 ; '.'
000000000021027e         db  0x00 ; '.'
000000000021027f         db  0x00 ; '.'
0000000000210280         db  0xb5 ; '.'
0000000000210281         db  0xb7 ; '.'
0000000000210282         db  0x00 ; '.'
0000000000210283         db  0x00 ; '.'
0000000000210284         db  0x00 ; '.'
0000000000210285         db  0x00 ; '.'
0000000000210286         db  0x00 ; '.'
0000000000210287         db  0x00 ; '.'
0000000000210288         db  0x01 ; '.'
0000000000210289         db  0x00 ; '.'
000000000021028a         db  0x00 ; '.'
000000000021028b         db  0x00 ; '.'
000000000021028c         db  0x04 ; '.'
000000000021028d         db  0x00 ; '.'
000000000021028e         db  0x00 ; '.'
000000000021028f         db  0x00 ; '.'
0000000000210290         db  0x10 ; '.'
0000000000210291         db  0x00 ; '.'
0000000000210292         db  0x00 ; '.'
0000000000210293         db  0x00 ; '.'
0000000000210294         db  0x00 ; '.'
0000000000210295         db  0x00 ; '.'
0000000000210296         db  0x00 ; '.'
0000000000210297         db  0x00 ; '.'
0000000000210298         db  0x00 ; '.'
0000000000210299         db  0x00 ; '.'
000000000021029a         db  0x00 ; '.'
000000000021029b         db  0x00 ; '.'
000000000021029c         db  0x00 ; '.'
000000000021029d         db  0x00 ; '.'
000000000021029e         db  0x00 ; '.'
000000000021029f         db  0x00 ; '.'
00000000002102a0         db  0xbb ; '.'
00000000002102a1         db  0xb7 ; '.'
00000000002102a2         db  0x00 ; '.'
00000000002102a3         db  0x00 ; '.'
00000000002102a4         db  0x00 ; '.'
00000000002102a5         db  0x00 ; '.'
00000000002102a6         db  0x00 ; '.'
00000000002102a7         db  0x00 ; '.'
00000000002102a8         db  0x01 ; '.'
00000000002102a9         db  0x00 ; '.'
00000000002102aa         db  0x00 ; '.'
00000000002102ab         db  0x00 ; '.'
00000000002102ac         db  0x04 ; '.'
00000000002102ad         db  0x00 ; '.'
00000000002102ae         db  0x00 ; '.'
00000000002102af         db  0x00 ; '.'
00000000002102b0         db  0x20 ; ' '
00000000002102b1         db  0x00 ; '.'
00000000002102b2         db  0x00 ; '.'
00000000002102b3         db  0x00 ; '.'
00000000002102b4         db  0x00 ; '.'
00000000002102b5         db  0x00 ; '.'
00000000002102b6         db  0x00 ; '.'
00000000002102b7         db  0x00 ; '.'
00000000002102b8         db  0x00 ; '.'
00000000002102b9         db  0x00 ; '.'
00000000002102ba         db  0x00 ; '.'
00000000002102bb         db  0x00 ; '.'
00000000002102bc         db  0x00 ; '.'
00000000002102bd         db  0x00 ; '.'
00000000002102be         db  0x00 ; '.'
00000000002102bf         db  0x00 ; '.'
00000000002102c0         db  0xc2 ; '.'
00000000002102c1         db  0xb7 ; '.'
00000000002102c2         db  0x00 ; '.'
00000000002102c3         db  0x00 ; '.'
00000000002102c4         db  0x00 ; '.'
00000000002102c5         db  0x00 ; '.'
00000000002102c6         db  0x00 ; '.'
00000000002102c7         db  0x00 ; '.'
00000000002102c8         db  0x01 ; '.'
00000000002102c9         db  0x00 ; '.'
00000000002102ca         db  0x00 ; '.'
00000000002102cb         db  0x00 ; '.'
00000000002102cc         db  0x06 ; '.'
00000000002102cd         db  0x00 ; '.'
00000000002102ce         db  0x00 ; '.'
00000000002102cf         db  0x00 ; '.'
00000000002102d0         db  0x40 ; '@'
00000000002102d1         db  0x00 ; '.'
00000000002102d2         db  0x00 ; '.'
00000000002102d3         db  0x00 ; '.'
00000000002102d4         db  0x00 ; '.'
00000000002102d5         db  0x00 ; '.'
00000000002102d6         db  0x00 ; '.'
00000000002102d7         db  0x00 ; '.'
00000000002102d8         db  0x00 ; '.'
00000000002102d9         db  0x00 ; '.'
00000000002102da         db  0x00 ; '.'
00000000002102db         db  0x00 ; '.'
00000000002102dc         db  0x00 ; '.'
00000000002102dd         db  0x00 ; '.'
00000000002102de         db  0x00 ; '.'
00000000002102df         db  0x00 ; '.'
00000000002102e0         db  0xc8 ; '.'
00000000002102e1         db  0xb7 ; '.'
00000000002102e2         db  0x00 ; '.'
00000000002102e3         db  0x00 ; '.'
00000000002102e4         db  0x00 ; '.'
00000000002102e5         db  0x00 ; '.'
00000000002102e6         db  0x00 ; '.'
00000000002102e7         db  0x00 ; '.'
00000000002102e8         db  0x01 ; '.'
00000000002102e9         db  0x00 ; '.'
00000000002102ea         db  0x00 ; '.'
00000000002102eb         db  0x00 ; '.'
00000000002102ec         db  0x06 ; '.'
00000000002102ed         db  0x00 ; '.'
00000000002102ee         db  0x00 ; '.'
00000000002102ef         db  0x00 ; '.'
00000000002102f0         db  0x80 ; '.'
00000000002102f1         db  0x00 ; '.'
00000000002102f2         db  0x00 ; '.'
00000000002102f3         db  0x00 ; '.'
00000000002102f4         db  0x00 ; '.'
00000000002102f5         db  0x00 ; '.'
00000000002102f6         db  0x00 ; '.'
00000000002102f7         db  0x00 ; '.'
00000000002102f8         db  0x00 ; '.'
00000000002102f9         db  0x00 ; '.'
00000000002102fa         db  0x00 ; '.'
00000000002102fb         db  0x00 ; '.'
00000000002102fc         db  0x00 ; '.'
00000000002102fd         db  0x00 ; '.'
00000000002102fe         db  0x00 ; '.'
00000000002102ff         db  0x00 ; '.'
0000000000210300         db  0xce ; '.'
0000000000210301         db  0xb7 ; '.'
0000000000210302         db  0x00 ; '.'
0000000000210303         db  0x00 ; '.'
0000000000210304         db  0x00 ; '.'
0000000000210305         db  0x00 ; '.'
0000000000210306         db  0x00 ; '.'
0000000000210307         db  0x00 ; '.'
0000000000210308         db  0x01 ; '.'
0000000000210309         db  0x00 ; '.'
000000000021030a         db  0x00 ; '.'
000000000021030b         db  0x00 ; '.'
000000000021030c         db  0x05 ; '.'
000000000021030d         db  0x00 ; '.'
000000000021030e         db  0x00 ; '.'
000000000021030f         db  0x00 ; '.'
0000000000210310         db  0x00 ; '.'
0000000000210311         db  0x01 ; '.'
0000000000210312         db  0x00 ; '.'
0000000000210313         db  0x00 ; '.'
0000000000210314         db  0x00 ; '.'
0000000000210315         db  0x00 ; '.'
0000000000210316         db  0x00 ; '.'
0000000000210317         db  0x00 ; '.'
0000000000210318         db  0x00 ; '.'
0000000000210319         db  0x00 ; '.'
000000000021031a         db  0x00 ; '.'
000000000021031b         db  0x00 ; '.'
000000000021031c         db  0x00 ; '.'
000000000021031d         db  0x00 ; '.'
000000000021031e         db  0x00 ; '.'
000000000021031f         db  0x00 ; '.'
0000000000210320         db  0xd4 ; '.'
0000000000210321         db  0xb7 ; '.'
0000000000210322         db  0x00 ; '.'
0000000000210323         db  0x00 ; '.'
0000000000210324         db  0x00 ; '.'
0000000000210325         db  0x00 ; '.'
0000000000210326         db  0x00 ; '.'
0000000000210327         db  0x00 ; '.'
0000000000210328         db  0x01 ; '.'
0000000000210329         db  0x00 ; '.'
000000000021032a         db  0x00 ; '.'
000000000021032b         db  0x00 ; '.'
000000000021032c         db  0x04 ; '.'
000000000021032d         db  0x00 ; '.'
000000000021032e         db  0x00 ; '.'
000000000021032f         db  0x00 ; '.'
0000000000210330         db  0x00 ; '.'
0000000000210331         db  0x04 ; '.'
0000000000210332         db  0x00 ; '.'
0000000000210333         db  0x00 ; '.'
0000000000210334         db  0x00 ; '.'
0000000000210335         db  0x00 ; '.'
0000000000210336         db  0x00 ; '.'
0000000000210337         db  0x00 ; '.'
0000000000210338         db  0x00 ; '.'
0000000000210339         db  0x00 ; '.'
000000000021033a         db  0x00 ; '.'
000000000021033b         db  0x00 ; '.'
000000000021033c         db  0x00 ; '.'
000000000021033d         db  0x00 ; '.'
000000000021033e         db  0x00 ; '.'
000000000021033f         db  0x00 ; '.'
0000000000210340         db  0xd9 ; '.'
0000000000210341         db  0xb7 ; '.'
0000000000210342         db  0x00 ; '.'
0000000000210343         db  0x00 ; '.'
0000000000210344         db  0x00 ; '.'
0000000000210345         db  0x00 ; '.'
0000000000210346         db  0x00 ; '.'
0000000000210347         db  0x00 ; '.'
0000000000210348         db  0x01 ; '.'
0000000000210349         db  0x00 ; '.'
000000000021034a         db  0x00 ; '.'
000000000021034b         db  0x00 ; '.'
000000000021034c         db  0x06 ; '.'
000000000021034d         db  0x00 ; '.'
000000000021034e         db  0x00 ; '.'
000000000021034f         db  0x00 ; '.'
0000000000210350         db  0x00 ; '.'
0000000000210351         db  0x10 ; '.'
0000000000210352         db  0x00 ; '.'
0000000000210353         db  0x00 ; '.'
0000000000210354         db  0x00 ; '.'
0000000000210355         db  0x00 ; '.'
0000000000210356         db  0x00 ; '.'
0000000000210357         db  0x00 ; '.'
0000000000210358         db  0x00 ; '.'
0000000000210359         db  0x00 ; '.'
000000000021035a         db  0x00 ; '.'
000000000021035b         db  0x00 ; '.'
000000000021035c         db  0x00 ; '.'
000000000021035d         db  0x00 ; '.'
000000000021035e         db  0x00 ; '.'
000000000021035f         db  0x00 ; '.'
0000000000210360         db  0xdf ; '.'
0000000000210361         db  0xb7 ; '.'
0000000000210362         db  0x00 ; '.'
0000000000210363         db  0x00 ; '.'
0000000000210364         db  0x00 ; '.'
0000000000210365         db  0x00 ; '.'
0000000000210366         db  0x00 ; '.'
0000000000210367         db  0x00 ; '.'
0000000000210368         db  0x01 ; '.'
0000000000210369         db  0x00 ; '.'
000000000021036a         db  0x00 ; '.'
000000000021036b         db  0x00 ; '.'
000000000021036c         db  0x0c ; '.'
000000000021036d         db  0x00 ; '.'
000000000021036e         db  0x00 ; '.'
000000000021036f         db  0x00 ; '.'
0000000000210370         db  0x00 ; '.'
0000000000210371         db  0x10 ; '.'
0000000000210372         db  0x00 ; '.'
0000000000210373         db  0x00 ; '.'
0000000000210374         db  0x00 ; '.'
0000000000210375         db  0x00 ; '.'
0000000000210376         db  0x00 ; '.'
0000000000210377         db  0x00 ; '.'
0000000000210378         db  0x00 ; '.'
0000000000210379         db  0x00 ; '.'
000000000021037a         db  0x00 ; '.'
000000000021037b         db  0x00 ; '.'
000000000021037c         db  0x00 ; '.'
000000000021037d         db  0x00 ; '.'
000000000021037e         db  0x00 ; '.'
000000000021037f         db  0x00 ; '.'
0000000000210380         db  0xe6 ; '.'
0000000000210381         db  0xb7 ; '.'
0000000000210382         db  0x00 ; '.'
0000000000210383         db  0x00 ; '.'
0000000000210384         db  0x00 ; '.'
0000000000210385         db  0x00 ; '.'
0000000000210386         db  0x00 ; '.'
0000000000210387         db  0x00 ; '.'
0000000000210388         db  0x01 ; '.'
0000000000210389         db  0x00 ; '.'
000000000021038a         db  0x00 ; '.'
000000000021038b         db  0x00 ; '.'
000000000021038c         db  0x06 ; '.'
000000000021038d         db  0x00 ; '.'
000000000021038e         db  0x00 ; '.'
000000000021038f         db  0x00 ; '.'
0000000000210390         db  0x00 ; '.'
0000000000210391         db  0x02 ; '.'
0000000000210392         db  0x00 ; '.'
0000000000210393         db  0x00 ; '.'
0000000000210394         db  0x00 ; '.'
0000000000210395         db  0x00 ; '.'
0000000000210396         db  0x00 ; '.'
0000000000210397         db  0x00 ; '.'
0000000000210398         db  0x00 ; '.'
0000000000210399         db  0x00 ; '.'
000000000021039a         db  0x00 ; '.'
000000000021039b         db  0x00 ; '.'
000000000021039c         db  0x00 ; '.'
000000000021039d         db  0x00 ; '.'
000000000021039e         db  0x00 ; '.'
000000000021039f         db  0x00 ; '.'
00000000002103a0         db  0xe6 ; '.'
00000000002103a1         db  0xb3 ; '.'
00000000002103a2         db  0x00 ; '.'
00000000002103a3         db  0x00 ; '.'
00000000002103a4         db  0x00 ; '.'
00000000002103a5         db  0x00 ; '.'
00000000002103a6         db  0x00 ; '.'
00000000002103a7         db  0x00 ; '.'
00000000002103a8         db  0x01 ; '.'
00000000002103a9         db  0x00 ; '.'
00000000002103aa         db  0x00 ; '.'
00000000002103ab         db  0x00 ; '.'
00000000002103ac         db  0x06 ; '.'
00000000002103ad         db  0x00 ; '.'
00000000002103ae         db  0x00 ; '.'
00000000002103af         db  0x00 ; '.'
00000000002103b0         db  0x00 ; '.'
00000000002103b1         db  0x08 ; '.'
00000000002103b2         db  0x00 ; '.'
00000000002103b3         db  0x00 ; '.'
00000000002103b4         db  0x00 ; '.'
00000000002103b5         db  0x00 ; '.'
00000000002103b6         db  0x00 ; '.'
00000000002103b7         db  0x00 ; '.'
00000000002103b8         db  0x00 ; '.'
00000000002103b9         db  0x00 ; '.'
00000000002103ba         db  0x00 ; '.'
00000000002103bb         db  0x00 ; '.'
00000000002103bc         db  0x00 ; '.'
00000000002103bd         db  0x00 ; '.'
00000000002103be         db  0x00 ; '.'
00000000002103bf         db  0x00 ; '.'
00000000002103c0         db  0xec ; '.'
00000000002103c1         db  0xb7 ; '.'
00000000002103c2         db  0x00 ; '.'
00000000002103c3         db  0x00 ; '.'
00000000002103c4         db  0x00 ; '.'
00000000002103c5         db  0x00 ; '.'
00000000002103c6         db  0x00 ; '.'
00000000002103c7         db  0x00 ; '.'
00000000002103c8         db  0x01 ; '.'
00000000002103c9         db  0x00 ; '.'
00000000002103ca         db  0x00 ; '.'
00000000002103cb         db  0x00 ; '.'
00000000002103cc         db  0x05 ; '.'
00000000002103cd         db  0x00 ; '.'
00000000002103ce         db  0x00 ; '.'
00000000002103cf         db  0x00 ; '.'
00000000002103d0         db  0x00 ; '.'
00000000002103d1         db  0x20 ; ' '
00000000002103d2         db  0x00 ; '.'
00000000002103d3         db  0x00 ; '.'
00000000002103d4         db  0x00 ; '.'
00000000002103d5         db  0x00 ; '.'
00000000002103d6         db  0x00 ; '.'
00000000002103d7         db  0x00 ; '.'
00000000002103d8         db  0x00 ; '.'
00000000002103d9         db  0x00 ; '.'
00000000002103da         db  0x00 ; '.'
00000000002103db         db  0x00 ; '.'
00000000002103dc         db  0x00 ; '.'
00000000002103dd         db  0x00 ; '.'
00000000002103de         db  0x00 ; '.'
00000000002103df         db  0x00 ; '.'
00000000002103e0         db  0xf4 ; '.'
00000000002103e1         db  0xb7 ; '.'
00000000002103e2         db  0x00 ; '.'
00000000002103e3         db  0x00 ; '.'
00000000002103e4         db  0x00 ; '.'
00000000002103e5         db  0x00 ; '.'
00000000002103e6         db  0x00 ; '.'
00000000002103e7         db  0x00 ; '.'
00000000002103e8         db  0x01 ; '.'
00000000002103e9         db  0x00 ; '.'
00000000002103ea         db  0x00 ; '.'
00000000002103eb         db  0x00 ; '.'
00000000002103ec         db  0x06 ; '.'
00000000002103ed         db  0x00 ; '.'
00000000002103ee         db  0x00 ; '.'
00000000002103ef         db  0x00 ; '.'
00000000002103f0         db  0x00 ; '.'
00000000002103f1         db  0x40 ; '@'
00000000002103f2         db  0x00 ; '.'
00000000002103f3         db  0x00 ; '.'
00000000002103f4         db  0x00 ; '.'
00000000002103f5         db  0x00 ; '.'
00000000002103f6         db  0x00 ; '.'
00000000002103f7         db  0x00 ; '.'
00000000002103f8         db  0x00 ; '.'
00000000002103f9         db  0x00 ; '.'
00000000002103fa         db  0x00 ; '.'
00000000002103fb         db  0x00 ; '.'
00000000002103fc         db  0x00 ; '.'
00000000002103fd         db  0x00 ; '.'
00000000002103fe         db  0x00 ; '.'
00000000002103ff         db  0x00 ; '.'
0000000000210400         db  0xfa ; '.'
0000000000210401         db  0xb7 ; '.'
0000000000210402         db  0x00 ; '.'
0000000000210403         db  0x00 ; '.'
0000000000210404         db  0x00 ; '.'
0000000000210405         db  0x00 ; '.'
0000000000210406         db  0x00 ; '.'
0000000000210407         db  0x00 ; '.'
0000000000210408         db  0x02 ; '.'
0000000000210409         db  0x00 ; '.'
000000000021040a         db  0x00 ; '.'
000000000021040b         db  0x00 ; '.'
000000000021040c         db  0x05 ; '.'
000000000021040d         db  0x00 ; '.'
000000000021040e         db  0x00 ; '.'
000000000021040f         db  0x00 ; '.'
0000000000210410         db  0x01 ; '.'
0000000000210411         db  0x00 ; '.'
0000000000210412         db  0x00 ; '.'
0000000000210413         db  0x00 ; '.'
0000000000210414         db  0x00 ; '.'
0000000000210415         db  0x00 ; '.'
0000000000210416         db  0x00 ; '.'
0000000000210417         db  0x00 ; '.'
0000000000210418         db  0x00 ; '.'
0000000000210419         db  0x00 ; '.'
000000000021041a         db  0x00 ; '.'
000000000021041b         db  0x00 ; '.'
000000000021041c         db  0x00 ; '.'
000000000021041d         db  0x00 ; '.'
000000000021041e         db  0x00 ; '.'
000000000021041f         db  0x00 ; '.'
0000000000210420         db  0x00 ; '.'
0000000000210421         db  0xb8 ; '.'
0000000000210422         db  0x00 ; '.'
0000000000210423         db  0x00 ; '.'
0000000000210424         db  0x00 ; '.'
0000000000210425         db  0x00 ; '.'
0000000000210426         db  0x00 ; '.'
0000000000210427         db  0x00 ; '.'
0000000000210428         db  0x02 ; '.'
0000000000210429         db  0x00 ; '.'
000000000021042a         db  0x00 ; '.'
000000000021042b         db  0x00 ; '.'
000000000021042c         db  0x06 ; '.'
000000000021042d         db  0x00 ; '.'
000000000021042e         db  0x00 ; '.'
000000000021042f         db  0x00 ; '.'
0000000000210430         db  0x02 ; '.'
0000000000210431         db  0x00 ; '.'
0000000000210432         db  0x00 ; '.'
0000000000210433         db  0x00 ; '.'
0000000000210434         db  0x00 ; '.'
0000000000210435         db  0x00 ; '.'
0000000000210436         db  0x00 ; '.'
0000000000210437         db  0x00 ; '.'
0000000000210438         db  0x00 ; '.'
0000000000210439         db  0x00 ; '.'
000000000021043a         db  0x00 ; '.'
000000000021043b         db  0x00 ; '.'
000000000021043c         db  0x00 ; '.'
000000000021043d         db  0x00 ; '.'
000000000021043e         db  0x00 ; '.'
000000000021043f         db  0x00 ; '.'
0000000000210440         db  0x06 ; '.'
0000000000210441         db  0xb8 ; '.'
0000000000210442         db  0x00 ; '.'
0000000000210443         db  0x00 ; '.'
0000000000210444         db  0x00 ; '.'
0000000000210445         db  0x00 ; '.'
0000000000210446         db  0x00 ; '.'
0000000000210447         db  0x00 ; '.'
0000000000210448         db  0x02 ; '.'
0000000000210449         db  0x00 ; '.'
000000000021044a         db  0x00 ; '.'
000000000021044b         db  0x00 ; '.'
000000000021044c         db  0x06 ; '.'
000000000021044d         db  0x00 ; '.'
000000000021044e         db  0x00 ; '.'
000000000021044f         db  0x00 ; '.'
0000000000210450         db  0x08 ; '.'
0000000000210451         db  0x00 ; '.'
0000000000210452         db  0x00 ; '.'
0000000000210453         db  0x00 ; '.'
0000000000210454         db  0x00 ; '.'
0000000000210455         db  0x00 ; '.'
0000000000210456         db  0x00 ; '.'
0000000000210457         db  0x00 ; '.'
0000000000210458         db  0x00 ; '.'
0000000000210459         db  0x00 ; '.'
000000000021045a         db  0x00 ; '.'
000000000021045b         db  0x00 ; '.'
000000000021045c         db  0x00 ; '.'
000000000021045d         db  0x00 ; '.'
000000000021045e         db  0x00 ; '.'
000000000021045f         db  0x00 ; '.'
0000000000210460         db  0xf4 ; '.'
0000000000210461         db  0xb3 ; '.'
0000000000210462         db  0x00 ; '.'
0000000000210463         db  0x00 ; '.'
0000000000210464         db  0x00 ; '.'
0000000000210465         db  0x00 ; '.'
0000000000210466         db  0x00 ; '.'
0000000000210467         db  0x00 ; '.'
0000000000210468         db  0x02 ; '.'
0000000000210469         db  0x00 ; '.'
000000000021046a         db  0x00 ; '.'
000000000021046b         db  0x00 ; '.'
000000000021046c         db  0x05 ; '.'
000000000021046d         db  0x00 ; '.'
000000000021046e         db  0x00 ; '.'
000000000021046f         db  0x00 ; '.'
0000000000210470         db  0x04 ; '.'
0000000000210471         db  0x00 ; '.'
0000000000210472         db  0x00 ; '.'
0000000000210473         db  0x00 ; '.'
0000000000210474         db  0x00 ; '.'
0000000000210475         db  0x00 ; '.'
0000000000210476         db  0x00 ; '.'
0000000000210477         db  0x00 ; '.'
0000000000210478         db  0x00 ; '.'
0000000000210479         db  0x00 ; '.'
000000000021047a         db  0x00 ; '.'
000000000021047b         db  0x00 ; '.'
000000000021047c         db  0x00 ; '.'
000000000021047d         db  0x00 ; '.'
000000000021047e         db  0x00 ; '.'
000000000021047f         db  0x00 ; '.'
0000000000210480         db  0x0c ; '.'
0000000000210481         db  0xb8 ; '.'
0000000000210482         db  0x00 ; '.'
0000000000210483         db  0x00 ; '.'
0000000000210484         db  0x00 ; '.'
0000000000210485         db  0x00 ; '.'
0000000000210486         db  0x00 ; '.'
0000000000210487         db  0x00 ; '.'
0000000000210488         db  0x02 ; '.'
0000000000210489         db  0x00 ; '.'
000000000021048a         db  0x00 ; '.'
000000000021048b         db  0x00 ; '.'
000000000021048c         db  0x06 ; '.'
000000000021048d         db  0x00 ; '.'
000000000021048e         db  0x00 ; '.'
000000000021048f         db  0x00 ; '.'
0000000000210490         db  0x10 ; '.'
0000000000210491         db  0x00 ; '.'
0000000000210492         db  0x00 ; '.'
0000000000210493         db  0x00 ; '.'
0000000000210494         db  0x00 ; '.'
0000000000210495         db  0x00 ; '.'
0000000000210496         db  0x00 ; '.'
0000000000210497         db  0x00 ; '.'
0000000000210498         db  0x00 ; '.'
0000000000210499         db  0x00 ; '.'
000000000021049a         db  0x00 ; '.'
000000000021049b         db  0x00 ; '.'
000000000021049c         db  0x00 ; '.'
000000000021049d         db  0x00 ; '.'
000000000021049e         db  0x00 ; '.'
000000000021049f         db  0x00 ; '.'
00000000002104a0         db  0x12 ; '.'
00000000002104a1         db  0xb8 ; '.'
00000000002104a2         db  0x00 ; '.'
00000000002104a3         db  0x00 ; '.'
00000000002104a4         db  0x00 ; '.'
00000000002104a5         db  0x00 ; '.'
00000000002104a6         db  0x00 ; '.'
00000000002104a7         db  0x00 ; '.'
00000000002104a8         db  0x02 ; '.'
00000000002104a9         db  0x00 ; '.'
00000000002104aa         db  0x00 ; '.'
00000000002104ab         db  0x00 ; '.'
00000000002104ac         db  0x06 ; '.'
00000000002104ad         db  0x00 ; '.'
00000000002104ae         db  0x00 ; '.'
00000000002104af         db  0x00 ; '.'
00000000002104b0         db  0x20 ; ' '
00000000002104b1         db  0x00 ; '.'
00000000002104b2         db  0x00 ; '.'
00000000002104b3         db  0x00 ; '.'
00000000002104b4         db  0x00 ; '.'
00000000002104b5         db  0x00 ; '.'
00000000002104b6         db  0x00 ; '.'
00000000002104b7         db  0x00 ; '.'
00000000002104b8         db  0x00 ; '.'
00000000002104b9         db  0x00 ; '.'
00000000002104ba         db  0x00 ; '.'
00000000002104bb         db  0x00 ; '.'
00000000002104bc         db  0x00 ; '.'
00000000002104bd         db  0x00 ; '.'
00000000002104be         db  0x00 ; '.'
00000000002104bf         db  0x00 ; '.'
00000000002104c0         db  0x19 ; '.'
00000000002104c1         db  0xb8 ; '.'
00000000002104c2         db  0x00 ; '.'
00000000002104c3         db  0x00 ; '.'
00000000002104c4         db  0x00 ; '.'
00000000002104c5         db  0x00 ; '.'
00000000002104c6         db  0x00 ; '.'
00000000002104c7         db  0x00 ; '.'
00000000002104c8         db  0x02 ; '.'
00000000002104c9         db  0x00 ; '.'
00000000002104ca         db  0x00 ; '.'
00000000002104cb         db  0x00 ; '.'
00000000002104cc         db  0x06 ; '.'
00000000002104cd         db  0x00 ; '.'
00000000002104ce         db  0x00 ; '.'
00000000002104cf         db  0x00 ; '.'
00000000002104d0         db  0x40 ; '@'
00000000002104d1         db  0x00 ; '.'
00000000002104d2         db  0x00 ; '.'
00000000002104d3         db  0x00 ; '.'
00000000002104d4         db  0x00 ; '.'
00000000002104d5         db  0x00 ; '.'
00000000002104d6         db  0x00 ; '.'
00000000002104d7         db  0x00 ; '.'
00000000002104d8         db  0x00 ; '.'
00000000002104d9         db  0x00 ; '.'
00000000002104da         db  0x00 ; '.'
00000000002104db         db  0x00 ; '.'
00000000002104dc         db  0x00 ; '.'
00000000002104dd         db  0x00 ; '.'
00000000002104de         db  0x00 ; '.'
00000000002104df         db  0x00 ; '.'
00000000002104e0         db  0x1f ; '.'
00000000002104e1         db  0xb8 ; '.'
00000000002104e2         db  0x00 ; '.'
00000000002104e3         db  0x00 ; '.'
00000000002104e4         db  0x00 ; '.'
00000000002104e5         db  0x00 ; '.'
00000000002104e6         db  0x00 ; '.'
00000000002104e7         db  0x00 ; '.'
00000000002104e8         db  0x02 ; '.'
00000000002104e9         db  0x00 ; '.'
00000000002104ea         db  0x00 ; '.'
00000000002104eb         db  0x00 ; '.'
00000000002104ec         db  0x06 ; '.'
00000000002104ed         db  0x00 ; '.'
00000000002104ee         db  0x00 ; '.'
00000000002104ef         db  0x00 ; '.'
00000000002104f0         db  0x80 ; '.'
00000000002104f1         db  0x00 ; '.'
00000000002104f2         db  0x00 ; '.'
00000000002104f3         db  0x00 ; '.'
00000000002104f4         db  0x00 ; '.'
00000000002104f5         db  0x00 ; '.'
00000000002104f6         db  0x00 ; '.'
00000000002104f7         db  0x00 ; '.'
00000000002104f8         db  0x00 ; '.'
00000000002104f9         db  0x00 ; '.'
00000000002104fa         db  0x00 ; '.'
00000000002104fb         db  0x00 ; '.'
00000000002104fc         db  0x00 ; '.'
00000000002104fd         db  0x00 ; '.'
00000000002104fe         db  0x00 ; '.'
00000000002104ff         db  0x00 ; '.'
0000000000210500         db  0x25 ; '%'
0000000000210501         db  0xb8 ; '.'
0000000000210502         db  0x00 ; '.'
0000000000210503         db  0x00 ; '.'
0000000000210504         db  0x00 ; '.'
0000000000210505         db  0x00 ; '.'
0000000000210506         db  0x00 ; '.'
0000000000210507         db  0x00 ; '.'
0000000000210508         db  0x02 ; '.'
0000000000210509         db  0x00 ; '.'
000000000021050a         db  0x00 ; '.'
000000000021050b         db  0x00 ; '.'
000000000021050c         db  0x02 ; '.'
000000000021050d         db  0x00 ; '.'
000000000021050e         db  0x00 ; '.'
000000000021050f         db  0x00 ; '.'
0000000000210510         db  0x00 ; '.'
0000000000210511         db  0x01 ; '.'
0000000000210512         db  0x00 ; '.'
0000000000210513         db  0x00 ; '.'
0000000000210514         db  0x00 ; '.'
0000000000210515         db  0x00 ; '.'
0000000000210516         db  0x00 ; '.'
0000000000210517         db  0x00 ; '.'
0000000000210518         db  0x00 ; '.'
0000000000210519         db  0x01 ; '.'
000000000021051a         db  0x00 ; '.'
000000000021051b         db  0x00 ; '.'
000000000021051c         db  0x00 ; '.'
000000000021051d         db  0x00 ; '.'
000000000021051e         db  0x00 ; '.'
000000000021051f         db  0x00 ; '.'
0000000000210520         db  0x29 ; ')'
0000000000210521         db  0xb8 ; '.'
0000000000210522         db  0x00 ; '.'
0000000000210523         db  0x00 ; '.'
0000000000210524         db  0x00 ; '.'
0000000000210525         db  0x00 ; '.'
0000000000210526         db  0x00 ; '.'
0000000000210527         db  0x00 ; '.'
0000000000210528         db  0x02 ; '.'
0000000000210529         db  0x00 ; '.'
000000000021052a         db  0x00 ; '.'
000000000021052b         db  0x00 ; '.'
000000000021052c         db  0x01 ; '.'
000000000021052d         db  0x00 ; '.'
000000000021052e         db  0x00 ; '.'
000000000021052f         db  0x00 ; '.'
0000000000210530         db  0x00 ; '.'
0000000000210531         db  0x00 ; '.'
0000000000210532         db  0x00 ; '.'
0000000000210533         db  0x00 ; '.'
0000000000210534         db  0x00 ; '.'
0000000000210535         db  0x00 ; '.'
0000000000210536         db  0x00 ; '.'
0000000000210537         db  0x00 ; '.'
0000000000210538         db  0x00 ; '.'
0000000000210539         db  0x01 ; '.'
000000000021053a         db  0x00 ; '.'
000000000021053b         db  0x00 ; '.'
000000000021053c         db  0x00 ; '.'
000000000021053d         db  0x00 ; '.'
000000000021053e         db  0x00 ; '.'
000000000021053f         db  0x00 ; '.'
0000000000210540         db  0x2d ; '-'
0000000000210541         db  0xb8 ; '.'
0000000000210542         db  0x00 ; '.'
0000000000210543         db  0x00 ; '.'
0000000000210544         db  0x00 ; '.'
0000000000210545         db  0x00 ; '.'
0000000000210546         db  0x00 ; '.'
0000000000210547         db  0x00 ; '.'
0000000000210548         db  0x02 ; '.'
0000000000210549         db  0x00 ; '.'
000000000021054a         db  0x00 ; '.'
000000000021054b         db  0x00 ; '.'
000000000021054c         db  0x02 ; '.'
000000000021054d         db  0x00 ; '.'
000000000021054e         db  0x00 ; '.'
000000000021054f         db  0x00 ; '.'
0000000000210550         db  0x00 ; '.'
0000000000210551         db  0x06 ; '.'
0000000000210552         db  0x00 ; '.'
0000000000210553         db  0x00 ; '.'
0000000000210554         db  0x00 ; '.'
0000000000210555         db  0x00 ; '.'
0000000000210556         db  0x00 ; '.'
0000000000210557         db  0x00 ; '.'
0000000000210558         db  0x00 ; '.'
0000000000210559         db  0x06 ; '.'
000000000021055a         db  0x00 ; '.'
000000000021055b         db  0x00 ; '.'
000000000021055c         db  0x00 ; '.'
000000000021055d         db  0x00 ; '.'
000000000021055e         db  0x00 ; '.'
000000000021055f         db  0x00 ; '.'
0000000000210560         db  0x31 ; '1'
0000000000210561         db  0xb8 ; '.'
0000000000210562         db  0x00 ; '.'
0000000000210563         db  0x00 ; '.'
0000000000210564         db  0x00 ; '.'
0000000000210565         db  0x00 ; '.'
0000000000210566         db  0x00 ; '.'
0000000000210567         db  0x00 ; '.'
0000000000210568         db  0x02 ; '.'
0000000000210569         db  0x00 ; '.'
000000000021056a         db  0x00 ; '.'
000000000021056b         db  0x00 ; '.'
000000000021056c         db  0x02 ; '.'
000000000021056d         db  0x00 ; '.'
000000000021056e         db  0x00 ; '.'
000000000021056f         db  0x00 ; '.'
0000000000210570         db  0x00 ; '.'
0000000000210571         db  0x04 ; '.'
0000000000210572         db  0x00 ; '.'
0000000000210573         db  0x00 ; '.'
0000000000210574         db  0x00 ; '.'
0000000000210575         db  0x00 ; '.'
0000000000210576         db  0x00 ; '.'
0000000000210577         db  0x00 ; '.'
0000000000210578         db  0x00 ; '.'
0000000000210579         db  0x06 ; '.'
000000000021057a         db  0x00 ; '.'
000000000021057b         db  0x00 ; '.'
000000000021057c         db  0x00 ; '.'
000000000021057d         db  0x00 ; '.'
000000000021057e         db  0x00 ; '.'
000000000021057f         db  0x00 ; '.'
0000000000210580         db  0x35 ; '5'
0000000000210581         db  0xb8 ; '.'
0000000000210582         db  0x00 ; '.'
0000000000210583         db  0x00 ; '.'
0000000000210584         db  0x00 ; '.'
0000000000210585         db  0x00 ; '.'
0000000000210586         db  0x00 ; '.'
0000000000210587         db  0x00 ; '.'
0000000000210588         db  0x02 ; '.'
0000000000210589         db  0x00 ; '.'
000000000021058a         db  0x00 ; '.'
000000000021058b         db  0x00 ; '.'
000000000021058c         db  0x02 ; '.'
000000000021058d         db  0x00 ; '.'
000000000021058e         db  0x00 ; '.'
000000000021058f         db  0x00 ; '.'
0000000000210590         db  0x00 ; '.'
0000000000210591         db  0x02 ; '.'
0000000000210592         db  0x00 ; '.'
0000000000210593         db  0x00 ; '.'
0000000000210594         db  0x00 ; '.'
0000000000210595         db  0x00 ; '.'
0000000000210596         db  0x00 ; '.'
0000000000210597         db  0x00 ; '.'
0000000000210598         db  0x00 ; '.'
0000000000210599         db  0x06 ; '.'
000000000021059a         db  0x00 ; '.'
000000000021059b         db  0x00 ; '.'
000000000021059c         db  0x00 ; '.'
000000000021059d         db  0x00 ; '.'
000000000021059e         db  0x00 ; '.'
000000000021059f         db  0x00 ; '.'
00000000002105a0         db  0x39 ; '9'
00000000002105a1         db  0xb8 ; '.'
00000000002105a2         db  0x00 ; '.'
00000000002105a3         db  0x00 ; '.'
00000000002105a4         db  0x00 ; '.'
00000000002105a5         db  0x00 ; '.'
00000000002105a6         db  0x00 ; '.'
00000000002105a7         db  0x00 ; '.'
00000000002105a8         db  0x02 ; '.'
00000000002105a9         db  0x00 ; '.'
00000000002105aa         db  0x00 ; '.'
00000000002105ab         db  0x00 ; '.'
00000000002105ac         db  0x01 ; '.'
00000000002105ad         db  0x00 ; '.'
00000000002105ae         db  0x00 ; '.'
00000000002105af         db  0x00 ; '.'
00000000002105b0         db  0x00 ; '.'
00000000002105b1         db  0x00 ; '.'
00000000002105b2         db  0x00 ; '.'
00000000002105b3         db  0x00 ; '.'
00000000002105b4         db  0x00 ; '.'
00000000002105b5         db  0x00 ; '.'
00000000002105b6         db  0x00 ; '.'
00000000002105b7         db  0x00 ; '.'
00000000002105b8         db  0x00 ; '.'
00000000002105b9         db  0x06 ; '.'
00000000002105ba         db  0x00 ; '.'
00000000002105bb         db  0x00 ; '.'
00000000002105bc         db  0x00 ; '.'
00000000002105bd         db  0x00 ; '.'
00000000002105be         db  0x00 ; '.'
00000000002105bf         db  0x00 ; '.'
00000000002105c0         db  0x3d ; '='
00000000002105c1         db  0xb8 ; '.'
00000000002105c2         db  0x00 ; '.'
00000000002105c3         db  0x00 ; '.'
00000000002105c4         db  0x00 ; '.'
00000000002105c5         db  0x00 ; '.'
00000000002105c6         db  0x00 ; '.'
00000000002105c7         db  0x00 ; '.'
00000000002105c8         db  0x02 ; '.'
00000000002105c9         db  0x00 ; '.'
00000000002105ca         db  0x00 ; '.'
00000000002105cb         db  0x00 ; '.'
00000000002105cc         db  0x02 ; '.'
00000000002105cd         db  0x00 ; '.'
00000000002105ce         db  0x00 ; '.'
00000000002105cf         db  0x00 ; '.'
00000000002105d0         db  0x00 ; '.'
00000000002105d1         db  0x18 ; '.'
00000000002105d2         db  0x00 ; '.'
00000000002105d3         db  0x00 ; '.'
00000000002105d4         db  0x00 ; '.'
00000000002105d5         db  0x00 ; '.'
00000000002105d6         db  0x00 ; '.'
00000000002105d7         db  0x00 ; '.'
00000000002105d8         db  0x00 ; '.'
00000000002105d9         db  0x18 ; '.'
00000000002105da         db  0x00 ; '.'
00000000002105db         db  0x00 ; '.'
00000000002105dc         db  0x00 ; '.'
00000000002105dd         db  0x00 ; '.'
00000000002105de         db  0x00 ; '.'
00000000002105df         db  0x00 ; '.'
00000000002105e0         db  0x42 ; 'B'
00000000002105e1         db  0xb8 ; '.'
00000000002105e2         db  0x00 ; '.'
00000000002105e3         db  0x00 ; '.'
00000000002105e4         db  0x00 ; '.'
00000000002105e5         db  0x00 ; '.'
00000000002105e6         db  0x00 ; '.'
00000000002105e7         db  0x00 ; '.'
00000000002105e8         db  0x02 ; '.'
00000000002105e9         db  0x00 ; '.'
00000000002105ea         db  0x00 ; '.'
00000000002105eb         db  0x00 ; '.'
00000000002105ec         db  0x02 ; '.'
00000000002105ed         db  0x00 ; '.'
00000000002105ee         db  0x00 ; '.'
00000000002105ef         db  0x00 ; '.'
00000000002105f0         db  0x00 ; '.'
00000000002105f1         db  0x10 ; '.'
00000000002105f2         db  0x00 ; '.'
00000000002105f3         db  0x00 ; '.'
00000000002105f4         db  0x00 ; '.'
00000000002105f5         db  0x00 ; '.'
00000000002105f6         db  0x00 ; '.'
00000000002105f7         db  0x00 ; '.'
00000000002105f8         db  0x00 ; '.'
00000000002105f9         db  0x18 ; '.'
00000000002105fa         db  0x00 ; '.'
00000000002105fb         db  0x00 ; '.'
00000000002105fc         db  0x00 ; '.'
00000000002105fd         db  0x00 ; '.'
00000000002105fe         db  0x00 ; '.'
00000000002105ff         db  0x00 ; '.'
0000000000210600         db  0x47 ; 'G'
0000000000210601         db  0xb8 ; '.'
0000000000210602         db  0x00 ; '.'
0000000000210603         db  0x00 ; '.'
0000000000210604         db  0x00 ; '.'
0000000000210605         db  0x00 ; '.'
0000000000210606         db  0x00 ; '.'
0000000000210607         db  0x00 ; '.'
0000000000210608         db  0x02 ; '.'
0000000000210609         db  0x00 ; '.'
000000000021060a         db  0x00 ; '.'
000000000021060b         db  0x00 ; '.'
000000000021060c         db  0x02 ; '.'
000000000021060d         db  0x00 ; '.'
000000000021060e         db  0x00 ; '.'
000000000021060f         db  0x00 ; '.'
0000000000210610         db  0x00 ; '.'
0000000000210611         db  0x08 ; '.'
0000000000210612         db  0x00 ; '.'
0000000000210613         db  0x00 ; '.'
0000000000210614         db  0x00 ; '.'
0000000000210615         db  0x00 ; '.'
0000000000210616         db  0x00 ; '.'
0000000000210617         db  0x00 ; '.'
0000000000210618         db  0x00 ; '.'
0000000000210619         db  0x18 ; '.'
000000000021061a         db  0x00 ; '.'
000000000021061b         db  0x00 ; '.'
000000000021061c         db  0x00 ; '.'
000000000021061d         db  0x00 ; '.'
000000000021061e         db  0x00 ; '.'
000000000021061f         db  0x00 ; '.'
0000000000210620         db  0x4c ; 'L'
0000000000210621         db  0xb8 ; '.'
0000000000210622         db  0x00 ; '.'
0000000000210623         db  0x00 ; '.'
0000000000210624         db  0x00 ; '.'
0000000000210625         db  0x00 ; '.'
0000000000210626         db  0x00 ; '.'
0000000000210627         db  0x00 ; '.'
0000000000210628         db  0x02 ; '.'
0000000000210629         db  0x00 ; '.'
000000000021062a         db  0x00 ; '.'
000000000021062b         db  0x00 ; '.'
000000000021062c         db  0x01 ; '.'
000000000021062d         db  0x00 ; '.'
000000000021062e         db  0x00 ; '.'
000000000021062f         db  0x00 ; '.'
0000000000210630         db  0x00 ; '.'
0000000000210631         db  0x00 ; '.'
0000000000210632         db  0x00 ; '.'
0000000000210633         db  0x00 ; '.'
0000000000210634         db  0x00 ; '.'
0000000000210635         db  0x00 ; '.'
0000000000210636         db  0x00 ; '.'
0000000000210637         db  0x00 ; '.'
0000000000210638         db  0x00 ; '.'
0000000000210639         db  0x18 ; '.'
000000000021063a         db  0x00 ; '.'
000000000021063b         db  0x00 ; '.'
000000000021063c         db  0x00 ; '.'
000000000021063d         db  0x00 ; '.'
000000000021063e         db  0x00 ; '.'
000000000021063f         db  0x00 ; '.'
0000000000210640         db  0x51 ; 'Q'
0000000000210641         db  0xb8 ; '.'
0000000000210642         db  0x00 ; '.'
0000000000210643         db  0x00 ; '.'
0000000000210644         db  0x00 ; '.'
0000000000210645         db  0x00 ; '.'
0000000000210646         db  0x00 ; '.'
0000000000210647         db  0x00 ; '.'
0000000000210648         db  0x02 ; '.'
0000000000210649         db  0x00 ; '.'
000000000021064a         db  0x00 ; '.'
000000000021064b         db  0x00 ; '.'
000000000021064c         db  0x02 ; '.'
000000000021064d         db  0x00 ; '.'
000000000021064e         db  0x00 ; '.'
000000000021064f         db  0x00 ; '.'
0000000000210650         db  0x00 ; '.'
0000000000210651         db  0x20 ; ' '
0000000000210652         db  0x00 ; '.'
0000000000210653         db  0x00 ; '.'
0000000000210654         db  0x00 ; '.'
0000000000210655         db  0x00 ; '.'
0000000000210656         db  0x00 ; '.'
0000000000210657         db  0x00 ; '.'
0000000000210658         db  0x00 ; '.'
0000000000210659         db  0x20 ; ' '
000000000021065a         db  0x00 ; '.'
000000000021065b         db  0x00 ; '.'
000000000021065c         db  0x00 ; '.'
000000000021065d         db  0x00 ; '.'
000000000021065e         db  0x00 ; '.'
000000000021065f         db  0x00 ; '.'
0000000000210660         db  0x55 ; 'U'
0000000000210661         db  0xb8 ; '.'
0000000000210662         db  0x00 ; '.'
0000000000210663         db  0x00 ; '.'
0000000000210664         db  0x00 ; '.'
0000000000210665         db  0x00 ; '.'
0000000000210666         db  0x00 ; '.'
0000000000210667         db  0x00 ; '.'
0000000000210668         db  0x02 ; '.'
0000000000210669         db  0x00 ; '.'
000000000021066a         db  0x00 ; '.'
000000000021066b         db  0x00 ; '.'
000000000021066c         db  0x01 ; '.'
000000000021066d         db  0x00 ; '.'
000000000021066e         db  0x00 ; '.'
000000000021066f         db  0x00 ; '.'
0000000000210670         db  0x00 ; '.'
0000000000210671         db  0x00 ; '.'
0000000000210672         db  0x00 ; '.'
0000000000210673         db  0x00 ; '.'
0000000000210674         db  0x00 ; '.'
0000000000210675         db  0x00 ; '.'
0000000000210676         db  0x00 ; '.'
0000000000210677         db  0x00 ; '.'
0000000000210678         db  0x00 ; '.'
0000000000210679         db  0x20 ; ' '
000000000021067a         db  0x00 ; '.'
000000000021067b         db  0x00 ; '.'
000000000021067c         db  0x00 ; '.'
000000000021067d         db  0x00 ; '.'
000000000021067e         db  0x00 ; '.'
000000000021067f         db  0x00 ; '.'
0000000000210680         db  0x59 ; 'Y'
0000000000210681         db  0xb8 ; '.'
0000000000210682         db  0x00 ; '.'
0000000000210683         db  0x00 ; '.'
0000000000210684         db  0x00 ; '.'
0000000000210685         db  0x00 ; '.'
0000000000210686         db  0x00 ; '.'
0000000000210687         db  0x00 ; '.'
0000000000210688         db  0x02 ; '.'
0000000000210689         db  0x00 ; '.'
000000000021068a         db  0x00 ; '.'
000000000021068b         db  0x00 ; '.'
000000000021068c         db  0x02 ; '.'
000000000021068d         db  0x00 ; '.'
000000000021068e         db  0x00 ; '.'
000000000021068f         db  0x00 ; '.'
0000000000210690         db  0x00 ; '.'
0000000000210691         db  0x40 ; '@'
0000000000210692         db  0x00 ; '.'
0000000000210693         db  0x00 ; '.'
0000000000210694         db  0x00 ; '.'
0000000000210695         db  0x00 ; '.'
0000000000210696         db  0x00 ; '.'
0000000000210697         db  0x00 ; '.'
0000000000210698         db  0x00 ; '.'
0000000000210699         db  0x40 ; '@'
000000000021069a         db  0x00 ; '.'
000000000021069b         db  0x00 ; '.'
000000000021069c         db  0x00 ; '.'
000000000021069d         db  0x00 ; '.'
000000000021069e         db  0x00 ; '.'
000000000021069f         db  0x00 ; '.'
00000000002106a0         db  0x5d ; ']'
00000000002106a1         db  0xb8 ; '.'
00000000002106a2         db  0x00 ; '.'
00000000002106a3         db  0x00 ; '.'
00000000002106a4         db  0x00 ; '.'
00000000002106a5         db  0x00 ; '.'
00000000002106a6         db  0x00 ; '.'
00000000002106a7         db  0x00 ; '.'
00000000002106a8         db  0x02 ; '.'
00000000002106a9         db  0x00 ; '.'
00000000002106aa         db  0x00 ; '.'
00000000002106ab         db  0x00 ; '.'
00000000002106ac         db  0x01 ; '.'
00000000002106ad         db  0x00 ; '.'
00000000002106ae         db  0x00 ; '.'
00000000002106af         db  0x00 ; '.'
00000000002106b0         db  0x00 ; '.'
00000000002106b1         db  0x00 ; '.'
00000000002106b2         db  0x00 ; '.'
00000000002106b3         db  0x00 ; '.'
00000000002106b4         db  0x00 ; '.'
00000000002106b5         db  0x00 ; '.'
00000000002106b6         db  0x00 ; '.'
00000000002106b7         db  0x00 ; '.'
00000000002106b8         db  0x00 ; '.'
00000000002106b9         db  0x40 ; '@'
00000000002106ba         db  0x00 ; '.'
00000000002106bb         db  0x00 ; '.'
00000000002106bc         db  0x00 ; '.'
00000000002106bd         db  0x00 ; '.'
00000000002106be         db  0x00 ; '.'
00000000002106bf         db  0x00 ; '.'
00000000002106c0         db  0x61 ; 'a'
00000000002106c1         db  0xb8 ; '.'
00000000002106c2         db  0x00 ; '.'
00000000002106c3         db  0x00 ; '.'
00000000002106c4         db  0x00 ; '.'
00000000002106c5         db  0x00 ; '.'
00000000002106c6         db  0x00 ; '.'
00000000002106c7         db  0x00 ; '.'
00000000002106c8         db  0x02 ; '.'
00000000002106c9         db  0x00 ; '.'
00000000002106ca         db  0x00 ; '.'
00000000002106cb         db  0x00 ; '.'
00000000002106cc         db  0x02 ; '.'
00000000002106cd         db  0x00 ; '.'
00000000002106ce         db  0x00 ; '.'
00000000002106cf         db  0x00 ; '.'
00000000002106d0         db  0x00 ; '.'
00000000002106d1         db  0x80 ; '.'
00000000002106d2         db  0x00 ; '.'
00000000002106d3         db  0x00 ; '.'
00000000002106d4         db  0x00 ; '.'
00000000002106d5         db  0x00 ; '.'
00000000002106d6         db  0x00 ; '.'
00000000002106d7         db  0x00 ; '.'
00000000002106d8         db  0x00 ; '.'
00000000002106d9         db  0x80 ; '.'
00000000002106da         db  0x00 ; '.'
00000000002106db         db  0x00 ; '.'
00000000002106dc         db  0x00 ; '.'
00000000002106dd         db  0x00 ; '.'
00000000002106de         db  0x00 ; '.'
00000000002106df         db  0x00 ; '.'
00000000002106e0         db  0x65 ; 'e'
00000000002106e1         db  0xb8 ; '.'
00000000002106e2         db  0x00 ; '.'
00000000002106e3         db  0x00 ; '.'
00000000002106e4         db  0x00 ; '.'
00000000002106e5         db  0x00 ; '.'
00000000002106e6         db  0x00 ; '.'
00000000002106e7         db  0x00 ; '.'
00000000002106e8         db  0x02 ; '.'
00000000002106e9         db  0x00 ; '.'
00000000002106ea         db  0x00 ; '.'
00000000002106eb         db  0x00 ; '.'
00000000002106ec         db  0x01 ; '.'
00000000002106ed         db  0x00 ; '.'
00000000002106ee         db  0x00 ; '.'
00000000002106ef         db  0x00 ; '.'
00000000002106f0         db  0x00 ; '.'
00000000002106f1         db  0x00 ; '.'
00000000002106f2         db  0x00 ; '.'
00000000002106f3         db  0x00 ; '.'
00000000002106f4         db  0x00 ; '.'
00000000002106f5         db  0x00 ; '.'
00000000002106f6         db  0x00 ; '.'
00000000002106f7         db  0x00 ; '.'
00000000002106f8         db  0x00 ; '.'
00000000002106f9         db  0x80 ; '.'
00000000002106fa         db  0x00 ; '.'
00000000002106fb         db  0x00 ; '.'
00000000002106fc         db  0x00 ; '.'
00000000002106fd         db  0x00 ; '.'
00000000002106fe         db  0x00 ; '.'
00000000002106ff         db  0x00 ; '.'
0000000000210700         db  0x69 ; 'i'
0000000000210701         db  0xb8 ; '.'
0000000000210702         db  0x00 ; '.'
0000000000210703         db  0x00 ; '.'
0000000000210704         db  0x00 ; '.'
0000000000210705         db  0x00 ; '.'
0000000000210706         db  0x00 ; '.'
0000000000210707         db  0x00 ; '.'
0000000000210708         db  0x03 ; '.'
0000000000210709         db  0x00 ; '.'
000000000021070a         db  0x00 ; '.'
000000000021070b         db  0x00 ; '.'
000000000021070c         db  0x05 ; '.'
000000000021070d         db  0x00 ; '.'
000000000021070e         db  0x00 ; '.'
000000000021070f         db  0x00 ; '.'
0000000000210710         db  0x01 ; '.'
0000000000210711         db  0x00 ; '.'
0000000000210712         db  0x00 ; '.'
0000000000210713         db  0x00 ; '.'
0000000000210714         db  0x00 ; '.'
0000000000210715         db  0x00 ; '.'
0000000000210716         db  0x00 ; '.'
0000000000210717         db  0x00 ; '.'
0000000000210718         db  0x00 ; '.'
0000000000210719         db  0x00 ; '.'
000000000021071a         db  0x00 ; '.'
000000000021071b         db  0x00 ; '.'
000000000021071c         db  0x00 ; '.'
000000000021071d         db  0x00 ; '.'
000000000021071e         db  0x00 ; '.'
000000000021071f         db  0x00 ; '.'
0000000000210720         db  0x6e ; 'n'
0000000000210721         db  0xb8 ; '.'
0000000000210722         db  0x00 ; '.'
0000000000210723         db  0x00 ; '.'
0000000000210724         db  0x00 ; '.'
0000000000210725         db  0x00 ; '.'
0000000000210726         db  0x00 ; '.'
0000000000210727         db  0x00 ; '.'
0000000000210728         db  0x03 ; '.'
0000000000210729         db  0x00 ; '.'
000000000021072a         db  0x00 ; '.'
000000000021072b         db  0x00 ; '.'
000000000021072c         db  0x05 ; '.'
000000000021072d         db  0x00 ; '.'
000000000021072e         db  0x00 ; '.'
000000000021072f         db  0x00 ; '.'
0000000000210730         db  0x02 ; '.'
0000000000210731         db  0x00 ; '.'
0000000000210732         db  0x00 ; '.'
0000000000210733         db  0x00 ; '.'
0000000000210734         db  0x00 ; '.'
0000000000210735         db  0x00 ; '.'
0000000000210736         db  0x00 ; '.'
0000000000210737         db  0x00 ; '.'
0000000000210738         db  0x00 ; '.'
0000000000210739         db  0x00 ; '.'
000000000021073a         db  0x00 ; '.'
000000000021073b         db  0x00 ; '.'
000000000021073c         db  0x00 ; '.'
000000000021073d         db  0x00 ; '.'
000000000021073e         db  0x00 ; '.'
000000000021073f         db  0x00 ; '.'
0000000000210740         db  0x75 ; 'u'
0000000000210741         db  0xb8 ; '.'
0000000000210742         db  0x00 ; '.'
0000000000210743         db  0x00 ; '.'
0000000000210744         db  0x00 ; '.'
0000000000210745         db  0x00 ; '.'
0000000000210746         db  0x00 ; '.'
0000000000210747         db  0x00 ; '.'
0000000000210748         db  0x03 ; '.'
0000000000210749         db  0x00 ; '.'
000000000021074a         db  0x00 ; '.'
000000000021074b         db  0x00 ; '.'
000000000021074c         db  0x05 ; '.'
000000000021074d         db  0x00 ; '.'
000000000021074e         db  0x00 ; '.'
000000000021074f         db  0x00 ; '.'
0000000000210750         db  0x00 ; '.'
0000000000210751         db  0x80 ; '.'
0000000000210752         db  0x00 ; '.'
0000000000210753         db  0x00 ; '.'
0000000000210754         db  0x00 ; '.'
0000000000210755         db  0x00 ; '.'
0000000000210756         db  0x00 ; '.'
0000000000210757         db  0x00 ; '.'
0000000000210758         db  0x00 ; '.'
0000000000210759         db  0x00 ; '.'
000000000021075a         db  0x00 ; '.'
000000000021075b         db  0x00 ; '.'
000000000021075c         db  0x00 ; '.'
000000000021075d         db  0x00 ; '.'
000000000021075e         db  0x00 ; '.'
000000000021075f         db  0x00 ; '.'
0000000000210760         db  0xc8 ; '.'
0000000000210761         db  0xb8 ; '.'
0000000000210762         db  0x00 ; '.'
0000000000210763         db  0x00 ; '.'
0000000000210764         db  0x00 ; '.'
0000000000210765         db  0x00 ; '.'
0000000000210766         db  0x00 ; '.'
0000000000210767         db  0x00 ; '.'
0000000000210768         db  0x03 ; '.'
0000000000210769         db  0x00 ; '.'
000000000021076a         db  0x00 ; '.'
000000000021076b         db  0x00 ; '.'
000000000021076c         db  0x05 ; '.'
000000000021076d         db  0x00 ; '.'
000000000021076e         db  0x00 ; '.'
000000000021076f         db  0x00 ; '.'
0000000000210770         db  0x08 ; '.'
0000000000210771         db  0x00 ; '.'
0000000000210772         db  0x00 ; '.'
0000000000210773         db  0x00 ; '.'
0000000000210774         db  0x00 ; '.'
0000000000210775         db  0x00 ; '.'
0000000000210776         db  0x00 ; '.'
0000000000210777         db  0x00 ; '.'
0000000000210778         db  0x00 ; '.'
0000000000210779         db  0x00 ; '.'
000000000021077a         db  0x00 ; '.'
000000000021077b         db  0x00 ; '.'
000000000021077c         db  0x00 ; '.'
000000000021077d         db  0x00 ; '.'
000000000021077e         db  0x00 ; '.'
000000000021077f         db  0x00 ; '.'
0000000000210780         db  0x7c ; '|'
0000000000210781         db  0xb8 ; '.'
0000000000210782         db  0x00 ; '.'
0000000000210783         db  0x00 ; '.'
0000000000210784         db  0x00 ; '.'
0000000000210785         db  0x00 ; '.'
0000000000210786         db  0x00 ; '.'
0000000000210787         db  0x00 ; '.'
0000000000210788         db  0x03 ; '.'
0000000000210789         db  0x00 ; '.'
000000000021078a         db  0x00 ; '.'
000000000021078b         db  0x00 ; '.'
000000000021078c         db  0x05 ; '.'
000000000021078d         db  0x00 ; '.'
000000000021078e         db  0x00 ; '.'
000000000021078f         db  0x00 ; '.'
0000000000210790         db  0x10 ; '.'
0000000000210791         db  0x00 ; '.'
0000000000210792         db  0x00 ; '.'
0000000000210793         db  0x00 ; '.'
0000000000210794         db  0x00 ; '.'
0000000000210795         db  0x00 ; '.'
0000000000210796         db  0x00 ; '.'
0000000000210797         db  0x00 ; '.'
0000000000210798         db  0x00 ; '.'
0000000000210799         db  0x00 ; '.'
000000000021079a         db  0x00 ; '.'
000000000021079b         db  0x00 ; '.'
000000000021079c         db  0x00 ; '.'
000000000021079d         db  0x00 ; '.'
000000000021079e         db  0x00 ; '.'
000000000021079f         db  0x00 ; '.'
00000000002107a0         db  0x82 ; '.'
00000000002107a1         db  0xb8 ; '.'
00000000002107a2         db  0x00 ; '.'
00000000002107a3         db  0x00 ; '.'
00000000002107a4         db  0x00 ; '.'
00000000002107a5         db  0x00 ; '.'
00000000002107a6         db  0x00 ; '.'
00000000002107a7         db  0x00 ; '.'
00000000002107a8         db  0x03 ; '.'
00000000002107a9         db  0x00 ; '.'
00000000002107aa         db  0x00 ; '.'
00000000002107ab         db  0x00 ; '.'
00000000002107ac         db  0x0c ; '.'
00000000002107ad         db  0x00 ; '.'
00000000002107ae         db  0x00 ; '.'
00000000002107af         db  0x00 ; '.'
00000000002107b0         db  0x10 ; '.'
00000000002107b1         db  0x00 ; '.'
00000000002107b2         db  0x00 ; '.'
00000000002107b3         db  0x00 ; '.'
00000000002107b4         db  0x00 ; '.'
00000000002107b5         db  0x00 ; '.'
00000000002107b6         db  0x00 ; '.'
00000000002107b7         db  0x00 ; '.'
00000000002107b8         db  0x00 ; '.'
00000000002107b9         db  0x00 ; '.'
00000000002107ba         db  0x00 ; '.'
00000000002107bb         db  0x00 ; '.'
00000000002107bc         db  0x00 ; '.'
00000000002107bd         db  0x00 ; '.'
00000000002107be         db  0x00 ; '.'
00000000002107bf         db  0x00 ; '.'
00000000002107c0         db  0x8b ; '.'
00000000002107c1         db  0xb8 ; '.'
00000000002107c2         db  0x00 ; '.'
00000000002107c3         db  0x00 ; '.'
00000000002107c4         db  0x00 ; '.'
00000000002107c5         db  0x00 ; '.'
00000000002107c6         db  0x00 ; '.'
00000000002107c7         db  0x00 ; '.'
00000000002107c8         db  0x03 ; '.'
00000000002107c9         db  0x00 ; '.'
00000000002107ca         db  0x00 ; '.'
00000000002107cb         db  0x00 ; '.'
00000000002107cc         db  0x05 ; '.'
00000000002107cd         db  0x00 ; '.'
00000000002107ce         db  0x00 ; '.'
00000000002107cf         db  0x00 ; '.'
00000000002107d0         db  0x20 ; ' '
00000000002107d1         db  0x00 ; '.'
00000000002107d2         db  0x00 ; '.'
00000000002107d3         db  0x00 ; '.'
00000000002107d4         db  0x00 ; '.'
00000000002107d5         db  0x00 ; '.'
00000000002107d6         db  0x00 ; '.'
00000000002107d7         db  0x00 ; '.'
00000000002107d8         db  0x00 ; '.'
00000000002107d9         db  0x00 ; '.'
00000000002107da         db  0x00 ; '.'
00000000002107db         db  0x00 ; '.'
00000000002107dc         db  0x00 ; '.'
00000000002107dd         db  0x00 ; '.'
00000000002107de         db  0x00 ; '.'
00000000002107df         db  0x00 ; '.'
00000000002107e0         db  0x91 ; '.'
00000000002107e1         db  0xb8 ; '.'
00000000002107e2         db  0x00 ; '.'
00000000002107e3         db  0x00 ; '.'
00000000002107e4         db  0x00 ; '.'
00000000002107e5         db  0x00 ; '.'
00000000002107e6         db  0x00 ; '.'
00000000002107e7         db  0x00 ; '.'
00000000002107e8         db  0x03 ; '.'
00000000002107e9         db  0x00 ; '.'
00000000002107ea         db  0x00 ; '.'
00000000002107eb         db  0x00 ; '.'
00000000002107ec         db  0x06 ; '.'
00000000002107ed         db  0x00 ; '.'
00000000002107ee         db  0x00 ; '.'
00000000002107ef         db  0x00 ; '.'
00000000002107f0         db  0x40 ; '@'
00000000002107f1         db  0x00 ; '.'
00000000002107f2         db  0x00 ; '.'
00000000002107f3         db  0x00 ; '.'
00000000002107f4         db  0x00 ; '.'
00000000002107f5         db  0x00 ; '.'
00000000002107f6         db  0x00 ; '.'
00000000002107f7         db  0x00 ; '.'
00000000002107f8         db  0x00 ; '.'
00000000002107f9         db  0x00 ; '.'
00000000002107fa         db  0x00 ; '.'
00000000002107fb         db  0x00 ; '.'
00000000002107fc         db  0x00 ; '.'
00000000002107fd         db  0x00 ; '.'
00000000002107fe         db  0x00 ; '.'
00000000002107ff         db  0x00 ; '.'
0000000000210800         db  0x98 ; '.'
0000000000210801         db  0xb8 ; '.'
0000000000210802         db  0x00 ; '.'
0000000000210803         db  0x00 ; '.'
0000000000210804         db  0x00 ; '.'
0000000000210805         db  0x00 ; '.'
0000000000210806         db  0x00 ; '.'
0000000000210807         db  0x00 ; '.'
0000000000210808         db  0x03 ; '.'
0000000000210809         db  0x00 ; '.'
000000000021080a         db  0x00 ; '.'
000000000021080b         db  0x00 ; '.'
000000000021080c         db  0x06 ; '.'
000000000021080d         db  0x00 ; '.'
000000000021080e         db  0x00 ; '.'
000000000021080f         db  0x00 ; '.'
0000000000210810         db  0x80 ; '.'
0000000000210811         db  0x00 ; '.'
0000000000210812         db  0x00 ; '.'
0000000000210813         db  0x00 ; '.'
0000000000210814         db  0x00 ; '.'
0000000000210815         db  0x00 ; '.'
0000000000210816         db  0x00 ; '.'
0000000000210817         db  0x00 ; '.'
0000000000210818         db  0x00 ; '.'
0000000000210819         db  0x00 ; '.'
000000000021081a         db  0x00 ; '.'
000000000021081b         db  0x00 ; '.'
000000000021081c         db  0x00 ; '.'
000000000021081d         db  0x00 ; '.'
000000000021081e         db  0x00 ; '.'
000000000021081f         db  0x00 ; '.'
0000000000210820         db  0x9f ; '.'
0000000000210821         db  0xb8 ; '.'
0000000000210822         db  0x00 ; '.'
0000000000210823         db  0x00 ; '.'
0000000000210824         db  0x00 ; '.'
0000000000210825         db  0x00 ; '.'
0000000000210826         db  0x00 ; '.'
0000000000210827         db  0x00 ; '.'
0000000000210828         db  0x03 ; '.'
0000000000210829         db  0x00 ; '.'
000000000021082a         db  0x00 ; '.'
000000000021082b         db  0x00 ; '.'
000000000021082c         db  0x06 ; '.'
000000000021082d         db  0x00 ; '.'
000000000021082e         db  0x00 ; '.'
000000000021082f         db  0x00 ; '.'
0000000000210830         db  0x04 ; '.'
0000000000210831         db  0x00 ; '.'
0000000000210832         db  0x00 ; '.'
0000000000210833         db  0x00 ; '.'
0000000000210834         db  0x00 ; '.'
0000000000210835         db  0x00 ; '.'
0000000000210836         db  0x00 ; '.'
0000000000210837         db  0x00 ; '.'
0000000000210838         db  0x00 ; '.'
0000000000210839         db  0x00 ; '.'
000000000021083a         db  0x00 ; '.'
000000000021083b         db  0x00 ; '.'
000000000021083c         db  0x00 ; '.'
000000000021083d         db  0x00 ; '.'
000000000021083e         db  0x00 ; '.'
000000000021083f         db  0x00 ; '.'
0000000000210840         db  0xa5 ; '.'
0000000000210841         db  0xb8 ; '.'
0000000000210842         db  0x00 ; '.'
0000000000210843         db  0x00 ; '.'
0000000000210844         db  0x00 ; '.'
0000000000210845         db  0x00 ; '.'
0000000000210846         db  0x00 ; '.'
0000000000210847         db  0x00 ; '.'
0000000000210848         db  0x03 ; '.'
0000000000210849         db  0x00 ; '.'
000000000021084a         db  0x00 ; '.'
000000000021084b         db  0x00 ; '.'
000000000021084c         db  0x06 ; '.'
000000000021084d         db  0x00 ; '.'
000000000021084e         db  0x00 ; '.'
000000000021084f         db  0x00 ; '.'
0000000000210850         db  0x00 ; '.'
0000000000210851         db  0x01 ; '.'
0000000000210852         db  0x00 ; '.'
0000000000210853         db  0x00 ; '.'
0000000000210854         db  0x00 ; '.'
0000000000210855         db  0x00 ; '.'
0000000000210856         db  0x00 ; '.'
0000000000210857         db  0x00 ; '.'
0000000000210858         db  0x00 ; '.'
0000000000210859         db  0x00 ; '.'
000000000021085a         db  0x00 ; '.'
000000000021085b         db  0x00 ; '.'
000000000021085c         db  0x00 ; '.'
000000000021085d         db  0x00 ; '.'
000000000021085e         db  0x00 ; '.'
000000000021085f         db  0x00 ; '.'
0000000000210860         db  0xac ; '.'
0000000000210861         db  0xb8 ; '.'
0000000000210862         db  0x00 ; '.'
0000000000210863         db  0x00 ; '.'
0000000000210864         db  0x00 ; '.'
0000000000210865         db  0x00 ; '.'
0000000000210866         db  0x00 ; '.'
0000000000210867         db  0x00 ; '.'
0000000000210868         db  0x03 ; '.'
0000000000210869         db  0x00 ; '.'
000000000021086a         db  0x00 ; '.'
000000000021086b         db  0x00 ; '.'
000000000021086c         db  0x06 ; '.'
000000000021086d         db  0x00 ; '.'
000000000021086e         db  0x00 ; '.'
000000000021086f         db  0x00 ; '.'
0000000000210870         db  0x00 ; '.'
0000000000210871         db  0x04 ; '.'
0000000000210872         db  0x00 ; '.'
0000000000210873         db  0x00 ; '.'
0000000000210874         db  0x00 ; '.'
0000000000210875         db  0x00 ; '.'
0000000000210876         db  0x00 ; '.'
0000000000210877         db  0x00 ; '.'
0000000000210878         db  0x00 ; '.'
0000000000210879         db  0x00 ; '.'
000000000021087a         db  0x00 ; '.'
000000000021087b         db  0x00 ; '.'
000000000021087c         db  0x00 ; '.'
000000000021087d         db  0x00 ; '.'
000000000021087e         db  0x00 ; '.'
000000000021087f         db  0x00 ; '.'
0000000000210880         db  0xb4 ; '.'
0000000000210881         db  0xb8 ; '.'
0000000000210882         db  0x00 ; '.'
0000000000210883         db  0x00 ; '.'
0000000000210884         db  0x00 ; '.'
0000000000210885         db  0x00 ; '.'
0000000000210886         db  0x00 ; '.'
0000000000210887         db  0x00 ; '.'
0000000000210888         db  0x03 ; '.'
0000000000210889         db  0x00 ; '.'
000000000021088a         db  0x00 ; '.'
000000000021088b         db  0x00 ; '.'
000000000021088c         db  0x0c ; '.'
000000000021088d         db  0x00 ; '.'
000000000021088e         db  0x00 ; '.'
000000000021088f         db  0x00 ; '.'
0000000000210890         db  0x00 ; '.'
0000000000210891         db  0x04 ; '.'
0000000000210892         db  0x00 ; '.'
0000000000210893         db  0x00 ; '.'
0000000000210894         db  0x00 ; '.'
0000000000210895         db  0x00 ; '.'
0000000000210896         db  0x00 ; '.'
0000000000210897         db  0x00 ; '.'
0000000000210898         db  0x00 ; '.'
0000000000210899         db  0x00 ; '.'
000000000021089a         db  0x00 ; '.'
000000000021089b         db  0x00 ; '.'
000000000021089c         db  0x00 ; '.'
000000000021089d         db  0x00 ; '.'
000000000021089e         db  0x00 ; '.'
000000000021089f         db  0x00 ; '.'
00000000002108a0         db  0xbd ; '.'
00000000002108a1         db  0xb8 ; '.'
00000000002108a2         db  0x00 ; '.'
00000000002108a3         db  0x00 ; '.'
00000000002108a4         db  0x00 ; '.'
00000000002108a5         db  0x00 ; '.'
00000000002108a6         db  0x00 ; '.'
00000000002108a7         db  0x00 ; '.'
00000000002108a8         db  0x03 ; '.'
00000000002108a9         db  0x00 ; '.'
00000000002108aa         db  0x00 ; '.'
00000000002108ab         db  0x00 ; '.'
00000000002108ac         db  0x05 ; '.'
00000000002108ad         db  0x00 ; '.'
00000000002108ae         db  0x00 ; '.'
00000000002108af         db  0x00 ; '.'
00000000002108b0         db  0x00 ; '.'
00000000002108b1         db  0x02 ; '.'
00000000002108b2         db  0x00 ; '.'
00000000002108b3         db  0x00 ; '.'
00000000002108b4         db  0x00 ; '.'
00000000002108b5         db  0x00 ; '.'
00000000002108b6         db  0x00 ; '.'
00000000002108b7         db  0x00 ; '.'
00000000002108b8         db  0x00 ; '.'
00000000002108b9         db  0x00 ; '.'
00000000002108ba         db  0x00 ; '.'
00000000002108bb         db  0x00 ; '.'
00000000002108bc         db  0x00 ; '.'
00000000002108bd         db  0x00 ; '.'
00000000002108be         db  0x00 ; '.'
00000000002108bf         db  0x00 ; '.'
00000000002108c0         db  0xc5 ; '.'
00000000002108c1         db  0xb8 ; '.'
00000000002108c2         db  0x00 ; '.'
00000000002108c3         db  0x00 ; '.'
00000000002108c4         db  0x00 ; '.'
00000000002108c5         db  0x00 ; '.'
00000000002108c6         db  0x00 ; '.'
00000000002108c7         db  0x00 ; '.'
00000000002108c8         db  0x03 ; '.'
00000000002108c9         db  0x00 ; '.'
00000000002108ca         db  0x00 ; '.'
00000000002108cb         db  0x00 ; '.'
00000000002108cc         db  0x0c ; '.'
00000000002108cd         db  0x00 ; '.'
00000000002108ce         db  0x00 ; '.'
00000000002108cf         db  0x00 ; '.'
00000000002108d0         db  0x00 ; '.'
00000000002108d1         db  0x02 ; '.'
00000000002108d2         db  0x00 ; '.'
00000000002108d3         db  0x00 ; '.'
00000000002108d4         db  0x00 ; '.'
00000000002108d5         db  0x00 ; '.'
00000000002108d6         db  0x00 ; '.'
00000000002108d7         db  0x00 ; '.'
00000000002108d8         db  0x00 ; '.'
00000000002108d9         db  0x00 ; '.'
00000000002108da         db  0x00 ; '.'
00000000002108db         db  0x00 ; '.'
00000000002108dc         db  0x00 ; '.'
00000000002108dd         db  0x00 ; '.'
00000000002108de         db  0x00 ; '.'
00000000002108df         db  0x00 ; '.'
00000000002108e0         db  0xc9 ; '.'
00000000002108e1         db  0xb3 ; '.'
00000000002108e2         db  0x00 ; '.'
00000000002108e3         db  0x00 ; '.'
00000000002108e4         db  0x00 ; '.'
00000000002108e5         db  0x00 ; '.'
00000000002108e6         db  0x00 ; '.'
00000000002108e7         db  0x00 ; '.'
00000000002108e8         db  0x03 ; '.'
00000000002108e9         db  0x00 ; '.'
00000000002108ea         db  0x00 ; '.'
00000000002108eb         db  0x00 ; '.'
00000000002108ec         db  0x05 ; '.'
00000000002108ed         db  0x00 ; '.'
00000000002108ee         db  0x00 ; '.'
00000000002108ef         db  0x00 ; '.'
00000000002108f0         db  0x00 ; '.'
00000000002108f1         db  0x08 ; '.'
00000000002108f2         db  0x00 ; '.'
00000000002108f3         db  0x00 ; '.'
00000000002108f4         db  0x00 ; '.'
00000000002108f5         db  0x00 ; '.'
00000000002108f6         db  0x00 ; '.'
00000000002108f7         db  0x00 ; '.'
00000000002108f8         db  0x00 ; '.'
00000000002108f9         db  0x00 ; '.'
00000000002108fa         db  0x00 ; '.'
00000000002108fb         db  0x00 ; '.'
00000000002108fc         db  0x00 ; '.'
00000000002108fd         db  0x00 ; '.'
00000000002108fe         db  0x00 ; '.'
00000000002108ff         db  0x00 ; '.'
0000000000210900         db  0xcd ; '.'
0000000000210901         db  0xb8 ; '.'
0000000000210902         db  0x00 ; '.'
0000000000210903         db  0x00 ; '.'
0000000000210904         db  0x00 ; '.'
0000000000210905         db  0x00 ; '.'
0000000000210906         db  0x00 ; '.'
0000000000210907         db  0x00 ; '.'
0000000000210908         db  0x03 ; '.'
0000000000210909         db  0x00 ; '.'
000000000021090a         db  0x00 ; '.'
000000000021090b         db  0x00 ; '.'
000000000021090c         db  0x0c ; '.'
000000000021090d         db  0x00 ; '.'
000000000021090e         db  0x00 ; '.'
000000000021090f         db  0x00 ; '.'
0000000000210910         db  0x00 ; '.'
0000000000210911         db  0x08 ; '.'
0000000000210912         db  0x00 ; '.'
0000000000210913         db  0x00 ; '.'
0000000000210914         db  0x00 ; '.'
0000000000210915         db  0x00 ; '.'
0000000000210916         db  0x00 ; '.'
0000000000210917         db  0x00 ; '.'
0000000000210918         db  0x00 ; '.'
0000000000210919         db  0x00 ; '.'
000000000021091a         db  0x00 ; '.'
000000000021091b         db  0x00 ; '.'
000000000021091c         db  0x00 ; '.'
000000000021091d         db  0x00 ; '.'
000000000021091e         db  0x00 ; '.'
000000000021091f         db  0x00 ; '.'
0000000000210920         db  0xd5 ; '.'
0000000000210921         db  0xb8 ; '.'
0000000000210922         db  0x00 ; '.'
0000000000210923         db  0x00 ; '.'
0000000000210924         db  0x00 ; '.'
0000000000210925         db  0x00 ; '.'
0000000000210926         db  0x00 ; '.'
0000000000210927         db  0x00 ; '.'
0000000000210928         db  0x03 ; '.'
0000000000210929         db  0x00 ; '.'
000000000021092a         db  0x00 ; '.'
000000000021092b         db  0x00 ; '.'
000000000021092c         db  0x06 ; '.'
000000000021092d         db  0x00 ; '.'
000000000021092e         db  0x00 ; '.'
000000000021092f         db  0x00 ; '.'
0000000000210930         db  0x00 ; '.'
0000000000210931         db  0x10 ; '.'
0000000000210932         db  0x00 ; '.'
0000000000210933         db  0x00 ; '.'
0000000000210934         db  0x00 ; '.'
0000000000210935         db  0x00 ; '.'
0000000000210936         db  0x00 ; '.'
0000000000210937         db  0x00 ; '.'
0000000000210938         db  0x00 ; '.'
0000000000210939         db  0x00 ; '.'
000000000021093a         db  0x00 ; '.'
000000000021093b         db  0x00 ; '.'
000000000021093c         db  0x00 ; '.'
000000000021093d         db  0x00 ; '.'
000000000021093e         db  0x00 ; '.'
000000000021093f         db  0x00 ; '.'
0000000000210940         db  0xdc ; '.'
0000000000210941         db  0xb8 ; '.'
0000000000210942         db  0x00 ; '.'
0000000000210943         db  0x00 ; '.'
0000000000210944         db  0x00 ; '.'
0000000000210945         db  0x00 ; '.'
0000000000210946         db  0x00 ; '.'
0000000000210947         db  0x00 ; '.'
0000000000210948         db  0x03 ; '.'
0000000000210949         db  0x00 ; '.'
000000000021094a         db  0x00 ; '.'
000000000021094b         db  0x00 ; '.'
000000000021094c         db  0x06 ; '.'
000000000021094d         db  0x00 ; '.'
000000000021094e         db  0x00 ; '.'
000000000021094f         db  0x00 ; '.'
0000000000210950         db  0x00 ; '.'
0000000000210951         db  0x00 ; '.'
0000000000210952         db  0x01 ; '.'
0000000000210953         db  0x00 ; '.'
0000000000210954         db  0x00 ; '.'
0000000000210955         db  0x00 ; '.'
0000000000210956         db  0x00 ; '.'
0000000000210957         db  0x00 ; '.'
0000000000210958         db  0x00 ; '.'
0000000000210959         db  0x00 ; '.'
000000000021095a         db  0x00 ; '.'
000000000021095b         db  0x00 ; '.'
000000000021095c         db  0x00 ; '.'
000000000021095d         db  0x00 ; '.'
000000000021095e         db  0x00 ; '.'
000000000021095f         db  0x00 ; '.'
0000000000210960         db  0x9b ; '.'
0000000000210961         db  0xb5 ; '.'
0000000000210962         db  0x00 ; '.'
0000000000210963         db  0x00 ; '.'
0000000000210964         db  0x00 ; '.'
0000000000210965         db  0x00 ; '.'
0000000000210966         db  0x00 ; '.'
0000000000210967         db  0x00 ; '.'
0000000000210968         db  0x04 ; '.'
0000000000210969         db  0x00 ; '.'
000000000021096a         db  0x00 ; '.'
000000000021096b         db  0x00 ; '.'
000000000021096c         db  0x0c ; '.'
000000000021096d         db  0x00 ; '.'
000000000021096e         db  0x00 ; '.'
000000000021096f         db  0x00 ; '.'
0000000000210970         db  0x00 ; '.'
0000000000210971         db  0x00 ; '.'
0000000000210972         db  0x00 ; '.'
0000000000210973         db  0x00 ; '.'
0000000000210974         db  0x00 ; '.'
0000000000210975         db  0x00 ; '.'
0000000000210976         db  0x00 ; '.'
0000000000210977         db  0x00 ; '.'
0000000000210978         db  0x00 ; '.'
0000000000210979         db  0x00 ; '.'
000000000021097a         db  0x00 ; '.'
000000000021097b         db  0x00 ; '.'
000000000021097c         db  0x00 ; '.'
000000000021097d         db  0x00 ; '.'
000000000021097e         db  0x00 ; '.'
000000000021097f         db  0x00 ; '.'
0000000000210980         db  0xa1 ; '.'
0000000000210981         db  0xb5 ; '.'
0000000000210982         db  0x00 ; '.'
0000000000210983         db  0x00 ; '.'
0000000000210984         db  0x00 ; '.'
0000000000210985         db  0x00 ; '.'
0000000000210986         db  0x00 ; '.'
0000000000210987         db  0x00 ; '.'
0000000000210988         db  0x04 ; '.'
0000000000210989         db  0x00 ; '.'
000000000021098a         db  0x00 ; '.'
000000000021098b         db  0x00 ; '.'
000000000021098c         db  0x0c ; '.'
000000000021098d         db  0x00 ; '.'
000000000021098e         db  0x00 ; '.'
000000000021098f         db  0x00 ; '.'
0000000000210990         db  0x00 ; '.'
0000000000210991         db  0x00 ; '.'
0000000000210992         db  0x00 ; '.'
0000000000210993         db  0x00 ; '.'
0000000000210994         db  0x00 ; '.'
0000000000210995         db  0x00 ; '.'
0000000000210996         db  0x00 ; '.'
0000000000210997         db  0x00 ; '.'
0000000000210998         db  0x00 ; '.'
0000000000210999         db  0x00 ; '.'
000000000021099a         db  0x00 ; '.'
000000000021099b         db  0x00 ; '.'
000000000021099c         db  0x00 ; '.'
000000000021099d         db  0x00 ; '.'
000000000021099e         db  0x00 ; '.'
000000000021099f         db  0x00 ; '.'
00000000002109a0         db  0xa9 ; '.'
00000000002109a1         db  0xb4 ; '.'
00000000002109a2         db  0x00 ; '.'
00000000002109a3         db  0x00 ; '.'
00000000002109a4         db  0x00 ; '.'
00000000002109a5         db  0x00 ; '.'
00000000002109a6         db  0x00 ; '.'
00000000002109a7         db  0x00 ; '.'
00000000002109a8         db  0x04 ; '.'
00000000002109a9         db  0x00 ; '.'
00000000002109aa         db  0x00 ; '.'
00000000002109ab         db  0x00 ; '.'
00000000002109ac         db  0x0c ; '.'
00000000002109ad         db  0x00 ; '.'
00000000002109ae         db  0x00 ; '.'
00000000002109af         db  0x00 ; '.'
00000000002109b0         db  0x00 ; '.'
00000000002109b1         db  0x00 ; '.'
00000000002109b2         db  0x00 ; '.'
00000000002109b3         db  0x00 ; '.'
00000000002109b4         db  0x00 ; '.'
00000000002109b5         db  0x00 ; '.'
00000000002109b6         db  0x00 ; '.'
00000000002109b7         db  0x00 ; '.'
00000000002109b8         db  0x00 ; '.'
00000000002109b9         db  0x00 ; '.'
00000000002109ba         db  0x00 ; '.'
00000000002109bb         db  0x00 ; '.'
00000000002109bc         db  0x00 ; '.'
00000000002109bd         db  0x00 ; '.'
00000000002109be         db  0x00 ; '.'
00000000002109bf         db  0x00 ; '.'
00000000002109c0         db  0x95 ; '.'
00000000002109c1         db  0xb8 ; '.'
00000000002109c2         db  0x00 ; '.'
00000000002109c3         db  0x00 ; '.'
00000000002109c4         db  0x00 ; '.'
00000000002109c5         db  0x00 ; '.'
00000000002109c6         db  0x00 ; '.'
00000000002109c7         db  0x00 ; '.'
00000000002109c8         db  0x04 ; '.'
00000000002109c9         db  0x00 ; '.'
00000000002109ca         db  0x00 ; '.'
00000000002109cb         db  0x00 ; '.'
00000000002109cc         db  0x0c ; '.'
00000000002109cd         db  0x00 ; '.'
00000000002109ce         db  0x00 ; '.'
00000000002109cf         db  0x00 ; '.'
00000000002109d0         db  0x00 ; '.'
00000000002109d1         db  0x00 ; '.'
00000000002109d2         db  0x00 ; '.'
00000000002109d3         db  0x00 ; '.'
00000000002109d4         db  0x00 ; '.'
00000000002109d5         db  0x00 ; '.'
00000000002109d6         db  0x00 ; '.'
00000000002109d7         db  0x00 ; '.'
00000000002109d8         db  0x00 ; '.'
00000000002109d9         db  0x00 ; '.'
00000000002109da         db  0x00 ; '.'
00000000002109db         db  0x00 ; '.'
00000000002109dc         db  0x00 ; '.'
00000000002109dd         db  0x00 ; '.'
00000000002109de         db  0x00 ; '.'
00000000002109df         db  0x00 ; '.'
00000000002109e0         db  0xae ; '.'
00000000002109e1         db  0xb4 ; '.'
00000000002109e2         db  0x00 ; '.'
00000000002109e3         db  0x00 ; '.'
00000000002109e4         db  0x00 ; '.'
00000000002109e5         db  0x00 ; '.'
00000000002109e6         db  0x00 ; '.'
00000000002109e7         db  0x00 ; '.'
00000000002109e8         db  0x04 ; '.'
00000000002109e9         db  0x00 ; '.'
00000000002109ea         db  0x00 ; '.'
00000000002109eb         db  0x00 ; '.'
00000000002109ec         db  0x08 ; '.'
00000000002109ed         db  0x00 ; '.'
00000000002109ee         db  0x00 ; '.'
00000000002109ef         db  0x00 ; '.'
00000000002109f0         db  0x00 ; '.'
00000000002109f1         db  0x00 ; '.'
00000000002109f2         db  0x00 ; '.'
00000000002109f3         db  0x00 ; '.'
00000000002109f4         db  0x00 ; '.'
00000000002109f5         db  0x00 ; '.'
00000000002109f6         db  0x00 ; '.'
00000000002109f7         db  0x00 ; '.'
00000000002109f8         db  0x00 ; '.'
00000000002109f9         db  0x00 ; '.'
00000000002109fa         db  0x00 ; '.'
00000000002109fb         db  0x00 ; '.'
00000000002109fc         db  0x00 ; '.'
00000000002109fd         db  0x00 ; '.'
00000000002109fe         db  0x00 ; '.'
00000000002109ff         db  0x00 ; '.'
0000000000210a00         db  0xb1 ; '.'
0000000000210a01         db  0xb4 ; '.'
0000000000210a02         db  0x00 ; '.'
0000000000210a03         db  0x00 ; '.'
0000000000210a04         db  0x00 ; '.'
0000000000210a05         db  0x00 ; '.'
0000000000210a06         db  0x00 ; '.'
0000000000210a07         db  0x00 ; '.'
0000000000210a08         db  0x04 ; '.'
0000000000210a09         db  0x00 ; '.'
0000000000210a0a         db  0x00 ; '.'
0000000000210a0b         db  0x00 ; '.'
0000000000210a0c         db  0x08 ; '.'
0000000000210a0d         db  0x00 ; '.'
0000000000210a0e         db  0x00 ; '.'
0000000000210a0f         db  0x00 ; '.'
0000000000210a10         db  0x00 ; '.'
0000000000210a11         db  0x00 ; '.'
0000000000210a12         db  0x00 ; '.'
0000000000210a13         db  0x00 ; '.'
0000000000210a14         db  0x00 ; '.'
0000000000210a15         db  0x00 ; '.'
0000000000210a16         db  0x00 ; '.'
0000000000210a17         db  0x00 ; '.'
0000000000210a18         db  0x00 ; '.'
0000000000210a19         db  0x00 ; '.'
0000000000210a1a         db  0x00 ; '.'
0000000000210a1b         db  0x00 ; '.'
0000000000210a1c         db  0x00 ; '.'
0000000000210a1d         db  0x00 ; '.'
0000000000210a1e         db  0x00 ; '.'
0000000000210a1f         db  0x00 ; '.'
0000000000210a20         db  0xf1 ; '.'
0000000000210a21         db  0xb4 ; '.'
0000000000210a22         db  0x00 ; '.'
0000000000210a23         db  0x00 ; '.'
0000000000210a24         db  0x00 ; '.'
0000000000210a25         db  0x00 ; '.'
0000000000210a26         db  0x00 ; '.'
0000000000210a27         db  0x00 ; '.'
0000000000210a28         db  0x04 ; '.'
0000000000210a29         db  0x00 ; '.'
0000000000210a2a         db  0x00 ; '.'
0000000000210a2b         db  0x00 ; '.'
0000000000210a2c         db  0x0c ; '.'
0000000000210a2d         db  0x00 ; '.'
0000000000210a2e         db  0x00 ; '.'
0000000000210a2f         db  0x00 ; '.'
0000000000210a30         db  0x00 ; '.'
0000000000210a31         db  0x00 ; '.'
0000000000210a32         db  0x00 ; '.'
0000000000210a33         db  0x00 ; '.'
0000000000210a34         db  0x00 ; '.'
0000000000210a35         db  0x00 ; '.'
0000000000210a36         db  0x00 ; '.'
0000000000210a37         db  0x00 ; '.'
0000000000210a38         db  0x00 ; '.'
0000000000210a39         db  0x00 ; '.'
0000000000210a3a         db  0x00 ; '.'
0000000000210a3b         db  0x00 ; '.'
0000000000210a3c         db  0x00 ; '.'
0000000000210a3d         db  0x00 ; '.'
0000000000210a3e         db  0x00 ; '.'
0000000000210a3f         db  0x00 ; '.'
0000000000210a40         db  0xed ; '.'
0000000000210a41         db  0xb4 ; '.'
0000000000210a42         db  0x00 ; '.'
0000000000210a43         db  0x00 ; '.'
0000000000210a44         db  0x00 ; '.'
0000000000210a45         db  0x00 ; '.'
0000000000210a46         db  0x00 ; '.'
0000000000210a47         db  0x00 ; '.'
0000000000210a48         db  0x04 ; '.'
0000000000210a49         db  0x00 ; '.'
0000000000210a4a         db  0x00 ; '.'
0000000000210a4b         db  0x00 ; '.'
0000000000210a4c         db  0x0c ; '.'
0000000000210a4d         db  0x00 ; '.'
0000000000210a4e         db  0x00 ; '.'
0000000000210a4f         db  0x00 ; '.'
0000000000210a50         db  0x00 ; '.'
0000000000210a51         db  0x00 ; '.'
0000000000210a52         db  0x00 ; '.'
0000000000210a53         db  0x00 ; '.'
0000000000210a54         db  0x00 ; '.'
0000000000210a55         db  0x00 ; '.'
0000000000210a56         db  0x00 ; '.'
0000000000210a57         db  0x00 ; '.'
0000000000210a58         db  0x00 ; '.'
0000000000210a59         db  0x00 ; '.'
0000000000210a5a         db  0x00 ; '.'
0000000000210a5b         db  0x00 ; '.'
0000000000210a5c         db  0x00 ; '.'
0000000000210a5d         db  0x00 ; '.'
0000000000210a5e         db  0x00 ; '.'
0000000000210a5f         db  0x00 ; '.'
0000000000210a60         db  0xe0 ; '.'
0000000000210a61         db  0xb4 ; '.'
0000000000210a62         db  0x00 ; '.'
0000000000210a63         db  0x00 ; '.'
0000000000210a64         db  0x00 ; '.'
0000000000210a65         db  0x00 ; '.'
0000000000210a66         db  0x00 ; '.'
0000000000210a67         db  0x00 ; '.'
0000000000210a68         db  0x04 ; '.'
0000000000210a69         db  0x00 ; '.'
0000000000210a6a         db  0x00 ; '.'
0000000000210a6b         db  0x00 ; '.'
0000000000210a6c         db  0x0c ; '.'
0000000000210a6d         db  0x00 ; '.'
0000000000210a6e         db  0x00 ; '.'
0000000000210a6f         db  0x00 ; '.'
0000000000210a70         db  0x00 ; '.'
0000000000210a71         db  0x00 ; '.'
0000000000210a72         db  0x00 ; '.'
0000000000210a73         db  0x00 ; '.'
0000000000210a74         db  0x00 ; '.'
0000000000210a75         db  0x00 ; '.'
0000000000210a76         db  0x00 ; '.'
0000000000210a77         db  0x00 ; '.'
0000000000210a78         db  0x00 ; '.'
0000000000210a79         db  0x00 ; '.'
0000000000210a7a         db  0x00 ; '.'
0000000000210a7b         db  0x00 ; '.'
0000000000210a7c         db  0x00 ; '.'
0000000000210a7d         db  0x00 ; '.'
0000000000210a7e         db  0x00 ; '.'
0000000000210a7f         db  0x00 ; '.'
0000000000210a80         db  0xe6 ; '.'
0000000000210a81         db  0xb4 ; '.'
0000000000210a82         db  0x00 ; '.'
0000000000210a83         db  0x00 ; '.'
0000000000210a84         db  0x00 ; '.'
0000000000210a85         db  0x00 ; '.'
0000000000210a86         db  0x00 ; '.'
0000000000210a87         db  0x00 ; '.'
0000000000210a88         db  0x04 ; '.'
0000000000210a89         db  0x00 ; '.'
0000000000210a8a         db  0x00 ; '.'
0000000000210a8b         db  0x00 ; '.'
0000000000210a8c         db  0x0c ; '.'
0000000000210a8d         db  0x00 ; '.'
0000000000210a8e         db  0x00 ; '.'
0000000000210a8f         db  0x00 ; '.'
0000000000210a90         db  0x00 ; '.'
0000000000210a91         db  0x00 ; '.'
0000000000210a92         db  0x00 ; '.'
0000000000210a93         db  0x00 ; '.'
0000000000210a94         db  0x00 ; '.'
0000000000210a95         db  0x00 ; '.'
0000000000210a96         db  0x00 ; '.'
0000000000210a97         db  0x00 ; '.'
0000000000210a98         db  0x00 ; '.'
0000000000210a99         db  0x00 ; '.'
0000000000210a9a         db  0x00 ; '.'
0000000000210a9b         db  0x00 ; '.'
0000000000210a9c         db  0x00 ; '.'
0000000000210a9d         db  0x00 ; '.'
0000000000210a9e         db  0x00 ; '.'
0000000000210a9f         db  0x00 ; '.'
0000000000210aa0         db  0xd9 ; '.'
0000000000210aa1         db  0xb4 ; '.'
0000000000210aa2         db  0x00 ; '.'
0000000000210aa3         db  0x00 ; '.'
0000000000210aa4         db  0x00 ; '.'
0000000000210aa5         db  0x00 ; '.'
0000000000210aa6         db  0x00 ; '.'
0000000000210aa7         db  0x00 ; '.'
0000000000210aa8         db  0x04 ; '.'
0000000000210aa9         db  0x00 ; '.'
0000000000210aaa         db  0x00 ; '.'
0000000000210aab         db  0x00 ; '.'
0000000000210aac         db  0x0c ; '.'
0000000000210aad         db  0x00 ; '.'
0000000000210aae         db  0x00 ; '.'
0000000000210aaf         db  0x00 ; '.'
0000000000210ab0         db  0x00 ; '.'
0000000000210ab1         db  0x00 ; '.'
0000000000210ab2         db  0x00 ; '.'
0000000000210ab3         db  0x00 ; '.'
0000000000210ab4         db  0x00 ; '.'
0000000000210ab5         db  0x00 ; '.'
0000000000210ab6         db  0x00 ; '.'
0000000000210ab7         db  0x00 ; '.'
0000000000210ab8         db  0x00 ; '.'
0000000000210ab9         db  0x00 ; '.'
0000000000210aba         db  0x00 ; '.'
0000000000210abb         db  0x00 ; '.'
0000000000210abc         db  0x00 ; '.'
0000000000210abd         db  0x00 ; '.'
0000000000210abe         db  0x00 ; '.'
0000000000210abf         db  0x00 ; '.'
0000000000210ac0         db  0xf8 ; '.'
0000000000210ac1         db  0xb4 ; '.'
0000000000210ac2         db  0x00 ; '.'
0000000000210ac3         db  0x00 ; '.'
0000000000210ac4         db  0x00 ; '.'
0000000000210ac5         db  0x00 ; '.'
0000000000210ac6         db  0x00 ; '.'
0000000000210ac7         db  0x00 ; '.'
0000000000210ac8         db  0x04 ; '.'
0000000000210ac9         db  0x00 ; '.'
0000000000210aca         db  0x00 ; '.'
0000000000210acb         db  0x00 ; '.'
0000000000210acc         db  0x0c ; '.'
0000000000210acd         db  0x00 ; '.'
0000000000210ace         db  0x00 ; '.'
0000000000210acf         db  0x00 ; '.'
0000000000210ad0         db  0x00 ; '.'
0000000000210ad1         db  0x00 ; '.'
0000000000210ad2         db  0x00 ; '.'
0000000000210ad3         db  0x00 ; '.'
0000000000210ad4         db  0x00 ; '.'
0000000000210ad5         db  0x00 ; '.'
0000000000210ad6         db  0x00 ; '.'
0000000000210ad7         db  0x00 ; '.'
0000000000210ad8         db  0x00 ; '.'
0000000000210ad9         db  0x00 ; '.'
0000000000210ada         db  0x00 ; '.'
0000000000210adb         db  0x00 ; '.'
0000000000210adc         db  0x00 ; '.'
0000000000210add         db  0x00 ; '.'
0000000000210ade         db  0x00 ; '.'
0000000000210adf         db  0x00 ; '.'
0000000000210ae0         db  0x00 ; '.'
0000000000210ae1         db  0xb5 ; '.'
0000000000210ae2         db  0x00 ; '.'
0000000000210ae3         db  0x00 ; '.'
0000000000210ae4         db  0x00 ; '.'
0000000000210ae5         db  0x00 ; '.'
0000000000210ae6         db  0x00 ; '.'
0000000000210ae7         db  0x00 ; '.'
0000000000210ae8         db  0x04 ; '.'
0000000000210ae9         db  0x00 ; '.'
0000000000210aea         db  0x00 ; '.'
0000000000210aeb         db  0x00 ; '.'
0000000000210aec         db  0x0c ; '.'
0000000000210aed         db  0x00 ; '.'
0000000000210aee         db  0x00 ; '.'
0000000000210aef         db  0x00 ; '.'
0000000000210af0         db  0x00 ; '.'
0000000000210af1         db  0x00 ; '.'
0000000000210af2         db  0x00 ; '.'
0000000000210af3         db  0x00 ; '.'
0000000000210af4         db  0x00 ; '.'
0000000000210af5         db  0x00 ; '.'
0000000000210af6         db  0x00 ; '.'
0000000000210af7         db  0x00 ; '.'
0000000000210af8         db  0x00 ; '.'
0000000000210af9         db  0x00 ; '.'
0000000000210afa         db  0x00 ; '.'
0000000000210afb         db  0x00 ; '.'
0000000000210afc         db  0x00 ; '.'
0000000000210afd         db  0x00 ; '.'
0000000000210afe         db  0x00 ; '.'
0000000000210aff         db  0x00 ; '.'
0000000000210b00         db  0x05 ; '.'
0000000000210b01         db  0xb5 ; '.'
0000000000210b02         db  0x00 ; '.'
0000000000210b03         db  0x00 ; '.'
0000000000210b04         db  0x00 ; '.'
0000000000210b05         db  0x00 ; '.'
0000000000210b06         db  0x00 ; '.'
0000000000210b07         db  0x00 ; '.'
0000000000210b08         db  0x04 ; '.'
0000000000210b09         db  0x00 ; '.'
0000000000210b0a         db  0x00 ; '.'
0000000000210b0b         db  0x00 ; '.'
0000000000210b0c         db  0x0c ; '.'
0000000000210b0d         db  0x00 ; '.'
0000000000210b0e         db  0x00 ; '.'
0000000000210b0f         db  0x00 ; '.'
0000000000210b10         db  0x00 ; '.'
0000000000210b11         db  0x00 ; '.'
0000000000210b12         db  0x00 ; '.'
0000000000210b13         db  0x00 ; '.'
0000000000210b14         db  0x00 ; '.'
0000000000210b15         db  0x00 ; '.'
0000000000210b16         db  0x00 ; '.'
0000000000210b17         db  0x00 ; '.'
0000000000210b18         db  0x00 ; '.'
0000000000210b19         db  0x00 ; '.'
0000000000210b1a         db  0x00 ; '.'
0000000000210b1b         db  0x00 ; '.'
0000000000210b1c         db  0x00 ; '.'
0000000000210b1d         db  0x00 ; '.'
0000000000210b1e         db  0x00 ; '.'
0000000000210b1f         db  0x00 ; '.'
0000000000210b20         db  0x0b ; '.'
0000000000210b21         db  0xb5 ; '.'
0000000000210b22         db  0x00 ; '.'
0000000000210b23         db  0x00 ; '.'
0000000000210b24         db  0x00 ; '.'
0000000000210b25         db  0x00 ; '.'
0000000000210b26         db  0x00 ; '.'
0000000000210b27         db  0x00 ; '.'
0000000000210b28         db  0x04 ; '.'
0000000000210b29         db  0x00 ; '.'
0000000000210b2a         db  0x00 ; '.'
0000000000210b2b         db  0x00 ; '.'
0000000000210b2c         db  0x0c ; '.'
0000000000210b2d         db  0x00 ; '.'
0000000000210b2e         db  0x00 ; '.'
0000000000210b2f         db  0x00 ; '.'
0000000000210b30         db  0x00 ; '.'
0000000000210b31         db  0x00 ; '.'
0000000000210b32         db  0x00 ; '.'
0000000000210b33         db  0x00 ; '.'
0000000000210b34         db  0x00 ; '.'
0000000000210b35         db  0x00 ; '.'
0000000000210b36         db  0x00 ; '.'
0000000000210b37         db  0x00 ; '.'
0000000000210b38         db  0x00 ; '.'
0000000000210b39         db  0x00 ; '.'
0000000000210b3a         db  0x00 ; '.'
0000000000210b3b         db  0x00 ; '.'
0000000000210b3c         db  0x00 ; '.'
0000000000210b3d         db  0x00 ; '.'
0000000000210b3e         db  0x00 ; '.'
0000000000210b3f         db  0x00 ; '.'
0000000000210b40         db  0x11 ; '.'
0000000000210b41         db  0xb5 ; '.'
0000000000210b42         db  0x00 ; '.'
0000000000210b43         db  0x00 ; '.'
0000000000210b44         db  0x00 ; '.'
0000000000210b45         db  0x00 ; '.'
0000000000210b46         db  0x00 ; '.'
0000000000210b47         db  0x00 ; '.'
0000000000210b48         db  0x04 ; '.'
0000000000210b49         db  0x00 ; '.'
0000000000210b4a         db  0x00 ; '.'
0000000000210b4b         db  0x00 ; '.'
0000000000210b4c         db  0x08 ; '.'
0000000000210b4d         db  0x00 ; '.'
0000000000210b4e         db  0x00 ; '.'
0000000000210b4f         db  0x00 ; '.'
0000000000210b50         db  0x00 ; '.'
0000000000210b51         db  0x00 ; '.'
0000000000210b52         db  0x00 ; '.'
0000000000210b53         db  0x00 ; '.'
0000000000210b54         db  0x00 ; '.'
0000000000210b55         db  0x00 ; '.'
0000000000210b56         db  0x00 ; '.'
0000000000210b57         db  0x00 ; '.'
0000000000210b58         db  0x00 ; '.'
0000000000210b59         db  0x00 ; '.'
0000000000210b5a         db  0x00 ; '.'
0000000000210b5b         db  0x00 ; '.'
0000000000210b5c         db  0x00 ; '.'
0000000000210b5d         db  0x00 ; '.'
0000000000210b5e         db  0x00 ; '.'
0000000000210b5f         db  0x00 ; '.'
0000000000210b60         db  0x15 ; '.'
0000000000210b61         db  0xb5 ; '.'
0000000000210b62         db  0x00 ; '.'
0000000000210b63         db  0x00 ; '.'
0000000000210b64         db  0x00 ; '.'
0000000000210b65         db  0x00 ; '.'
0000000000210b66         db  0x00 ; '.'
0000000000210b67         db  0x00 ; '.'
0000000000210b68         db  0x04 ; '.'
0000000000210b69         db  0x00 ; '.'
0000000000210b6a         db  0x00 ; '.'
0000000000210b6b         db  0x00 ; '.'
0000000000210b6c         db  0x08 ; '.'
0000000000210b6d         db  0x00 ; '.'
0000000000210b6e         db  0x00 ; '.'
0000000000210b6f         db  0x00 ; '.'
0000000000210b70         db  0x00 ; '.'
0000000000210b71         db  0x00 ; '.'
0000000000210b72         db  0x00 ; '.'
0000000000210b73         db  0x00 ; '.'
0000000000210b74         db  0x00 ; '.'
0000000000210b75         db  0x00 ; '.'
0000000000210b76         db  0x00 ; '.'
0000000000210b77         db  0x00 ; '.'
0000000000210b78         db  0x00 ; '.'
0000000000210b79         db  0x00 ; '.'
0000000000210b7a         db  0x00 ; '.'
0000000000210b7b         db  0x00 ; '.'
0000000000210b7c         db  0x00 ; '.'
0000000000210b7d         db  0x00 ; '.'
0000000000210b7e         db  0x00 ; '.'
0000000000210b7f         db  0x00 ; '.'
0000000000210b80         db  0x00 ; '.'
0000000000210b81         db  0x00 ; '.'
0000000000210b82         db  0x00 ; '.'
0000000000210b83         db  0x00 ; '.'
0000000000210b84         db  0x00 ; '.'
0000000000210b85         db  0x00 ; '.'
0000000000210b86         db  0x00 ; '.'
0000000000210b87         db  0x00 ; '.'
0000000000210b88         db  0x00 ; '.'
0000000000210b89         db  0x00 ; '.'
0000000000210b8a         db  0x00 ; '.'
0000000000210b8b         db  0x00 ; '.'
0000000000210b8c         db  0x00 ; '.'
0000000000210b8d         db  0x00 ; '.'
0000000000210b8e         db  0x00 ; '.'
0000000000210b8f         db  0x00 ; '.'
0000000000210b90         db  0x00 ; '.'
0000000000210b91         db  0x00 ; '.'
0000000000210b92         db  0x00 ; '.'
0000000000210b93         db  0x00 ; '.'
0000000000210b94         db  0x00 ; '.'
0000000000210b95         db  0x00 ; '.'
0000000000210b96         db  0x00 ; '.'
0000000000210b97         db  0x00 ; '.'
0000000000210b98         db  0x00 ; '.'
0000000000210b99         db  0x00 ; '.'
0000000000210b9a         db  0x00 ; '.'
0000000000210b9b         db  0x00 ; '.'
0000000000210b9c         db  0x00 ; '.'
0000000000210b9d         db  0x00 ; '.'
0000000000210b9e         db  0x00 ; '.'
0000000000210b9f         db  0x00 ; '.'
                     quoting_style_args:
0000000000210ba0         db  0x29 ; ')'
0000000000210ba1         db  0xdb ; '.'
0000000000210ba2         db  0x00 ; '.'
0000000000210ba3         db  0x00 ; '.'
0000000000210ba4         db  0x00 ; '.'
0000000000210ba5         db  0x00 ; '.'
0000000000210ba6         db  0x00 ; '.'
0000000000210ba7         db  0x00 ; '.'
0000000000210ba8         db  0x31 ; '1'
0000000000210ba9         db  0xdb ; '.'
0000000000210baa         db  0x00 ; '.'
0000000000210bab         db  0x00 ; '.'
0000000000210bac         db  0x00 ; '.'
0000000000210bad         db  0x00 ; '.'
0000000000210bae         db  0x00 ; '.'
0000000000210baf         db  0x00 ; '.'
0000000000210bb0         db  0x37 ; '7'
0000000000210bb1         db  0xdb ; '.'
0000000000210bb2         db  0x00 ; '.'
0000000000210bb3         db  0x00 ; '.'
0000000000210bb4         db  0x00 ; '.'
0000000000210bb5         db  0x00 ; '.'
0000000000210bb6         db  0x00 ; '.'
0000000000210bb7         db  0x00 ; '.'
0000000000210bb8         db  0x44 ; 'D'
0000000000210bb9         db  0xdb ; '.'
0000000000210bba         db  0x00 ; '.'
0000000000210bbb         db  0x00 ; '.'
0000000000210bbc         db  0x00 ; '.'
0000000000210bbd         db  0x00 ; '.'
0000000000210bbe         db  0x00 ; '.'
0000000000210bbf         db  0x00 ; '.'
0000000000210bc0         db  0x51 ; 'Q'
0000000000210bc1         db  0xdb ; '.'
0000000000210bc2         db  0x00 ; '.'
0000000000210bc3         db  0x00 ; '.'
0000000000210bc4         db  0x00 ; '.'
0000000000210bc5         db  0x00 ; '.'
0000000000210bc6         db  0x00 ; '.'
0000000000210bc7         db  0x00 ; '.'
0000000000210bc8         db  0xd1 ; '.'
0000000000210bc9         db  0xb4 ; '.'
0000000000210bca         db  0x00 ; '.'
0000000000210bcb         db  0x00 ; '.'
0000000000210bcc         db  0x00 ; '.'
0000000000210bcd         db  0x00 ; '.'
0000000000210bce         db  0x00 ; '.'
0000000000210bcf         db  0x00 ; '.'
0000000000210bd0         db  0x65 ; 'e'
0000000000210bd1         db  0xdb ; '.'
0000000000210bd2         db  0x00 ; '.'
0000000000210bd3         db  0x00 ; '.'
0000000000210bd4         db  0x00 ; '.'
0000000000210bd5         db  0x00 ; '.'
0000000000210bd6         db  0x00 ; '.'
0000000000210bd7         db  0x00 ; '.'
0000000000210bd8         db  0x4a ; 'J'
0000000000210bd9         db  0xdb ; '.'
0000000000210bda         db  0x00 ; '.'
0000000000210bdb         db  0x00 ; '.'
0000000000210bdc         db  0x00 ; '.'
0000000000210bdd         db  0x00 ; '.'
0000000000210bde         db  0x00 ; '.'
0000000000210bdf         db  0x00 ; '.'
0000000000210be0         db  0xc1 ; '.'
0000000000210be1         db  0xb5 ; '.'
0000000000210be2         db  0x00 ; '.'
0000000000210be3         db  0x00 ; '.'
0000000000210be4         db  0x00 ; '.'
0000000000210be5         db  0x00 ; '.'
0000000000210be6         db  0x00 ; '.'
0000000000210be7         db  0x00 ; '.'
0000000000210be8         db  0x6d ; 'm'
0000000000210be9         db  0xdb ; '.'
0000000000210bea         db  0x00 ; '.'
0000000000210beb         db  0x00 ; '.'
0000000000210bec         db  0x00 ; '.'
0000000000210bed         db  0x00 ; '.'
0000000000210bee         db  0x00 ; '.'
0000000000210bef         db  0x00 ; '.'
0000000000210bf0         db  0x00 ; '.'
0000000000210bf1         db  0x00 ; '.'
0000000000210bf2         db  0x00 ; '.'
0000000000210bf3         db  0x00 ; '.'
0000000000210bf4         db  0x00 ; '.'
0000000000210bf5         db  0x00 ; '.'
0000000000210bf6         db  0x00 ; '.'
0000000000210bf7         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x210bf8; 0x210de8[ (496 bytes)
        ; File offset : [68600; 69096[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
0000000000210bf8         db  0x01 ; '.'
0000000000210bf9         db  0x00 ; '.'
0000000000210bfa         db  0x00 ; '.'
0000000000210bfb         db  0x00 ; '.'
0000000000210bfc         db  0x00 ; '.'
0000000000210bfd         db  0x00 ; '.'
0000000000210bfe         db  0x00 ; '.'
0000000000210bff         db  0x00 ; '.'
0000000000210c00         db  0x01 ; '.'
0000000000210c01         db  0x00 ; '.'
0000000000210c02         db  0x00 ; '.'
0000000000210c03         db  0x00 ; '.'
0000000000210c04         db  0x00 ; '.'
0000000000210c05         db  0x00 ; '.'
0000000000210c06         db  0x00 ; '.'
0000000000210c07         db  0x00 ; '.'
0000000000210c08         db  0x0c ; '.'
0000000000210c09         db  0x00 ; '.'
0000000000210c0a         db  0x00 ; '.'
0000000000210c0b         db  0x00 ; '.'
0000000000210c0c         db  0x00 ; '.'
0000000000210c0d         db  0x00 ; '.'
0000000000210c0e         db  0x00 ; '.'
0000000000210c0f         db  0x00 ; '.'
0000000000210c10         db  0xe0 ; '.'
0000000000210c11         db  0x23 ; '#'
0000000000210c12         db  0x00 ; '.'
0000000000210c13         db  0x00 ; '.'
0000000000210c14         db  0x00 ; '.'
0000000000210c15         db  0x00 ; '.'
0000000000210c16         db  0x00 ; '.'
0000000000210c17         db  0x00 ; '.'
0000000000210c18         db  0x0d ; '.'
0000000000210c19         db  0x00 ; '.'
0000000000210c1a         db  0x00 ; '.'
0000000000210c1b         db  0x00 ; '.'
0000000000210c1c         db  0x00 ; '.'
0000000000210c1d         db  0x00 ; '.'
0000000000210c1e         db  0x00 ; '.'
0000000000210c1f         db  0x00 ; '.'
0000000000210c20         db  0xd0 ; '.'
0000000000210c21         db  0xb2 ; '.'
0000000000210c22         db  0x00 ; '.'
0000000000210c23         db  0x00 ; '.'
0000000000210c24         db  0x00 ; '.'
0000000000210c25         db  0x00 ; '.'
0000000000210c26         db  0x00 ; '.'
0000000000210c27         db  0x00 ; '.'
0000000000210c28         db  0x19 ; '.'
0000000000210c29         db  0x00 ; '.'
0000000000210c2a         db  0x00 ; '.'
0000000000210c2b         db  0x00 ; '.'
0000000000210c2c         db  0x00 ; '.'
0000000000210c2d         db  0x00 ; '.'
0000000000210c2e         db  0x00 ; '.'
0000000000210c2f         db  0x00 ; '.'
0000000000210c30         db  0x50 ; 'P'
0000000000210c31         db  0xfa ; '.'
0000000000210c32         db  0x20 ; ' '
0000000000210c33         db  0x00 ; '.'
0000000000210c34         db  0x00 ; '.'
0000000000210c35         db  0x00 ; '.'
0000000000210c36         db  0x00 ; '.'
0000000000210c37         db  0x00 ; '.'
0000000000210c38         db  0x1b ; '.'
0000000000210c39         db  0x00 ; '.'
0000000000210c3a         db  0x00 ; '.'
0000000000210c3b         db  0x00 ; '.'
0000000000210c3c         db  0x00 ; '.'
0000000000210c3d         db  0x00 ; '.'
0000000000210c3e         db  0x00 ; '.'
0000000000210c3f         db  0x00 ; '.'
0000000000210c40         db  0x08 ; '.'
0000000000210c41         db  0x00 ; '.'
0000000000210c42         db  0x00 ; '.'
0000000000210c43         db  0x00 ; '.'
0000000000210c44         db  0x00 ; '.'
0000000000210c45         db  0x00 ; '.'
0000000000210c46         db  0x00 ; '.'
0000000000210c47         db  0x00 ; '.'
0000000000210c48         db  0x1a ; '.'
0000000000210c49         db  0x00 ; '.'
0000000000210c4a         db  0x00 ; '.'
0000000000210c4b         db  0x00 ; '.'
0000000000210c4c         db  0x00 ; '.'
0000000000210c4d         db  0x00 ; '.'
0000000000210c4e         db  0x00 ; '.'
0000000000210c4f         db  0x00 ; '.'
0000000000210c50         db  0x58 ; 'X'
0000000000210c51         db  0xfa ; '.'
0000000000210c52         db  0x20 ; ' '
0000000000210c53         db  0x00 ; '.'
0000000000210c54         db  0x00 ; '.'
0000000000210c55         db  0x00 ; '.'
0000000000210c56         db  0x00 ; '.'
0000000000210c57         db  0x00 ; '.'
0000000000210c58         db  0x1c ; '.'
0000000000210c59         db  0x00 ; '.'
0000000000210c5a         db  0x00 ; '.'
0000000000210c5b         db  0x00 ; '.'
0000000000210c5c         db  0x00 ; '.'
0000000000210c5d         db  0x00 ; '.'
0000000000210c5e         db  0x00 ; '.'
0000000000210c5f         db  0x00 ; '.'
0000000000210c60         db  0x08 ; '.'
0000000000210c61         db  0x00 ; '.'
0000000000210c62         db  0x00 ; '.'
0000000000210c63         db  0x00 ; '.'
0000000000210c64         db  0x00 ; '.'
0000000000210c65         db  0x00 ; '.'
0000000000210c66         db  0x00 ; '.'
0000000000210c67         db  0x00 ; '.'
0000000000210c68         db  0xf5 ; '.'
0000000000210c69         db  0xfe ; '.'
0000000000210c6a         db  0xff ; '.'
0000000000210c6b         db  0x6f ; 'o'
0000000000210c6c         db  0x00 ; '.'
0000000000210c6d         db  0x00 ; '.'
0000000000210c6e         db  0x00 ; '.'
0000000000210c6f         db  0x00 ; '.'
0000000000210c70         db  0x98 ; '.'
0000000000210c71         db  0x02 ; '.'
0000000000210c72         db  0x00 ; '.'
0000000000210c73         db  0x00 ; '.'
0000000000210c74         db  0x00 ; '.'
0000000000210c75         db  0x00 ; '.'
0000000000210c76         db  0x00 ; '.'
0000000000210c77         db  0x00 ; '.'
0000000000210c78         db  0x05 ; '.'
0000000000210c79         db  0x00 ; '.'
0000000000210c7a         db  0x00 ; '.'
0000000000210c7b         db  0x00 ; '.'
0000000000210c7c         db  0x00 ; '.'
0000000000210c7d         db  0x00 ; '.'
0000000000210c7e         db  0x00 ; '.'
0000000000210c7f         db  0x00 ; '.'
0000000000210c80         db  0xd0 ; '.'
0000000000210c81         db  0x09 ; '.'
0000000000210c82         db  0x00 ; '.'
0000000000210c83         db  0x00 ; '.'
0000000000210c84         db  0x00 ; '.'
0000000000210c85         db  0x00 ; '.'
0000000000210c86         db  0x00 ; '.'
0000000000210c87         db  0x00 ; '.'
0000000000210c88         db  0x06 ; '.'
0000000000210c89         db  0x00 ; '.'
0000000000210c8a         db  0x00 ; '.'
0000000000210c8b         db  0x00 ; '.'
0000000000210c8c         db  0x00 ; '.'
0000000000210c8d         db  0x00 ; '.'
0000000000210c8e         db  0x00 ; '.'
0000000000210c8f         db  0x00 ; '.'
0000000000210c90         db  0xe0 ; '.'
0000000000210c91         db  0x02 ; '.'
0000000000210c92         db  0x00 ; '.'
0000000000210c93         db  0x00 ; '.'
0000000000210c94         db  0x00 ; '.'
0000000000210c95         db  0x00 ; '.'
0000000000210c96         db  0x00 ; '.'
0000000000210c97         db  0x00 ; '.'
0000000000210c98         db  0x0a ; '.'
0000000000210c99         db  0x00 ; '.'
0000000000210c9a         db  0x00 ; '.'
0000000000210c9b         db  0x00 ; '.'
0000000000210c9c         db  0x00 ; '.'
0000000000210c9d         db  0x00 ; '.'
0000000000210c9e         db  0x00 ; '.'
0000000000210c9f         db  0x00 ; '.'
0000000000210ca0         db  0x3f ; '?'
0000000000210ca1         db  0x03 ; '.'
0000000000210ca2         db  0x00 ; '.'
0000000000210ca3         db  0x00 ; '.'
0000000000210ca4         db  0x00 ; '.'
0000000000210ca5         db  0x00 ; '.'
0000000000210ca6         db  0x00 ; '.'
0000000000210ca7         db  0x00 ; '.'
0000000000210ca8         db  0x0b ; '.'
0000000000210ca9         db  0x00 ; '.'
0000000000210caa         db  0x00 ; '.'
0000000000210cab         db  0x00 ; '.'
0000000000210cac         db  0x00 ; '.'
0000000000210cad         db  0x00 ; '.'
0000000000210cae         db  0x00 ; '.'
0000000000210caf         db  0x00 ; '.'
0000000000210cb0         db  0x18 ; '.'
0000000000210cb1         db  0x00 ; '.'
0000000000210cb2         db  0x00 ; '.'
0000000000210cb3         db  0x00 ; '.'
0000000000210cb4         db  0x00 ; '.'
0000000000210cb5         db  0x00 ; '.'
0000000000210cb6         db  0x00 ; '.'
0000000000210cb7         db  0x00 ; '.'
0000000000210cb8         db  0x15 ; '.'
0000000000210cb9         db  0x00 ; '.'
0000000000210cba         db  0x00 ; '.'
0000000000210cbb         db  0x00 ; '.'
0000000000210cbc         db  0x00 ; '.'
0000000000210cbd         db  0x00 ; '.'
0000000000210cbe         db  0x00 ; '.'
0000000000210cbf         db  0x00 ; '.'
0000000000210cc0         db  0x00 ; '.'
0000000000210cc1         db  0x00 ; '.'
0000000000210cc2         db  0x00 ; '.'
0000000000210cc3         db  0x00 ; '.'
0000000000210cc4         db  0x00 ; '.'
0000000000210cc5         db  0x00 ; '.'
0000000000210cc6         db  0x00 ; '.'
0000000000210cc7         db  0x00 ; '.'
0000000000210cc8         db  0x03 ; '.'
0000000000210cc9         db  0x00 ; '.'
0000000000210cca         db  0x00 ; '.'
0000000000210ccb         db  0x00 ; '.'
0000000000210ccc         db  0x00 ; '.'
0000000000210ccd         db  0x00 ; '.'
0000000000210cce         db  0x00 ; '.'
0000000000210ccf         db  0x00 ; '.'
0000000000210cd0         db  0xe8 ; '.'
0000000000210cd1         db  0x0d ; '.'
0000000000210cd2         db  0x21 ; '!'
0000000000210cd3         db  0x00 ; '.'
0000000000210cd4         db  0x00 ; '.'
0000000000210cd5         db  0x00 ; '.'
0000000000210cd6         db  0x00 ; '.'
0000000000210cd7         db  0x00 ; '.'
0000000000210cd8         db  0x02 ; '.'
0000000000210cd9         db  0x00 ; '.'
0000000000210cda         db  0x00 ; '.'
0000000000210cdb         db  0x00 ; '.'
0000000000210cdc         db  0x00 ; '.'
0000000000210cdd         db  0x00 ; '.'
0000000000210cde         db  0x00 ; '.'
0000000000210cdf         db  0x00 ; '.'
0000000000210ce0         db  0x88 ; '.'
0000000000210ce1         db  0x05 ; '.'
0000000000210ce2         db  0x00 ; '.'
0000000000210ce3         db  0x00 ; '.'
0000000000210ce4         db  0x00 ; '.'
0000000000210ce5         db  0x00 ; '.'
0000000000210ce6         db  0x00 ; '.'
0000000000210ce7         db  0x00 ; '.'
0000000000210ce8         db  0x14 ; '.'
0000000000210ce9         db  0x00 ; '.'
0000000000210cea         db  0x00 ; '.'
0000000000210ceb         db  0x00 ; '.'
0000000000210cec         db  0x00 ; '.'
0000000000210ced         db  0x00 ; '.'
0000000000210cee         db  0x00 ; '.'
0000000000210cef         db  0x00 ; '.'
0000000000210cf0         db  0x07 ; '.'
0000000000210cf1         db  0x00 ; '.'
0000000000210cf2         db  0x00 ; '.'
0000000000210cf3         db  0x00 ; '.'
0000000000210cf4         db  0x00 ; '.'
0000000000210cf5         db  0x00 ; '.'
0000000000210cf6         db  0x00 ; '.'
0000000000210cf7         db  0x00 ; '.'
0000000000210cf8         db  0x17 ; '.'
0000000000210cf9         db  0x00 ; '.'
0000000000210cfa         db  0x00 ; '.'
0000000000210cfb         db  0x00 ; '.'
0000000000210cfc         db  0x00 ; '.'
0000000000210cfd         db  0x00 ; '.'
0000000000210cfe         db  0x00 ; '.'
0000000000210cff         db  0x00 ; '.'
0000000000210d00         db  0x58 ; 'X'
0000000000210d01         db  0x1e ; '.'
0000000000210d02         db  0x00 ; '.'
0000000000210d03         db  0x00 ; '.'
0000000000210d04         db  0x00 ; '.'
0000000000210d05         db  0x00 ; '.'
0000000000210d06         db  0x00 ; '.'
0000000000210d07         db  0x00 ; '.'
0000000000210d08         db  0x07 ; '.'
0000000000210d09         db  0x00 ; '.'
0000000000210d0a         db  0x00 ; '.'
0000000000210d0b         db  0x00 ; '.'
0000000000210d0c         db  0x00 ; '.'
0000000000210d0d         db  0x00 ; '.'
0000000000210d0e         db  0x00 ; '.'
0000000000210d0f         db  0x00 ; '.'
0000000000210d10         db  0x08 ; '.'
0000000000210d11         db  0x0e ; '.'
0000000000210d12         db  0x00 ; '.'
0000000000210d13         db  0x00 ; '.'
0000000000210d14         db  0x00 ; '.'
0000000000210d15         db  0x00 ; '.'
0000000000210d16         db  0x00 ; '.'
0000000000210d17         db  0x00 ; '.'
0000000000210d18         db  0x08 ; '.'
0000000000210d19         db  0x00 ; '.'
0000000000210d1a         db  0x00 ; '.'
0000000000210d1b         db  0x00 ; '.'
0000000000210d1c         db  0x00 ; '.'
0000000000210d1d         db  0x00 ; '.'
0000000000210d1e         db  0x00 ; '.'
0000000000210d1f         db  0x00 ; '.'
0000000000210d20         db  0x50 ; 'P'
0000000000210d21         db  0x10 ; '.'
0000000000210d22         db  0x00 ; '.'
0000000000210d23         db  0x00 ; '.'
0000000000210d24         db  0x00 ; '.'
0000000000210d25         db  0x00 ; '.'
0000000000210d26         db  0x00 ; '.'
0000000000210d27         db  0x00 ; '.'
0000000000210d28         db  0x09 ; '.'
0000000000210d29         db  0x00 ; '.'
0000000000210d2a         db  0x00 ; '.'
0000000000210d2b         db  0x00 ; '.'
0000000000210d2c         db  0x00 ; '.'
0000000000210d2d         db  0x00 ; '.'
0000000000210d2e         db  0x00 ; '.'
0000000000210d2f         db  0x00 ; '.'
0000000000210d30         db  0x18 ; '.'
0000000000210d31         db  0x00 ; '.'
0000000000210d32         db  0x00 ; '.'
0000000000210d33         db  0x00 ; '.'
0000000000210d34         db  0x00 ; '.'
0000000000210d35         db  0x00 ; '.'
0000000000210d36         db  0x00 ; '.'
0000000000210d37         db  0x00 ; '.'
0000000000210d38         db  0x1e ; '.'
0000000000210d39         db  0x00 ; '.'
0000000000210d3a         db  0x00 ; '.'
0000000000210d3b         db  0x00 ; '.'
0000000000210d3c         db  0x00 ; '.'
0000000000210d3d         db  0x00 ; '.'
0000000000210d3e         db  0x00 ; '.'
0000000000210d3f         db  0x00 ; '.'
0000000000210d40         db  0x08 ; '.'
0000000000210d41         db  0x00 ; '.'
0000000000210d42         db  0x00 ; '.'
0000000000210d43         db  0x00 ; '.'
0000000000210d44         db  0x00 ; '.'
0000000000210d45         db  0x00 ; '.'
0000000000210d46         db  0x00 ; '.'
0000000000210d47         db  0x00 ; '.'
0000000000210d48         db  0xfb ; '.'
0000000000210d49         db  0xff ; '.'
0000000000210d4a         db  0xff ; '.'
0000000000210d4b         db  0x6f ; 'o'
0000000000210d4c         db  0x00 ; '.'
0000000000210d4d         db  0x00 ; '.'
0000000000210d4e         db  0x00 ; '.'
0000000000210d4f         db  0x00 ; '.'
0000000000210d50         db  0x01 ; '.'
0000000000210d51         db  0x00 ; '.'
0000000000210d52         db  0x00 ; '.'
0000000000210d53         db  0x08 ; '.'
0000000000210d54         db  0x00 ; '.'
0000000000210d55         db  0x00 ; '.'
0000000000210d56         db  0x00 ; '.'
0000000000210d57         db  0x00 ; '.'
0000000000210d58         db  0xfe ; '.'
0000000000210d59         db  0xff ; '.'
0000000000210d5a         db  0xff ; '.'
0000000000210d5b         db  0x6f ; 'o'
0000000000210d5c         db  0x00 ; '.'
0000000000210d5d         db  0x00 ; '.'
0000000000210d5e         db  0x00 ; '.'
0000000000210d5f         db  0x00 ; '.'
0000000000210d60         db  0xa8 ; '.'
0000000000210d61         db  0x0d ; '.'
0000000000210d62         db  0x00 ; '.'
0000000000210d63         db  0x00 ; '.'
0000000000210d64         db  0x00 ; '.'
0000000000210d65         db  0x00 ; '.'
0000000000210d66         db  0x00 ; '.'
0000000000210d67         db  0x00 ; '.'
0000000000210d68         db  0xff ; '.'
0000000000210d69         db  0xff ; '.'
0000000000210d6a         db  0xff ; '.'
0000000000210d6b         db  0x6f ; 'o'
0000000000210d6c         db  0x00 ; '.'
0000000000210d6d         db  0x00 ; '.'
0000000000210d6e         db  0x00 ; '.'
0000000000210d6f         db  0x00 ; '.'
0000000000210d70         db  0x01 ; '.'
0000000000210d71         db  0x00 ; '.'
0000000000210d72         db  0x00 ; '.'
0000000000210d73         db  0x00 ; '.'
0000000000210d74         db  0x00 ; '.'
0000000000210d75         db  0x00 ; '.'
0000000000210d76         db  0x00 ; '.'
0000000000210d77         db  0x00 ; '.'
0000000000210d78         db  0xf0 ; '.'
0000000000210d79         db  0xff ; '.'
0000000000210d7a         db  0xff ; '.'
0000000000210d7b         db  0x6f ; 'o'
0000000000210d7c         db  0x00 ; '.'
0000000000210d7d         db  0x00 ; '.'
0000000000210d7e         db  0x00 ; '.'
0000000000210d7f         db  0x00 ; '.'
0000000000210d80         db  0x10 ; '.'
0000000000210d81         db  0x0d ; '.'
0000000000210d82         db  0x00 ; '.'
0000000000210d83         db  0x00 ; '.'
0000000000210d84         db  0x00 ; '.'
0000000000210d85         db  0x00 ; '.'
0000000000210d86         db  0x00 ; '.'
0000000000210d87         db  0x00 ; '.'
0000000000210d88         db  0xf9 ; '.'
0000000000210d89         db  0xff ; '.'
0000000000210d8a         db  0xff ; '.'
0000000000210d8b         db  0x6f ; 'o'
0000000000210d8c         db  0x00 ; '.'
0000000000210d8d         db  0x00 ; '.'
0000000000210d8e         db  0x00 ; '.'
0000000000210d8f         db  0x00 ; '.'
0000000000210d90         db  0xa2 ; '.'
0000000000210d91         db  0x00 ; '.'
0000000000210d92         db  0x00 ; '.'
0000000000210d93         db  0x00 ; '.'
0000000000210d94         db  0x00 ; '.'
0000000000210d95         db  0x00 ; '.'
0000000000210d96         db  0x00 ; '.'
0000000000210d97         db  0x00 ; '.'
0000000000210d98         db  0x00 ; '.'
0000000000210d99         db  0x00 ; '.'
0000000000210d9a         db  0x00 ; '.'
0000000000210d9b         db  0x00 ; '.'
0000000000210d9c         db  0x00 ; '.'
0000000000210d9d         db  0x00 ; '.'
0000000000210d9e         db  0x00 ; '.'
0000000000210d9f         db  0x00 ; '.'
0000000000210da0         db  0x00 ; '.'
0000000000210da1         db  0x00 ; '.'
0000000000210da2         db  0x00 ; '.'
0000000000210da3         db  0x00 ; '.'
0000000000210da4         db  0x00 ; '.'
0000000000210da5         db  0x00 ; '.'
0000000000210da6         db  0x00 ; '.'
0000000000210da7         db  0x00 ; '.'
0000000000210da8         db  0x00 ; '.'
0000000000210da9         db  0x00 ; '.'
0000000000210daa         db  0x00 ; '.'
0000000000210dab         db  0x00 ; '.'
0000000000210dac         db  0x00 ; '.'
0000000000210dad         db  0x00 ; '.'
0000000000210dae         db  0x00 ; '.'
0000000000210daf         db  0x00 ; '.'
0000000000210db0         db  0x00 ; '.'
0000000000210db1         db  0x00 ; '.'
0000000000210db2         db  0x00 ; '.'
0000000000210db3         db  0x00 ; '.'
0000000000210db4         db  0x00 ; '.'
0000000000210db5         db  0x00 ; '.'
0000000000210db6         db  0x00 ; '.'
0000000000210db7         db  0x00 ; '.'
0000000000210db8         db  0x00 ; '.'
0000000000210db9         db  0x00 ; '.'
0000000000210dba         db  0x00 ; '.'
0000000000210dbb         db  0x00 ; '.'
0000000000210dbc         db  0x00 ; '.'
0000000000210dbd         db  0x00 ; '.'
0000000000210dbe         db  0x00 ; '.'
0000000000210dbf         db  0x00 ; '.'
0000000000210dc0         db  0x00 ; '.'
0000000000210dc1         db  0x00 ; '.'
0000000000210dc2         db  0x00 ; '.'
0000000000210dc3         db  0x00 ; '.'
0000000000210dc4         db  0x00 ; '.'
0000000000210dc5         db  0x00 ; '.'
0000000000210dc6         db  0x00 ; '.'
0000000000210dc7         db  0x00 ; '.'
0000000000210dc8         db  0x00 ; '.'
0000000000210dc9         db  0x00 ; '.'
0000000000210dca         db  0x00 ; '.'
0000000000210dcb         db  0x00 ; '.'
0000000000210dcc         db  0x00 ; '.'
0000000000210dcd         db  0x00 ; '.'
0000000000210dce         db  0x00 ; '.'
0000000000210dcf         db  0x00 ; '.'
0000000000210dd0         db  0x00 ; '.'
0000000000210dd1         db  0x00 ; '.'
0000000000210dd2         db  0x00 ; '.'
0000000000210dd3         db  0x00 ; '.'
0000000000210dd4         db  0x00 ; '.'
0000000000210dd5         db  0x00 ; '.'
0000000000210dd6         db  0x00 ; '.'
0000000000210dd7         db  0x00 ; '.'
0000000000210dd8         db  0x00 ; '.'
0000000000210dd9         db  0x00 ; '.'
0000000000210dda         db  0x00 ; '.'
0000000000210ddb         db  0x00 ; '.'
0000000000210ddc         db  0x00 ; '.'
0000000000210ddd         db  0x00 ; '.'
0000000000210dde         db  0x00 ; '.'
0000000000210ddf         db  0x00 ; '.'
0000000000210de0         db  0x00 ; '.'
0000000000210de1         db  0x00 ; '.'
0000000000210de2         db  0x00 ; '.'
0000000000210de3         db  0x00 ; '.'
0000000000210de4         db  0x00 ; '.'
0000000000210de5         db  0x00 ; '.'
0000000000210de6         db  0x00 ; '.'
0000000000210de7         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x210de8; 0x211000[ (536 bytes)
        ; File offset : [69096; 69632[ (536 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
0000000000210de8         db  0xf8 ; '.'
0000000000210de9         db  0x0b ; '.'
0000000000210dea         db  0x21 ; '!'
0000000000210deb         db  0x00 ; '.'
0000000000210dec         db  0x00 ; '.'
0000000000210ded         db  0x00 ; '.'
0000000000210dee         db  0x00 ; '.'
0000000000210def         db  0x00 ; '.'
                     qword_210df0:
0000000000210df0         dq         0x0000000000000000                          ; DATA XREF=0x2400
0000000000210df8         db  0x00 ; '.'                                         ; DATA XREF=0x2406
0000000000210df9         db  0x00 ; '.'
0000000000210dfa         db  0x00 ; '.'
0000000000210dfb         db  0x00 ; '.'
0000000000210dfc         db  0x00 ; '.'
0000000000210dfd         db  0x00 ; '.'
0000000000210dfe         db  0x00 ; '.'
0000000000210dff         db  0x00 ; '.'
                     getenv@GOT:        // getenv
0000000000210e00         dq         0x0000000000211370                          ; DATA XREF=j_getenv
                     __snprintf_chk@GOT:        // __snprintf_chk
0000000000210e08         dq         0x0000000000211378                          ; DATA XREF=j___snprintf_chk
                     free@GOT:        // free
0000000000210e10         dq         0x0000000000211380                          ; DATA XREF=j_free
                     abort@GOT:        // abort
0000000000210e18         dq         0x0000000000211388                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
0000000000210e20         dq         0x0000000000211390                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
0000000000210e28         dq         0x0000000000211398                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
0000000000210e30         dq         0x00000000002113a8                          ; DATA XREF=j__exit
                     __fpending@GOT:        // __fpending
0000000000210e38         dq         0x00000000002113b0                          ; DATA XREF=j___fpending
                     fcntl@GOT:        // fcntl
0000000000210e40         dq         0x00000000002113b8                          ; DATA XREF=j_fcntl
                     cfgetispeed@GOT:        // cfgetispeed
0000000000210e48         dq         0x00000000002113c0                          ; DATA XREF=j_cfgetispeed
                     textdomain@GOT:        // textdomain
0000000000210e50         dq         0x00000000002113c8                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
0000000000210e58         dq         0x00000000002113d0                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
0000000000210e60         dq         0x00000000002113d8                          ; DATA XREF=j_bindtextdomain
                     cfsetospeed@GOT:        // cfsetospeed
0000000000210e68         dq         0x00000000002113e0                          ; DATA XREF=j_cfsetospeed
                     dcgettext@GOT:        // dcgettext
0000000000210e70         dq         0x00000000002113e8                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
0000000000210e78         dq         0x00000000002113f0                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
0000000000210e80         dq         0x00000000002113f8                          ; DATA XREF=j_strlen
                     __stack_chk_fail@GOT:        // __stack_chk_fail
0000000000210e88         dq         0x0000000000211400                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
0000000000210e90         dq         0x0000000000211408                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
0000000000210e98         dq         0x0000000000211410                          ; DATA XREF=j_mbrtowc
                     dup2@GOT:        // dup2
0000000000210ea0         dq         0x0000000000211418                          ; DATA XREF=j_dup2
                     strchr@GOT:        // strchr
0000000000210ea8         dq         0x0000000000211420                          ; DATA XREF=j_strchr
                     __overflow@GOT:        // __overflow
0000000000210eb0         dq         0x0000000000211428                          ; DATA XREF=j___overflow
                     strrchr@GOT:        // strrchr
0000000000210eb8         dq         0x0000000000211430                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
0000000000210ec0         dq         0x0000000000211438                          ; DATA XREF=j_lseek
                     __assert_fail@GOT:        // __assert_fail
0000000000210ec8         dq         0x0000000000211440                          ; DATA XREF=j___assert_fail
                     __strtoul_internal@GOT:        // __strtoul_internal
0000000000210ed0         dq         0x0000000000211448                          ; DATA XREF=j___strtoul_internal
                     memset@GOT:        // memset
0000000000210ed8         dq         0x0000000000211450                          ; DATA XREF=j_memset
                     ioctl@GOT:        // ioctl
0000000000210ee0         dq         0x0000000000211458                          ; DATA XREF=j_ioctl
                     close@GOT:        // close
0000000000210ee8         dq         0x0000000000211460                          ; DATA XREF=j_close
                     memcmp@GOT:        // memcmp
0000000000210ef0         dq         0x0000000000211470                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
0000000000210ef8         dq         0x0000000000211478                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
0000000000210f00         dq         0x0000000000211480                          ; DATA XREF=j_calloc
                     strcmp@GOT:        // strcmp
0000000000210f08         dq         0x0000000000211488                          ; DATA XREF=j_strcmp
                     strtol@GOT:        // strtol
0000000000210f10         dq         0x0000000000211498                          ; DATA XREF=j_strtol
                     memcpy@GOT:        // memcpy
0000000000210f18         dq         0x00000000002114a0                          ; DATA XREF=j_memcpy
                     fileno@GOT:        // fileno
0000000000210f20         dq         0x00000000002114a8                          ; DATA XREF=j_fileno
                     malloc@GOT:        // malloc
0000000000210f28         dq         0x00000000002114b0                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
0000000000210f30         dq         0x00000000002114b8                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
0000000000210f38         dq         0x00000000002114c0                          ; DATA XREF=j_nl_langinfo
                     __freading@GOT:        // __freading
0000000000210f40         dq         0x00000000002114c8                          ; DATA XREF=j___freading
                     realloc@GOT:        // realloc
0000000000210f48         dq         0x00000000002114d0                          ; DATA XREF=j_realloc
                     setlocale@GOT:        // setlocale
0000000000210f50         dq         0x00000000002114d8                          ; DATA XREF=j_setlocale
                     cfgetospeed@GOT:        // cfgetospeed
0000000000210f58         dq         0x00000000002114e0                          ; DATA XREF=j_cfgetospeed
                     __printf_chk@GOT:        // __printf_chk
0000000000210f60         dq         0x00000000002114e8                          ; DATA XREF=j___printf_chk
                     error@GOT:        // error
0000000000210f68         dq         0x00000000002114f0                          ; DATA XREF=j_error
                     tcgetattr@GOT:        // tcgetattr
0000000000210f70         dq         0x00000000002114f8                          ; DATA XREF=j_tcgetattr
                     tcsetattr@GOT:        // tcsetattr
0000000000210f78         dq         0x0000000000211500                          ; DATA XREF=j_tcsetattr
                     open@GOT:        // open
0000000000210f80         dq         0x0000000000211508                          ; DATA XREF=j_open
                     fseeko@GOT:        // fseeko
0000000000210f88         dq         0x0000000000211510                          ; DATA XREF=j_fseeko
                     cfsetispeed@GOT:        // cfsetispeed
0000000000210f90         dq         0x0000000000211518                          ; DATA XREF=j_cfsetispeed
                     strtoul@GOT:        // strtoul
0000000000210f98         dq         0x0000000000211520                          ; DATA XREF=j_strtoul
                     __cxa_atexit@GOT:        // __cxa_atexit
0000000000210fa0         dq         0x0000000000211528                          ; DATA XREF=j___cxa_atexit
                     exit@GOT:        // exit
0000000000210fa8         dq         0x0000000000211530                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
0000000000210fb0         dq         0x0000000000211538                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
0000000000210fb8         dq         0x0000000000211540                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
0000000000210fc0         dq         0x0000000000211550                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
0000000000210fc8         dq         0x0000000000211558                          ; DATA XREF=j_iswprint
                     __ctype_b_loc@GOT:        // __ctype_b_loc
0000000000210fd0         dq         0x0000000000211568                          ; DATA XREF=j___ctype_b_loc
                     qword_210fd8:
0000000000210fd8         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
0000000000210fe0         db  0x00 ; '.'                                         ; DATA XREF=_start+36
0000000000210fe1         db  0x00 ; '.'
0000000000210fe2         db  0x00 ; '.'
0000000000210fe3         db  0x00 ; '.'
0000000000210fe4         db  0x00 ; '.'
0000000000210fe5         db  0x00 ; '.'
0000000000210fe6         db  0x00 ; '.'
0000000000210fe7         db  0x00 ; '.'
                     qword_210fe8:
0000000000210fe8         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_210ff0:
0000000000210ff0         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_210ff8:
0000000000210ff8         dq         0x0000000000000000                          ; DATA XREF=j_qword_210ff8, __do_global_dtors_aux+9


        ; Section .data
        ; Range: [0x211000; 0x2110a0[ (160 bytes)
        ; File offset : [69632; 69792[ (160 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

0000000000211000         align      8
                     __dso_handle:
0000000000211008         dq         0x0000000000211008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     tcsetattr_options:
0000000000211010         dd         0x00000001                                  ; DATA XREF=main+1569, usage+834, sub_4bd0+13
0000000000211014         align      8
                     Version:
0000000000211018         dq         0x000000000000dab7                          ; "8.31", DATA XREF=main+318
                     exit_failure:
0000000000211020         dd         0x00000001                                  ; DATA XREF=close_stdout+130, xalloc_die+23
0000000000211024         db  0x00 ; '.'
0000000000211025         db  0x00 ; '.'
0000000000211026         db  0x00 ; '.'
0000000000211027         db  0x00 ; '.'
0000000000211028         db  0x00 ; '.'
0000000000211029         db  0x00 ; '.'
000000000021102a         db  0x00 ; '.'
000000000021102b         db  0x00 ; '.'
000000000021102c         db  0x00 ; '.'
000000000021102d         db  0x00 ; '.'
000000000021102e         db  0x00 ; '.'
000000000021102f         db  0x00 ; '.'
0000000000211030         db  0x00 ; '.'
0000000000211031         db  0x00 ; '.'
0000000000211032         db  0x00 ; '.'
0000000000211033         db  0x00 ; '.'
0000000000211034         db  0x00 ; '.'
0000000000211035         db  0x00 ; '.'
0000000000211036         db  0x00 ; '.'
0000000000211037         db  0x00 ; '.'
0000000000211038         db  0x00 ; '.'
0000000000211039         db  0x00 ; '.'
000000000021103a         db  0x00 ; '.'
000000000021103b         db  0x00 ; '.'
000000000021103c         db  0x00 ; '.'
000000000021103d         db  0x00 ; '.'
000000000021103e         db  0x00 ; '.'
000000000021103f         db  0x00 ; '.'
                     quote_quoting_options:
0000000000211040         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
0000000000211041         db  0x00 ; '.'
0000000000211042         db  0x00 ; '.'
0000000000211043         db  0x00 ; '.'
0000000000211044         db  0x00 ; '.'
0000000000211045         db  0x00 ; '.'
0000000000211046         db  0x00 ; '.'
0000000000211047         db  0x00 ; '.'
0000000000211048         db  0x00 ; '.'
0000000000211049         db  0x00 ; '.'
000000000021104a         db  0x00 ; '.'
000000000021104b         db  0x00 ; '.'
000000000021104c         db  0x00 ; '.'
000000000021104d         db  0x00 ; '.'
000000000021104e         db  0x00 ; '.'
000000000021104f         db  0x00 ; '.'
0000000000211050         db  0x00 ; '.'
0000000000211051         db  0x00 ; '.'
0000000000211052         db  0x00 ; '.'
0000000000211053         db  0x00 ; '.'
0000000000211054         db  0x00 ; '.'
0000000000211055         db  0x00 ; '.'
0000000000211056         db  0x00 ; '.'
0000000000211057         db  0x00 ; '.'
0000000000211058         db  0x00 ; '.'
0000000000211059         db  0x00 ; '.'
000000000021105a         db  0x00 ; '.'
000000000021105b         db  0x00 ; '.'
000000000021105c         db  0x00 ; '.'
000000000021105d         db  0x00 ; '.'
000000000021105e         db  0x00 ; '.'
000000000021105f         db  0x00 ; '.'
0000000000211060         db  0x00 ; '.'
0000000000211061         db  0x00 ; '.'
0000000000211062         db  0x00 ; '.'
0000000000211063         db  0x00 ; '.'
0000000000211064         db  0x00 ; '.'
0000000000211065         db  0x00 ; '.'
0000000000211066         db  0x00 ; '.'
0000000000211067         db  0x00 ; '.'
0000000000211068         db  0x00 ; '.'
0000000000211069         db  0x00 ; '.'
000000000021106a         db  0x00 ; '.'
000000000021106b         db  0x00 ; '.'
000000000021106c         db  0x00 ; '.'
000000000021106d         db  0x00 ; '.'
000000000021106e         db  0x00 ; '.'
000000000021106f         db  0x00 ; '.'
0000000000211070         db  0x00 ; '.'
0000000000211071         db  0x00 ; '.'
0000000000211072         db  0x00 ; '.'
0000000000211073         db  0x00 ; '.'
0000000000211074         db  0x00 ; '.'
0000000000211075         db  0x00 ; '.'
0000000000211076         db  0x00 ; '.'
0000000000211077         db  0x00 ; '.'
                     nslots:
0000000000211078         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000021107c         db  0x00 ; '.'
000000000021107d         db  0x00 ; '.'
000000000021107e         db  0x00 ; '.'
000000000021107f         db  0x00 ; '.'
                     slotvec:
0000000000211080         dq         0x0000000000211090                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
0000000000211088         db  0x00 ; '.'
0000000000211089         db  0x00 ; '.'
000000000021108a         db  0x00 ; '.'
000000000021108b         db  0x00 ; '.'
000000000021108c         db  0x00 ; '.'
000000000021108d         db  0x00 ; '.'
000000000021108e         db  0x00 ; '.'
000000000021108f         db  0x00 ; '.'
                     slotvec0:
0000000000211090         dq         1.26481e-321, 1.0708e-317                   ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec


        ; Section .bss
        ; Range: [0x2110a0; 0x211360[ (704 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
00000000002110a0         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
00000000002110a1         db  0x00 ; '.'
00000000002110a2         db  0x00 ; '.'
00000000002110a3         db  0x00 ; '.'
00000000002110a4         db  0x00 ; '.'
00000000002110a5         db  0x00 ; '.'
00000000002110a6         db  0x00 ; '.'
00000000002110a7         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
00000000002110a8         db  0x00 ; '.'                                         ; DATA XREF=main+311, main+1012, main+1194, main+1297, main+1525, main+1787, main+1902, main+2098, main+2187, wrapf+187, wrapf+238
00000000002110a9         db  0x00 ; '.'
00000000002110aa         db  0x00 ; '.'
00000000002110ab         db  0x00 ; '.'
00000000002110ac         db  0x00 ; '.'
00000000002110ad         db  0x00 ; '.'
00000000002110ae         db  0x00 ; '.'
00000000002110af         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
00000000002110b0         db  0x00 ; '.'                                         ; DATA XREF=main+234, main+475
00000000002110b1         db  0x00 ; '.'
00000000002110b2         db  0x00 ; '.'
00000000002110b3         db  0x00 ; '.'
00000000002110b4         db  0x00 ; '.'
00000000002110b5         db  0x00 ; '.'
00000000002110b6         db  0x00 ; '.'
00000000002110b7         db  0x00 ; '.'
                     optarg@@GLIBC_2.2.5:
00000000002110b8         db  0x00 ; '.'                                         ; DATA XREF=main+377
00000000002110b9         db  0x00 ; '.'
00000000002110ba         db  0x00 ; '.'
00000000002110bb         db  0x00 ; '.'
00000000002110bc         db  0x00 ; '.'
00000000002110bd         db  0x00 ; '.'
00000000002110be         db  0x00 ; '.'
00000000002110bf         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
00000000002110c0         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
00000000002110c1         db  0x00 ; '.'
00000000002110c2         db  0x00 ; '.'
00000000002110c3         db  0x00 ; '.'
00000000002110c4         db  0x00 ; '.'
00000000002110c5         db  0x00 ; '.'
00000000002110c6         db  0x00 ; '.'
00000000002110c7         db  0x00 ; '.'
00000000002110c8         db  0x00 ; '.'
00000000002110c9         db  0x00 ; '.'
00000000002110ca         db  0x00 ; '.'
00000000002110cb         db  0x00 ; '.'
00000000002110cc         db  0x00 ; '.'
00000000002110cd         db  0x00 ; '.'
00000000002110ce         db  0x00 ; '.'
00000000002110cf         db  0x00 ; '.'
00000000002110d0         db  0x00 ; '.'
00000000002110d1         db  0x00 ; '.'
00000000002110d2         db  0x00 ; '.'
00000000002110d3         db  0x00 ; '.'
00000000002110d4         db  0x00 ; '.'
00000000002110d5         db  0x00 ; '.'
00000000002110d6         db  0x00 ; '.'
00000000002110d7         db  0x00 ; '.'
00000000002110d8         db  0x00 ; '.'
00000000002110d9         db  0x00 ; '.'
00000000002110da         db  0x00 ; '.'
00000000002110db         db  0x00 ; '.'
00000000002110dc         db  0x00 ; '.'
00000000002110dd         db  0x00 ; '.'
00000000002110de         db  0x00 ; '.'
00000000002110df         db  0x00 ; '.'
                     opterr@@GLIBC_2.2.5:
00000000002110e0         db  0x00 ; '.'                                         ; DATA XREF=main+118
00000000002110e1         db  0x00 ; '.'
00000000002110e2         db  0x00 ; '.'
00000000002110e3         db  0x00 ; '.'
00000000002110e4         db  0x00 ; '.'
00000000002110e5         db  0x00 ; '.'
00000000002110e6         db  0x00 ; '.'
00000000002110e7         db  0x00 ; '.'
00000000002110e8         db  0x00 ; '.'
00000000002110e9         db  0x00 ; '.'
00000000002110ea         db  0x00 ; '.'
00000000002110eb         db  0x00 ; '.'
00000000002110ec         db  0x00 ; '.'
00000000002110ed         db  0x00 ; '.'
00000000002110ee         db  0x00 ; '.'
00000000002110ef         db  0x00 ; '.'
00000000002110f0         db  0x00 ; '.'
00000000002110f1         db  0x00 ; '.'
00000000002110f2         db  0x00 ; '.'
00000000002110f3         db  0x00 ; '.'
00000000002110f4         db  0x00 ; '.'
00000000002110f5         db  0x00 ; '.'
00000000002110f6         db  0x00 ; '.'
00000000002110f7         db  0x00 ; '.'
00000000002110f8         db  0x00 ; '.'
00000000002110f9         db  0x00 ; '.'
00000000002110fa         db  0x00 ; '.'
00000000002110fb         db  0x00 ; '.'
00000000002110fc         db  0x00 ; '.'
00000000002110fd         db  0x00 ; '.'
00000000002110fe         db  0x00 ; '.'
00000000002110ff         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
0000000000211100         db  0x00 ; '.'                                         ; DATA XREF=usage+61, close_stdout+44, set_program_name+125
0000000000211101         db  0x00 ; '.'
0000000000211102         db  0x00 ; '.'
0000000000211103         db  0x00 ; '.'
0000000000211104         db  0x00 ; '.'
0000000000211105         db  0x00 ; '.'
0000000000211106         db  0x00 ; '.'
0000000000211107         db  0x00 ; '.'
                     completed.7697:
0000000000211108         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
0000000000211109         db  0x00 ; '.'
000000000021110a         db  0x00 ; '.'
000000000021110b         db  0x00 ; '.'
000000000021110c         db  0x00 ; '.'
000000000021110d         db  0x00 ; '.'
000000000021110e         db  0x00 ; '.'
000000000021110f         db  0x00 ; '.'
0000000000211110         db  0x00 ; '.'
0000000000211111         db  0x00 ; '.'
0000000000211112         db  0x00 ; '.'
0000000000211113         db  0x00 ; '.'
0000000000211114         db  0x00 ; '.'
0000000000211115         db  0x00 ; '.'
0000000000211116         db  0x00 ; '.'
0000000000211117         db  0x00 ; '.'
0000000000211118         db  0x00 ; '.'
0000000000211119         db  0x00 ; '.'
000000000021111a         db  0x00 ; '.'
000000000021111b         db  0x00 ; '.'
000000000021111c         db  0x00 ; '.'
000000000021111d         db  0x00 ; '.'
000000000021111e         db  0x00 ; '.'
000000000021111f         db  0x00 ; '.'
                     buf.7417:
0000000000211120         db  0x00 ; '.'                                         ; DATA XREF=visible.part.0+19, visible.part.0+29, visible.part.0+50, visible.part.0+67, visible.part.0+95, visible.part.0+148
                     byte_211121:
0000000000211121         db  0x00 ; '.'                                         ; DATA XREF=visible.part.0+12, visible.part.0+57
                     byte_211122:
0000000000211122         db  0x00 ; '.'                                         ; DATA XREF=visible.part.0+43, visible.part.0+120, visible.part.0+141, visible.part.0+163, visible.part.0+197
                     byte_211123:
0000000000211123         db  0x00 ; '.'                                         ; DATA XREF=visible.part.0+113, visible.part.0+177
0000000000211124         db  0x00 ; '.'                                         ; DATA XREF=visible.part.0+170, visible.part.0+204
0000000000211125         db  0x00 ; '.'
0000000000211126         db  0x00 ; '.'
0000000000211127         db  0x00 ; '.'
0000000000211128         db  0x00 ; '.'
0000000000211129         db  0x00 ; '.'
000000000021112a         db  0x00 ; '.'
000000000021112b         db  0x00 ; '.'
000000000021112c         db  0x00 ; '.'
000000000021112d         db  0x00 ; '.'
000000000021112e         db  0x00 ; '.'
000000000021112f         db  0x00 ; '.'
0000000000211130         db  0x00 ; '.'
0000000000211131         db  0x00 ; '.'
0000000000211132         db  0x00 ; '.'
0000000000211133         db  0x00 ; '.'
0000000000211134         db  0x00 ; '.'
0000000000211135         db  0x00 ; '.'
0000000000211136         db  0x00 ; '.'
0000000000211137         db  0x00 ; '.'
0000000000211138         db  0x00 ; '.'
0000000000211139         db  0x00 ; '.'
000000000021113a         db  0x00 ; '.'
000000000021113b         db  0x00 ; '.'
000000000021113c         db  0x00 ; '.'
000000000021113d         db  0x00 ; '.'
000000000021113e         db  0x00 ; '.'
000000000021113f         db  0x00 ; '.'
                     new_mode.7231:
0000000000211140         db  0x00 ; '.'                                         ; DATA XREF=main+1597, main+1619, main+1668
0000000000211141         db  0x00 ; '.'
0000000000211142         db  0x00 ; '.'
0000000000211143         db  0x00 ; '.'
0000000000211144         db  0x00 ; '.'
0000000000211145         db  0x00 ; '.'
0000000000211146         db  0x00 ; '.'
0000000000211147         db  0x00 ; '.'
                     dword_211148:
0000000000211148         db  0x00 ; '.'                                         ; DATA XREF=main+1651
0000000000211149         db  0x00 ; '.'
000000000021114a         db  0x00 ; '.'
000000000021114b         db  0x00 ; '.'
000000000021114c         db  0x00 ; '.'
000000000021114d         db  0x00 ; '.'
000000000021114e         db  0x00 ; '.'
000000000021114f         db  0x00 ; '.'
0000000000211150         db  0x00 ; '.'
0000000000211151         db  0x00 ; '.'
0000000000211152         db  0x00 ; '.'
0000000000211153         db  0x00 ; '.'
0000000000211154         db  0x00 ; '.'
0000000000211155         db  0x00 ; '.'
0000000000211156         db  0x00 ; '.'
0000000000211157         db  0x00 ; '.'
0000000000211158         db  0x00 ; '.'
0000000000211159         db  0x00 ; '.'
000000000021115a         db  0x00 ; '.'
000000000021115b         db  0x00 ; '.'
000000000021115c         db  0x00 ; '.'
000000000021115d         db  0x00 ; '.'
000000000021115e         db  0x00 ; '.'
000000000021115f         db  0x00 ; '.'
0000000000211160         db  0x00 ; '.'
0000000000211161         db  0x00 ; '.'
0000000000211162         db  0x00 ; '.'
0000000000211163         db  0x00 ; '.'
0000000000211164         db  0x00 ; '.'
0000000000211165         db  0x00 ; '.'
0000000000211166         db  0x00 ; '.'
0000000000211167         db  0x00 ; '.'
0000000000211168         db  0x00 ; '.'
0000000000211169         db  0x00 ; '.'
000000000021116a         db  0x00 ; '.'
000000000021116b         db  0x00 ; '.'
000000000021116c         db  0x00 ; '.'
000000000021116d         db  0x00 ; '.'
000000000021116e         db  0x00 ; '.'
000000000021116f         db  0x00 ; '.'
0000000000211170         db  0x00 ; '.'
0000000000211171         db  0x00 ; '.'
0000000000211172         db  0x00 ; '.'
0000000000211173         db  0x00 ; '.'
0000000000211174         db  0x00 ; '.'
0000000000211175         db  0x00 ; '.'
0000000000211176         db  0x00 ; '.'
0000000000211177         db  0x00 ; '.'
0000000000211178         db  0x00 ; '.'
0000000000211179         db  0x00 ; '.'
000000000021117a         db  0x00 ; '.'
000000000021117b         db  0x00 ; '.'
000000000021117c         db  0x00 ; '.'
000000000021117d         db  0x00 ; '.'
000000000021117e         db  0x00 ; '.'
000000000021117f         db  0x00 ; '.'
                     mode.7192:
0000000000211180         db  0x00 ; '.'                                         ; DATA XREF=main+689, main+756, main+863, main+974, main+1074, main+1350, main+1440, main+1575, main+1626, main+1675, main+1851
0000000000211181         db  0x00 ; '.'
0000000000211182         db  0x00 ; '.'
0000000000211183         db  0x00 ; '.'
                     dword_211184:
0000000000211184         db  0x00 ; '.'                                         ; DATA XREF=main+1434
0000000000211185         db  0x00 ; '.'
0000000000211186         db  0x00 ; '.'
0000000000211187         db  0x00 ; '.'
                     dword_211188:
0000000000211188         db  0x00 ; '.'                                         ; DATA XREF=main+1460
0000000000211189         db  0x00 ; '.'
000000000021118a         db  0x00 ; '.'
000000000021118b         db  0x00 ; '.'
                     dword_21118c:
000000000021118c         db  0x00 ; '.'                                         ; DATA XREF=main+1176, main+1453
000000000021118d         db  0x00 ; '.'
000000000021118e         db  0x00 ; '.'
000000000021118f         db  0x00 ; '.'
                     byte_211190:
0000000000211190         db  0x00 ; '.'                                         ; DATA XREF=main+991, main+1881
0000000000211191         db  0x00 ; '.'                                         ; DATA XREF=main+1467
0000000000211192         db  0x00 ; '.'
0000000000211193         db  0x00 ; '.'
0000000000211194         db  0x00 ; '.'
0000000000211195         db  0x00 ; '.'
                     byte_211196:
0000000000211196         db  0x00 ; '.'                                         ; DATA XREF=main+2063, main+2411
                     byte_211197:
0000000000211197         db  0x00 ; '.'                                         ; DATA XREF=main+2070, main+2418
0000000000211198         db  0x00 ; '.'
0000000000211199         db  0x00 ; '.'
000000000021119a         db  0x00 ; '.'
000000000021119b         db  0x00 ; '.'
000000000021119c         db  0x00 ; '.'
000000000021119d         db  0x00 ; '.'
000000000021119e         db  0x00 ; '.'
000000000021119f         db  0x00 ; '.'
00000000002111a0         db  0x00 ; '.'
00000000002111a1         db  0x00 ; '.'
00000000002111a2         db  0x00 ; '.'
00000000002111a3         db  0x00 ; '.'
00000000002111a4         db  0x00 ; '.'
00000000002111a5         db  0x00 ; '.'
00000000002111a6         db  0x00 ; '.'
00000000002111a7         db  0x00 ; '.'
00000000002111a8         db  0x00 ; '.'
00000000002111a9         db  0x00 ; '.'
00000000002111aa         db  0x00 ; '.'
00000000002111ab         db  0x00 ; '.'
00000000002111ac         db  0x00 ; '.'
00000000002111ad         db  0x00 ; '.'
00000000002111ae         db  0x00 ; '.'
00000000002111af         db  0x00 ; '.'
00000000002111b0         db  0x00 ; '.'
00000000002111b1         db  0x00 ; '.'
00000000002111b2         db  0x00 ; '.'
00000000002111b3         db  0x00 ; '.'
00000000002111b4         db  0x00 ; '.'
00000000002111b5         db  0x00 ; '.'
00000000002111b6         db  0x00 ; '.'
00000000002111b7         db  0x00 ; '.'
00000000002111b8         db  0x00 ; '.'
00000000002111b9         db  0x00 ; '.'
00000000002111ba         db  0x00 ; '.'
00000000002111bb         db  0x00 ; '.'
00000000002111bc         db  0x00 ; '.'
00000000002111bd         db  0x00 ; '.'
00000000002111be         db  0x00 ; '.'
00000000002111bf         db  0x00 ; '.'
                     check_mode.7223:
00000000002111c0         db  0x00 ; '.'                                         ; DATA XREF=main+575, main+2351
00000000002111c1         db  0x00 ; '.'
00000000002111c2         db  0x00 ; '.'
00000000002111c3         db  0x00 ; '.'
00000000002111c4         db  0x00 ; '.'
00000000002111c5         db  0x00 ; '.'
00000000002111c6         db  0x00 ; '.'
00000000002111c7         db  0x00 ; '.'
00000000002111c8         db  0x00 ; '.'
00000000002111c9         db  0x00 ; '.'
00000000002111ca         db  0x00 ; '.'
00000000002111cb         db  0x00 ; '.'
00000000002111cc         db  0x00 ; '.'
00000000002111cd         db  0x00 ; '.'
00000000002111ce         db  0x00 ; '.'
00000000002111cf         db  0x00 ; '.'
00000000002111d0         db  0x00 ; '.'
00000000002111d1         db  0x00 ; '.'
00000000002111d2         db  0x00 ; '.'
00000000002111d3         db  0x00 ; '.'
00000000002111d4         db  0x00 ; '.'
00000000002111d5         db  0x00 ; '.'
00000000002111d6         db  0x00 ; '.'
00000000002111d7         db  0x00 ; '.'
00000000002111d8         db  0x00 ; '.'
00000000002111d9         db  0x00 ; '.'
00000000002111da         db  0x00 ; '.'
00000000002111db         db  0x00 ; '.'
00000000002111dc         db  0x00 ; '.'
00000000002111dd         db  0x00 ; '.'
00000000002111de         db  0x00 ; '.'
00000000002111df         db  0x00 ; '.'
00000000002111e0         db  0x00 ; '.'
00000000002111e1         db  0x00 ; '.'
00000000002111e2         db  0x00 ; '.'
00000000002111e3         db  0x00 ; '.'
00000000002111e4         db  0x00 ; '.'
00000000002111e5         db  0x00 ; '.'
00000000002111e6         db  0x00 ; '.'
00000000002111e7         db  0x00 ; '.'
00000000002111e8         db  0x00 ; '.'
00000000002111e9         db  0x00 ; '.'
00000000002111ea         db  0x00 ; '.'
00000000002111eb         db  0x00 ; '.'
00000000002111ec         db  0x00 ; '.'
00000000002111ed         db  0x00 ; '.'
00000000002111ee         db  0x00 ; '.'
00000000002111ef         db  0x00 ; '.'
00000000002111f0         db  0x00 ; '.'
00000000002111f1         db  0x00 ; '.'
00000000002111f2         db  0x00 ; '.'
00000000002111f3         db  0x00 ; '.'
00000000002111f4         db  0x00 ; '.'
00000000002111f5         db  0x00 ; '.'
00000000002111f6         db  0x00 ; '.'
00000000002111f7         db  0x00 ; '.'
00000000002111f8         db  0x00 ; '.'
00000000002111f9         db  0x00 ; '.'
00000000002111fa         db  0x00 ; '.'
00000000002111fb         db  0x00 ; '.'
                     current_col:
00000000002111fc         db  0x00 ; '.'                                         ; DATA XREF=main+946, main+1044, main+1226, main+1329, main+1819, main+1934, main+2089, main+2130, main+2225, wrapf+181, wrapf+245
00000000002111fd         db  0x00 ; '.'
00000000002111fe         db  0x00 ; '.'
00000000002111ff         db  0x00 ; '.'
                     max_col:
0000000000211200         db  0x00 ; '.'                                         ; DATA XREF=main+936, wrapf+198, sub_4bd0+1651, sub_4bd0+1857
0000000000211201         db  0x00 ; '.'
0000000000211202         db  0x00 ; '.'
0000000000211203         db  0x00 ; '.'
0000000000211204         db  0x00 ; '.'
0000000000211205         db  0x00 ; '.'
0000000000211206         db  0x00 ; '.'
0000000000211207         db  0x00 ; '.'
                     ignore_EPIPE:
0000000000211208         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
0000000000211209         db  0x00 ; '.'
000000000021120a         db  0x00 ; '.'
000000000021120b         db  0x00 ; '.'
000000000021120c         db  0x00 ; '.'
000000000021120d         db  0x00 ; '.'
000000000021120e         db  0x00 ; '.'
000000000021120f         db  0x00 ; '.'
                     file_name:
0000000000211210         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
0000000000211211         db  0x00 ; '.'
0000000000211212         db  0x00 ; '.'
0000000000211213         db  0x00 ; '.'
0000000000211214         db  0x00 ; '.'
0000000000211215         db  0x00 ; '.'
0000000000211216         db  0x00 ; '.'
0000000000211217         db  0x00 ; '.'
                     program_name:
0000000000211218         db  0x00 ; '.'                                         ; DATA XREF=usage+20, set_program_name+109
0000000000211219         db  0x00 ; '.'
000000000021121a         db  0x00 ; '.'
000000000021121b         db  0x00 ; '.'
000000000021121c         db  0x00 ; '.'
000000000021121d         db  0x00 ; '.'
000000000021121e         db  0x00 ; '.'
000000000021121f         db  0x00 ; '.'
                     slot0:
0000000000211220         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
0000000000211221         db  0x00 ; '.'
0000000000211222         db  0x00 ; '.'
0000000000211223         db  0x00 ; '.'
0000000000211224         db  0x00 ; '.'
0000000000211225         db  0x00 ; '.'
0000000000211226         db  0x00 ; '.'
0000000000211227         db  0x00 ; '.'
0000000000211228         db  0x00 ; '.'
0000000000211229         db  0x00 ; '.'
000000000021122a         db  0x00 ; '.'
000000000021122b         db  0x00 ; '.'
000000000021122c         db  0x00 ; '.'
000000000021122d         db  0x00 ; '.'
000000000021122e         db  0x00 ; '.'
000000000021122f         db  0x00 ; '.'
0000000000211230         db  0x00 ; '.'
0000000000211231         db  0x00 ; '.'
0000000000211232         db  0x00 ; '.'
0000000000211233         db  0x00 ; '.'
0000000000211234         db  0x00 ; '.'
0000000000211235         db  0x00 ; '.'
0000000000211236         db  0x00 ; '.'
0000000000211237         db  0x00 ; '.'
0000000000211238         db  0x00 ; '.'
0000000000211239         db  0x00 ; '.'
000000000021123a         db  0x00 ; '.'
000000000021123b         db  0x00 ; '.'
000000000021123c         db  0x00 ; '.'
000000000021123d         db  0x00 ; '.'
000000000021123e         db  0x00 ; '.'
000000000021123f         db  0x00 ; '.'
0000000000211240         db  0x00 ; '.'
0000000000211241         db  0x00 ; '.'
0000000000211242         db  0x00 ; '.'
0000000000211243         db  0x00 ; '.'
0000000000211244         db  0x00 ; '.'
0000000000211245         db  0x00 ; '.'
0000000000211246         db  0x00 ; '.'
0000000000211247         db  0x00 ; '.'
0000000000211248         db  0x00 ; '.'
0000000000211249         db  0x00 ; '.'
000000000021124a         db  0x00 ; '.'
000000000021124b         db  0x00 ; '.'
000000000021124c         db  0x00 ; '.'
000000000021124d         db  0x00 ; '.'
000000000021124e         db  0x00 ; '.'
000000000021124f         db  0x00 ; '.'
0000000000211250         db  0x00 ; '.'
0000000000211251         db  0x00 ; '.'
0000000000211252         db  0x00 ; '.'
0000000000211253         db  0x00 ; '.'
0000000000211254         db  0x00 ; '.'
0000000000211255         db  0x00 ; '.'
0000000000211256         db  0x00 ; '.'
0000000000211257         db  0x00 ; '.'
0000000000211258         db  0x00 ; '.'
0000000000211259         db  0x00 ; '.'
000000000021125a         db  0x00 ; '.'
000000000021125b         db  0x00 ; '.'
000000000021125c         db  0x00 ; '.'
000000000021125d         db  0x00 ; '.'
000000000021125e         db  0x00 ; '.'
000000000021125f         db  0x00 ; '.'
0000000000211260         db  0x00 ; '.'
0000000000211261         db  0x00 ; '.'
0000000000211262         db  0x00 ; '.'
0000000000211263         db  0x00 ; '.'
0000000000211264         db  0x00 ; '.'
0000000000211265         db  0x00 ; '.'
0000000000211266         db  0x00 ; '.'
0000000000211267         db  0x00 ; '.'
0000000000211268         db  0x00 ; '.'
0000000000211269         db  0x00 ; '.'
000000000021126a         db  0x00 ; '.'
000000000021126b         db  0x00 ; '.'
000000000021126c         db  0x00 ; '.'
000000000021126d         db  0x00 ; '.'
000000000021126e         db  0x00 ; '.'
000000000021126f         db  0x00 ; '.'
0000000000211270         db  0x00 ; '.'
0000000000211271         db  0x00 ; '.'
0000000000211272         db  0x00 ; '.'
0000000000211273         db  0x00 ; '.'
0000000000211274         db  0x00 ; '.'
0000000000211275         db  0x00 ; '.'
0000000000211276         db  0x00 ; '.'
0000000000211277         db  0x00 ; '.'
0000000000211278         db  0x00 ; '.'
0000000000211279         db  0x00 ; '.'
000000000021127a         db  0x00 ; '.'
000000000021127b         db  0x00 ; '.'
000000000021127c         db  0x00 ; '.'
000000000021127d         db  0x00 ; '.'
000000000021127e         db  0x00 ; '.'
000000000021127f         db  0x00 ; '.'
0000000000211280         db  0x00 ; '.'
0000000000211281         db  0x00 ; '.'
0000000000211282         db  0x00 ; '.'
0000000000211283         db  0x00 ; '.'
0000000000211284         db  0x00 ; '.'
0000000000211285         db  0x00 ; '.'
0000000000211286         db  0x00 ; '.'
0000000000211287         db  0x00 ; '.'
0000000000211288         db  0x00 ; '.'
0000000000211289         db  0x00 ; '.'
000000000021128a         db  0x00 ; '.'
000000000021128b         db  0x00 ; '.'
000000000021128c         db  0x00 ; '.'
000000000021128d         db  0x00 ; '.'
000000000021128e         db  0x00 ; '.'
000000000021128f         db  0x00 ; '.'
0000000000211290         db  0x00 ; '.'
0000000000211291         db  0x00 ; '.'
0000000000211292         db  0x00 ; '.'
0000000000211293         db  0x00 ; '.'
0000000000211294         db  0x00 ; '.'
0000000000211295         db  0x00 ; '.'
0000000000211296         db  0x00 ; '.'
0000000000211297         db  0x00 ; '.'
0000000000211298         db  0x00 ; '.'
0000000000211299         db  0x00 ; '.'
000000000021129a         db  0x00 ; '.'
000000000021129b         db  0x00 ; '.'
000000000021129c         db  0x00 ; '.'
000000000021129d         db  0x00 ; '.'
000000000021129e         db  0x00 ; '.'
000000000021129f         db  0x00 ; '.'
00000000002112a0         db  0x00 ; '.'
00000000002112a1         db  0x00 ; '.'
00000000002112a2         db  0x00 ; '.'
00000000002112a3         db  0x00 ; '.'
00000000002112a4         db  0x00 ; '.'
00000000002112a5         db  0x00 ; '.'
00000000002112a6         db  0x00 ; '.'
00000000002112a7         db  0x00 ; '.'
00000000002112a8         db  0x00 ; '.'
00000000002112a9         db  0x00 ; '.'
00000000002112aa         db  0x00 ; '.'
00000000002112ab         db  0x00 ; '.'
00000000002112ac         db  0x00 ; '.'
00000000002112ad         db  0x00 ; '.'
00000000002112ae         db  0x00 ; '.'
00000000002112af         db  0x00 ; '.'
00000000002112b0         db  0x00 ; '.'
00000000002112b1         db  0x00 ; '.'
00000000002112b2         db  0x00 ; '.'
00000000002112b3         db  0x00 ; '.'
00000000002112b4         db  0x00 ; '.'
00000000002112b5         db  0x00 ; '.'
00000000002112b6         db  0x00 ; '.'
00000000002112b7         db  0x00 ; '.'
00000000002112b8         db  0x00 ; '.'
00000000002112b9         db  0x00 ; '.'
00000000002112ba         db  0x00 ; '.'
00000000002112bb         db  0x00 ; '.'
00000000002112bc         db  0x00 ; '.'
00000000002112bd         db  0x00 ; '.'
00000000002112be         db  0x00 ; '.'
00000000002112bf         db  0x00 ; '.'
00000000002112c0         db  0x00 ; '.'
00000000002112c1         db  0x00 ; '.'
00000000002112c2         db  0x00 ; '.'
00000000002112c3         db  0x00 ; '.'
00000000002112c4         db  0x00 ; '.'
00000000002112c5         db  0x00 ; '.'
00000000002112c6         db  0x00 ; '.'
00000000002112c7         db  0x00 ; '.'
00000000002112c8         db  0x00 ; '.'
00000000002112c9         db  0x00 ; '.'
00000000002112ca         db  0x00 ; '.'
00000000002112cb         db  0x00 ; '.'
00000000002112cc         db  0x00 ; '.'
00000000002112cd         db  0x00 ; '.'
00000000002112ce         db  0x00 ; '.'
00000000002112cf         db  0x00 ; '.'
00000000002112d0         db  0x00 ; '.'
00000000002112d1         db  0x00 ; '.'
00000000002112d2         db  0x00 ; '.'
00000000002112d3         db  0x00 ; '.'
00000000002112d4         db  0x00 ; '.'
00000000002112d5         db  0x00 ; '.'
00000000002112d6         db  0x00 ; '.'
00000000002112d7         db  0x00 ; '.'
00000000002112d8         db  0x00 ; '.'
00000000002112d9         db  0x00 ; '.'
00000000002112da         db  0x00 ; '.'
00000000002112db         db  0x00 ; '.'
00000000002112dc         db  0x00 ; '.'
00000000002112dd         db  0x00 ; '.'
00000000002112de         db  0x00 ; '.'
00000000002112df         db  0x00 ; '.'
00000000002112e0         db  0x00 ; '.'
00000000002112e1         db  0x00 ; '.'
00000000002112e2         db  0x00 ; '.'
00000000002112e3         db  0x00 ; '.'
00000000002112e4         db  0x00 ; '.'
00000000002112e5         db  0x00 ; '.'
00000000002112e6         db  0x00 ; '.'
00000000002112e7         db  0x00 ; '.'
00000000002112e8         db  0x00 ; '.'
00000000002112e9         db  0x00 ; '.'
00000000002112ea         db  0x00 ; '.'
00000000002112eb         db  0x00 ; '.'
00000000002112ec         db  0x00 ; '.'
00000000002112ed         db  0x00 ; '.'
00000000002112ee         db  0x00 ; '.'
00000000002112ef         db  0x00 ; '.'
00000000002112f0         db  0x00 ; '.'
00000000002112f1         db  0x00 ; '.'
00000000002112f2         db  0x00 ; '.'
00000000002112f3         db  0x00 ; '.'
00000000002112f4         db  0x00 ; '.'
00000000002112f5         db  0x00 ; '.'
00000000002112f6         db  0x00 ; '.'
00000000002112f7         db  0x00 ; '.'
00000000002112f8         db  0x00 ; '.'
00000000002112f9         db  0x00 ; '.'
00000000002112fa         db  0x00 ; '.'
00000000002112fb         db  0x00 ; '.'
00000000002112fc         db  0x00 ; '.'
00000000002112fd         db  0x00 ; '.'
00000000002112fe         db  0x00 ; '.'
00000000002112ff         db  0x00 ; '.'
0000000000211300         db  0x00 ; '.'
0000000000211301         db  0x00 ; '.'
0000000000211302         db  0x00 ; '.'
0000000000211303         db  0x00 ; '.'
0000000000211304         db  0x00 ; '.'
0000000000211305         db  0x00 ; '.'
0000000000211306         db  0x00 ; '.'
0000000000211307         db  0x00 ; '.'
0000000000211308         db  0x00 ; '.'
0000000000211309         db  0x00 ; '.'
000000000021130a         db  0x00 ; '.'
000000000021130b         db  0x00 ; '.'
000000000021130c         db  0x00 ; '.'
000000000021130d         db  0x00 ; '.'
000000000021130e         db  0x00 ; '.'
000000000021130f         db  0x00 ; '.'
0000000000211310         db  0x00 ; '.'
0000000000211311         db  0x00 ; '.'
0000000000211312         db  0x00 ; '.'
0000000000211313         db  0x00 ; '.'
0000000000211314         db  0x00 ; '.'
0000000000211315         db  0x00 ; '.'
0000000000211316         db  0x00 ; '.'
0000000000211317         db  0x00 ; '.'
0000000000211318         db  0x00 ; '.'
0000000000211319         db  0x00 ; '.'
000000000021131a         db  0x00 ; '.'
000000000021131b         db  0x00 ; '.'
000000000021131c         db  0x00 ; '.'
000000000021131d         db  0x00 ; '.'
000000000021131e         db  0x00 ; '.'
000000000021131f         db  0x00 ; '.'
                     default_quoting_options:
0000000000211320         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
0000000000211321         db  0x00 ; '.'
0000000000211322         db  0x00 ; '.'
0000000000211323         db  0x00 ; '.'
0000000000211324         db  0x00 ; '.'
0000000000211325         db  0x00 ; '.'
0000000000211326         db  0x00 ; '.'
0000000000211327         db  0x00 ; '.'
0000000000211328         db  0x00 ; '.'
0000000000211329         db  0x00 ; '.'
000000000021132a         db  0x00 ; '.'
000000000021132b         db  0x00 ; '.'
000000000021132c         db  0x00 ; '.'
000000000021132d         db  0x00 ; '.'
000000000021132e         db  0x00 ; '.'
000000000021132f         db  0x00 ; '.'
0000000000211330         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
0000000000211331         db  0x00 ; '.'
0000000000211332         db  0x00 ; '.'
0000000000211333         db  0x00 ; '.'
0000000000211334         db  0x00 ; '.'
0000000000211335         db  0x00 ; '.'
0000000000211336         db  0x00 ; '.'
0000000000211337         db  0x00 ; '.'
0000000000211338         db  0x00 ; '.'
0000000000211339         db  0x00 ; '.'
000000000021133a         db  0x00 ; '.'
000000000021133b         db  0x00 ; '.'
000000000021133c         db  0x00 ; '.'
000000000021133d         db  0x00 ; '.'
000000000021133e         db  0x00 ; '.'
000000000021133f         db  0x00 ; '.'
0000000000211340         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
0000000000211341         db  0x00 ; '.'
0000000000211342         db  0x00 ; '.'
0000000000211343         db  0x00 ; '.'
0000000000211344         db  0x00 ; '.'
0000000000211345         db  0x00 ; '.'
0000000000211346         db  0x00 ; '.'
0000000000211347         db  0x00 ; '.'
0000000000211348         db  0x00 ; '.'
0000000000211349         db  0x00 ; '.'
000000000021134a         db  0x00 ; '.'
000000000021134b         db  0x00 ; '.'
000000000021134c         db  0x00 ; '.'
000000000021134d         db  0x00 ; '.'
000000000021134e         db  0x00 ; '.'
000000000021134f         db  0x00 ; '.'
                     qword_211350:
0000000000211350         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
0000000000211351         db  0x00 ; '.'
0000000000211352         db  0x00 ; '.'
0000000000211353         db  0x00 ; '.'
0000000000211354         db  0x00 ; '.'
0000000000211355         db  0x00 ; '.'
0000000000211356         db  0x00 ; '.'
0000000000211357         db  0x00 ; '.'
                     have_dupfd_cloexec.3326:
0000000000211358         db  0x00 ; '.'                                         ; DATA XREF=rpl_fcntl+94, rpl_fcntl+143, rpl_fcntl+438, rpl_fcntl+574
0000000000211359         db  0x00 ; '.'
000000000021135a         db  0x00 ; '.'
000000000021135b         db  0x00 ; '.'
000000000021135c         db  0x00 ; '.'
000000000021135d         db  0x00 ; '.'
000000000021135e         db  0x00 ; '.'
000000000021135f         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x211370; 0x211770[ (1024 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x211370; 0x422ae0[ (2168688 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     getenv:
0000000000211370         extern function code                                   ; DATA XREF=getenv@GOT
                     __snprintf_chk:
0000000000211378         extern function code                                   ; DATA XREF=__snprintf_chk@GOT
                     free:
0000000000211380         extern function code                                   ; DATA XREF=free@GOT
                     abort:
0000000000211388         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
0000000000211390         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
0000000000211398         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
00000000002113a0         extern function code
                     _exit:
00000000002113a8         extern function code                                   ; DATA XREF=_exit@GOT
                     __fpending:
00000000002113b0         extern function code                                   ; DATA XREF=__fpending@GOT
                     fcntl:
00000000002113b8         extern function code                                   ; DATA XREF=fcntl@GOT
                     cfgetispeed:
00000000002113c0         extern function code                                   ; DATA XREF=cfgetispeed@GOT
                     textdomain:
00000000002113c8         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
00000000002113d0         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
00000000002113d8         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     cfsetospeed:
00000000002113e0         extern function code                                   ; DATA XREF=cfsetospeed@GOT
                     dcgettext:
00000000002113e8         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
00000000002113f0         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
00000000002113f8         extern function code                                   ; DATA XREF=strlen@GOT
                     __stack_chk_fail:
0000000000211400         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
0000000000211408         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
0000000000211410         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     dup2:
0000000000211418         extern function code                                   ; DATA XREF=dup2@GOT
                     strchr:
0000000000211420         extern function code                                   ; DATA XREF=strchr@GOT
                     __overflow:
0000000000211428         extern function code                                   ; DATA XREF=__overflow@GOT
                     strrchr:
0000000000211430         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
0000000000211438         extern function code                                   ; DATA XREF=lseek@GOT
                     __assert_fail:
0000000000211440         extern function code                                   ; DATA XREF=__assert_fail@GOT
                     __strtoul_internal:
0000000000211448         extern function code                                   ; DATA XREF=__strtoul_internal@GOT
                     memset:
0000000000211450         extern function code                                   ; DATA XREF=memset@GOT
                     ioctl:
0000000000211458         extern function code                                   ; DATA XREF=ioctl@GOT
                     close:
0000000000211460         extern function code                                   ; DATA XREF=close@GOT
                     __libc_start_main:
0000000000211468         extern function code
                     memcmp:
0000000000211470         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
0000000000211478         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
0000000000211480         extern function code                                   ; DATA XREF=calloc@GOT
                     strcmp:
0000000000211488         extern function code                                   ; DATA XREF=strcmp@GOT
                     __gmon_start__:
0000000000211490         extern function code
                     strtol:
0000000000211498         extern function code                                   ; DATA XREF=strtol@GOT
                     memcpy:
00000000002114a0         extern function code                                   ; DATA XREF=memcpy@GOT
                     fileno:
00000000002114a8         extern function code                                   ; DATA XREF=fileno@GOT
                     malloc:
00000000002114b0         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
00000000002114b8         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
00000000002114c0         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __freading:
00000000002114c8         extern function code                                   ; DATA XREF=__freading@GOT
                     realloc:
00000000002114d0         extern function code                                   ; DATA XREF=realloc@GOT
                     setlocale:
00000000002114d8         extern function code                                   ; DATA XREF=setlocale@GOT
                     cfgetospeed:
00000000002114e0         extern function code                                   ; DATA XREF=cfgetospeed@GOT
                     __printf_chk:
00000000002114e8         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     error:
00000000002114f0         extern function code                                   ; DATA XREF=error@GOT
                     tcgetattr:
00000000002114f8         extern function code                                   ; DATA XREF=tcgetattr@GOT
                     tcsetattr:
0000000000211500         extern function code                                   ; DATA XREF=tcsetattr@GOT
                     open:
0000000000211508         extern function code                                   ; DATA XREF=open@GOT
                     fseeko:
0000000000211510         extern function code                                   ; DATA XREF=fseeko@GOT
                     cfsetispeed:
0000000000211518         extern function code                                   ; DATA XREF=cfsetispeed@GOT
                     strtoul:
0000000000211520         extern function code                                   ; DATA XREF=strtoul@GOT
                     __cxa_atexit:
0000000000211528         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     exit:
0000000000211530         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
0000000000211538         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
0000000000211540         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
0000000000211548         extern function code
                     mbsinit:
0000000000211550         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
0000000000211558         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
0000000000211560         extern function code
                     __ctype_b_loc:
0000000000211568         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     getenv@@GLIBC_2.2.5:
0000000000211570         extern function code
                     __snprintf_chk@@GLIBC_2.3.4:
0000000000211578         extern function code
                     free@@GLIBC_2.2.5:
0000000000211580         extern function code
                     abort@@GLIBC_2.2.5:
0000000000211588         extern function code
                     __errno_location@@GLIBC_2.2.5:
0000000000211590         extern function code
                     strncmp@@GLIBC_2.2.5:
0000000000211598         extern function code
                     _ITM_deregisterTMCloneTable_2115a0:        // _ITM_deregisterTMCloneTable
00000000002115a0         extern function code
                     _exit@@GLIBC_2.2.5:
00000000002115a8         extern function code
                     __fpending@@GLIBC_2.2.5:
00000000002115b0         extern function code
                     fcntl@@GLIBC_2.2.5:
00000000002115b8         extern function code
                     cfgetispeed@@GLIBC_2.2.5:
00000000002115c0         extern function code
                     textdomain@@GLIBC_2.2.5:
00000000002115c8         extern function code
                     fclose@@GLIBC_2.2.5:
00000000002115d0         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
00000000002115d8         extern function code
                     cfsetospeed@@GLIBC_2.2.5:
00000000002115e0         extern function code
                     dcgettext@@GLIBC_2.2.5:
00000000002115e8         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
00000000002115f0         extern function code
                     strlen@@GLIBC_2.2.5:
00000000002115f8         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
0000000000211600         extern function code
                     getopt_long@@GLIBC_2.2.5:
0000000000211608         extern function code
                     mbrtowc@@GLIBC_2.2.5:
0000000000211610         extern function code
                     dup2@@GLIBC_2.2.5:
0000000000211618         extern function code
                     strchr@@GLIBC_2.2.5:
0000000000211620         extern function code
                     __overflow@@GLIBC_2.2.5:
0000000000211628         extern function code
                     strrchr@@GLIBC_2.2.5:
0000000000211630         extern function code
                     lseek@@GLIBC_2.2.5:
0000000000211638         extern function code
                     __assert_fail@@GLIBC_2.2.5:
0000000000211640         extern function code
                     __strtoul_internal@@GLIBC_2.2.5:
0000000000211648         extern function code
                     memset@@GLIBC_2.2.5:
0000000000211650         extern function code
                     ioctl@@GLIBC_2.2.5:
0000000000211658         extern function code
                     close@@GLIBC_2.2.5:
0000000000211660         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
0000000000211668         extern function code
                     memcmp@@GLIBC_2.2.5:
0000000000211670         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
0000000000211678         extern function code
                     calloc@@GLIBC_2.2.5:
0000000000211680         extern function code
                     strcmp@@GLIBC_2.2.5:
0000000000211688         extern function code
                     __gmon_start___211690:        // __gmon_start__
0000000000211690         extern function code
                     strtol@@GLIBC_2.2.5:
0000000000211698         extern function code
                     memcpy@@GLIBC_2.14:
00000000002116a0         extern function code
                     fileno@@GLIBC_2.2.5:
00000000002116a8         extern function code
                     malloc@@GLIBC_2.2.5:
00000000002116b0         extern function code
                     fflush@@GLIBC_2.2.5:
00000000002116b8         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
00000000002116c0         extern function code
                     __freading@@GLIBC_2.2.5:
00000000002116c8         extern function code
                     realloc@@GLIBC_2.2.5:
00000000002116d0         extern function code
                     setlocale@@GLIBC_2.2.5:
00000000002116d8         extern function code
                     cfgetospeed@@GLIBC_2.2.5:
00000000002116e0         extern function code
                     __printf_chk@@GLIBC_2.3.4:
00000000002116e8         extern function code
                     error@@GLIBC_2.2.5:
00000000002116f0         extern function code
                     tcgetattr@@GLIBC_2.2.5:
00000000002116f8         extern function code
                     tcsetattr@@GLIBC_2.2.5:
0000000000211700         extern function code
                     open@@GLIBC_2.2.5:
0000000000211708         extern function code
                     fseeko@@GLIBC_2.2.5:
0000000000211710         extern function code
                     cfsetispeed@@GLIBC_2.2.5:
0000000000211718         extern function code
                     strtoul@@GLIBC_2.2.5:
0000000000211720         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
0000000000211728         extern function code
                     exit@@GLIBC_2.2.5:
0000000000211730         extern function code
                     fwrite@@GLIBC_2.2.5:
0000000000211738         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
0000000000211740         extern function code
                     _ITM_registerTMCloneTable_211748:        // _ITM_registerTMCloneTable
0000000000211748         extern function code
                     mbsinit@@GLIBC_2.2.5:
0000000000211750         extern function code
                     iswprint@@GLIBC_2.2.5:
0000000000211758         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
0000000000211760         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
0000000000211768         extern function code
